# coding: utf-8
# Test for global_2050_model
require 'minitest/autorun'
require_relative '../lib/global_2050_model'

class TestGlobal2050Model < Minitest::Unit::TestCase
  def self.runnable_methods
    puts 'Overriding minitest to run tests in a defined order'
    methods = methods_matching(/^test_/)
  end
  def worksheet; @worksheet ||= init_spreadsheet; end
  def init_spreadsheet; Global2050Model.new end
  def test_user_inputs_e7; assert_in_epsilon(2.0, worksheet.user_inputs_e7, 0.002); end
  def test_user_inputs_e8; assert_in_epsilon(2.0, worksheet.user_inputs_e8, 0.002); end
  def test_user_inputs_e9; assert_in_epsilon(2.7, worksheet.user_inputs_e9, 0.002); end
  def test_user_inputs_e10; assert_in_epsilon(1.5, worksheet.user_inputs_e10, 0.002); end
  def test_user_inputs_e11; assert_in_epsilon(2.4, worksheet.user_inputs_e11, 0.002); end
  def test_user_inputs_e12; assert_in_epsilon(1.4, worksheet.user_inputs_e12, 0.002); end
  def test_user_inputs_e13; assert_in_epsilon(2.0, worksheet.user_inputs_e13, 0.002); end
  def test_user_inputs_e14; assert_in_epsilon(1.4, worksheet.user_inputs_e14, 0.002); end
  def test_user_inputs_e15; assert_in_delta(1.0, worksheet.user_inputs_e15, 0.002); end
  def test_user_inputs_e16; assert_in_epsilon(3.0, worksheet.user_inputs_e16, 0.002); end
  def test_user_inputs_e17; assert_in_epsilon(1.1, worksheet.user_inputs_e17, 0.002); end
  def test_user_inputs_e18; assert_in_epsilon(1.4, worksheet.user_inputs_e18, 0.002); end
  def test_user_inputs_e19; assert_in_delta(1.0, worksheet.user_inputs_e19, 0.002); end
  def test_user_inputs_e20; assert_in_delta(1.0, worksheet.user_inputs_e20, 0.002); end
  def test_user_inputs_e21; assert_in_delta(1.0, worksheet.user_inputs_e21, 0.002); end
  def test_user_inputs_e22; assert_in_delta(1.0, worksheet.user_inputs_e22, 0.002); end
  def test_user_inputs_e23; assert_in_epsilon(1.3, worksheet.user_inputs_e23, 0.002); end
  def test_user_inputs_e24; assert_in_epsilon(2.0, worksheet.user_inputs_e24, 0.002); end
  def test_user_inputs_e25; assert_in_delta(1.0, worksheet.user_inputs_e25, 0.002); end
  def test_user_inputs_e26; assert_in_delta(1.0, worksheet.user_inputs_e26, 0.002); end
  def test_user_inputs_e27; assert_in_epsilon(1.7, worksheet.user_inputs_e27, 0.002); end
  def test_user_inputs_e28; assert_in_delta(1.0, worksheet.user_inputs_e28, 0.002); end
  def test_user_inputs_e29; assert_in_epsilon(2.3, worksheet.user_inputs_e29, 0.002); end
  def test_user_inputs_e30; assert_in_epsilon(3.0, worksheet.user_inputs_e30, 0.002); end
  def test_user_inputs_e31; assert_in_delta(1.0, worksheet.user_inputs_e31, 0.002); end
  def test_user_inputs_e32; assert_in_epsilon(1.7, worksheet.user_inputs_e32, 0.002); end
  def test_user_inputs_e33; assert_in_epsilon(1.5, worksheet.user_inputs_e33, 0.002); end
  def test_user_inputs_e34; assert_in_epsilon(1.9, worksheet.user_inputs_e34, 0.002); end
  def test_user_inputs_e35; assert_in_epsilon(1.3, worksheet.user_inputs_e35, 0.002); end
  def test_user_inputs_e36; assert_in_epsilon(1.2, worksheet.user_inputs_e36, 0.002); end
  def test_user_inputs_e37; assert_in_epsilon(1.4, worksheet.user_inputs_e37, 0.002); end
  def test_user_inputs_e38; assert_in_epsilon(1.5, worksheet.user_inputs_e38, 0.002); end
  def test_user_inputs_e39; assert_in_epsilon(2.0, worksheet.user_inputs_e39, 0.002); end
  def test_user_inputs_e40; assert_in_epsilon(2.0, worksheet.user_inputs_e40, 0.002); end
  def test_user_inputs_e41; assert_in_epsilon(2.0, worksheet.user_inputs_e41, 0.002); end
  def test_user_inputs_e42; assert_in_epsilon(1.7, worksheet.user_inputs_e42, 0.002); end
  def test_user_inputs_e43; assert_in_epsilon(2.5, worksheet.user_inputs_e43, 0.002); end
  def test_user_inputs_e44; assert_in_epsilon(2.0, worksheet.user_inputs_e44, 0.002); end
  def test_user_inputs_e45; assert_in_epsilon(3.0, worksheet.user_inputs_e45, 0.002); end
  def test_user_inputs_e46; assert_in_epsilon(3.0, worksheet.user_inputs_e46, 0.002); end
  def test_user_inputs_e47; assert_in_epsilon(1.5, worksheet.user_inputs_e47, 0.002); end
  def test_user_inputs_e48; assert_in_epsilon(2.0, worksheet.user_inputs_e48, 0.002); end
  def test_user_inputs_e49; assert_in_delta(1.0, worksheet.user_inputs_e49, 0.002); end
  def test_user_inputs_e50; assert_in_delta(1.0, worksheet.user_inputs_e50, 0.002); end
  def test_user_inputs_e51; assert_in_delta(1.0, worksheet.user_inputs_e51, 0.002); end
  def test_user_inputs_e52; assert_in_delta(1.0, worksheet.user_inputs_e52, 0.002); end
  def test_user_inputs_e53; assert_in_delta(1.0, worksheet.user_inputs_e53, 0.002); end
  def test_user_inputs_e54; assert_in_epsilon(1.5, worksheet.user_inputs_e54, 0.002); end
  def test_user_inputs_e55; assert_in_epsilon(1.5, worksheet.user_inputs_e55, 0.002); end
  def test_user_inputs_e56; assert_in_epsilon(2.0, worksheet.user_inputs_e56, 0.002); end
  def test_user_inputs_e57; assert_equal("B", worksheet.user_inputs_e57); end
  def test_user_inputs_e58; assert_equal("US", worksheet.user_inputs_e58); end
  def test_user_inputs_e59; assert_equal("Point", worksheet.user_inputs_e59); end
  def test_user_inputs_e60; assert_equal("Point", worksheet.user_inputs_e60); end
  def test_user_inputs_e61; assert_equal("Point", worksheet.user_inputs_e61); end
  def test_user_inputs_e62; assert_equal("Point", worksheet.user_inputs_e62); end
  def test_user_inputs_e63; assert_equal("Point", worksheet.user_inputs_e63); end
  def test_user_inputs_e64; assert_equal("Point", worksheet.user_inputs_e64); end
  def test_user_inputs_e65; assert_equal("Point", worksheet.user_inputs_e65); end
  def test_lever_graphs_c3170; assert_equal("1975", worksheet.lever_graphs_c3170); end
  def test_lever_graphs_d3170; assert_equal("1980", worksheet.lever_graphs_d3170); end
  def test_lever_graphs_e3170; assert_equal("1985", worksheet.lever_graphs_e3170); end
  def test_lever_graphs_f3170; assert_equal("1990", worksheet.lever_graphs_f3170); end
  def test_lever_graphs_g3170; assert_equal("1995", worksheet.lever_graphs_g3170); end
  def test_lever_graphs_h3170; assert_equal("2000", worksheet.lever_graphs_h3170); end
  def test_lever_graphs_i3170; assert_equal("2005", worksheet.lever_graphs_i3170); end
  def test_lever_graphs_j3170; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3170, 0.002); end
  def test_lever_graphs_k3170; assert_equal("2011", worksheet.lever_graphs_k3170); end
  def test_lever_graphs_l3170; assert_equal("2015", worksheet.lever_graphs_l3170); end
  def test_lever_graphs_m3170; assert_equal("2020", worksheet.lever_graphs_m3170); end
  def test_lever_graphs_n3170; assert_equal("2025", worksheet.lever_graphs_n3170); end
  def test_lever_graphs_o3170; assert_equal("2030", worksheet.lever_graphs_o3170); end
  def test_lever_graphs_p3170; assert_equal("2035", worksheet.lever_graphs_p3170); end
  def test_lever_graphs_q3170; assert_equal("2040", worksheet.lever_graphs_q3170); end
  def test_lever_graphs_r3170; assert_equal("2045", worksheet.lever_graphs_r3170); end
  def test_lever_graphs_s3170; assert_equal("2050", worksheet.lever_graphs_s3170); end
  def test_lever_graphs_b3171; assert_equal("Historic data", worksheet.lever_graphs_b3171); end
  def test_lever_graphs_b3172; assert_equal("Developed Countries", worksheet.lever_graphs_b3172); end
  def test_lever_graphs_k3172; assert_in_delta(0.124, worksheet.lever_graphs_k3172, 0.002); end
  def test_lever_graphs_b3173; assert_equal("Developing Countries", worksheet.lever_graphs_b3173); end
  def test_lever_graphs_k3173; assert_in_delta(0.006, worksheet.lever_graphs_k3173, 0.002); end
  def test_lever_graphs_b3174; assert_in_delta(1.0, worksheet.lever_graphs_b3174, 0.002); end
  def test_lever_graphs_k3174; assert_in_delta(0.06, worksheet.lever_graphs_k3174, 0.002); end
  def test_lever_graphs_l3174; assert_in_delta(0.06, worksheet.lever_graphs_l3174, 0.002); end
  def test_lever_graphs_m3174; assert_in_delta(0.05142857142857143, worksheet.lever_graphs_m3174, 0.002); end
  def test_lever_graphs_n3174; assert_in_delta(0.04285714285714286, worksheet.lever_graphs_n3174, 0.002); end
  def test_lever_graphs_o3174; assert_in_delta(0.03428571428571429, worksheet.lever_graphs_o3174, 0.002); end
  def test_lever_graphs_p3174; assert_in_delta(0.025714285714285717, worksheet.lever_graphs_p3174, 0.002); end
  def test_lever_graphs_q3174; assert_in_delta(0.01714285714285714, worksheet.lever_graphs_q3174, 0.002); end
  def test_lever_graphs_r3174; assert_in_delta(0.008571428571428577, worksheet.lever_graphs_r3174, 0.002); end
  def test_lever_graphs_s3174; assert_in_delta(0.0, (worksheet.lever_graphs_s3174||0), 0.002); end
  def test_lever_graphs_b3175; assert_in_epsilon(2.0, worksheet.lever_graphs_b3175, 0.002); end
  def test_lever_graphs_k3175; assert_in_delta(0.06, worksheet.lever_graphs_k3175, 0.002); end
  def test_lever_graphs_l3175; assert_in_delta(0.06, worksheet.lever_graphs_l3175, 0.002); end
  def test_lever_graphs_m3175; assert_in_delta(0.06, worksheet.lever_graphs_m3175, 0.002); end
  def test_lever_graphs_n3175; assert_in_delta(0.06, worksheet.lever_graphs_n3175, 0.002); end
  def test_lever_graphs_o3175; assert_in_delta(0.06, worksheet.lever_graphs_o3175, 0.002); end
  def test_lever_graphs_p3175; assert_in_delta(0.06, worksheet.lever_graphs_p3175, 0.002); end
  def test_lever_graphs_q3175; assert_in_delta(0.06, worksheet.lever_graphs_q3175, 0.002); end
  def test_lever_graphs_r3175; assert_in_delta(0.06, worksheet.lever_graphs_r3175, 0.002); end
  def test_lever_graphs_s3175; assert_in_delta(0.06, worksheet.lever_graphs_s3175, 0.002); end
  def test_lever_graphs_b3176; assert_in_epsilon(3.0, worksheet.lever_graphs_b3176, 0.002); end
  def test_lever_graphs_k3176; assert_in_delta(0.06, worksheet.lever_graphs_k3176, 0.002); end
  def test_lever_graphs_l3176; assert_in_delta(0.06, worksheet.lever_graphs_l3176, 0.002); end
  def test_lever_graphs_m3176; assert_in_delta(0.07285714285714286, worksheet.lever_graphs_m3176, 0.002); end
  def test_lever_graphs_n3176; assert_in_delta(0.08571428571428572, worksheet.lever_graphs_n3176, 0.002); end
  def test_lever_graphs_o3176; assert_in_delta(0.09857142857142856, worksheet.lever_graphs_o3176, 0.002); end
  def test_lever_graphs_p3176; assert_in_delta(0.11142857142857142, worksheet.lever_graphs_p3176, 0.002); end
  def test_lever_graphs_q3176; assert_in_delta(0.12428571428571428, worksheet.lever_graphs_q3176, 0.002); end
  def test_lever_graphs_r3176; assert_in_delta(0.13714285714285712, worksheet.lever_graphs_r3176, 0.002); end
  def test_lever_graphs_s3176; assert_in_delta(0.15, worksheet.lever_graphs_s3176, 0.002); end
  def test_lever_graphs_b3177; assert_in_epsilon(4.0, worksheet.lever_graphs_b3177, 0.002); end
  def test_lever_graphs_k3177; assert_in_delta(0.06, worksheet.lever_graphs_k3177, 0.002); end
  def test_lever_graphs_l3177; assert_in_delta(0.06, worksheet.lever_graphs_l3177, 0.002); end
  def test_lever_graphs_m3177; assert_in_delta(0.09428571428571428, worksheet.lever_graphs_m3177, 0.002); end
  def test_lever_graphs_n3177; assert_in_delta(0.12857142857142856, worksheet.lever_graphs_n3177, 0.002); end
  def test_lever_graphs_o3177; assert_in_delta(0.16285714285714284, worksheet.lever_graphs_o3177, 0.002); end
  def test_lever_graphs_p3177; assert_in_delta(0.19714285714285712, worksheet.lever_graphs_p3177, 0.002); end
  def test_lever_graphs_q3177; assert_in_delta(0.23142857142857143, worksheet.lever_graphs_q3177, 0.002); end
  def test_lever_graphs_r3177; assert_in_delta(0.2657142857142857, worksheet.lever_graphs_r3177, 0.002); end
  def test_lever_graphs_s3177; assert_in_delta(0.3, worksheet.lever_graphs_s3177, 0.002); end
  def test_lever_graphs_c3182; assert_equal("1975", worksheet.lever_graphs_c3182); end
  def test_lever_graphs_d3182; assert_equal("1980", worksheet.lever_graphs_d3182); end
  def test_lever_graphs_e3182; assert_equal("1985", worksheet.lever_graphs_e3182); end
  def test_lever_graphs_f3182; assert_equal("1990", worksheet.lever_graphs_f3182); end
  def test_lever_graphs_g3182; assert_equal("1995", worksheet.lever_graphs_g3182); end
  def test_lever_graphs_h3182; assert_equal("2000", worksheet.lever_graphs_h3182); end
  def test_lever_graphs_i3182; assert_equal("2005", worksheet.lever_graphs_i3182); end
  def test_lever_graphs_j3182; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3182, 0.002); end
  def test_lever_graphs_k3182; assert_equal("2011", worksheet.lever_graphs_k3182); end
  def test_lever_graphs_l3182; assert_equal("2015", worksheet.lever_graphs_l3182); end
  def test_lever_graphs_m3182; assert_equal("2020", worksheet.lever_graphs_m3182); end
  def test_lever_graphs_n3182; assert_equal("2025", worksheet.lever_graphs_n3182); end
  def test_lever_graphs_o3182; assert_equal("2030", worksheet.lever_graphs_o3182); end
  def test_lever_graphs_p3182; assert_equal("2035", worksheet.lever_graphs_p3182); end
  def test_lever_graphs_q3182; assert_equal("2040", worksheet.lever_graphs_q3182); end
  def test_lever_graphs_r3182; assert_equal("2045", worksheet.lever_graphs_r3182); end
  def test_lever_graphs_s3182; assert_equal("2050", worksheet.lever_graphs_s3182); end
  def test_lever_graphs_b3183; assert_equal("Historic data", worksheet.lever_graphs_b3183); end
  def test_lever_graphs_b3184; assert_equal("Developed Countries", worksheet.lever_graphs_b3184); end
  def test_lever_graphs_k3184; assert_in_delta(0.0, (worksheet.lever_graphs_k3184||0), 0.002); end
  def test_lever_graphs_b3185; assert_equal("Developing Countries", worksheet.lever_graphs_b3185); end
  def test_lever_graphs_k3185; assert_in_delta(0.012, worksheet.lever_graphs_k3185, 0.002); end
  def test_lever_graphs_b3186; assert_in_delta(1.0, worksheet.lever_graphs_b3186, 0.002); end
  def test_lever_graphs_k3186; assert_in_delta(0.01, worksheet.lever_graphs_k3186, 0.002); end
  def test_lever_graphs_l3186; assert_in_delta(0.01, worksheet.lever_graphs_l3186, 0.002); end
  def test_lever_graphs_m3186; assert_in_delta(0.008571428571428572, worksheet.lever_graphs_m3186, 0.002); end
  def test_lever_graphs_n3186; assert_in_delta(0.0071428571428571435, worksheet.lever_graphs_n3186, 0.002); end
  def test_lever_graphs_o3186; assert_in_delta(0.005714285714285714, worksheet.lever_graphs_o3186, 0.002); end
  def test_lever_graphs_p3186; assert_in_delta(0.004285714285714286, worksheet.lever_graphs_p3186, 0.002); end
  def test_lever_graphs_q3186; assert_in_delta(0.0028571428571428567, worksheet.lever_graphs_q3186, 0.002); end
  def test_lever_graphs_r3186; assert_in_delta(0.0014285714285714284, worksheet.lever_graphs_r3186, 0.002); end
  def test_lever_graphs_s3186; assert_in_delta(0.0, (worksheet.lever_graphs_s3186||0), 0.002); end
  def test_lever_graphs_b3187; assert_in_epsilon(2.0, worksheet.lever_graphs_b3187, 0.002); end
  def test_lever_graphs_k3187; assert_in_delta(0.01, worksheet.lever_graphs_k3187, 0.002); end
  def test_lever_graphs_l3187; assert_in_delta(0.01, worksheet.lever_graphs_l3187, 0.002); end
  def test_lever_graphs_m3187; assert_in_delta(0.01, worksheet.lever_graphs_m3187, 0.002); end
  def test_lever_graphs_n3187; assert_in_delta(0.01, worksheet.lever_graphs_n3187, 0.002); end
  def test_lever_graphs_o3187; assert_in_delta(0.01, worksheet.lever_graphs_o3187, 0.002); end
  def test_lever_graphs_p3187; assert_in_delta(0.01, worksheet.lever_graphs_p3187, 0.002); end
  def test_lever_graphs_q3187; assert_in_delta(0.01, worksheet.lever_graphs_q3187, 0.002); end
  def test_lever_graphs_r3187; assert_in_delta(0.01, worksheet.lever_graphs_r3187, 0.002); end
  def test_lever_graphs_s3187; assert_in_delta(0.01, worksheet.lever_graphs_s3187, 0.002); end
  def test_lever_graphs_b3188; assert_in_epsilon(3.0, worksheet.lever_graphs_b3188, 0.002); end
  def test_lever_graphs_k3188; assert_in_delta(0.01, worksheet.lever_graphs_k3188, 0.002); end
  def test_lever_graphs_l3188; assert_in_delta(0.01, worksheet.lever_graphs_l3188, 0.002); end
  def test_lever_graphs_m3188; assert_in_delta(0.015714285714285715, worksheet.lever_graphs_m3188, 0.002); end
  def test_lever_graphs_n3188; assert_in_delta(0.02142857142857143, worksheet.lever_graphs_n3188, 0.002); end
  def test_lever_graphs_o3188; assert_in_delta(0.027142857142857142, worksheet.lever_graphs_o3188, 0.002); end
  def test_lever_graphs_p3188; assert_in_delta(0.032857142857142856, worksheet.lever_graphs_p3188, 0.002); end
  def test_lever_graphs_q3188; assert_in_delta(0.038571428571428576, worksheet.lever_graphs_q3188, 0.002); end
  def test_lever_graphs_r3188; assert_in_delta(0.04428571428571429, worksheet.lever_graphs_r3188, 0.002); end
  def test_lever_graphs_s3188; assert_in_delta(0.05, worksheet.lever_graphs_s3188, 0.002); end
  def test_lever_graphs_b3189; assert_in_epsilon(4.0, worksheet.lever_graphs_b3189, 0.002); end
  def test_lever_graphs_k3189; assert_in_delta(0.01, worksheet.lever_graphs_k3189, 0.002); end
  def test_lever_graphs_l3189; assert_in_delta(0.01, worksheet.lever_graphs_l3189, 0.002); end
  def test_lever_graphs_m3189; assert_in_delta(0.02285714285714286, worksheet.lever_graphs_m3189, 0.002); end
  def test_lever_graphs_n3189; assert_in_delta(0.03571428571428572, worksheet.lever_graphs_n3189, 0.002); end
  def test_lever_graphs_o3189; assert_in_delta(0.04857142857142858, worksheet.lever_graphs_o3189, 0.002); end
  def test_lever_graphs_p3189; assert_in_delta(0.06142857142857144, worksheet.lever_graphs_p3189, 0.002); end
  def test_lever_graphs_q3189; assert_in_delta(0.07428571428571429, worksheet.lever_graphs_q3189, 0.002); end
  def test_lever_graphs_r3189; assert_in_delta(0.08714285714285715, worksheet.lever_graphs_r3189, 0.002); end
  def test_lever_graphs_s3189; assert_in_delta(0.1, worksheet.lever_graphs_s3189, 0.002); end
  def test_lever_graphs_c3253; assert_equal("1975", worksheet.lever_graphs_c3253); end
  def test_lever_graphs_d3253; assert_equal("1980", worksheet.lever_graphs_d3253); end
  def test_lever_graphs_e3253; assert_equal("1985", worksheet.lever_graphs_e3253); end
  def test_lever_graphs_f3253; assert_equal("1990", worksheet.lever_graphs_f3253); end
  def test_lever_graphs_g3253; assert_equal("1995", worksheet.lever_graphs_g3253); end
  def test_lever_graphs_h3253; assert_equal("2000", worksheet.lever_graphs_h3253); end
  def test_lever_graphs_i3253; assert_equal("2005", worksheet.lever_graphs_i3253); end
  def test_lever_graphs_j3253; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3253, 0.002); end
  def test_lever_graphs_k3253; assert_equal("2011", worksheet.lever_graphs_k3253); end
  def test_lever_graphs_l3253; assert_equal("2015", worksheet.lever_graphs_l3253); end
  def test_lever_graphs_m3253; assert_equal("2020", worksheet.lever_graphs_m3253); end
  def test_lever_graphs_n3253; assert_equal("2025", worksheet.lever_graphs_n3253); end
  def test_lever_graphs_o3253; assert_equal("2030", worksheet.lever_graphs_o3253); end
  def test_lever_graphs_p3253; assert_equal("2035", worksheet.lever_graphs_p3253); end
  def test_lever_graphs_q3253; assert_equal("2040", worksheet.lever_graphs_q3253); end
  def test_lever_graphs_r3253; assert_equal("2045", worksheet.lever_graphs_r3253); end
  def test_lever_graphs_s3253; assert_equal("2050", worksheet.lever_graphs_s3253); end
  def test_lever_graphs_b3254; assert_equal("Historic data", worksheet.lever_graphs_b3254); end
  def test_lever_graphs_b3255; assert_in_delta(1.0, worksheet.lever_graphs_b3255, 0.002); end
  def test_lever_graphs_k3255; assert_in_delta(0.6347500417422869, worksheet.lever_graphs_k3255, 0.002); end
  def test_lever_graphs_l3255; assert_in_delta(0.6601400434119784, worksheet.lever_graphs_l3255, 0.002); end
  def test_lever_graphs_m3255; assert_in_delta(0.6655807580554837, worksheet.lever_graphs_m3255, 0.002); end
  def test_lever_graphs_n3255; assert_in_delta(0.671021472698989, worksheet.lever_graphs_n3255, 0.002); end
  def test_lever_graphs_o3255; assert_in_delta(0.6764621873424942, worksheet.lever_graphs_o3255, 0.002); end
  def test_lever_graphs_p3255; assert_in_delta(0.6819029019859997, worksheet.lever_graphs_p3255, 0.002); end
  def test_lever_graphs_q3255; assert_in_delta(0.687343616629505, worksheet.lever_graphs_q3255, 0.002); end
  def test_lever_graphs_r3255; assert_in_delta(0.6927843312730102, worksheet.lever_graphs_r3255, 0.002); end
  def test_lever_graphs_s3255; assert_in_delta(0.6982250459165157, worksheet.lever_graphs_s3255, 0.002); end
  def test_lever_graphs_b3256; assert_in_epsilon(2.0, worksheet.lever_graphs_b3256, 0.002); end
  def test_lever_graphs_k3256; assert_in_delta(0.6347500417422869, worksheet.lever_graphs_k3256, 0.002); end
  def test_lever_graphs_l3256; assert_in_delta(0.6601400434119784, worksheet.lever_graphs_l3256, 0.002); end
  def test_lever_graphs_m3256; assert_in_delta(0.6837164735338348, worksheet.lever_graphs_m3256, 0.002); end
  def test_lever_graphs_n3256; assert_in_delta(0.7072929036556911, worksheet.lever_graphs_n3256, 0.002); end
  def test_lever_graphs_o3256; assert_in_delta(0.7308693337775475, worksheet.lever_graphs_o3256, 0.002); end
  def test_lever_graphs_p3256; assert_in_delta(0.7544457638994039, worksheet.lever_graphs_p3256, 0.002); end
  def test_lever_graphs_q3256; assert_in_delta(0.7780221940212603, worksheet.lever_graphs_q3256, 0.002); end
  def test_lever_graphs_r3256; assert_in_delta(0.8015986241431166, worksheet.lever_graphs_r3256, 0.002); end
  def test_lever_graphs_s3256; assert_in_delta(0.825175054264973, worksheet.lever_graphs_s3256, 0.002); end
  def test_lever_graphs_b3257; assert_in_epsilon(3.0, worksheet.lever_graphs_b3257, 0.002); end
  def test_lever_graphs_k3257; assert_in_delta(0.6347500417422869, worksheet.lever_graphs_k3257, 0.002); end
  def test_lever_graphs_l3257; assert_in_delta(0.6601400434119784, worksheet.lever_graphs_l3257, 0.002); end
  def test_lever_graphs_m3257; assert_in_delta(0.7018521890121857, worksheet.lever_graphs_m3257, 0.002); end
  def test_lever_graphs_n3257; assert_in_delta(0.7435643346123932, worksheet.lever_graphs_n3257, 0.002); end
  def test_lever_graphs_o3257; assert_in_delta(0.7852764802126007, worksheet.lever_graphs_o3257, 0.002); end
  def test_lever_graphs_p3257; assert_in_delta(0.8269886258128081, worksheet.lever_graphs_p3257, 0.002); end
  def test_lever_graphs_q3257; assert_in_delta(0.8687007714130155, worksheet.lever_graphs_q3257, 0.002); end
  def test_lever_graphs_r3257; assert_in_delta(0.9104129170132228, worksheet.lever_graphs_r3257, 0.002); end
  def test_lever_graphs_s3257; assert_in_delta(0.9521250626134303, worksheet.lever_graphs_s3257, 0.002); end
  def test_lever_graphs_b3258; assert_in_epsilon(4.0, worksheet.lever_graphs_b3258, 0.002); end
  def test_lever_graphs_k3258; assert_in_delta(0.6347500417422869, worksheet.lever_graphs_k3258, 0.002); end
  def test_lever_graphs_l3258; assert_in_delta(0.6601400434119784, worksheet.lever_graphs_l3258, 0.002); end
  def test_lever_graphs_m3258; assert_in_delta(0.7290557622297124, worksheet.lever_graphs_m3258, 0.002); end
  def test_lever_graphs_n3258; assert_in_delta(0.7979714810474463, worksheet.lever_graphs_n3258, 0.002); end
  def test_lever_graphs_o3258; assert_in_delta(0.8668871998651804, worksheet.lever_graphs_o3258, 0.002); end
  def test_lever_graphs_p3258; assert_in_delta(0.9358029186829143, worksheet.lever_graphs_p3258, 0.002); end
  def test_lever_graphs_q3258; assert_in_epsilon(1.0047186375006485, worksheet.lever_graphs_q3258, 0.002); end
  def test_lever_graphs_r3258; assert_in_epsilon(1.0736343563183823, worksheet.lever_graphs_r3258, 0.002); end
  def test_lever_graphs_s3258; assert_in_epsilon(1.1425500751361164, worksheet.lever_graphs_s3258, 0.002); end
  def test_lever_graphs_c3274; assert_equal("1975", worksheet.lever_graphs_c3274); end
  def test_lever_graphs_d3274; assert_equal("1980", worksheet.lever_graphs_d3274); end
  def test_lever_graphs_e3274; assert_equal("1985", worksheet.lever_graphs_e3274); end
  def test_lever_graphs_f3274; assert_equal("1990", worksheet.lever_graphs_f3274); end
  def test_lever_graphs_g3274; assert_equal("1995", worksheet.lever_graphs_g3274); end
  def test_lever_graphs_h3274; assert_equal("2000", worksheet.lever_graphs_h3274); end
  def test_lever_graphs_i3274; assert_equal("2005", worksheet.lever_graphs_i3274); end
  def test_lever_graphs_j3274; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3274, 0.002); end
  def test_lever_graphs_k3274; assert_equal("2011", worksheet.lever_graphs_k3274); end
  def test_lever_graphs_l3274; assert_equal("2015", worksheet.lever_graphs_l3274); end
  def test_lever_graphs_m3274; assert_equal("2020", worksheet.lever_graphs_m3274); end
  def test_lever_graphs_n3274; assert_equal("2025", worksheet.lever_graphs_n3274); end
  def test_lever_graphs_o3274; assert_equal("2030", worksheet.lever_graphs_o3274); end
  def test_lever_graphs_p3274; assert_equal("2035", worksheet.lever_graphs_p3274); end
  def test_lever_graphs_q3274; assert_equal("2040", worksheet.lever_graphs_q3274); end
  def test_lever_graphs_r3274; assert_equal("2045", worksheet.lever_graphs_r3274); end
  def test_lever_graphs_s3274; assert_equal("2050", worksheet.lever_graphs_s3274); end
  def test_lever_graphs_b3275; assert_equal("Historic data", worksheet.lever_graphs_b3275); end
  def test_lever_graphs_b3276; assert_in_delta(1.0, worksheet.lever_graphs_b3276, 0.002); end
  def test_lever_graphs_k3276; assert_in_epsilon(3.0663969495851338, worksheet.lever_graphs_k3276, 0.002); end
  def test_lever_graphs_l3276; assert_in_epsilon(3.1890528275685393, worksheet.lever_graphs_l3276, 0.002); end
  def test_lever_graphs_m3276; assert_in_epsilon(3.215336229993554, worksheet.lever_graphs_m3276, 0.002); end
  def test_lever_graphs_n3276; assert_in_epsilon(3.24161963241857, worksheet.lever_graphs_n3276, 0.002); end
  def test_lever_graphs_o3276; assert_in_epsilon(3.267903034843585, worksheet.lever_graphs_o3276, 0.002); end
  def test_lever_graphs_p3276; assert_in_epsilon(3.2941864372686007, worksheet.lever_graphs_p3276, 0.002); end
  def test_lever_graphs_q3276; assert_in_epsilon(3.3204698396936165, worksheet.lever_graphs_q3276, 0.002); end
  def test_lever_graphs_r3276; assert_in_epsilon(3.3467532421186315, worksheet.lever_graphs_r3276, 0.002); end
  def test_lever_graphs_s3276; assert_in_epsilon(3.3730366445436473, worksheet.lever_graphs_s3276, 0.002); end
  def test_lever_graphs_b3277; assert_in_epsilon(2.0, worksheet.lever_graphs_b3277, 0.002); end
  def test_lever_graphs_k3277; assert_in_epsilon(3.0663969495851338, worksheet.lever_graphs_k3277, 0.002); end
  def test_lever_graphs_l3277; assert_in_epsilon(3.1890528275685393, worksheet.lever_graphs_l3277, 0.002); end
  def test_lever_graphs_m3277; assert_in_epsilon(3.302947571410273, worksheet.lever_graphs_m3277, 0.002); end
  def test_lever_graphs_n3277; assert_in_epsilon(3.416842315252006, worksheet.lever_graphs_n3277, 0.002); end
  def test_lever_graphs_o3277; assert_in_epsilon(3.53073705909374, worksheet.lever_graphs_o3277, 0.002); end
  def test_lever_graphs_p3277; assert_in_epsilon(3.644631802935473, worksheet.lever_graphs_p3277, 0.002); end
  def test_lever_graphs_q3277; assert_in_epsilon(3.758526546777207, worksheet.lever_graphs_q3277, 0.002); end
  def test_lever_graphs_r3277; assert_in_epsilon(3.8724212906189406, worksheet.lever_graphs_r3277, 0.002); end
  def test_lever_graphs_s3277; assert_in_epsilon(3.986316034460674, worksheet.lever_graphs_s3277, 0.002); end
  def test_lever_graphs_b3278; assert_in_epsilon(3.0, worksheet.lever_graphs_b3278, 0.002); end
  def test_lever_graphs_k3278; assert_in_epsilon(3.0663969495851338, worksheet.lever_graphs_k3278, 0.002); end
  def test_lever_graphs_l3278; assert_in_epsilon(3.1890528275685393, worksheet.lever_graphs_l3278, 0.002); end
  def test_lever_graphs_m3278; assert_in_epsilon(3.3905589128269904, worksheet.lever_graphs_m3278, 0.002); end
  def test_lever_graphs_n3278; assert_in_epsilon(3.5920649980854424, worksheet.lever_graphs_n3278, 0.002); end
  def test_lever_graphs_o3278; assert_in_epsilon(3.793571083343894, worksheet.lever_graphs_o3278, 0.002); end
  def test_lever_graphs_p3278; assert_in_epsilon(3.995077168602346, worksheet.lever_graphs_p3278, 0.002); end
  def test_lever_graphs_q3278; assert_in_epsilon(4.196583253860798, worksheet.lever_graphs_q3278, 0.002); end
  def test_lever_graphs_r3278; assert_in_epsilon(4.398089339119249, worksheet.lever_graphs_r3278, 0.002); end
  def test_lever_graphs_s3278; assert_in_epsilon(4.599595424377701, worksheet.lever_graphs_s3278, 0.002); end
  def test_lever_graphs_b3279; assert_in_epsilon(4.0, worksheet.lever_graphs_b3279, 0.002); end
  def test_lever_graphs_k3279; assert_in_epsilon(3.0663969495851338, worksheet.lever_graphs_k3279, 0.002); end
  def test_lever_graphs_l3279; assert_in_epsilon(3.1890528275685393, worksheet.lever_graphs_l3279, 0.002); end
  def test_lever_graphs_m3279; assert_in_epsilon(3.521975924952068, worksheet.lever_graphs_m3279, 0.002); end
  def test_lever_graphs_n3279; assert_in_epsilon(3.8548990223355966, worksheet.lever_graphs_n3279, 0.002); end
  def test_lever_graphs_o3279; assert_in_epsilon(4.187822119719125, worksheet.lever_graphs_o3279, 0.002); end
  def test_lever_graphs_p3279; assert_in_epsilon(4.520745217102654, worksheet.lever_graphs_p3279, 0.002); end
  def test_lever_graphs_q3279; assert_in_epsilon(4.853668314486184, worksheet.lever_graphs_q3279, 0.002); end
  def test_lever_graphs_r3279; assert_in_epsilon(5.186591411869712, worksheet.lever_graphs_r3279, 0.002); end
  def test_lever_graphs_s3279; assert_in_epsilon(5.5195145092532405, worksheet.lever_graphs_s3279, 0.002); end
  def test_lever_graphs_c3243; assert_equal("1975", worksheet.lever_graphs_c3243); end
  def test_lever_graphs_d3243; assert_equal("1980", worksheet.lever_graphs_d3243); end
  def test_lever_graphs_e3243; assert_equal("1985", worksheet.lever_graphs_e3243); end
  def test_lever_graphs_f3243; assert_equal("1990", worksheet.lever_graphs_f3243); end
  def test_lever_graphs_g3243; assert_equal("1995", worksheet.lever_graphs_g3243); end
  def test_lever_graphs_h3243; assert_equal("2000", worksheet.lever_graphs_h3243); end
  def test_lever_graphs_i3243; assert_equal("2005", worksheet.lever_graphs_i3243); end
  def test_lever_graphs_j3243; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3243, 0.002); end
  def test_lever_graphs_k3243; assert_equal("2011", worksheet.lever_graphs_k3243); end
  def test_lever_graphs_l3243; assert_equal("2015", worksheet.lever_graphs_l3243); end
  def test_lever_graphs_m3243; assert_equal("2020", worksheet.lever_graphs_m3243); end
  def test_lever_graphs_n3243; assert_equal("2025", worksheet.lever_graphs_n3243); end
  def test_lever_graphs_o3243; assert_equal("2030", worksheet.lever_graphs_o3243); end
  def test_lever_graphs_p3243; assert_equal("2035", worksheet.lever_graphs_p3243); end
  def test_lever_graphs_q3243; assert_equal("2040", worksheet.lever_graphs_q3243); end
  def test_lever_graphs_r3243; assert_equal("2045", worksheet.lever_graphs_r3243); end
  def test_lever_graphs_s3243; assert_equal("2050", worksheet.lever_graphs_s3243); end
  def test_lever_graphs_b3244; assert_equal("Historic data", worksheet.lever_graphs_b3244); end
  def test_lever_graphs_b3245; assert_in_delta(1.0, worksheet.lever_graphs_b3245, 0.002); end
  def test_lever_graphs_k3245; assert_in_delta(0.0, (worksheet.lever_graphs_k3245||0), 0.002); end
  def test_lever_graphs_l3245; assert_in_delta(0.04, worksheet.lever_graphs_l3245, 0.002); end
  def test_lever_graphs_m3245; assert_in_delta(0.04857142857142857, worksheet.lever_graphs_m3245, 0.002); end
  def test_lever_graphs_n3245; assert_in_delta(0.05714285714285715, worksheet.lever_graphs_n3245, 0.002); end
  def test_lever_graphs_o3245; assert_in_delta(0.06571428571428571, worksheet.lever_graphs_o3245, 0.002); end
  def test_lever_graphs_p3245; assert_in_delta(0.07428571428571429, worksheet.lever_graphs_p3245, 0.002); end
  def test_lever_graphs_q3245; assert_in_delta(0.08285714285714287, worksheet.lever_graphs_q3245, 0.002); end
  def test_lever_graphs_r3245; assert_in_delta(0.09142857142857143, worksheet.lever_graphs_r3245, 0.002); end
  def test_lever_graphs_s3245; assert_in_delta(0.1, worksheet.lever_graphs_s3245, 0.002); end
  def test_lever_graphs_b3246; assert_in_epsilon(2.0, worksheet.lever_graphs_b3246, 0.002); end
  def test_lever_graphs_k3246; assert_in_delta(0.0, (worksheet.lever_graphs_k3246||0), 0.002); end
  def test_lever_graphs_l3246; assert_in_delta(0.04, worksheet.lever_graphs_l3246, 0.002); end
  def test_lever_graphs_m3246; assert_in_delta(0.07714285714285715, worksheet.lever_graphs_m3246, 0.002); end
  def test_lever_graphs_n3246; assert_in_delta(0.1142857142857143, worksheet.lever_graphs_n3246, 0.002); end
  def test_lever_graphs_o3246; assert_in_delta(0.15142857142857144, worksheet.lever_graphs_o3246, 0.002); end
  def test_lever_graphs_p3246; assert_in_delta(0.18857142857142858, worksheet.lever_graphs_p3246, 0.002); end
  def test_lever_graphs_q3246; assert_in_delta(0.22571428571428573, worksheet.lever_graphs_q3246, 0.002); end
  def test_lever_graphs_r3246; assert_in_delta(0.26285714285714284, worksheet.lever_graphs_r3246, 0.002); end
  def test_lever_graphs_s3246; assert_in_delta(0.3, worksheet.lever_graphs_s3246, 0.002); end
  def test_lever_graphs_b3247; assert_in_epsilon(3.0, worksheet.lever_graphs_b3247, 0.002); end
  def test_lever_graphs_k3247; assert_in_delta(0.0, (worksheet.lever_graphs_k3247||0), 0.002); end
  def test_lever_graphs_l3247; assert_in_delta(0.04, worksheet.lever_graphs_l3247, 0.002); end
  def test_lever_graphs_m3247; assert_in_delta(0.1057142857142857, worksheet.lever_graphs_m3247, 0.002); end
  def test_lever_graphs_n3247; assert_in_delta(0.17142857142857143, worksheet.lever_graphs_n3247, 0.002); end
  def test_lever_graphs_o3247; assert_in_delta(0.23714285714285716, worksheet.lever_graphs_o3247, 0.002); end
  def test_lever_graphs_p3247; assert_in_delta(0.3028571428571428, worksheet.lever_graphs_p3247, 0.002); end
  def test_lever_graphs_q3247; assert_in_delta(0.36857142857142855, worksheet.lever_graphs_q3247, 0.002); end
  def test_lever_graphs_r3247; assert_in_delta(0.4342857142857143, worksheet.lever_graphs_r3247, 0.002); end
  def test_lever_graphs_s3247; assert_in_delta(0.5, worksheet.lever_graphs_s3247, 0.002); end
  def test_lever_graphs_b3248; assert_in_epsilon(4.0, worksheet.lever_graphs_b3248, 0.002); end
  def test_lever_graphs_k3248; assert_in_delta(0.0, (worksheet.lever_graphs_k3248||0), 0.002); end
  def test_lever_graphs_l3248; assert_in_delta(0.04, worksheet.lever_graphs_l3248, 0.002); end
  def test_lever_graphs_m3248; assert_in_delta(0.14857142857142858, worksheet.lever_graphs_m3248, 0.002); end
  def test_lever_graphs_n3248; assert_in_delta(0.2571428571428571, worksheet.lever_graphs_n3248, 0.002); end
  def test_lever_graphs_o3248; assert_in_delta(0.36571428571428566, worksheet.lever_graphs_o3248, 0.002); end
  def test_lever_graphs_p3248; assert_in_delta(0.47428571428571425, worksheet.lever_graphs_p3248, 0.002); end
  def test_lever_graphs_q3248; assert_in_delta(0.582857142857143, worksheet.lever_graphs_q3248, 0.002); end
  def test_lever_graphs_r3248; assert_in_delta(0.6914285714285714, worksheet.lever_graphs_r3248, 0.002); end
  def test_lever_graphs_s3248; assert_in_delta(0.8, worksheet.lever_graphs_s3248, 0.002); end
  def test_lever_graphs_c3264; assert_equal("1975", worksheet.lever_graphs_c3264); end
  def test_lever_graphs_d3264; assert_equal("1980", worksheet.lever_graphs_d3264); end
  def test_lever_graphs_e3264; assert_equal("1985", worksheet.lever_graphs_e3264); end
  def test_lever_graphs_f3264; assert_equal("1990", worksheet.lever_graphs_f3264); end
  def test_lever_graphs_g3264; assert_equal("1995", worksheet.lever_graphs_g3264); end
  def test_lever_graphs_h3264; assert_equal("2000", worksheet.lever_graphs_h3264); end
  def test_lever_graphs_i3264; assert_equal("2005", worksheet.lever_graphs_i3264); end
  def test_lever_graphs_j3264; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3264, 0.002); end
  def test_lever_graphs_k3264; assert_equal("2011", worksheet.lever_graphs_k3264); end
  def test_lever_graphs_l3264; assert_equal("2015", worksheet.lever_graphs_l3264); end
  def test_lever_graphs_m3264; assert_equal("2020", worksheet.lever_graphs_m3264); end
  def test_lever_graphs_n3264; assert_equal("2025", worksheet.lever_graphs_n3264); end
  def test_lever_graphs_o3264; assert_equal("2030", worksheet.lever_graphs_o3264); end
  def test_lever_graphs_p3264; assert_equal("2035", worksheet.lever_graphs_p3264); end
  def test_lever_graphs_q3264; assert_equal("2040", worksheet.lever_graphs_q3264); end
  def test_lever_graphs_r3264; assert_equal("2045", worksheet.lever_graphs_r3264); end
  def test_lever_graphs_s3264; assert_equal("2050", worksheet.lever_graphs_s3264); end
  def test_lever_graphs_b3265; assert_equal("Historic data", worksheet.lever_graphs_b3265); end
  def test_lever_graphs_b3266; assert_in_delta(1.0, worksheet.lever_graphs_b3266, 0.002); end
  def test_lever_graphs_k3266; assert_in_delta(0.0, (worksheet.lever_graphs_k3266||0), 0.002); end
  def test_lever_graphs_l3266; assert_in_delta(0.04, worksheet.lever_graphs_l3266, 0.002); end
  def test_lever_graphs_m3266; assert_in_delta(0.04857142857142857, worksheet.lever_graphs_m3266, 0.002); end
  def test_lever_graphs_n3266; assert_in_delta(0.05714285714285715, worksheet.lever_graphs_n3266, 0.002); end
  def test_lever_graphs_o3266; assert_in_delta(0.06571428571428571, worksheet.lever_graphs_o3266, 0.002); end
  def test_lever_graphs_p3266; assert_in_delta(0.07428571428571429, worksheet.lever_graphs_p3266, 0.002); end
  def test_lever_graphs_q3266; assert_in_delta(0.08285714285714287, worksheet.lever_graphs_q3266, 0.002); end
  def test_lever_graphs_r3266; assert_in_delta(0.09142857142857143, worksheet.lever_graphs_r3266, 0.002); end
  def test_lever_graphs_s3266; assert_in_delta(0.1, worksheet.lever_graphs_s3266, 0.002); end
  def test_lever_graphs_b3267; assert_in_epsilon(2.0, worksheet.lever_graphs_b3267, 0.002); end
  def test_lever_graphs_k3267; assert_in_delta(0.0, (worksheet.lever_graphs_k3267||0), 0.002); end
  def test_lever_graphs_l3267; assert_in_delta(0.04, worksheet.lever_graphs_l3267, 0.002); end
  def test_lever_graphs_m3267; assert_in_delta(0.07714285714285715, worksheet.lever_graphs_m3267, 0.002); end
  def test_lever_graphs_n3267; assert_in_delta(0.1142857142857143, worksheet.lever_graphs_n3267, 0.002); end
  def test_lever_graphs_o3267; assert_in_delta(0.15142857142857144, worksheet.lever_graphs_o3267, 0.002); end
  def test_lever_graphs_p3267; assert_in_delta(0.18857142857142858, worksheet.lever_graphs_p3267, 0.002); end
  def test_lever_graphs_q3267; assert_in_delta(0.22571428571428573, worksheet.lever_graphs_q3267, 0.002); end
  def test_lever_graphs_r3267; assert_in_delta(0.26285714285714284, worksheet.lever_graphs_r3267, 0.002); end
  def test_lever_graphs_s3267; assert_in_delta(0.3, worksheet.lever_graphs_s3267, 0.002); end
  def test_lever_graphs_b3268; assert_in_epsilon(3.0, worksheet.lever_graphs_b3268, 0.002); end
  def test_lever_graphs_k3268; assert_in_delta(0.0, (worksheet.lever_graphs_k3268||0), 0.002); end
  def test_lever_graphs_l3268; assert_in_delta(0.04, worksheet.lever_graphs_l3268, 0.002); end
  def test_lever_graphs_m3268; assert_in_delta(0.1057142857142857, worksheet.lever_graphs_m3268, 0.002); end
  def test_lever_graphs_n3268; assert_in_delta(0.17142857142857143, worksheet.lever_graphs_n3268, 0.002); end
  def test_lever_graphs_o3268; assert_in_delta(0.23714285714285716, worksheet.lever_graphs_o3268, 0.002); end
  def test_lever_graphs_p3268; assert_in_delta(0.3028571428571428, worksheet.lever_graphs_p3268, 0.002); end
  def test_lever_graphs_q3268; assert_in_delta(0.36857142857142855, worksheet.lever_graphs_q3268, 0.002); end
  def test_lever_graphs_r3268; assert_in_delta(0.4342857142857143, worksheet.lever_graphs_r3268, 0.002); end
  def test_lever_graphs_s3268; assert_in_delta(0.5, worksheet.lever_graphs_s3268, 0.002); end
  def test_lever_graphs_b3269; assert_in_epsilon(4.0, worksheet.lever_graphs_b3269, 0.002); end
  def test_lever_graphs_k3269; assert_in_delta(0.0, (worksheet.lever_graphs_k3269||0), 0.002); end
  def test_lever_graphs_l3269; assert_in_delta(0.04, worksheet.lever_graphs_l3269, 0.002); end
  def test_lever_graphs_m3269; assert_in_delta(0.14857142857142858, worksheet.lever_graphs_m3269, 0.002); end
  def test_lever_graphs_n3269; assert_in_delta(0.2571428571428571, worksheet.lever_graphs_n3269, 0.002); end
  def test_lever_graphs_o3269; assert_in_delta(0.36571428571428566, worksheet.lever_graphs_o3269, 0.002); end
  def test_lever_graphs_p3269; assert_in_delta(0.47428571428571425, worksheet.lever_graphs_p3269, 0.002); end
  def test_lever_graphs_q3269; assert_in_delta(0.582857142857143, worksheet.lever_graphs_q3269, 0.002); end
  def test_lever_graphs_r3269; assert_in_delta(0.6914285714285714, worksheet.lever_graphs_r3269, 0.002); end
  def test_lever_graphs_s3269; assert_in_delta(0.8, worksheet.lever_graphs_s3269, 0.002); end
  def test_lever_graphs_d2661; assert_equal("Title", worksheet.lever_graphs_d2661); end
  def test_lever_graphs_e2661; assert_equal("Global urban refrigerator used by people with access to electricity", worksheet.lever_graphs_e2661); end
  def test_lever_graphs_f2661; assert_equal("Global urban dishwashers used by people with access to electricity", worksheet.lever_graphs_f2661); end
  def test_lever_graphs_g2661; assert_equal("Global urban clothwasher used by people with access to electricity", worksheet.lever_graphs_g2661); end
  def test_lever_graphs_h2661; assert_equal("Global urban clothdryers used by people with access to electricity", worksheet.lever_graphs_h2661); end
  def test_lever_graphs_i2661; assert_equal("Global urban TV used by people with access to electricity", worksheet.lever_graphs_i2661); end
  def test_lever_graphs_j2661; assert_equal("Global urban miscellaneous used by people with access to electricity", worksheet.lever_graphs_j2661); end
  def test_lever_graphs_d2662; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2662, 0.002); end
  def test_lever_graphs_e2662; assert_in_epsilon(65.982, worksheet.lever_graphs_e2662, 0.002); end
  def test_lever_graphs_f2662; assert_in_epsilon(1500.0, worksheet.lever_graphs_f2662, 0.002); end
  def test_lever_graphs_g2662; assert_in_epsilon(699.9999999999999, worksheet.lever_graphs_g2662, 0.002); end
  def test_lever_graphs_h2662; assert_in_epsilon(1500.0, worksheet.lever_graphs_h2662, 0.002); end
  def test_lever_graphs_i2662; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_i2662, 0.002); end
  def test_lever_graphs_j2662; assert_in_epsilon(99.99999999999999, worksheet.lever_graphs_j2662, 0.002); end
  def test_lever_graphs_d2663; assert_equal("2050: Level 1", worksheet.lever_graphs_d2663); end
  def test_lever_graphs_e2663; assert_in_epsilon(53.99999999999999, worksheet.lever_graphs_e2663, 0.002); end
  def test_lever_graphs_f2663; assert_in_epsilon(1192.0, worksheet.lever_graphs_f2663, 0.002); end
  def test_lever_graphs_g2663; assert_in_epsilon(558.0, worksheet.lever_graphs_g2663, 0.002); end
  def test_lever_graphs_h2663; assert_in_epsilon(1319.0, worksheet.lever_graphs_h2663, 0.002); end
  def test_lever_graphs_i2663; assert_in_epsilon(242.99999999999997, worksheet.lever_graphs_i2663, 0.002); end
  def test_lever_graphs_j2663; assert_in_epsilon(90.0, worksheet.lever_graphs_j2663, 0.002); end
  def test_lever_graphs_d2664; assert_equal("2050: Level 2", worksheet.lever_graphs_d2664); end
  def test_lever_graphs_e2664; assert_in_epsilon(45.0, worksheet.lever_graphs_e2664, 0.002); end
  def test_lever_graphs_f2664; assert_in_epsilon(1062.0, worksheet.lever_graphs_f2664, 0.002); end
  def test_lever_graphs_g2664; assert_in_epsilon(474.99999999999994, worksheet.lever_graphs_g2664, 0.002); end
  def test_lever_graphs_h2664; assert_in_epsilon(1181.0, worksheet.lever_graphs_h2664, 0.002); end
  def test_lever_graphs_i2664; assert_in_epsilon(207.99999999999997, worksheet.lever_graphs_i2664, 0.002); end
  def test_lever_graphs_j2664; assert_in_epsilon(85.99999999999999, worksheet.lever_graphs_j2664, 0.002); end
  def test_lever_graphs_d2665; assert_equal("2050: Level 3", worksheet.lever_graphs_d2665); end
  def test_lever_graphs_e2665; assert_in_epsilon(40.0, worksheet.lever_graphs_e2665, 0.002); end
  def test_lever_graphs_f2665; assert_in_epsilon(945.9999999999999, worksheet.lever_graphs_f2665, 0.002); end
  def test_lever_graphs_g2665; assert_in_epsilon(416.99999999999994, worksheet.lever_graphs_g2665, 0.002); end
  def test_lever_graphs_h2665; assert_in_epsilon(1056.9999999999998, worksheet.lever_graphs_h2665, 0.002); end
  def test_lever_graphs_i2665; assert_in_epsilon(192.0, worksheet.lever_graphs_i2665, 0.002); end
  def test_lever_graphs_j2665; assert_in_epsilon(80.0, worksheet.lever_graphs_j2665, 0.002); end
  def test_lever_graphs_d2666; assert_equal("2050: Level 4", worksheet.lever_graphs_d2666); end
  def test_lever_graphs_e2666; assert_in_epsilon(34.0, worksheet.lever_graphs_e2666, 0.002); end
  def test_lever_graphs_f2666; assert_in_epsilon(750.0, worksheet.lever_graphs_f2666, 0.002); end
  def test_lever_graphs_g2666; assert_in_epsilon(365.99999999999994, worksheet.lever_graphs_g2666, 0.002); end
  def test_lever_graphs_h2666; assert_in_epsilon(928.0, worksheet.lever_graphs_h2666, 0.002); end
  def test_lever_graphs_i2666; assert_in_epsilon(173.99999999999997, worksheet.lever_graphs_i2666, 0.002); end
  def test_lever_graphs_j2666; assert_in_epsilon(72.99999999999999, worksheet.lever_graphs_j2666, 0.002); end
  def test_lever_graphs_c2681; assert_equal("1975", worksheet.lever_graphs_c2681); end
  def test_lever_graphs_d2681; assert_equal("1980", worksheet.lever_graphs_d2681); end
  def test_lever_graphs_e2681; assert_equal("1985", worksheet.lever_graphs_e2681); end
  def test_lever_graphs_f2681; assert_equal("1990", worksheet.lever_graphs_f2681); end
  def test_lever_graphs_g2681; assert_equal("1995", worksheet.lever_graphs_g2681); end
  def test_lever_graphs_h2681; assert_equal("2000", worksheet.lever_graphs_h2681); end
  def test_lever_graphs_i2681; assert_equal("2005", worksheet.lever_graphs_i2681); end
  def test_lever_graphs_j2681; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2681, 0.002); end
  def test_lever_graphs_k2681; assert_equal("2011", worksheet.lever_graphs_k2681); end
  def test_lever_graphs_l2681; assert_equal("2015", worksheet.lever_graphs_l2681); end
  def test_lever_graphs_m2681; assert_equal("2020", worksheet.lever_graphs_m2681); end
  def test_lever_graphs_n2681; assert_equal("2025", worksheet.lever_graphs_n2681); end
  def test_lever_graphs_o2681; assert_equal("2030", worksheet.lever_graphs_o2681); end
  def test_lever_graphs_p2681; assert_equal("2035", worksheet.lever_graphs_p2681); end
  def test_lever_graphs_q2681; assert_equal("2040", worksheet.lever_graphs_q2681); end
  def test_lever_graphs_r2681; assert_equal("2045", worksheet.lever_graphs_r2681); end
  def test_lever_graphs_s2681; assert_equal("2050", worksheet.lever_graphs_s2681); end
  def test_lever_graphs_b2682; assert_equal("Historic data", worksheet.lever_graphs_b2682); end
  def test_lever_graphs_b2683; assert_in_delta(1.0, worksheet.lever_graphs_b2683, 0.002); end
  def test_lever_graphs_k2683; assert_in_epsilon(65.982, worksheet.lever_graphs_k2683, 0.002); end
  def test_lever_graphs_l2683; assert_in_epsilon(64.75307692307692, worksheet.lever_graphs_l2683, 0.002); end
  def test_lever_graphs_m2683; assert_in_epsilon(63.21692307692307, worksheet.lever_graphs_m2683, 0.002); end
  def test_lever_graphs_n2683; assert_in_epsilon(61.68076923076923, worksheet.lever_graphs_n2683, 0.002); end
  def test_lever_graphs_o2683; assert_in_epsilon(60.14461538461538, worksheet.lever_graphs_o2683, 0.002); end
  def test_lever_graphs_p2683; assert_in_epsilon(58.608461538461526, worksheet.lever_graphs_p2683, 0.002); end
  def test_lever_graphs_q2683; assert_in_epsilon(57.07230769230768, worksheet.lever_graphs_q2683, 0.002); end
  def test_lever_graphs_r2683; assert_in_epsilon(55.53615384615383, worksheet.lever_graphs_r2683, 0.002); end
  def test_lever_graphs_s2683; assert_in_epsilon(53.99999999999999, worksheet.lever_graphs_s2683, 0.002); end
  def test_lever_graphs_b2684; assert_in_epsilon(2.0, worksheet.lever_graphs_b2684, 0.002); end
  def test_lever_graphs_k2684; assert_in_epsilon(65.982, worksheet.lever_graphs_k2684, 0.002); end
  def test_lever_graphs_l2684; assert_in_epsilon(64.75307692307692, worksheet.lever_graphs_l2684, 0.002); end
  def test_lever_graphs_m2684; assert_in_epsilon(61.93120879120879, worksheet.lever_graphs_m2684, 0.002); end
  def test_lever_graphs_n2684; assert_in_epsilon(59.10934065934066, worksheet.lever_graphs_n2684, 0.002); end
  def test_lever_graphs_o2684; assert_in_epsilon(56.287472527472524, worksheet.lever_graphs_o2684, 0.002); end
  def test_lever_graphs_p2684; assert_in_epsilon(53.46560439560439, worksheet.lever_graphs_p2684, 0.002); end
  def test_lever_graphs_q2684; assert_in_epsilon(50.64373626373626, worksheet.lever_graphs_q2684, 0.002); end
  def test_lever_graphs_r2684; assert_in_epsilon(47.82186813186812, worksheet.lever_graphs_r2684, 0.002); end
  def test_lever_graphs_s2684; assert_in_epsilon(45.0, worksheet.lever_graphs_s2684, 0.002); end
  def test_lever_graphs_b2685; assert_in_epsilon(3.0, worksheet.lever_graphs_b2685, 0.002); end
  def test_lever_graphs_k2685; assert_in_epsilon(65.982, worksheet.lever_graphs_k2685, 0.002); end
  def test_lever_graphs_l2685; assert_in_epsilon(64.75307692307692, worksheet.lever_graphs_l2685, 0.002); end
  def test_lever_graphs_m2685; assert_in_epsilon(61.21692307692308, worksheet.lever_graphs_m2685, 0.002); end
  def test_lever_graphs_n2685; assert_in_epsilon(57.680769230769236, worksheet.lever_graphs_n2685, 0.002); end
  def test_lever_graphs_o2685; assert_in_epsilon(54.144615384615385, worksheet.lever_graphs_o2685, 0.002); end
  def test_lever_graphs_p2685; assert_in_epsilon(50.60846153846153, worksheet.lever_graphs_p2685, 0.002); end
  def test_lever_graphs_q2685; assert_in_epsilon(47.07230769230769, worksheet.lever_graphs_q2685, 0.002); end
  def test_lever_graphs_r2685; assert_in_epsilon(43.536153846153844, worksheet.lever_graphs_r2685, 0.002); end
  def test_lever_graphs_s2685; assert_in_epsilon(40.0, worksheet.lever_graphs_s2685, 0.002); end
  def test_lever_graphs_b2686; assert_in_epsilon(4.0, worksheet.lever_graphs_b2686, 0.002); end
  def test_lever_graphs_k2686; assert_in_epsilon(65.982, worksheet.lever_graphs_k2686, 0.002); end
  def test_lever_graphs_l2686; assert_in_epsilon(64.75307692307692, worksheet.lever_graphs_l2686, 0.002); end
  def test_lever_graphs_m2686; assert_in_epsilon(60.35978021978022, worksheet.lever_graphs_m2686, 0.002); end
  def test_lever_graphs_n2686; assert_in_epsilon(55.966483516483514, worksheet.lever_graphs_n2686, 0.002); end
  def test_lever_graphs_o2686; assert_in_epsilon(51.573186813186815, worksheet.lever_graphs_o2686, 0.002); end
  def test_lever_graphs_p2686; assert_in_epsilon(47.17989010989011, worksheet.lever_graphs_p2686, 0.002); end
  def test_lever_graphs_q2686; assert_in_epsilon(42.786593406593404, worksheet.lever_graphs_q2686, 0.002); end
  def test_lever_graphs_r2686; assert_in_epsilon(38.3932967032967, worksheet.lever_graphs_r2686, 0.002); end
  def test_lever_graphs_s2686; assert_in_epsilon(34.0, worksheet.lever_graphs_s2686, 0.002); end
  def test_lever_graphs_c2671; assert_equal("1975", worksheet.lever_graphs_c2671); end
  def test_lever_graphs_d2671; assert_equal("1980", worksheet.lever_graphs_d2671); end
  def test_lever_graphs_e2671; assert_equal("1985", worksheet.lever_graphs_e2671); end
  def test_lever_graphs_f2671; assert_equal("1990", worksheet.lever_graphs_f2671); end
  def test_lever_graphs_g2671; assert_equal("1995", worksheet.lever_graphs_g2671); end
  def test_lever_graphs_h2671; assert_equal("2000", worksheet.lever_graphs_h2671); end
  def test_lever_graphs_i2671; assert_equal("2005", worksheet.lever_graphs_i2671); end
  def test_lever_graphs_j2671; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2671, 0.002); end
  def test_lever_graphs_k2671; assert_equal("2011", worksheet.lever_graphs_k2671); end
  def test_lever_graphs_l2671; assert_equal("2015", worksheet.lever_graphs_l2671); end
  def test_lever_graphs_m2671; assert_equal("2020", worksheet.lever_graphs_m2671); end
  def test_lever_graphs_n2671; assert_equal("2025", worksheet.lever_graphs_n2671); end
  def test_lever_graphs_o2671; assert_equal("2030", worksheet.lever_graphs_o2671); end
  def test_lever_graphs_p2671; assert_equal("2035", worksheet.lever_graphs_p2671); end
  def test_lever_graphs_q2671; assert_equal("2040", worksheet.lever_graphs_q2671); end
  def test_lever_graphs_r2671; assert_equal("2045", worksheet.lever_graphs_r2671); end
  def test_lever_graphs_s2671; assert_equal("2050", worksheet.lever_graphs_s2671); end
  def test_lever_graphs_b2672; assert_equal("Historic data", worksheet.lever_graphs_b2672); end
  def test_lever_graphs_b2673; assert_in_delta(1.0, worksheet.lever_graphs_b2673, 0.002); end
  def test_lever_graphs_k2673; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_k2673, 0.002); end
  def test_lever_graphs_l2673; assert_in_epsilon(249.28205128205127, worksheet.lever_graphs_l2673, 0.002); end
  def test_lever_graphs_m2673; assert_in_epsilon(248.38461538461533, worksheet.lever_graphs_m2673, 0.002); end
  def test_lever_graphs_n2673; assert_in_epsilon(247.4871794871795, worksheet.lever_graphs_n2673, 0.002); end
  def test_lever_graphs_o2673; assert_in_epsilon(246.58974358974356, worksheet.lever_graphs_o2673, 0.002); end
  def test_lever_graphs_p2673; assert_in_epsilon(245.69230769230762, worksheet.lever_graphs_p2673, 0.002); end
  def test_lever_graphs_q2673; assert_in_epsilon(244.7948717948718, worksheet.lever_graphs_q2673, 0.002); end
  def test_lever_graphs_r2673; assert_in_epsilon(243.89743589743586, worksheet.lever_graphs_r2673, 0.002); end
  def test_lever_graphs_s2673; assert_in_epsilon(242.99999999999997, worksheet.lever_graphs_s2673, 0.002); end
  def test_lever_graphs_b2674; assert_in_epsilon(2.0, worksheet.lever_graphs_b2674, 0.002); end
  def test_lever_graphs_k2674; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_k2674, 0.002); end
  def test_lever_graphs_l2674; assert_in_epsilon(249.28205128205127, worksheet.lever_graphs_l2674, 0.002); end
  def test_lever_graphs_m2674; assert_in_epsilon(243.38461538461536, worksheet.lever_graphs_m2674, 0.002); end
  def test_lever_graphs_n2674; assert_in_epsilon(237.48717948717947, worksheet.lever_graphs_n2674, 0.002); end
  def test_lever_graphs_o2674; assert_in_epsilon(231.58974358974353, worksheet.lever_graphs_o2674, 0.002); end
  def test_lever_graphs_p2674; assert_in_epsilon(225.69230769230765, worksheet.lever_graphs_p2674, 0.002); end
  def test_lever_graphs_q2674; assert_in_epsilon(219.79487179487177, worksheet.lever_graphs_q2674, 0.002); end
  def test_lever_graphs_r2674; assert_in_epsilon(213.89743589743586, worksheet.lever_graphs_r2674, 0.002); end
  def test_lever_graphs_s2674; assert_in_epsilon(207.99999999999997, worksheet.lever_graphs_s2674, 0.002); end
  def test_lever_graphs_b2675; assert_in_epsilon(3.0, worksheet.lever_graphs_b2675, 0.002); end
  def test_lever_graphs_k2675; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_k2675, 0.002); end
  def test_lever_graphs_l2675; assert_in_epsilon(249.28205128205127, worksheet.lever_graphs_l2675, 0.002); end
  def test_lever_graphs_m2675; assert_in_epsilon(241.09890109890108, worksheet.lever_graphs_m2675, 0.002); end
  def test_lever_graphs_n2675; assert_in_epsilon(232.9157509157509, worksheet.lever_graphs_n2675, 0.002); end
  def test_lever_graphs_o2675; assert_in_epsilon(224.73260073260073, worksheet.lever_graphs_o2675, 0.002); end
  def test_lever_graphs_p2675; assert_in_epsilon(216.5494505494505, worksheet.lever_graphs_p2675, 0.002); end
  def test_lever_graphs_q2675; assert_in_epsilon(208.36630036630038, worksheet.lever_graphs_q2675, 0.002); end
  def test_lever_graphs_r2675; assert_in_epsilon(200.18315018315016, worksheet.lever_graphs_r2675, 0.002); end
  def test_lever_graphs_s2675; assert_in_epsilon(192.0, worksheet.lever_graphs_s2675, 0.002); end
  def test_lever_graphs_b2676; assert_in_epsilon(4.0, worksheet.lever_graphs_b2676, 0.002); end
  def test_lever_graphs_k2676; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_k2676, 0.002); end
  def test_lever_graphs_l2676; assert_in_epsilon(249.28205128205127, worksheet.lever_graphs_l2676, 0.002); end
  def test_lever_graphs_m2676; assert_in_epsilon(238.5274725274725, worksheet.lever_graphs_m2676, 0.002); end
  def test_lever_graphs_n2676; assert_in_epsilon(227.77289377289375, worksheet.lever_graphs_n2676, 0.002); end
  def test_lever_graphs_o2676; assert_in_epsilon(217.018315018315, worksheet.lever_graphs_o2676, 0.002); end
  def test_lever_graphs_p2676; assert_in_epsilon(206.26373626373623, worksheet.lever_graphs_p2676, 0.002); end
  def test_lever_graphs_q2676; assert_in_epsilon(195.50915750915746, worksheet.lever_graphs_q2676, 0.002); end
  def test_lever_graphs_r2676; assert_in_epsilon(184.75457875457872, worksheet.lever_graphs_r2676, 0.002); end
  def test_lever_graphs_s2676; assert_in_epsilon(173.99999999999997, worksheet.lever_graphs_s2676, 0.002); end
  def test_lever_graphs_d2529; assert_equal("Title", worksheet.lever_graphs_d2529); end
  def test_lever_graphs_e2529; assert_equal("Global urban refrigerator used by people with access to electricity", worksheet.lever_graphs_e2529); end
  def test_lever_graphs_f2529; assert_equal("Global urban dishwashers used by people with access to electricity", worksheet.lever_graphs_f2529); end
  def test_lever_graphs_g2529; assert_equal("Global urban clothwasher used by people with access to electricity", worksheet.lever_graphs_g2529); end
  def test_lever_graphs_h2529; assert_equal("Global urban clothdryers used by people with access to electricity", worksheet.lever_graphs_h2529); end
  def test_lever_graphs_i2529; assert_equal("Global urban TV used by people with access to electricity", worksheet.lever_graphs_i2529); end
  def test_lever_graphs_j2529; assert_equal("Global urban miscellaneous used by people with access to electricity", worksheet.lever_graphs_j2529); end
  def test_lever_graphs_d2530; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2530, 0.002); end
  def test_lever_graphs_e2530; assert_in_delta(0.9556862861159037, worksheet.lever_graphs_e2530, 0.002); end
  def test_lever_graphs_f2530; assert_in_delta(0.3322490369750295, worksheet.lever_graphs_f2530, 0.002); end
  def test_lever_graphs_g2530; assert_in_delta(0.7803646989372999, worksheet.lever_graphs_g2530, 0.002); end
  def test_lever_graphs_h2530; assert_in_delta(0.25750327590507216, worksheet.lever_graphs_h2530, 0.002); end
  def test_lever_graphs_i2530; assert_in_epsilon(1.63256072650361, worksheet.lever_graphs_i2530, 0.002); end
  def test_lever_graphs_j2530; assert_in_epsilon(2.0, worksheet.lever_graphs_j2530, 0.002); end
  def test_lever_graphs_d2531; assert_equal("2050: Level 1", worksheet.lever_graphs_d2531); end
  def test_lever_graphs_e2531; assert_in_epsilon(1.4335294291738556, worksheet.lever_graphs_e2531, 0.002); end
  def test_lever_graphs_f2531; assert_in_delta(0.664498073950059, worksheet.lever_graphs_f2531, 0.002); end
  def test_lever_graphs_g2531; assert_in_delta(0.9988668146397438, worksheet.lever_graphs_g2531, 0.002); end
  def test_lever_graphs_h2531; assert_in_delta(0.7982601553057237, worksheet.lever_graphs_h2531, 0.002); end
  def test_lever_graphs_i2531; assert_in_epsilon(2.448841089755415, worksheet.lever_graphs_i2531, 0.002); end
  def test_lever_graphs_j2531; assert_in_epsilon(5.0, worksheet.lever_graphs_j2531, 0.002); end
  def test_lever_graphs_d2532; assert_equal("2050: Level 2", worksheet.lever_graphs_d2532); end
  def test_lever_graphs_e2532; assert_in_epsilon(1.2423921719506748, worksheet.lever_graphs_e2532, 0.002); end
  def test_lever_graphs_f2532; assert_in_delta(0.5980482665550532, worksheet.lever_graphs_f2532, 0.002); end
  def test_lever_graphs_g2532; assert_in_delta(0.9208303447460138, worksheet.lever_graphs_g2532, 0.002); end
  def test_lever_graphs_h2532; assert_in_delta(0.592257534581666, worksheet.lever_graphs_h2532, 0.002); end
  def test_lever_graphs_i2532; assert_in_epsilon(2.122328944454693, worksheet.lever_graphs_i2532, 0.002); end
  def test_lever_graphs_j2532; assert_in_epsilon(4.2, worksheet.lever_graphs_j2532, 0.002); end
  def test_lever_graphs_d2533; assert_equal("2050: Level 3", worksheet.lever_graphs_d2533); end
  def test_lever_graphs_e2533; assert_in_epsilon(1.1277098176167664, worksheet.lever_graphs_e2533, 0.002); end
  def test_lever_graphs_f2533; assert_in_delta(0.49837355546254425, worksheet.lever_graphs_f2533, 0.002); end
  def test_lever_graphs_g2533; assert_in_delta(0.8584011688310299, worksheet.lever_graphs_g2533, 0.002); end
  def test_lever_graphs_h2533; assert_in_delta(0.4635058966291299, worksheet.lever_graphs_h2533, 0.002); end
  def test_lever_graphs_i2533; assert_in_epsilon(1.9590728718043318, worksheet.lever_graphs_i2533, 0.002); end
  def test_lever_graphs_j2533; assert_in_epsilon(3.6, worksheet.lever_graphs_j2533, 0.002); end
  def test_lever_graphs_d2534; assert_equal("2050: Level 4", worksheet.lever_graphs_d2534); end
  def test_lever_graphs_e2534; assert_in_epsilon(1.0034706004216989, worksheet.lever_graphs_e2534, 0.002); end
  def test_lever_graphs_f2534; assert_in_delta(0.3322490369750295, worksheet.lever_graphs_f2534, 0.002); end
  def test_lever_graphs_g2534; assert_in_delta(0.8193829338841649, worksheet.lever_graphs_g2534, 0.002); end
  def test_lever_graphs_h2534; assert_in_delta(0.296128767290833, worksheet.lever_graphs_h2534, 0.002); end
  def test_lever_graphs_i2534; assert_in_epsilon(1.63256072650361, worksheet.lever_graphs_i2534, 0.002); end
  def test_lever_graphs_j2534; assert_in_epsilon(3.0, worksheet.lever_graphs_j2534, 0.002); end
  def test_lever_graphs_c2550; assert_equal("1975", worksheet.lever_graphs_c2550); end
  def test_lever_graphs_d2550; assert_equal("1980", worksheet.lever_graphs_d2550); end
  def test_lever_graphs_e2550; assert_equal("1985", worksheet.lever_graphs_e2550); end
  def test_lever_graphs_f2550; assert_equal("1990", worksheet.lever_graphs_f2550); end
  def test_lever_graphs_g2550; assert_equal("1995", worksheet.lever_graphs_g2550); end
  def test_lever_graphs_h2550; assert_equal("2000", worksheet.lever_graphs_h2550); end
  def test_lever_graphs_i2550; assert_equal("2005", worksheet.lever_graphs_i2550); end
  def test_lever_graphs_j2550; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2550, 0.002); end
  def test_lever_graphs_k2550; assert_equal("2011", worksheet.lever_graphs_k2550); end
  def test_lever_graphs_l2550; assert_equal("2015", worksheet.lever_graphs_l2550); end
  def test_lever_graphs_m2550; assert_equal("2020", worksheet.lever_graphs_m2550); end
  def test_lever_graphs_n2550; assert_equal("2025", worksheet.lever_graphs_n2550); end
  def test_lever_graphs_o2550; assert_equal("2030", worksheet.lever_graphs_o2550); end
  def test_lever_graphs_p2550; assert_equal("2035", worksheet.lever_graphs_p2550); end
  def test_lever_graphs_q2550; assert_equal("2040", worksheet.lever_graphs_q2550); end
  def test_lever_graphs_r2550; assert_equal("2045", worksheet.lever_graphs_r2550); end
  def test_lever_graphs_s2550; assert_equal("2050", worksheet.lever_graphs_s2550); end
  def test_lever_graphs_b2551; assert_equal("Historic data", worksheet.lever_graphs_b2551); end
  def test_lever_graphs_b2552; assert_in_delta(1.0, worksheet.lever_graphs_b2552, 0.002); end
  def test_lever_graphs_k2552; assert_in_delta(0.9556862861159037, worksheet.lever_graphs_k2552, 0.002); end
  def test_lever_graphs_l2552; assert_in_delta(0.98, worksheet.lever_graphs_l2552, 0.002); end
  def test_lever_graphs_m2552; assert_in_epsilon(1.044789918453408, worksheet.lever_graphs_m2552, 0.002); end
  def test_lever_graphs_n2552; assert_in_epsilon(1.109579836906816, worksheet.lever_graphs_n2552, 0.002); end
  def test_lever_graphs_o2552; assert_in_epsilon(1.1743697553602237, worksheet.lever_graphs_o2552, 0.002); end
  def test_lever_graphs_p2552; assert_in_epsilon(1.2391596738136317, worksheet.lever_graphs_p2552, 0.002); end
  def test_lever_graphs_q2552; assert_in_epsilon(1.3039495922670399, worksheet.lever_graphs_q2552, 0.002); end
  def test_lever_graphs_r2552; assert_in_epsilon(1.3687395107204474, worksheet.lever_graphs_r2552, 0.002); end
  def test_lever_graphs_s2552; assert_in_epsilon(1.4335294291738556, worksheet.lever_graphs_s2552, 0.002); end
  def test_lever_graphs_b2553; assert_in_epsilon(2.0, worksheet.lever_graphs_b2553, 0.002); end
  def test_lever_graphs_k2553; assert_in_delta(0.9556862861159037, worksheet.lever_graphs_k2553, 0.002); end
  def test_lever_graphs_l2553; assert_in_delta(0.98, worksheet.lever_graphs_l2553, 0.002); end
  def test_lever_graphs_m2553; assert_in_epsilon(1.0174845959929535, worksheet.lever_graphs_m2553, 0.002); end
  def test_lever_graphs_n2553; assert_in_epsilon(1.054969191985907, worksheet.lever_graphs_n2553, 0.002); end
  def test_lever_graphs_o2553; assert_in_epsilon(1.0924537879788605, worksheet.lever_graphs_o2553, 0.002); end
  def test_lever_graphs_p2553; assert_in_epsilon(1.129938383971814, worksheet.lever_graphs_p2553, 0.002); end
  def test_lever_graphs_q2553; assert_in_epsilon(1.1674229799647677, worksheet.lever_graphs_q2553, 0.002); end
  def test_lever_graphs_r2553; assert_in_epsilon(1.204907575957721, worksheet.lever_graphs_r2553, 0.002); end
  def test_lever_graphs_s2553; assert_in_epsilon(1.2423921719506748, worksheet.lever_graphs_s2553, 0.002); end
  def test_lever_graphs_b2554; assert_in_epsilon(3.0, worksheet.lever_graphs_b2554, 0.002); end
  def test_lever_graphs_k2554; assert_in_delta(0.9556862861159037, worksheet.lever_graphs_k2554, 0.002); end
  def test_lever_graphs_l2554; assert_in_delta(0.98, worksheet.lever_graphs_l2554, 0.002); end
  def test_lever_graphs_m2554; assert_in_epsilon(1.001101402516681, worksheet.lever_graphs_m2554, 0.002); end
  def test_lever_graphs_n2554; assert_in_epsilon(1.0222028050333618, worksheet.lever_graphs_n2554, 0.002); end
  def test_lever_graphs_o2554; assert_in_epsilon(1.0433042075500427, worksheet.lever_graphs_o2554, 0.002); end
  def test_lever_graphs_p2554; assert_in_epsilon(1.0644056100667236, worksheet.lever_graphs_p2554, 0.002); end
  def test_lever_graphs_q2554; assert_in_epsilon(1.0855070125834045, worksheet.lever_graphs_q2554, 0.002); end
  def test_lever_graphs_r2554; assert_in_epsilon(1.1066084151000855, worksheet.lever_graphs_r2554, 0.002); end
  def test_lever_graphs_s2554; assert_in_epsilon(1.1277098176167664, worksheet.lever_graphs_s2554, 0.002); end
  def test_lever_graphs_b2555; assert_in_epsilon(4.0, worksheet.lever_graphs_b2555, 0.002); end
  def test_lever_graphs_k2555; assert_in_delta(0.9556862861159037, worksheet.lever_graphs_k2555, 0.002); end
  def test_lever_graphs_l2555; assert_in_delta(0.98, worksheet.lever_graphs_l2555, 0.002); end
  def test_lever_graphs_m2555; assert_in_delta(0.9833529429173855, worksheet.lever_graphs_m2555, 0.002); end
  def test_lever_graphs_n2555; assert_in_delta(0.986705885834771, worksheet.lever_graphs_n2555, 0.002); end
  def test_lever_graphs_o2555; assert_in_delta(0.9900588287521566, worksheet.lever_graphs_o2555, 0.002); end
  def test_lever_graphs_p2555; assert_in_delta(0.9934117716695421, worksheet.lever_graphs_p2555, 0.002); end
  def test_lever_graphs_q2555; assert_in_delta(0.9967647145869278, worksheet.lever_graphs_q2555, 0.002); end
  def test_lever_graphs_r2555; assert_in_epsilon(1.0001176575043131, worksheet.lever_graphs_r2555, 0.002); end
  def test_lever_graphs_s2555; assert_in_epsilon(1.0034706004216989, worksheet.lever_graphs_s2555, 0.002); end
  def test_lever_graphs_c3932; assert_equal("1975", worksheet.lever_graphs_c3932); end
  def test_lever_graphs_d3932; assert_equal("1980", worksheet.lever_graphs_d3932); end
  def test_lever_graphs_e3932; assert_equal("1985", worksheet.lever_graphs_e3932); end
  def test_lever_graphs_f3932; assert_equal("1990", worksheet.lever_graphs_f3932); end
  def test_lever_graphs_g3932; assert_equal("1995", worksheet.lever_graphs_g3932); end
  def test_lever_graphs_h3932; assert_equal("2000", worksheet.lever_graphs_h3932); end
  def test_lever_graphs_i3932; assert_equal("2005", worksheet.lever_graphs_i3932); end
  def test_lever_graphs_j3932; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3932, 0.002); end
  def test_lever_graphs_k3932; assert_equal("2011", worksheet.lever_graphs_k3932); end
  def test_lever_graphs_l3932; assert_equal("2015", worksheet.lever_graphs_l3932); end
  def test_lever_graphs_m3932; assert_equal("2020", worksheet.lever_graphs_m3932); end
  def test_lever_graphs_n3932; assert_equal("2025", worksheet.lever_graphs_n3932); end
  def test_lever_graphs_o3932; assert_equal("2030", worksheet.lever_graphs_o3932); end
  def test_lever_graphs_p3932; assert_equal("2035", worksheet.lever_graphs_p3932); end
  def test_lever_graphs_q3932; assert_equal("2040", worksheet.lever_graphs_q3932); end
  def test_lever_graphs_r3932; assert_equal("2045", worksheet.lever_graphs_r3932); end
  def test_lever_graphs_s3932; assert_equal("2050", worksheet.lever_graphs_s3932); end
  def test_lever_graphs_b3933; assert_equal("Historic data", worksheet.lever_graphs_b3933); end
  def test_lever_graphs_c3933; assert_in_delta(0.44, worksheet.lever_graphs_c3933, 0.002); end
  def test_lever_graphs_d3933; assert_in_delta(0.44, worksheet.lever_graphs_d3933, 0.002); end
  def test_lever_graphs_e3933; assert_in_delta(0.44, worksheet.lever_graphs_e3933, 0.002); end
  def test_lever_graphs_f3933; assert_in_delta(0.44, worksheet.lever_graphs_f3933, 0.002); end
  def test_lever_graphs_g3933; assert_in_delta(0.44, worksheet.lever_graphs_g3933, 0.002); end
  def test_lever_graphs_h3933; assert_in_delta(0.44, worksheet.lever_graphs_h3933, 0.002); end
  def test_lever_graphs_i3933; assert_in_delta(0.44, worksheet.lever_graphs_i3933, 0.002); end
  def test_lever_graphs_j3933; assert_in_delta(0.44, worksheet.lever_graphs_j3933, 0.002); end
  def test_lever_graphs_k3933; assert_in_delta(0.44, worksheet.lever_graphs_k3933, 0.002); end
  def test_lever_graphs_b3934; assert_in_delta(1.0, worksheet.lever_graphs_b3934, 0.002); end
  def test_lever_graphs_l3934; assert_in_delta(0.44, worksheet.lever_graphs_l3934, 0.002); end
  def test_lever_graphs_m3934; assert_in_delta(0.43176470588235294, worksheet.lever_graphs_m3934, 0.002); end
  def test_lever_graphs_n3934; assert_in_delta(0.4235294117647059, worksheet.lever_graphs_n3934, 0.002); end
  def test_lever_graphs_o3934; assert_in_delta(0.4152941176470588, worksheet.lever_graphs_o3934, 0.002); end
  def test_lever_graphs_p3934; assert_in_delta(0.40705882352941175, worksheet.lever_graphs_p3934, 0.002); end
  def test_lever_graphs_q3934; assert_in_delta(0.3988235294117647, worksheet.lever_graphs_q3934, 0.002); end
  def test_lever_graphs_r3934; assert_in_delta(0.3905882352941176, worksheet.lever_graphs_r3934, 0.002); end
  def test_lever_graphs_s3934; assert_in_delta(0.38235294117647056, worksheet.lever_graphs_s3934, 0.002); end
  def test_lever_graphs_b3935; assert_in_epsilon(2.0, worksheet.lever_graphs_b3935, 0.002); end
  def test_lever_graphs_l3935; assert_in_delta(0.44, worksheet.lever_graphs_l3935, 0.002); end
  def test_lever_graphs_m3935; assert_in_delta(0.44, worksheet.lever_graphs_m3935, 0.002); end
  def test_lever_graphs_n3935; assert_in_delta(0.44, worksheet.lever_graphs_n3935, 0.002); end
  def test_lever_graphs_o3935; assert_in_delta(0.44, worksheet.lever_graphs_o3935, 0.002); end
  def test_lever_graphs_p3935; assert_in_delta(0.44, worksheet.lever_graphs_p3935, 0.002); end
  def test_lever_graphs_q3935; assert_in_delta(0.44, worksheet.lever_graphs_q3935, 0.002); end
  def test_lever_graphs_r3935; assert_in_delta(0.44, worksheet.lever_graphs_r3935, 0.002); end
  def test_lever_graphs_s3935; assert_in_delta(0.44, worksheet.lever_graphs_s3935, 0.002); end
  def test_lever_graphs_b3936; assert_in_epsilon(3.0, worksheet.lever_graphs_b3936, 0.002); end
  def test_lever_graphs_l3936; assert_in_delta(0.44, worksheet.lever_graphs_l3936, 0.002); end
  def test_lever_graphs_m3936; assert_in_delta(0.44941176470588234, worksheet.lever_graphs_m3936, 0.002); end
  def test_lever_graphs_n3936; assert_in_delta(0.4588235294117647, worksheet.lever_graphs_n3936, 0.002); end
  def test_lever_graphs_o3936; assert_in_delta(0.4682352941176471, worksheet.lever_graphs_o3936, 0.002); end
  def test_lever_graphs_p3936; assert_in_delta(0.4776470588235294, worksheet.lever_graphs_p3936, 0.002); end
  def test_lever_graphs_q3936; assert_in_delta(0.48705882352941177, worksheet.lever_graphs_q3936, 0.002); end
  def test_lever_graphs_r3936; assert_in_delta(0.4964705882352941, worksheet.lever_graphs_r3936, 0.002); end
  def test_lever_graphs_s3936; assert_in_delta(0.5058823529411764, worksheet.lever_graphs_s3936, 0.002); end
  def test_lever_graphs_b3937; assert_in_epsilon(4.0, worksheet.lever_graphs_b3937, 0.002); end
  def test_lever_graphs_l3937; assert_in_delta(0.44, worksheet.lever_graphs_l3937, 0.002); end
  def test_lever_graphs_m3937; assert_in_delta(0.4576470588235294, worksheet.lever_graphs_m3937, 0.002); end
  def test_lever_graphs_n3937; assert_in_delta(0.4752941176470588, worksheet.lever_graphs_n3937, 0.002); end
  def test_lever_graphs_o3937; assert_in_delta(0.4929411764705882, worksheet.lever_graphs_o3937, 0.002); end
  def test_lever_graphs_p3937; assert_in_delta(0.5105882352941177, worksheet.lever_graphs_p3937, 0.002); end
  def test_lever_graphs_q3937; assert_in_delta(0.528235294117647, worksheet.lever_graphs_q3937, 0.002); end
  def test_lever_graphs_r3937; assert_in_delta(0.5458823529411765, worksheet.lever_graphs_r3937, 0.002); end
  def test_lever_graphs_s3937; assert_in_delta(0.5635294117647058, worksheet.lever_graphs_s3937, 0.002); end
  def test_lever_graphs_c3368; assert_equal("1975", worksheet.lever_graphs_c3368); end
  def test_lever_graphs_d3368; assert_equal("1980", worksheet.lever_graphs_d3368); end
  def test_lever_graphs_e3368; assert_equal("1985", worksheet.lever_graphs_e3368); end
  def test_lever_graphs_f3368; assert_equal("1990", worksheet.lever_graphs_f3368); end
  def test_lever_graphs_g3368; assert_equal("1995", worksheet.lever_graphs_g3368); end
  def test_lever_graphs_h3368; assert_equal("2000", worksheet.lever_graphs_h3368); end
  def test_lever_graphs_i3368; assert_equal("2005", worksheet.lever_graphs_i3368); end
  def test_lever_graphs_j3368; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3368, 0.002); end
  def test_lever_graphs_k3368; assert_equal("2011", worksheet.lever_graphs_k3368); end
  def test_lever_graphs_l3368; assert_equal("2015", worksheet.lever_graphs_l3368); end
  def test_lever_graphs_m3368; assert_equal("2020", worksheet.lever_graphs_m3368); end
  def test_lever_graphs_n3368; assert_equal("2025", worksheet.lever_graphs_n3368); end
  def test_lever_graphs_o3368; assert_equal("2030", worksheet.lever_graphs_o3368); end
  def test_lever_graphs_p3368; assert_equal("2035", worksheet.lever_graphs_p3368); end
  def test_lever_graphs_q3368; assert_equal("2040", worksheet.lever_graphs_q3368); end
  def test_lever_graphs_r3368; assert_equal("2045", worksheet.lever_graphs_r3368); end
  def test_lever_graphs_s3368; assert_equal("2050", worksheet.lever_graphs_s3368); end
  def test_lever_graphs_b3369; assert_equal("Historic data", worksheet.lever_graphs_b3369); end
  def test_lever_graphs_b3370; assert_in_delta(1.0, worksheet.lever_graphs_b3370, 0.002); end
  def test_lever_graphs_k3370; assert_in_delta(0.4, worksheet.lever_graphs_k3370, 0.002); end
  def test_lever_graphs_l3370; assert_in_delta(0.4, worksheet.lever_graphs_l3370, 0.002); end
  def test_lever_graphs_m3370; assert_in_delta(0.37142857142857144, worksheet.lever_graphs_m3370, 0.002); end
  def test_lever_graphs_n3370; assert_in_delta(0.34285714285714286, worksheet.lever_graphs_n3370, 0.002); end
  def test_lever_graphs_o3370; assert_in_delta(0.3142857142857143, worksheet.lever_graphs_o3370, 0.002); end
  def test_lever_graphs_p3370; assert_in_delta(0.2857142857142857, worksheet.lever_graphs_p3370, 0.002); end
  def test_lever_graphs_q3370; assert_in_delta(0.2571428571428571, worksheet.lever_graphs_q3370, 0.002); end
  def test_lever_graphs_r3370; assert_in_delta(0.22857142857142854, worksheet.lever_graphs_r3370, 0.002); end
  def test_lever_graphs_s3370; assert_in_delta(0.19999999999999996, worksheet.lever_graphs_s3370, 0.002); end
  def test_lever_graphs_b3371; assert_in_epsilon(2.0, worksheet.lever_graphs_b3371, 0.002); end
  def test_lever_graphs_k3371; assert_in_delta(0.4, worksheet.lever_graphs_k3371, 0.002); end
  def test_lever_graphs_l3371; assert_in_delta(0.4, worksheet.lever_graphs_l3371, 0.002); end
  def test_lever_graphs_m3371; assert_in_delta(0.4, worksheet.lever_graphs_m3371, 0.002); end
  def test_lever_graphs_n3371; assert_in_delta(0.4, worksheet.lever_graphs_n3371, 0.002); end
  def test_lever_graphs_o3371; assert_in_delta(0.4, worksheet.lever_graphs_o3371, 0.002); end
  def test_lever_graphs_p3371; assert_in_delta(0.4, worksheet.lever_graphs_p3371, 0.002); end
  def test_lever_graphs_q3371; assert_in_delta(0.4, worksheet.lever_graphs_q3371, 0.002); end
  def test_lever_graphs_r3371; assert_in_delta(0.4, worksheet.lever_graphs_r3371, 0.002); end
  def test_lever_graphs_s3371; assert_in_delta(0.4, worksheet.lever_graphs_s3371, 0.002); end
  def test_lever_graphs_b3372; assert_in_epsilon(3.0, worksheet.lever_graphs_b3372, 0.002); end
  def test_lever_graphs_k3372; assert_in_delta(0.4, worksheet.lever_graphs_k3372, 0.002); end
  def test_lever_graphs_l3372; assert_in_delta(0.4, worksheet.lever_graphs_l3372, 0.002); end
  def test_lever_graphs_m3372; assert_in_delta(0.4285714285714286, worksheet.lever_graphs_m3372, 0.002); end
  def test_lever_graphs_n3372; assert_in_delta(0.4571428571428572, worksheet.lever_graphs_n3372, 0.002); end
  def test_lever_graphs_o3372; assert_in_delta(0.48571428571428577, worksheet.lever_graphs_o3372, 0.002); end
  def test_lever_graphs_p3372; assert_in_delta(0.5142857142857142, worksheet.lever_graphs_p3372, 0.002); end
  def test_lever_graphs_q3372; assert_in_delta(0.5428571428571428, worksheet.lever_graphs_q3372, 0.002); end
  def test_lever_graphs_r3372; assert_in_delta(0.5714285714285714, worksheet.lever_graphs_r3372, 0.002); end
  def test_lever_graphs_s3372; assert_in_delta(0.6, worksheet.lever_graphs_s3372, 0.002); end
  def test_lever_graphs_b3373; assert_in_epsilon(4.0, worksheet.lever_graphs_b3373, 0.002); end
  def test_lever_graphs_k3373; assert_in_delta(0.4, worksheet.lever_graphs_k3373, 0.002); end
  def test_lever_graphs_l3373; assert_in_delta(0.4, worksheet.lever_graphs_l3373, 0.002); end
  def test_lever_graphs_m3373; assert_in_delta(0.4571428571428572, worksheet.lever_graphs_m3373, 0.002); end
  def test_lever_graphs_n3373; assert_in_delta(0.5142857142857142, worksheet.lever_graphs_n3373, 0.002); end
  def test_lever_graphs_o3373; assert_in_delta(0.5714285714285714, worksheet.lever_graphs_o3373, 0.002); end
  def test_lever_graphs_p3373; assert_in_delta(0.6285714285714286, worksheet.lever_graphs_p3373, 0.002); end
  def test_lever_graphs_q3373; assert_in_delta(0.6857142857142857, worksheet.lever_graphs_q3373, 0.002); end
  def test_lever_graphs_r3373; assert_in_delta(0.7428571428571429, worksheet.lever_graphs_r3373, 0.002); end
  def test_lever_graphs_s3373; assert_in_delta(0.8, worksheet.lever_graphs_s3373, 0.002); end
  def test_lever_graphs_c3324; assert_equal("1975", worksheet.lever_graphs_c3324); end
  def test_lever_graphs_d3324; assert_equal("1980", worksheet.lever_graphs_d3324); end
  def test_lever_graphs_e3324; assert_equal("1985", worksheet.lever_graphs_e3324); end
  def test_lever_graphs_f3324; assert_equal("1990", worksheet.lever_graphs_f3324); end
  def test_lever_graphs_g3324; assert_equal("1995", worksheet.lever_graphs_g3324); end
  def test_lever_graphs_h3324; assert_equal("2000", worksheet.lever_graphs_h3324); end
  def test_lever_graphs_i3324; assert_equal("2005", worksheet.lever_graphs_i3324); end
  def test_lever_graphs_j3324; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3324, 0.002); end
  def test_lever_graphs_k3324; assert_equal("2011", worksheet.lever_graphs_k3324); end
  def test_lever_graphs_l3324; assert_equal("2015", worksheet.lever_graphs_l3324); end
  def test_lever_graphs_m3324; assert_equal("2020", worksheet.lever_graphs_m3324); end
  def test_lever_graphs_n3324; assert_equal("2025", worksheet.lever_graphs_n3324); end
  def test_lever_graphs_o3324; assert_equal("2030", worksheet.lever_graphs_o3324); end
  def test_lever_graphs_p3324; assert_equal("2035", worksheet.lever_graphs_p3324); end
  def test_lever_graphs_q3324; assert_equal("2040", worksheet.lever_graphs_q3324); end
  def test_lever_graphs_r3324; assert_equal("2045", worksheet.lever_graphs_r3324); end
  def test_lever_graphs_s3324; assert_equal("2050", worksheet.lever_graphs_s3324); end
  def test_lever_graphs_b3325; assert_equal("Historic data", worksheet.lever_graphs_b3325); end
  def test_lever_graphs_b3326; assert_equal("Europe, oilseed rape", worksheet.lever_graphs_b3326); end
  def test_lever_graphs_k3326; assert_in_delta(0.206, worksheet.lever_graphs_k3326, 0.002); end
  def test_lever_graphs_b3327; assert_equal("North America, soya bean", worksheet.lever_graphs_b3327); end
  def test_lever_graphs_k3327; assert_in_delta(0.055, worksheet.lever_graphs_k3327, 0.002); end
  def test_lever_graphs_b3328; assert_equal("Asia, palm oil", worksheet.lever_graphs_b3328); end
  def test_lever_graphs_k3328; assert_in_delta(0.531, worksheet.lever_graphs_k3328, 0.002); end
  def test_lever_graphs_b3329; assert_equal("Europe, wheat", worksheet.lever_graphs_b3329); end
  def test_lever_graphs_k3329; assert_in_delta(0.177, worksheet.lever_graphs_k3329, 0.002); end
  def test_lever_graphs_b3330; assert_equal("North America, maize", worksheet.lever_graphs_b3330); end
  def test_lever_graphs_k3330; assert_in_delta(0.239, worksheet.lever_graphs_k3330, 0.002); end
  def test_lever_graphs_b3331; assert_equal("Brazil, sugar cane", worksheet.lever_graphs_b3331); end
  def test_lever_graphs_k3331; assert_in_delta(0.42, worksheet.lever_graphs_k3331, 0.002); end
  def test_lever_graphs_b3332; assert_equal("China, sorghum", worksheet.lever_graphs_b3332); end
  def test_lever_graphs_k3332; assert_in_delta(0.42, worksheet.lever_graphs_k3332, 0.002); end
  def test_lever_graphs_b3333; assert_equal("Europe, willow SRC", worksheet.lever_graphs_b3333); end
  def test_lever_graphs_k3333; assert_in_delta(0.444, worksheet.lever_graphs_k3333, 0.002); end
  def test_lever_graphs_b3334; assert_equal("Europe, miscanthus", worksheet.lever_graphs_b3334); end
  def test_lever_graphs_k3334; assert_in_delta(0.745, worksheet.lever_graphs_k3334, 0.002); end
  def test_lever_graphs_b3335; assert_equal("South America, Eucalyptus", worksheet.lever_graphs_b3335); end
  def test_lever_graphs_k3335; assert_in_delta(0.895, worksheet.lever_graphs_k3335, 0.002); end
  def test_lever_graphs_b3336; assert_in_delta(1.0, worksheet.lever_graphs_b3336, 0.002); end
  def test_lever_graphs_k3336; assert_in_delta(0.3839755538689732, worksheet.lever_graphs_k3336, 0.002); end
  def test_lever_graphs_l3336; assert_in_delta(0.4036666079135359, worksheet.lever_graphs_l3336, 0.002); end
  def test_lever_graphs_m3336; assert_in_delta(0.4118243303034262, worksheet.lever_graphs_m3336, 0.002); end
  def test_lever_graphs_n3336; assert_in_delta(0.41998205269331645, worksheet.lever_graphs_n3336, 0.002); end
  def test_lever_graphs_o3336; assert_in_delta(0.4281397750832067, worksheet.lever_graphs_o3336, 0.002); end
  def test_lever_graphs_p3336; assert_in_delta(0.436297497473097, worksheet.lever_graphs_p3336, 0.002); end
  def test_lever_graphs_q3336; assert_in_delta(0.44445521986298725, worksheet.lever_graphs_q3336, 0.002); end
  def test_lever_graphs_r3336; assert_in_delta(0.45261294225287757, worksheet.lever_graphs_r3336, 0.002); end
  def test_lever_graphs_s3336; assert_in_delta(0.46077066464276784, worksheet.lever_graphs_s3336, 0.002); end
  def test_lever_graphs_b3337; assert_in_epsilon(2.0, worksheet.lever_graphs_b3337, 0.002); end
  def test_lever_graphs_k3337; assert_in_delta(0.3839755538689732, worksheet.lever_graphs_k3337, 0.002); end
  def test_lever_graphs_l3337; assert_in_delta(0.4036666079135359, worksheet.lever_graphs_l3337, 0.002); end
  def test_lever_graphs_m3337; assert_in_delta(0.4282804254692394, worksheet.lever_graphs_m3337, 0.002); end
  def test_lever_graphs_n3337; assert_in_delta(0.4528942430249427, worksheet.lever_graphs_n3337, 0.002); end
  def test_lever_graphs_o3337; assert_in_delta(0.47750806058064615, worksheet.lever_graphs_o3337, 0.002); end
  def test_lever_graphs_p3337; assert_in_delta(0.5021218781363497, worksheet.lever_graphs_p3337, 0.002); end
  def test_lever_graphs_q3337; assert_in_delta(0.5267356956920529, worksheet.lever_graphs_q3337, 0.002); end
  def test_lever_graphs_r3337; assert_in_delta(0.5513495132477564, worksheet.lever_graphs_r3337, 0.002); end
  def test_lever_graphs_s3337; assert_in_delta(0.5759633308034597, worksheet.lever_graphs_s3337, 0.002); end
  def test_lever_graphs_b3338; assert_in_epsilon(3.0, worksheet.lever_graphs_b3338, 0.002); end
  def test_lever_graphs_k3338; assert_in_delta(0.3839755538689732, worksheet.lever_graphs_k3338, 0.002); end
  def test_lever_graphs_l3338; assert_in_delta(0.4036666079135359, worksheet.lever_graphs_l3338, 0.002); end
  def test_lever_graphs_m3338; assert_in_delta(0.4666779808561366, worksheet.lever_graphs_m3338, 0.002); end
  def test_lever_graphs_n3338; assert_in_delta(0.5296893537987374, worksheet.lever_graphs_n3338, 0.002); end
  def test_lever_graphs_o3338; assert_in_delta(0.5927007267413381, worksheet.lever_graphs_o3338, 0.002); end
  def test_lever_graphs_p3338; assert_in_delta(0.6557120996839387, worksheet.lever_graphs_p3338, 0.002); end
  def test_lever_graphs_q3338; assert_in_delta(0.7187234726265396, worksheet.lever_graphs_q3338, 0.002); end
  def test_lever_graphs_r3338; assert_in_delta(0.7817348455691402, worksheet.lever_graphs_r3338, 0.002); end
  def test_lever_graphs_s3338; assert_in_delta(0.844746218511741, worksheet.lever_graphs_s3338, 0.002); end
  def test_lever_graphs_b3339; assert_in_epsilon(4.0, worksheet.lever_graphs_b3339, 0.002); end
  def test_lever_graphs_k3339; assert_in_delta(0.3839755538689732, worksheet.lever_graphs_k3339, 0.002); end
  def test_lever_graphs_l3339; assert_in_delta(0.4036666079135359, worksheet.lever_graphs_l3339, 0.002); end
  def test_lever_graphs_m3339; assert_in_delta(0.510560901298305, worksheet.lever_graphs_m3339, 0.002); end
  def test_lever_graphs_n3339; assert_in_delta(0.6174551946830741, worksheet.lever_graphs_n3339, 0.002); end
  def test_lever_graphs_o3339; assert_in_delta(0.7243494880678433, worksheet.lever_graphs_o3339, 0.002); end
  def test_lever_graphs_p3339; assert_in_delta(0.8312437814526122, worksheet.lever_graphs_p3339, 0.002); end
  def test_lever_graphs_q3339; assert_in_delta(0.9381380748373813, worksheet.lever_graphs_q3339, 0.002); end
  def test_lever_graphs_r3339; assert_in_epsilon(1.0450323682221505, worksheet.lever_graphs_r3339, 0.002); end
  def test_lever_graphs_s3339; assert_in_epsilon(1.1519266616069195, worksheet.lever_graphs_s3339, 0.002); end
  def test_lever_graphs_c3315; assert_equal("1975", worksheet.lever_graphs_c3315); end
  def test_lever_graphs_d3315; assert_equal("1980", worksheet.lever_graphs_d3315); end
  def test_lever_graphs_e3315; assert_equal("1985", worksheet.lever_graphs_e3315); end
  def test_lever_graphs_f3315; assert_equal("1990", worksheet.lever_graphs_f3315); end
  def test_lever_graphs_g3315; assert_equal("1995", worksheet.lever_graphs_g3315); end
  def test_lever_graphs_h3315; assert_equal("2000", worksheet.lever_graphs_h3315); end
  def test_lever_graphs_i3315; assert_equal("2005", worksheet.lever_graphs_i3315); end
  def test_lever_graphs_j3315; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3315, 0.002); end
  def test_lever_graphs_k3315; assert_equal("2011", worksheet.lever_graphs_k3315); end
  def test_lever_graphs_l3315; assert_equal("2015", worksheet.lever_graphs_l3315); end
  def test_lever_graphs_m3315; assert_equal("2020", worksheet.lever_graphs_m3315); end
  def test_lever_graphs_n3315; assert_equal("2025", worksheet.lever_graphs_n3315); end
  def test_lever_graphs_o3315; assert_equal("2030", worksheet.lever_graphs_o3315); end
  def test_lever_graphs_p3315; assert_equal("2035", worksheet.lever_graphs_p3315); end
  def test_lever_graphs_q3315; assert_equal("2040", worksheet.lever_graphs_q3315); end
  def test_lever_graphs_r3315; assert_equal("2045", worksheet.lever_graphs_r3315); end
  def test_lever_graphs_s3315; assert_equal("2050", worksheet.lever_graphs_s3315); end
  def test_lever_graphs_b3316; assert_equal("Historic data", worksheet.lever_graphs_b3316); end
  def test_lever_graphs_b3317; assert_in_delta(1.0, worksheet.lever_graphs_b3317, 0.002); end
  def test_lever_graphs_k3317; assert_in_delta(0.0, (worksheet.lever_graphs_k3317||0), 0.002); end
  def test_lever_graphs_l3317; assert_in_delta(0.05128205128205128, worksheet.lever_graphs_l3317, 0.002); end
  def test_lever_graphs_m3317; assert_in_delta(0.07252747252747253, worksheet.lever_graphs_m3317, 0.002); end
  def test_lever_graphs_n3317; assert_in_delta(0.09377289377289377, worksheet.lever_graphs_n3317, 0.002); end
  def test_lever_graphs_o3317; assert_in_delta(0.11501831501831503, worksheet.lever_graphs_o3317, 0.002); end
  def test_lever_graphs_p3317; assert_in_delta(0.13626373626373628, worksheet.lever_graphs_p3317, 0.002); end
  def test_lever_graphs_q3317; assert_in_delta(0.15750915750915753, worksheet.lever_graphs_q3317, 0.002); end
  def test_lever_graphs_r3317; assert_in_delta(0.17875457875457879, worksheet.lever_graphs_r3317, 0.002); end
  def test_lever_graphs_s3317; assert_in_delta(0.2, worksheet.lever_graphs_s3317, 0.002); end
  def test_lever_graphs_b3318; assert_in_epsilon(2.0, worksheet.lever_graphs_b3318, 0.002); end
  def test_lever_graphs_k3318; assert_in_delta(0.0, (worksheet.lever_graphs_k3318||0), 0.002); end
  def test_lever_graphs_l3318; assert_in_delta(0.05128205128205128, worksheet.lever_graphs_l3318, 0.002); end
  def test_lever_graphs_m3318; assert_in_delta(0.11538461538461538, worksheet.lever_graphs_m3318, 0.002); end
  def test_lever_graphs_n3318; assert_in_delta(0.17948717948717946, worksheet.lever_graphs_n3318, 0.002); end
  def test_lever_graphs_o3318; assert_in_delta(0.24358974358974356, worksheet.lever_graphs_o3318, 0.002); end
  def test_lever_graphs_p3318; assert_in_delta(0.30769230769230765, worksheet.lever_graphs_p3318, 0.002); end
  def test_lever_graphs_q3318; assert_in_delta(0.3717948717948718, worksheet.lever_graphs_q3318, 0.002); end
  def test_lever_graphs_r3318; assert_in_delta(0.43589743589743585, worksheet.lever_graphs_r3318, 0.002); end
  def test_lever_graphs_s3318; assert_in_delta(0.5, worksheet.lever_graphs_s3318, 0.002); end
  def test_lever_graphs_b3319; assert_in_epsilon(3.0, worksheet.lever_graphs_b3319, 0.002); end
  def test_lever_graphs_k3319; assert_in_delta(0.0, (worksheet.lever_graphs_k3319||0), 0.002); end
  def test_lever_graphs_l3319; assert_in_delta(0.05128205128205128, worksheet.lever_graphs_l3319, 0.002); end
  def test_lever_graphs_m3319; assert_in_delta(0.21538461538461534, worksheet.lever_graphs_m3319, 0.002); end
  def test_lever_graphs_n3319; assert_in_delta(0.3794871794871794, worksheet.lever_graphs_n3319, 0.002); end
  def test_lever_graphs_o3319; assert_in_delta(0.5435897435897435, worksheet.lever_graphs_o3319, 0.002); end
  def test_lever_graphs_p3319; assert_in_delta(0.7076923076923076, worksheet.lever_graphs_p3319, 0.002); end
  def test_lever_graphs_q3319; assert_in_delta(0.8717948717948718, worksheet.lever_graphs_q3319, 0.002); end
  def test_lever_graphs_r3319; assert_in_epsilon(1.0358974358974358, worksheet.lever_graphs_r3319, 0.002); end
  def test_lever_graphs_s3319; assert_in_epsilon(1.2, worksheet.lever_graphs_s3319, 0.002); end
  def test_lever_graphs_b3320; assert_in_epsilon(4.0, worksheet.lever_graphs_b3320, 0.002); end
  def test_lever_graphs_k3320; assert_in_delta(0.0, (worksheet.lever_graphs_k3320||0), 0.002); end
  def test_lever_graphs_l3320; assert_in_delta(0.05128205128205128, worksheet.lever_graphs_l3320, 0.002); end
  def test_lever_graphs_m3320; assert_in_delta(0.3296703296703296, worksheet.lever_graphs_m3320, 0.002); end
  def test_lever_graphs_n3320; assert_in_delta(0.608058608058608, worksheet.lever_graphs_n3320, 0.002); end
  def test_lever_graphs_o3320; assert_in_delta(0.8864468864468864, worksheet.lever_graphs_o3320, 0.002); end
  def test_lever_graphs_p3320; assert_in_epsilon(1.1648351648351647, worksheet.lever_graphs_p3320, 0.002); end
  def test_lever_graphs_q3320; assert_in_epsilon(1.4432234432234432, worksheet.lever_graphs_q3320, 0.002); end
  def test_lever_graphs_r3320; assert_in_epsilon(1.7216117216117215, worksheet.lever_graphs_r3320, 0.002); end
  def test_lever_graphs_s3320; assert_in_epsilon(2.0, worksheet.lever_graphs_s3320, 0.002); end
  def test_lever_graphs_c3343; assert_equal("1975", worksheet.lever_graphs_c3343); end
  def test_lever_graphs_d3343; assert_equal("1980", worksheet.lever_graphs_d3343); end
  def test_lever_graphs_e3343; assert_equal("1985", worksheet.lever_graphs_e3343); end
  def test_lever_graphs_f3343; assert_equal("1990", worksheet.lever_graphs_f3343); end
  def test_lever_graphs_g3343; assert_equal("1995", worksheet.lever_graphs_g3343); end
  def test_lever_graphs_h3343; assert_equal("2000", worksheet.lever_graphs_h3343); end
  def test_lever_graphs_i3343; assert_equal("2005", worksheet.lever_graphs_i3343); end
  def test_lever_graphs_j3343; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3343, 0.002); end
  def test_lever_graphs_k3343; assert_equal("2011", worksheet.lever_graphs_k3343); end
  def test_lever_graphs_l3343; assert_equal("2015", worksheet.lever_graphs_l3343); end
  def test_lever_graphs_m3343; assert_equal("2020", worksheet.lever_graphs_m3343); end
  def test_lever_graphs_n3343; assert_equal("2025", worksheet.lever_graphs_n3343); end
  def test_lever_graphs_o3343; assert_equal("2030", worksheet.lever_graphs_o3343); end
  def test_lever_graphs_p3343; assert_equal("2035", worksheet.lever_graphs_p3343); end
  def test_lever_graphs_q3343; assert_equal("2040", worksheet.lever_graphs_q3343); end
  def test_lever_graphs_r3343; assert_equal("2045", worksheet.lever_graphs_r3343); end
  def test_lever_graphs_s3343; assert_equal("2050", worksheet.lever_graphs_s3343); end
  def test_lever_graphs_b3344; assert_equal("Historic data", worksheet.lever_graphs_b3344); end
  def test_lever_graphs_b3345; assert_equal("Europe, miscanthus (low)", worksheet.lever_graphs_b3345); end
  def test_lever_graphs_k3345; assert_in_epsilon(10.56, worksheet.lever_graphs_k3345, 0.002); end
  def test_lever_graphs_b3346; assert_equal("Europe, miscanthus (high)", worksheet.lever_graphs_b3346); end
  def test_lever_graphs_k3346; assert_in_epsilon(15.56, worksheet.lever_graphs_k3346, 0.002); end
  def test_lever_graphs_b3347; assert_equal("North America, switchgass (low)", worksheet.lever_graphs_b3347); end
  def test_lever_graphs_k3347; assert_in_epsilon(5.72, worksheet.lever_graphs_k3347, 0.002); end
  def test_lever_graphs_b3348; assert_equal("North America, switchgrass (high)", worksheet.lever_graphs_b3348); end
  def test_lever_graphs_k3348; assert_in_epsilon(8.33, worksheet.lever_graphs_k3348, 0.002); end
  def test_lever_graphs_b3349; assert_equal("South America, eucalyptus (low)", worksheet.lever_graphs_b3349); end
  def test_lever_graphs_k3349; assert_in_epsilon(8.33, worksheet.lever_graphs_k3349, 0.002); end
  def test_lever_graphs_b3350; assert_equal("South America, eucalyptus (high)", worksheet.lever_graphs_b3350); end
  def test_lever_graphs_k3350; assert_in_epsilon(23.1, worksheet.lever_graphs_k3350, 0.002); end
  def test_lever_graphs_b3351; assert_equal("Global average", worksheet.lever_graphs_b3351); end
  def test_lever_graphs_k3351; assert_in_epsilon(6.55, worksheet.lever_graphs_k3351, 0.002); end
  def test_lever_graphs_b3352; assert_equal("Global average on abandoned agricultural land", worksheet.lever_graphs_b3352); end
  def test_lever_graphs_k3352; assert_in_epsilon(4.3, worksheet.lever_graphs_k3352, 0.002); end
  def test_lever_graphs_b3353; assert_in_delta(1.0, worksheet.lever_graphs_b3353, 0.002); end
  def test_lever_graphs_k3353; assert_in_epsilon(6.731859410430838, worksheet.lever_graphs_k3353, 0.002); end
  def test_lever_graphs_l3353; assert_in_epsilon(7.077082969940111, worksheet.lever_graphs_l3353, 0.002); end
  def test_lever_graphs_m3353; assert_in_epsilon(7.220104158879668, worksheet.lever_graphs_m3353, 0.002); end
  def test_lever_graphs_n3353; assert_in_epsilon(7.363125347819224, worksheet.lever_graphs_n3353, 0.002); end
  def test_lever_graphs_o3353; assert_in_epsilon(7.506146536758781, worksheet.lever_graphs_o3353, 0.002); end
  def test_lever_graphs_p3353; assert_in_epsilon(7.649167725698337, worksheet.lever_graphs_p3353, 0.002); end
  def test_lever_graphs_q3353; assert_in_epsilon(7.792188914637894, worksheet.lever_graphs_q3353, 0.002); end
  def test_lever_graphs_r3353; assert_in_epsilon(7.93521010357745, worksheet.lever_graphs_r3353, 0.002); end
  def test_lever_graphs_s3353; assert_in_epsilon(8.078231292517007, worksheet.lever_graphs_s3353, 0.002); end
  def test_lever_graphs_b3354; assert_in_epsilon(2.0, worksheet.lever_graphs_b3354, 0.002); end
  def test_lever_graphs_k3354; assert_in_epsilon(6.731859410430838, worksheet.lever_graphs_k3354, 0.002); end
  def test_lever_graphs_l3354; assert_in_epsilon(7.077082969940111, worksheet.lever_graphs_l3354, 0.002); end
  def test_lever_graphs_m3354; assert_in_epsilon(7.508612419326706, worksheet.lever_graphs_m3354, 0.002); end
  def test_lever_graphs_n3354; assert_in_epsilon(7.9401418687132965, worksheet.lever_graphs_n3354, 0.002); end
  def test_lever_graphs_o3354; assert_in_epsilon(8.371671318099887, worksheet.lever_graphs_o3354, 0.002); end
  def test_lever_graphs_p3354; assert_in_epsilon(8.80320076748648, worksheet.lever_graphs_p3354, 0.002); end
  def test_lever_graphs_q3354; assert_in_epsilon(9.234730216873073, worksheet.lever_graphs_q3354, 0.002); end
  def test_lever_graphs_r3354; assert_in_epsilon(9.666259666259664, worksheet.lever_graphs_r3354, 0.002); end
  def test_lever_graphs_s3354; assert_in_epsilon(10.097789115646258, worksheet.lever_graphs_s3354, 0.002); end
  def test_lever_graphs_b3355; assert_in_epsilon(3.0, worksheet.lever_graphs_b3355, 0.002); end
  def test_lever_graphs_k3355; assert_in_epsilon(6.731859410430838, worksheet.lever_graphs_k3355, 0.002); end
  def test_lever_graphs_l3355; assert_in_epsilon(7.077082969940111, worksheet.lever_graphs_l3355, 0.002); end
  def test_lever_graphs_m3355; assert_in_epsilon(8.181798360369784, worksheet.lever_graphs_m3355, 0.002); end
  def test_lever_graphs_n3355; assert_in_epsilon(9.286513750799465, worksheet.lever_graphs_n3355, 0.002); end
  def test_lever_graphs_o3355; assert_in_epsilon(10.391229141229138, worksheet.lever_graphs_o3355, 0.002); end
  def test_lever_graphs_p3355; assert_in_epsilon(11.495944531658813, worksheet.lever_graphs_p3355, 0.002); end
  def test_lever_graphs_q3355; assert_in_epsilon(12.600659922088493, worksheet.lever_graphs_q3355, 0.002); end
  def test_lever_graphs_r3355; assert_in_epsilon(13.705375312518166, worksheet.lever_graphs_r3355, 0.002); end
  def test_lever_graphs_s3355; assert_in_epsilon(14.810090702947843, worksheet.lever_graphs_s3355, 0.002); end
  def test_lever_graphs_b3356; assert_in_epsilon(4.0, worksheet.lever_graphs_b3356, 0.002); end
  def test_lever_graphs_k3356; assert_in_epsilon(6.731859410430838, worksheet.lever_graphs_k3356, 0.002); end
  def test_lever_graphs_l3356; assert_in_epsilon(7.077082969940111, worksheet.lever_graphs_l3356, 0.002); end
  def test_lever_graphs_m3356; assert_in_epsilon(8.951153721561884, worksheet.lever_graphs_m3356, 0.002); end
  def test_lever_graphs_n3356; assert_in_epsilon(10.825224473183656, worksheet.lever_graphs_n3356, 0.002); end
  def test_lever_graphs_o3356; assert_in_epsilon(12.699295224805427, worksheet.lever_graphs_o3356, 0.002); end
  def test_lever_graphs_p3356; assert_in_epsilon(14.5733659764272, worksheet.lever_graphs_p3356, 0.002); end
  def test_lever_graphs_q3356; assert_in_epsilon(16.447436728048974, worksheet.lever_graphs_q3356, 0.002); end
  def test_lever_graphs_r3356; assert_in_epsilon(18.321507479670743, worksheet.lever_graphs_r3356, 0.002); end
  def test_lever_graphs_s3356; assert_in_epsilon(20.195578231292515, worksheet.lever_graphs_s3356, 0.002); end
  def test_lever_graphs_c2435; assert_equal("1975", worksheet.lever_graphs_c2435); end
  def test_lever_graphs_d2435; assert_equal("1980", worksheet.lever_graphs_d2435); end
  def test_lever_graphs_e2435; assert_equal("1985", worksheet.lever_graphs_e2435); end
  def test_lever_graphs_f2435; assert_equal("1990", worksheet.lever_graphs_f2435); end
  def test_lever_graphs_g2435; assert_equal("1995", worksheet.lever_graphs_g2435); end
  def test_lever_graphs_h2435; assert_equal("2000", worksheet.lever_graphs_h2435); end
  def test_lever_graphs_i2435; assert_equal("2005", worksheet.lever_graphs_i2435); end
  def test_lever_graphs_j2435; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2435, 0.002); end
  def test_lever_graphs_k2435; assert_equal("2011", worksheet.lever_graphs_k2435); end
  def test_lever_graphs_l2435; assert_equal("2015", worksheet.lever_graphs_l2435); end
  def test_lever_graphs_m2435; assert_equal("2020", worksheet.lever_graphs_m2435); end
  def test_lever_graphs_n2435; assert_equal("2025", worksheet.lever_graphs_n2435); end
  def test_lever_graphs_o2435; assert_equal("2030", worksheet.lever_graphs_o2435); end
  def test_lever_graphs_p2435; assert_equal("2035", worksheet.lever_graphs_p2435); end
  def test_lever_graphs_q2435; assert_equal("2040", worksheet.lever_graphs_q2435); end
  def test_lever_graphs_r2435; assert_equal("2045", worksheet.lever_graphs_r2435); end
  def test_lever_graphs_s2435; assert_equal("2050", worksheet.lever_graphs_s2435); end
  def test_lever_graphs_b2436; assert_equal("Historic data", worksheet.lever_graphs_b2436); end
  def test_lever_graphs_b2437; assert_in_delta(1.0, worksheet.lever_graphs_b2437, 0.002); end
  def test_lever_graphs_k2437; assert_in_epsilon(78.0, worksheet.lever_graphs_k2437, 0.002); end
  def test_lever_graphs_l2437; assert_in_epsilon(79.0, worksheet.lever_graphs_l2437, 0.002); end
  def test_lever_graphs_m2437; assert_in_epsilon(81.99999999999999, worksheet.lever_graphs_m2437, 0.002); end
  def test_lever_graphs_n2437; assert_in_epsilon(85.0, worksheet.lever_graphs_n2437, 0.002); end
  def test_lever_graphs_o2437; assert_in_epsilon(87.99999999999999, worksheet.lever_graphs_o2437, 0.002); end
  def test_lever_graphs_p2437; assert_in_epsilon(90.99999999999999, worksheet.lever_graphs_p2437, 0.002); end
  def test_lever_graphs_q2437; assert_in_epsilon(94.0, worksheet.lever_graphs_q2437, 0.002); end
  def test_lever_graphs_r2437; assert_in_epsilon(97.0, worksheet.lever_graphs_r2437, 0.002); end
  def test_lever_graphs_s2437; assert_in_epsilon(100.0, worksheet.lever_graphs_s2437, 0.002); end
  def test_lever_graphs_b2438; assert_in_epsilon(2.0, worksheet.lever_graphs_b2438, 0.002); end
  def test_lever_graphs_k2438; assert_in_epsilon(78.0, worksheet.lever_graphs_k2438, 0.002); end
  def test_lever_graphs_l2438; assert_in_epsilon(79.0, worksheet.lever_graphs_l2438, 0.002); end
  def test_lever_graphs_m2438; assert_in_epsilon(81.28571428571428, worksheet.lever_graphs_m2438, 0.002); end
  def test_lever_graphs_n2438; assert_in_epsilon(83.57142857142857, worksheet.lever_graphs_n2438, 0.002); end
  def test_lever_graphs_o2438; assert_in_epsilon(85.85714285714285, worksheet.lever_graphs_o2438, 0.002); end
  def test_lever_graphs_p2438; assert_in_epsilon(88.14285714285714, worksheet.lever_graphs_p2438, 0.002); end
  def test_lever_graphs_q2438; assert_in_epsilon(90.42857142857143, worksheet.lever_graphs_q2438, 0.002); end
  def test_lever_graphs_r2438; assert_in_epsilon(92.71428571428571, worksheet.lever_graphs_r2438, 0.002); end
  def test_lever_graphs_s2438; assert_in_epsilon(95.0, worksheet.lever_graphs_s2438, 0.002); end
  def test_lever_graphs_b2439; assert_in_epsilon(3.0, worksheet.lever_graphs_b2439, 0.002); end
  def test_lever_graphs_k2439; assert_in_epsilon(78.0, worksheet.lever_graphs_k2439, 0.002); end
  def test_lever_graphs_l2439; assert_in_epsilon(79.0, worksheet.lever_graphs_l2439, 0.002); end
  def test_lever_graphs_m2439; assert_in_epsilon(80.57142857142856, worksheet.lever_graphs_m2439, 0.002); end
  def test_lever_graphs_n2439; assert_in_epsilon(82.14285714285714, worksheet.lever_graphs_n2439, 0.002); end
  def test_lever_graphs_o2439; assert_in_epsilon(83.7142857142857, worksheet.lever_graphs_o2439, 0.002); end
  def test_lever_graphs_p2439; assert_in_epsilon(85.28571428571428, worksheet.lever_graphs_p2439, 0.002); end
  def test_lever_graphs_q2439; assert_in_epsilon(86.85714285714285, worksheet.lever_graphs_q2439, 0.002); end
  def test_lever_graphs_r2439; assert_in_epsilon(88.42857142857142, worksheet.lever_graphs_r2439, 0.002); end
  def test_lever_graphs_s2439; assert_in_epsilon(89.99999999999999, worksheet.lever_graphs_s2439, 0.002); end
  def test_lever_graphs_b2440; assert_in_epsilon(4.0, worksheet.lever_graphs_b2440, 0.002); end
  def test_lever_graphs_k2440; assert_in_epsilon(78.0, worksheet.lever_graphs_k2440, 0.002); end
  def test_lever_graphs_l2440; assert_in_epsilon(79.0, worksheet.lever_graphs_l2440, 0.002); end
  def test_lever_graphs_m2440; assert_in_epsilon(79.85714285714283, worksheet.lever_graphs_m2440, 0.002); end
  def test_lever_graphs_n2440; assert_in_epsilon(80.71428571428571, worksheet.lever_graphs_n2440, 0.002); end
  def test_lever_graphs_o2440; assert_in_epsilon(81.57142857142857, worksheet.lever_graphs_o2440, 0.002); end
  def test_lever_graphs_p2440; assert_in_epsilon(82.42857142857143, worksheet.lever_graphs_p2440, 0.002); end
  def test_lever_graphs_q2440; assert_in_epsilon(83.28571428571428, worksheet.lever_graphs_q2440, 0.002); end
  def test_lever_graphs_r2440; assert_in_epsilon(84.14285714285714, worksheet.lever_graphs_r2440, 0.002); end
  def test_lever_graphs_s2440; assert_in_epsilon(85.0, worksheet.lever_graphs_s2440, 0.002); end
  def test_lever_graphs_b2441; assert_equal("Australia -average", worksheet.lever_graphs_b2441); end
  def test_lever_graphs_k2441; assert_in_epsilon(214.0, worksheet.lever_graphs_k2441, 0.002); end
  def test_lever_graphs_b2442; assert_equal("US -average", worksheet.lever_graphs_b2442); end
  def test_lever_graphs_k2442; assert_in_epsilon(201.0, worksheet.lever_graphs_k2442, 0.002); end
  def test_lever_graphs_b2443; assert_equal("Germany -average", worksheet.lever_graphs_b2443); end
  def test_lever_graphs_k2443; assert_in_epsilon(109.0, worksheet.lever_graphs_k2443, 0.002); end
  def test_lever_graphs_b2444; assert_equal("Spain -average", worksheet.lever_graphs_b2444); end
  def test_lever_graphs_k2444; assert_in_epsilon(97.0, worksheet.lever_graphs_k2444, 0.002); end
  def test_lever_graphs_b2445; assert_equal("UK -average", worksheet.lever_graphs_b2445); end
  def test_lever_graphs_k2445; assert_in_epsilon(76.0, worksheet.lever_graphs_k2445, 0.002); end
  def test_lever_graphs_b2446; assert_equal("China -average", worksheet.lever_graphs_b2446); end
  def test_lever_graphs_k2446; assert_in_epsilon(60.0, worksheet.lever_graphs_k2446, 0.002); end
  def test_lever_graphs_b2447; assert_equal("Hong Kong -average", worksheet.lever_graphs_b2447); end
  def test_lever_graphs_k2447; assert_in_epsilon(45.0, worksheet.lever_graphs_k2447, 0.002); end
  def test_lever_graphs_c2418; assert_equal("1975", worksheet.lever_graphs_c2418); end
  def test_lever_graphs_d2418; assert_equal("1980", worksheet.lever_graphs_d2418); end
  def test_lever_graphs_e2418; assert_equal("1985", worksheet.lever_graphs_e2418); end
  def test_lever_graphs_f2418; assert_equal("1990", worksheet.lever_graphs_f2418); end
  def test_lever_graphs_g2418; assert_equal("1995", worksheet.lever_graphs_g2418); end
  def test_lever_graphs_h2418; assert_equal("2000", worksheet.lever_graphs_h2418); end
  def test_lever_graphs_i2418; assert_equal("2005", worksheet.lever_graphs_i2418); end
  def test_lever_graphs_j2418; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2418, 0.002); end
  def test_lever_graphs_k2418; assert_equal("2011", worksheet.lever_graphs_k2418); end
  def test_lever_graphs_l2418; assert_equal("2015", worksheet.lever_graphs_l2418); end
  def test_lever_graphs_m2418; assert_equal("2020", worksheet.lever_graphs_m2418); end
  def test_lever_graphs_n2418; assert_equal("2025", worksheet.lever_graphs_n2418); end
  def test_lever_graphs_o2418; assert_equal("2030", worksheet.lever_graphs_o2418); end
  def test_lever_graphs_p2418; assert_equal("2035", worksheet.lever_graphs_p2418); end
  def test_lever_graphs_q2418; assert_equal("2040", worksheet.lever_graphs_q2418); end
  def test_lever_graphs_r2418; assert_equal("2045", worksheet.lever_graphs_r2418); end
  def test_lever_graphs_s2418; assert_equal("2050", worksheet.lever_graphs_s2418); end
  def test_lever_graphs_b2419; assert_equal("Historical data", worksheet.lever_graphs_b2419); end
  def test_lever_graphs_b2420; assert_in_delta(1.0, worksheet.lever_graphs_b2420, 0.002); end
  def test_lever_graphs_k2420; assert_in_epsilon(92.0, worksheet.lever_graphs_k2420, 0.002); end
  def test_lever_graphs_l2420; assert_in_epsilon(93.2, worksheet.lever_graphs_l2420, 0.002); end
  def test_lever_graphs_m2420; assert_in_epsilon(95.6, worksheet.lever_graphs_m2420, 0.002); end
  def test_lever_graphs_n2420; assert_in_epsilon(98.0, worksheet.lever_graphs_n2420, 0.002); end
  def test_lever_graphs_o2420; assert_in_epsilon(100.39999999999999, worksheet.lever_graphs_o2420, 0.002); end
  def test_lever_graphs_p2420; assert_in_epsilon(102.8, worksheet.lever_graphs_p2420, 0.002); end
  def test_lever_graphs_q2420; assert_in_epsilon(105.2, worksheet.lever_graphs_q2420, 0.002); end
  def test_lever_graphs_r2420; assert_in_epsilon(107.6, worksheet.lever_graphs_r2420, 0.002); end
  def test_lever_graphs_s2420; assert_in_epsilon(110.0, worksheet.lever_graphs_s2420, 0.002); end
  def test_lever_graphs_b2421; assert_in_epsilon(2.0, worksheet.lever_graphs_b2421, 0.002); end
  def test_lever_graphs_k2421; assert_in_epsilon(92.0, worksheet.lever_graphs_k2421, 0.002); end
  def test_lever_graphs_l2421; assert_in_epsilon(93.2, worksheet.lever_graphs_l2421, 0.002); end
  def test_lever_graphs_m2421; assert_in_epsilon(94.88571428571427, worksheet.lever_graphs_m2421, 0.002); end
  def test_lever_graphs_n2421; assert_in_epsilon(96.57142857142857, worksheet.lever_graphs_n2421, 0.002); end
  def test_lever_graphs_o2421; assert_in_epsilon(98.25714285714284, worksheet.lever_graphs_o2421, 0.002); end
  def test_lever_graphs_p2421; assert_in_epsilon(99.94285714285714, worksheet.lever_graphs_p2421, 0.002); end
  def test_lever_graphs_q2421; assert_in_epsilon(101.62857142857142, worksheet.lever_graphs_q2421, 0.002); end
  def test_lever_graphs_r2421; assert_in_epsilon(103.3142857142857, worksheet.lever_graphs_r2421, 0.002); end
  def test_lever_graphs_s2421; assert_in_epsilon(105.0, worksheet.lever_graphs_s2421, 0.002); end
  def test_lever_graphs_b2422; assert_in_epsilon(3.0, worksheet.lever_graphs_b2422, 0.002); end
  def test_lever_graphs_k2422; assert_in_epsilon(92.0, worksheet.lever_graphs_k2422, 0.002); end
  def test_lever_graphs_l2422; assert_in_epsilon(93.2, worksheet.lever_graphs_l2422, 0.002); end
  def test_lever_graphs_m2422; assert_in_epsilon(94.17142857142856, worksheet.lever_graphs_m2422, 0.002); end
  def test_lever_graphs_n2422; assert_in_epsilon(95.14285714285715, worksheet.lever_graphs_n2422, 0.002); end
  def test_lever_graphs_o2422; assert_in_epsilon(96.11428571428571, worksheet.lever_graphs_o2422, 0.002); end
  def test_lever_graphs_p2422; assert_in_epsilon(97.08571428571427, worksheet.lever_graphs_p2422, 0.002); end
  def test_lever_graphs_q2422; assert_in_epsilon(98.05714285714285, worksheet.lever_graphs_q2422, 0.002); end
  def test_lever_graphs_r2422; assert_in_epsilon(99.02857142857142, worksheet.lever_graphs_r2422, 0.002); end
  def test_lever_graphs_s2422; assert_in_epsilon(100.0, worksheet.lever_graphs_s2422, 0.002); end
  def test_lever_graphs_b2423; assert_in_epsilon(4.0, worksheet.lever_graphs_b2423, 0.002); end
  def test_lever_graphs_k2423; assert_in_epsilon(92.0, worksheet.lever_graphs_k2423, 0.002); end
  def test_lever_graphs_l2423; assert_in_epsilon(93.2, worksheet.lever_graphs_l2423, 0.002); end
  def test_lever_graphs_m2423; assert_in_epsilon(93.45714285714284, worksheet.lever_graphs_m2423, 0.002); end
  def test_lever_graphs_n2423; assert_in_epsilon(93.71428571428572, worksheet.lever_graphs_n2423, 0.002); end
  def test_lever_graphs_o2423; assert_in_epsilon(93.97142857142858, worksheet.lever_graphs_o2423, 0.002); end
  def test_lever_graphs_p2423; assert_in_epsilon(94.22857142857143, worksheet.lever_graphs_p2423, 0.002); end
  def test_lever_graphs_q2423; assert_in_epsilon(94.4857142857143, worksheet.lever_graphs_q2423, 0.002); end
  def test_lever_graphs_r2423; assert_in_epsilon(94.74285714285715, worksheet.lever_graphs_r2423, 0.002); end
  def test_lever_graphs_s2423; assert_in_epsilon(95.0, worksheet.lever_graphs_s2423, 0.002); end
  def test_lever_graphs_b2424; assert_equal("Australia -average", worksheet.lever_graphs_b2424); end
  def test_lever_graphs_k2424; assert_in_epsilon(214.0, worksheet.lever_graphs_k2424, 0.002); end
  def test_lever_graphs_b2425; assert_equal("US -average", worksheet.lever_graphs_b2425); end
  def test_lever_graphs_k2425; assert_in_epsilon(201.0, worksheet.lever_graphs_k2425, 0.002); end
  def test_lever_graphs_b2426; assert_equal("Germany -average", worksheet.lever_graphs_b2426); end
  def test_lever_graphs_k2426; assert_in_epsilon(109.0, worksheet.lever_graphs_k2426, 0.002); end
  def test_lever_graphs_b2427; assert_equal("Spain -average", worksheet.lever_graphs_b2427); end
  def test_lever_graphs_k2427; assert_in_epsilon(97.0, worksheet.lever_graphs_k2427, 0.002); end
  def test_lever_graphs_b2428; assert_equal("UK -average", worksheet.lever_graphs_b2428); end
  def test_lever_graphs_k2428; assert_in_epsilon(76.0, worksheet.lever_graphs_k2428, 0.002); end
  def test_lever_graphs_b2429; assert_equal("China -average", worksheet.lever_graphs_b2429); end
  def test_lever_graphs_k2429; assert_in_epsilon(60.0, worksheet.lever_graphs_k2429, 0.002); end
  def test_lever_graphs_b2430; assert_equal("Hong Kong -average", worksheet.lever_graphs_b2430); end
  def test_lever_graphs_k2430; assert_in_epsilon(45.0, worksheet.lever_graphs_k2430, 0.002); end
  def test_lever_graphs_c3018; assert_equal("1975", worksheet.lever_graphs_c3018); end
  def test_lever_graphs_d3018; assert_equal("1980", worksheet.lever_graphs_d3018); end
  def test_lever_graphs_e3018; assert_equal("1985", worksheet.lever_graphs_e3018); end
  def test_lever_graphs_f3018; assert_equal("1990", worksheet.lever_graphs_f3018); end
  def test_lever_graphs_g3018; assert_equal("1995", worksheet.lever_graphs_g3018); end
  def test_lever_graphs_h3018; assert_equal("2000", worksheet.lever_graphs_h3018); end
  def test_lever_graphs_i3018; assert_equal("2005", worksheet.lever_graphs_i3018); end
  def test_lever_graphs_j3018; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3018, 0.002); end
  def test_lever_graphs_k3018; assert_equal("2011", worksheet.lever_graphs_k3018); end
  def test_lever_graphs_l3018; assert_equal("2015", worksheet.lever_graphs_l3018); end
  def test_lever_graphs_m3018; assert_equal("2020", worksheet.lever_graphs_m3018); end
  def test_lever_graphs_n3018; assert_equal("2025", worksheet.lever_graphs_n3018); end
  def test_lever_graphs_o3018; assert_equal("2030", worksheet.lever_graphs_o3018); end
  def test_lever_graphs_p3018; assert_equal("2035", worksheet.lever_graphs_p3018); end
  def test_lever_graphs_q3018; assert_equal("2040", worksheet.lever_graphs_q3018); end
  def test_lever_graphs_r3018; assert_equal("2045", worksheet.lever_graphs_r3018); end
  def test_lever_graphs_s3018; assert_equal("2050", worksheet.lever_graphs_s3018); end
  def test_lever_graphs_b3019; assert_equal("Historic data", worksheet.lever_graphs_b3019); end
  def test_lever_graphs_c3019; assert_in_epsilon(1820.2, worksheet.lever_graphs_c3019, 0.002); end
  def test_lever_graphs_d3019; assert_in_epsilon(1891.64, worksheet.lever_graphs_d3019, 0.002); end
  def test_lever_graphs_e3019; assert_in_epsilon(1966.88, worksheet.lever_graphs_e3019, 0.002); end
  def test_lever_graphs_f3019; assert_in_epsilon(1991.2, worksheet.lever_graphs_f3019, 0.002); end
  def test_lever_graphs_g3019; assert_in_epsilon(2023.12, worksheet.lever_graphs_g3019, 0.002); end
  def test_lever_graphs_h3019; assert_in_epsilon(2071.76, worksheet.lever_graphs_h3019, 0.002); end
  def test_lever_graphs_i3019; assert_in_epsilon(2098.36, worksheet.lever_graphs_i3019, 0.002); end
  def test_lever_graphs_j3019; assert_in_epsilon(2167.0, worksheet.lever_graphs_j3019, 0.002); end
  def test_lever_graphs_k3019; assert_in_epsilon(2180.0, worksheet.lever_graphs_k3019, 0.002); end
  def test_lever_graphs_b3020; assert_in_delta(1.0, worksheet.lever_graphs_b3020, 0.002); end
  def test_lever_graphs_k3020; assert_in_epsilon(2180.0, worksheet.lever_graphs_k3020, 0.002); end
  def test_lever_graphs_l3020; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_l3020, 0.002); end
  def test_lever_graphs_m3020; assert_in_epsilon(2204.2618030984536, worksheet.lever_graphs_m3020, 0.002); end
  def test_lever_graphs_n3020; assert_in_epsilon(2216.241060058567, worksheet.lever_graphs_n3020, 0.002); end
  def test_lever_graphs_o3020; assert_in_epsilon(2241.9990498552693, worksheet.lever_graphs_o3020, 0.002); end
  def test_lever_graphs_p3020; assert_in_epsilon(2289.6920605045525, worksheet.lever_graphs_p3020, 0.002); end
  def test_lever_graphs_q3020; assert_in_epsilon(2357.6923076923076, worksheet.lever_graphs_q3020, 0.002); end
  def test_lever_graphs_r3020; assert_in_epsilon(2425.692554880063, worksheet.lever_graphs_r3020, 0.002); end
  def test_lever_graphs_s3020; assert_in_epsilon(2520.0, worksheet.lever_graphs_s3020, 0.002); end
  def test_lever_graphs_b3021; assert_in_epsilon(2.0, worksheet.lever_graphs_b3021, 0.002); end
  def test_lever_graphs_k3021; assert_in_epsilon(2180.0, worksheet.lever_graphs_k3021, 0.002); end
  def test_lever_graphs_l3021; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_l3021, 0.002); end
  def test_lever_graphs_m3021; assert_in_epsilon(2199.0659136071786, worksheet.lever_graphs_m3021, 0.002); end
  def test_lever_graphs_n3021; assert_in_epsilon(2204.0336149531972, worksheet.lever_graphs_n3021, 0.002); end
  def test_lever_graphs_o3021; assert_in_epsilon(2214.715245793062, worksheet.lever_graphs_o3021, 0.002); end
  def test_lever_graphs_p3021; assert_in_epsilon(2234.493153052836, worksheet.lever_graphs_p3021, 0.002); end
  def test_lever_graphs_q3021; assert_in_epsilon(2262.6923076923076, worksheet.lever_graphs_q3021, 0.002); end
  def test_lever_graphs_r3021; assert_in_epsilon(2290.8914623317796, worksheet.lever_graphs_r3021, 0.002); end
  def test_lever_graphs_s3021; assert_in_epsilon(2330.0, worksheet.lever_graphs_s3021, 0.002); end
  def test_lever_graphs_b3022; assert_in_epsilon(3.0, worksheet.lever_graphs_b3022, 0.002); end
  def test_lever_graphs_k3022; assert_in_epsilon(2180.0, worksheet.lever_graphs_k3022, 0.002); end
  def test_lever_graphs_l3022; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_l3022, 0.002); end
  def test_lever_graphs_m3022; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_m3022, 0.002); end
  def test_lever_graphs_n3022; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_n3022, 0.002); end
  def test_lever_graphs_o3022; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_o3022, 0.002); end
  def test_lever_graphs_p3022; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_p3022, 0.002); end
  def test_lever_graphs_q3022; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_q3022, 0.002); end
  def test_lever_graphs_r3022; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_r3022, 0.002); end
  def test_lever_graphs_s3022; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_s3022, 0.002); end
  def test_lever_graphs_b3023; assert_in_epsilon(4.0, worksheet.lever_graphs_b3023, 0.002); end
  def test_lever_graphs_k3023; assert_in_epsilon(2180.0, worksheet.lever_graphs_k3023, 0.002); end
  def test_lever_graphs_l3023; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_l3023, 0.002); end
  def test_lever_graphs_m3023; assert_in_epsilon(2192.7761526440568, worksheet.lever_graphs_m3023, 0.002); end
  def test_lever_graphs_n3023; assert_in_epsilon(2189.2561814045916, worksheet.lever_graphs_n3023, 0.002); end
  def test_lever_graphs_o3023; assert_in_epsilon(2181.6874829809162, worksheet.lever_graphs_o3023, 0.002); end
  def test_lever_graphs_p3023; assert_in_epsilon(2167.6734229797053, worksheet.lever_graphs_p3023, 0.002); end
  def test_lever_graphs_q3023; assert_in_epsilon(2147.692307692308, worksheet.lever_graphs_q3023, 0.002); end
  def test_lever_graphs_r3023; assert_in_epsilon(2127.7111924049104, worksheet.lever_graphs_r3023, 0.002); end
  def test_lever_graphs_s3023; assert_in_epsilon(2100.0, worksheet.lever_graphs_s3023, 0.002); end
  def test_lever_graphs_b3024; assert_equal("USA ", worksheet.lever_graphs_b3024); end
  def test_lever_graphs_k3024; assert_in_epsilon(2729.0, worksheet.lever_graphs_k3024, 0.002); end
  def test_lever_graphs_b3025; assert_equal("EU ", worksheet.lever_graphs_b3025); end
  def test_lever_graphs_k3025; assert_in_epsilon(2520.0, worksheet.lever_graphs_k3025, 0.002); end
  def test_lever_graphs_b3026; assert_equal("Japan", worksheet.lever_graphs_b3026); end
  def test_lever_graphs_k3026; assert_in_epsilon(2066.44, worksheet.lever_graphs_k3026, 0.002); end
  def test_lever_graphs_b3027; assert_equal("Australia ", worksheet.lever_graphs_b3027); end
  def test_lever_graphs_k3027; assert_in_epsilon(2449.0, worksheet.lever_graphs_k3027, 0.002); end
  def test_lever_graphs_b3028; assert_equal("China ", worksheet.lever_graphs_b3028); end
  def test_lever_graphs_k3028; assert_in_epsilon(2306.0, worksheet.lever_graphs_k3028, 0.002); end
  def test_lever_graphs_b3029; assert_equal("South Africa", worksheet.lever_graphs_b3029); end
  def test_lever_graphs_k3029; assert_in_epsilon(2255.0, worksheet.lever_graphs_k3029, 0.002); end
  def test_lever_graphs_b3030; assert_equal("Bangladesh", worksheet.lever_graphs_b3030); end
  def test_lever_graphs_k3030; assert_in_epsilon(1823.0, worksheet.lever_graphs_k3030, 0.002); end
  def test_lever_graphs_b3031; assert_equal("Malaysia", worksheet.lever_graphs_b3031); end
  def test_lever_graphs_k3031; assert_in_epsilon(2141.0, worksheet.lever_graphs_k3031, 0.002); end
  def test_lever_graphs_b3032; assert_equal("WHO healthy diet recommendation", worksheet.lever_graphs_b3032); end
  def test_lever_graphs_k3032; assert_in_epsilon(2100.0, worksheet.lever_graphs_k3032, 0.002); end
  def test_lever_graphs_c1899; assert_equal("1975", worksheet.lever_graphs_c1899); end
  def test_lever_graphs_d1899; assert_equal("1980", worksheet.lever_graphs_d1899); end
  def test_lever_graphs_e1899; assert_equal("1985", worksheet.lever_graphs_e1899); end
  def test_lever_graphs_f1899; assert_equal("1990", worksheet.lever_graphs_f1899); end
  def test_lever_graphs_g1899; assert_equal("1995", worksheet.lever_graphs_g1899); end
  def test_lever_graphs_h1899; assert_equal("2000", worksheet.lever_graphs_h1899); end
  def test_lever_graphs_i1899; assert_equal("2005", worksheet.lever_graphs_i1899); end
  def test_lever_graphs_j1899; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1899, 0.002); end
  def test_lever_graphs_k1899; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1899, 0.002); end
  def test_lever_graphs_l1899; assert_equal("2015", worksheet.lever_graphs_l1899); end
  def test_lever_graphs_m1899; assert_equal("2020", worksheet.lever_graphs_m1899); end
  def test_lever_graphs_n1899; assert_equal("2025", worksheet.lever_graphs_n1899); end
  def test_lever_graphs_o1899; assert_equal("2030", worksheet.lever_graphs_o1899); end
  def test_lever_graphs_p1899; assert_equal("2035", worksheet.lever_graphs_p1899); end
  def test_lever_graphs_q1899; assert_equal("2040", worksheet.lever_graphs_q1899); end
  def test_lever_graphs_r1899; assert_equal("2045", worksheet.lever_graphs_r1899); end
  def test_lever_graphs_s1899; assert_equal("2050", worksheet.lever_graphs_s1899); end
  def test_lever_graphs_b1900; assert_equal("Historic data", worksheet.lever_graphs_b1900); end
  def test_lever_graphs_b1901; assert_in_delta(1.0, worksheet.lever_graphs_b1901, 0.002); end
  def test_lever_graphs_k1901; assert_in_delta(0.0, (worksheet.lever_graphs_k1901||0), 0.002); end
  def test_lever_graphs_l1901; assert_in_epsilon(9.0, worksheet.lever_graphs_l1901, 0.002); end
  def test_lever_graphs_m1901; assert_in_epsilon(16.0, worksheet.lever_graphs_m1901, 0.002); end
  def test_lever_graphs_n1901; assert_in_epsilon(16.0, worksheet.lever_graphs_n1901, 0.002); end
  def test_lever_graphs_o1901; assert_in_epsilon(16.0, worksheet.lever_graphs_o1901, 0.002); end
  def test_lever_graphs_p1901; assert_in_epsilon(16.0, worksheet.lever_graphs_p1901, 0.002); end
  def test_lever_graphs_q1901; assert_in_epsilon(16.0, worksheet.lever_graphs_q1901, 0.002); end
  def test_lever_graphs_r1901; assert_in_epsilon(16.0, worksheet.lever_graphs_r1901, 0.002); end
  def test_lever_graphs_s1901; assert_in_epsilon(16.0, worksheet.lever_graphs_s1901, 0.002); end
  def test_lever_graphs_b1902; assert_in_epsilon(2.0, worksheet.lever_graphs_b1902, 0.002); end
  def test_lever_graphs_k1902; assert_in_delta(0.0, (worksheet.lever_graphs_k1902||0), 0.002); end
  def test_lever_graphs_l1902; assert_in_epsilon(9.0, worksheet.lever_graphs_l1902, 0.002); end
  def test_lever_graphs_m1902; assert_in_epsilon(18.0, worksheet.lever_graphs_m1902, 0.002); end
  def test_lever_graphs_n1902; assert_in_epsilon(36.0, worksheet.lever_graphs_n1902, 0.002); end
  def test_lever_graphs_o1902; assert_in_epsilon(114.0, worksheet.lever_graphs_o1902, 0.002); end
  def test_lever_graphs_p1902; assert_in_epsilon(159.6, worksheet.lever_graphs_p1902, 0.002); end
  def test_lever_graphs_q1902; assert_in_epsilon(223.4, worksheet.lever_graphs_q1902, 0.002); end
  def test_lever_graphs_r1902; assert_in_epsilon(312.8, worksheet.lever_graphs_r1902, 0.002); end
  def test_lever_graphs_s1902; assert_in_epsilon(490.0, worksheet.lever_graphs_s1902, 0.002); end
  def test_lever_graphs_b1903; assert_in_epsilon(3.0, worksheet.lever_graphs_b1903, 0.002); end
  def test_lever_graphs_k1903; assert_in_delta(0.0, (worksheet.lever_graphs_k1903||0), 0.002); end
  def test_lever_graphs_l1903; assert_in_epsilon(9.0, worksheet.lever_graphs_l1903, 0.002); end
  def test_lever_graphs_m1903; assert_in_epsilon(31.3, worksheet.lever_graphs_m1903, 0.002); end
  def test_lever_graphs_n1903; assert_in_epsilon(108.9, worksheet.lever_graphs_n1903, 0.002); end
  def test_lever_graphs_o1903; assert_in_epsilon(380.0, worksheet.lever_graphs_o1903, 0.002); end
  def test_lever_graphs_p1903; assert_in_epsilon(535.8, worksheet.lever_graphs_p1903, 0.002); end
  def test_lever_graphs_q1903; assert_in_epsilon(755.5, worksheet.lever_graphs_q1903, 0.002); end
  def test_lever_graphs_r1903; assert_in_epsilon(1065.3, worksheet.lever_graphs_r1903, 0.002); end
  def test_lever_graphs_s1903; assert_in_epsilon(1487.0, worksheet.lever_graphs_s1903, 0.002); end
  def test_lever_graphs_b1904; assert_in_epsilon(4.0, worksheet.lever_graphs_b1904, 0.002); end
  def test_lever_graphs_k1904; assert_in_delta(0.0, (worksheet.lever_graphs_k1904||0), 0.002); end
  def test_lever_graphs_l1904; assert_in_epsilon(9.0, worksheet.lever_graphs_l1904, 0.002); end
  def test_lever_graphs_m1904; assert_in_epsilon(380.0, worksheet.lever_graphs_m1904, 0.002); end
  def test_lever_graphs_n1904; assert_in_epsilon(760.0, worksheet.lever_graphs_n1904, 0.002); end
  def test_lever_graphs_o1904; assert_in_epsilon(1266.7, worksheet.lever_graphs_o1904, 0.002); end
  def test_lever_graphs_p1904; assert_in_epsilon(1773.4, worksheet.lever_graphs_p1904, 0.002); end
  def test_lever_graphs_q1904; assert_in_epsilon(2482.8, worksheet.lever_graphs_q1904, 0.002); end
  def test_lever_graphs_r1904; assert_in_epsilon(3000.0, worksheet.lever_graphs_r1904, 0.002); end
  def test_lever_graphs_s1904; assert_in_epsilon(3700.0, worksheet.lever_graphs_s1904, 0.002); end
  def test_lever_graphs_b1905; assert_equal("Comparator A", worksheet.lever_graphs_b1905); end
  def test_lever_graphs_b1906; assert_equal("Comparator B", worksheet.lever_graphs_b1906); end
  def test_lever_graphs_b1907; assert_equal("Comparator C", worksheet.lever_graphs_b1907); end
  def test_lever_graphs_c1923; assert_equal("1975", worksheet.lever_graphs_c1923); end
  def test_lever_graphs_d1923; assert_equal("1980", worksheet.lever_graphs_d1923); end
  def test_lever_graphs_e1923; assert_equal("1985", worksheet.lever_graphs_e1923); end
  def test_lever_graphs_f1923; assert_equal("1990", worksheet.lever_graphs_f1923); end
  def test_lever_graphs_g1923; assert_equal("1995", worksheet.lever_graphs_g1923); end
  def test_lever_graphs_h1923; assert_equal("2000", worksheet.lever_graphs_h1923); end
  def test_lever_graphs_i1923; assert_equal("2005", worksheet.lever_graphs_i1923); end
  def test_lever_graphs_j1923; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1923, 0.002); end
  def test_lever_graphs_k1923; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1923, 0.002); end
  def test_lever_graphs_l1923; assert_equal("2015", worksheet.lever_graphs_l1923); end
  def test_lever_graphs_m1923; assert_equal("2020", worksheet.lever_graphs_m1923); end
  def test_lever_graphs_n1923; assert_equal("2025", worksheet.lever_graphs_n1923); end
  def test_lever_graphs_o1923; assert_equal("2030", worksheet.lever_graphs_o1923); end
  def test_lever_graphs_p1923; assert_equal("2035", worksheet.lever_graphs_p1923); end
  def test_lever_graphs_q1923; assert_equal("2040", worksheet.lever_graphs_q1923); end
  def test_lever_graphs_r1923; assert_equal("2045", worksheet.lever_graphs_r1923); end
  def test_lever_graphs_s1923; assert_equal("2050", worksheet.lever_graphs_s1923); end
  def test_lever_graphs_b1924; assert_equal("Historic data", worksheet.lever_graphs_b1924); end
  def test_lever_graphs_b1925; assert_in_delta(1.0, worksheet.lever_graphs_b1925, 0.002); end
  def test_lever_graphs_k1925; assert_in_epsilon(1.6, worksheet.lever_graphs_k1925, 0.002); end
  def test_lever_graphs_l1925; assert_in_epsilon(8.0, worksheet.lever_graphs_l1925, 0.002); end
  def test_lever_graphs_m1925; assert_in_epsilon(30.0, worksheet.lever_graphs_m1925, 0.002); end
  def test_lever_graphs_n1925; assert_in_epsilon(30.0, worksheet.lever_graphs_n1925, 0.002); end
  def test_lever_graphs_o1925; assert_in_epsilon(20.0, worksheet.lever_graphs_o1925, 0.002); end
  def test_lever_graphs_p1925; assert_in_epsilon(20.0, worksheet.lever_graphs_p1925, 0.002); end
  def test_lever_graphs_q1925; assert_in_delta(0.0, (worksheet.lever_graphs_q1925||0), 0.002); end
  def test_lever_graphs_r1925; assert_in_delta(0.0, (worksheet.lever_graphs_r1925||0), 0.002); end
  def test_lever_graphs_s1925; assert_in_delta(0.0, (worksheet.lever_graphs_s1925||0), 0.002); end
  def test_lever_graphs_b1926; assert_in_epsilon(2.0, worksheet.lever_graphs_b1926, 0.002); end
  def test_lever_graphs_k1926; assert_in_epsilon(1.6, worksheet.lever_graphs_k1926, 0.002); end
  def test_lever_graphs_l1926; assert_in_epsilon(8.0, worksheet.lever_graphs_l1926, 0.002); end
  def test_lever_graphs_m1926; assert_in_epsilon(71.0, worksheet.lever_graphs_m1926, 0.002); end
  def test_lever_graphs_n1926; assert_in_epsilon(101.0, worksheet.lever_graphs_n1926, 0.002); end
  def test_lever_graphs_o1926; assert_in_epsilon(164.0, worksheet.lever_graphs_o1926, 0.002); end
  def test_lever_graphs_p1926; assert_in_epsilon(199.0, worksheet.lever_graphs_p1926, 0.002); end
  def test_lever_graphs_q1926; assert_in_epsilon(267.0, worksheet.lever_graphs_q1926, 0.002); end
  def test_lever_graphs_r1926; assert_in_epsilon(312.0, worksheet.lever_graphs_r1926, 0.002); end
  def test_lever_graphs_s1926; assert_in_epsilon(388.0, worksheet.lever_graphs_s1926, 0.002); end
  def test_lever_graphs_b1927; assert_in_epsilon(3.0, worksheet.lever_graphs_b1927, 0.002); end
  def test_lever_graphs_k1927; assert_in_epsilon(1.6, worksheet.lever_graphs_k1927, 0.002); end
  def test_lever_graphs_l1927; assert_in_epsilon(8.0, worksheet.lever_graphs_l1927, 0.002); end
  def test_lever_graphs_m1927; assert_in_epsilon(83.0, worksheet.lever_graphs_m1927, 0.002); end
  def test_lever_graphs_n1927; assert_in_epsilon(146.3, worksheet.lever_graphs_n1927, 0.002); end
  def test_lever_graphs_o1927; assert_in_epsilon(257.8, worksheet.lever_graphs_o1927, 0.002); end
  def test_lever_graphs_p1927; assert_in_epsilon(396.6, worksheet.lever_graphs_p1927, 0.002); end
  def test_lever_graphs_q1927; assert_in_epsilon(610.3, worksheet.lever_graphs_q1927, 0.002); end
  def test_lever_graphs_r1927; assert_in_epsilon(778.9, worksheet.lever_graphs_r1927, 0.002); end
  def test_lever_graphs_s1927; assert_in_epsilon(994.1, worksheet.lever_graphs_s1927, 0.002); end
  def test_lever_graphs_b1928; assert_in_epsilon(4.0, worksheet.lever_graphs_b1928, 0.002); end
  def test_lever_graphs_k1928; assert_in_epsilon(1.6, worksheet.lever_graphs_k1928, 0.002); end
  def test_lever_graphs_l1928; assert_in_epsilon(8.0, worksheet.lever_graphs_l1928, 0.002); end
  def test_lever_graphs_m1928; assert_in_epsilon(97.6, worksheet.lever_graphs_m1928, 0.002); end
  def test_lever_graphs_n1928; assert_in_epsilon(196.2, worksheet.lever_graphs_n1928, 0.002); end
  def test_lever_graphs_o1928; assert_in_epsilon(394.7, worksheet.lever_graphs_o1928, 0.002); end
  def test_lever_graphs_p1928; assert_in_epsilon(665.1, worksheet.lever_graphs_p1928, 0.002); end
  def test_lever_graphs_q1928; assert_in_epsilon(1120.8, worksheet.lever_graphs_q1928, 0.002); end
  def test_lever_graphs_r1928; assert_in_epsilon(1499.9, worksheet.lever_graphs_r1928, 0.002); end
  def test_lever_graphs_s1928; assert_in_epsilon(2007.1, worksheet.lever_graphs_s1928, 0.002); end
  def test_lever_graphs_b1929; assert_equal("Comparator A", worksheet.lever_graphs_b1929); end
  def test_lever_graphs_b1930; assert_equal("Comparator B", worksheet.lever_graphs_b1930); end
  def test_lever_graphs_b1931; assert_equal("Comparator C", worksheet.lever_graphs_b1931); end
  def test_lever_graphs_c1876; assert_equal("1975", worksheet.lever_graphs_c1876); end
  def test_lever_graphs_d1876; assert_equal("1980", worksheet.lever_graphs_d1876); end
  def test_lever_graphs_e1876; assert_equal("1985", worksheet.lever_graphs_e1876); end
  def test_lever_graphs_f1876; assert_equal("1990", worksheet.lever_graphs_f1876); end
  def test_lever_graphs_g1876; assert_equal("1995", worksheet.lever_graphs_g1876); end
  def test_lever_graphs_h1876; assert_equal("2000", worksheet.lever_graphs_h1876); end
  def test_lever_graphs_i1876; assert_equal("2005", worksheet.lever_graphs_i1876); end
  def test_lever_graphs_j1876; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1876, 0.002); end
  def test_lever_graphs_k1876; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1876, 0.002); end
  def test_lever_graphs_l1876; assert_equal("2015", worksheet.lever_graphs_l1876); end
  def test_lever_graphs_m1876; assert_equal("2020", worksheet.lever_graphs_m1876); end
  def test_lever_graphs_n1876; assert_equal("2025", worksheet.lever_graphs_n1876); end
  def test_lever_graphs_o1876; assert_equal("2030", worksheet.lever_graphs_o1876); end
  def test_lever_graphs_p1876; assert_equal("2035", worksheet.lever_graphs_p1876); end
  def test_lever_graphs_q1876; assert_equal("2040", worksheet.lever_graphs_q1876); end
  def test_lever_graphs_r1876; assert_equal("2045", worksheet.lever_graphs_r1876); end
  def test_lever_graphs_s1876; assert_equal("2050", worksheet.lever_graphs_s1876); end
  def test_lever_graphs_b1877; assert_equal("Historic data", worksheet.lever_graphs_b1877); end
  def test_lever_graphs_b1878; assert_in_delta(1.0, worksheet.lever_graphs_b1878, 0.002); end
  def test_lever_graphs_k1878; assert_in_epsilon(11.43, worksheet.lever_graphs_k1878, 0.002); end
  def test_lever_graphs_l1878; assert_in_epsilon(14.5, worksheet.lever_graphs_l1878, 0.002); end
  def test_lever_graphs_m1878; assert_in_epsilon(16.0, worksheet.lever_graphs_m1878, 0.002); end
  def test_lever_graphs_n1878; assert_in_epsilon(16.0, worksheet.lever_graphs_n1878, 0.002); end
  def test_lever_graphs_o1878; assert_in_epsilon(10.0, worksheet.lever_graphs_o1878, 0.002); end
  def test_lever_graphs_p1878; assert_in_epsilon(7.0, worksheet.lever_graphs_p1878, 0.002); end
  def test_lever_graphs_q1878; assert_in_epsilon(4.0, worksheet.lever_graphs_q1878, 0.002); end
  def test_lever_graphs_r1878; assert_in_delta(0.0, (worksheet.lever_graphs_r1878||0), 0.002); end
  def test_lever_graphs_s1878; assert_in_delta(0.0, (worksheet.lever_graphs_s1878||0), 0.002); end
  def test_lever_graphs_b1879; assert_in_epsilon(2.0, worksheet.lever_graphs_b1879, 0.002); end
  def test_lever_graphs_k1879; assert_in_epsilon(11.43, worksheet.lever_graphs_k1879, 0.002); end
  def test_lever_graphs_l1879; assert_in_epsilon(14.5, worksheet.lever_graphs_l1879, 0.002); end
  def test_lever_graphs_m1879; assert_in_epsilon(19.0, worksheet.lever_graphs_m1879, 0.002); end
  def test_lever_graphs_n1879; assert_in_epsilon(25.0, worksheet.lever_graphs_n1879, 0.002); end
  def test_lever_graphs_o1879; assert_in_epsilon(39.0, worksheet.lever_graphs_o1879, 0.002); end
  def test_lever_graphs_p1879; assert_in_epsilon(73.0, worksheet.lever_graphs_p1879, 0.002); end
  def test_lever_graphs_q1879; assert_in_epsilon(98.0, worksheet.lever_graphs_q1879, 0.002); end
  def test_lever_graphs_r1879; assert_in_epsilon(137.0, worksheet.lever_graphs_r1879, 0.002); end
  def test_lever_graphs_s1879; assert_in_epsilon(172.0, worksheet.lever_graphs_s1879, 0.002); end
  def test_lever_graphs_b1880; assert_in_epsilon(3.0, worksheet.lever_graphs_b1880, 0.002); end
  def test_lever_graphs_k1880; assert_in_epsilon(11.43, worksheet.lever_graphs_k1880, 0.002); end
  def test_lever_graphs_l1880; assert_in_epsilon(14.5, worksheet.lever_graphs_l1880, 0.002); end
  def test_lever_graphs_m1880; assert_in_epsilon(23.0, worksheet.lever_graphs_m1880, 0.002); end
  def test_lever_graphs_n1880; assert_in_epsilon(38.0, worksheet.lever_graphs_n1880, 0.002); end
  def test_lever_graphs_o1880; assert_in_epsilon(60.0, worksheet.lever_graphs_o1880, 0.002); end
  def test_lever_graphs_p1880; assert_in_epsilon(103.0, worksheet.lever_graphs_p1880, 0.002); end
  def test_lever_graphs_q1880; assert_in_epsilon(169.0, worksheet.lever_graphs_q1880, 0.002); end
  def test_lever_graphs_r1880; assert_in_epsilon(237.0, worksheet.lever_graphs_r1880, 0.002); end
  def test_lever_graphs_s1880; assert_in_epsilon(289.0, worksheet.lever_graphs_s1880, 0.002); end
  def test_lever_graphs_b1881; assert_in_epsilon(4.0, worksheet.lever_graphs_b1881, 0.002); end
  def test_lever_graphs_k1881; assert_in_epsilon(11.43, worksheet.lever_graphs_k1881, 0.002); end
  def test_lever_graphs_l1881; assert_in_epsilon(14.5, worksheet.lever_graphs_l1881, 0.002); end
  def test_lever_graphs_m1881; assert_in_epsilon(25.35, worksheet.lever_graphs_m1881, 0.002); end
  def test_lever_graphs_n1881; assert_in_epsilon(43.79, worksheet.lever_graphs_n1881, 0.002); end
  def test_lever_graphs_o1881; assert_in_epsilon(75.63, worksheet.lever_graphs_o1881, 0.002); end
  def test_lever_graphs_p1881; assert_in_epsilon(130.64, worksheet.lever_graphs_p1881, 0.002); end
  def test_lever_graphs_q1881; assert_in_epsilon(226.0, worksheet.lever_graphs_q1881, 0.002); end
  def test_lever_graphs_r1881; assert_in_epsilon(302.0, worksheet.lever_graphs_r1881, 0.002); end
  def test_lever_graphs_s1881; assert_in_epsilon(404.0, worksheet.lever_graphs_s1881, 0.002); end
  def test_lever_graphs_b1882; assert_equal("Comparator A", worksheet.lever_graphs_b1882); end
  def test_lever_graphs_b1883; assert_equal("Comparator B", worksheet.lever_graphs_b1883); end
  def test_lever_graphs_b1884; assert_equal("Comparator C", worksheet.lever_graphs_b1884); end
  def test_lever_graphs_c1854; assert_equal("1975", worksheet.lever_graphs_c1854); end
  def test_lever_graphs_d1854; assert_equal("1980", worksheet.lever_graphs_d1854); end
  def test_lever_graphs_e1854; assert_equal("1985", worksheet.lever_graphs_e1854); end
  def test_lever_graphs_f1854; assert_equal("1990", worksheet.lever_graphs_f1854); end
  def test_lever_graphs_g1854; assert_equal("1995", worksheet.lever_graphs_g1854); end
  def test_lever_graphs_h1854; assert_equal("2000", worksheet.lever_graphs_h1854); end
  def test_lever_graphs_i1854; assert_equal("2005", worksheet.lever_graphs_i1854); end
  def test_lever_graphs_j1854; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1854, 0.002); end
  def test_lever_graphs_k1854; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1854, 0.002); end
  def test_lever_graphs_l1854; assert_equal("2015", worksheet.lever_graphs_l1854); end
  def test_lever_graphs_m1854; assert_equal("2020", worksheet.lever_graphs_m1854); end
  def test_lever_graphs_n1854; assert_equal("2025", worksheet.lever_graphs_n1854); end
  def test_lever_graphs_o1854; assert_equal("2030", worksheet.lever_graphs_o1854); end
  def test_lever_graphs_p1854; assert_equal("2035", worksheet.lever_graphs_p1854); end
  def test_lever_graphs_q1854; assert_equal("2040", worksheet.lever_graphs_q1854); end
  def test_lever_graphs_r1854; assert_equal("2045", worksheet.lever_graphs_r1854); end
  def test_lever_graphs_s1854; assert_equal("2050", worksheet.lever_graphs_s1854); end
  def test_lever_graphs_b1855; assert_equal("Historic data", worksheet.lever_graphs_b1855); end
  def test_lever_graphs_b1856; assert_in_delta(1.0, worksheet.lever_graphs_b1856, 0.002); end
  def test_lever_graphs_k1856; assert_in_epsilon(970.0, worksheet.lever_graphs_k1856, 0.002); end
  def test_lever_graphs_l1856; assert_in_epsilon(1350.0, worksheet.lever_graphs_l1856, 0.002); end
  def test_lever_graphs_m1856; assert_in_epsilon(1380.0, worksheet.lever_graphs_m1856, 0.002); end
  def test_lever_graphs_n1856; assert_in_epsilon(1420.0, worksheet.lever_graphs_n1856, 0.002); end
  def test_lever_graphs_o1856; assert_in_epsilon(1420.0, worksheet.lever_graphs_o1856, 0.002); end
  def test_lever_graphs_p1856; assert_in_epsilon(1420.0, worksheet.lever_graphs_p1856, 0.002); end
  def test_lever_graphs_q1856; assert_in_epsilon(1188.0, worksheet.lever_graphs_q1856, 0.002); end
  def test_lever_graphs_r1856; assert_in_epsilon(1188.0, worksheet.lever_graphs_r1856, 0.002); end
  def test_lever_graphs_s1856; assert_in_epsilon(1188.0, worksheet.lever_graphs_s1856, 0.002); end
  def test_lever_graphs_b1857; assert_in_epsilon(2.0, worksheet.lever_graphs_b1857, 0.002); end
  def test_lever_graphs_k1857; assert_in_epsilon(970.0, worksheet.lever_graphs_k1857, 0.002); end
  def test_lever_graphs_l1857; assert_in_epsilon(1350.0, worksheet.lever_graphs_l1857, 0.002); end
  def test_lever_graphs_m1857; assert_in_epsilon(1410.0, worksheet.lever_graphs_m1857, 0.002); end
  def test_lever_graphs_n1857; assert_in_epsilon(1460.0, worksheet.lever_graphs_n1857, 0.002); end
  def test_lever_graphs_o1857; assert_in_epsilon(1515.0, worksheet.lever_graphs_o1857, 0.002); end
  def test_lever_graphs_p1857; assert_in_epsilon(1570.0, worksheet.lever_graphs_p1857, 0.002); end
  def test_lever_graphs_q1857; assert_in_epsilon(1625.0, worksheet.lever_graphs_q1857, 0.002); end
  def test_lever_graphs_r1857; assert_in_epsilon(1685.0, worksheet.lever_graphs_r1857, 0.002); end
  def test_lever_graphs_s1857; assert_in_epsilon(1750.0, worksheet.lever_graphs_s1857, 0.002); end
  def test_lever_graphs_b1858; assert_in_epsilon(3.0, worksheet.lever_graphs_b1858, 0.002); end
  def test_lever_graphs_k1858; assert_in_epsilon(970.0, worksheet.lever_graphs_k1858, 0.002); end
  def test_lever_graphs_l1858; assert_in_epsilon(1350.0, worksheet.lever_graphs_l1858, 0.002); end
  def test_lever_graphs_m1858; assert_in_epsilon(1510.0, worksheet.lever_graphs_m1858, 0.002); end
  def test_lever_graphs_n1858; assert_in_epsilon(1590.0, worksheet.lever_graphs_n1858, 0.002); end
  def test_lever_graphs_o1858; assert_in_epsilon(1670.0, worksheet.lever_graphs_o1858, 0.002); end
  def test_lever_graphs_p1858; assert_in_epsilon(1750.0, worksheet.lever_graphs_p1858, 0.002); end
  def test_lever_graphs_q1858; assert_in_epsilon(1865.0, worksheet.lever_graphs_q1858, 0.002); end
  def test_lever_graphs_r1858; assert_in_epsilon(1982.0, worksheet.lever_graphs_r1858, 0.002); end
  def test_lever_graphs_s1858; assert_in_epsilon(2101.0, worksheet.lever_graphs_s1858, 0.002); end
  def test_lever_graphs_b1859; assert_in_epsilon(4.0, worksheet.lever_graphs_b1859, 0.002); end
  def test_lever_graphs_k1859; assert_in_epsilon(970.0, worksheet.lever_graphs_k1859, 0.002); end
  def test_lever_graphs_l1859; assert_in_epsilon(1350.0, worksheet.lever_graphs_l1859, 0.002); end
  def test_lever_graphs_m1859; assert_in_epsilon(1650.0, worksheet.lever_graphs_m1859, 0.002); end
  def test_lever_graphs_n1859; assert_in_epsilon(1850.0, worksheet.lever_graphs_n1859, 0.002); end
  def test_lever_graphs_o1859; assert_in_epsilon(1995.0, worksheet.lever_graphs_o1859, 0.002); end
  def test_lever_graphs_p1859; assert_in_epsilon(2140.0, worksheet.lever_graphs_p1859, 0.002); end
  def test_lever_graphs_q1859; assert_in_epsilon(2285.0, worksheet.lever_graphs_q1859, 0.002); end
  def test_lever_graphs_r1859; assert_in_epsilon(2330.0, worksheet.lever_graphs_r1859, 0.002); end
  def test_lever_graphs_s1859; assert_in_epsilon(2375.0, worksheet.lever_graphs_s1859, 0.002); end
  def test_lever_graphs_b1860; assert_equal("Comparator A", worksheet.lever_graphs_b1860); end
  def test_lever_graphs_b1861; assert_equal("Comparator B", worksheet.lever_graphs_b1861); end
  def test_lever_graphs_b1862; assert_equal("Comparator C", worksheet.lever_graphs_b1862); end
  def test_lever_graphs_c2067; assert_equal("1975", worksheet.lever_graphs_c2067); end
  def test_lever_graphs_d2067; assert_equal("1980", worksheet.lever_graphs_d2067); end
  def test_lever_graphs_e2067; assert_equal("1985", worksheet.lever_graphs_e2067); end
  def test_lever_graphs_f2067; assert_equal("1990", worksheet.lever_graphs_f2067); end
  def test_lever_graphs_g2067; assert_equal("1995", worksheet.lever_graphs_g2067); end
  def test_lever_graphs_h2067; assert_equal("2000", worksheet.lever_graphs_h2067); end
  def test_lever_graphs_i2067; assert_equal("2005", worksheet.lever_graphs_i2067); end
  def test_lever_graphs_j2067; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2067, 0.002); end
  def test_lever_graphs_k2067; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2067, 0.002); end
  def test_lever_graphs_l2067; assert_equal("2015", worksheet.lever_graphs_l2067); end
  def test_lever_graphs_m2067; assert_equal("2020", worksheet.lever_graphs_m2067); end
  def test_lever_graphs_n2067; assert_equal("2025", worksheet.lever_graphs_n2067); end
  def test_lever_graphs_o2067; assert_equal("2030", worksheet.lever_graphs_o2067); end
  def test_lever_graphs_p2067; assert_equal("2035", worksheet.lever_graphs_p2067); end
  def test_lever_graphs_q2067; assert_equal("2040", worksheet.lever_graphs_q2067); end
  def test_lever_graphs_r2067; assert_equal("2045", worksheet.lever_graphs_r2067); end
  def test_lever_graphs_s2067; assert_equal("2050", worksheet.lever_graphs_s2067); end
  def test_lever_graphs_b2068; assert_equal("Historic data", worksheet.lever_graphs_b2068); end
  def test_lever_graphs_b2069; assert_in_delta(1.0, worksheet.lever_graphs_b2069, 0.002); end
  def test_lever_graphs_k2069; assert_in_delta(0.527, worksheet.lever_graphs_k2069, 0.002); end
  def test_lever_graphs_l2069; assert_in_epsilon(1.1, worksheet.lever_graphs_l2069, 0.002); end
  def test_lever_graphs_m2069; assert_in_epsilon(1.1, worksheet.lever_graphs_m2069, 0.002); end
  def test_lever_graphs_n2069; assert_in_epsilon(1.1, worksheet.lever_graphs_n2069, 0.002); end
  def test_lever_graphs_o2069; assert_in_epsilon(2.0, worksheet.lever_graphs_o2069, 0.002); end
  def test_lever_graphs_p2069; assert_in_epsilon(3.0, worksheet.lever_graphs_p2069, 0.002); end
  def test_lever_graphs_q2069; assert_in_epsilon(5.0, worksheet.lever_graphs_q2069, 0.002); end
  def test_lever_graphs_r2069; assert_in_epsilon(7.0, worksheet.lever_graphs_r2069, 0.002); end
  def test_lever_graphs_s2069; assert_in_epsilon(8.0, worksheet.lever_graphs_s2069, 0.002); end
  def test_lever_graphs_b2070; assert_in_epsilon(2.0, worksheet.lever_graphs_b2070, 0.002); end
  def test_lever_graphs_k2070; assert_in_delta(0.527, worksheet.lever_graphs_k2070, 0.002); end
  def test_lever_graphs_l2070; assert_in_epsilon(1.1, worksheet.lever_graphs_l2070, 0.002); end
  def test_lever_graphs_m2070; assert_in_epsilon(3.0, worksheet.lever_graphs_m2070, 0.002); end
  def test_lever_graphs_n2070; assert_in_epsilon(10.0, worksheet.lever_graphs_n2070, 0.002); end
  def test_lever_graphs_o2070; assert_in_epsilon(24.0, worksheet.lever_graphs_o2070, 0.002); end
  def test_lever_graphs_p2070; assert_in_epsilon(40.0, worksheet.lever_graphs_p2070, 0.002); end
  def test_lever_graphs_q2070; assert_in_epsilon(59.0, worksheet.lever_graphs_q2070, 0.002); end
  def test_lever_graphs_r2070; assert_in_epsilon(79.0, worksheet.lever_graphs_r2070, 0.002); end
  def test_lever_graphs_s2070; assert_in_epsilon(97.0, worksheet.lever_graphs_s2070, 0.002); end
  def test_lever_graphs_b2071; assert_in_epsilon(3.0, worksheet.lever_graphs_b2071, 0.002); end
  def test_lever_graphs_k2071; assert_in_delta(0.527, worksheet.lever_graphs_k2071, 0.002); end
  def test_lever_graphs_l2071; assert_in_epsilon(1.1, worksheet.lever_graphs_l2071, 0.002); end
  def test_lever_graphs_m2071; assert_in_epsilon(4.0, worksheet.lever_graphs_m2071, 0.002); end
  def test_lever_graphs_n2071; assert_in_epsilon(14.0, worksheet.lever_graphs_n2071, 0.002); end
  def test_lever_graphs_o2071; assert_in_epsilon(30.0, worksheet.lever_graphs_o2071, 0.002); end
  def test_lever_graphs_p2071; assert_in_epsilon(56.0, worksheet.lever_graphs_p2071, 0.002); end
  def test_lever_graphs_q2071; assert_in_epsilon(97.0, worksheet.lever_graphs_q2071, 0.002); end
  def test_lever_graphs_r2071; assert_in_epsilon(153.0, worksheet.lever_graphs_r2071, 0.002); end
  def test_lever_graphs_s2071; assert_in_epsilon(237.0, worksheet.lever_graphs_s2071, 0.002); end
  def test_lever_graphs_b2072; assert_in_epsilon(4.0, worksheet.lever_graphs_b2072, 0.002); end
  def test_lever_graphs_k2072; assert_in_delta(0.527, worksheet.lever_graphs_k2072, 0.002); end
  def test_lever_graphs_l2072; assert_in_epsilon(1.1, worksheet.lever_graphs_l2072, 0.002); end
  def test_lever_graphs_m2072; assert_in_epsilon(7.0, worksheet.lever_graphs_m2072, 0.002); end
  def test_lever_graphs_n2072; assert_in_epsilon(24.0, worksheet.lever_graphs_n2072, 0.002); end
  def test_lever_graphs_o2072; assert_in_epsilon(48.0, worksheet.lever_graphs_o2072, 0.002); end
  def test_lever_graphs_p2072; assert_in_epsilon(89.7, worksheet.lever_graphs_p2072, 0.002); end
  def test_lever_graphs_q2072; assert_in_epsilon(140.9, worksheet.lever_graphs_q2072, 0.002); end
  def test_lever_graphs_r2072; assert_in_epsilon(244.9, worksheet.lever_graphs_r2072, 0.002); end
  def test_lever_graphs_s2072; assert_in_epsilon(435.6, worksheet.lever_graphs_s2072, 0.002); end
  def test_lever_graphs_b2073; assert_equal("Comparator A", worksheet.lever_graphs_b2073); end
  def test_lever_graphs_b2074; assert_equal("Comparator B", worksheet.lever_graphs_b2074); end
  def test_lever_graphs_b2075; assert_equal("Comparator C", worksheet.lever_graphs_b2075); end
  def test_lever_graphs_c2051; assert_equal("1975", worksheet.lever_graphs_c2051); end
  def test_lever_graphs_d2051; assert_equal("1980", worksheet.lever_graphs_d2051); end
  def test_lever_graphs_e2051; assert_equal("1985", worksheet.lever_graphs_e2051); end
  def test_lever_graphs_f2051; assert_equal("1990", worksheet.lever_graphs_f2051); end
  def test_lever_graphs_g2051; assert_equal("1995", worksheet.lever_graphs_g2051); end
  def test_lever_graphs_h2051; assert_equal("2000", worksheet.lever_graphs_h2051); end
  def test_lever_graphs_i2051; assert_equal("2005", worksheet.lever_graphs_i2051); end
  def test_lever_graphs_j2051; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2051, 0.002); end
  def test_lever_graphs_k2051; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2051, 0.002); end
  def test_lever_graphs_l2051; assert_equal("2015", worksheet.lever_graphs_l2051); end
  def test_lever_graphs_m2051; assert_equal("2020", worksheet.lever_graphs_m2051); end
  def test_lever_graphs_n2051; assert_equal("2025", worksheet.lever_graphs_n2051); end
  def test_lever_graphs_o2051; assert_equal("2030", worksheet.lever_graphs_o2051); end
  def test_lever_graphs_p2051; assert_equal("2035", worksheet.lever_graphs_p2051); end
  def test_lever_graphs_q2051; assert_equal("2040", worksheet.lever_graphs_q2051); end
  def test_lever_graphs_r2051; assert_equal("2045", worksheet.lever_graphs_r2051); end
  def test_lever_graphs_s2051; assert_equal("2050", worksheet.lever_graphs_s2051); end
  def test_lever_graphs_b2052; assert_equal("Historic data", worksheet.lever_graphs_b2052); end
  def test_lever_graphs_b2053; assert_in_delta(1.0, worksheet.lever_graphs_b2053, 0.002); end
  def test_lever_graphs_k2053; assert_in_delta(0.527, worksheet.lever_graphs_k2053, 0.002); end
  def test_lever_graphs_l2053; assert_in_delta(1.0, worksheet.lever_graphs_l2053, 0.002); end
  def test_lever_graphs_m2053; assert_in_delta(1.0, worksheet.lever_graphs_m2053, 0.002); end
  def test_lever_graphs_n2053; assert_in_delta(1.0, worksheet.lever_graphs_n2053, 0.002); end
  def test_lever_graphs_o2053; assert_in_delta(1.0, worksheet.lever_graphs_o2053, 0.002); end
  def test_lever_graphs_p2053; assert_in_delta(1.0, worksheet.lever_graphs_p2053, 0.002); end
  def test_lever_graphs_q2053; assert_in_delta(1.0, worksheet.lever_graphs_q2053, 0.002); end
  def test_lever_graphs_r2053; assert_in_delta(0.0, (worksheet.lever_graphs_r2053||0), 0.002); end
  def test_lever_graphs_s2053; assert_in_delta(0.0, (worksheet.lever_graphs_s2053||0), 0.002); end
  def test_lever_graphs_b2054; assert_in_epsilon(2.0, worksheet.lever_graphs_b2054, 0.002); end
  def test_lever_graphs_k2054; assert_in_delta(0.527, worksheet.lever_graphs_k2054, 0.002); end
  def test_lever_graphs_l2054; assert_in_delta(1.0, worksheet.lever_graphs_l2054, 0.002); end
  def test_lever_graphs_m2054; assert_in_epsilon(2.0, worksheet.lever_graphs_m2054, 0.002); end
  def test_lever_graphs_n2054; assert_in_epsilon(4.0, worksheet.lever_graphs_n2054, 0.002); end
  def test_lever_graphs_o2054; assert_in_epsilon(8.0, worksheet.lever_graphs_o2054, 0.002); end
  def test_lever_graphs_p2054; assert_in_epsilon(13.0, worksheet.lever_graphs_p2054, 0.002); end
  def test_lever_graphs_q2054; assert_in_epsilon(21.0, worksheet.lever_graphs_q2054, 0.002); end
  def test_lever_graphs_r2054; assert_in_epsilon(28.0, worksheet.lever_graphs_r2054, 0.002); end
  def test_lever_graphs_s2054; assert_in_epsilon(35.0, worksheet.lever_graphs_s2054, 0.002); end
  def test_lever_graphs_b2055; assert_in_epsilon(3.0, worksheet.lever_graphs_b2055, 0.002); end
  def test_lever_graphs_k2055; assert_in_delta(0.527, worksheet.lever_graphs_k2055, 0.002); end
  def test_lever_graphs_l2055; assert_in_delta(1.0, worksheet.lever_graphs_l2055, 0.002); end
  def test_lever_graphs_m2055; assert_in_epsilon(2.0, worksheet.lever_graphs_m2055, 0.002); end
  def test_lever_graphs_n2055; assert_in_epsilon(6.0, worksheet.lever_graphs_n2055, 0.002); end
  def test_lever_graphs_o2055; assert_in_epsilon(11.0, worksheet.lever_graphs_o2055, 0.002); end
  def test_lever_graphs_p2055; assert_in_epsilon(22.0, worksheet.lever_graphs_p2055, 0.002); end
  def test_lever_graphs_q2055; assert_in_epsilon(38.0, worksheet.lever_graphs_q2055, 0.002); end
  def test_lever_graphs_r2055; assert_in_epsilon(70.0, worksheet.lever_graphs_r2055, 0.002); end
  def test_lever_graphs_s2055; assert_in_epsilon(132.0, worksheet.lever_graphs_s2055, 0.002); end
  def test_lever_graphs_b2056; assert_in_epsilon(4.0, worksheet.lever_graphs_b2056, 0.002); end
  def test_lever_graphs_k2056; assert_in_delta(0.527, worksheet.lever_graphs_k2056, 0.002); end
  def test_lever_graphs_l2056; assert_in_delta(1.0, worksheet.lever_graphs_l2056, 0.002); end
  def test_lever_graphs_m2056; assert_in_epsilon(3.0, worksheet.lever_graphs_m2056, 0.002); end
  def test_lever_graphs_n2056; assert_in_epsilon(10.0, worksheet.lever_graphs_n2056, 0.002); end
  def test_lever_graphs_o2056; assert_in_epsilon(18.0, worksheet.lever_graphs_o2056, 0.002); end
  def test_lever_graphs_p2056; assert_in_epsilon(31.7, worksheet.lever_graphs_p2056, 0.002); end
  def test_lever_graphs_q2056; assert_in_epsilon(55.9, worksheet.lever_graphs_q2056, 0.002); end
  def test_lever_graphs_r2056; assert_in_epsilon(127.9, worksheet.lever_graphs_r2056, 0.002); end
  def test_lever_graphs_s2056; assert_in_epsilon(292.6, worksheet.lever_graphs_s2056, 0.002); end
  def test_lever_graphs_b2057; assert_equal("Comparator A", worksheet.lever_graphs_b2057); end
  def test_lever_graphs_b2058; assert_equal("Comparator B", worksheet.lever_graphs_b2058); end
  def test_lever_graphs_b2059; assert_equal("Comparator C", worksheet.lever_graphs_b2059); end
  def test_lever_graphs_c2035; assert_equal("1975", worksheet.lever_graphs_c2035); end
  def test_lever_graphs_d2035; assert_equal("1980", worksheet.lever_graphs_d2035); end
  def test_lever_graphs_e2035; assert_equal("1985", worksheet.lever_graphs_e2035); end
  def test_lever_graphs_f2035; assert_equal("1990", worksheet.lever_graphs_f2035); end
  def test_lever_graphs_g2035; assert_equal("1995", worksheet.lever_graphs_g2035); end
  def test_lever_graphs_h2035; assert_equal("2000", worksheet.lever_graphs_h2035); end
  def test_lever_graphs_i2035; assert_equal("2005", worksheet.lever_graphs_i2035); end
  def test_lever_graphs_j2035; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2035, 0.002); end
  def test_lever_graphs_k2035; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2035, 0.002); end
  def test_lever_graphs_l2035; assert_equal("2015", worksheet.lever_graphs_l2035); end
  def test_lever_graphs_m2035; assert_equal("2020", worksheet.lever_graphs_m2035); end
  def test_lever_graphs_n2035; assert_equal("2025", worksheet.lever_graphs_n2035); end
  def test_lever_graphs_o2035; assert_equal("2030", worksheet.lever_graphs_o2035); end
  def test_lever_graphs_p2035; assert_equal("2035", worksheet.lever_graphs_p2035); end
  def test_lever_graphs_q2035; assert_equal("2040", worksheet.lever_graphs_q2035); end
  def test_lever_graphs_r2035; assert_equal("2045", worksheet.lever_graphs_r2035); end
  def test_lever_graphs_s2035; assert_equal("2050", worksheet.lever_graphs_s2035); end
  def test_lever_graphs_b2036; assert_equal("Historic data", worksheet.lever_graphs_b2036); end
  def test_lever_graphs_b2037; assert_in_delta(1.0, worksheet.lever_graphs_b2037, 0.002); end
  def test_lever_graphs_k2037; assert_in_delta(0.0, (worksheet.lever_graphs_k2037||0), 0.002); end
  def test_lever_graphs_l2037; assert_in_delta(0.1, worksheet.lever_graphs_l2037, 0.002); end
  def test_lever_graphs_m2037; assert_in_delta(0.1, worksheet.lever_graphs_m2037, 0.002); end
  def test_lever_graphs_n2037; assert_in_delta(0.1, worksheet.lever_graphs_n2037, 0.002); end
  def test_lever_graphs_o2037; assert_in_delta(1.0, worksheet.lever_graphs_o2037, 0.002); end
  def test_lever_graphs_p2037; assert_in_epsilon(2.0, worksheet.lever_graphs_p2037, 0.002); end
  def test_lever_graphs_q2037; assert_in_epsilon(4.0, worksheet.lever_graphs_q2037, 0.002); end
  def test_lever_graphs_r2037; assert_in_epsilon(7.0, worksheet.lever_graphs_r2037, 0.002); end
  def test_lever_graphs_s2037; assert_in_epsilon(8.0, worksheet.lever_graphs_s2037, 0.002); end
  def test_lever_graphs_b2038; assert_in_epsilon(2.0, worksheet.lever_graphs_b2038, 0.002); end
  def test_lever_graphs_k2038; assert_in_delta(0.0, (worksheet.lever_graphs_k2038||0), 0.002); end
  def test_lever_graphs_l2038; assert_in_delta(0.1, worksheet.lever_graphs_l2038, 0.002); end
  def test_lever_graphs_m2038; assert_in_delta(1.0, worksheet.lever_graphs_m2038, 0.002); end
  def test_lever_graphs_n2038; assert_in_epsilon(6.0, worksheet.lever_graphs_n2038, 0.002); end
  def test_lever_graphs_o2038; assert_in_epsilon(16.0, worksheet.lever_graphs_o2038, 0.002); end
  def test_lever_graphs_p2038; assert_in_epsilon(27.0, worksheet.lever_graphs_p2038, 0.002); end
  def test_lever_graphs_q2038; assert_in_epsilon(38.0, worksheet.lever_graphs_q2038, 0.002); end
  def test_lever_graphs_r2038; assert_in_epsilon(51.0, worksheet.lever_graphs_r2038, 0.002); end
  def test_lever_graphs_s2038; assert_in_epsilon(62.0, worksheet.lever_graphs_s2038, 0.002); end
  def test_lever_graphs_b2039; assert_in_epsilon(3.0, worksheet.lever_graphs_b2039, 0.002); end
  def test_lever_graphs_k2039; assert_in_delta(0.0, (worksheet.lever_graphs_k2039||0), 0.002); end
  def test_lever_graphs_l2039; assert_in_delta(0.1, worksheet.lever_graphs_l2039, 0.002); end
  def test_lever_graphs_m2039; assert_in_epsilon(2.0, worksheet.lever_graphs_m2039, 0.002); end
  def test_lever_graphs_n2039; assert_in_epsilon(8.0, worksheet.lever_graphs_n2039, 0.002); end
  def test_lever_graphs_o2039; assert_in_epsilon(19.0, worksheet.lever_graphs_o2039, 0.002); end
  def test_lever_graphs_p2039; assert_in_epsilon(34.0, worksheet.lever_graphs_p2039, 0.002); end
  def test_lever_graphs_q2039; assert_in_epsilon(59.0, worksheet.lever_graphs_q2039, 0.002); end
  def test_lever_graphs_r2039; assert_in_epsilon(83.0, worksheet.lever_graphs_r2039, 0.002); end
  def test_lever_graphs_s2039; assert_in_epsilon(105.0, worksheet.lever_graphs_s2039, 0.002); end
  def test_lever_graphs_b2040; assert_in_epsilon(4.0, worksheet.lever_graphs_b2040, 0.002); end
  def test_lever_graphs_k2040; assert_in_delta(0.0, (worksheet.lever_graphs_k2040||0), 0.002); end
  def test_lever_graphs_l2040; assert_in_delta(0.1, worksheet.lever_graphs_l2040, 0.002); end
  def test_lever_graphs_m2040; assert_in_epsilon(4.0, worksheet.lever_graphs_m2040, 0.002); end
  def test_lever_graphs_n2040; assert_in_epsilon(14.0, worksheet.lever_graphs_n2040, 0.002); end
  def test_lever_graphs_o2040; assert_in_epsilon(30.0, worksheet.lever_graphs_o2040, 0.002); end
  def test_lever_graphs_p2040; assert_in_epsilon(58.0, worksheet.lever_graphs_p2040, 0.002); end
  def test_lever_graphs_q2040; assert_in_epsilon(85.0, worksheet.lever_graphs_q2040, 0.002); end
  def test_lever_graphs_r2040; assert_in_epsilon(117.0, worksheet.lever_graphs_r2040, 0.002); end
  def test_lever_graphs_s2040; assert_in_epsilon(143.0, worksheet.lever_graphs_s2040, 0.002); end
  def test_lever_graphs_b2041; assert_equal("Comparator A", worksheet.lever_graphs_b2041); end
  def test_lever_graphs_b2042; assert_equal("Comparator B", worksheet.lever_graphs_b2042); end
  def test_lever_graphs_b2043; assert_equal("Comparator C", worksheet.lever_graphs_b2043); end
  def test_lever_graphs_c1833; assert_equal("1975", worksheet.lever_graphs_c1833); end
  def test_lever_graphs_d1833; assert_equal("1980", worksheet.lever_graphs_d1833); end
  def test_lever_graphs_e1833; assert_equal("1985", worksheet.lever_graphs_e1833); end
  def test_lever_graphs_f1833; assert_equal("1990", worksheet.lever_graphs_f1833); end
  def test_lever_graphs_g1833; assert_equal("1995", worksheet.lever_graphs_g1833); end
  def test_lever_graphs_h1833; assert_equal("2000", worksheet.lever_graphs_h1833); end
  def test_lever_graphs_i1833; assert_equal("2005", worksheet.lever_graphs_i1833); end
  def test_lever_graphs_j1833; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1833, 0.002); end
  def test_lever_graphs_k1833; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1833, 0.002); end
  def test_lever_graphs_l1833; assert_equal("2015", worksheet.lever_graphs_l1833); end
  def test_lever_graphs_m1833; assert_equal("2020", worksheet.lever_graphs_m1833); end
  def test_lever_graphs_n1833; assert_equal("2025", worksheet.lever_graphs_n1833); end
  def test_lever_graphs_o1833; assert_equal("2030", worksheet.lever_graphs_o1833); end
  def test_lever_graphs_p1833; assert_equal("2035", worksheet.lever_graphs_p1833); end
  def test_lever_graphs_q1833; assert_equal("2040", worksheet.lever_graphs_q1833); end
  def test_lever_graphs_r1833; assert_equal("2045", worksheet.lever_graphs_r1833); end
  def test_lever_graphs_s1833; assert_equal("2050", worksheet.lever_graphs_s1833); end
  def test_lever_graphs_b1834; assert_equal("Historic data", worksheet.lever_graphs_b1834); end
  def test_lever_graphs_b1835; assert_in_delta(1.0, worksheet.lever_graphs_b1835, 0.002); end
  def test_lever_graphs_k1835; assert_in_epsilon(364.0, worksheet.lever_graphs_k1835, 0.002); end
  def test_lever_graphs_l1835; assert_in_epsilon(415.0, worksheet.lever_graphs_l1835, 0.002); end
  def test_lever_graphs_m1835; assert_in_epsilon(400.0, worksheet.lever_graphs_m1835, 0.002); end
  def test_lever_graphs_n1835; assert_in_epsilon(300.0, worksheet.lever_graphs_n1835, 0.002); end
  def test_lever_graphs_o1835; assert_in_epsilon(200.0, worksheet.lever_graphs_o1835, 0.002); end
  def test_lever_graphs_p1835; assert_in_epsilon(200.0, worksheet.lever_graphs_p1835, 0.002); end
  def test_lever_graphs_q1835; assert_in_epsilon(100.0, worksheet.lever_graphs_q1835, 0.002); end
  def test_lever_graphs_r1835; assert_in_epsilon(50.0, worksheet.lever_graphs_r1835, 0.002); end
  def test_lever_graphs_s1835; assert_in_delta(0.0, (worksheet.lever_graphs_s1835||0), 0.002); end
  def test_lever_graphs_b1836; assert_in_epsilon(2.0, worksheet.lever_graphs_b1836, 0.002); end
  def test_lever_graphs_k1836; assert_in_epsilon(364.0, worksheet.lever_graphs_k1836, 0.002); end
  def test_lever_graphs_l1836; assert_in_epsilon(415.0, worksheet.lever_graphs_l1836, 0.002); end
  def test_lever_graphs_m1836; assert_in_epsilon(475.0, worksheet.lever_graphs_m1836, 0.002); end
  def test_lever_graphs_n1836; assert_in_epsilon(498.0, worksheet.lever_graphs_n1836, 0.002); end
  def test_lever_graphs_o1836; assert_in_epsilon(530.0, worksheet.lever_graphs_o1836, 0.002); end
  def test_lever_graphs_p1836; assert_in_epsilon(562.0, worksheet.lever_graphs_p1836, 0.002); end
  def test_lever_graphs_q1836; assert_in_epsilon(601.0, worksheet.lever_graphs_q1836, 0.002); end
  def test_lever_graphs_r1836; assert_in_epsilon(643.0, worksheet.lever_graphs_r1836, 0.002); end
  def test_lever_graphs_s1836; assert_in_epsilon(685.0, worksheet.lever_graphs_s1836, 0.002); end
  def test_lever_graphs_b1837; assert_in_epsilon(3.0, worksheet.lever_graphs_b1837, 0.002); end
  def test_lever_graphs_k1837; assert_in_epsilon(364.0, worksheet.lever_graphs_k1837, 0.002); end
  def test_lever_graphs_l1837; assert_in_epsilon(415.0, worksheet.lever_graphs_l1837, 0.002); end
  def test_lever_graphs_m1837; assert_in_epsilon(510.0, worksheet.lever_graphs_m1837, 0.002); end
  def test_lever_graphs_n1837; assert_in_epsilon(585.0, worksheet.lever_graphs_n1837, 0.002); end
  def test_lever_graphs_o1837; assert_in_epsilon(660.0, worksheet.lever_graphs_o1837, 0.002); end
  def test_lever_graphs_p1837; assert_in_epsilon(735.0, worksheet.lever_graphs_p1837, 0.002); end
  def test_lever_graphs_q1837; assert_in_epsilon(817.0, worksheet.lever_graphs_q1837, 0.002); end
  def test_lever_graphs_r1837; assert_in_epsilon(920.0, worksheet.lever_graphs_r1837, 0.002); end
  def test_lever_graphs_s1837; assert_in_epsilon(1030.0, worksheet.lever_graphs_s1837, 0.002); end
  def test_lever_graphs_b1838; assert_in_epsilon(4.0, worksheet.lever_graphs_b1838, 0.002); end
  def test_lever_graphs_k1838; assert_in_epsilon(364.0, worksheet.lever_graphs_k1838, 0.002); end
  def test_lever_graphs_l1838; assert_in_epsilon(415.0, worksheet.lever_graphs_l1838, 0.002); end
  def test_lever_graphs_m1838; assert_in_epsilon(546.0, worksheet.lever_graphs_m1838, 0.002); end
  def test_lever_graphs_n1838; assert_in_epsilon(670.0, worksheet.lever_graphs_n1838, 0.002); end
  def test_lever_graphs_o1838; assert_in_epsilon(823.0, worksheet.lever_graphs_o1838, 0.002); end
  def test_lever_graphs_p1838; assert_in_epsilon(1010.0, worksheet.lever_graphs_p1838, 0.002); end
  def test_lever_graphs_q1838; assert_in_epsilon(1240.0, worksheet.lever_graphs_q1838, 0.002); end
  def test_lever_graphs_r1838; assert_in_epsilon(1523.0, worksheet.lever_graphs_r1838, 0.002); end
  def test_lever_graphs_s1838; assert_in_epsilon(1870.0, worksheet.lever_graphs_s1838, 0.002); end
  def test_lever_graphs_b1839; assert_equal("Comparator A", worksheet.lever_graphs_b1839); end
  def test_lever_graphs_b1840; assert_equal("Comparator B", worksheet.lever_graphs_b1840); end
  def test_lever_graphs_b1841; assert_equal("Comparator C", worksheet.lever_graphs_b1841); end
  def test_lever_graphs_c1995; assert_equal("1975", worksheet.lever_graphs_c1995); end
  def test_lever_graphs_d1995; assert_equal("1980", worksheet.lever_graphs_d1995); end
  def test_lever_graphs_e1995; assert_equal("1985", worksheet.lever_graphs_e1995); end
  def test_lever_graphs_f1995; assert_equal("1990", worksheet.lever_graphs_f1995); end
  def test_lever_graphs_g1995; assert_equal("1995", worksheet.lever_graphs_g1995); end
  def test_lever_graphs_h1995; assert_equal("2000", worksheet.lever_graphs_h1995); end
  def test_lever_graphs_i1995; assert_equal("2005", worksheet.lever_graphs_i1995); end
  def test_lever_graphs_j1995; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1995, 0.002); end
  def test_lever_graphs_k1995; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1995, 0.002); end
  def test_lever_graphs_l1995; assert_equal("2015", worksheet.lever_graphs_l1995); end
  def test_lever_graphs_m1995; assert_equal("2020", worksheet.lever_graphs_m1995); end
  def test_lever_graphs_n1995; assert_equal("2025", worksheet.lever_graphs_n1995); end
  def test_lever_graphs_o1995; assert_equal("2030", worksheet.lever_graphs_o1995); end
  def test_lever_graphs_p1995; assert_equal("2035", worksheet.lever_graphs_p1995); end
  def test_lever_graphs_q1995; assert_equal("2040", worksheet.lever_graphs_q1995); end
  def test_lever_graphs_r1995; assert_equal("2045", worksheet.lever_graphs_r1995); end
  def test_lever_graphs_s1995; assert_equal("2050", worksheet.lever_graphs_s1995); end
  def test_lever_graphs_b1996; assert_equal("Historic data", worksheet.lever_graphs_b1996); end
  def test_lever_graphs_b1997; assert_in_delta(1.0, worksheet.lever_graphs_b1997, 0.002); end
  def test_lever_graphs_k1997; assert_in_epsilon(4.1, worksheet.lever_graphs_k1997, 0.002); end
  def test_lever_graphs_l1997; assert_in_epsilon(15.0, worksheet.lever_graphs_l1997, 0.002); end
  def test_lever_graphs_m1997; assert_in_epsilon(17.0, worksheet.lever_graphs_m1997, 0.002); end
  def test_lever_graphs_n1997; assert_in_epsilon(13.0, worksheet.lever_graphs_n1997, 0.002); end
  def test_lever_graphs_o1997; assert_in_delta(0.0, (worksheet.lever_graphs_o1997||0), 0.002); end
  def test_lever_graphs_p1997; assert_in_delta(0.0, (worksheet.lever_graphs_p1997||0), 0.002); end
  def test_lever_graphs_q1997; assert_in_delta(0.0, (worksheet.lever_graphs_q1997||0), 0.002); end
  def test_lever_graphs_r1997; assert_in_delta(0.0, (worksheet.lever_graphs_r1997||0), 0.002); end
  def test_lever_graphs_s1997; assert_in_delta(0.0, (worksheet.lever_graphs_s1997||0), 0.002); end
  def test_lever_graphs_b1998; assert_in_epsilon(2.0, worksheet.lever_graphs_b1998, 0.002); end
  def test_lever_graphs_k1998; assert_in_epsilon(4.1, worksheet.lever_graphs_k1998, 0.002); end
  def test_lever_graphs_l1998; assert_in_epsilon(15.0, worksheet.lever_graphs_l1998, 0.002); end
  def test_lever_graphs_m1998; assert_in_epsilon(33.0, worksheet.lever_graphs_m1998, 0.002); end
  def test_lever_graphs_n1998; assert_in_epsilon(50.0, worksheet.lever_graphs_n1998, 0.002); end
  def test_lever_graphs_o1998; assert_in_epsilon(96.0, worksheet.lever_graphs_o1998, 0.002); end
  def test_lever_graphs_p1998; assert_in_epsilon(147.0, worksheet.lever_graphs_p1998, 0.002); end
  def test_lever_graphs_q1998; assert_in_epsilon(220.0, worksheet.lever_graphs_q1998, 0.002); end
  def test_lever_graphs_r1998; assert_in_epsilon(376.0, worksheet.lever_graphs_r1998, 0.002); end
  def test_lever_graphs_s1998; assert_in_epsilon(455.0, worksheet.lever_graphs_s1998, 0.002); end
  def test_lever_graphs_b1999; assert_in_epsilon(3.0, worksheet.lever_graphs_b1999, 0.002); end
  def test_lever_graphs_k1999; assert_in_epsilon(4.1, worksheet.lever_graphs_k1999, 0.002); end
  def test_lever_graphs_l1999; assert_in_epsilon(15.0, worksheet.lever_graphs_l1999, 0.002); end
  def test_lever_graphs_m1999; assert_in_epsilon(46.0, worksheet.lever_graphs_m1999, 0.002); end
  def test_lever_graphs_n1999; assert_in_epsilon(87.0, worksheet.lever_graphs_n1999, 0.002); end
  def test_lever_graphs_o1999; assert_in_epsilon(188.0, worksheet.lever_graphs_o1999, 0.002); end
  def test_lever_graphs_p1999; assert_in_epsilon(295.0, worksheet.lever_graphs_p1999, 0.002); end
  def test_lever_graphs_q1999; assert_in_epsilon(424.0, worksheet.lever_graphs_q1999, 0.002); end
  def test_lever_graphs_r1999; assert_in_epsilon(708.0, worksheet.lever_graphs_r1999, 0.002); end
  def test_lever_graphs_s1999; assert_in_epsilon(910.0, worksheet.lever_graphs_s1999, 0.002); end
  def test_lever_graphs_b2000; assert_in_epsilon(4.0, worksheet.lever_graphs_b2000, 0.002); end
  def test_lever_graphs_k2000; assert_in_epsilon(4.1, worksheet.lever_graphs_k2000, 0.002); end
  def test_lever_graphs_l2000; assert_in_epsilon(15.0, worksheet.lever_graphs_l2000, 0.002); end
  def test_lever_graphs_m2000; assert_in_epsilon(71.0, worksheet.lever_graphs_m2000, 0.002); end
  def test_lever_graphs_n2000; assert_in_epsilon(177.0, worksheet.lever_graphs_n2000, 0.002); end
  def test_lever_graphs_o2000; assert_in_epsilon(440.0, worksheet.lever_graphs_o2000, 0.002); end
  def test_lever_graphs_p2000; assert_in_epsilon(647.0, worksheet.lever_graphs_p2000, 0.002); end
  def test_lever_graphs_q2000; assert_in_epsilon(951.0, worksheet.lever_graphs_q2000, 0.002); end
  def test_lever_graphs_r2000; assert_in_epsilon(1157.0, worksheet.lever_graphs_r2000, 0.002); end
  def test_lever_graphs_s2000; assert_in_epsilon(1408.0, worksheet.lever_graphs_s2000, 0.002); end
  def test_lever_graphs_b2001; assert_equal("Comparator A", worksheet.lever_graphs_b2001); end
  def test_lever_graphs_b2002; assert_equal("Comparator B", worksheet.lever_graphs_b2002); end
  def test_lever_graphs_b2003; assert_equal("Comparator C", worksheet.lever_graphs_b2003); end
  def test_lever_graphs_c1979; assert_equal("1975", worksheet.lever_graphs_c1979); end
  def test_lever_graphs_d1979; assert_equal("1980", worksheet.lever_graphs_d1979); end
  def test_lever_graphs_e1979; assert_equal("1985", worksheet.lever_graphs_e1979); end
  def test_lever_graphs_f1979; assert_equal("1990", worksheet.lever_graphs_f1979); end
  def test_lever_graphs_g1979; assert_equal("1995", worksheet.lever_graphs_g1979); end
  def test_lever_graphs_h1979; assert_equal("2000", worksheet.lever_graphs_h1979); end
  def test_lever_graphs_i1979; assert_equal("2005", worksheet.lever_graphs_i1979); end
  def test_lever_graphs_j1979; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1979, 0.002); end
  def test_lever_graphs_k1979; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1979, 0.002); end
  def test_lever_graphs_l1979; assert_equal("2015", worksheet.lever_graphs_l1979); end
  def test_lever_graphs_m1979; assert_equal("2020", worksheet.lever_graphs_m1979); end
  def test_lever_graphs_n1979; assert_equal("2025", worksheet.lever_graphs_n1979); end
  def test_lever_graphs_o1979; assert_equal("2030", worksheet.lever_graphs_o1979); end
  def test_lever_graphs_p1979; assert_equal("2035", worksheet.lever_graphs_p1979); end
  def test_lever_graphs_q1979; assert_equal("2040", worksheet.lever_graphs_q1979); end
  def test_lever_graphs_r1979; assert_equal("2045", worksheet.lever_graphs_r1979); end
  def test_lever_graphs_s1979; assert_equal("2050", worksheet.lever_graphs_s1979); end
  def test_lever_graphs_b1980; assert_equal("Historic data", worksheet.lever_graphs_b1980); end
  def test_lever_graphs_b1981; assert_in_delta(1.0, worksheet.lever_graphs_b1981, 0.002); end
  def test_lever_graphs_k1981; assert_in_epsilon(233.57, worksheet.lever_graphs_k1981, 0.002); end
  def test_lever_graphs_l1981; assert_in_epsilon(399.0, worksheet.lever_graphs_l1981, 0.002); end
  def test_lever_graphs_m1981; assert_in_epsilon(376.0, worksheet.lever_graphs_m1981, 0.002); end
  def test_lever_graphs_n1981; assert_in_epsilon(335.0, worksheet.lever_graphs_n1981, 0.002); end
  def test_lever_graphs_o1981; assert_in_epsilon(198.0, worksheet.lever_graphs_o1981, 0.002); end
  def test_lever_graphs_p1981; assert_in_delta(0.0, (worksheet.lever_graphs_p1981||0), 0.002); end
  def test_lever_graphs_q1981; assert_in_delta(0.0, (worksheet.lever_graphs_q1981||0), 0.002); end
  def test_lever_graphs_r1981; assert_in_delta(0.0, (worksheet.lever_graphs_r1981||0), 0.002); end
  def test_lever_graphs_s1981; assert_in_delta(0.0, (worksheet.lever_graphs_s1981||0), 0.002); end
  def test_lever_graphs_b1982; assert_in_epsilon(2.0, worksheet.lever_graphs_b1982, 0.002); end
  def test_lever_graphs_k1982; assert_in_epsilon(233.57, worksheet.lever_graphs_k1982, 0.002); end
  def test_lever_graphs_l1982; assert_in_epsilon(399.0, worksheet.lever_graphs_l1982, 0.002); end
  def test_lever_graphs_m1982; assert_in_epsilon(564.0, worksheet.lever_graphs_m1982, 0.002); end
  def test_lever_graphs_n1982; assert_in_epsilon(607.0, worksheet.lever_graphs_n1982, 0.002); end
  def test_lever_graphs_o1982; assert_in_epsilon(741.0, worksheet.lever_graphs_o1982, 0.002); end
  def test_lever_graphs_p1982; assert_in_epsilon(878.0, worksheet.lever_graphs_p1982, 0.002); end
  def test_lever_graphs_q1982; assert_in_epsilon(1068.0, worksheet.lever_graphs_q1982, 0.002); end
  def test_lever_graphs_r1982; assert_in_epsilon(1499.0, worksheet.lever_graphs_r1982, 0.002); end
  def test_lever_graphs_s1982; assert_in_epsilon(1862.0, worksheet.lever_graphs_s1982, 0.002); end
  def test_lever_graphs_b1983; assert_in_epsilon(3.0, worksheet.lever_graphs_b1983, 0.002); end
  def test_lever_graphs_k1983; assert_in_epsilon(233.57, worksheet.lever_graphs_k1983, 0.002); end
  def test_lever_graphs_l1983; assert_in_epsilon(399.0, worksheet.lever_graphs_l1983, 0.002); end
  def test_lever_graphs_m1983; assert_in_epsilon(778.0, worksheet.lever_graphs_m1983, 0.002); end
  def test_lever_graphs_n1983; assert_in_epsilon(982.0, worksheet.lever_graphs_n1983, 0.002); end
  def test_lever_graphs_o1983; assert_in_epsilon(1466.0, worksheet.lever_graphs_o1983, 0.002); end
  def test_lever_graphs_p1983; assert_in_epsilon(1945.0, worksheet.lever_graphs_p1983, 0.002); end
  def test_lever_graphs_q1983; assert_in_epsilon(2369.0, worksheet.lever_graphs_q1983, 0.002); end
  def test_lever_graphs_r1983; assert_in_epsilon(3037.0, worksheet.lever_graphs_r1983, 0.002); end
  def test_lever_graphs_s1983; assert_in_epsilon(3800.0, worksheet.lever_graphs_s1983, 0.002); end
  def test_lever_graphs_b1984; assert_in_epsilon(4.0, worksheet.lever_graphs_b1984, 0.002); end
  def test_lever_graphs_k1984; assert_in_epsilon(233.57, worksheet.lever_graphs_k1984, 0.002); end
  def test_lever_graphs_l1984; assert_in_epsilon(399.0, worksheet.lever_graphs_l1984, 0.002); end
  def test_lever_graphs_m1984; assert_in_epsilon(1073.0, worksheet.lever_graphs_m1984, 0.002); end
  def test_lever_graphs_n1984; assert_in_epsilon(1576.0, worksheet.lever_graphs_n1984, 0.002); end
  def test_lever_graphs_o1984; assert_in_epsilon(2316.0, worksheet.lever_graphs_o1984, 0.002); end
  def test_lever_graphs_p1984; assert_in_epsilon(3100.0, worksheet.lever_graphs_p1984, 0.002); end
  def test_lever_graphs_q1984; assert_in_epsilon(4149.0, worksheet.lever_graphs_q1984, 0.002); end
  def test_lever_graphs_r1984; assert_in_epsilon(4581.0, worksheet.lever_graphs_r1984, 0.002); end
  def test_lever_graphs_s1984; assert_in_epsilon(5058.0, worksheet.lever_graphs_s1984, 0.002); end
  def test_lever_graphs_b1985; assert_equal("Comparator A", worksheet.lever_graphs_b1985); end
  def test_lever_graphs_b1986; assert_equal("Comparator B", worksheet.lever_graphs_b1986); end
  def test_lever_graphs_b1987; assert_equal("Comparator C", worksheet.lever_graphs_b1987); end
  def test_lever_graphs_c1955; assert_equal("1975", worksheet.lever_graphs_c1955); end
  def test_lever_graphs_d1955; assert_equal("1980", worksheet.lever_graphs_d1955); end
  def test_lever_graphs_e1955; assert_equal("1985", worksheet.lever_graphs_e1955); end
  def test_lever_graphs_f1955; assert_equal("1990", worksheet.lever_graphs_f1955); end
  def test_lever_graphs_g1955; assert_equal("1995", worksheet.lever_graphs_g1955); end
  def test_lever_graphs_h1955; assert_equal("2000", worksheet.lever_graphs_h1955); end
  def test_lever_graphs_i1955; assert_equal("2005", worksheet.lever_graphs_i1955); end
  def test_lever_graphs_j1955; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1955, 0.002); end
  def test_lever_graphs_k1955; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1955, 0.002); end
  def test_lever_graphs_l1955; assert_equal("2015", worksheet.lever_graphs_l1955); end
  def test_lever_graphs_m1955; assert_equal("2020", worksheet.lever_graphs_m1955); end
  def test_lever_graphs_n1955; assert_equal("2025", worksheet.lever_graphs_n1955); end
  def test_lever_graphs_o1955; assert_equal("2030", worksheet.lever_graphs_o1955); end
  def test_lever_graphs_p1955; assert_equal("2035", worksheet.lever_graphs_p1955); end
  def test_lever_graphs_q1955; assert_equal("2040", worksheet.lever_graphs_q1955); end
  def test_lever_graphs_r1955; assert_equal("2045", worksheet.lever_graphs_r1955); end
  def test_lever_graphs_s1955; assert_equal("2050", worksheet.lever_graphs_s1955); end
  def test_lever_graphs_b1956; assert_equal("Historic data", worksheet.lever_graphs_b1956); end
  def test_lever_graphs_b1957; assert_in_delta(1.0, worksheet.lever_graphs_b1957, 0.002); end
  def test_lever_graphs_k1957; assert_in_epsilon(71.28999999999999, worksheet.lever_graphs_k1957, 0.002); end
  def test_lever_graphs_l1957; assert_in_epsilon(173.0, worksheet.lever_graphs_l1957, 0.002); end
  def test_lever_graphs_m1957; assert_in_epsilon(140.0, worksheet.lever_graphs_m1957, 0.002); end
  def test_lever_graphs_n1957; assert_in_epsilon(115.0, worksheet.lever_graphs_n1957, 0.002); end
  def test_lever_graphs_o1957; assert_in_epsilon(75.0, worksheet.lever_graphs_o1957, 0.002); end
  def test_lever_graphs_p1957; assert_in_epsilon(55.0, worksheet.lever_graphs_p1957, 0.002); end
  def test_lever_graphs_q1957; assert_in_delta(0.0, (worksheet.lever_graphs_q1957||0), 0.002); end
  def test_lever_graphs_r1957; assert_in_delta(0.0, (worksheet.lever_graphs_r1957||0), 0.002); end
  def test_lever_graphs_s1957; assert_in_delta(0.0, (worksheet.lever_graphs_s1957||0), 0.002); end
  def test_lever_graphs_b1958; assert_in_epsilon(2.0, worksheet.lever_graphs_b1958, 0.002); end
  def test_lever_graphs_k1958; assert_in_epsilon(71.28999999999999, worksheet.lever_graphs_k1958, 0.002); end
  def test_lever_graphs_l1958; assert_in_epsilon(173.0, worksheet.lever_graphs_l1958, 0.002); end
  def test_lever_graphs_m1958; assert_in_epsilon(278.46000000000004, worksheet.lever_graphs_m1958, 0.002); end
  def test_lever_graphs_n1958; assert_in_epsilon(398.83, worksheet.lever_graphs_n1958, 0.002); end
  def test_lever_graphs_o1958; assert_in_epsilon(591.5799999999999, worksheet.lever_graphs_o1958, 0.002); end
  def test_lever_graphs_p1958; assert_in_epsilon(812.85, worksheet.lever_graphs_p1958, 0.002); end
  def test_lever_graphs_q1958; assert_in_epsilon(1148.26, worksheet.lever_graphs_q1958, 0.002); end
  def test_lever_graphs_r1958; assert_in_epsilon(1577.17, worksheet.lever_graphs_r1958, 0.002); end
  def test_lever_graphs_s1958; assert_in_epsilon(2204.31, worksheet.lever_graphs_s1958, 0.002); end
  def test_lever_graphs_b1959; assert_in_epsilon(3.0, worksheet.lever_graphs_b1959, 0.002); end
  def test_lever_graphs_k1959; assert_in_epsilon(71.28999999999999, worksheet.lever_graphs_k1959, 0.002); end
  def test_lever_graphs_l1959; assert_in_epsilon(173.0, worksheet.lever_graphs_l1959, 0.002); end
  def test_lever_graphs_m1959; assert_in_epsilon(321.28, worksheet.lever_graphs_m1959, 0.002); end
  def test_lever_graphs_n1959; assert_in_epsilon(539.22, worksheet.lever_graphs_n1959, 0.002); end
  def test_lever_graphs_o1959; assert_in_epsilon(905.7, worksheet.lever_graphs_o1959, 0.002); end
  def test_lever_graphs_p1959; assert_in_epsilon(1464.94, worksheet.lever_graphs_p1959, 0.002); end
  def test_lever_graphs_q1959; assert_in_epsilon(2371.94, worksheet.lever_graphs_q1959, 0.002); end
  def test_lever_graphs_r1959; assert_in_epsilon(3136.37, worksheet.lever_graphs_r1959, 0.002); end
  def test_lever_graphs_s1959; assert_in_epsilon(4148.93, worksheet.lever_graphs_s1959, 0.002); end
  def test_lever_graphs_b1960; assert_in_epsilon(4.0, worksheet.lever_graphs_b1960, 0.002); end
  def test_lever_graphs_k1960; assert_in_epsilon(71.28999999999999, worksheet.lever_graphs_k1960, 0.002); end
  def test_lever_graphs_l1960; assert_in_epsilon(173.0, worksheet.lever_graphs_l1960, 0.002); end
  def test_lever_graphs_m1960; assert_in_epsilon(1647.6191393627598, worksheet.lever_graphs_m1960, 0.002); end
  def test_lever_graphs_n1960; assert_in_epsilon(3929.2, worksheet.lever_graphs_n1960, 0.002); end
  def test_lever_graphs_o1960; assert_in_epsilon(6897.0397795765, worksheet.lever_graphs_o1960, 0.002); end
  def test_lever_graphs_p1960; assert_in_epsilon(10287.1, worksheet.lever_graphs_p1960, 0.002); end
  def test_lever_graphs_q1960; assert_in_epsilon(14045.598669997698, worksheet.lever_graphs_q1960, 0.002); end
  def test_lever_graphs_r1960; assert_in_epsilon(18362.9, worksheet.lever_graphs_r1960, 0.002); end
  def test_lever_graphs_s1960; assert_in_epsilon(23107.3123685873, worksheet.lever_graphs_s1960, 0.002); end
  def test_lever_graphs_b1961; assert_equal("Comparator A", worksheet.lever_graphs_b1961); end
  def test_lever_graphs_b1962; assert_equal("Comparator B", worksheet.lever_graphs_b1962); end
  def test_lever_graphs_b1963; assert_equal("Comparator C", worksheet.lever_graphs_b1963); end
  def test_lever_graphs_c1939; assert_equal("1975", worksheet.lever_graphs_c1939); end
  def test_lever_graphs_d1939; assert_equal("1980", worksheet.lever_graphs_d1939); end
  def test_lever_graphs_e1939; assert_equal("1985", worksheet.lever_graphs_e1939); end
  def test_lever_graphs_f1939; assert_equal("1990", worksheet.lever_graphs_f1939); end
  def test_lever_graphs_g1939; assert_equal("1995", worksheet.lever_graphs_g1939); end
  def test_lever_graphs_h1939; assert_equal("2000", worksheet.lever_graphs_h1939); end
  def test_lever_graphs_i1939; assert_equal("2005", worksheet.lever_graphs_i1939); end
  def test_lever_graphs_j1939; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1939, 0.002); end
  def test_lever_graphs_k1939; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1939, 0.002); end
  def test_lever_graphs_l1939; assert_equal("2015", worksheet.lever_graphs_l1939); end
  def test_lever_graphs_m1939; assert_equal("2020", worksheet.lever_graphs_m1939); end
  def test_lever_graphs_n1939; assert_equal("2025", worksheet.lever_graphs_n1939); end
  def test_lever_graphs_o1939; assert_equal("2030", worksheet.lever_graphs_o1939); end
  def test_lever_graphs_p1939; assert_equal("2035", worksheet.lever_graphs_p1939); end
  def test_lever_graphs_q1939; assert_equal("2040", worksheet.lever_graphs_q1939); end
  def test_lever_graphs_r1939; assert_equal("2045", worksheet.lever_graphs_r1939); end
  def test_lever_graphs_s1939; assert_equal("2050", worksheet.lever_graphs_s1939); end
  def test_lever_graphs_b1940; assert_equal("Historic data", worksheet.lever_graphs_b1940); end
  def test_lever_graphs_b1941; assert_in_delta(1.0, worksheet.lever_graphs_b1941, 0.002); end
  def test_lever_graphs_k1941; assert_in_epsilon(69.69, worksheet.lever_graphs_k1941, 0.002); end
  def test_lever_graphs_l1941; assert_in_epsilon(165.0, worksheet.lever_graphs_l1941, 0.002); end
  def test_lever_graphs_m1941; assert_in_epsilon(110.0, worksheet.lever_graphs_m1941, 0.002); end
  def test_lever_graphs_n1941; assert_in_epsilon(85.0, worksheet.lever_graphs_n1941, 0.002); end
  def test_lever_graphs_o1941; assert_in_epsilon(55.0, worksheet.lever_graphs_o1941, 0.002); end
  def test_lever_graphs_p1941; assert_in_epsilon(35.0, worksheet.lever_graphs_p1941, 0.002); end
  def test_lever_graphs_q1941; assert_in_delta(0.0, (worksheet.lever_graphs_q1941||0), 0.002); end
  def test_lever_graphs_r1941; assert_in_delta(0.0, (worksheet.lever_graphs_r1941||0), 0.002); end
  def test_lever_graphs_s1941; assert_in_delta(0.0, (worksheet.lever_graphs_s1941||0), 0.002); end
  def test_lever_graphs_b1942; assert_in_epsilon(2.0, worksheet.lever_graphs_b1942, 0.002); end
  def test_lever_graphs_k1942; assert_in_epsilon(69.69, worksheet.lever_graphs_k1942, 0.002); end
  def test_lever_graphs_l1942; assert_in_epsilon(165.0, worksheet.lever_graphs_l1942, 0.002); end
  def test_lever_graphs_m1942; assert_in_epsilon(207.46, worksheet.lever_graphs_m1942, 0.002); end
  def test_lever_graphs_n1942; assert_in_epsilon(297.83, worksheet.lever_graphs_n1942, 0.002); end
  def test_lever_graphs_o1942; assert_in_epsilon(427.58, worksheet.lever_graphs_o1942, 0.002); end
  def test_lever_graphs_p1942; assert_in_epsilon(613.85, worksheet.lever_graphs_p1942, 0.002); end
  def test_lever_graphs_q1942; assert_in_epsilon(881.26, worksheet.lever_graphs_q1942, 0.002); end
  def test_lever_graphs_r1942; assert_in_epsilon(1265.17, worksheet.lever_graphs_r1942, 0.002); end
  def test_lever_graphs_s1942; assert_in_epsilon(1816.31, worksheet.lever_graphs_s1942, 0.002); end
  def test_lever_graphs_b1943; assert_in_epsilon(3.0, worksheet.lever_graphs_b1943, 0.002); end
  def test_lever_graphs_k1943; assert_in_epsilon(69.69, worksheet.lever_graphs_k1943, 0.002); end
  def test_lever_graphs_l1943; assert_in_epsilon(165.0, worksheet.lever_graphs_l1943, 0.002); end
  def test_lever_graphs_m1943; assert_in_epsilon(238.28, worksheet.lever_graphs_m1943, 0.002); end
  def test_lever_graphs_n1943; assert_in_epsilon(392.92, worksheet.lever_graphs_n1943, 0.002); end
  def test_lever_graphs_o1943; assert_in_epsilon(647.9, worksheet.lever_graphs_o1943, 0.002); end
  def test_lever_graphs_p1943; assert_in_epsilon(1068.34, worksheet.lever_graphs_p1943, 0.002); end
  def test_lever_graphs_q1943; assert_in_epsilon(1761.64, worksheet.lever_graphs_q1943, 0.002); end
  def test_lever_graphs_r1943; assert_in_epsilon(2357.47, worksheet.lever_graphs_r1943, 0.002); end
  def test_lever_graphs_s1943; assert_in_epsilon(3154.83, worksheet.lever_graphs_s1943, 0.002); end
  def test_lever_graphs_b1944; assert_in_epsilon(4.0, worksheet.lever_graphs_b1944, 0.002); end
  def test_lever_graphs_k1944; assert_in_epsilon(69.69, worksheet.lever_graphs_k1944, 0.002); end
  def test_lever_graphs_l1944; assert_in_epsilon(165.0, worksheet.lever_graphs_l1944, 0.002); end
  def test_lever_graphs_m1944; assert_in_epsilon(1550.01913936276, worksheet.lever_graphs_m1944, 0.002); end
  def test_lever_graphs_n1944; assert_in_epsilon(3733.0, worksheet.lever_graphs_n1944, 0.002); end
  def test_lever_graphs_o1944; assert_in_epsilon(6502.3397795765, worksheet.lever_graphs_o1944, 0.002); end
  def test_lever_graphs_p1944; assert_in_epsilon(9622.0, worksheet.lever_graphs_p1944, 0.002); end
  def test_lever_graphs_q1944; assert_in_epsilon(12924.7986699977, worksheet.lever_graphs_q1944, 0.002); end
  def test_lever_graphs_r1944; assert_in_epsilon(16863.0, worksheet.lever_graphs_r1944, 0.002); end
  def test_lever_graphs_s1944; assert_in_epsilon(21100.2123685873, worksheet.lever_graphs_s1944, 0.002); end
  def test_lever_graphs_b1945; assert_equal("Comparator A", worksheet.lever_graphs_b1945); end
  def test_lever_graphs_b1946; assert_equal("Comparator B", worksheet.lever_graphs_b1946); end
  def test_lever_graphs_b1947; assert_equal("Comparator C", worksheet.lever_graphs_b1947); end
  def test_lever_graphs_c2089; assert_equal("1975", worksheet.lever_graphs_c2089); end
  def test_lever_graphs_d2089; assert_equal("1980", worksheet.lever_graphs_d2089); end
  def test_lever_graphs_e2089; assert_equal("1985", worksheet.lever_graphs_e2089); end
  def test_lever_graphs_f2089; assert_equal("1990", worksheet.lever_graphs_f2089); end
  def test_lever_graphs_g2089; assert_equal("1995", worksheet.lever_graphs_g2089); end
  def test_lever_graphs_h2089; assert_equal("2000", worksheet.lever_graphs_h2089); end
  def test_lever_graphs_i2089; assert_equal("2005", worksheet.lever_graphs_i2089); end
  def test_lever_graphs_j2089; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2089, 0.002); end
  def test_lever_graphs_k2089; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2089, 0.002); end
  def test_lever_graphs_l2089; assert_equal("2015", worksheet.lever_graphs_l2089); end
  def test_lever_graphs_m2089; assert_equal("2020", worksheet.lever_graphs_m2089); end
  def test_lever_graphs_n2089; assert_equal("2025", worksheet.lever_graphs_n2089); end
  def test_lever_graphs_o2089; assert_equal("2030", worksheet.lever_graphs_o2089); end
  def test_lever_graphs_p2089; assert_equal("2035", worksheet.lever_graphs_p2089); end
  def test_lever_graphs_q2089; assert_equal("2040", worksheet.lever_graphs_q2089); end
  def test_lever_graphs_r2089; assert_equal("2045", worksheet.lever_graphs_r2089); end
  def test_lever_graphs_s2089; assert_equal("2050", worksheet.lever_graphs_s2089); end
  def test_lever_graphs_b2090; assert_equal("Historic data", worksheet.lever_graphs_b2090); end
  def test_lever_graphs_b2091; assert_in_delta(1.0, worksheet.lever_graphs_b2091, 0.002); end
  def test_lever_graphs_k2091; assert_in_epsilon(120.0, worksheet.lever_graphs_k2091, 0.002); end
  def test_lever_graphs_l2091; assert_in_epsilon(123.6, worksheet.lever_graphs_l2091, 0.002); end
  def test_lever_graphs_m2091; assert_in_epsilon(127.3, worksheet.lever_graphs_m2091, 0.002); end
  def test_lever_graphs_n2091; assert_in_epsilon(131.1, worksheet.lever_graphs_n2091, 0.002); end
  def test_lever_graphs_o2091; assert_in_epsilon(135.0, worksheet.lever_graphs_o2091, 0.002); end
  def test_lever_graphs_p2091; assert_in_epsilon(139.1, worksheet.lever_graphs_p2091, 0.002); end
  def test_lever_graphs_q2091; assert_in_epsilon(143.3, worksheet.lever_graphs_q2091, 0.002); end
  def test_lever_graphs_r2091; assert_in_epsilon(147.6, worksheet.lever_graphs_r2091, 0.002); end
  def test_lever_graphs_s2091; assert_in_epsilon(152.0, worksheet.lever_graphs_s2091, 0.002); end
  def test_lever_graphs_b2092; assert_in_epsilon(2.0, worksheet.lever_graphs_b2092, 0.002); end
  def test_lever_graphs_k2092; assert_in_epsilon(120.0, worksheet.lever_graphs_k2092, 0.002); end
  def test_lever_graphs_l2092; assert_in_epsilon(123.6, worksheet.lever_graphs_l2092, 0.002); end
  def test_lever_graphs_m2092; assert_in_epsilon(178.6, worksheet.lever_graphs_m2092, 0.002); end
  def test_lever_graphs_n2092; assert_in_epsilon(202.2, worksheet.lever_graphs_n2092, 0.002); end
  def test_lever_graphs_o2092; assert_in_epsilon(245.1, worksheet.lever_graphs_o2092, 0.002); end
  def test_lever_graphs_p2092; assert_in_epsilon(278.2, worksheet.lever_graphs_p2092, 0.002); end
  def test_lever_graphs_q2092; assert_in_epsilon(305.7, worksheet.lever_graphs_q2092, 0.002); end
  def test_lever_graphs_r2092; assert_in_epsilon(355.3, worksheet.lever_graphs_r2092, 0.002); end
  def test_lever_graphs_s2092; assert_in_epsilon(403.0, worksheet.lever_graphs_s2092, 0.002); end
  def test_lever_graphs_b2093; assert_in_epsilon(3.0, worksheet.lever_graphs_b2093, 0.002); end
  def test_lever_graphs_k2093; assert_in_epsilon(120.0, worksheet.lever_graphs_k2093, 0.002); end
  def test_lever_graphs_l2093; assert_in_epsilon(123.6, worksheet.lever_graphs_l2093, 0.002); end
  def test_lever_graphs_m2093; assert_in_epsilon(193.5, worksheet.lever_graphs_m2093, 0.002); end
  def test_lever_graphs_n2093; assert_in_epsilon(245.7, worksheet.lever_graphs_n2093, 0.002); end
  def test_lever_graphs_o2093; assert_in_epsilon(312.0, worksheet.lever_graphs_o2093, 0.002); end
  def test_lever_graphs_p2093; assert_in_epsilon(396.2, worksheet.lever_graphs_p2093, 0.002); end
  def test_lever_graphs_q2093; assert_in_epsilon(503.2, worksheet.lever_graphs_q2093, 0.002); end
  def test_lever_graphs_r2093; assert_in_epsilon(639.1, worksheet.lever_graphs_r2093, 0.002); end
  def test_lever_graphs_s2093; assert_in_epsilon(800.0, worksheet.lever_graphs_s2093, 0.002); end
  def test_lever_graphs_b2094; assert_in_epsilon(4.0, worksheet.lever_graphs_b2094, 0.002); end
  def test_lever_graphs_k2094; assert_in_epsilon(120.0, worksheet.lever_graphs_k2094, 0.002); end
  def test_lever_graphs_l2094; assert_in_epsilon(123.6, worksheet.lever_graphs_l2094, 0.002); end
  def test_lever_graphs_m2094; assert_in_epsilon(212.3, worksheet.lever_graphs_m2094, 0.002); end
  def test_lever_graphs_n2094; assert_in_epsilon(282.4, worksheet.lever_graphs_n2094, 0.002); end
  def test_lever_graphs_o2094; assert_in_epsilon(375.6, worksheet.lever_graphs_o2094, 0.002); end
  def test_lever_graphs_p2094; assert_in_epsilon(499.5, worksheet.lever_graphs_p2094, 0.002); end
  def test_lever_graphs_q2094; assert_in_epsilon(664.3, worksheet.lever_graphs_q2094, 0.002); end
  def test_lever_graphs_r2094; assert_in_epsilon(883.5, worksheet.lever_graphs_r2094, 0.002); end
  def test_lever_graphs_s2094; assert_in_epsilon(1200.0, worksheet.lever_graphs_s2094, 0.002); end
  def test_lever_graphs_b2095; assert_equal("Comparator A", worksheet.lever_graphs_b2095); end
  def test_lever_graphs_b2096; assert_equal("Comparator B", worksheet.lever_graphs_b2096); end
  def test_lever_graphs_b2097; assert_equal("Comparator C", worksheet.lever_graphs_b2097); end
  def test_lever_graphs_c2011; assert_equal("1975", worksheet.lever_graphs_c2011); end
  def test_lever_graphs_d2011; assert_equal("1980", worksheet.lever_graphs_d2011); end
  def test_lever_graphs_e2011; assert_equal("1985", worksheet.lever_graphs_e2011); end
  def test_lever_graphs_f2011; assert_equal("1990", worksheet.lever_graphs_f2011); end
  def test_lever_graphs_g2011; assert_equal("1995", worksheet.lever_graphs_g2011); end
  def test_lever_graphs_h2011; assert_equal("2000", worksheet.lever_graphs_h2011); end
  def test_lever_graphs_i2011; assert_equal("2005", worksheet.lever_graphs_i2011); end
  def test_lever_graphs_j2011; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2011, 0.002); end
  def test_lever_graphs_k2011; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2011, 0.002); end
  def test_lever_graphs_l2011; assert_equal("2015", worksheet.lever_graphs_l2011); end
  def test_lever_graphs_m2011; assert_equal("2020", worksheet.lever_graphs_m2011); end
  def test_lever_graphs_n2011; assert_equal("2025", worksheet.lever_graphs_n2011); end
  def test_lever_graphs_o2011; assert_equal("2030", worksheet.lever_graphs_o2011); end
  def test_lever_graphs_p2011; assert_equal("2035", worksheet.lever_graphs_p2011); end
  def test_lever_graphs_q2011; assert_equal("2040", worksheet.lever_graphs_q2011); end
  def test_lever_graphs_r2011; assert_equal("2045", worksheet.lever_graphs_r2011); end
  def test_lever_graphs_s2011; assert_equal("2050", worksheet.lever_graphs_s2011); end
  def test_lever_graphs_b2012; assert_equal("Historic data", worksheet.lever_graphs_b2012); end
  def test_lever_graphs_b2013; assert_in_delta(1.0, worksheet.lever_graphs_b2013, 0.002); end
  def test_lever_graphs_k2013; assert_in_epsilon(237.67, worksheet.lever_graphs_k2013, 0.002); end
  def test_lever_graphs_l2013; assert_in_epsilon(414.0, worksheet.lever_graphs_l2013, 0.002); end
  def test_lever_graphs_m2013; assert_in_epsilon(393.0, worksheet.lever_graphs_m2013, 0.002); end
  def test_lever_graphs_n2013; assert_in_epsilon(348.0, worksheet.lever_graphs_n2013, 0.002); end
  def test_lever_graphs_o2013; assert_in_epsilon(198.0, worksheet.lever_graphs_o2013, 0.002); end
  def test_lever_graphs_p2013; assert_in_delta(0.0, (worksheet.lever_graphs_p2013||0), 0.002); end
  def test_lever_graphs_q2013; assert_in_delta(0.0, (worksheet.lever_graphs_q2013||0), 0.002); end
  def test_lever_graphs_r2013; assert_in_delta(0.0, (worksheet.lever_graphs_r2013||0), 0.002); end
  def test_lever_graphs_s2013; assert_in_delta(0.0, (worksheet.lever_graphs_s2013||0), 0.002); end
  def test_lever_graphs_b2014; assert_in_epsilon(2.0, worksheet.lever_graphs_b2014, 0.002); end
  def test_lever_graphs_k2014; assert_in_epsilon(237.67, worksheet.lever_graphs_k2014, 0.002); end
  def test_lever_graphs_l2014; assert_in_epsilon(414.0, worksheet.lever_graphs_l2014, 0.002); end
  def test_lever_graphs_m2014; assert_in_epsilon(597.0, worksheet.lever_graphs_m2014, 0.002); end
  def test_lever_graphs_n2014; assert_in_epsilon(657.0, worksheet.lever_graphs_n2014, 0.002); end
  def test_lever_graphs_o2014; assert_in_epsilon(837.0, worksheet.lever_graphs_o2014, 0.002); end
  def test_lever_graphs_p2014; assert_in_epsilon(1025.0, worksheet.lever_graphs_p2014, 0.002); end
  def test_lever_graphs_q2014; assert_in_epsilon(1288.0, worksheet.lever_graphs_q2014, 0.002); end
  def test_lever_graphs_r2014; assert_in_epsilon(1875.0, worksheet.lever_graphs_r2014, 0.002); end
  def test_lever_graphs_s2014; assert_in_epsilon(2317.0, worksheet.lever_graphs_s2014, 0.002); end
  def test_lever_graphs_b2015; assert_in_epsilon(3.0, worksheet.lever_graphs_b2015, 0.002); end
  def test_lever_graphs_k2015; assert_in_epsilon(237.67, worksheet.lever_graphs_k2015, 0.002); end
  def test_lever_graphs_l2015; assert_in_epsilon(414.0, worksheet.lever_graphs_l2015, 0.002); end
  def test_lever_graphs_m2015; assert_in_epsilon(824.0, worksheet.lever_graphs_m2015, 0.002); end
  def test_lever_graphs_n2015; assert_in_epsilon(1069.0, worksheet.lever_graphs_n2015, 0.002); end
  def test_lever_graphs_o2015; assert_in_epsilon(1654.0, worksheet.lever_graphs_o2015, 0.002); end
  def test_lever_graphs_p2015; assert_in_epsilon(2240.0, worksheet.lever_graphs_p2015, 0.002); end
  def test_lever_graphs_q2015; assert_in_epsilon(2793.0, worksheet.lever_graphs_q2015, 0.002); end
  def test_lever_graphs_r2015; assert_in_epsilon(3745.0, worksheet.lever_graphs_r2015, 0.002); end
  def test_lever_graphs_s2015; assert_in_epsilon(4710.0, worksheet.lever_graphs_s2015, 0.002); end
  def test_lever_graphs_b2016; assert_in_epsilon(4.0, worksheet.lever_graphs_b2016, 0.002); end
  def test_lever_graphs_k2016; assert_in_epsilon(237.67, worksheet.lever_graphs_k2016, 0.002); end
  def test_lever_graphs_l2016; assert_in_epsilon(414.0, worksheet.lever_graphs_l2016, 0.002); end
  def test_lever_graphs_m2016; assert_in_epsilon(1144.0, worksheet.lever_graphs_m2016, 0.002); end
  def test_lever_graphs_n2016; assert_in_epsilon(1753.0, worksheet.lever_graphs_n2016, 0.002); end
  def test_lever_graphs_o2016; assert_in_epsilon(2756.0, worksheet.lever_graphs_o2016, 0.002); end
  def test_lever_graphs_p2016; assert_in_epsilon(3747.0, worksheet.lever_graphs_p2016, 0.002); end
  def test_lever_graphs_q2016; assert_in_epsilon(5100.0, worksheet.lever_graphs_q2016, 0.002); end
  def test_lever_graphs_r2016; assert_in_epsilon(5738.0, worksheet.lever_graphs_r2016, 0.002); end
  def test_lever_graphs_s2016; assert_in_epsilon(6466.0, worksheet.lever_graphs_s2016, 0.002); end
  def test_lever_graphs_b2017; assert_equal("Comparator A", worksheet.lever_graphs_b2017); end
  def test_lever_graphs_b2018; assert_equal("Comparator B", worksheet.lever_graphs_b2018); end
  def test_lever_graphs_b2019; assert_equal("Comparator C", worksheet.lever_graphs_b2019); end
  def test_lever_graphs_c2128; assert_equal("1975", worksheet.lever_graphs_c2128); end
  def test_lever_graphs_d2128; assert_equal("1980", worksheet.lever_graphs_d2128); end
  def test_lever_graphs_e2128; assert_equal("1985", worksheet.lever_graphs_e2128); end
  def test_lever_graphs_f2128; assert_equal("1990", worksheet.lever_graphs_f2128); end
  def test_lever_graphs_g2128; assert_equal("1995", worksheet.lever_graphs_g2128); end
  def test_lever_graphs_h2128; assert_equal("2000", worksheet.lever_graphs_h2128); end
  def test_lever_graphs_i2128; assert_equal("2005", worksheet.lever_graphs_i2128); end
  def test_lever_graphs_j2128; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2128, 0.002); end
  def test_lever_graphs_k2128; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2128, 0.002); end
  def test_lever_graphs_l2128; assert_equal("2015", worksheet.lever_graphs_l2128); end
  def test_lever_graphs_m2128; assert_equal("2020", worksheet.lever_graphs_m2128); end
  def test_lever_graphs_n2128; assert_equal("2025", worksheet.lever_graphs_n2128); end
  def test_lever_graphs_o2128; assert_equal("2030", worksheet.lever_graphs_o2128); end
  def test_lever_graphs_p2128; assert_equal("2035", worksheet.lever_graphs_p2128); end
  def test_lever_graphs_q2128; assert_equal("2040", worksheet.lever_graphs_q2128); end
  def test_lever_graphs_r2128; assert_equal("2045", worksheet.lever_graphs_r2128); end
  def test_lever_graphs_s2128; assert_equal("2050", worksheet.lever_graphs_s2128); end
  def test_lever_graphs_b2129; assert_equal("Historic data", worksheet.lever_graphs_b2129); end
  def test_lever_graphs_b2130; assert_in_delta(1.0, worksheet.lever_graphs_b2130, 0.002); end
  def test_lever_graphs_k2130; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_k2130, 0.002); end
  def test_lever_graphs_l2130; assert_in_delta(0.01, worksheet.lever_graphs_l2130, 0.002); end
  def test_lever_graphs_m2130; assert_in_delta(0.011428571428571429, worksheet.lever_graphs_m2130, 0.002); end
  def test_lever_graphs_n2130; assert_in_delta(0.012857142857142859, worksheet.lever_graphs_n2130, 0.002); end
  def test_lever_graphs_o2130; assert_in_delta(0.014285714285714287, worksheet.lever_graphs_o2130, 0.002); end
  def test_lever_graphs_p2130; assert_in_delta(0.015714285714285715, worksheet.lever_graphs_p2130, 0.002); end
  def test_lever_graphs_q2130; assert_in_delta(0.017142857142857144, worksheet.lever_graphs_q2130, 0.002); end
  def test_lever_graphs_r2130; assert_in_delta(0.018571428571428572, worksheet.lever_graphs_r2130, 0.002); end
  def test_lever_graphs_s2130; assert_in_delta(0.02, worksheet.lever_graphs_s2130, 0.002); end
  def test_lever_graphs_b2131; assert_in_epsilon(2.0, worksheet.lever_graphs_b2131, 0.002); end
  def test_lever_graphs_k2131; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_k2131, 0.002); end
  def test_lever_graphs_l2131; assert_in_delta(0.01, worksheet.lever_graphs_l2131, 0.002); end
  def test_lever_graphs_m2131; assert_in_delta(0.022857142857142857, worksheet.lever_graphs_m2131, 0.002); end
  def test_lever_graphs_n2131; assert_in_delta(0.03571428571428571, worksheet.lever_graphs_n2131, 0.002); end
  def test_lever_graphs_o2131; assert_in_delta(0.04857142857142857, worksheet.lever_graphs_o2131, 0.002); end
  def test_lever_graphs_p2131; assert_in_delta(0.06142857142857143, worksheet.lever_graphs_p2131, 0.002); end
  def test_lever_graphs_q2131; assert_in_delta(0.0742857142857143, worksheet.lever_graphs_q2131, 0.002); end
  def test_lever_graphs_r2131; assert_in_delta(0.08714285714285715, worksheet.lever_graphs_r2131, 0.002); end
  def test_lever_graphs_s2131; assert_in_delta(0.1, worksheet.lever_graphs_s2131, 0.002); end
  def test_lever_graphs_b2132; assert_in_epsilon(3.0, worksheet.lever_graphs_b2132, 0.002); end
  def test_lever_graphs_k2132; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_k2132, 0.002); end
  def test_lever_graphs_l2132; assert_in_delta(0.01, worksheet.lever_graphs_l2132, 0.002); end
  def test_lever_graphs_m2132; assert_in_delta(0.037142857142857144, worksheet.lever_graphs_m2132, 0.002); end
  def test_lever_graphs_n2132; assert_in_delta(0.06428571428571428, worksheet.lever_graphs_n2132, 0.002); end
  def test_lever_graphs_o2132; assert_in_delta(0.09142857142857143, worksheet.lever_graphs_o2132, 0.002); end
  def test_lever_graphs_p2132; assert_in_delta(0.11857142857142856, worksheet.lever_graphs_p2132, 0.002); end
  def test_lever_graphs_q2132; assert_in_delta(0.14571428571428574, worksheet.lever_graphs_q2132, 0.002); end
  def test_lever_graphs_r2132; assert_in_delta(0.17285714285714285, worksheet.lever_graphs_r2132, 0.002); end
  def test_lever_graphs_s2132; assert_in_delta(0.2, worksheet.lever_graphs_s2132, 0.002); end
  def test_lever_graphs_b2133; assert_in_epsilon(4.0, worksheet.lever_graphs_b2133, 0.002); end
  def test_lever_graphs_k2133; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_k2133, 0.002); end
  def test_lever_graphs_l2133; assert_in_delta(0.01, worksheet.lever_graphs_l2133, 0.002); end
  def test_lever_graphs_m2133; assert_in_delta(0.058571428571428566, worksheet.lever_graphs_m2133, 0.002); end
  def test_lever_graphs_n2133; assert_in_delta(0.10714285714285714, worksheet.lever_graphs_n2133, 0.002); end
  def test_lever_graphs_o2133; assert_in_delta(0.15571428571428572, worksheet.lever_graphs_o2133, 0.002); end
  def test_lever_graphs_p2133; assert_in_delta(0.20428571428571426, worksheet.lever_graphs_p2133, 0.002); end
  def test_lever_graphs_q2133; assert_in_delta(0.25285714285714284, worksheet.lever_graphs_q2133, 0.002); end
  def test_lever_graphs_r2133; assert_in_delta(0.30142857142857143, worksheet.lever_graphs_r2133, 0.002); end
  def test_lever_graphs_s2133; assert_in_delta(0.35, worksheet.lever_graphs_s2133, 0.002); end
  def test_lever_graphs_b2134; assert_equal("Comparator A", worksheet.lever_graphs_b2134); end
  def test_lever_graphs_b2135; assert_equal("Comparator B", worksheet.lever_graphs_b2135); end
  def test_lever_graphs_b2136; assert_equal("Comparator C", worksheet.lever_graphs_b2136); end
  def test_lever_graphs_c2143; assert_equal("1975", worksheet.lever_graphs_c2143); end
  def test_lever_graphs_d2143; assert_equal("1980", worksheet.lever_graphs_d2143); end
  def test_lever_graphs_e2143; assert_equal("1985", worksheet.lever_graphs_e2143); end
  def test_lever_graphs_f2143; assert_equal("1990", worksheet.lever_graphs_f2143); end
  def test_lever_graphs_g2143; assert_equal("1995", worksheet.lever_graphs_g2143); end
  def test_lever_graphs_h2143; assert_equal("2000", worksheet.lever_graphs_h2143); end
  def test_lever_graphs_i2143; assert_equal("2005", worksheet.lever_graphs_i2143); end
  def test_lever_graphs_j2143; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2143, 0.002); end
  def test_lever_graphs_k2143; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2143, 0.002); end
  def test_lever_graphs_l2143; assert_equal("2015", worksheet.lever_graphs_l2143); end
  def test_lever_graphs_m2143; assert_equal("2020", worksheet.lever_graphs_m2143); end
  def test_lever_graphs_n2143; assert_equal("2025", worksheet.lever_graphs_n2143); end
  def test_lever_graphs_o2143; assert_equal("2030", worksheet.lever_graphs_o2143); end
  def test_lever_graphs_p2143; assert_equal("2035", worksheet.lever_graphs_p2143); end
  def test_lever_graphs_q2143; assert_equal("2040", worksheet.lever_graphs_q2143); end
  def test_lever_graphs_r2143; assert_equal("2045", worksheet.lever_graphs_r2143); end
  def test_lever_graphs_s2143; assert_equal("2050", worksheet.lever_graphs_s2143); end
  def test_lever_graphs_b2144; assert_equal("Historic data", worksheet.lever_graphs_b2144); end
  def test_lever_graphs_b2145; assert_in_delta(1.0, worksheet.lever_graphs_b2145, 0.002); end
  def test_lever_graphs_k2145; assert_in_delta(0.0, (worksheet.lever_graphs_k2145||0), 0.002); end
  def test_lever_graphs_l2145; assert_in_delta(0.0, (worksheet.lever_graphs_l2145||0), 0.002); end
  def test_lever_graphs_m2145; assert_in_delta(0.0, (worksheet.lever_graphs_m2145||0), 0.002); end
  def test_lever_graphs_n2145; assert_in_delta(0.0, (worksheet.lever_graphs_n2145||0), 0.002); end
  def test_lever_graphs_o2145; assert_in_delta(0.0, (worksheet.lever_graphs_o2145||0), 0.002); end
  def test_lever_graphs_p2145; assert_in_delta(0.0, (worksheet.lever_graphs_p2145||0), 0.002); end
  def test_lever_graphs_q2145; assert_in_delta(0.0, (worksheet.lever_graphs_q2145||0), 0.002); end
  def test_lever_graphs_r2145; assert_in_delta(0.0, (worksheet.lever_graphs_r2145||0), 0.002); end
  def test_lever_graphs_s2145; assert_in_delta(0.0, (worksheet.lever_graphs_s2145||0), 0.002); end
  def test_lever_graphs_b2146; assert_in_epsilon(2.0, worksheet.lever_graphs_b2146, 0.002); end
  def test_lever_graphs_k2146; assert_in_delta(0.0, (worksheet.lever_graphs_k2146||0), 0.002); end
  def test_lever_graphs_l2146; assert_in_delta(0.0, (worksheet.lever_graphs_l2146||0), 0.002); end
  def test_lever_graphs_m2146; assert_in_delta(0.0, (worksheet.lever_graphs_m2146||0), 0.002); end
  def test_lever_graphs_n2146; assert_in_delta(0.0, (worksheet.lever_graphs_n2146||0), 0.002); end
  def test_lever_graphs_o2146; assert_in_delta(0.0, (worksheet.lever_graphs_o2146||0), 0.002); end
  def test_lever_graphs_p2146; assert_in_delta(0.0, (worksheet.lever_graphs_p2146||0), 0.002); end
  def test_lever_graphs_q2146; assert_in_delta(0.0, (worksheet.lever_graphs_q2146||0), 0.002); end
  def test_lever_graphs_r2146; assert_in_delta(0.0, (worksheet.lever_graphs_r2146||0), 0.002); end
  def test_lever_graphs_s2146; assert_in_delta(0.0, (worksheet.lever_graphs_s2146||0), 0.002); end
  def test_lever_graphs_b2147; assert_in_epsilon(3.0, worksheet.lever_graphs_b2147, 0.002); end
  def test_lever_graphs_k2147; assert_in_delta(0.0, (worksheet.lever_graphs_k2147||0), 0.002); end
  def test_lever_graphs_l2147; assert_in_delta(0.0, (worksheet.lever_graphs_l2147||0), 0.002); end
  def test_lever_graphs_m2147; assert_in_delta(0.021428571428571425, worksheet.lever_graphs_m2147, 0.002); end
  def test_lever_graphs_n2147; assert_in_delta(0.04285714285714285, worksheet.lever_graphs_n2147, 0.002); end
  def test_lever_graphs_o2147; assert_in_delta(0.06428571428571428, worksheet.lever_graphs_o2147, 0.002); end
  def test_lever_graphs_p2147; assert_in_delta(0.0857142857142857, worksheet.lever_graphs_p2147, 0.002); end
  def test_lever_graphs_q2147; assert_in_delta(0.10714285714285714, worksheet.lever_graphs_q2147, 0.002); end
  def test_lever_graphs_r2147; assert_in_delta(0.12857142857142856, worksheet.lever_graphs_r2147, 0.002); end
  def test_lever_graphs_s2147; assert_in_delta(0.15, worksheet.lever_graphs_s2147, 0.002); end
  def test_lever_graphs_b2148; assert_in_epsilon(4.0, worksheet.lever_graphs_b2148, 0.002); end
  def test_lever_graphs_k2148; assert_in_delta(0.0, (worksheet.lever_graphs_k2148||0), 0.002); end
  def test_lever_graphs_l2148; assert_in_delta(0.0, (worksheet.lever_graphs_l2148||0), 0.002); end
  def test_lever_graphs_m2148; assert_in_delta(0.02857142857142857, worksheet.lever_graphs_m2148, 0.002); end
  def test_lever_graphs_n2148; assert_in_delta(0.05714285714285714, worksheet.lever_graphs_n2148, 0.002); end
  def test_lever_graphs_o2148; assert_in_delta(0.08571428571428572, worksheet.lever_graphs_o2148, 0.002); end
  def test_lever_graphs_p2148; assert_in_delta(0.11428571428571428, worksheet.lever_graphs_p2148, 0.002); end
  def test_lever_graphs_q2148; assert_in_delta(0.14285714285714288, worksheet.lever_graphs_q2148, 0.002); end
  def test_lever_graphs_r2148; assert_in_delta(0.17142857142857143, worksheet.lever_graphs_r2148, 0.002); end
  def test_lever_graphs_s2148; assert_in_delta(0.2, worksheet.lever_graphs_s2148, 0.002); end
  def test_lever_graphs_b2149; assert_equal("Comparator A", worksheet.lever_graphs_b2149); end
  def test_lever_graphs_b2150; assert_equal("Comparator B", worksheet.lever_graphs_b2150); end
  def test_lever_graphs_b2151; assert_equal("Comparator C", worksheet.lever_graphs_b2151); end
  def test_lever_graphs_c2158; assert_equal("1975", worksheet.lever_graphs_c2158); end
  def test_lever_graphs_d2158; assert_equal("1980", worksheet.lever_graphs_d2158); end
  def test_lever_graphs_e2158; assert_equal("1985", worksheet.lever_graphs_e2158); end
  def test_lever_graphs_f2158; assert_equal("1990", worksheet.lever_graphs_f2158); end
  def test_lever_graphs_g2158; assert_equal("1995", worksheet.lever_graphs_g2158); end
  def test_lever_graphs_h2158; assert_equal("2000", worksheet.lever_graphs_h2158); end
  def test_lever_graphs_i2158; assert_equal("2005", worksheet.lever_graphs_i2158); end
  def test_lever_graphs_j2158; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2158, 0.002); end
  def test_lever_graphs_k2158; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2158, 0.002); end
  def test_lever_graphs_l2158; assert_equal("2015", worksheet.lever_graphs_l2158); end
  def test_lever_graphs_m2158; assert_equal("2020", worksheet.lever_graphs_m2158); end
  def test_lever_graphs_n2158; assert_equal("2025", worksheet.lever_graphs_n2158); end
  def test_lever_graphs_o2158; assert_equal("2030", worksheet.lever_graphs_o2158); end
  def test_lever_graphs_p2158; assert_equal("2035", worksheet.lever_graphs_p2158); end
  def test_lever_graphs_q2158; assert_equal("2040", worksheet.lever_graphs_q2158); end
  def test_lever_graphs_r2158; assert_equal("2045", worksheet.lever_graphs_r2158); end
  def test_lever_graphs_s2158; assert_equal("2050", worksheet.lever_graphs_s2158); end
  def test_lever_graphs_b2159; assert_equal("Historic data", worksheet.lever_graphs_b2159); end
  def test_lever_graphs_b2160; assert_in_delta(1.0, worksheet.lever_graphs_b2160, 0.002); end
  def test_lever_graphs_k2160; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_k2160, 0.002); end
  def test_lever_graphs_l2160; assert_in_delta(0.01, worksheet.lever_graphs_l2160, 0.002); end
  def test_lever_graphs_m2160; assert_in_delta(0.011428571428571429, worksheet.lever_graphs_m2160, 0.002); end
  def test_lever_graphs_n2160; assert_in_delta(0.012857142857142859, worksheet.lever_graphs_n2160, 0.002); end
  def test_lever_graphs_o2160; assert_in_delta(0.014285714285714287, worksheet.lever_graphs_o2160, 0.002); end
  def test_lever_graphs_p2160; assert_in_delta(0.015714285714285715, worksheet.lever_graphs_p2160, 0.002); end
  def test_lever_graphs_q2160; assert_in_delta(0.017142857142857144, worksheet.lever_graphs_q2160, 0.002); end
  def test_lever_graphs_r2160; assert_in_delta(0.018571428571428572, worksheet.lever_graphs_r2160, 0.002); end
  def test_lever_graphs_s2160; assert_in_delta(0.02, worksheet.lever_graphs_s2160, 0.002); end
  def test_lever_graphs_b2161; assert_in_epsilon(2.0, worksheet.lever_graphs_b2161, 0.002); end
  def test_lever_graphs_k2161; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_k2161, 0.002); end
  def test_lever_graphs_l2161; assert_in_delta(0.01, worksheet.lever_graphs_l2161, 0.002); end
  def test_lever_graphs_m2161; assert_in_delta(0.022857142857142857, worksheet.lever_graphs_m2161, 0.002); end
  def test_lever_graphs_n2161; assert_in_delta(0.03571428571428571, worksheet.lever_graphs_n2161, 0.002); end
  def test_lever_graphs_o2161; assert_in_delta(0.04857142857142857, worksheet.lever_graphs_o2161, 0.002); end
  def test_lever_graphs_p2161; assert_in_delta(0.06142857142857143, worksheet.lever_graphs_p2161, 0.002); end
  def test_lever_graphs_q2161; assert_in_delta(0.0742857142857143, worksheet.lever_graphs_q2161, 0.002); end
  def test_lever_graphs_r2161; assert_in_delta(0.08714285714285715, worksheet.lever_graphs_r2161, 0.002); end
  def test_lever_graphs_s2161; assert_in_delta(0.1, worksheet.lever_graphs_s2161, 0.002); end
  def test_lever_graphs_b2162; assert_in_epsilon(3.0, worksheet.lever_graphs_b2162, 0.002); end
  def test_lever_graphs_k2162; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_k2162, 0.002); end
  def test_lever_graphs_l2162; assert_in_delta(0.01, worksheet.lever_graphs_l2162, 0.002); end
  def test_lever_graphs_m2162; assert_in_delta(0.058571428571428566, worksheet.lever_graphs_m2162, 0.002); end
  def test_lever_graphs_n2162; assert_in_delta(0.10714285714285712, worksheet.lever_graphs_n2162, 0.002); end
  def test_lever_graphs_o2162; assert_in_delta(0.1557142857142857, worksheet.lever_graphs_o2162, 0.002); end
  def test_lever_graphs_p2162; assert_in_delta(0.20428571428571426, worksheet.lever_graphs_p2162, 0.002); end
  def test_lever_graphs_q2162; assert_in_delta(0.2528571428571429, worksheet.lever_graphs_q2162, 0.002); end
  def test_lever_graphs_r2162; assert_in_delta(0.3014285714285714, worksheet.lever_graphs_r2162, 0.002); end
  def test_lever_graphs_s2162; assert_in_delta(0.35, worksheet.lever_graphs_s2162, 0.002); end
  def test_lever_graphs_b2163; assert_in_epsilon(4.0, worksheet.lever_graphs_b2163, 0.002); end
  def test_lever_graphs_k2163; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_k2163, 0.002); end
  def test_lever_graphs_l2163; assert_in_delta(0.01, worksheet.lever_graphs_l2163, 0.002); end
  def test_lever_graphs_m2163; assert_in_delta(0.08714285714285713, worksheet.lever_graphs_m2163, 0.002); end
  def test_lever_graphs_n2163; assert_in_delta(0.16428571428571428, worksheet.lever_graphs_n2163, 0.002); end
  def test_lever_graphs_o2163; assert_in_delta(0.24142857142857144, worksheet.lever_graphs_o2163, 0.002); end
  def test_lever_graphs_p2163; assert_in_delta(0.31857142857142856, worksheet.lever_graphs_p2163, 0.002); end
  def test_lever_graphs_q2163; assert_in_delta(0.3957142857142857, worksheet.lever_graphs_q2163, 0.002); end
  def test_lever_graphs_r2163; assert_in_delta(0.47285714285714286, worksheet.lever_graphs_r2163, 0.002); end
  def test_lever_graphs_s2163; assert_in_delta(0.55, worksheet.lever_graphs_s2163, 0.002); end
  def test_lever_graphs_b2164; assert_equal("Comparator A", worksheet.lever_graphs_b2164); end
  def test_lever_graphs_b2165; assert_equal("Comparator B", worksheet.lever_graphs_b2165); end
  def test_lever_graphs_b2166; assert_equal("Comparator C", worksheet.lever_graphs_b2166); end
  def test_lever_graphs_c1725; assert_equal("1975", worksheet.lever_graphs_c1725); end
  def test_lever_graphs_d1725; assert_equal("1980", worksheet.lever_graphs_d1725); end
  def test_lever_graphs_e1725; assert_equal("1985", worksheet.lever_graphs_e1725); end
  def test_lever_graphs_f1725; assert_equal("1990", worksheet.lever_graphs_f1725); end
  def test_lever_graphs_g1725; assert_equal("1995", worksheet.lever_graphs_g1725); end
  def test_lever_graphs_h1725; assert_equal("2000", worksheet.lever_graphs_h1725); end
  def test_lever_graphs_i1725; assert_equal("2005", worksheet.lever_graphs_i1725); end
  def test_lever_graphs_j1725; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1725, 0.002); end
  def test_lever_graphs_k1725; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1725, 0.002); end
  def test_lever_graphs_l1725; assert_equal("2015", worksheet.lever_graphs_l1725); end
  def test_lever_graphs_m1725; assert_equal("2020", worksheet.lever_graphs_m1725); end
  def test_lever_graphs_n1725; assert_equal("2025", worksheet.lever_graphs_n1725); end
  def test_lever_graphs_o1725; assert_equal("2030", worksheet.lever_graphs_o1725); end
  def test_lever_graphs_p1725; assert_equal("2035", worksheet.lever_graphs_p1725); end
  def test_lever_graphs_q1725; assert_equal("2040", worksheet.lever_graphs_q1725); end
  def test_lever_graphs_r1725; assert_equal("2045", worksheet.lever_graphs_r1725); end
  def test_lever_graphs_s1725; assert_equal("2050", worksheet.lever_graphs_s1725); end
  def test_lever_graphs_b1726; assert_equal("Historic data", worksheet.lever_graphs_b1726); end
  def test_lever_graphs_b1727; assert_in_delta(1.0, worksheet.lever_graphs_b1727, 0.002); end
  def test_lever_graphs_k1727; assert_in_delta(0.0, (worksheet.lever_graphs_k1727||0), 0.002); end
  def test_lever_graphs_l1727; assert_in_delta(0.0, (worksheet.lever_graphs_l1727||0), 0.002); end
  def test_lever_graphs_m1727; assert_in_delta(0.0, (worksheet.lever_graphs_m1727||0), 0.002); end
  def test_lever_graphs_n1727; assert_in_delta(0.0, (worksheet.lever_graphs_n1727||0), 0.002); end
  def test_lever_graphs_o1727; assert_in_delta(0.0, (worksheet.lever_graphs_o1727||0), 0.002); end
  def test_lever_graphs_p1727; assert_in_delta(0.0, (worksheet.lever_graphs_p1727||0), 0.002); end
  def test_lever_graphs_q1727; assert_in_delta(0.0, (worksheet.lever_graphs_q1727||0), 0.002); end
  def test_lever_graphs_r1727; assert_in_delta(0.0, (worksheet.lever_graphs_r1727||0), 0.002); end
  def test_lever_graphs_s1727; assert_in_delta(0.0, (worksheet.lever_graphs_s1727||0), 0.002); end
  def test_lever_graphs_b1728; assert_in_epsilon(2.0, worksheet.lever_graphs_b1728, 0.002); end
  def test_lever_graphs_k1728; assert_in_delta(0.0, (worksheet.lever_graphs_k1728||0), 0.002); end
  def test_lever_graphs_l1728; assert_in_delta(0.0, (worksheet.lever_graphs_l1728||0), 0.002); end
  def test_lever_graphs_m1728; assert_in_delta(0.0, (worksheet.lever_graphs_m1728||0), 0.002); end
  def test_lever_graphs_n1728; assert_in_delta(0.0, (worksheet.lever_graphs_n1728||0), 0.002); end
  def test_lever_graphs_o1728; assert_in_delta(0.0, (worksheet.lever_graphs_o1728||0), 0.002); end
  def test_lever_graphs_p1728; assert_in_delta(0.05, worksheet.lever_graphs_p1728, 0.002); end
  def test_lever_graphs_q1728; assert_in_delta(0.1, worksheet.lever_graphs_q1728, 0.002); end
  def test_lever_graphs_r1728; assert_in_delta(0.15, worksheet.lever_graphs_r1728, 0.002); end
  def test_lever_graphs_s1728; assert_in_delta(0.2, worksheet.lever_graphs_s1728, 0.002); end
  def test_lever_graphs_b1729; assert_in_epsilon(3.0, worksheet.lever_graphs_b1729, 0.002); end
  def test_lever_graphs_k1729; assert_in_delta(0.0, (worksheet.lever_graphs_k1729||0), 0.002); end
  def test_lever_graphs_l1729; assert_in_delta(0.0, (worksheet.lever_graphs_l1729||0), 0.002); end
  def test_lever_graphs_m1729; assert_in_delta(0.0, (worksheet.lever_graphs_m1729||0), 0.002); end
  def test_lever_graphs_n1729; assert_in_delta(0.01, worksheet.lever_graphs_n1729, 0.002); end
  def test_lever_graphs_o1729; assert_in_delta(0.08, worksheet.lever_graphs_o1729, 0.002); end
  def test_lever_graphs_p1729; assert_in_delta(0.15000000000000002, worksheet.lever_graphs_p1729, 0.002); end
  def test_lever_graphs_q1729; assert_in_delta(0.22000000000000003, worksheet.lever_graphs_q1729, 0.002); end
  def test_lever_graphs_r1729; assert_in_delta(0.29000000000000004, worksheet.lever_graphs_r1729, 0.002); end
  def test_lever_graphs_s1729; assert_in_delta(0.36000000000000004, worksheet.lever_graphs_s1729, 0.002); end
  def test_lever_graphs_b1730; assert_in_epsilon(4.0, worksheet.lever_graphs_b1730, 0.002); end
  def test_lever_graphs_k1730; assert_in_delta(0.0, (worksheet.lever_graphs_k1730||0), 0.002); end
  def test_lever_graphs_l1730; assert_in_delta(0.0, (worksheet.lever_graphs_l1730||0), 0.002); end
  def test_lever_graphs_m1730; assert_in_delta(0.0, (worksheet.lever_graphs_m1730||0), 0.002); end
  def test_lever_graphs_n1730; assert_in_delta(0.04, worksheet.lever_graphs_n1730, 0.002); end
  def test_lever_graphs_o1730; assert_in_delta(0.192, worksheet.lever_graphs_o1730, 0.002); end
  def test_lever_graphs_p1730; assert_in_delta(0.344, worksheet.lever_graphs_p1730, 0.002); end
  def test_lever_graphs_q1730; assert_in_delta(0.496, worksheet.lever_graphs_q1730, 0.002); end
  def test_lever_graphs_r1730; assert_in_delta(0.648, worksheet.lever_graphs_r1730, 0.002); end
  def test_lever_graphs_s1730; assert_in_delta(0.8, worksheet.lever_graphs_s1730, 0.002); end
  def test_lever_graphs_b1731; assert_equal("Comparator A", worksheet.lever_graphs_b1731); end
  def test_lever_graphs_b1732; assert_equal("Comparator B", worksheet.lever_graphs_b1732); end
  def test_lever_graphs_b1733; assert_equal("Comparator C", worksheet.lever_graphs_b1733); end
  def test_lever_graphs_d1714; assert_equal("Title", worksheet.lever_graphs_d1714); end
  def test_lever_graphs_e1714; assert_equal("Steel.Oxygen", worksheet.lever_graphs_e1714); end
  def test_lever_graphs_f1714; assert_equal("Chemicals & petrochemicals.HVC", worksheet.lever_graphs_f1714); end
  def test_lever_graphs_g1714; assert_equal("Pulp & paper.Pulp", worksheet.lever_graphs_g1714); end
  def test_lever_graphs_h1714; assert_equal("Cement", worksheet.lever_graphs_h1714); end
  def test_lever_graphs_i1714; assert_equal("Timber", worksheet.lever_graphs_i1714); end
  def test_lever_graphs_d1715; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1715, 0.002); end
  def test_lever_graphs_e1715; assert_in_delta(0.0, (worksheet.lever_graphs_e1715||0), 0.002); end
  def test_lever_graphs_f1715; assert_in_delta(0.0, (worksheet.lever_graphs_f1715||0), 0.002); end
  def test_lever_graphs_g1715; assert_in_delta(0.0, (worksheet.lever_graphs_g1715||0), 0.002); end
  def test_lever_graphs_h1715; assert_in_delta(0.0, (worksheet.lever_graphs_h1715||0), 0.002); end
  def test_lever_graphs_i1715; assert_in_delta(0.0, (worksheet.lever_graphs_i1715||0), 0.002); end
  def test_lever_graphs_d1716; assert_equal("2050: Level 1", worksheet.lever_graphs_d1716); end
  def test_lever_graphs_e1716; assert_in_delta(0.0, (worksheet.lever_graphs_e1716||0), 0.002); end
  def test_lever_graphs_f1716; assert_in_delta(0.0, (worksheet.lever_graphs_f1716||0), 0.002); end
  def test_lever_graphs_g1716; assert_in_delta(0.0, (worksheet.lever_graphs_g1716||0), 0.002); end
  def test_lever_graphs_h1716; assert_in_delta(0.0, (worksheet.lever_graphs_h1716||0), 0.002); end
  def test_lever_graphs_i1716; assert_in_delta(0.0, (worksheet.lever_graphs_i1716||0), 0.002); end
  def test_lever_graphs_d1717; assert_equal("2050: Level 2", worksheet.lever_graphs_d1717); end
  def test_lever_graphs_e1717; assert_in_delta(0.2, worksheet.lever_graphs_e1717, 0.002); end
  def test_lever_graphs_f1717; assert_in_delta(0.0, (worksheet.lever_graphs_f1717||0), 0.002); end
  def test_lever_graphs_g1717; assert_in_delta(0.425, worksheet.lever_graphs_g1717, 0.002); end
  def test_lever_graphs_h1717; assert_in_delta(0.425, worksheet.lever_graphs_h1717, 0.002); end
  def test_lever_graphs_i1717; assert_in_delta(0.0, (worksheet.lever_graphs_i1717||0), 0.002); end
  def test_lever_graphs_d1718; assert_equal("2050: Level 3", worksheet.lever_graphs_d1718); end
  def test_lever_graphs_e1718; assert_in_delta(0.36000000000000004, worksheet.lever_graphs_e1718, 0.002); end
  def test_lever_graphs_f1718; assert_in_delta(0.5, worksheet.lever_graphs_f1718, 0.002); end
  def test_lever_graphs_g1718; assert_in_delta(0.6375, worksheet.lever_graphs_g1718, 0.002); end
  def test_lever_graphs_h1718; assert_in_delta(0.6375, worksheet.lever_graphs_h1718, 0.002); end
  def test_lever_graphs_i1718; assert_in_delta(0.0, (worksheet.lever_graphs_i1718||0), 0.002); end
  def test_lever_graphs_d1719; assert_equal("2050: Level 4", worksheet.lever_graphs_d1719); end
  def test_lever_graphs_e1719; assert_in_delta(0.8, worksheet.lever_graphs_e1719, 0.002); end
  def test_lever_graphs_f1719; assert_in_delta(0.62, worksheet.lever_graphs_f1719, 0.002); end
  def test_lever_graphs_g1719; assert_in_delta(0.85, worksheet.lever_graphs_g1719, 0.002); end
  def test_lever_graphs_h1719; assert_in_delta(0.85, worksheet.lever_graphs_h1719, 0.002); end
  def test_lever_graphs_i1719; assert_in_delta(0.3, worksheet.lever_graphs_i1719, 0.002); end
  def test_lever_graphs_c2560; assert_equal("1975", worksheet.lever_graphs_c2560); end
  def test_lever_graphs_d2560; assert_equal("1980", worksheet.lever_graphs_d2560); end
  def test_lever_graphs_e2560; assert_equal("1985", worksheet.lever_graphs_e2560); end
  def test_lever_graphs_f2560; assert_equal("1990", worksheet.lever_graphs_f2560); end
  def test_lever_graphs_g2560; assert_equal("1995", worksheet.lever_graphs_g2560); end
  def test_lever_graphs_h2560; assert_equal("2000", worksheet.lever_graphs_h2560); end
  def test_lever_graphs_i2560; assert_equal("2005", worksheet.lever_graphs_i2560); end
  def test_lever_graphs_j2560; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2560, 0.002); end
  def test_lever_graphs_k2560; assert_equal("2011", worksheet.lever_graphs_k2560); end
  def test_lever_graphs_l2560; assert_equal("2015", worksheet.lever_graphs_l2560); end
  def test_lever_graphs_m2560; assert_equal("2020", worksheet.lever_graphs_m2560); end
  def test_lever_graphs_n2560; assert_equal("2025", worksheet.lever_graphs_n2560); end
  def test_lever_graphs_o2560; assert_equal("2030", worksheet.lever_graphs_o2560); end
  def test_lever_graphs_p2560; assert_equal("2035", worksheet.lever_graphs_p2560); end
  def test_lever_graphs_q2560; assert_equal("2040", worksheet.lever_graphs_q2560); end
  def test_lever_graphs_r2560; assert_equal("2045", worksheet.lever_graphs_r2560); end
  def test_lever_graphs_s2560; assert_equal("2050", worksheet.lever_graphs_s2560); end
  def test_lever_graphs_b2561; assert_equal("Historic data", worksheet.lever_graphs_b2561); end
  def test_lever_graphs_b2562; assert_in_delta(1.0, worksheet.lever_graphs_b2562, 0.002); end
  def test_lever_graphs_k2562; assert_in_epsilon(5040.0, worksheet.lever_graphs_k2562, 0.002); end
  def test_lever_graphs_l2562; assert_in_epsilon(4929.230769230769, worksheet.lever_graphs_l2562, 0.002); end
  def test_lever_graphs_m2562; assert_in_epsilon(4790.7692307692305, worksheet.lever_graphs_m2562, 0.002); end
  def test_lever_graphs_n2562; assert_in_epsilon(4652.307692307692, worksheet.lever_graphs_n2562, 0.002); end
  def test_lever_graphs_o2562; assert_in_epsilon(4513.846153846154, worksheet.lever_graphs_o2562, 0.002); end
  def test_lever_graphs_p2562; assert_in_epsilon(4375.384615384615, worksheet.lever_graphs_p2562, 0.002); end
  def test_lever_graphs_q2562; assert_in_epsilon(4236.923076923077, worksheet.lever_graphs_q2562, 0.002); end
  def test_lever_graphs_r2562; assert_in_epsilon(4098.461538461539, worksheet.lever_graphs_r2562, 0.002); end
  def test_lever_graphs_s2562; assert_in_epsilon(3960.0000000000005, worksheet.lever_graphs_s2562, 0.002); end
  def test_lever_graphs_b2563; assert_in_epsilon(2.0, worksheet.lever_graphs_b2563, 0.002); end
  def test_lever_graphs_k2563; assert_in_epsilon(5040.0, worksheet.lever_graphs_k2563, 0.002); end
  def test_lever_graphs_l2563; assert_in_epsilon(4929.230769230769, worksheet.lever_graphs_l2563, 0.002); end
  def test_lever_graphs_m2563; assert_in_epsilon(4739.340659340659, worksheet.lever_graphs_m2563, 0.002); end
  def test_lever_graphs_n2563; assert_in_epsilon(4549.450549450549, worksheet.lever_graphs_n2563, 0.002); end
  def test_lever_graphs_o2563; assert_in_epsilon(4359.56043956044, worksheet.lever_graphs_o2563, 0.002); end
  def test_lever_graphs_p2563; assert_in_epsilon(4169.67032967033, worksheet.lever_graphs_p2563, 0.002); end
  def test_lever_graphs_q2563; assert_in_epsilon(3979.78021978022, worksheet.lever_graphs_q2563, 0.002); end
  def test_lever_graphs_r2563; assert_in_epsilon(3789.8901098901097, worksheet.lever_graphs_r2563, 0.002); end
  def test_lever_graphs_s2563; assert_in_epsilon(3600.0, worksheet.lever_graphs_s2563, 0.002); end
  def test_lever_graphs_b2564; assert_in_epsilon(3.0, worksheet.lever_graphs_b2564, 0.002); end
  def test_lever_graphs_k2564; assert_in_epsilon(5040.0, worksheet.lever_graphs_k2564, 0.002); end
  def test_lever_graphs_l2564; assert_in_epsilon(4929.230769230769, worksheet.lever_graphs_l2564, 0.002); end
  def test_lever_graphs_m2564; assert_in_epsilon(4687.912087912087, worksheet.lever_graphs_m2564, 0.002); end
  def test_lever_graphs_n2564; assert_in_epsilon(4446.593406593407, worksheet.lever_graphs_n2564, 0.002); end
  def test_lever_graphs_o2564; assert_in_epsilon(4205.274725274725, worksheet.lever_graphs_o2564, 0.002); end
  def test_lever_graphs_p2564; assert_in_epsilon(3963.9560439560437, worksheet.lever_graphs_p2564, 0.002); end
  def test_lever_graphs_q2564; assert_in_epsilon(3722.6373626373625, worksheet.lever_graphs_q2564, 0.002); end
  def test_lever_graphs_r2564; assert_in_epsilon(3481.3186813186812, worksheet.lever_graphs_r2564, 0.002); end
  def test_lever_graphs_s2564; assert_in_epsilon(3240.0, worksheet.lever_graphs_s2564, 0.002); end
  def test_lever_graphs_b2565; assert_in_epsilon(4.0, worksheet.lever_graphs_b2565, 0.002); end
  def test_lever_graphs_k2565; assert_in_epsilon(5040.0, worksheet.lever_graphs_k2565, 0.002); end
  def test_lever_graphs_l2565; assert_in_epsilon(4929.230769230769, worksheet.lever_graphs_l2565, 0.002); end
  def test_lever_graphs_m2565; assert_in_epsilon(4636.483516483517, worksheet.lever_graphs_m2565, 0.002); end
  def test_lever_graphs_n2565; assert_in_epsilon(4343.736263736263, worksheet.lever_graphs_n2565, 0.002); end
  def test_lever_graphs_o2565; assert_in_epsilon(4050.989010989011, worksheet.lever_graphs_o2565, 0.002); end
  def test_lever_graphs_p2565; assert_in_epsilon(3758.241758241758, worksheet.lever_graphs_p2565, 0.002); end
  def test_lever_graphs_q2565; assert_in_epsilon(3465.4945054945056, worksheet.lever_graphs_q2565, 0.002); end
  def test_lever_graphs_r2565; assert_in_epsilon(3172.7472527472523, worksheet.lever_graphs_r2565, 0.002); end
  def test_lever_graphs_s2565; assert_in_epsilon(2880.0, worksheet.lever_graphs_s2565, 0.002); end
  def test_lever_graphs_d2570; assert_equal("Title", worksheet.lever_graphs_d2570); end
  def test_lever_graphs_e2570; assert_equal("Global urban solid stoves used by people with access to electricity", worksheet.lever_graphs_e2570); end
  def test_lever_graphs_f2570; assert_equal("Global urban liquid stoves used by people with access to electricity", worksheet.lever_graphs_f2570); end
  def test_lever_graphs_g2570; assert_equal("Global urban gas stoves used by people with access to electricity", worksheet.lever_graphs_g2570); end
  def test_lever_graphs_h2570; assert_equal("Global urban electricity stoves used by people with access to electricity", worksheet.lever_graphs_h2570); end
  def test_lever_graphs_i2570; assert_equal("Global urban traditional biomass boiler used by people with access to electricity", worksheet.lever_graphs_i2570); end
  def test_lever_graphs_d2571; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2571, 0.002); end
  def test_lever_graphs_e2571; assert_in_delta(0.13, worksheet.lever_graphs_e2571, 0.002); end
  def test_lever_graphs_f2571; assert_in_delta(0.15, worksheet.lever_graphs_f2571, 0.002); end
  def test_lever_graphs_g2571; assert_in_delta(0.4, worksheet.lever_graphs_g2571, 0.002); end
  def test_lever_graphs_h2571; assert_in_delta(0.2, worksheet.lever_graphs_h2571, 0.002); end
  def test_lever_graphs_i2571; assert_in_delta(0.11999999999999994, worksheet.lever_graphs_i2571, 0.002); end
  def test_lever_graphs_d2572; assert_equal("2050: Level 1", worksheet.lever_graphs_d2572); end
  def test_lever_graphs_e2572; assert_in_delta(0.07999999999999996, worksheet.lever_graphs_e2572, 0.002); end
  def test_lever_graphs_f2572; assert_in_delta(0.15, worksheet.lever_graphs_f2572, 0.002); end
  def test_lever_graphs_g2572; assert_in_delta(0.4, worksheet.lever_graphs_g2572, 0.002); end
  def test_lever_graphs_h2572; assert_in_delta(0.25, worksheet.lever_graphs_h2572, 0.002); end
  def test_lever_graphs_i2572; assert_in_delta(0.12, worksheet.lever_graphs_i2572, 0.002); end
  def test_lever_graphs_d2573; assert_equal("2050: Level 2", worksheet.lever_graphs_d2573); end
  def test_lever_graphs_e2573; assert_in_delta(0.010000000000000009, worksheet.lever_graphs_e2573, 0.002); end
  def test_lever_graphs_f2573; assert_in_delta(0.08, worksheet.lever_graphs_f2573, 0.002); end
  def test_lever_graphs_g2573; assert_in_delta(0.35, worksheet.lever_graphs_g2573, 0.002); end
  def test_lever_graphs_h2573; assert_in_delta(0.5, worksheet.lever_graphs_h2573, 0.002); end
  def test_lever_graphs_i2573; assert_in_delta(0.06, worksheet.lever_graphs_i2573, 0.002); end
  def test_lever_graphs_d2574; assert_equal("2050: Level 3", worksheet.lever_graphs_d2574); end
  def test_lever_graphs_e2574; assert_in_delta(0.0, (worksheet.lever_graphs_e2574||0), 0.002); end
  def test_lever_graphs_f2574; assert_in_delta(0.01, worksheet.lever_graphs_f2574, 0.002); end
  def test_lever_graphs_g2574; assert_in_delta(0.3, worksheet.lever_graphs_g2574, 0.002); end
  def test_lever_graphs_h2574; assert_in_delta(0.68, worksheet.lever_graphs_h2574, 0.002); end
  def test_lever_graphs_i2574; assert_in_delta(0.01, worksheet.lever_graphs_i2574, 0.002); end
  def test_lever_graphs_d2575; assert_equal("2050: Level 4", worksheet.lever_graphs_d2575); end
  def test_lever_graphs_e2575; assert_in_delta(0.0, (worksheet.lever_graphs_e2575||0), 0.002); end
  def test_lever_graphs_f2575; assert_in_delta(0.0, (worksheet.lever_graphs_f2575||0), 0.002); end
  def test_lever_graphs_g2575; assert_in_delta(0.25, worksheet.lever_graphs_g2575, 0.002); end
  def test_lever_graphs_h2575; assert_in_delta(0.75, worksheet.lever_graphs_h2575, 0.002); end
  def test_lever_graphs_i2575; assert_in_delta(0.0, (worksheet.lever_graphs_i2575||0), 0.002); end
  def test_lever_graphs_c3099; assert_equal("1975", worksheet.lever_graphs_c3099); end
  def test_lever_graphs_d3099; assert_equal("1980", worksheet.lever_graphs_d3099); end
  def test_lever_graphs_e3099; assert_equal("1985", worksheet.lever_graphs_e3099); end
  def test_lever_graphs_f3099; assert_equal("1990", worksheet.lever_graphs_f3099); end
  def test_lever_graphs_g3099; assert_equal("1995", worksheet.lever_graphs_g3099); end
  def test_lever_graphs_h3099; assert_equal("2000", worksheet.lever_graphs_h3099); end
  def test_lever_graphs_i3099; assert_equal("2005", worksheet.lever_graphs_i3099); end
  def test_lever_graphs_j3099; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3099, 0.002); end
  def test_lever_graphs_k3099; assert_equal("2011", worksheet.lever_graphs_k3099); end
  def test_lever_graphs_l3099; assert_equal("2015", worksheet.lever_graphs_l3099); end
  def test_lever_graphs_m3099; assert_equal("2020", worksheet.lever_graphs_m3099); end
  def test_lever_graphs_n3099; assert_equal("2025", worksheet.lever_graphs_n3099); end
  def test_lever_graphs_o3099; assert_equal("2030", worksheet.lever_graphs_o3099); end
  def test_lever_graphs_p3099; assert_equal("2035", worksheet.lever_graphs_p3099); end
  def test_lever_graphs_q3099; assert_equal("2040", worksheet.lever_graphs_q3099); end
  def test_lever_graphs_r3099; assert_equal("2045", worksheet.lever_graphs_r3099); end
  def test_lever_graphs_s3099; assert_equal("2050", worksheet.lever_graphs_s3099); end
  def test_lever_graphs_b3100; assert_equal("Historic data", worksheet.lever_graphs_b3100); end
  def test_lever_graphs_b3101; assert_in_delta(1.0, worksheet.lever_graphs_b3101, 0.002); end
  def test_lever_graphs_k3101; assert_in_delta(0.03168958058724973, worksheet.lever_graphs_k3101, 0.002); end
  def test_lever_graphs_l3101; assert_in_delta(0.03323827994856126, worksheet.lever_graphs_l3101, 0.002); end
  def test_lever_graphs_m3101; assert_in_delta(0.03301703718265961, worksheet.lever_graphs_m3101, 0.002); end
  def test_lever_graphs_n3101; assert_in_delta(0.032795794416757965, worksheet.lever_graphs_n3101, 0.002); end
  def test_lever_graphs_o3101; assert_in_delta(0.03257455165085632, worksheet.lever_graphs_o3101, 0.002); end
  def test_lever_graphs_p3101; assert_in_delta(0.032353308884954676, worksheet.lever_graphs_p3101, 0.002); end
  def test_lever_graphs_q3101; assert_in_delta(0.032132066119053025, worksheet.lever_graphs_q3101, 0.002); end
  def test_lever_graphs_r3101; assert_in_delta(0.03191082335315138, worksheet.lever_graphs_r3101, 0.002); end
  def test_lever_graphs_s3101; assert_in_delta(0.03168958058724973, worksheet.lever_graphs_s3101, 0.002); end
  def test_lever_graphs_b3102; assert_in_epsilon(2.0, worksheet.lever_graphs_b3102, 0.002); end
  def test_lever_graphs_k3102; assert_in_delta(0.03168958058724973, worksheet.lever_graphs_k3102, 0.002); end
  def test_lever_graphs_l3102; assert_in_delta(0.03323827994856126, worksheet.lever_graphs_l3102, 0.002); end
  def test_lever_graphs_m3102; assert_in_delta(0.034827870359073886, worksheet.lever_graphs_m3102, 0.002); end
  def test_lever_graphs_n3102; assert_in_delta(0.03641746076958651, worksheet.lever_graphs_n3102, 0.002); end
  def test_lever_graphs_o3102; assert_in_delta(0.03800705118009913, worksheet.lever_graphs_o3102, 0.002); end
  def test_lever_graphs_p3102; assert_in_delta(0.03959664159061175, worksheet.lever_graphs_p3102, 0.002); end
  def test_lever_graphs_q3102; assert_in_delta(0.04118623200112438, worksheet.lever_graphs_q3102, 0.002); end
  def test_lever_graphs_r3102; assert_in_delta(0.042775822411637, worksheet.lever_graphs_r3102, 0.002); end
  def test_lever_graphs_s3102; assert_in_delta(0.04436541282214962, worksheet.lever_graphs_s3102, 0.002); end
  def test_lever_graphs_b3103; assert_in_epsilon(3.0, worksheet.lever_graphs_b3103, 0.002); end
  def test_lever_graphs_k3103; assert_in_delta(0.03168958058724973, worksheet.lever_graphs_k3103, 0.002); end
  def test_lever_graphs_l3103; assert_in_delta(0.03323827994856126, worksheet.lever_graphs_l3103, 0.002); end
  def test_lever_graphs_m3103; assert_in_delta(0.03573328694728102, worksheet.lever_graphs_m3103, 0.002); end
  def test_lever_graphs_n3103; assert_in_delta(0.03822829394600078, worksheet.lever_graphs_n3103, 0.002); end
  def test_lever_graphs_o3103; assert_in_delta(0.040723300944720535, worksheet.lever_graphs_o3103, 0.002); end
  def test_lever_graphs_p3103; assert_in_delta(0.043218307943440296, worksheet.lever_graphs_p3103, 0.002); end
  def test_lever_graphs_q3103; assert_in_delta(0.04571331494216005, worksheet.lever_graphs_q3103, 0.002); end
  def test_lever_graphs_r3103; assert_in_delta(0.0482083219408798, worksheet.lever_graphs_r3103, 0.002); end
  def test_lever_graphs_s3103; assert_in_delta(0.05070332893959957, worksheet.lever_graphs_s3103, 0.002); end
  def test_lever_graphs_b3104; assert_in_epsilon(4.0, worksheet.lever_graphs_b3104, 0.002); end
  def test_lever_graphs_k3104; assert_in_delta(0.03168958058724973, worksheet.lever_graphs_k3104, 0.002); end
  def test_lever_graphs_l3104; assert_in_delta(0.03323827994856126, worksheet.lever_graphs_l3104, 0.002); end
  def test_lever_graphs_m3104; assert_in_delta(0.03754412012369529, worksheet.lever_graphs_m3104, 0.002); end
  def test_lever_graphs_n3104; assert_in_delta(0.041849960298829314, worksheet.lever_graphs_n3104, 0.002); end
  def test_lever_graphs_o3104; assert_in_delta(0.046155800473963345, worksheet.lever_graphs_o3104, 0.002); end
  def test_lever_graphs_p3104; assert_in_delta(0.05046164064909737, worksheet.lever_graphs_p3104, 0.002); end
  def test_lever_graphs_q3104; assert_in_delta(0.0547674808242314, worksheet.lever_graphs_q3104, 0.002); end
  def test_lever_graphs_r3104; assert_in_delta(0.05907332099936543, worksheet.lever_graphs_r3104, 0.002); end
  def test_lever_graphs_s3104; assert_in_delta(0.06337916117449946, worksheet.lever_graphs_s3104, 0.002); end
  def test_lever_graphs_c3109; assert_equal("1975", worksheet.lever_graphs_c3109); end
  def test_lever_graphs_d3109; assert_equal("1980", worksheet.lever_graphs_d3109); end
  def test_lever_graphs_e3109; assert_equal("1985", worksheet.lever_graphs_e3109); end
  def test_lever_graphs_f3109; assert_equal("1990", worksheet.lever_graphs_f3109); end
  def test_lever_graphs_g3109; assert_equal("1995", worksheet.lever_graphs_g3109); end
  def test_lever_graphs_h3109; assert_equal("2000", worksheet.lever_graphs_h3109); end
  def test_lever_graphs_i3109; assert_equal("2005", worksheet.lever_graphs_i3109); end
  def test_lever_graphs_j3109; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3109, 0.002); end
  def test_lever_graphs_k3109; assert_equal("2011", worksheet.lever_graphs_k3109); end
  def test_lever_graphs_l3109; assert_equal("2015", worksheet.lever_graphs_l3109); end
  def test_lever_graphs_m3109; assert_equal("2020", worksheet.lever_graphs_m3109); end
  def test_lever_graphs_n3109; assert_equal("2025", worksheet.lever_graphs_n3109); end
  def test_lever_graphs_o3109; assert_equal("2030", worksheet.lever_graphs_o3109); end
  def test_lever_graphs_p3109; assert_equal("2035", worksheet.lever_graphs_p3109); end
  def test_lever_graphs_q3109; assert_equal("2040", worksheet.lever_graphs_q3109); end
  def test_lever_graphs_r3109; assert_equal("2045", worksheet.lever_graphs_r3109); end
  def test_lever_graphs_s3109; assert_equal("2050", worksheet.lever_graphs_s3109); end
  def test_lever_graphs_b3110; assert_equal("Historic data", worksheet.lever_graphs_b3110); end
  def test_lever_graphs_b3111; assert_in_delta(1.0, worksheet.lever_graphs_b3111, 0.002); end
  def test_lever_graphs_k3111; assert_in_delta(0.10041822124385165, worksheet.lever_graphs_k3111, 0.002); end
  def test_lever_graphs_l3111; assert_in_delta(0.10532575337972867, worksheet.lever_graphs_l3111, 0.002); end
  def test_lever_graphs_m3111; assert_in_delta(0.10462467736031766, worksheet.lever_graphs_m3111, 0.002); end
  def test_lever_graphs_n3111; assert_in_delta(0.10392360134090665, worksheet.lever_graphs_n3111, 0.002); end
  def test_lever_graphs_o3111; assert_in_delta(0.10322252532149566, worksheet.lever_graphs_o3111, 0.002); end
  def test_lever_graphs_p3111; assert_in_delta(0.10252144930208468, worksheet.lever_graphs_p3111, 0.002); end
  def test_lever_graphs_q3111; assert_in_delta(0.10182037328267365, worksheet.lever_graphs_q3111, 0.002); end
  def test_lever_graphs_r3111; assert_in_delta(0.10111929726326264, worksheet.lever_graphs_r3111, 0.002); end
  def test_lever_graphs_s3111; assert_in_delta(0.10041822124385165, worksheet.lever_graphs_s3111, 0.002); end
  def test_lever_graphs_b3112; assert_in_epsilon(2.0, worksheet.lever_graphs_b3112, 0.002); end
  def test_lever_graphs_k3112; assert_in_delta(0.10041822124385165, worksheet.lever_graphs_k3112, 0.002); end
  def test_lever_graphs_l3112; assert_in_delta(0.10532575337972867, worksheet.lever_graphs_l3112, 0.002); end
  def test_lever_graphs_m3112; assert_in_delta(0.11036286143139493, worksheet.lever_graphs_m3112, 0.002); end
  def test_lever_graphs_n3112; assert_in_delta(0.11539996948306114, worksheet.lever_graphs_n3112, 0.002); end
  def test_lever_graphs_o3112; assert_in_delta(0.12043707753472738, worksheet.lever_graphs_o3112, 0.002); end
  def test_lever_graphs_p3112; assert_in_delta(0.1254741855863936, worksheet.lever_graphs_p3112, 0.002); end
  def test_lever_graphs_q3112; assert_in_delta(0.13051129363805986, worksheet.lever_graphs_q3112, 0.002); end
  def test_lever_graphs_r3112; assert_in_delta(0.13554840168972607, worksheet.lever_graphs_r3112, 0.002); end
  def test_lever_graphs_s3112; assert_in_delta(0.1405855097413923, worksheet.lever_graphs_s3112, 0.002); end
  def test_lever_graphs_b3113; assert_in_epsilon(3.0, worksheet.lever_graphs_b3113, 0.002); end
  def test_lever_graphs_k3113; assert_in_delta(0.10041822124385165, worksheet.lever_graphs_k3113, 0.002); end
  def test_lever_graphs_l3113; assert_in_delta(0.10532575337972867, worksheet.lever_graphs_l3113, 0.002); end
  def test_lever_graphs_m3113; assert_in_delta(0.11323195346693353, worksheet.lever_graphs_m3113, 0.002); end
  def test_lever_graphs_n3113; assert_in_delta(0.12113815355413837, worksheet.lever_graphs_n3113, 0.002); end
  def test_lever_graphs_o3113; assert_in_delta(0.1290443536413432, worksheet.lever_graphs_o3113, 0.002); end
  def test_lever_graphs_p3113; assert_in_delta(0.13695055372854809, worksheet.lever_graphs_p3113, 0.002); end
  def test_lever_graphs_q3113; assert_in_delta(0.14485675381575291, worksheet.lever_graphs_q3113, 0.002); end
  def test_lever_graphs_r3113; assert_in_delta(0.15276295390295777, worksheet.lever_graphs_r3113, 0.002); end
  def test_lever_graphs_s3113; assert_in_delta(0.16066915399016263, worksheet.lever_graphs_s3113, 0.002); end
  def test_lever_graphs_b3114; assert_in_epsilon(4.0, worksheet.lever_graphs_b3114, 0.002); end
  def test_lever_graphs_k3114; assert_in_delta(0.10041822124385165, worksheet.lever_graphs_k3114, 0.002); end
  def test_lever_graphs_l3114; assert_in_delta(0.10532575337972867, worksheet.lever_graphs_l3114, 0.002); end
  def test_lever_graphs_m3114; assert_in_delta(0.11897013753801078, worksheet.lever_graphs_m3114, 0.002); end
  def test_lever_graphs_n3114; assert_in_delta(0.13261452169629284, worksheet.lever_graphs_n3114, 0.002); end
  def test_lever_graphs_o3114; assert_in_delta(0.14625890585457496, worksheet.lever_graphs_o3114, 0.002); end
  def test_lever_graphs_p3114; assert_in_delta(0.159903290012857, worksheet.lever_graphs_p3114, 0.002); end
  def test_lever_graphs_q3114; assert_in_delta(0.1735476741711391, worksheet.lever_graphs_q3114, 0.002); end
  def test_lever_graphs_r3114; assert_in_delta(0.1871920583294212, worksheet.lever_graphs_r3114, 0.002); end
  def test_lever_graphs_s3114; assert_in_delta(0.2008364424877033, worksheet.lever_graphs_s3114, 0.002); end
  def test_lever_graphs_b3225; assert_equal("Year", worksheet.lever_graphs_b3225); end
  def test_lever_graphs_c3225; assert_equal("Level", worksheet.lever_graphs_c3225); end
  def test_lever_graphs_d3225; assert_equal("Title", worksheet.lever_graphs_d3225); end
  def test_lever_graphs_e3225; assert_equal("Cows and other bovines ", worksheet.lever_graphs_e3225); end
  def test_lever_graphs_f3225; assert_equal("Chickens and other poultry", worksheet.lever_graphs_f3225); end
  def test_lever_graphs_g3225; assert_equal("Pigs", worksheet.lever_graphs_g3225); end
  def test_lever_graphs_h3225; assert_equal("Sheep and goats", worksheet.lever_graphs_h3225); end
  def test_lever_graphs_i3225; assert_equal("Other animals", worksheet.lever_graphs_i3225); end
  def test_lever_graphs_j3225; assert_equal("Eggs", worksheet.lever_graphs_j3225); end
  def test_lever_graphs_k3225; assert_equal("Milk products", worksheet.lever_graphs_k3225); end
  def test_lever_graphs_b3226; assert_in_epsilon(2011.0, worksheet.lever_graphs_b3226, 0.002); end
  def test_lever_graphs_c3226; assert_in_delta(1.0, worksheet.lever_graphs_c3226, 0.002); end
  def test_lever_graphs_d3226; assert_in_epsilon(2011.0, worksheet.lever_graphs_d3226, 0.002); end
  def test_lever_graphs_e3226; assert_in_delta(0.05, worksheet.lever_graphs_e3226, 0.002); end
  def test_lever_graphs_f3226; assert_in_delta(0.244, worksheet.lever_graphs_f3226, 0.002); end
  def test_lever_graphs_g3226; assert_in_delta(0.271, worksheet.lever_graphs_g3226, 0.002); end
  def test_lever_graphs_h3226; assert_in_delta(0.05, worksheet.lever_graphs_h3226, 0.002); end
  def test_lever_graphs_i3226; assert_in_delta(0.15375, worksheet.lever_graphs_i3226, 0.002); end
  def test_lever_graphs_j3226; assert_in_delta(0.13, worksheet.lever_graphs_j3226, 0.002); end
  def test_lever_graphs_k3226; assert_in_delta(0.078, worksheet.lever_graphs_k3226, 0.002); end
  def test_lever_graphs_b3227; assert_in_epsilon(2050.0, worksheet.lever_graphs_b3227, 0.002); end
  def test_lever_graphs_c3227; assert_in_delta(1.0, worksheet.lever_graphs_c3227, 0.002); end
  def test_lever_graphs_d3227; assert_equal("2050: Level 1", worksheet.lever_graphs_d3227); end
  def test_lever_graphs_e3227; assert_in_delta(0.052500000000000005, worksheet.lever_graphs_e3227, 0.002); end
  def test_lever_graphs_f3227; assert_in_delta(0.252, worksheet.lever_graphs_f3227, 0.002); end
  def test_lever_graphs_g3227; assert_in_delta(0.28350000000000003, worksheet.lever_graphs_g3227, 0.002); end
  def test_lever_graphs_h3227; assert_in_delta(0.052500000000000005, worksheet.lever_graphs_h3227, 0.002); end
  def test_lever_graphs_i3227; assert_in_delta(0.1575, worksheet.lever_graphs_i3227, 0.002); end
  def test_lever_graphs_j3227; assert_in_delta(0.1365, worksheet.lever_graphs_j3227, 0.002); end
  def test_lever_graphs_k3227; assert_in_delta(0.084, worksheet.lever_graphs_k3227, 0.002); end
  def test_lever_graphs_b3228; assert_in_epsilon(2050.0, worksheet.lever_graphs_b3228, 0.002); end
  def test_lever_graphs_c3228; assert_in_epsilon(2.0, worksheet.lever_graphs_c3228, 0.002); end
  def test_lever_graphs_d3228; assert_equal("2050: Level 2", worksheet.lever_graphs_d3228); end
  def test_lever_graphs_e3228; assert_in_delta(0.05500000000000001, worksheet.lever_graphs_e3228, 0.002); end
  def test_lever_graphs_f3228; assert_in_delta(0.264, worksheet.lever_graphs_f3228, 0.002); end
  def test_lever_graphs_g3228; assert_in_delta(0.29700000000000004, worksheet.lever_graphs_g3228, 0.002); end
  def test_lever_graphs_h3228; assert_in_delta(0.05500000000000001, worksheet.lever_graphs_h3228, 0.002); end
  def test_lever_graphs_i3228; assert_in_delta(0.165, worksheet.lever_graphs_i3228, 0.002); end
  def test_lever_graphs_j3228; assert_in_delta(0.14300000000000002, worksheet.lever_graphs_j3228, 0.002); end
  def test_lever_graphs_k3228; assert_in_delta(0.08800000000000001, worksheet.lever_graphs_k3228, 0.002); end
  def test_lever_graphs_b3229; assert_in_epsilon(2050.0, worksheet.lever_graphs_b3229, 0.002); end
  def test_lever_graphs_c3229; assert_in_epsilon(3.0, worksheet.lever_graphs_c3229, 0.002); end
  def test_lever_graphs_d3229; assert_equal("2050: Level 3", worksheet.lever_graphs_d3229); end
  def test_lever_graphs_e3229; assert_in_delta(0.06, worksheet.lever_graphs_e3229, 0.002); end
  def test_lever_graphs_f3229; assert_in_delta(0.27599999999999997, worksheet.lever_graphs_f3229, 0.002); end
  def test_lever_graphs_g3229; assert_in_delta(0.3105, worksheet.lever_graphs_g3229, 0.002); end
  def test_lever_graphs_h3229; assert_in_delta(0.06, worksheet.lever_graphs_h3229, 0.002); end
  def test_lever_graphs_i3229; assert_in_delta(0.1725, worksheet.lever_graphs_i3229, 0.002); end
  def test_lever_graphs_j3229; assert_in_delta(0.1495, worksheet.lever_graphs_j3229, 0.002); end
  def test_lever_graphs_k3229; assert_in_delta(0.092, worksheet.lever_graphs_k3229, 0.002); end
  def test_lever_graphs_b3230; assert_in_epsilon(2050.0, worksheet.lever_graphs_b3230, 0.002); end
  def test_lever_graphs_c3230; assert_in_epsilon(4.0, worksheet.lever_graphs_c3230, 0.002); end
  def test_lever_graphs_d3230; assert_equal("2050: Level 4", worksheet.lever_graphs_d3230); end
  def test_lever_graphs_e3230; assert_in_delta(0.06999999999999999, worksheet.lever_graphs_e3230, 0.002); end
  def test_lever_graphs_f3230; assert_in_delta(0.288, worksheet.lever_graphs_f3230, 0.002); end
  def test_lever_graphs_g3230; assert_in_delta(0.324, worksheet.lever_graphs_g3230, 0.002); end
  def test_lever_graphs_h3230; assert_in_delta(0.06999999999999999, worksheet.lever_graphs_h3230, 0.002); end
  def test_lever_graphs_i3230; assert_in_delta(0.18, worksheet.lever_graphs_i3230, 0.002); end
  def test_lever_graphs_j3230; assert_in_delta(0.156, worksheet.lever_graphs_j3230, 0.002); end
  def test_lever_graphs_k3230; assert_in_delta(0.096, worksheet.lever_graphs_k3230, 0.002); end
  def test_lever_graphs_c3195; assert_equal("1975", worksheet.lever_graphs_c3195); end
  def test_lever_graphs_d3195; assert_equal("1980", worksheet.lever_graphs_d3195); end
  def test_lever_graphs_e3195; assert_equal("1985", worksheet.lever_graphs_e3195); end
  def test_lever_graphs_f3195; assert_equal("1990", worksheet.lever_graphs_f3195); end
  def test_lever_graphs_g3195; assert_equal("1995", worksheet.lever_graphs_g3195); end
  def test_lever_graphs_h3195; assert_equal("2000", worksheet.lever_graphs_h3195); end
  def test_lever_graphs_i3195; assert_equal("2005", worksheet.lever_graphs_i3195); end
  def test_lever_graphs_j3195; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3195, 0.002); end
  def test_lever_graphs_k3195; assert_equal("2011", worksheet.lever_graphs_k3195); end
  def test_lever_graphs_l3195; assert_equal("2015", worksheet.lever_graphs_l3195); end
  def test_lever_graphs_m3195; assert_equal("2020", worksheet.lever_graphs_m3195); end
  def test_lever_graphs_n3195; assert_equal("2025", worksheet.lever_graphs_n3195); end
  def test_lever_graphs_o3195; assert_equal("2030", worksheet.lever_graphs_o3195); end
  def test_lever_graphs_p3195; assert_equal("2035", worksheet.lever_graphs_p3195); end
  def test_lever_graphs_q3195; assert_equal("2040", worksheet.lever_graphs_q3195); end
  def test_lever_graphs_r3195; assert_equal("2045", worksheet.lever_graphs_r3195); end
  def test_lever_graphs_s3195; assert_equal("2050", worksheet.lever_graphs_s3195); end
  def test_lever_graphs_b3196; assert_equal("Historic data", worksheet.lever_graphs_b3196); end
  def test_lever_graphs_b3197; assert_in_delta(1.0, worksheet.lever_graphs_b3197, 0.002); end
  def test_lever_graphs_k3197; assert_in_delta(0.05, worksheet.lever_graphs_k3197, 0.002); end
  def test_lever_graphs_l3197; assert_in_delta(0.051025641025641034, worksheet.lever_graphs_l3197, 0.002); end
  def test_lever_graphs_m3197; assert_in_delta(0.05123626373626374, worksheet.lever_graphs_m3197, 0.002); end
  def test_lever_graphs_n3197; assert_in_delta(0.051446886446886456, worksheet.lever_graphs_n3197, 0.002); end
  def test_lever_graphs_o3197; assert_in_delta(0.05165750915750916, worksheet.lever_graphs_o3197, 0.002); end
  def test_lever_graphs_p3197; assert_in_delta(0.05186813186813187, worksheet.lever_graphs_p3197, 0.002); end
  def test_lever_graphs_q3197; assert_in_delta(0.052078754578754584, worksheet.lever_graphs_q3197, 0.002); end
  def test_lever_graphs_r3197; assert_in_delta(0.05228937728937729, worksheet.lever_graphs_r3197, 0.002); end
  def test_lever_graphs_s3197; assert_in_delta(0.052500000000000005, worksheet.lever_graphs_s3197, 0.002); end
  def test_lever_graphs_b3198; assert_in_epsilon(2.0, worksheet.lever_graphs_b3198, 0.002); end
  def test_lever_graphs_k3198; assert_in_delta(0.05, worksheet.lever_graphs_k3198, 0.002); end
  def test_lever_graphs_l3198; assert_in_delta(0.051025641025641034, worksheet.lever_graphs_l3198, 0.002); end
  def test_lever_graphs_m3198; assert_in_delta(0.051593406593406596, worksheet.lever_graphs_m3198, 0.002); end
  def test_lever_graphs_n3198; assert_in_delta(0.05216117216117217, worksheet.lever_graphs_n3198, 0.002); end
  def test_lever_graphs_o3198; assert_in_delta(0.05272893772893773, worksheet.lever_graphs_o3198, 0.002); end
  def test_lever_graphs_p3198; assert_in_delta(0.0532967032967033, worksheet.lever_graphs_p3198, 0.002); end
  def test_lever_graphs_q3198; assert_in_delta(0.05386446886446887, worksheet.lever_graphs_q3198, 0.002); end
  def test_lever_graphs_r3198; assert_in_delta(0.05443223443223444, worksheet.lever_graphs_r3198, 0.002); end
  def test_lever_graphs_s3198; assert_in_delta(0.05500000000000001, worksheet.lever_graphs_s3198, 0.002); end
  def test_lever_graphs_b3199; assert_in_epsilon(3.0, worksheet.lever_graphs_b3199, 0.002); end
  def test_lever_graphs_k3199; assert_in_delta(0.05, worksheet.lever_graphs_k3199, 0.002); end
  def test_lever_graphs_l3199; assert_in_delta(0.051025641025641034, worksheet.lever_graphs_l3199, 0.002); end
  def test_lever_graphs_m3199; assert_in_delta(0.05230769230769231, worksheet.lever_graphs_m3199, 0.002); end
  def test_lever_graphs_n3199; assert_in_delta(0.053589743589743596, worksheet.lever_graphs_n3199, 0.002); end
  def test_lever_graphs_o3199; assert_in_delta(0.054871794871794874, worksheet.lever_graphs_o3199, 0.002); end
  def test_lever_graphs_p3199; assert_in_delta(0.05615384615384615, worksheet.lever_graphs_p3199, 0.002); end
  def test_lever_graphs_q3199; assert_in_delta(0.057435897435897436, worksheet.lever_graphs_q3199, 0.002); end
  def test_lever_graphs_r3199; assert_in_delta(0.05871794871794871, worksheet.lever_graphs_r3199, 0.002); end
  def test_lever_graphs_s3199; assert_in_delta(0.06, worksheet.lever_graphs_s3199, 0.002); end
  def test_lever_graphs_b3200; assert_in_epsilon(4.0, worksheet.lever_graphs_b3200, 0.002); end
  def test_lever_graphs_k3200; assert_in_delta(0.05, worksheet.lever_graphs_k3200, 0.002); end
  def test_lever_graphs_l3200; assert_in_delta(0.051025641025641034, worksheet.lever_graphs_l3200, 0.002); end
  def test_lever_graphs_m3200; assert_in_delta(0.05373626373626374, worksheet.lever_graphs_m3200, 0.002); end
  def test_lever_graphs_n3200; assert_in_delta(0.05644688644688645, worksheet.lever_graphs_n3200, 0.002); end
  def test_lever_graphs_o3200; assert_in_delta(0.059157509157509156, worksheet.lever_graphs_o3200, 0.002); end
  def test_lever_graphs_p3200; assert_in_delta(0.061868131868131865, worksheet.lever_graphs_p3200, 0.002); end
  def test_lever_graphs_q3200; assert_in_delta(0.06457875457875457, worksheet.lever_graphs_q3200, 0.002); end
  def test_lever_graphs_r3200; assert_in_delta(0.06728937728937728, worksheet.lever_graphs_r3200, 0.002); end
  def test_lever_graphs_s3200; assert_in_delta(0.06999999999999999, worksheet.lever_graphs_s3200, 0.002); end
  def test_lever_graphs_c3205; assert_equal("1975", worksheet.lever_graphs_c3205); end
  def test_lever_graphs_d3205; assert_equal("1980", worksheet.lever_graphs_d3205); end
  def test_lever_graphs_e3205; assert_equal("1985", worksheet.lever_graphs_e3205); end
  def test_lever_graphs_f3205; assert_equal("1990", worksheet.lever_graphs_f3205); end
  def test_lever_graphs_g3205; assert_equal("1995", worksheet.lever_graphs_g3205); end
  def test_lever_graphs_h3205; assert_equal("2000", worksheet.lever_graphs_h3205); end
  def test_lever_graphs_i3205; assert_equal("2005", worksheet.lever_graphs_i3205); end
  def test_lever_graphs_j3205; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3205, 0.002); end
  def test_lever_graphs_k3205; assert_equal("2011", worksheet.lever_graphs_k3205); end
  def test_lever_graphs_l3205; assert_equal("2015", worksheet.lever_graphs_l3205); end
  def test_lever_graphs_m3205; assert_equal("2020", worksheet.lever_graphs_m3205); end
  def test_lever_graphs_n3205; assert_equal("2025", worksheet.lever_graphs_n3205); end
  def test_lever_graphs_o3205; assert_equal("2030", worksheet.lever_graphs_o3205); end
  def test_lever_graphs_p3205; assert_equal("2035", worksheet.lever_graphs_p3205); end
  def test_lever_graphs_q3205; assert_equal("2040", worksheet.lever_graphs_q3205); end
  def test_lever_graphs_r3205; assert_equal("2045", worksheet.lever_graphs_r3205); end
  def test_lever_graphs_s3205; assert_equal("2050", worksheet.lever_graphs_s3205); end
  def test_lever_graphs_b3206; assert_equal("Historic data", worksheet.lever_graphs_b3206); end
  def test_lever_graphs_b3207; assert_in_delta(1.0, worksheet.lever_graphs_b3207, 0.002); end
  def test_lever_graphs_k3207; assert_in_delta(0.078, worksheet.lever_graphs_k3207, 0.002); end
  def test_lever_graphs_l3207; assert_in_delta(0.07943589743589743, worksheet.lever_graphs_l3207, 0.002); end
  def test_lever_graphs_m3207; assert_in_delta(0.08008791208791208, worksheet.lever_graphs_m3207, 0.002); end
  def test_lever_graphs_n3207; assert_in_delta(0.08073992673992675, worksheet.lever_graphs_n3207, 0.002); end
  def test_lever_graphs_o3207; assert_in_delta(0.08139194139194139, worksheet.lever_graphs_o3207, 0.002); end
  def test_lever_graphs_p3207; assert_in_delta(0.08204395604395603, worksheet.lever_graphs_p3207, 0.002); end
  def test_lever_graphs_q3207; assert_in_delta(0.0826959706959707, worksheet.lever_graphs_q3207, 0.002); end
  def test_lever_graphs_r3207; assert_in_delta(0.08334798534798535, worksheet.lever_graphs_r3207, 0.002); end
  def test_lever_graphs_s3207; assert_in_delta(0.084, worksheet.lever_graphs_s3207, 0.002); end
  def test_lever_graphs_b3208; assert_in_epsilon(2.0, worksheet.lever_graphs_b3208, 0.002); end
  def test_lever_graphs_k3208; assert_in_delta(0.078, worksheet.lever_graphs_k3208, 0.002); end
  def test_lever_graphs_l3208; assert_in_delta(0.07943589743589743, worksheet.lever_graphs_l3208, 0.002); end
  def test_lever_graphs_m3208; assert_in_delta(0.08065934065934065, worksheet.lever_graphs_m3208, 0.002); end
  def test_lever_graphs_n3208; assert_in_delta(0.08188278388278389, worksheet.lever_graphs_n3208, 0.002); end
  def test_lever_graphs_o3208; assert_in_delta(0.0831062271062271, worksheet.lever_graphs_o3208, 0.002); end
  def test_lever_graphs_p3208; assert_in_delta(0.08432967032967033, worksheet.lever_graphs_p3208, 0.002); end
  def test_lever_graphs_q3208; assert_in_delta(0.08555311355311356, worksheet.lever_graphs_q3208, 0.002); end
  def test_lever_graphs_r3208; assert_in_delta(0.08677655677655677, worksheet.lever_graphs_r3208, 0.002); end
  def test_lever_graphs_s3208; assert_in_delta(0.08800000000000001, worksheet.lever_graphs_s3208, 0.002); end
  def test_lever_graphs_b3209; assert_in_epsilon(3.0, worksheet.lever_graphs_b3209, 0.002); end
  def test_lever_graphs_k3209; assert_in_delta(0.078, worksheet.lever_graphs_k3209, 0.002); end
  def test_lever_graphs_l3209; assert_in_delta(0.07943589743589743, worksheet.lever_graphs_l3209, 0.002); end
  def test_lever_graphs_m3209; assert_in_delta(0.08123076923076922, worksheet.lever_graphs_m3209, 0.002); end
  def test_lever_graphs_n3209; assert_in_delta(0.08302564102564103, worksheet.lever_graphs_n3209, 0.002); end
  def test_lever_graphs_o3209; assert_in_delta(0.08482051282051281, worksheet.lever_graphs_o3209, 0.002); end
  def test_lever_graphs_p3209; assert_in_delta(0.08661538461538461, worksheet.lever_graphs_p3209, 0.002); end
  def test_lever_graphs_q3209; assert_in_delta(0.0884102564102564, worksheet.lever_graphs_q3209, 0.002); end
  def test_lever_graphs_r3209; assert_in_delta(0.09020512820512819, worksheet.lever_graphs_r3209, 0.002); end
  def test_lever_graphs_s3209; assert_in_delta(0.092, worksheet.lever_graphs_s3209, 0.002); end
  def test_lever_graphs_b3210; assert_in_epsilon(4.0, worksheet.lever_graphs_b3210, 0.002); end
  def test_lever_graphs_k3210; assert_in_delta(0.078, worksheet.lever_graphs_k3210, 0.002); end
  def test_lever_graphs_l3210; assert_in_delta(0.07943589743589743, worksheet.lever_graphs_l3210, 0.002); end
  def test_lever_graphs_m3210; assert_in_delta(0.0818021978021978, worksheet.lever_graphs_m3210, 0.002); end
  def test_lever_graphs_n3210; assert_in_delta(0.08416849816849817, worksheet.lever_graphs_n3210, 0.002); end
  def test_lever_graphs_o3210; assert_in_delta(0.08653479853479853, worksheet.lever_graphs_o3210, 0.002); end
  def test_lever_graphs_p3210; assert_in_delta(0.0889010989010989, worksheet.lever_graphs_p3210, 0.002); end
  def test_lever_graphs_q3210; assert_in_delta(0.09126739926739927, worksheet.lever_graphs_q3210, 0.002); end
  def test_lever_graphs_r3210; assert_in_delta(0.09363369963369964, worksheet.lever_graphs_r3210, 0.002); end
  def test_lever_graphs_s3210; assert_in_delta(0.096, worksheet.lever_graphs_s3210, 0.002); end
  def test_lever_graphs_c3287; assert_equal("1975", worksheet.lever_graphs_c3287); end
  def test_lever_graphs_d3287; assert_equal("1980", worksheet.lever_graphs_d3287); end
  def test_lever_graphs_e3287; assert_equal("1985", worksheet.lever_graphs_e3287); end
  def test_lever_graphs_f3287; assert_equal("1990", worksheet.lever_graphs_f3287); end
  def test_lever_graphs_g3287; assert_equal("1995", worksheet.lever_graphs_g3287); end
  def test_lever_graphs_h3287; assert_equal("2000", worksheet.lever_graphs_h3287); end
  def test_lever_graphs_i3287; assert_equal("2005", worksheet.lever_graphs_i3287); end
  def test_lever_graphs_j3287; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3287, 0.002); end
  def test_lever_graphs_k3287; assert_equal("2011", worksheet.lever_graphs_k3287); end
  def test_lever_graphs_l3287; assert_equal("2015", worksheet.lever_graphs_l3287); end
  def test_lever_graphs_m3287; assert_equal("2020", worksheet.lever_graphs_m3287); end
  def test_lever_graphs_n3287; assert_equal("2025", worksheet.lever_graphs_n3287); end
  def test_lever_graphs_o3287; assert_equal("2030", worksheet.lever_graphs_o3287); end
  def test_lever_graphs_p3287; assert_equal("2035", worksheet.lever_graphs_p3287); end
  def test_lever_graphs_q3287; assert_equal("2040", worksheet.lever_graphs_q3287); end
  def test_lever_graphs_r3287; assert_equal("2045", worksheet.lever_graphs_r3287); end
  def test_lever_graphs_s3287; assert_equal("2050", worksheet.lever_graphs_s3287); end
  def test_lever_graphs_b3288; assert_equal("Historic data", worksheet.lever_graphs_b3288); end
  def test_lever_graphs_b3289; assert_in_delta(1.0, worksheet.lever_graphs_b3289, 0.002); end
  def test_lever_graphs_k3289; assert_in_delta(0.02, worksheet.lever_graphs_k3289, 0.002); end
  def test_lever_graphs_l3289; assert_in_delta(0.0203, worksheet.lever_graphs_l3289, 0.002); end
  def test_lever_graphs_m3289; assert_in_delta(0.020399999999999998, worksheet.lever_graphs_m3289, 0.002); end
  def test_lever_graphs_n3289; assert_in_delta(0.020499999999999997, worksheet.lever_graphs_n3289, 0.002); end
  def test_lever_graphs_o3289; assert_in_delta(0.0206, worksheet.lever_graphs_o3289, 0.002); end
  def test_lever_graphs_p3289; assert_in_delta(0.0207, worksheet.lever_graphs_p3289, 0.002); end
  def test_lever_graphs_q3289; assert_in_delta(0.0208, worksheet.lever_graphs_q3289, 0.002); end
  def test_lever_graphs_r3289; assert_in_delta(0.0209, worksheet.lever_graphs_r3289, 0.002); end
  def test_lever_graphs_s3289; assert_in_delta(0.021, worksheet.lever_graphs_s3289, 0.002); end
  def test_lever_graphs_b3290; assert_in_epsilon(2.0, worksheet.lever_graphs_b3290, 0.002); end
  def test_lever_graphs_k3290; assert_in_delta(0.02, worksheet.lever_graphs_k3290, 0.002); end
  def test_lever_graphs_l3290; assert_in_delta(0.0203, worksheet.lever_graphs_l3290, 0.002); end
  def test_lever_graphs_m3290; assert_in_delta(0.02054285714285714, worksheet.lever_graphs_m3290, 0.002); end
  def test_lever_graphs_n3290; assert_in_delta(0.020785714285714286, worksheet.lever_graphs_n3290, 0.002); end
  def test_lever_graphs_o3290; assert_in_delta(0.021028571428571428, worksheet.lever_graphs_o3290, 0.002); end
  def test_lever_graphs_p3290; assert_in_delta(0.021271428571428573, worksheet.lever_graphs_p3290, 0.002); end
  def test_lever_graphs_q3290; assert_in_delta(0.021514285714285715, worksheet.lever_graphs_q3290, 0.002); end
  def test_lever_graphs_r3290; assert_in_delta(0.021757142857142857, worksheet.lever_graphs_r3290, 0.002); end
  def test_lever_graphs_s3290; assert_in_delta(0.022000000000000002, worksheet.lever_graphs_s3290, 0.002); end
  def test_lever_graphs_b3291; assert_in_epsilon(3.0, worksheet.lever_graphs_b3291, 0.002); end
  def test_lever_graphs_k3291; assert_in_delta(0.02, worksheet.lever_graphs_k3291, 0.002); end
  def test_lever_graphs_l3291; assert_in_delta(0.0203, worksheet.lever_graphs_l3291, 0.002); end
  def test_lever_graphs_m3291; assert_in_delta(0.020828571428571425, worksheet.lever_graphs_m3291, 0.002); end
  def test_lever_graphs_n3291; assert_in_delta(0.021357142857142856, worksheet.lever_graphs_n3291, 0.002); end
  def test_lever_graphs_o3291; assert_in_delta(0.021885714285714286, worksheet.lever_graphs_o3291, 0.002); end
  def test_lever_graphs_p3291; assert_in_delta(0.022414285714285713, worksheet.lever_graphs_p3291, 0.002); end
  def test_lever_graphs_q3291; assert_in_delta(0.022942857142857143, worksheet.lever_graphs_q3291, 0.002); end
  def test_lever_graphs_r3291; assert_in_delta(0.02347142857142857, worksheet.lever_graphs_r3291, 0.002); end
  def test_lever_graphs_s3291; assert_in_delta(0.024, worksheet.lever_graphs_s3291, 0.002); end
  def test_lever_graphs_b3292; assert_in_epsilon(4.0, worksheet.lever_graphs_b3292, 0.002); end
  def test_lever_graphs_k3292; assert_in_delta(0.02, worksheet.lever_graphs_k3292, 0.002); end
  def test_lever_graphs_l3292; assert_in_delta(0.0203, worksheet.lever_graphs_l3292, 0.002); end
  def test_lever_graphs_m3292; assert_in_delta(0.0214, worksheet.lever_graphs_m3292, 0.002); end
  def test_lever_graphs_n3292; assert_in_delta(0.0225, worksheet.lever_graphs_n3292, 0.002); end
  def test_lever_graphs_o3292; assert_in_delta(0.023599999999999996, worksheet.lever_graphs_o3292, 0.002); end
  def test_lever_graphs_p3292; assert_in_delta(0.024699999999999996, worksheet.lever_graphs_p3292, 0.002); end
  def test_lever_graphs_q3292; assert_in_delta(0.025799999999999997, worksheet.lever_graphs_q3292, 0.002); end
  def test_lever_graphs_r3292; assert_in_delta(0.026899999999999997, worksheet.lever_graphs_r3292, 0.002); end
  def test_lever_graphs_s3292; assert_in_delta(0.027999999999999997, worksheet.lever_graphs_s3292, 0.002); end
  def test_lever_graphs_c3298; assert_equal("1975", worksheet.lever_graphs_c3298); end
  def test_lever_graphs_d3298; assert_equal("1980", worksheet.lever_graphs_d3298); end
  def test_lever_graphs_e3298; assert_equal("1985", worksheet.lever_graphs_e3298); end
  def test_lever_graphs_f3298; assert_equal("1990", worksheet.lever_graphs_f3298); end
  def test_lever_graphs_g3298; assert_equal("1995", worksheet.lever_graphs_g3298); end
  def test_lever_graphs_h3298; assert_equal("2000", worksheet.lever_graphs_h3298); end
  def test_lever_graphs_i3298; assert_equal("2005", worksheet.lever_graphs_i3298); end
  def test_lever_graphs_j3298; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3298, 0.002); end
  def test_lever_graphs_k3298; assert_equal("2011", worksheet.lever_graphs_k3298); end
  def test_lever_graphs_l3298; assert_equal("2015", worksheet.lever_graphs_l3298); end
  def test_lever_graphs_m3298; assert_equal("2020", worksheet.lever_graphs_m3298); end
  def test_lever_graphs_n3298; assert_equal("2025", worksheet.lever_graphs_n3298); end
  def test_lever_graphs_o3298; assert_equal("2030", worksheet.lever_graphs_o3298); end
  def test_lever_graphs_p3298; assert_equal("2035", worksheet.lever_graphs_p3298); end
  def test_lever_graphs_q3298; assert_equal("2040", worksheet.lever_graphs_q3298); end
  def test_lever_graphs_r3298; assert_equal("2045", worksheet.lever_graphs_r3298); end
  def test_lever_graphs_s3298; assert_equal("2050", worksheet.lever_graphs_s3298); end
  def test_lever_graphs_b3299; assert_equal("Historic data", worksheet.lever_graphs_b3299); end
  def test_lever_graphs_b3300; assert_in_delta(1.0, worksheet.lever_graphs_b3300, 0.002); end
  def test_lever_graphs_k3300; assert_in_delta(0.02, worksheet.lever_graphs_k3300, 0.002); end
  def test_lever_graphs_l3300; assert_in_delta(0.0203, worksheet.lever_graphs_l3300, 0.002); end
  def test_lever_graphs_m3300; assert_in_delta(0.020399999999999998, worksheet.lever_graphs_m3300, 0.002); end
  def test_lever_graphs_n3300; assert_in_delta(0.020499999999999997, worksheet.lever_graphs_n3300, 0.002); end
  def test_lever_graphs_o3300; assert_in_delta(0.0206, worksheet.lever_graphs_o3300, 0.002); end
  def test_lever_graphs_p3300; assert_in_delta(0.0207, worksheet.lever_graphs_p3300, 0.002); end
  def test_lever_graphs_q3300; assert_in_delta(0.0208, worksheet.lever_graphs_q3300, 0.002); end
  def test_lever_graphs_r3300; assert_in_delta(0.0209, worksheet.lever_graphs_r3300, 0.002); end
  def test_lever_graphs_s3300; assert_in_delta(0.021, worksheet.lever_graphs_s3300, 0.002); end
  def test_lever_graphs_b3301; assert_in_epsilon(2.0, worksheet.lever_graphs_b3301, 0.002); end
  def test_lever_graphs_k3301; assert_in_delta(0.02, worksheet.lever_graphs_k3301, 0.002); end
  def test_lever_graphs_l3301; assert_in_delta(0.0203, worksheet.lever_graphs_l3301, 0.002); end
  def test_lever_graphs_m3301; assert_in_delta(0.02054285714285714, worksheet.lever_graphs_m3301, 0.002); end
  def test_lever_graphs_n3301; assert_in_delta(0.020785714285714286, worksheet.lever_graphs_n3301, 0.002); end
  def test_lever_graphs_o3301; assert_in_delta(0.021028571428571428, worksheet.lever_graphs_o3301, 0.002); end
  def test_lever_graphs_p3301; assert_in_delta(0.021271428571428573, worksheet.lever_graphs_p3301, 0.002); end
  def test_lever_graphs_q3301; assert_in_delta(0.021514285714285715, worksheet.lever_graphs_q3301, 0.002); end
  def test_lever_graphs_r3301; assert_in_delta(0.021757142857142857, worksheet.lever_graphs_r3301, 0.002); end
  def test_lever_graphs_s3301; assert_in_delta(0.022000000000000002, worksheet.lever_graphs_s3301, 0.002); end
  def test_lever_graphs_b3302; assert_in_epsilon(3.0, worksheet.lever_graphs_b3302, 0.002); end
  def test_lever_graphs_k3302; assert_in_delta(0.02, worksheet.lever_graphs_k3302, 0.002); end
  def test_lever_graphs_l3302; assert_in_delta(0.0203, worksheet.lever_graphs_l3302, 0.002); end
  def test_lever_graphs_m3302; assert_in_delta(0.020828571428571425, worksheet.lever_graphs_m3302, 0.002); end
  def test_lever_graphs_n3302; assert_in_delta(0.021357142857142856, worksheet.lever_graphs_n3302, 0.002); end
  def test_lever_graphs_o3302; assert_in_delta(0.021885714285714286, worksheet.lever_graphs_o3302, 0.002); end
  def test_lever_graphs_p3302; assert_in_delta(0.022414285714285713, worksheet.lever_graphs_p3302, 0.002); end
  def test_lever_graphs_q3302; assert_in_delta(0.022942857142857143, worksheet.lever_graphs_q3302, 0.002); end
  def test_lever_graphs_r3302; assert_in_delta(0.02347142857142857, worksheet.lever_graphs_r3302, 0.002); end
  def test_lever_graphs_s3302; assert_in_delta(0.024, worksheet.lever_graphs_s3302, 0.002); end
  def test_lever_graphs_b3303; assert_in_epsilon(4.0, worksheet.lever_graphs_b3303, 0.002); end
  def test_lever_graphs_k3303; assert_in_delta(0.02, worksheet.lever_graphs_k3303, 0.002); end
  def test_lever_graphs_l3303; assert_in_delta(0.0203, worksheet.lever_graphs_l3303, 0.002); end
  def test_lever_graphs_m3303; assert_in_delta(0.0214, worksheet.lever_graphs_m3303, 0.002); end
  def test_lever_graphs_n3303; assert_in_delta(0.0225, worksheet.lever_graphs_n3303, 0.002); end
  def test_lever_graphs_o3303; assert_in_delta(0.023599999999999996, worksheet.lever_graphs_o3303, 0.002); end
  def test_lever_graphs_p3303; assert_in_delta(0.024699999999999996, worksheet.lever_graphs_p3303, 0.002); end
  def test_lever_graphs_q3303; assert_in_delta(0.025799999999999997, worksheet.lever_graphs_q3303, 0.002); end
  def test_lever_graphs_r3303; assert_in_delta(0.026899999999999997, worksheet.lever_graphs_r3303, 0.002); end
  def test_lever_graphs_s3303; assert_in_delta(0.027999999999999997, worksheet.lever_graphs_s3303, 0.002); end
  def test_lever_graphs_c3215; assert_equal("1975", worksheet.lever_graphs_c3215); end
  def test_lever_graphs_d3215; assert_equal("1980", worksheet.lever_graphs_d3215); end
  def test_lever_graphs_e3215; assert_equal("1985", worksheet.lever_graphs_e3215); end
  def test_lever_graphs_f3215; assert_equal("1990", worksheet.lever_graphs_f3215); end
  def test_lever_graphs_g3215; assert_equal("1995", worksheet.lever_graphs_g3215); end
  def test_lever_graphs_h3215; assert_equal("2000", worksheet.lever_graphs_h3215); end
  def test_lever_graphs_i3215; assert_equal("2005", worksheet.lever_graphs_i3215); end
  def test_lever_graphs_j3215; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3215, 0.002); end
  def test_lever_graphs_k3215; assert_equal("2011", worksheet.lever_graphs_k3215); end
  def test_lever_graphs_l3215; assert_equal("2015", worksheet.lever_graphs_l3215); end
  def test_lever_graphs_m3215; assert_equal("2020", worksheet.lever_graphs_m3215); end
  def test_lever_graphs_n3215; assert_equal("2025", worksheet.lever_graphs_n3215); end
  def test_lever_graphs_o3215; assert_equal("2030", worksheet.lever_graphs_o3215); end
  def test_lever_graphs_p3215; assert_equal("2035", worksheet.lever_graphs_p3215); end
  def test_lever_graphs_q3215; assert_equal("2040", worksheet.lever_graphs_q3215); end
  def test_lever_graphs_r3215; assert_equal("2045", worksheet.lever_graphs_r3215); end
  def test_lever_graphs_s3215; assert_equal("2050", worksheet.lever_graphs_s3215); end
  def test_lever_graphs_b3216; assert_equal("Historic data", worksheet.lever_graphs_b3216); end
  def test_lever_graphs_b3217; assert_in_delta(1.0, worksheet.lever_graphs_b3217, 0.002); end
  def test_lever_graphs_k3217; assert_in_delta(0.05, worksheet.lever_graphs_k3217, 0.002); end
  def test_lever_graphs_l3217; assert_in_delta(0.051025641025641034, worksheet.lever_graphs_l3217, 0.002); end
  def test_lever_graphs_m3217; assert_in_delta(0.05123626373626374, worksheet.lever_graphs_m3217, 0.002); end
  def test_lever_graphs_n3217; assert_in_delta(0.051446886446886456, worksheet.lever_graphs_n3217, 0.002); end
  def test_lever_graphs_o3217; assert_in_delta(0.05165750915750916, worksheet.lever_graphs_o3217, 0.002); end
  def test_lever_graphs_p3217; assert_in_delta(0.05186813186813187, worksheet.lever_graphs_p3217, 0.002); end
  def test_lever_graphs_q3217; assert_in_delta(0.052078754578754584, worksheet.lever_graphs_q3217, 0.002); end
  def test_lever_graphs_r3217; assert_in_delta(0.05228937728937729, worksheet.lever_graphs_r3217, 0.002); end
  def test_lever_graphs_s3217; assert_in_delta(0.052500000000000005, worksheet.lever_graphs_s3217, 0.002); end
  def test_lever_graphs_b3218; assert_in_epsilon(2.0, worksheet.lever_graphs_b3218, 0.002); end
  def test_lever_graphs_k3218; assert_in_delta(0.05, worksheet.lever_graphs_k3218, 0.002); end
  def test_lever_graphs_l3218; assert_in_delta(0.051025641025641034, worksheet.lever_graphs_l3218, 0.002); end
  def test_lever_graphs_m3218; assert_in_delta(0.051593406593406596, worksheet.lever_graphs_m3218, 0.002); end
  def test_lever_graphs_n3218; assert_in_delta(0.05216117216117217, worksheet.lever_graphs_n3218, 0.002); end
  def test_lever_graphs_o3218; assert_in_delta(0.05272893772893773, worksheet.lever_graphs_o3218, 0.002); end
  def test_lever_graphs_p3218; assert_in_delta(0.0532967032967033, worksheet.lever_graphs_p3218, 0.002); end
  def test_lever_graphs_q3218; assert_in_delta(0.05386446886446887, worksheet.lever_graphs_q3218, 0.002); end
  def test_lever_graphs_r3218; assert_in_delta(0.05443223443223444, worksheet.lever_graphs_r3218, 0.002); end
  def test_lever_graphs_s3218; assert_in_delta(0.05500000000000001, worksheet.lever_graphs_s3218, 0.002); end
  def test_lever_graphs_b3219; assert_in_epsilon(3.0, worksheet.lever_graphs_b3219, 0.002); end
  def test_lever_graphs_k3219; assert_in_delta(0.05, worksheet.lever_graphs_k3219, 0.002); end
  def test_lever_graphs_l3219; assert_in_delta(0.051025641025641034, worksheet.lever_graphs_l3219, 0.002); end
  def test_lever_graphs_m3219; assert_in_delta(0.05230769230769231, worksheet.lever_graphs_m3219, 0.002); end
  def test_lever_graphs_n3219; assert_in_delta(0.053589743589743596, worksheet.lever_graphs_n3219, 0.002); end
  def test_lever_graphs_o3219; assert_in_delta(0.054871794871794874, worksheet.lever_graphs_o3219, 0.002); end
  def test_lever_graphs_p3219; assert_in_delta(0.05615384615384615, worksheet.lever_graphs_p3219, 0.002); end
  def test_lever_graphs_q3219; assert_in_delta(0.057435897435897436, worksheet.lever_graphs_q3219, 0.002); end
  def test_lever_graphs_r3219; assert_in_delta(0.05871794871794871, worksheet.lever_graphs_r3219, 0.002); end
  def test_lever_graphs_s3219; assert_in_delta(0.06, worksheet.lever_graphs_s3219, 0.002); end
  def test_lever_graphs_b3220; assert_in_epsilon(4.0, worksheet.lever_graphs_b3220, 0.002); end
  def test_lever_graphs_k3220; assert_in_delta(0.05, worksheet.lever_graphs_k3220, 0.002); end
  def test_lever_graphs_l3220; assert_in_delta(0.051025641025641034, worksheet.lever_graphs_l3220, 0.002); end
  def test_lever_graphs_m3220; assert_in_delta(0.05373626373626374, worksheet.lever_graphs_m3220, 0.002); end
  def test_lever_graphs_n3220; assert_in_delta(0.05644688644688645, worksheet.lever_graphs_n3220, 0.002); end
  def test_lever_graphs_o3220; assert_in_delta(0.059157509157509156, worksheet.lever_graphs_o3220, 0.002); end
  def test_lever_graphs_p3220; assert_in_delta(0.061868131868131865, worksheet.lever_graphs_p3220, 0.002); end
  def test_lever_graphs_q3220; assert_in_delta(0.06457875457875457, worksheet.lever_graphs_q3220, 0.002); end
  def test_lever_graphs_r3220; assert_in_delta(0.06728937728937728, worksheet.lever_graphs_r3220, 0.002); end
  def test_lever_graphs_s3220; assert_in_delta(0.06999999999999999, worksheet.lever_graphs_s3220, 0.002); end
  def test_lever_graphs_c3434; assert_equal("1975", worksheet.lever_graphs_c3434); end
  def test_lever_graphs_d3434; assert_equal("1980", worksheet.lever_graphs_d3434); end
  def test_lever_graphs_e3434; assert_equal("1985", worksheet.lever_graphs_e3434); end
  def test_lever_graphs_f3434; assert_equal("1990", worksheet.lever_graphs_f3434); end
  def test_lever_graphs_g3434; assert_equal("1995", worksheet.lever_graphs_g3434); end
  def test_lever_graphs_h3434; assert_equal("2000", worksheet.lever_graphs_h3434); end
  def test_lever_graphs_i3434; assert_equal("2005", worksheet.lever_graphs_i3434); end
  def test_lever_graphs_j3434; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3434, 0.002); end
  def test_lever_graphs_k3434; assert_equal("2011", worksheet.lever_graphs_k3434); end
  def test_lever_graphs_l3434; assert_equal("2015", worksheet.lever_graphs_l3434); end
  def test_lever_graphs_m3434; assert_equal("2020", worksheet.lever_graphs_m3434); end
  def test_lever_graphs_n3434; assert_equal("2025", worksheet.lever_graphs_n3434); end
  def test_lever_graphs_o3434; assert_equal("2030", worksheet.lever_graphs_o3434); end
  def test_lever_graphs_p3434; assert_equal("2035", worksheet.lever_graphs_p3434); end
  def test_lever_graphs_q3434; assert_equal("2040", worksheet.lever_graphs_q3434); end
  def test_lever_graphs_r3434; assert_equal("2045", worksheet.lever_graphs_r3434); end
  def test_lever_graphs_s3434; assert_equal("2050", worksheet.lever_graphs_s3434); end
  def test_lever_graphs_b3435; assert_equal("Historic data", worksheet.lever_graphs_b3435); end
  def test_lever_graphs_b3436; assert_in_delta(1.0, worksheet.lever_graphs_b3436, 0.002); end
  def test_lever_graphs_k3436; assert_in_delta(1.0, worksheet.lever_graphs_k3436, 0.002); end
  def test_lever_graphs_l3436; assert_in_delta(1.0, worksheet.lever_graphs_l3436, 0.002); end
  def test_lever_graphs_m3436; assert_in_delta(1.0, worksheet.lever_graphs_m3436, 0.002); end
  def test_lever_graphs_n3436; assert_in_delta(1.0, worksheet.lever_graphs_n3436, 0.002); end
  def test_lever_graphs_o3436; assert_in_delta(1.0, worksheet.lever_graphs_o3436, 0.002); end
  def test_lever_graphs_p3436; assert_in_delta(1.0, worksheet.lever_graphs_p3436, 0.002); end
  def test_lever_graphs_q3436; assert_in_delta(1.0, worksheet.lever_graphs_q3436, 0.002); end
  def test_lever_graphs_r3436; assert_in_delta(1.0, worksheet.lever_graphs_r3436, 0.002); end
  def test_lever_graphs_s3436; assert_in_delta(1.0, worksheet.lever_graphs_s3436, 0.002); end
  def test_lever_graphs_b3437; assert_in_epsilon(2.0, worksheet.lever_graphs_b3437, 0.002); end
  def test_lever_graphs_k3437; assert_in_delta(1.0, worksheet.lever_graphs_k3437, 0.002); end
  def test_lever_graphs_l3437; assert_in_delta(1.0, worksheet.lever_graphs_l3437, 0.002); end
  def test_lever_graphs_m3437; assert_in_delta(1.0, worksheet.lever_graphs_m3437, 0.002); end
  def test_lever_graphs_n3437; assert_in_delta(1.0, worksheet.lever_graphs_n3437, 0.002); end
  def test_lever_graphs_o3437; assert_in_delta(1.0, worksheet.lever_graphs_o3437, 0.002); end
  def test_lever_graphs_p3437; assert_in_delta(1.0, worksheet.lever_graphs_p3437, 0.002); end
  def test_lever_graphs_q3437; assert_in_delta(1.0, worksheet.lever_graphs_q3437, 0.002); end
  def test_lever_graphs_r3437; assert_in_delta(1.0, worksheet.lever_graphs_r3437, 0.002); end
  def test_lever_graphs_s3437; assert_in_delta(1.0, worksheet.lever_graphs_s3437, 0.002); end
  def test_lever_graphs_b3438; assert_in_epsilon(3.0, worksheet.lever_graphs_b3438, 0.002); end
  def test_lever_graphs_k3438; assert_in_delta(1.0, worksheet.lever_graphs_k3438, 0.002); end
  def test_lever_graphs_l3438; assert_in_delta(1.0, worksheet.lever_graphs_l3438, 0.002); end
  def test_lever_graphs_m3438; assert_in_delta(1.0, worksheet.lever_graphs_m3438, 0.002); end
  def test_lever_graphs_n3438; assert_in_delta(1.0, worksheet.lever_graphs_n3438, 0.002); end
  def test_lever_graphs_o3438; assert_in_delta(1.0, worksheet.lever_graphs_o3438, 0.002); end
  def test_lever_graphs_p3438; assert_in_delta(1.0, worksheet.lever_graphs_p3438, 0.002); end
  def test_lever_graphs_q3438; assert_in_delta(1.0, worksheet.lever_graphs_q3438, 0.002); end
  def test_lever_graphs_r3438; assert_in_delta(1.0, worksheet.lever_graphs_r3438, 0.002); end
  def test_lever_graphs_s3438; assert_in_delta(1.0, worksheet.lever_graphs_s3438, 0.002); end
  def test_lever_graphs_b3439; assert_in_epsilon(4.0, worksheet.lever_graphs_b3439, 0.002); end
  def test_lever_graphs_k3439; assert_in_delta(1.0, worksheet.lever_graphs_k3439, 0.002); end
  def test_lever_graphs_l3439; assert_in_delta(1.0, worksheet.lever_graphs_l3439, 0.002); end
  def test_lever_graphs_m3439; assert_in_delta(1.0, worksheet.lever_graphs_m3439, 0.002); end
  def test_lever_graphs_n3439; assert_in_delta(1.0, worksheet.lever_graphs_n3439, 0.002); end
  def test_lever_graphs_o3439; assert_in_delta(1.0, worksheet.lever_graphs_o3439, 0.002); end
  def test_lever_graphs_p3439; assert_in_delta(1.0, worksheet.lever_graphs_p3439, 0.002); end
  def test_lever_graphs_q3439; assert_in_delta(1.0, worksheet.lever_graphs_q3439, 0.002); end
  def test_lever_graphs_r3439; assert_in_delta(1.0, worksheet.lever_graphs_r3439, 0.002); end
  def test_lever_graphs_s3439; assert_in_delta(1.0, worksheet.lever_graphs_s3439, 0.002); end
  def test_lever_graphs_d3455; assert_equal("Title", worksheet.lever_graphs_d3455); end
  def test_lever_graphs_e3455; assert_equal("Food crops", worksheet.lever_graphs_e3455); end
  def test_lever_graphs_f3455; assert_equal("Cows and other bovines ", worksheet.lever_graphs_f3455); end
  def test_lever_graphs_g3455; assert_equal("Chickens and other poultry", worksheet.lever_graphs_g3455); end
  def test_lever_graphs_h3455; assert_equal("Pigs", worksheet.lever_graphs_h3455); end
  def test_lever_graphs_i3455; assert_equal("Sheep and goats", worksheet.lever_graphs_i3455); end
  def test_lever_graphs_j3455; assert_equal("Other animals", worksheet.lever_graphs_j3455); end
  def test_lever_graphs_k3455; assert_equal("Eggs", worksheet.lever_graphs_k3455); end
  def test_lever_graphs_l3455; assert_equal("Milk products", worksheet.lever_graphs_l3455); end
  def test_lever_graphs_d3456; assert_in_epsilon(2011.0, worksheet.lever_graphs_d3456, 0.002); end
  def test_lever_graphs_e3456; assert_in_delta(0.24, worksheet.lever_graphs_e3456, 0.002); end
  def test_lever_graphs_f3456; assert_in_delta(0.19, worksheet.lever_graphs_f3456, 0.002); end
  def test_lever_graphs_g3456; assert_in_delta(0.19, worksheet.lever_graphs_g3456, 0.002); end
  def test_lever_graphs_h3456; assert_in_delta(0.19, worksheet.lever_graphs_h3456, 0.002); end
  def test_lever_graphs_i3456; assert_in_delta(0.19, worksheet.lever_graphs_i3456, 0.002); end
  def test_lever_graphs_j3456; assert_in_delta(0.19, worksheet.lever_graphs_j3456, 0.002); end
  def test_lever_graphs_k3456; assert_in_delta(0.1, worksheet.lever_graphs_k3456, 0.002); end
  def test_lever_graphs_l3456; assert_in_delta(0.18, worksheet.lever_graphs_l3456, 0.002); end
  def test_lever_graphs_d3457; assert_equal("2050: Level 1", worksheet.lever_graphs_d3457); end
  def test_lever_graphs_e3457; assert_in_delta(0.24, worksheet.lever_graphs_e3457, 0.002); end
  def test_lever_graphs_f3457; assert_in_delta(0.19, worksheet.lever_graphs_f3457, 0.002); end
  def test_lever_graphs_g3457; assert_in_delta(0.19, worksheet.lever_graphs_g3457, 0.002); end
  def test_lever_graphs_h3457; assert_in_delta(0.19, worksheet.lever_graphs_h3457, 0.002); end
  def test_lever_graphs_i3457; assert_in_delta(0.19, worksheet.lever_graphs_i3457, 0.002); end
  def test_lever_graphs_j3457; assert_in_delta(0.19, worksheet.lever_graphs_j3457, 0.002); end
  def test_lever_graphs_k3457; assert_in_delta(0.1, worksheet.lever_graphs_k3457, 0.002); end
  def test_lever_graphs_l3457; assert_in_delta(0.18, worksheet.lever_graphs_l3457, 0.002); end
  def test_lever_graphs_d3458; assert_equal("2050: Level 2", worksheet.lever_graphs_d3458); end
  def test_lever_graphs_e3458; assert_in_delta(0.2, worksheet.lever_graphs_e3458, 0.002); end
  def test_lever_graphs_f3458; assert_in_delta(0.15, worksheet.lever_graphs_f3458, 0.002); end
  def test_lever_graphs_g3458; assert_in_delta(0.15, worksheet.lever_graphs_g3458, 0.002); end
  def test_lever_graphs_h3458; assert_in_delta(0.15, worksheet.lever_graphs_h3458, 0.002); end
  def test_lever_graphs_i3458; assert_in_delta(0.15, worksheet.lever_graphs_i3458, 0.002); end
  def test_lever_graphs_j3458; assert_in_delta(0.15, worksheet.lever_graphs_j3458, 0.002); end
  def test_lever_graphs_k3458; assert_in_delta(0.08, worksheet.lever_graphs_k3458, 0.002); end
  def test_lever_graphs_l3458; assert_in_delta(0.15, worksheet.lever_graphs_l3458, 0.002); end
  def test_lever_graphs_d3459; assert_equal("2050: Level 3", worksheet.lever_graphs_d3459); end
  def test_lever_graphs_e3459; assert_in_delta(0.16, worksheet.lever_graphs_e3459, 0.002); end
  def test_lever_graphs_f3459; assert_in_delta(0.1, worksheet.lever_graphs_f3459, 0.002); end
  def test_lever_graphs_g3459; assert_in_delta(0.1, worksheet.lever_graphs_g3459, 0.002); end
  def test_lever_graphs_h3459; assert_in_delta(0.1, worksheet.lever_graphs_h3459, 0.002); end
  def test_lever_graphs_i3459; assert_in_delta(0.1, worksheet.lever_graphs_i3459, 0.002); end
  def test_lever_graphs_j3459; assert_in_delta(0.1, worksheet.lever_graphs_j3459, 0.002); end
  def test_lever_graphs_k3459; assert_in_delta(0.06, worksheet.lever_graphs_k3459, 0.002); end
  def test_lever_graphs_l3459; assert_in_delta(0.1, worksheet.lever_graphs_l3459, 0.002); end
  def test_lever_graphs_d3460; assert_equal("2050: Level 4", worksheet.lever_graphs_d3460); end
  def test_lever_graphs_e3460; assert_in_delta(0.1, worksheet.lever_graphs_e3460, 0.002); end
  def test_lever_graphs_f3460; assert_in_delta(0.05, worksheet.lever_graphs_f3460, 0.002); end
  def test_lever_graphs_g3460; assert_in_delta(0.05, worksheet.lever_graphs_g3460, 0.002); end
  def test_lever_graphs_h3460; assert_in_delta(0.05, worksheet.lever_graphs_h3460, 0.002); end
  def test_lever_graphs_i3460; assert_in_delta(0.05, worksheet.lever_graphs_i3460, 0.002); end
  def test_lever_graphs_j3460; assert_in_delta(0.05, worksheet.lever_graphs_j3460, 0.002); end
  def test_lever_graphs_k3460; assert_in_delta(0.05, worksheet.lever_graphs_k3460, 0.002); end
  def test_lever_graphs_l3460; assert_in_delta(0.05, worksheet.lever_graphs_l3460, 0.002); end
  def test_lever_graphs_c1408; assert_equal("1975", worksheet.lever_graphs_c1408); end
  def test_lever_graphs_d1408; assert_equal("1980", worksheet.lever_graphs_d1408); end
  def test_lever_graphs_e1408; assert_equal("1985", worksheet.lever_graphs_e1408); end
  def test_lever_graphs_f1408; assert_equal("1990", worksheet.lever_graphs_f1408); end
  def test_lever_graphs_g1408; assert_equal("1995", worksheet.lever_graphs_g1408); end
  def test_lever_graphs_h1408; assert_equal("2000", worksheet.lever_graphs_h1408); end
  def test_lever_graphs_i1408; assert_equal("2005", worksheet.lever_graphs_i1408); end
  def test_lever_graphs_j1408; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1408, 0.002); end
  def test_lever_graphs_k1408; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1408, 0.002); end
  def test_lever_graphs_l1408; assert_equal("2015", worksheet.lever_graphs_l1408); end
  def test_lever_graphs_m1408; assert_equal("2020", worksheet.lever_graphs_m1408); end
  def test_lever_graphs_n1408; assert_equal("2025", worksheet.lever_graphs_n1408); end
  def test_lever_graphs_o1408; assert_equal("2030", worksheet.lever_graphs_o1408); end
  def test_lever_graphs_p1408; assert_equal("2035", worksheet.lever_graphs_p1408); end
  def test_lever_graphs_q1408; assert_equal("2040", worksheet.lever_graphs_q1408); end
  def test_lever_graphs_r1408; assert_equal("2045", worksheet.lever_graphs_r1408); end
  def test_lever_graphs_s1408; assert_equal("2050", worksheet.lever_graphs_s1408); end
  def test_lever_graphs_b1409; assert_equal("Historic data", worksheet.lever_graphs_b1409); end
  def test_lever_graphs_b1410; assert_in_delta(1.0, worksheet.lever_graphs_b1410, 0.002); end
  def test_lever_graphs_j1410; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_j1410, 0.002); end
  def test_lever_graphs_k1410; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_k1410, 0.002); end
  def test_lever_graphs_l1410; assert_in_epsilon(21904.848075409296, worksheet.lever_graphs_l1410, 0.002); end
  def test_lever_graphs_m1410; assert_in_epsilon(27297.42601861087, worksheet.lever_graphs_m1410, 0.002); end
  def test_lever_graphs_n1410; assert_in_epsilon(32420.779061712812, worksheet.lever_graphs_n1410, 0.002); end
  def test_lever_graphs_o1410; assert_in_epsilon(36681.13569873427, worksheet.lever_graphs_o1410, 0.002); end
  def test_lever_graphs_p1410; assert_in_epsilon(39516.00073255851, worksheet.lever_graphs_p1410, 0.002); end
  def test_lever_graphs_q1410; assert_in_epsilon(41531.71390967795, worksheet.lever_graphs_q1410, 0.002); end
  def test_lever_graphs_r1410; assert_in_epsilon(42580.44173045606, worksheet.lever_graphs_r1410, 0.002); end
  def test_lever_graphs_s1410; assert_in_epsilon(43655.65124289915, worksheet.lever_graphs_s1410, 0.002); end
  def test_lever_graphs_b1411; assert_in_epsilon(2.0, worksheet.lever_graphs_b1411, 0.002); end
  def test_lever_graphs_j1411; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_j1411, 0.002); end
  def test_lever_graphs_k1411; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_k1411, 0.002); end
  def test_lever_graphs_l1411; assert_in_epsilon(21904.848075409296, worksheet.lever_graphs_l1411, 0.002); end
  def test_lever_graphs_m1411; assert_in_epsilon(27297.42601861087, worksheet.lever_graphs_m1411, 0.002); end
  def test_lever_graphs_n1411; assert_in_epsilon(31645.198278497846, worksheet.lever_graphs_n1411, 0.002); end
  def test_lever_graphs_o1411; assert_in_epsilon(34090.865905175066, worksheet.lever_graphs_o1411, 0.002); end
  def test_lever_graphs_p1411; assert_in_epsilon(35829.842682950424, worksheet.lever_graphs_p1411, 0.002); end
  def test_lever_graphs_q1411; assert_in_epsilon(36734.59111007847, worksheet.lever_graphs_q1411, 0.002); end
  def test_lever_graphs_r1411; assert_in_epsilon(37288.926023155575, worksheet.lever_graphs_r1411, 0.002); end
  def test_lever_graphs_s1411; assert_in_epsilon(37475.7439156073, worksheet.lever_graphs_s1411, 0.002); end
  def test_lever_graphs_b1412; assert_in_epsilon(3.0, worksheet.lever_graphs_b1412, 0.002); end
  def test_lever_graphs_j1412; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_j1412, 0.002); end
  def test_lever_graphs_k1412; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_k1412, 0.002); end
  def test_lever_graphs_l1412; assert_in_epsilon(21904.848075409296, worksheet.lever_graphs_l1412, 0.002); end
  def test_lever_graphs_m1412; assert_in_epsilon(25393.722475302246, worksheet.lever_graphs_m1412, 0.002); end
  def test_lever_graphs_n1412; assert_in_epsilon(28730.666164422204, worksheet.lever_graphs_n1412, 0.002); end
  def test_lever_graphs_o1412; assert_in_epsilon(30196.218884875754, worksheet.lever_graphs_o1412, 0.002); end
  def test_lever_graphs_p1412; assert_in_epsilon(30958.711251449993, worksheet.lever_graphs_p1412, 0.002); end
  def test_lever_graphs_q1412; assert_in_epsilon(31425.886575632197, worksheet.lever_graphs_q1412, 0.002); end
  def test_lever_graphs_r1412; assert_in_epsilon(31741.404993437547, worksheet.lever_graphs_r1412, 0.002); end
  def test_lever_graphs_s1412; assert_in_epsilon(31900.429750027437, worksheet.lever_graphs_s1412, 0.002); end
  def test_lever_graphs_b1413; assert_in_epsilon(4.0, worksheet.lever_graphs_b1413, 0.002); end
  def test_lever_graphs_j1413; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_j1413, 0.002); end
  def test_lever_graphs_k1413; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_k1413, 0.002); end
  def test_lever_graphs_l1413; assert_in_epsilon(21904.848075409296, worksheet.lever_graphs_l1413, 0.002); end
  def test_lever_graphs_m1413; assert_in_epsilon(24783.32501463947, worksheet.lever_graphs_m1413, 0.002); end
  def test_lever_graphs_n1413; assert_in_epsilon(25790.646742233093, worksheet.lever_graphs_n1413, 0.002); end
  def test_lever_graphs_o1413; assert_in_epsilon(26441.89289145925, worksheet.lever_graphs_o1413, 0.002); end
  def test_lever_graphs_p1413; assert_in_epsilon(26840.90820521783, worksheet.lever_graphs_p1413, 0.002); end
  def test_lever_graphs_q1413; assert_in_epsilon(27245.94476795686, worksheet.lever_graphs_q1413, 0.002); end
  def test_lever_graphs_r1413; assert_in_epsilon(27382.44722384001, worksheet.lever_graphs_r1413, 0.002); end
  def test_lever_graphs_s1413; assert_in_epsilon(27382.44722384001, worksheet.lever_graphs_s1413, 0.002); end
  def test_lever_graphs_c1418; assert_equal("1975", worksheet.lever_graphs_c1418); end
  def test_lever_graphs_d1418; assert_equal("1980", worksheet.lever_graphs_d1418); end
  def test_lever_graphs_e1418; assert_equal("1985", worksheet.lever_graphs_e1418); end
  def test_lever_graphs_f1418; assert_equal("1990", worksheet.lever_graphs_f1418); end
  def test_lever_graphs_g1418; assert_equal("1995", worksheet.lever_graphs_g1418); end
  def test_lever_graphs_h1418; assert_equal("2000", worksheet.lever_graphs_h1418); end
  def test_lever_graphs_i1418; assert_equal("2005", worksheet.lever_graphs_i1418); end
  def test_lever_graphs_j1418; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1418, 0.002); end
  def test_lever_graphs_k1418; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1418, 0.002); end
  def test_lever_graphs_l1418; assert_equal("2015", worksheet.lever_graphs_l1418); end
  def test_lever_graphs_m1418; assert_equal("2020", worksheet.lever_graphs_m1418); end
  def test_lever_graphs_n1418; assert_equal("2025", worksheet.lever_graphs_n1418); end
  def test_lever_graphs_o1418; assert_equal("2030", worksheet.lever_graphs_o1418); end
  def test_lever_graphs_p1418; assert_equal("2035", worksheet.lever_graphs_p1418); end
  def test_lever_graphs_q1418; assert_equal("2040", worksheet.lever_graphs_q1418); end
  def test_lever_graphs_r1418; assert_equal("2045", worksheet.lever_graphs_r1418); end
  def test_lever_graphs_s1418; assert_equal("2050", worksheet.lever_graphs_s1418); end
  def test_lever_graphs_b1419; assert_equal("Historic data", worksheet.lever_graphs_b1419); end
  def test_lever_graphs_b1420; assert_in_delta(1.0, worksheet.lever_graphs_b1420, 0.002); end
  def test_lever_graphs_j1420; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_j1420, 0.002); end
  def test_lever_graphs_k1420; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_k1420, 0.002); end
  def test_lever_graphs_l1420; assert_in_epsilon(81174.76742855477, worksheet.lever_graphs_l1420, 0.002); end
  def test_lever_graphs_m1420; assert_in_epsilon(101158.52896265812, worksheet.lever_graphs_m1420, 0.002); end
  def test_lever_graphs_n1420; assert_in_epsilon(120144.59954833178, worksheet.lever_graphs_n1420, 0.002); end
  def test_lever_graphs_o1420; assert_in_epsilon(139280.51942353652, worksheet.lever_graphs_o1420, 0.002); end
  def test_lever_graphs_p1420; assert_in_epsilon(150044.6756276828, worksheet.lever_graphs_p1420, 0.002); end
  def test_lever_graphs_q1420; assert_in_epsilon(157698.46204868914, worksheet.lever_graphs_q1420, 0.002); end
  def test_lever_graphs_r1420; assert_in_epsilon(161680.54583179645, worksheet.lever_graphs_r1420, 0.002); end
  def test_lever_graphs_s1420; assert_in_epsilon(165763.1822204884, worksheet.lever_graphs_s1420, 0.002); end
  def test_lever_graphs_b1421; assert_in_epsilon(2.0, worksheet.lever_graphs_b1421, 0.002); end
  def test_lever_graphs_j1421; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_j1421, 0.002); end
  def test_lever_graphs_k1421; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_k1421, 0.002); end
  def test_lever_graphs_l1421; assert_in_epsilon(81174.76742855477, worksheet.lever_graphs_l1421, 0.002); end
  def test_lever_graphs_m1421; assert_in_epsilon(101158.52896265812, worksheet.lever_graphs_m1421, 0.002); end
  def test_lever_graphs_n1421; assert_in_epsilon(117270.46002073522, worksheet.lever_graphs_n1421, 0.002); end
  def test_lever_graphs_o1421; assert_in_epsilon(132680.76159692148, worksheet.lever_graphs_o1421, 0.002); end
  def test_lever_graphs_p1421; assert_in_epsilon(139448.8138932866, worksheet.lever_graphs_p1421, 0.002); end
  def test_lever_graphs_q1421; assert_in_epsilon(142970.07119132264, worksheet.lever_graphs_q1421, 0.002); end
  def test_lever_graphs_r1421; assert_in_epsilon(146580.24464872066, worksheet.lever_graphs_r1421, 0.002); end
  def test_lever_graphs_s1421; assert_in_epsilon(147314.61314094614, worksheet.lever_graphs_s1421, 0.002); end
  def test_lever_graphs_b1422; assert_in_epsilon(3.0, worksheet.lever_graphs_b1422, 0.002); end
  def test_lever_graphs_j1422; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_j1422, 0.002); end
  def test_lever_graphs_k1422; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_k1422, 0.002); end
  def test_lever_graphs_l1422; assert_in_epsilon(81174.76742855477, worksheet.lever_graphs_l1422, 0.002); end
  def test_lever_graphs_m1422; assert_in_epsilon(94103.8033672556, worksheet.lever_graphs_m1422, 0.002); end
  def test_lever_graphs_n1422; assert_in_epsilon(106469.81599395741, worksheet.lever_graphs_n1422, 0.002); end
  def test_lever_graphs_o1422; assert_in_epsilon(114698.22966680303, worksheet.lever_graphs_o1422, 0.002); end
  def test_lever_graphs_p1422; assert_in_epsilon(120548.99210848795, worksheet.lever_graphs_p1422, 0.002); end
  def test_lever_graphs_q1422; assert_in_epsilon(123593.00522255962, worksheet.lever_graphs_q1422, 0.002); end
  def test_lever_graphs_r1422; assert_in_epsilon(126713.88348230004, worksheet.lever_graphs_r1422, 0.002); end
  def test_lever_graphs_s1422; assert_in_epsilon(127348.72130631881, worksheet.lever_graphs_s1422, 0.002); end
  def test_lever_graphs_b1423; assert_in_epsilon(4.0, worksheet.lever_graphs_b1423, 0.002); end
  def test_lever_graphs_j1423; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_j1423, 0.002); end
  def test_lever_graphs_k1423; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_k1423, 0.002); end
  def test_lever_graphs_l1423; assert_in_epsilon(81174.76742855477, worksheet.lever_graphs_l1423, 0.002); end
  def test_lever_graphs_m1423; assert_in_epsilon(91841.79854815324, worksheet.lever_graphs_m1423, 0.002); end
  def test_lever_graphs_n1423; assert_in_epsilon(95574.72135508827, worksheet.lever_graphs_n1423, 0.002); end
  def test_lever_graphs_o1423; assert_in_epsilon(97988.10283667553, worksheet.lever_graphs_o1423, 0.002); end
  def test_lever_graphs_p1423; assert_in_epsilon(100462.42522494908, worksheet.lever_graphs_p1423, 0.002); end
  def test_lever_graphs_q1423; assert_in_epsilon(100965.74298045268, worksheet.lever_graphs_q1423, 0.002); end
  def test_lever_graphs_r1423; assert_in_epsilon(101471.58236294704, worksheet.lever_graphs_r1423, 0.002); end
  def test_lever_graphs_s1423; assert_in_epsilon(101979.95600580862, worksheet.lever_graphs_s1423, 0.002); end
  def test_lever_graphs_c1428; assert_equal("1975", worksheet.lever_graphs_c1428); end
  def test_lever_graphs_d1428; assert_equal("1980", worksheet.lever_graphs_d1428); end
  def test_lever_graphs_e1428; assert_equal("1985", worksheet.lever_graphs_e1428); end
  def test_lever_graphs_f1428; assert_equal("1990", worksheet.lever_graphs_f1428); end
  def test_lever_graphs_g1428; assert_equal("1995", worksheet.lever_graphs_g1428); end
  def test_lever_graphs_h1428; assert_equal("2000", worksheet.lever_graphs_h1428); end
  def test_lever_graphs_i1428; assert_equal("2005", worksheet.lever_graphs_i1428); end
  def test_lever_graphs_j1428; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1428, 0.002); end
  def test_lever_graphs_k1428; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1428, 0.002); end
  def test_lever_graphs_l1428; assert_equal("2015", worksheet.lever_graphs_l1428); end
  def test_lever_graphs_m1428; assert_equal("2020", worksheet.lever_graphs_m1428); end
  def test_lever_graphs_n1428; assert_equal("2025", worksheet.lever_graphs_n1428); end
  def test_lever_graphs_o1428; assert_equal("2030", worksheet.lever_graphs_o1428); end
  def test_lever_graphs_p1428; assert_equal("2035", worksheet.lever_graphs_p1428); end
  def test_lever_graphs_q1428; assert_equal("2040", worksheet.lever_graphs_q1428); end
  def test_lever_graphs_r1428; assert_equal("2045", worksheet.lever_graphs_r1428); end
  def test_lever_graphs_s1428; assert_equal("2050", worksheet.lever_graphs_s1428); end
  def test_lever_graphs_b1429; assert_equal("Historic data", worksheet.lever_graphs_b1429); end
  def test_lever_graphs_b1430; assert_in_delta(1.0, worksheet.lever_graphs_b1430, 0.002); end
  def test_lever_graphs_j1430; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_j1430, 0.002); end
  def test_lever_graphs_k1430; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_k1430, 0.002); end
  def test_lever_graphs_l1430; assert_in_epsilon(103079.61550396407, worksheet.lever_graphs_l1430, 0.002); end
  def test_lever_graphs_m1430; assert_in_epsilon(128455.954981269, worksheet.lever_graphs_m1430, 0.002); end
  def test_lever_graphs_n1430; assert_in_epsilon(152565.3786100446, worksheet.lever_graphs_n1430, 0.002); end
  def test_lever_graphs_o1430; assert_in_epsilon(175961.6551222708, worksheet.lever_graphs_o1430, 0.002); end
  def test_lever_graphs_p1430; assert_in_epsilon(189560.6763602413, worksheet.lever_graphs_p1430, 0.002); end
  def test_lever_graphs_q1430; assert_in_epsilon(199230.1759583671, worksheet.lever_graphs_q1430, 0.002); end
  def test_lever_graphs_r1430; assert_in_epsilon(204260.9875622525, worksheet.lever_graphs_r1430, 0.002); end
  def test_lever_graphs_s1430; assert_in_epsilon(209418.83346338756, worksheet.lever_graphs_s1430, 0.002); end
  def test_lever_graphs_b1431; assert_in_epsilon(2.0, worksheet.lever_graphs_b1431, 0.002); end
  def test_lever_graphs_j1431; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_j1431, 0.002); end
  def test_lever_graphs_k1431; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_k1431, 0.002); end
  def test_lever_graphs_l1431; assert_in_epsilon(103079.61550396407, worksheet.lever_graphs_l1431, 0.002); end
  def test_lever_graphs_m1431; assert_in_epsilon(128455.954981269, worksheet.lever_graphs_m1431, 0.002); end
  def test_lever_graphs_n1431; assert_in_epsilon(148915.65829923307, worksheet.lever_graphs_n1431, 0.002); end
  def test_lever_graphs_o1431; assert_in_epsilon(166771.62750209655, worksheet.lever_graphs_o1431, 0.002); end
  def test_lever_graphs_p1431; assert_in_epsilon(175278.65657623703, worksheet.lever_graphs_p1431, 0.002); end
  def test_lever_graphs_q1431; assert_in_epsilon(179704.6623014011, worksheet.lever_graphs_q1431, 0.002); end
  def test_lever_graphs_r1431; assert_in_epsilon(183869.17067187623, worksheet.lever_graphs_r1431, 0.002); end
  def test_lever_graphs_s1431; assert_in_epsilon(184790.35705655345, worksheet.lever_graphs_s1431, 0.002); end
  def test_lever_graphs_b1432; assert_in_epsilon(3.0, worksheet.lever_graphs_b1432, 0.002); end
  def test_lever_graphs_j1432; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_j1432, 0.002); end
  def test_lever_graphs_k1432; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_k1432, 0.002); end
  def test_lever_graphs_l1432; assert_in_epsilon(103079.61550396407, worksheet.lever_graphs_l1432, 0.002); end
  def test_lever_graphs_m1432; assert_in_epsilon(119497.52584255785, worksheet.lever_graphs_m1432, 0.002); end
  def test_lever_graphs_n1432; assert_in_epsilon(135200.48215837963, worksheet.lever_graphs_n1432, 0.002); end
  def test_lever_graphs_o1432; assert_in_epsilon(144894.4485516788, worksheet.lever_graphs_o1432, 0.002); end
  def test_lever_graphs_p1432; assert_in_epsilon(151507.70335993794, worksheet.lever_graphs_p1432, 0.002); end
  def test_lever_graphs_q1432; assert_in_epsilon(155018.89179819182, worksheet.lever_graphs_q1432, 0.002); end
  def test_lever_graphs_r1432; assert_in_epsilon(158455.2884757376, worksheet.lever_graphs_r1432, 0.002); end
  def test_lever_graphs_s1432; assert_in_epsilon(159249.15105634625, worksheet.lever_graphs_s1432, 0.002); end
  def test_lever_graphs_b1433; assert_in_epsilon(4.0, worksheet.lever_graphs_b1433, 0.002); end
  def test_lever_graphs_j1433; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_j1433, 0.002); end
  def test_lever_graphs_k1433; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_k1433, 0.002); end
  def test_lever_graphs_l1433; assert_in_epsilon(103079.61550396407, worksheet.lever_graphs_l1433, 0.002); end
  def test_lever_graphs_m1433; assert_in_epsilon(116625.12356279271, worksheet.lever_graphs_m1433, 0.002); end
  def test_lever_graphs_n1433; assert_in_epsilon(121365.36809732136, worksheet.lever_graphs_n1433, 0.002); end
  def test_lever_graphs_o1433; assert_in_epsilon(124429.99572813479, worksheet.lever_graphs_o1433, 0.002); end
  def test_lever_graphs_p1433; assert_in_epsilon(127303.33343016691, worksheet.lever_graphs_p1433, 0.002); end
  def test_lever_graphs_q1433; assert_in_epsilon(128211.68774840953, worksheet.lever_graphs_q1433, 0.002); end
  def test_lever_graphs_r1433; assert_in_epsilon(128854.02958678704, worksheet.lever_graphs_r1433, 0.002); end
  def test_lever_graphs_s1433; assert_in_epsilon(129362.40322964863, worksheet.lever_graphs_s1433, 0.002); end
  def test_lever_graphs_c2317; assert_equal("1975", worksheet.lever_graphs_c2317); end
  def test_lever_graphs_d2317; assert_equal("1980", worksheet.lever_graphs_d2317); end
  def test_lever_graphs_e2317; assert_equal("1985", worksheet.lever_graphs_e2317); end
  def test_lever_graphs_f2317; assert_equal("1990", worksheet.lever_graphs_f2317); end
  def test_lever_graphs_g2317; assert_equal("1995", worksheet.lever_graphs_g2317); end
  def test_lever_graphs_h2317; assert_equal("2000", worksheet.lever_graphs_h2317); end
  def test_lever_graphs_i2317; assert_equal("2005", worksheet.lever_graphs_i2317); end
  def test_lever_graphs_j2317; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2317, 0.002); end
  def test_lever_graphs_k2317; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2317, 0.002); end
  def test_lever_graphs_l2317; assert_equal("2015", worksheet.lever_graphs_l2317); end
  def test_lever_graphs_m2317; assert_equal("2020", worksheet.lever_graphs_m2317); end
  def test_lever_graphs_n2317; assert_equal("2025", worksheet.lever_graphs_n2317); end
  def test_lever_graphs_o2317; assert_equal("2030", worksheet.lever_graphs_o2317); end
  def test_lever_graphs_p2317; assert_equal("2035", worksheet.lever_graphs_p2317); end
  def test_lever_graphs_q2317; assert_equal("2040", worksheet.lever_graphs_q2317); end
  def test_lever_graphs_r2317; assert_equal("2045", worksheet.lever_graphs_r2317); end
  def test_lever_graphs_s2317; assert_equal("2050", worksheet.lever_graphs_s2317); end
  def test_lever_graphs_b2318; assert_equal("Historic data", worksheet.lever_graphs_b2318); end
  def test_lever_graphs_b2319; assert_in_delta(1.0, worksheet.lever_graphs_b2319, 0.002); end
  def test_lever_graphs_k2319; assert_in_epsilon(9.96, worksheet.lever_graphs_k2319, 0.002); end
  def test_lever_graphs_l2319; assert_in_epsilon(9.376571321374435, worksheet.lever_graphs_l2319, 0.002); end
  def test_lever_graphs_m2319; assert_in_epsilon(9.14448948972875, worksheet.lever_graphs_m2319, 0.002); end
  def test_lever_graphs_n2319; assert_in_epsilon(8.918151972794055, worksheet.lever_graphs_n2319, 0.002); end
  def test_lever_graphs_o2319; assert_in_epsilon(8.697416591618794, worksheet.lever_graphs_o2319, 0.002); end
  def test_lever_graphs_p2319; assert_in_epsilon(8.482144686357737, worksheet.lever_graphs_p2319, 0.002); end
  def test_lever_graphs_q2319; assert_in_epsilon(8.272201029169722, worksheet.lever_graphs_q2319, 0.002); end
  def test_lever_graphs_r2319; assert_in_epsilon(8.067453739271263, worksheet.lever_graphs_r2319, 0.002); end
  def test_lever_graphs_s2319; assert_in_epsilon(7.8677742000927084, worksheet.lever_graphs_s2319, 0.002); end
  def test_lever_graphs_b2320; assert_in_epsilon(2.0, worksheet.lever_graphs_b2320, 0.002); end
  def test_lever_graphs_k2320; assert_in_epsilon(9.96, worksheet.lever_graphs_k2320, 0.002); end
  def test_lever_graphs_l2320; assert_in_epsilon(9.376571321374435, worksheet.lever_graphs_l2320, 0.002); end
  def test_lever_graphs_m2320; assert_in_epsilon(8.827318247472038, worksheet.lever_graphs_m2320, 0.002); end
  def test_lever_graphs_n2320; assert_in_epsilon(8.310238867860596, worksheet.lever_graphs_n2320, 0.002); end
  def test_lever_graphs_o2320; assert_in_epsilon(7.823448538368755, worksheet.lever_graphs_o2320, 0.002); end
  def test_lever_graphs_p2320; assert_in_epsilon(7.365173011959558, worksheet.lever_graphs_p2320, 0.002); end
  def test_lever_graphs_q2320; assert_in_epsilon(6.933741971978007, worksheet.lever_graphs_q2320, 0.002); end
  def test_lever_graphs_r2320; assert_in_epsilon(6.52758294420273, worksheet.lever_graphs_r2320, 0.002); end
  def test_lever_graphs_s2320; assert_in_epsilon(6.145215565512471, worksheet.lever_graphs_s2320, 0.002); end
  def test_lever_graphs_b2321; assert_in_epsilon(3.0, worksheet.lever_graphs_b2321, 0.002); end
  def test_lever_graphs_k2321; assert_in_epsilon(9.96, worksheet.lever_graphs_k2321, 0.002); end
  def test_lever_graphs_l2321; assert_in_epsilon(9.376571321374435, worksheet.lever_graphs_l2321, 0.002); end
  def test_lever_graphs_m2321; assert_in_epsilon(8.606204281617035, worksheet.lever_graphs_m2321, 0.002); end
  def test_lever_graphs_n2321; assert_in_epsilon(7.899129607011463, worksheet.lever_graphs_n2321, 0.002); end
  def test_lever_graphs_o2321; assert_in_epsilon(7.250147278242543, worksheet.lever_graphs_o2321, 0.002); end
  def test_lever_graphs_p2321; assert_in_epsilon(6.654484502893848, worksheet.lever_graphs_p2321, 0.002); end
  def test_lever_graphs_q2321; assert_in_epsilon(6.107760615035191, worksheet.lever_graphs_q2321, 0.002); end
  def test_lever_graphs_r2321; assert_in_epsilon(5.605954858614858, worksheet.lever_graphs_r2321, 0.002); end
  def test_lever_graphs_s2321; assert_in_epsilon(5.145376817726912, worksheet.lever_graphs_s2321, 0.002); end
  def test_lever_graphs_b2322; assert_in_epsilon(4.0, worksheet.lever_graphs_b2322, 0.002); end
  def test_lever_graphs_k2322; assert_in_epsilon(9.96, worksheet.lever_graphs_k2322, 0.002); end
  def test_lever_graphs_l2322; assert_in_epsilon(9.376571321374435, worksheet.lever_graphs_l2322, 0.002); end
  def test_lever_graphs_m2322; assert_in_epsilon(8.432522727417279, worksheet.lever_graphs_m2322, 0.002); end
  def test_lever_graphs_n2322; assert_in_epsilon(7.583522495724577, worksheet.lever_graphs_n2322, 0.002); end
  def test_lever_graphs_o2322; assert_in_epsilon(6.820001001144634, worksheet.lever_graphs_o2322, 0.002); end
  def test_lever_graphs_p2322; assert_in_epsilon(6.13335210409628, worksheet.lever_graphs_p2322, 0.002); end
  def test_lever_graphs_q2322; assert_in_epsilon(5.5158361452598985, worksheet.lever_graphs_q2322, 0.002); end
  def test_lever_graphs_r2322; assert_in_epsilon(4.960492706922208, worksheet.lever_graphs_r2322, 0.002); end
  def test_lever_graphs_s2322; assert_in_epsilon(4.461062157652073, worksheet.lever_graphs_s2322, 0.002); end
  def test_lever_graphs_c2328; assert_equal("1975", worksheet.lever_graphs_c2328); end
  def test_lever_graphs_d2328; assert_equal("1980", worksheet.lever_graphs_d2328); end
  def test_lever_graphs_e2328; assert_equal("1985", worksheet.lever_graphs_e2328); end
  def test_lever_graphs_f2328; assert_equal("1990", worksheet.lever_graphs_f2328); end
  def test_lever_graphs_g2328; assert_equal("1995", worksheet.lever_graphs_g2328); end
  def test_lever_graphs_h2328; assert_equal("2000", worksheet.lever_graphs_h2328); end
  def test_lever_graphs_i2328; assert_equal("2005", worksheet.lever_graphs_i2328); end
  def test_lever_graphs_j2328; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2328, 0.002); end
  def test_lever_graphs_k2328; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2328, 0.002); end
  def test_lever_graphs_l2328; assert_equal("2015", worksheet.lever_graphs_l2328); end
  def test_lever_graphs_m2328; assert_equal("2020", worksheet.lever_graphs_m2328); end
  def test_lever_graphs_n2328; assert_equal("2025", worksheet.lever_graphs_n2328); end
  def test_lever_graphs_o2328; assert_equal("2030", worksheet.lever_graphs_o2328); end
  def test_lever_graphs_p2328; assert_equal("2035", worksheet.lever_graphs_p2328); end
  def test_lever_graphs_q2328; assert_equal("2040", worksheet.lever_graphs_q2328); end
  def test_lever_graphs_r2328; assert_equal("2045", worksheet.lever_graphs_r2328); end
  def test_lever_graphs_s2328; assert_equal("2050", worksheet.lever_graphs_s2328); end
  def test_lever_graphs_b2329; assert_equal("Historic data", worksheet.lever_graphs_b2329); end
  def test_lever_graphs_b2330; assert_in_delta(1.0, worksheet.lever_graphs_b2330, 0.002); end
  def test_lever_graphs_k2330; assert_in_epsilon(1200.0000000000002, worksheet.lever_graphs_k2330, 0.002); end
  def test_lever_graphs_l2330; assert_in_epsilon(1147.542097950336, worksheet.lever_graphs_l2330, 0.002); end
  def test_lever_graphs_m2330; assert_in_epsilon(1115.7687787785421, worksheet.lever_graphs_m2330, 0.002); end
  def test_lever_graphs_n2330; assert_in_epsilon(1084.875204073636, worksheet.lever_graphs_n2330, 0.002); end
  def test_lever_graphs_o2330; assert_in_epsilon(1054.8370153377589, worksheet.lever_graphs_o2330, 0.002); end
  def test_lever_graphs_p2330; assert_in_epsilon(1025.6305285148244, worksheet.lever_graphs_p2330, 0.002); end
  def test_lever_graphs_q2330; assert_in_epsilon(997.2327153164736, worksheet.lever_graphs_q2330, 0.002); end
  def test_lever_graphs_r2330; assert_in_epsilon(969.6211850650785, worksheet.lever_graphs_r2330, 0.002); end
  def test_lever_graphs_s2330; assert_in_epsilon(942.77416703948, worksheet.lever_graphs_s2330, 0.002); end
  def test_lever_graphs_b2331; assert_in_epsilon(2.0, worksheet.lever_graphs_b2331, 0.002); end
  def test_lever_graphs_k2331; assert_in_epsilon(1200.0000000000002, worksheet.lever_graphs_k2331, 0.002); end
  def test_lever_graphs_l2331; assert_in_epsilon(1147.542097950336, worksheet.lever_graphs_l2331, 0.002); end
  def test_lever_graphs_m2331; assert_in_epsilon(1097.377388806882, worksheet.lever_graphs_m2331, 0.002); end
  def test_lever_graphs_n2331; assert_in_epsilon(1049.4056258289256, worksheet.lever_graphs_n2331, 0.002); end
  def test_lever_graphs_o2331; assert_in_epsilon(1003.530944553842, worksheet.lever_graphs_o2331, 0.002); end
  def test_lever_graphs_p2331; assert_in_epsilon(959.6616712261649, worksheet.lever_graphs_p2331, 0.002); end
  def test_lever_graphs_q2331; assert_in_epsilon(917.7101396011656, worksheet.lever_graphs_q2331, 0.002); end
  def test_lever_graphs_r2331; assert_in_epsilon(877.5925157568475, worksheet.lever_graphs_r2331, 0.002); end
  def test_lever_graphs_s2331; assert_in_epsilon(839.2286305642716, worksheet.lever_graphs_s2331, 0.002); end
  def test_lever_graphs_b2332; assert_in_epsilon(3.0, worksheet.lever_graphs_b2332, 0.002); end
  def test_lever_graphs_k2332; assert_in_epsilon(1200.0000000000002, worksheet.lever_graphs_k2332, 0.002); end
  def test_lever_graphs_l2332; assert_in_epsilon(1147.542097950336, worksheet.lever_graphs_l2332, 0.002); end
  def test_lever_graphs_m2332; assert_in_epsilon(1057.5544033276155, worksheet.lever_graphs_m2332, 0.002); end
  def test_lever_graphs_n2332; assert_in_epsilon(974.6233432266052, worksheet.lever_graphs_n2332, 0.002); end
  def test_lever_graphs_o2332; assert_in_epsilon(898.195552090139, worksheet.lever_graphs_o2332, 0.002); end
  def test_lever_graphs_p2332; assert_in_epsilon(827.7610580551574, worksheet.lever_graphs_p2332, 0.002); end
  def test_lever_graphs_q2332; assert_in_epsilon(762.8498801158961, worksheet.lever_graphs_q2332, 0.002); end
  def test_lever_graphs_r2332; assert_in_epsilon(703.0288921299555, worksheet.lever_graphs_r2332, 0.002); end
  def test_lever_graphs_s2332; assert_in_epsilon(647.8989327420273, worksheet.lever_graphs_s2332, 0.002); end
  def test_lever_graphs_b2333; assert_in_epsilon(4.0, worksheet.lever_graphs_b2333, 0.002); end
  def test_lever_graphs_k2333; assert_in_epsilon(1200.0000000000002, worksheet.lever_graphs_k2333, 0.002); end
  def test_lever_graphs_l2333; assert_in_epsilon(1147.542097950336, worksheet.lever_graphs_l2333, 0.002); end
  def test_lever_graphs_m2333; assert_in_epsilon(1023.6000541614143, worksheet.lever_graphs_m2333, 0.002); end
  def test_lever_graphs_n2333; assert_in_epsilon(913.0445608493883, worksheet.lever_graphs_n2333, 0.002); end
  def test_lever_graphs_o2333; assert_in_epsilon(814.4297831047122, worksheet.lever_graphs_o2333, 0.002); end
  def test_lever_graphs_p2333; assert_in_epsilon(726.4660456341111, worksheet.lever_graphs_p2333, 0.002); end
  def test_lever_graphs_q2333; assert_in_epsilon(648.0029665017893, worksheet.lever_graphs_q2333, 0.002); end
  def test_lever_graphs_r2333; assert_in_epsilon(578.0144125367809, worksheet.lever_graphs_r2333, 0.002); end
  def test_lever_graphs_s2333; assert_in_epsilon(515.5850796545967, worksheet.lever_graphs_s2333, 0.002); end
  def test_lever_graphs_d2727; assert_equal("Title", worksheet.lever_graphs_d2727); end
  def test_lever_graphs_e2727; assert_equal("Design for Steel Materials demand per product", worksheet.lever_graphs_e2727); end
  def test_lever_graphs_f2727; assert_equal("Design for Chemicals Materials demand per product", worksheet.lever_graphs_f2727); end
  def test_lever_graphs_g2727; assert_equal("Design for Aluminium Materials demand per product", worksheet.lever_graphs_g2727); end
  def test_lever_graphs_h2727; assert_equal("Design for Cement Materials demand per product", worksheet.lever_graphs_h2727); end
  def test_lever_graphs_i2727; assert_equal("Design for Paper Materials demand per product", worksheet.lever_graphs_i2727); end
  def test_lever_graphs_j2727; assert_equal("Design for Timber Materials demand per product", worksheet.lever_graphs_j2727); end
  def test_lever_graphs_k2727; assert_equal("Design for Other industries Materials demand per product", worksheet.lever_graphs_k2727); end
  def test_lever_graphs_d2728; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2728, 0.002); end
  def test_lever_graphs_e2728; assert_in_delta(1.0, worksheet.lever_graphs_e2728, 0.002); end
  def test_lever_graphs_f2728; assert_in_delta(1.0, worksheet.lever_graphs_f2728, 0.002); end
  def test_lever_graphs_g2728; assert_in_delta(1.0, worksheet.lever_graphs_g2728, 0.002); end
  def test_lever_graphs_h2728; assert_in_delta(1.0, worksheet.lever_graphs_h2728, 0.002); end
  def test_lever_graphs_i2728; assert_in_delta(1.0, worksheet.lever_graphs_i2728, 0.002); end
  def test_lever_graphs_j2728; assert_in_delta(1.0, worksheet.lever_graphs_j2728, 0.002); end
  def test_lever_graphs_k2728; assert_in_delta(1.0, worksheet.lever_graphs_k2728, 0.002); end
  def test_lever_graphs_d2729; assert_equal("2050: Level 1", worksheet.lever_graphs_d2729); end
  def test_lever_graphs_e2729; assert_in_delta(1.0, worksheet.lever_graphs_e2729, 0.002); end
  def test_lever_graphs_f2729; assert_in_delta(1.0, worksheet.lever_graphs_f2729, 0.002); end
  def test_lever_graphs_g2729; assert_in_delta(1.0, worksheet.lever_graphs_g2729, 0.002); end
  def test_lever_graphs_h2729; assert_in_delta(1.0, worksheet.lever_graphs_h2729, 0.002); end
  def test_lever_graphs_i2729; assert_in_delta(1.0, worksheet.lever_graphs_i2729, 0.002); end
  def test_lever_graphs_j2729; assert_in_delta(1.0, worksheet.lever_graphs_j2729, 0.002); end
  def test_lever_graphs_k2729; assert_in_delta(1.0, worksheet.lever_graphs_k2729, 0.002); end
  def test_lever_graphs_d2730; assert_equal("2050: Level 2", worksheet.lever_graphs_d2730); end
  def test_lever_graphs_e2730; assert_in_delta(0.9, worksheet.lever_graphs_e2730, 0.002); end
  def test_lever_graphs_f2730; assert_in_delta(0.9, worksheet.lever_graphs_f2730, 0.002); end
  def test_lever_graphs_g2730; assert_in_delta(0.9, worksheet.lever_graphs_g2730, 0.002); end
  def test_lever_graphs_h2730; assert_in_delta(0.9, worksheet.lever_graphs_h2730, 0.002); end
  def test_lever_graphs_i2730; assert_in_delta(0.95, worksheet.lever_graphs_i2730, 0.002); end
  def test_lever_graphs_j2730; assert_in_delta(0.9, worksheet.lever_graphs_j2730, 0.002); end
  def test_lever_graphs_k2730; assert_in_delta(0.9, worksheet.lever_graphs_k2730, 0.002); end
  def test_lever_graphs_d2731; assert_equal("2050: Level 3", worksheet.lever_graphs_d2731); end
  def test_lever_graphs_e2731; assert_in_delta(0.8, worksheet.lever_graphs_e2731, 0.002); end
  def test_lever_graphs_f2731; assert_in_delta(0.8, worksheet.lever_graphs_f2731, 0.002); end
  def test_lever_graphs_g2731; assert_in_delta(0.8, worksheet.lever_graphs_g2731, 0.002); end
  def test_lever_graphs_h2731; assert_in_delta(0.8, worksheet.lever_graphs_h2731, 0.002); end
  def test_lever_graphs_i2731; assert_in_delta(0.9, worksheet.lever_graphs_i2731, 0.002); end
  def test_lever_graphs_j2731; assert_in_delta(0.8, worksheet.lever_graphs_j2731, 0.002); end
  def test_lever_graphs_k2731; assert_in_delta(0.8, worksheet.lever_graphs_k2731, 0.002); end
  def test_lever_graphs_d2732; assert_equal("2050: Level 4", worksheet.lever_graphs_d2732); end
  def test_lever_graphs_e2732; assert_in_delta(0.7, worksheet.lever_graphs_e2732, 0.002); end
  def test_lever_graphs_f2732; assert_in_delta(0.7, worksheet.lever_graphs_f2732, 0.002); end
  def test_lever_graphs_g2732; assert_in_delta(0.7, worksheet.lever_graphs_g2732, 0.002); end
  def test_lever_graphs_h2732; assert_in_delta(0.7, worksheet.lever_graphs_h2732, 0.002); end
  def test_lever_graphs_i2732; assert_in_delta(0.8, worksheet.lever_graphs_i2732, 0.002); end
  def test_lever_graphs_j2732; assert_in_delta(0.7, worksheet.lever_graphs_j2732, 0.002); end
  def test_lever_graphs_k2732; assert_in_delta(0.7, worksheet.lever_graphs_k2732, 0.002); end
  def test_lever_graphs_b2989; assert_equal("Description", worksheet.lever_graphs_b2989); end
  def test_lever_graphs_c2989; assert_equal("1975", worksheet.lever_graphs_c2989); end
  def test_lever_graphs_d2989; assert_equal("1980", worksheet.lever_graphs_d2989); end
  def test_lever_graphs_e2989; assert_equal("1985", worksheet.lever_graphs_e2989); end
  def test_lever_graphs_f2989; assert_equal("1990", worksheet.lever_graphs_f2989); end
  def test_lever_graphs_g2989; assert_equal("1995", worksheet.lever_graphs_g2989); end
  def test_lever_graphs_h2989; assert_equal("2000", worksheet.lever_graphs_h2989); end
  def test_lever_graphs_i2989; assert_equal("2005", worksheet.lever_graphs_i2989); end
  def test_lever_graphs_j2989; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2989, 0.002); end
  def test_lever_graphs_k2989; assert_equal("2011", worksheet.lever_graphs_k2989); end
  def test_lever_graphs_l2989; assert_equal("2015", worksheet.lever_graphs_l2989); end
  def test_lever_graphs_m2989; assert_equal("2020", worksheet.lever_graphs_m2989); end
  def test_lever_graphs_n2989; assert_equal("2025", worksheet.lever_graphs_n2989); end
  def test_lever_graphs_o2989; assert_equal("2030", worksheet.lever_graphs_o2989); end
  def test_lever_graphs_p2989; assert_equal("2035", worksheet.lever_graphs_p2989); end
  def test_lever_graphs_q2989; assert_equal("2040", worksheet.lever_graphs_q2989); end
  def test_lever_graphs_r2989; assert_equal("2045", worksheet.lever_graphs_r2989); end
  def test_lever_graphs_s2989; assert_equal("2050", worksheet.lever_graphs_s2989); end
  def test_lever_graphs_b2990; assert_equal("Historic data", worksheet.lever_graphs_b2990); end
  def test_lever_graphs_b2991; assert_in_delta(1.0, worksheet.lever_graphs_b2991, 0.002); end
  def test_lever_graphs_k2991; assert_in_delta(1.0, worksheet.lever_graphs_k2991, 0.002); end
  def test_lever_graphs_l2991; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2991, 0.002); end
  def test_lever_graphs_m2991; assert_in_delta(0.9912087912087912, worksheet.lever_graphs_m2991, 0.002); end
  def test_lever_graphs_n2991; assert_in_delta(0.9926739926739927, worksheet.lever_graphs_n2991, 0.002); end
  def test_lever_graphs_o2991; assert_in_delta(0.9941391941391942, worksheet.lever_graphs_o2991, 0.002); end
  def test_lever_graphs_p2991; assert_in_delta(0.9956043956043956, worksheet.lever_graphs_p2991, 0.002); end
  def test_lever_graphs_q2991; assert_in_delta(0.9970695970695971, worksheet.lever_graphs_q2991, 0.002); end
  def test_lever_graphs_r2991; assert_in_delta(0.9985347985347985, worksheet.lever_graphs_r2991, 0.002); end
  def test_lever_graphs_s2991; assert_in_delta(1.0, worksheet.lever_graphs_s2991, 0.002); end
  def test_lever_graphs_b2992; assert_in_epsilon(2.0, worksheet.lever_graphs_b2992, 0.002); end
  def test_lever_graphs_k2992; assert_in_delta(1.0, worksheet.lever_graphs_k2992, 0.002); end
  def test_lever_graphs_l2992; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2992, 0.002); end
  def test_lever_graphs_m2992; assert_in_delta(0.976923076923077, worksheet.lever_graphs_m2992, 0.002); end
  def test_lever_graphs_n2992; assert_in_delta(0.9641025641025641, worksheet.lever_graphs_n2992, 0.002); end
  def test_lever_graphs_o2992; assert_in_delta(0.9512820512820513, worksheet.lever_graphs_o2992, 0.002); end
  def test_lever_graphs_p2992; assert_in_delta(0.9384615384615385, worksheet.lever_graphs_p2992, 0.002); end
  def test_lever_graphs_q2992; assert_in_delta(0.9256410256410257, worksheet.lever_graphs_q2992, 0.002); end
  def test_lever_graphs_r2992; assert_in_delta(0.9128205128205128, worksheet.lever_graphs_r2992, 0.002); end
  def test_lever_graphs_s2992; assert_in_delta(0.9, worksheet.lever_graphs_s2992, 0.002); end
  def test_lever_graphs_b2993; assert_in_epsilon(3.0, worksheet.lever_graphs_b2993, 0.002); end
  def test_lever_graphs_k2993; assert_in_delta(1.0, worksheet.lever_graphs_k2993, 0.002); end
  def test_lever_graphs_l2993; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2993, 0.002); end
  def test_lever_graphs_m2993; assert_in_delta(0.9626373626373627, worksheet.lever_graphs_m2993, 0.002); end
  def test_lever_graphs_n2993; assert_in_delta(0.9355311355311355, worksheet.lever_graphs_n2993, 0.002); end
  def test_lever_graphs_o2993; assert_in_delta(0.9084249084249084, worksheet.lever_graphs_o2993, 0.002); end
  def test_lever_graphs_p2993; assert_in_delta(0.8813186813186813, worksheet.lever_graphs_p2993, 0.002); end
  def test_lever_graphs_q2993; assert_in_delta(0.8542124542124543, worksheet.lever_graphs_q2993, 0.002); end
  def test_lever_graphs_r2993; assert_in_delta(0.8271062271062272, worksheet.lever_graphs_r2993, 0.002); end
  def test_lever_graphs_s2993; assert_in_delta(0.8, worksheet.lever_graphs_s2993, 0.002); end
  def test_lever_graphs_b2994; assert_in_epsilon(4.0, worksheet.lever_graphs_b2994, 0.002); end
  def test_lever_graphs_k2994; assert_in_delta(1.0, worksheet.lever_graphs_k2994, 0.002); end
  def test_lever_graphs_l2994; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2994, 0.002); end
  def test_lever_graphs_m2994; assert_in_delta(0.9483516483516484, worksheet.lever_graphs_m2994, 0.002); end
  def test_lever_graphs_n2994; assert_in_delta(0.906959706959707, worksheet.lever_graphs_n2994, 0.002); end
  def test_lever_graphs_o2994; assert_in_delta(0.8655677655677656, worksheet.lever_graphs_o2994, 0.002); end
  def test_lever_graphs_p2994; assert_in_delta(0.8241758241758241, worksheet.lever_graphs_p2994, 0.002); end
  def test_lever_graphs_q2994; assert_in_delta(0.7827838827838828, worksheet.lever_graphs_q2994, 0.002); end
  def test_lever_graphs_r2994; assert_in_delta(0.7413919413919414, worksheet.lever_graphs_r2994, 0.002); end
  def test_lever_graphs_s2994; assert_in_delta(0.7, worksheet.lever_graphs_s2994, 0.002); end
  def test_lever_graphs_c2895; assert_equal("1975", worksheet.lever_graphs_c2895); end
  def test_lever_graphs_d2895; assert_equal("1980", worksheet.lever_graphs_d2895); end
  def test_lever_graphs_e2895; assert_equal("1985", worksheet.lever_graphs_e2895); end
  def test_lever_graphs_f2895; assert_equal("1990", worksheet.lever_graphs_f2895); end
  def test_lever_graphs_g2895; assert_equal("1995", worksheet.lever_graphs_g2895); end
  def test_lever_graphs_h2895; assert_equal("2000", worksheet.lever_graphs_h2895); end
  def test_lever_graphs_i2895; assert_equal("2005", worksheet.lever_graphs_i2895); end
  def test_lever_graphs_j2895; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2895, 0.002); end
  def test_lever_graphs_k2895; assert_equal("2011", worksheet.lever_graphs_k2895); end
  def test_lever_graphs_l2895; assert_equal("2015", worksheet.lever_graphs_l2895); end
  def test_lever_graphs_m2895; assert_equal("2020", worksheet.lever_graphs_m2895); end
  def test_lever_graphs_n2895; assert_equal("2025", worksheet.lever_graphs_n2895); end
  def test_lever_graphs_o2895; assert_equal("2030", worksheet.lever_graphs_o2895); end
  def test_lever_graphs_p2895; assert_equal("2035", worksheet.lever_graphs_p2895); end
  def test_lever_graphs_q2895; assert_equal("2040", worksheet.lever_graphs_q2895); end
  def test_lever_graphs_r2895; assert_equal("2045", worksheet.lever_graphs_r2895); end
  def test_lever_graphs_s2895; assert_equal("2050", worksheet.lever_graphs_s2895); end
  def test_lever_graphs_b2896; assert_equal("Historic data", worksheet.lever_graphs_b2896); end
  def test_lever_graphs_b2897; assert_in_delta(1.0, worksheet.lever_graphs_b2897, 0.002); end
  def test_lever_graphs_k2897; assert_in_delta(1.0, worksheet.lever_graphs_k2897, 0.002); end
  def test_lever_graphs_l2897; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2897, 0.002); end
  def test_lever_graphs_m2897; assert_in_delta(0.9912087912087912, worksheet.lever_graphs_m2897, 0.002); end
  def test_lever_graphs_n2897; assert_in_delta(0.9926739926739927, worksheet.lever_graphs_n2897, 0.002); end
  def test_lever_graphs_o2897; assert_in_delta(0.9941391941391942, worksheet.lever_graphs_o2897, 0.002); end
  def test_lever_graphs_p2897; assert_in_delta(0.9956043956043956, worksheet.lever_graphs_p2897, 0.002); end
  def test_lever_graphs_q2897; assert_in_delta(0.9970695970695971, worksheet.lever_graphs_q2897, 0.002); end
  def test_lever_graphs_r2897; assert_in_delta(0.9985347985347985, worksheet.lever_graphs_r2897, 0.002); end
  def test_lever_graphs_s2897; assert_in_delta(1.0, worksheet.lever_graphs_s2897, 0.002); end
  def test_lever_graphs_b2898; assert_in_epsilon(2.0, worksheet.lever_graphs_b2898, 0.002); end
  def test_lever_graphs_k2898; assert_in_delta(1.0, worksheet.lever_graphs_k2898, 0.002); end
  def test_lever_graphs_l2898; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2898, 0.002); end
  def test_lever_graphs_m2898; assert_in_delta(0.976923076923077, worksheet.lever_graphs_m2898, 0.002); end
  def test_lever_graphs_n2898; assert_in_delta(0.9641025641025641, worksheet.lever_graphs_n2898, 0.002); end
  def test_lever_graphs_o2898; assert_in_delta(0.9512820512820513, worksheet.lever_graphs_o2898, 0.002); end
  def test_lever_graphs_p2898; assert_in_delta(0.9384615384615385, worksheet.lever_graphs_p2898, 0.002); end
  def test_lever_graphs_q2898; assert_in_delta(0.9256410256410257, worksheet.lever_graphs_q2898, 0.002); end
  def test_lever_graphs_r2898; assert_in_delta(0.9128205128205128, worksheet.lever_graphs_r2898, 0.002); end
  def test_lever_graphs_s2898; assert_in_delta(0.9, worksheet.lever_graphs_s2898, 0.002); end
  def test_lever_graphs_b2899; assert_in_epsilon(3.0, worksheet.lever_graphs_b2899, 0.002); end
  def test_lever_graphs_k2899; assert_in_delta(1.0, worksheet.lever_graphs_k2899, 0.002); end
  def test_lever_graphs_l2899; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2899, 0.002); end
  def test_lever_graphs_m2899; assert_in_delta(0.9626373626373627, worksheet.lever_graphs_m2899, 0.002); end
  def test_lever_graphs_n2899; assert_in_delta(0.9355311355311355, worksheet.lever_graphs_n2899, 0.002); end
  def test_lever_graphs_o2899; assert_in_delta(0.9084249084249084, worksheet.lever_graphs_o2899, 0.002); end
  def test_lever_graphs_p2899; assert_in_delta(0.8813186813186813, worksheet.lever_graphs_p2899, 0.002); end
  def test_lever_graphs_q2899; assert_in_delta(0.8542124542124543, worksheet.lever_graphs_q2899, 0.002); end
  def test_lever_graphs_r2899; assert_in_delta(0.8271062271062272, worksheet.lever_graphs_r2899, 0.002); end
  def test_lever_graphs_s2899; assert_in_delta(0.8, worksheet.lever_graphs_s2899, 0.002); end
  def test_lever_graphs_b2900; assert_in_epsilon(4.0, worksheet.lever_graphs_b2900, 0.002); end
  def test_lever_graphs_k2900; assert_in_delta(1.0, worksheet.lever_graphs_k2900, 0.002); end
  def test_lever_graphs_l2900; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2900, 0.002); end
  def test_lever_graphs_m2900; assert_in_delta(0.9483516483516484, worksheet.lever_graphs_m2900, 0.002); end
  def test_lever_graphs_n2900; assert_in_delta(0.906959706959707, worksheet.lever_graphs_n2900, 0.002); end
  def test_lever_graphs_o2900; assert_in_delta(0.8655677655677656, worksheet.lever_graphs_o2900, 0.002); end
  def test_lever_graphs_p2900; assert_in_delta(0.8241758241758241, worksheet.lever_graphs_p2900, 0.002); end
  def test_lever_graphs_q2900; assert_in_delta(0.7827838827838828, worksheet.lever_graphs_q2900, 0.002); end
  def test_lever_graphs_r2900; assert_in_delta(0.7413919413919414, worksheet.lever_graphs_r2900, 0.002); end
  def test_lever_graphs_s2900; assert_in_delta(0.7, worksheet.lever_graphs_s2900, 0.002); end
  def test_lever_graphs_d2783; assert_equal("Title", worksheet.lever_graphs_d2783); end
  def test_lever_graphs_e2783; assert_equal("Steel", worksheet.lever_graphs_e2783); end
  def test_lever_graphs_f2783; assert_equal("Chemicals & petrochemicals", worksheet.lever_graphs_f2783); end
  def test_lever_graphs_g2783; assert_equal("Pulp & paper", worksheet.lever_graphs_g2783); end
  def test_lever_graphs_d2784; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2784, 0.002); end
  def test_lever_graphs_e2784; assert_in_delta(0.0, (worksheet.lever_graphs_e2784||0), 0.002); end
  def test_lever_graphs_f2784; assert_in_delta(0.0, (worksheet.lever_graphs_f2784||0), 0.002); end
  def test_lever_graphs_g2784; assert_in_delta(0.0, (worksheet.lever_graphs_g2784||0), 0.002); end
  def test_lever_graphs_d2785; assert_equal("2050: Level 1", worksheet.lever_graphs_d2785); end
  def test_lever_graphs_e2785; assert_in_delta(0.0, (worksheet.lever_graphs_e2785||0), 0.002); end
  def test_lever_graphs_f2785; assert_in_delta(0.07624999999999993, worksheet.lever_graphs_f2785, 0.002); end
  def test_lever_graphs_g2785; assert_in_delta(0.0, (worksheet.lever_graphs_g2785||0), 0.002); end
  def test_lever_graphs_d2786; assert_equal("2050: Level 2", worksheet.lever_graphs_d2786); end
  def test_lever_graphs_e2786; assert_in_delta(0.1, worksheet.lever_graphs_e2786, 0.002); end
  def test_lever_graphs_f2786; assert_in_delta(0.15500000000000025, worksheet.lever_graphs_f2786, 0.002); end
  def test_lever_graphs_g2786; assert_in_delta(0.09090909090909091, worksheet.lever_graphs_g2786, 0.002); end
  def test_lever_graphs_d2787; assert_equal("2050: Level 3", worksheet.lever_graphs_d2787); end
  def test_lever_graphs_e2787; assert_in_delta(0.25, worksheet.lever_graphs_e2787, 0.002); end
  def test_lever_graphs_f2787; assert_in_delta(0.23624999999999985, worksheet.lever_graphs_f2787, 0.002); end
  def test_lever_graphs_g2787; assert_in_delta(0.2424242424242424, worksheet.lever_graphs_g2787, 0.002); end
  def test_lever_graphs_d2788; assert_equal("2050: Level 4", worksheet.lever_graphs_d2788); end
  def test_lever_graphs_e2788; assert_in_delta(0.5, worksheet.lever_graphs_e2788, 0.002); end
  def test_lever_graphs_f2788; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_f2788, 0.002); end
  def test_lever_graphs_g2788; assert_in_delta(0.3939393939393939, worksheet.lever_graphs_g2788, 0.002); end
  def test_lever_graphs_d2794; assert_equal("Title", worksheet.lever_graphs_d2794); end
  def test_lever_graphs_e2794; assert_equal("Aluminium", worksheet.lever_graphs_e2794); end
  def test_lever_graphs_d2795; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2795, 0.002); end
  def test_lever_graphs_e2795; assert_in_delta(0.0, (worksheet.lever_graphs_e2795||0), 0.002); end
  def test_lever_graphs_d2796; assert_equal("2050: Level 1", worksheet.lever_graphs_d2796); end
  def test_lever_graphs_e2796; assert_in_delta(-0.2857142857142857, worksheet.lever_graphs_e2796, 0.002); end
  def test_lever_graphs_d2797; assert_equal("2050: Level 2", worksheet.lever_graphs_d2797); end
  def test_lever_graphs_e2797; assert_in_delta(-0.2142857142857143, worksheet.lever_graphs_e2797, 0.002); end
  def test_lever_graphs_d2798; assert_equal("2050: Level 3", worksheet.lever_graphs_d2798); end
  def test_lever_graphs_e2798; assert_in_delta(-0.14285714285714282, worksheet.lever_graphs_e2798, 0.002); end
  def test_lever_graphs_d2799; assert_equal("2050: Level 4", worksheet.lever_graphs_d2799); end
  def test_lever_graphs_e2799; assert_in_delta(-0.07142857142857141, worksheet.lever_graphs_e2799, 0.002); end
  def test_lever_graphs_b2809; assert_equal("Year", worksheet.lever_graphs_b2809); end
  def test_lever_graphs_c2809; assert_equal("Level", worksheet.lever_graphs_c2809); end
  def test_lever_graphs_d2809; assert_equal("Title", worksheet.lever_graphs_d2809); end
  def test_lever_graphs_e2809; assert_equal("Steel", worksheet.lever_graphs_e2809); end
  def test_lever_graphs_f2809; assert_equal("Chemicals & petrochemicals", worksheet.lever_graphs_f2809); end
  def test_lever_graphs_g2809; assert_equal("Pulp & paper", worksheet.lever_graphs_g2809); end
  def test_lever_graphs_h2809; assert_equal("Aluminium", worksheet.lever_graphs_h2809); end
  def test_lever_graphs_b2810; assert_in_epsilon(2011.0, worksheet.lever_graphs_b2810, 0.002); end
  def test_lever_graphs_c2810; assert_in_delta(1.0, worksheet.lever_graphs_c2810, 0.002); end
  def test_lever_graphs_d2810; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2810, 0.002); end
  def test_lever_graphs_e2810; assert_in_delta(0.35404374970191255, worksheet.lever_graphs_e2810, 0.002); end
  def test_lever_graphs_f2810; assert_in_delta(0.0, (worksheet.lever_graphs_f2810||0), 0.002); end
  def test_lever_graphs_g2810; assert_in_delta(0.34042230654178207, worksheet.lever_graphs_g2810, 0.002); end
  def test_lever_graphs_h2810; assert_in_delta(0.30000000000000004, worksheet.lever_graphs_h2810, 0.002); end
  def test_lever_graphs_b2811; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2811, 0.002); end
  def test_lever_graphs_c2811; assert_in_delta(1.0, worksheet.lever_graphs_c2811, 0.002); end
  def test_lever_graphs_d2811; assert_equal("2050: Level 1", worksheet.lever_graphs_d2811); end
  def test_lever_graphs_e2811; assert_in_delta(0.35404374970191255, worksheet.lever_graphs_e2811, 0.002); end
  def test_lever_graphs_f2811; assert_in_delta(0.07624999999999993, worksheet.lever_graphs_f2811, 0.002); end
  def test_lever_graphs_g2811; assert_in_delta(0.34042230654178207, worksheet.lever_graphs_g2811, 0.002); end
  def test_lever_graphs_h2811; assert_in_delta(0.10000000000000009, worksheet.lever_graphs_h2811, 0.002); end
  def test_lever_graphs_b2812; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2812, 0.002); end
  def test_lever_graphs_c2812; assert_in_epsilon(2.0, worksheet.lever_graphs_c2812, 0.002); end
  def test_lever_graphs_d2812; assert_equal("2050: Level 2", worksheet.lever_graphs_d2812); end
  def test_lever_graphs_e2812; assert_in_delta(0.43260453731637116, worksheet.lever_graphs_e2812, 0.002); end
  def test_lever_graphs_f2812; assert_in_delta(0.15500000000000025, worksheet.lever_graphs_f2812, 0.002); end
  def test_lever_graphs_g2812; assert_in_delta(0.40038391503798376, worksheet.lever_graphs_g2812, 0.002); end
  def test_lever_graphs_h2812; assert_in_delta(0.1499999999999999, worksheet.lever_graphs_h2812, 0.002); end
  def test_lever_graphs_b2813; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2813, 0.002); end
  def test_lever_graphs_c2813; assert_in_epsilon(3.0, worksheet.lever_graphs_c2813, 0.002); end
  def test_lever_graphs_d2813; assert_equal("2050: Level 3", worksheet.lever_graphs_d2813); end
  def test_lever_graphs_e2813; assert_in_delta(0.5504814615659911, worksheet.lever_graphs_e2813, 0.002); end
  def test_lever_graphs_f2813; assert_in_delta(0.23624999999999985, worksheet.lever_graphs_f2813, 0.002); end
  def test_lever_graphs_g2813; assert_in_delta(0.5003199291983198, worksheet.lever_graphs_g2813, 0.002); end
  def test_lever_graphs_h2813; assert_in_delta(0.20000000000000007, worksheet.lever_graphs_h2813, 0.002); end
  def test_lever_graphs_b2814; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2814, 0.002); end
  def test_lever_graphs_c2814; assert_in_epsilon(4.0, worksheet.lever_graphs_c2814, 0.002); end
  def test_lever_graphs_d2814; assert_equal("2050: Level 4", worksheet.lever_graphs_d2814); end
  def test_lever_graphs_e2814; assert_in_delta(0.7469867477254943, worksheet.lever_graphs_e2814, 0.002); end
  def test_lever_graphs_f2814; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_f2814, 0.002); end
  def test_lever_graphs_g2814; assert_in_delta(0.6002559433586558, worksheet.lever_graphs_g2814, 0.002); end
  def test_lever_graphs_h2814; assert_in_delta(0.25, worksheet.lever_graphs_h2814, 0.002); end
  def test_lever_graphs_d2737; assert_equal("Title", worksheet.lever_graphs_d2737); end
  def test_lever_graphs_e2737; assert_equal("Global Oxygen steel technology", worksheet.lever_graphs_e2737); end
  def test_lever_graphs_f2737; assert_equal("Global Hisarna Oxygen steel technology", worksheet.lever_graphs_f2737); end
  def test_lever_graphs_g2737; assert_equal("Global Electric steel technology", worksheet.lever_graphs_g2737); end
  def test_lever_graphs_h2737; assert_equal("Global DRI Electric steel technology", worksheet.lever_graphs_h2737); end
  def test_lever_graphs_i2737; assert_equal("Global Alumina Aluminium technology", worksheet.lever_graphs_i2737); end
  def test_lever_graphs_j2737; assert_equal("Global Primary Aluminium technology", worksheet.lever_graphs_j2737); end
  def test_lever_graphs_k2737; assert_equal("Global Secondary Aluminium technology", worksheet.lever_graphs_k2737); end
  def test_lever_graphs_l2737; assert_equal("Global Chemicals: High Value Chemicals  technology", worksheet.lever_graphs_l2737); end
  def test_lever_graphs_m2737; assert_equal("Global Chemicals: Ammonia technology", worksheet.lever_graphs_m2737); end
  def test_lever_graphs_n2737; assert_equal("Global Chemicals: Methanol technology", worksheet.lever_graphs_n2737); end
  def test_lever_graphs_o2737; assert_equal("Global Chemicals: Others technology", worksheet.lever_graphs_o2737); end
  def test_lever_graphs_p2737; assert_equal("Global Pulp & paper: Pulp technology", worksheet.lever_graphs_p2737); end
  def test_lever_graphs_q2737; assert_equal("Global Pulp & paper: Virgin technology", worksheet.lever_graphs_q2737); end
  def test_lever_graphs_r2737; assert_equal("Global Pulp & paper: Recycled technology", worksheet.lever_graphs_r2737); end
  def test_lever_graphs_s2737; assert_equal("Global Cement technology", worksheet.lever_graphs_s2737); end
  def test_lever_graphs_t2737; assert_equal("Global Timber technology", worksheet.lever_graphs_t2737); end
  def test_lever_graphs_u2737; assert_equal("Global Other industries technology", worksheet.lever_graphs_u2737); end
  def test_lever_graphs_d2738; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2738, 0.002); end
  def test_lever_graphs_e2738; assert_in_delta(0.0, (worksheet.lever_graphs_e2738||0), 0.002); end
  def test_lever_graphs_f2738; assert_in_delta(0.0, (worksheet.lever_graphs_f2738||0), 0.002); end
  def test_lever_graphs_g2738; assert_in_delta(0.0, (worksheet.lever_graphs_g2738||0), 0.002); end
  def test_lever_graphs_h2738; assert_in_delta(0.0, (worksheet.lever_graphs_h2738||0), 0.002); end
  def test_lever_graphs_i2738; assert_in_delta(0.0, (worksheet.lever_graphs_i2738||0), 0.002); end
  def test_lever_graphs_j2738; assert_in_delta(0.0, (worksheet.lever_graphs_j2738||0), 0.002); end
  def test_lever_graphs_k2738; assert_in_delta(0.0, (worksheet.lever_graphs_k2738||0), 0.002); end
  def test_lever_graphs_l2738; assert_in_delta(0.0, (worksheet.lever_graphs_l2738||0), 0.002); end
  def test_lever_graphs_m2738; assert_in_delta(0.0, (worksheet.lever_graphs_m2738||0), 0.002); end
  def test_lever_graphs_n2738; assert_in_delta(0.0, (worksheet.lever_graphs_n2738||0), 0.002); end
  def test_lever_graphs_o2738; assert_in_delta(0.0, (worksheet.lever_graphs_o2738||0), 0.002); end
  def test_lever_graphs_p2738; assert_in_delta(0.0, (worksheet.lever_graphs_p2738||0), 0.002); end
  def test_lever_graphs_q2738; assert_in_delta(0.0, (worksheet.lever_graphs_q2738||0), 0.002); end
  def test_lever_graphs_r2738; assert_in_delta(0.0, (worksheet.lever_graphs_r2738||0), 0.002); end
  def test_lever_graphs_s2738; assert_in_delta(0.0, (worksheet.lever_graphs_s2738||0), 0.002); end
  def test_lever_graphs_t2738; assert_in_delta(0.0, (worksheet.lever_graphs_t2738||0), 0.002); end
  def test_lever_graphs_u2738; assert_in_delta(0.0, (worksheet.lever_graphs_u2738||0), 0.002); end
  def test_lever_graphs_d2739; assert_equal("2050: Level 1", worksheet.lever_graphs_d2739); end
  def test_lever_graphs_e2739; assert_in_delta(0.0, (worksheet.lever_graphs_e2739||0), 0.002); end
  def test_lever_graphs_f2739; assert_in_delta(0.0, (worksheet.lever_graphs_f2739||0), 0.002); end
  def test_lever_graphs_g2739; assert_in_delta(0.0, (worksheet.lever_graphs_g2739||0), 0.002); end
  def test_lever_graphs_h2739; assert_in_delta(0.0, (worksheet.lever_graphs_h2739||0), 0.002); end
  def test_lever_graphs_i2739; assert_in_delta(0.0, (worksheet.lever_graphs_i2739||0), 0.002); end
  def test_lever_graphs_j2739; assert_in_delta(0.0, (worksheet.lever_graphs_j2739||0), 0.002); end
  def test_lever_graphs_k2739; assert_in_delta(0.0, (worksheet.lever_graphs_k2739||0), 0.002); end
  def test_lever_graphs_l2739; assert_in_delta(0.0, (worksheet.lever_graphs_l2739||0), 0.002); end
  def test_lever_graphs_m2739; assert_in_delta(0.0, (worksheet.lever_graphs_m2739||0), 0.002); end
  def test_lever_graphs_n2739; assert_in_delta(0.0, (worksheet.lever_graphs_n2739||0), 0.002); end
  def test_lever_graphs_o2739; assert_in_delta(0.0, (worksheet.lever_graphs_o2739||0), 0.002); end
  def test_lever_graphs_p2739; assert_in_delta(0.0, (worksheet.lever_graphs_p2739||0), 0.002); end
  def test_lever_graphs_q2739; assert_in_delta(0.0, (worksheet.lever_graphs_q2739||0), 0.002); end
  def test_lever_graphs_r2739; assert_in_delta(0.0, (worksheet.lever_graphs_r2739||0), 0.002); end
  def test_lever_graphs_s2739; assert_in_delta(0.05, worksheet.lever_graphs_s2739, 0.002); end
  def test_lever_graphs_t2739; assert_in_delta(0.0, (worksheet.lever_graphs_t2739||0), 0.002); end
  def test_lever_graphs_u2739; assert_in_delta(0.0, (worksheet.lever_graphs_u2739||0), 0.002); end
  def test_lever_graphs_d2740; assert_equal("2050: Level 2", worksheet.lever_graphs_d2740); end
  def test_lever_graphs_e2740; assert_in_delta(0.05, worksheet.lever_graphs_e2740, 0.002); end
  def test_lever_graphs_f2740; assert_in_delta(0.0, (worksheet.lever_graphs_f2740||0), 0.002); end
  def test_lever_graphs_g2740; assert_in_delta(0.0, (worksheet.lever_graphs_g2740||0), 0.002); end
  def test_lever_graphs_h2740; assert_in_delta(0.0, (worksheet.lever_graphs_h2740||0), 0.002); end
  def test_lever_graphs_i2740; assert_in_delta(0.025, worksheet.lever_graphs_i2740, 0.002); end
  def test_lever_graphs_j2740; assert_in_delta(0.025, worksheet.lever_graphs_j2740, 0.002); end
  def test_lever_graphs_k2740; assert_in_delta(0.025, worksheet.lever_graphs_k2740, 0.002); end
  def test_lever_graphs_l2740; assert_in_delta(0.05, worksheet.lever_graphs_l2740, 0.002); end
  def test_lever_graphs_m2740; assert_in_delta(0.075, worksheet.lever_graphs_m2740, 0.002); end
  def test_lever_graphs_n2740; assert_in_delta(0.075, worksheet.lever_graphs_n2740, 0.002); end
  def test_lever_graphs_o2740; assert_in_delta(0.05, worksheet.lever_graphs_o2740, 0.002); end
  def test_lever_graphs_p2740; assert_in_delta(0.2, worksheet.lever_graphs_p2740, 0.002); end
  def test_lever_graphs_q2740; assert_in_delta(0.2, worksheet.lever_graphs_q2740, 0.002); end
  def test_lever_graphs_r2740; assert_in_delta(0.2, worksheet.lever_graphs_r2740, 0.002); end
  def test_lever_graphs_s2740; assert_in_delta(0.09, worksheet.lever_graphs_s2740, 0.002); end
  def test_lever_graphs_t2740; assert_in_delta(0.2, worksheet.lever_graphs_t2740, 0.002); end
  def test_lever_graphs_u2740; assert_in_delta(0.0, (worksheet.lever_graphs_u2740||0), 0.002); end
  def test_lever_graphs_d2741; assert_equal("2050: Level 3", worksheet.lever_graphs_d2741); end
  def test_lever_graphs_e2741; assert_in_delta(0.07, worksheet.lever_graphs_e2741, 0.002); end
  def test_lever_graphs_f2741; assert_in_delta(0.0, (worksheet.lever_graphs_f2741||0), 0.002); end
  def test_lever_graphs_g2741; assert_in_delta(0.0, (worksheet.lever_graphs_g2741||0), 0.002); end
  def test_lever_graphs_h2741; assert_in_delta(0.0, (worksheet.lever_graphs_h2741||0), 0.002); end
  def test_lever_graphs_i2741; assert_in_delta(0.05, worksheet.lever_graphs_i2741, 0.002); end
  def test_lever_graphs_j2741; assert_in_delta(0.05, worksheet.lever_graphs_j2741, 0.002); end
  def test_lever_graphs_k2741; assert_in_delta(0.05, worksheet.lever_graphs_k2741, 0.002); end
  def test_lever_graphs_l2741; assert_in_delta(0.1, worksheet.lever_graphs_l2741, 0.002); end
  def test_lever_graphs_m2741; assert_in_delta(0.15, worksheet.lever_graphs_m2741, 0.002); end
  def test_lever_graphs_n2741; assert_in_delta(0.15, worksheet.lever_graphs_n2741, 0.002); end
  def test_lever_graphs_o2741; assert_in_delta(0.1, worksheet.lever_graphs_o2741, 0.002); end
  def test_lever_graphs_p2741; assert_in_delta(0.3, worksheet.lever_graphs_p2741, 0.002); end
  def test_lever_graphs_q2741; assert_in_delta(0.3, worksheet.lever_graphs_q2741, 0.002); end
  def test_lever_graphs_r2741; assert_in_delta(0.3, worksheet.lever_graphs_r2741, 0.002); end
  def test_lever_graphs_s2741; assert_in_delta(0.18, worksheet.lever_graphs_s2741, 0.002); end
  def test_lever_graphs_t2741; assert_in_delta(0.3, worksheet.lever_graphs_t2741, 0.002); end
  def test_lever_graphs_u2741; assert_in_delta(0.0, (worksheet.lever_graphs_u2741||0), 0.002); end
  def test_lever_graphs_d2742; assert_equal("2050: Level 4", worksheet.lever_graphs_d2742); end
  def test_lever_graphs_e2742; assert_in_delta(0.1, worksheet.lever_graphs_e2742, 0.002); end
  def test_lever_graphs_f2742; assert_in_delta(0.0, (worksheet.lever_graphs_f2742||0), 0.002); end
  def test_lever_graphs_g2742; assert_in_delta(0.0, (worksheet.lever_graphs_g2742||0), 0.002); end
  def test_lever_graphs_h2742; assert_in_delta(0.0, (worksheet.lever_graphs_h2742||0), 0.002); end
  def test_lever_graphs_i2742; assert_in_delta(0.1, worksheet.lever_graphs_i2742, 0.002); end
  def test_lever_graphs_j2742; assert_in_delta(0.1, worksheet.lever_graphs_j2742, 0.002); end
  def test_lever_graphs_k2742; assert_in_delta(0.1, worksheet.lever_graphs_k2742, 0.002); end
  def test_lever_graphs_l2742; assert_in_delta(0.2, worksheet.lever_graphs_l2742, 0.002); end
  def test_lever_graphs_m2742; assert_in_delta(0.3, worksheet.lever_graphs_m2742, 0.002); end
  def test_lever_graphs_n2742; assert_in_delta(0.3, worksheet.lever_graphs_n2742, 0.002); end
  def test_lever_graphs_o2742; assert_in_delta(0.2, worksheet.lever_graphs_o2742, 0.002); end
  def test_lever_graphs_p2742; assert_in_delta(0.4, worksheet.lever_graphs_p2742, 0.002); end
  def test_lever_graphs_q2742; assert_in_delta(0.4, worksheet.lever_graphs_q2742, 0.002); end
  def test_lever_graphs_r2742; assert_in_delta(0.4, worksheet.lever_graphs_r2742, 0.002); end
  def test_lever_graphs_s2742; assert_in_delta(0.3, worksheet.lever_graphs_s2742, 0.002); end
  def test_lever_graphs_t2742; assert_in_delta(0.4, worksheet.lever_graphs_t2742, 0.002); end
  def test_lever_graphs_u2742; assert_in_delta(0.0, (worksheet.lever_graphs_u2742||0), 0.002); end
  def test_lever_graphs_c2885; assert_equal("1975", worksheet.lever_graphs_c2885); end
  def test_lever_graphs_d2885; assert_equal("1980", worksheet.lever_graphs_d2885); end
  def test_lever_graphs_e2885; assert_equal("1985", worksheet.lever_graphs_e2885); end
  def test_lever_graphs_f2885; assert_equal("1990", worksheet.lever_graphs_f2885); end
  def test_lever_graphs_g2885; assert_equal("1995", worksheet.lever_graphs_g2885); end
  def test_lever_graphs_h2885; assert_equal("2000", worksheet.lever_graphs_h2885); end
  def test_lever_graphs_i2885; assert_equal("2005", worksheet.lever_graphs_i2885); end
  def test_lever_graphs_j2885; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2885, 0.002); end
  def test_lever_graphs_k2885; assert_equal("2011", worksheet.lever_graphs_k2885); end
  def test_lever_graphs_l2885; assert_equal("2015", worksheet.lever_graphs_l2885); end
  def test_lever_graphs_m2885; assert_equal("2020", worksheet.lever_graphs_m2885); end
  def test_lever_graphs_n2885; assert_equal("2025", worksheet.lever_graphs_n2885); end
  def test_lever_graphs_o2885; assert_equal("2030", worksheet.lever_graphs_o2885); end
  def test_lever_graphs_p2885; assert_equal("2035", worksheet.lever_graphs_p2885); end
  def test_lever_graphs_q2885; assert_equal("2040", worksheet.lever_graphs_q2885); end
  def test_lever_graphs_r2885; assert_equal("2045", worksheet.lever_graphs_r2885); end
  def test_lever_graphs_s2885; assert_equal("2050", worksheet.lever_graphs_s2885); end
  def test_lever_graphs_b2886; assert_equal("Historic data", worksheet.lever_graphs_b2886); end
  def test_lever_graphs_b2887; assert_in_delta(1.0, worksheet.lever_graphs_b2887, 0.002); end
  def test_lever_graphs_k2887; assert_in_delta(0.0, (worksheet.lever_graphs_k2887||0), 0.002); end
  def test_lever_graphs_l2887; assert_in_delta(0.002564102564102564, worksheet.lever_graphs_l2887, 0.002); end
  def test_lever_graphs_m2887; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_m2887, 0.002); end
  def test_lever_graphs_n2887; assert_in_delta(0.0018315018315018315, worksheet.lever_graphs_n2887, 0.002); end
  def test_lever_graphs_o2887; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_o2887, 0.002); end
  def test_lever_graphs_p2887; assert_in_delta(0.001098901098901099, worksheet.lever_graphs_p2887, 0.002); end
  def test_lever_graphs_q2887; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_q2887, 0.002); end
  def test_lever_graphs_r2887; assert_in_delta(0.0003663003663003663, worksheet.lever_graphs_r2887, 0.002); end
  def test_lever_graphs_s2887; assert_in_delta(0.0, (worksheet.lever_graphs_s2887||0), 0.002); end
  def test_lever_graphs_b2888; assert_in_epsilon(2.0, worksheet.lever_graphs_b2888, 0.002); end
  def test_lever_graphs_k2888; assert_in_delta(0.0, (worksheet.lever_graphs_k2888||0), 0.002); end
  def test_lever_graphs_l2888; assert_in_delta(0.002564102564102564, worksheet.lever_graphs_l2888, 0.002); end
  def test_lever_graphs_m2888; assert_in_delta(0.0057692307692307696, worksheet.lever_graphs_m2888, 0.002); end
  def test_lever_graphs_n2888; assert_in_delta(0.008974358974358974, worksheet.lever_graphs_n2888, 0.002); end
  def test_lever_graphs_o2888; assert_in_delta(0.01217948717948718, worksheet.lever_graphs_o2888, 0.002); end
  def test_lever_graphs_p2888; assert_in_delta(0.015384615384615384, worksheet.lever_graphs_p2888, 0.002); end
  def test_lever_graphs_q2888; assert_in_delta(0.01858974358974359, worksheet.lever_graphs_q2888, 0.002); end
  def test_lever_graphs_r2888; assert_in_delta(0.021794871794871797, worksheet.lever_graphs_r2888, 0.002); end
  def test_lever_graphs_s2888; assert_in_delta(0.025, worksheet.lever_graphs_s2888, 0.002); end
  def test_lever_graphs_b2889; assert_in_epsilon(3.0, worksheet.lever_graphs_b2889, 0.002); end
  def test_lever_graphs_k2889; assert_in_delta(0.0, (worksheet.lever_graphs_k2889||0), 0.002); end
  def test_lever_graphs_l2889; assert_in_delta(0.002564102564102564, worksheet.lever_graphs_l2889, 0.002); end
  def test_lever_graphs_m2889; assert_in_delta(0.009340659340659342, worksheet.lever_graphs_m2889, 0.002); end
  def test_lever_graphs_n2889; assert_in_delta(0.01611721611721612, worksheet.lever_graphs_n2889, 0.002); end
  def test_lever_graphs_o2889; assert_in_delta(0.0228937728937729, worksheet.lever_graphs_o2889, 0.002); end
  def test_lever_graphs_p2889; assert_in_delta(0.029670329670329676, worksheet.lever_graphs_p2889, 0.002); end
  def test_lever_graphs_q2889; assert_in_delta(0.03644688644688645, worksheet.lever_graphs_q2889, 0.002); end
  def test_lever_graphs_r2889; assert_in_delta(0.04322344322344323, worksheet.lever_graphs_r2889, 0.002); end
  def test_lever_graphs_s2889; assert_in_delta(0.05, worksheet.lever_graphs_s2889, 0.002); end
  def test_lever_graphs_b2890; assert_in_epsilon(4.0, worksheet.lever_graphs_b2890, 0.002); end
  def test_lever_graphs_k2890; assert_in_delta(0.0, (worksheet.lever_graphs_k2890||0), 0.002); end
  def test_lever_graphs_l2890; assert_in_delta(0.002564102564102564, worksheet.lever_graphs_l2890, 0.002); end
  def test_lever_graphs_m2890; assert_in_delta(0.016483516483516484, worksheet.lever_graphs_m2890, 0.002); end
  def test_lever_graphs_n2890; assert_in_delta(0.030402930402930402, worksheet.lever_graphs_n2890, 0.002); end
  def test_lever_graphs_o2890; assert_in_delta(0.04432234432234432, worksheet.lever_graphs_o2890, 0.002); end
  def test_lever_graphs_p2890; assert_in_delta(0.058241758241758236, worksheet.lever_graphs_p2890, 0.002); end
  def test_lever_graphs_q2890; assert_in_delta(0.07216117216117217, worksheet.lever_graphs_q2890, 0.002); end
  def test_lever_graphs_r2890; assert_in_delta(0.08608058608058608, worksheet.lever_graphs_r2890, 0.002); end
  def test_lever_graphs_s2890; assert_in_delta(0.1, worksheet.lever_graphs_s2890, 0.002); end
  def test_lever_graphs_b2979; assert_equal("Description", worksheet.lever_graphs_b2979); end
  def test_lever_graphs_c2979; assert_equal("1975", worksheet.lever_graphs_c2979); end
  def test_lever_graphs_d2979; assert_equal("1980", worksheet.lever_graphs_d2979); end
  def test_lever_graphs_e2979; assert_equal("1985", worksheet.lever_graphs_e2979); end
  def test_lever_graphs_f2979; assert_equal("1990", worksheet.lever_graphs_f2979); end
  def test_lever_graphs_g2979; assert_equal("1995", worksheet.lever_graphs_g2979); end
  def test_lever_graphs_h2979; assert_equal("2000", worksheet.lever_graphs_h2979); end
  def test_lever_graphs_i2979; assert_equal("2005", worksheet.lever_graphs_i2979); end
  def test_lever_graphs_j2979; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2979, 0.002); end
  def test_lever_graphs_k2979; assert_equal("2011", worksheet.lever_graphs_k2979); end
  def test_lever_graphs_l2979; assert_equal("2015", worksheet.lever_graphs_l2979); end
  def test_lever_graphs_m2979; assert_equal("2020", worksheet.lever_graphs_m2979); end
  def test_lever_graphs_n2979; assert_equal("2025", worksheet.lever_graphs_n2979); end
  def test_lever_graphs_o2979; assert_equal("2030", worksheet.lever_graphs_o2979); end
  def test_lever_graphs_p2979; assert_equal("2035", worksheet.lever_graphs_p2979); end
  def test_lever_graphs_q2979; assert_equal("2040", worksheet.lever_graphs_q2979); end
  def test_lever_graphs_r2979; assert_equal("2045", worksheet.lever_graphs_r2979); end
  def test_lever_graphs_s2979; assert_equal("2050", worksheet.lever_graphs_s2979); end
  def test_lever_graphs_b2980; assert_equal("Historic data", worksheet.lever_graphs_b2980); end
  def test_lever_graphs_b2981; assert_in_delta(1.0, worksheet.lever_graphs_b2981, 0.002); end
  def test_lever_graphs_k2981; assert_in_delta(0.0, (worksheet.lever_graphs_k2981||0), 0.002); end
  def test_lever_graphs_l2981; assert_in_delta(0.00923076923076923, worksheet.lever_graphs_l2981, 0.002); end
  def test_lever_graphs_m2981; assert_in_delta(0.015054945054945056, worksheet.lever_graphs_m2981, 0.002); end
  def test_lever_graphs_n2981; assert_in_delta(0.02087912087912088, worksheet.lever_graphs_n2981, 0.002); end
  def test_lever_graphs_o2981; assert_in_delta(0.026703296703296703, worksheet.lever_graphs_o2981, 0.002); end
  def test_lever_graphs_p2981; assert_in_delta(0.032527472527472526, worksheet.lever_graphs_p2981, 0.002); end
  def test_lever_graphs_q2981; assert_in_delta(0.03835164835164835, worksheet.lever_graphs_q2981, 0.002); end
  def test_lever_graphs_r2981; assert_in_delta(0.04417582417582418, worksheet.lever_graphs_r2981, 0.002); end
  def test_lever_graphs_s2981; assert_in_delta(0.05, worksheet.lever_graphs_s2981, 0.002); end
  def test_lever_graphs_b2982; assert_in_epsilon(2.0, worksheet.lever_graphs_b2982, 0.002); end
  def test_lever_graphs_k2982; assert_in_delta(0.0, (worksheet.lever_graphs_k2982||0), 0.002); end
  def test_lever_graphs_l2982; assert_in_delta(0.00923076923076923, worksheet.lever_graphs_l2982, 0.002); end
  def test_lever_graphs_m2982; assert_in_delta(0.02076923076923077, worksheet.lever_graphs_m2982, 0.002); end
  def test_lever_graphs_n2982; assert_in_delta(0.0323076923076923, worksheet.lever_graphs_n2982, 0.002); end
  def test_lever_graphs_o2982; assert_in_delta(0.04384615384615384, worksheet.lever_graphs_o2982, 0.002); end
  def test_lever_graphs_p2982; assert_in_delta(0.05538461538461538, worksheet.lever_graphs_p2982, 0.002); end
  def test_lever_graphs_q2982; assert_in_delta(0.06692307692307692, worksheet.lever_graphs_q2982, 0.002); end
  def test_lever_graphs_r2982; assert_in_delta(0.07846153846153844, worksheet.lever_graphs_r2982, 0.002); end
  def test_lever_graphs_s2982; assert_in_delta(0.09, worksheet.lever_graphs_s2982, 0.002); end
  def test_lever_graphs_b2983; assert_in_epsilon(3.0, worksheet.lever_graphs_b2983, 0.002); end
  def test_lever_graphs_k2983; assert_in_delta(0.0, (worksheet.lever_graphs_k2983||0), 0.002); end
  def test_lever_graphs_l2983; assert_in_delta(0.00923076923076923, worksheet.lever_graphs_l2983, 0.002); end
  def test_lever_graphs_m2983; assert_in_delta(0.03362637362637362, worksheet.lever_graphs_m2983, 0.002); end
  def test_lever_graphs_n2983; assert_in_delta(0.05802197802197801, worksheet.lever_graphs_n2983, 0.002); end
  def test_lever_graphs_o2983; assert_in_delta(0.0824175824175824, worksheet.lever_graphs_o2983, 0.002); end
  def test_lever_graphs_p2983; assert_in_delta(0.1068131868131868, worksheet.lever_graphs_p2983, 0.002); end
  def test_lever_graphs_q2983; assert_in_delta(0.1312087912087912, worksheet.lever_graphs_q2983, 0.002); end
  def test_lever_graphs_r2983; assert_in_delta(0.1556043956043956, worksheet.lever_graphs_r2983, 0.002); end
  def test_lever_graphs_s2983; assert_in_delta(0.18, worksheet.lever_graphs_s2983, 0.002); end
  def test_lever_graphs_b2984; assert_in_epsilon(4.0, worksheet.lever_graphs_b2984, 0.002); end
  def test_lever_graphs_k2984; assert_in_delta(0.0, (worksheet.lever_graphs_k2984||0), 0.002); end
  def test_lever_graphs_l2984; assert_in_delta(0.00923076923076923, worksheet.lever_graphs_l2984, 0.002); end
  def test_lever_graphs_m2984; assert_in_delta(0.05076923076923077, worksheet.lever_graphs_m2984, 0.002); end
  def test_lever_graphs_n2984; assert_in_delta(0.09230769230769231, worksheet.lever_graphs_n2984, 0.002); end
  def test_lever_graphs_o2984; assert_in_delta(0.13384615384615384, worksheet.lever_graphs_o2984, 0.002); end
  def test_lever_graphs_p2984; assert_in_delta(0.1753846153846154, worksheet.lever_graphs_p2984, 0.002); end
  def test_lever_graphs_q2984; assert_in_delta(0.2169230769230769, worksheet.lever_graphs_q2984, 0.002); end
  def test_lever_graphs_r2984; assert_in_delta(0.25846153846153846, worksheet.lever_graphs_r2984, 0.002); end
  def test_lever_graphs_s2984; assert_in_delta(0.3, worksheet.lever_graphs_s2984, 0.002); end
  def test_lever_graphs_c2913; assert_equal("1975", worksheet.lever_graphs_c2913); end
  def test_lever_graphs_d2913; assert_equal("1980", worksheet.lever_graphs_d2913); end
  def test_lever_graphs_e2913; assert_equal("1985", worksheet.lever_graphs_e2913); end
  def test_lever_graphs_f2913; assert_equal("1990", worksheet.lever_graphs_f2913); end
  def test_lever_graphs_g2913; assert_equal("1995", worksheet.lever_graphs_g2913); end
  def test_lever_graphs_h2913; assert_equal("2000", worksheet.lever_graphs_h2913); end
  def test_lever_graphs_i2913; assert_equal("2005", worksheet.lever_graphs_i2913); end
  def test_lever_graphs_j2913; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2913, 0.002); end
  def test_lever_graphs_k2913; assert_equal("2011", worksheet.lever_graphs_k2913); end
  def test_lever_graphs_l2913; assert_equal("2015", worksheet.lever_graphs_l2913); end
  def test_lever_graphs_m2913; assert_equal("2020", worksheet.lever_graphs_m2913); end
  def test_lever_graphs_n2913; assert_equal("2025", worksheet.lever_graphs_n2913); end
  def test_lever_graphs_o2913; assert_equal("2030", worksheet.lever_graphs_o2913); end
  def test_lever_graphs_p2913; assert_equal("2035", worksheet.lever_graphs_p2913); end
  def test_lever_graphs_q2913; assert_equal("2040", worksheet.lever_graphs_q2913); end
  def test_lever_graphs_r2913; assert_equal("2045", worksheet.lever_graphs_r2913); end
  def test_lever_graphs_s2913; assert_equal("2050", worksheet.lever_graphs_s2913); end
  def test_lever_graphs_b2914; assert_equal("Historic data", worksheet.lever_graphs_b2914); end
  def test_lever_graphs_b2915; assert_in_delta(1.0, worksheet.lever_graphs_b2915, 0.002); end
  def test_lever_graphs_k2915; assert_in_delta(0.0, (worksheet.lever_graphs_k2915||0), 0.002); end
  def test_lever_graphs_l2915; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2915, 0.002); end
  def test_lever_graphs_m2915; assert_in_delta(0.004395604395604396, worksheet.lever_graphs_m2915, 0.002); end
  def test_lever_graphs_n2915; assert_in_delta(0.003663003663003663, worksheet.lever_graphs_n2915, 0.002); end
  def test_lever_graphs_o2915; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_o2915, 0.002); end
  def test_lever_graphs_p2915; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_p2915, 0.002); end
  def test_lever_graphs_q2915; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_q2915, 0.002); end
  def test_lever_graphs_r2915; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_r2915, 0.002); end
  def test_lever_graphs_s2915; assert_in_delta(0.0, (worksheet.lever_graphs_s2915||0), 0.002); end
  def test_lever_graphs_b2916; assert_in_epsilon(2.0, worksheet.lever_graphs_b2916, 0.002); end
  def test_lever_graphs_k2916; assert_in_delta(0.0, (worksheet.lever_graphs_k2916||0), 0.002); end
  def test_lever_graphs_l2916; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2916, 0.002); end
  def test_lever_graphs_m2916; assert_in_delta(0.011538461538461539, worksheet.lever_graphs_m2916, 0.002); end
  def test_lever_graphs_n2916; assert_in_delta(0.017948717948717947, worksheet.lever_graphs_n2916, 0.002); end
  def test_lever_graphs_o2916; assert_in_delta(0.02435897435897436, worksheet.lever_graphs_o2916, 0.002); end
  def test_lever_graphs_p2916; assert_in_delta(0.030769230769230767, worksheet.lever_graphs_p2916, 0.002); end
  def test_lever_graphs_q2916; assert_in_delta(0.03717948717948718, worksheet.lever_graphs_q2916, 0.002); end
  def test_lever_graphs_r2916; assert_in_delta(0.043589743589743594, worksheet.lever_graphs_r2916, 0.002); end
  def test_lever_graphs_s2916; assert_in_delta(0.05, worksheet.lever_graphs_s2916, 0.002); end
  def test_lever_graphs_b2917; assert_in_epsilon(3.0, worksheet.lever_graphs_b2917, 0.002); end
  def test_lever_graphs_k2917; assert_in_delta(0.0, (worksheet.lever_graphs_k2917||0), 0.002); end
  def test_lever_graphs_l2917; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2917, 0.002); end
  def test_lever_graphs_m2917; assert_in_delta(0.018681318681318684, worksheet.lever_graphs_m2917, 0.002); end
  def test_lever_graphs_n2917; assert_in_delta(0.03223443223443224, worksheet.lever_graphs_n2917, 0.002); end
  def test_lever_graphs_o2917; assert_in_delta(0.0457875457875458, worksheet.lever_graphs_o2917, 0.002); end
  def test_lever_graphs_p2917; assert_in_delta(0.05934065934065935, worksheet.lever_graphs_p2917, 0.002); end
  def test_lever_graphs_q2917; assert_in_delta(0.0728937728937729, worksheet.lever_graphs_q2917, 0.002); end
  def test_lever_graphs_r2917; assert_in_delta(0.08644688644688646, worksheet.lever_graphs_r2917, 0.002); end
  def test_lever_graphs_s2917; assert_in_delta(0.1, worksheet.lever_graphs_s2917, 0.002); end
  def test_lever_graphs_b2918; assert_in_epsilon(4.0, worksheet.lever_graphs_b2918, 0.002); end
  def test_lever_graphs_k2918; assert_in_delta(0.0, (worksheet.lever_graphs_k2918||0), 0.002); end
  def test_lever_graphs_l2918; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2918, 0.002); end
  def test_lever_graphs_m2918; assert_in_delta(0.03296703296703297, worksheet.lever_graphs_m2918, 0.002); end
  def test_lever_graphs_n2918; assert_in_delta(0.060805860805860805, worksheet.lever_graphs_n2918, 0.002); end
  def test_lever_graphs_o2918; assert_in_delta(0.08864468864468864, worksheet.lever_graphs_o2918, 0.002); end
  def test_lever_graphs_p2918; assert_in_delta(0.11648351648351647, worksheet.lever_graphs_p2918, 0.002); end
  def test_lever_graphs_q2918; assert_in_delta(0.14432234432234434, worksheet.lever_graphs_q2918, 0.002); end
  def test_lever_graphs_r2918; assert_in_delta(0.17216117216117216, worksheet.lever_graphs_r2918, 0.002); end
  def test_lever_graphs_s2918; assert_in_delta(0.2, worksheet.lever_graphs_s2918, 0.002); end
  def test_lever_graphs_c2951; assert_equal("1975", worksheet.lever_graphs_c2951); end
  def test_lever_graphs_d2951; assert_equal("1980", worksheet.lever_graphs_d2951); end
  def test_lever_graphs_e2951; assert_equal("1985", worksheet.lever_graphs_e2951); end
  def test_lever_graphs_f2951; assert_equal("1990", worksheet.lever_graphs_f2951); end
  def test_lever_graphs_g2951; assert_equal("1995", worksheet.lever_graphs_g2951); end
  def test_lever_graphs_h2951; assert_equal("2000", worksheet.lever_graphs_h2951); end
  def test_lever_graphs_i2951; assert_equal("2005", worksheet.lever_graphs_i2951); end
  def test_lever_graphs_j2951; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2951, 0.002); end
  def test_lever_graphs_k2951; assert_equal("2011", worksheet.lever_graphs_k2951); end
  def test_lever_graphs_l2951; assert_equal("2015", worksheet.lever_graphs_l2951); end
  def test_lever_graphs_m2951; assert_equal("2020", worksheet.lever_graphs_m2951); end
  def test_lever_graphs_n2951; assert_equal("2025", worksheet.lever_graphs_n2951); end
  def test_lever_graphs_o2951; assert_equal("2030", worksheet.lever_graphs_o2951); end
  def test_lever_graphs_p2951; assert_equal("2035", worksheet.lever_graphs_p2951); end
  def test_lever_graphs_q2951; assert_equal("2040", worksheet.lever_graphs_q2951); end
  def test_lever_graphs_r2951; assert_equal("2045", worksheet.lever_graphs_r2951); end
  def test_lever_graphs_s2951; assert_equal("2050", worksheet.lever_graphs_s2951); end
  def test_lever_graphs_b2952; assert_equal("Historic data", worksheet.lever_graphs_b2952); end
  def test_lever_graphs_b2953; assert_in_delta(1.0, worksheet.lever_graphs_b2953, 0.002); end
  def test_lever_graphs_k2953; assert_in_delta(0.0, (worksheet.lever_graphs_k2953||0), 0.002); end
  def test_lever_graphs_l2953; assert_in_delta(0.0, (worksheet.lever_graphs_l2953||0), 0.002); end
  def test_lever_graphs_m2953; assert_in_delta(0.0, (worksheet.lever_graphs_m2953||0), 0.002); end
  def test_lever_graphs_n2953; assert_in_delta(0.0, (worksheet.lever_graphs_n2953||0), 0.002); end
  def test_lever_graphs_o2953; assert_in_delta(0.0, (worksheet.lever_graphs_o2953||0), 0.002); end
  def test_lever_graphs_p2953; assert_in_delta(0.0, (worksheet.lever_graphs_p2953||0), 0.002); end
  def test_lever_graphs_q2953; assert_in_delta(0.0, (worksheet.lever_graphs_q2953||0), 0.002); end
  def test_lever_graphs_r2953; assert_in_delta(0.0, (worksheet.lever_graphs_r2953||0), 0.002); end
  def test_lever_graphs_s2953; assert_in_delta(0.0, (worksheet.lever_graphs_s2953||0), 0.002); end
  def test_lever_graphs_b2954; assert_in_epsilon(2.0, worksheet.lever_graphs_b2954, 0.002); end
  def test_lever_graphs_k2954; assert_in_delta(0.0, (worksheet.lever_graphs_k2954||0), 0.002); end
  def test_lever_graphs_l2954; assert_in_delta(0.0, (worksheet.lever_graphs_l2954||0), 0.002); end
  def test_lever_graphs_m2954; assert_in_delta(0.0, (worksheet.lever_graphs_m2954||0), 0.002); end
  def test_lever_graphs_n2954; assert_in_delta(0.0, (worksheet.lever_graphs_n2954||0), 0.002); end
  def test_lever_graphs_o2954; assert_in_delta(0.0, (worksheet.lever_graphs_o2954||0), 0.002); end
  def test_lever_graphs_p2954; assert_in_delta(0.0, (worksheet.lever_graphs_p2954||0), 0.002); end
  def test_lever_graphs_q2954; assert_in_delta(0.0, (worksheet.lever_graphs_q2954||0), 0.002); end
  def test_lever_graphs_r2954; assert_in_delta(0.0, (worksheet.lever_graphs_r2954||0), 0.002); end
  def test_lever_graphs_s2954; assert_in_delta(0.0, (worksheet.lever_graphs_s2954||0), 0.002); end
  def test_lever_graphs_b2955; assert_in_epsilon(3.0, worksheet.lever_graphs_b2955, 0.002); end
  def test_lever_graphs_k2955; assert_in_delta(0.0, (worksheet.lever_graphs_k2955||0), 0.002); end
  def test_lever_graphs_l2955; assert_in_delta(0.0, (worksheet.lever_graphs_l2955||0), 0.002); end
  def test_lever_graphs_m2955; assert_in_delta(0.0, (worksheet.lever_graphs_m2955||0), 0.002); end
  def test_lever_graphs_n2955; assert_in_delta(0.0, (worksheet.lever_graphs_n2955||0), 0.002); end
  def test_lever_graphs_o2955; assert_in_delta(0.0, (worksheet.lever_graphs_o2955||0), 0.002); end
  def test_lever_graphs_p2955; assert_in_delta(0.0, (worksheet.lever_graphs_p2955||0), 0.002); end
  def test_lever_graphs_q2955; assert_in_delta(0.0, (worksheet.lever_graphs_q2955||0), 0.002); end
  def test_lever_graphs_r2955; assert_in_delta(0.0, (worksheet.lever_graphs_r2955||0), 0.002); end
  def test_lever_graphs_s2955; assert_in_delta(0.0, (worksheet.lever_graphs_s2955||0), 0.002); end
  def test_lever_graphs_b2956; assert_in_epsilon(4.0, worksheet.lever_graphs_b2956, 0.002); end
  def test_lever_graphs_k2956; assert_in_delta(0.0, (worksheet.lever_graphs_k2956||0), 0.002); end
  def test_lever_graphs_l2956; assert_in_delta(0.0, (worksheet.lever_graphs_l2956||0), 0.002); end
  def test_lever_graphs_m2956; assert_in_delta(0.0, (worksheet.lever_graphs_m2956||0), 0.002); end
  def test_lever_graphs_n2956; assert_in_delta(0.0, (worksheet.lever_graphs_n2956||0), 0.002); end
  def test_lever_graphs_o2956; assert_in_delta(0.0, (worksheet.lever_graphs_o2956||0), 0.002); end
  def test_lever_graphs_p2956; assert_in_delta(0.0, (worksheet.lever_graphs_p2956||0), 0.002); end
  def test_lever_graphs_q2956; assert_in_delta(0.0, (worksheet.lever_graphs_q2956||0), 0.002); end
  def test_lever_graphs_r2956; assert_in_delta(0.0, (worksheet.lever_graphs_r2956||0), 0.002); end
  def test_lever_graphs_s2956; assert_in_delta(0.0, (worksheet.lever_graphs_s2956||0), 0.002); end
  def test_lever_graphs_c2941; assert_equal("1975", worksheet.lever_graphs_c2941); end
  def test_lever_graphs_d2941; assert_equal("1980", worksheet.lever_graphs_d2941); end
  def test_lever_graphs_e2941; assert_equal("1985", worksheet.lever_graphs_e2941); end
  def test_lever_graphs_f2941; assert_equal("1990", worksheet.lever_graphs_f2941); end
  def test_lever_graphs_g2941; assert_equal("1995", worksheet.lever_graphs_g2941); end
  def test_lever_graphs_h2941; assert_equal("2000", worksheet.lever_graphs_h2941); end
  def test_lever_graphs_i2941; assert_equal("2005", worksheet.lever_graphs_i2941); end
  def test_lever_graphs_j2941; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2941, 0.002); end
  def test_lever_graphs_k2941; assert_equal("2011", worksheet.lever_graphs_k2941); end
  def test_lever_graphs_l2941; assert_equal("2015", worksheet.lever_graphs_l2941); end
  def test_lever_graphs_m2941; assert_equal("2020", worksheet.lever_graphs_m2941); end
  def test_lever_graphs_n2941; assert_equal("2025", worksheet.lever_graphs_n2941); end
  def test_lever_graphs_o2941; assert_equal("2030", worksheet.lever_graphs_o2941); end
  def test_lever_graphs_p2941; assert_equal("2035", worksheet.lever_graphs_p2941); end
  def test_lever_graphs_q2941; assert_equal("2040", worksheet.lever_graphs_q2941); end
  def test_lever_graphs_r2941; assert_equal("2045", worksheet.lever_graphs_r2941); end
  def test_lever_graphs_s2941; assert_equal("2050", worksheet.lever_graphs_s2941); end
  def test_lever_graphs_b2942; assert_equal("Historic data", worksheet.lever_graphs_b2942); end
  def test_lever_graphs_b2943; assert_in_delta(1.0, worksheet.lever_graphs_b2943, 0.002); end
  def test_lever_graphs_k2943; assert_in_delta(0.0, (worksheet.lever_graphs_k2943||0), 0.002); end
  def test_lever_graphs_l2943; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2943, 0.002); end
  def test_lever_graphs_m2943; assert_in_delta(0.017582417582417582, worksheet.lever_graphs_m2943, 0.002); end
  def test_lever_graphs_n2943; assert_in_delta(0.014652014652014652, worksheet.lever_graphs_n2943, 0.002); end
  def test_lever_graphs_o2943; assert_in_delta(0.011721611721611722, worksheet.lever_graphs_o2943, 0.002); end
  def test_lever_graphs_p2943; assert_in_delta(0.008791208791208791, worksheet.lever_graphs_p2943, 0.002); end
  def test_lever_graphs_q2943; assert_in_delta(0.005860805860805861, worksheet.lever_graphs_q2943, 0.002); end
  def test_lever_graphs_r2943; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_r2943, 0.002); end
  def test_lever_graphs_s2943; assert_in_delta(0.0, (worksheet.lever_graphs_s2943||0), 0.002); end
  def test_lever_graphs_b2944; assert_in_epsilon(2.0, worksheet.lever_graphs_b2944, 0.002); end
  def test_lever_graphs_k2944; assert_in_delta(0.0, (worksheet.lever_graphs_k2944||0), 0.002); end
  def test_lever_graphs_l2944; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2944, 0.002); end
  def test_lever_graphs_m2944; assert_in_delta(0.046153846153846156, worksheet.lever_graphs_m2944, 0.002); end
  def test_lever_graphs_n2944; assert_in_delta(0.07179487179487179, worksheet.lever_graphs_n2944, 0.002); end
  def test_lever_graphs_o2944; assert_in_delta(0.09743589743589744, worksheet.lever_graphs_o2944, 0.002); end
  def test_lever_graphs_p2944; assert_in_delta(0.12307692307692307, worksheet.lever_graphs_p2944, 0.002); end
  def test_lever_graphs_q2944; assert_in_delta(0.14871794871794872, worksheet.lever_graphs_q2944, 0.002); end
  def test_lever_graphs_r2944; assert_in_delta(0.17435897435897438, worksheet.lever_graphs_r2944, 0.002); end
  def test_lever_graphs_s2944; assert_in_delta(0.2, worksheet.lever_graphs_s2944, 0.002); end
  def test_lever_graphs_b2945; assert_in_epsilon(3.0, worksheet.lever_graphs_b2945, 0.002); end
  def test_lever_graphs_k2945; assert_in_delta(0.0, (worksheet.lever_graphs_k2945||0), 0.002); end
  def test_lever_graphs_l2945; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2945, 0.002); end
  def test_lever_graphs_m2945; assert_in_delta(0.06043956043956045, worksheet.lever_graphs_m2945, 0.002); end
  def test_lever_graphs_n2945; assert_in_delta(0.10036630036630037, worksheet.lever_graphs_n2945, 0.002); end
  def test_lever_graphs_o2945; assert_in_delta(0.1402930402930403, worksheet.lever_graphs_o2945, 0.002); end
  def test_lever_graphs_p2945; assert_in_delta(0.18021978021978025, worksheet.lever_graphs_p2945, 0.002); end
  def test_lever_graphs_q2945; assert_in_delta(0.22014652014652017, worksheet.lever_graphs_q2945, 0.002); end
  def test_lever_graphs_r2945; assert_in_delta(0.2600732600732601, worksheet.lever_graphs_r2945, 0.002); end
  def test_lever_graphs_s2945; assert_in_delta(0.3, worksheet.lever_graphs_s2945, 0.002); end
  def test_lever_graphs_b2946; assert_in_epsilon(4.0, worksheet.lever_graphs_b2946, 0.002); end
  def test_lever_graphs_k2946; assert_in_delta(0.0, (worksheet.lever_graphs_k2946||0), 0.002); end
  def test_lever_graphs_l2946; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2946, 0.002); end
  def test_lever_graphs_m2946; assert_in_delta(0.07472527472527474, worksheet.lever_graphs_m2946, 0.002); end
  def test_lever_graphs_n2946; assert_in_delta(0.12893772893772895, worksheet.lever_graphs_n2946, 0.002); end
  def test_lever_graphs_o2946; assert_in_delta(0.1831501831501832, worksheet.lever_graphs_o2946, 0.002); end
  def test_lever_graphs_p2946; assert_in_delta(0.2373626373626374, worksheet.lever_graphs_p2946, 0.002); end
  def test_lever_graphs_q2946; assert_in_delta(0.2915750915750916, worksheet.lever_graphs_q2946, 0.002); end
  def test_lever_graphs_r2946; assert_in_delta(0.34578754578754584, worksheet.lever_graphs_r2946, 0.002); end
  def test_lever_graphs_s2946; assert_in_delta(0.4, worksheet.lever_graphs_s2946, 0.002); end
  def test_lever_graphs_c2875; assert_equal("1975", worksheet.lever_graphs_c2875); end
  def test_lever_graphs_d2875; assert_equal("1980", worksheet.lever_graphs_d2875); end
  def test_lever_graphs_e2875; assert_equal("1985", worksheet.lever_graphs_e2875); end
  def test_lever_graphs_f2875; assert_equal("1990", worksheet.lever_graphs_f2875); end
  def test_lever_graphs_g2875; assert_equal("1995", worksheet.lever_graphs_g2875); end
  def test_lever_graphs_h2875; assert_equal("2000", worksheet.lever_graphs_h2875); end
  def test_lever_graphs_i2875; assert_equal("2005", worksheet.lever_graphs_i2875); end
  def test_lever_graphs_j2875; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2875, 0.002); end
  def test_lever_graphs_k2875; assert_equal("2011", worksheet.lever_graphs_k2875); end
  def test_lever_graphs_l2875; assert_equal("2015", worksheet.lever_graphs_l2875); end
  def test_lever_graphs_m2875; assert_equal("2020", worksheet.lever_graphs_m2875); end
  def test_lever_graphs_n2875; assert_equal("2025", worksheet.lever_graphs_n2875); end
  def test_lever_graphs_o2875; assert_equal("2030", worksheet.lever_graphs_o2875); end
  def test_lever_graphs_p2875; assert_equal("2035", worksheet.lever_graphs_p2875); end
  def test_lever_graphs_q2875; assert_equal("2040", worksheet.lever_graphs_q2875); end
  def test_lever_graphs_r2875; assert_equal("2045", worksheet.lever_graphs_r2875); end
  def test_lever_graphs_s2875; assert_equal("2050", worksheet.lever_graphs_s2875); end
  def test_lever_graphs_b2876; assert_equal("Historic data", worksheet.lever_graphs_b2876); end
  def test_lever_graphs_b2877; assert_in_delta(1.0, worksheet.lever_graphs_b2877, 0.002); end
  def test_lever_graphs_k2877; assert_in_delta(0.0, (worksheet.lever_graphs_k2877||0), 0.002); end
  def test_lever_graphs_l2877; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2877, 0.002); end
  def test_lever_graphs_m2877; assert_in_delta(0.004395604395604396, worksheet.lever_graphs_m2877, 0.002); end
  def test_lever_graphs_n2877; assert_in_delta(0.003663003663003663, worksheet.lever_graphs_n2877, 0.002); end
  def test_lever_graphs_o2877; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_o2877, 0.002); end
  def test_lever_graphs_p2877; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_p2877, 0.002); end
  def test_lever_graphs_q2877; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_q2877, 0.002); end
  def test_lever_graphs_r2877; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_r2877, 0.002); end
  def test_lever_graphs_s2877; assert_in_delta(0.0, (worksheet.lever_graphs_s2877||0), 0.002); end
  def test_lever_graphs_b2878; assert_in_epsilon(2.0, worksheet.lever_graphs_b2878, 0.002); end
  def test_lever_graphs_k2878; assert_in_delta(0.0, (worksheet.lever_graphs_k2878||0), 0.002); end
  def test_lever_graphs_l2878; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2878, 0.002); end
  def test_lever_graphs_m2878; assert_in_delta(0.011538461538461539, worksheet.lever_graphs_m2878, 0.002); end
  def test_lever_graphs_n2878; assert_in_delta(0.017948717948717947, worksheet.lever_graphs_n2878, 0.002); end
  def test_lever_graphs_o2878; assert_in_delta(0.02435897435897436, worksheet.lever_graphs_o2878, 0.002); end
  def test_lever_graphs_p2878; assert_in_delta(0.030769230769230767, worksheet.lever_graphs_p2878, 0.002); end
  def test_lever_graphs_q2878; assert_in_delta(0.03717948717948718, worksheet.lever_graphs_q2878, 0.002); end
  def test_lever_graphs_r2878; assert_in_delta(0.043589743589743594, worksheet.lever_graphs_r2878, 0.002); end
  def test_lever_graphs_s2878; assert_in_delta(0.05, worksheet.lever_graphs_s2878, 0.002); end
  def test_lever_graphs_b2879; assert_in_epsilon(3.0, worksheet.lever_graphs_b2879, 0.002); end
  def test_lever_graphs_k2879; assert_in_delta(0.0, (worksheet.lever_graphs_k2879||0), 0.002); end
  def test_lever_graphs_l2879; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2879, 0.002); end
  def test_lever_graphs_m2879; assert_in_delta(0.014395604395604396, worksheet.lever_graphs_m2879, 0.002); end
  def test_lever_graphs_n2879; assert_in_delta(0.023663003663003664, worksheet.lever_graphs_n2879, 0.002); end
  def test_lever_graphs_o2879; assert_in_delta(0.03293040293040293, worksheet.lever_graphs_o2879, 0.002); end
  def test_lever_graphs_p2879; assert_in_delta(0.042197802197802205, worksheet.lever_graphs_p2879, 0.002); end
  def test_lever_graphs_q2879; assert_in_delta(0.05146520146520148, worksheet.lever_graphs_q2879, 0.002); end
  def test_lever_graphs_r2879; assert_in_delta(0.06073260073260074, worksheet.lever_graphs_r2879, 0.002); end
  def test_lever_graphs_s2879; assert_in_delta(0.07, worksheet.lever_graphs_s2879, 0.002); end
  def test_lever_graphs_b2880; assert_in_epsilon(4.0, worksheet.lever_graphs_b2880, 0.002); end
  def test_lever_graphs_k2880; assert_in_delta(0.0, (worksheet.lever_graphs_k2880||0), 0.002); end
  def test_lever_graphs_l2880; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2880, 0.002); end
  def test_lever_graphs_m2880; assert_in_delta(0.018681318681318684, worksheet.lever_graphs_m2880, 0.002); end
  def test_lever_graphs_n2880; assert_in_delta(0.03223443223443224, worksheet.lever_graphs_n2880, 0.002); end
  def test_lever_graphs_o2880; assert_in_delta(0.0457875457875458, worksheet.lever_graphs_o2880, 0.002); end
  def test_lever_graphs_p2880; assert_in_delta(0.05934065934065935, worksheet.lever_graphs_p2880, 0.002); end
  def test_lever_graphs_q2880; assert_in_delta(0.0728937728937729, worksheet.lever_graphs_q2880, 0.002); end
  def test_lever_graphs_r2880; assert_in_delta(0.08644688644688646, worksheet.lever_graphs_r2880, 0.002); end
  def test_lever_graphs_s2880; assert_in_delta(0.1, worksheet.lever_graphs_s2880, 0.002); end
  def test_lever_graphs_c2854; assert_equal("1975", worksheet.lever_graphs_c2854); end
  def test_lever_graphs_d2854; assert_equal("1980", worksheet.lever_graphs_d2854); end
  def test_lever_graphs_e2854; assert_equal("1985", worksheet.lever_graphs_e2854); end
  def test_lever_graphs_f2854; assert_equal("1990", worksheet.lever_graphs_f2854); end
  def test_lever_graphs_g2854; assert_equal("1995", worksheet.lever_graphs_g2854); end
  def test_lever_graphs_h2854; assert_equal("2000", worksheet.lever_graphs_h2854); end
  def test_lever_graphs_i2854; assert_equal("2005", worksheet.lever_graphs_i2854); end
  def test_lever_graphs_j2854; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2854, 0.002); end
  def test_lever_graphs_k2854; assert_equal("2011", worksheet.lever_graphs_k2854); end
  def test_lever_graphs_l2854; assert_equal("2015", worksheet.lever_graphs_l2854); end
  def test_lever_graphs_m2854; assert_equal("2020", worksheet.lever_graphs_m2854); end
  def test_lever_graphs_n2854; assert_equal("2025", worksheet.lever_graphs_n2854); end
  def test_lever_graphs_o2854; assert_equal("2030", worksheet.lever_graphs_o2854); end
  def test_lever_graphs_p2854; assert_equal("2035", worksheet.lever_graphs_p2854); end
  def test_lever_graphs_q2854; assert_equal("2040", worksheet.lever_graphs_q2854); end
  def test_lever_graphs_r2854; assert_equal("2045", worksheet.lever_graphs_r2854); end
  def test_lever_graphs_s2854; assert_equal("2050", worksheet.lever_graphs_s2854); end
  def test_lever_graphs_b2855; assert_equal("Historic data", worksheet.lever_graphs_b2855); end
  def test_lever_graphs_b2856; assert_in_delta(1.0, worksheet.lever_graphs_b2856, 0.002); end
  def test_lever_graphs_k2856; assert_in_delta(0.0, (worksheet.lever_graphs_k2856||0), 0.002); end
  def test_lever_graphs_l2856; assert_in_delta(0.0038461538461538464, worksheet.lever_graphs_l2856, 0.002); end
  def test_lever_graphs_m2856; assert_in_delta(0.0032967032967032967, worksheet.lever_graphs_m2856, 0.002); end
  def test_lever_graphs_n2856; assert_in_delta(0.002747252747252747, worksheet.lever_graphs_n2856, 0.002); end
  def test_lever_graphs_o2856; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_o2856, 0.002); end
  def test_lever_graphs_p2856; assert_in_delta(0.0016483516483516484, worksheet.lever_graphs_p2856, 0.002); end
  def test_lever_graphs_q2856; assert_in_delta(0.001098901098901099, worksheet.lever_graphs_q2856, 0.002); end
  def test_lever_graphs_r2856; assert_in_delta(0.0005494505494505495, worksheet.lever_graphs_r2856, 0.002); end
  def test_lever_graphs_s2856; assert_in_delta(0.0, (worksheet.lever_graphs_s2856||0), 0.002); end
  def test_lever_graphs_b2857; assert_in_epsilon(2.0, worksheet.lever_graphs_b2857, 0.002); end
  def test_lever_graphs_k2857; assert_in_delta(0.0, (worksheet.lever_graphs_k2857||0), 0.002); end
  def test_lever_graphs_l2857; assert_in_delta(0.0038461538461538464, worksheet.lever_graphs_l2857, 0.002); end
  def test_lever_graphs_m2857; assert_in_delta(0.008653846153846154, worksheet.lever_graphs_m2857, 0.002); end
  def test_lever_graphs_n2857; assert_in_delta(0.01346153846153846, worksheet.lever_graphs_n2857, 0.002); end
  def test_lever_graphs_o2857; assert_in_delta(0.01826923076923077, worksheet.lever_graphs_o2857, 0.002); end
  def test_lever_graphs_p2857; assert_in_delta(0.023076923076923075, worksheet.lever_graphs_p2857, 0.002); end
  def test_lever_graphs_q2857; assert_in_delta(0.027884615384615383, worksheet.lever_graphs_q2857, 0.002); end
  def test_lever_graphs_r2857; assert_in_delta(0.032692307692307694, worksheet.lever_graphs_r2857, 0.002); end
  def test_lever_graphs_s2857; assert_in_delta(0.037500000000000006, worksheet.lever_graphs_s2857, 0.002); end
  def test_lever_graphs_b2858; assert_in_epsilon(3.0, worksheet.lever_graphs_b2858, 0.002); end
  def test_lever_graphs_k2858; assert_in_delta(0.0, (worksheet.lever_graphs_k2858||0), 0.002); end
  def test_lever_graphs_l2858; assert_in_delta(0.0038461538461538464, worksheet.lever_graphs_l2858, 0.002); end
  def test_lever_graphs_m2858; assert_in_delta(0.011868131868131869, worksheet.lever_graphs_m2858, 0.002); end
  def test_lever_graphs_n2858; assert_in_delta(0.01989010989010989, worksheet.lever_graphs_n2858, 0.002); end
  def test_lever_graphs_o2858; assert_in_delta(0.027912087912087914, worksheet.lever_graphs_o2858, 0.002); end
  def test_lever_graphs_p2858; assert_in_delta(0.03593406593406594, worksheet.lever_graphs_p2858, 0.002); end
  def test_lever_graphs_q2858; assert_in_delta(0.043956043956043966, worksheet.lever_graphs_q2858, 0.002); end
  def test_lever_graphs_r2858; assert_in_delta(0.05197802197802198, worksheet.lever_graphs_r2858, 0.002); end
  def test_lever_graphs_s2858; assert_in_delta(0.060000000000000005, worksheet.lever_graphs_s2858, 0.002); end
  def test_lever_graphs_b2859; assert_in_epsilon(4.0, worksheet.lever_graphs_b2859, 0.002); end
  def test_lever_graphs_k2859; assert_in_delta(0.0, (worksheet.lever_graphs_k2859||0), 0.002); end
  def test_lever_graphs_l2859; assert_in_delta(0.0038461538461538464, worksheet.lever_graphs_l2859, 0.002); end
  def test_lever_graphs_m2859; assert_in_delta(0.017582417582417582, worksheet.lever_graphs_m2859, 0.002); end
  def test_lever_graphs_n2859; assert_in_delta(0.03131868131868132, worksheet.lever_graphs_n2859, 0.002); end
  def test_lever_graphs_o2859; assert_in_delta(0.04505494505494506, worksheet.lever_graphs_o2859, 0.002); end
  def test_lever_graphs_p2859; assert_in_delta(0.05879120879120879, worksheet.lever_graphs_p2859, 0.002); end
  def test_lever_graphs_q2859; assert_in_delta(0.07252747252747253, worksheet.lever_graphs_q2859, 0.002); end
  def test_lever_graphs_r2859; assert_in_delta(0.08626373626373626, worksheet.lever_graphs_r2859, 0.002); end
  def test_lever_graphs_s2859; assert_in_delta(0.1, worksheet.lever_graphs_s2859, 0.002); end
  def test_lever_graphs_c2380; assert_equal("1975", worksheet.lever_graphs_c2380); end
  def test_lever_graphs_d2380; assert_equal("1980", worksheet.lever_graphs_d2380); end
  def test_lever_graphs_e2380; assert_equal("1985", worksheet.lever_graphs_e2380); end
  def test_lever_graphs_f2380; assert_equal("1990", worksheet.lever_graphs_f2380); end
  def test_lever_graphs_g2380; assert_equal("1995", worksheet.lever_graphs_g2380); end
  def test_lever_graphs_h2380; assert_equal("2000", worksheet.lever_graphs_h2380); end
  def test_lever_graphs_i2380; assert_equal("2005", worksheet.lever_graphs_i2380); end
  def test_lever_graphs_j2380; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2380, 0.002); end
  def test_lever_graphs_k2380; assert_equal("2011", worksheet.lever_graphs_k2380); end
  def test_lever_graphs_l2380; assert_equal("2015", worksheet.lever_graphs_l2380); end
  def test_lever_graphs_m2380; assert_equal("2020", worksheet.lever_graphs_m2380); end
  def test_lever_graphs_n2380; assert_equal("2025", worksheet.lever_graphs_n2380); end
  def test_lever_graphs_o2380; assert_equal("2030", worksheet.lever_graphs_o2380); end
  def test_lever_graphs_p2380; assert_equal("2035", worksheet.lever_graphs_p2380); end
  def test_lever_graphs_q2380; assert_equal("2040", worksheet.lever_graphs_q2380); end
  def test_lever_graphs_r2380; assert_equal("2045", worksheet.lever_graphs_r2380); end
  def test_lever_graphs_s2380; assert_equal("2050", worksheet.lever_graphs_s2380); end
  def test_lever_graphs_b2381; assert_equal("Historic data", worksheet.lever_graphs_b2381); end
  def test_lever_graphs_b2382; assert_in_delta(1.0, worksheet.lever_graphs_b2382, 0.002); end
  def test_lever_graphs_k2382; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_k2382, 0.002); end
  def test_lever_graphs_l2382; assert_in_epsilon(12.58733212950103, worksheet.lever_graphs_l2382, 0.002); end
  def test_lever_graphs_m2382; assert_in_epsilon(12.569076390371949, worksheet.lever_graphs_m2382, 0.002); end
  def test_lever_graphs_n2382; assert_in_epsilon(12.55082065124287, worksheet.lever_graphs_n2382, 0.002); end
  def test_lever_graphs_o2382; assert_in_epsilon(12.532564912113788, worksheet.lever_graphs_o2382, 0.002); end
  def test_lever_graphs_p2382; assert_in_epsilon(12.514309172984708, worksheet.lever_graphs_p2382, 0.002); end
  def test_lever_graphs_q2382; assert_in_epsilon(12.496053433855627, worksheet.lever_graphs_q2382, 0.002); end
  def test_lever_graphs_r2382; assert_in_epsilon(12.477797694726547, worksheet.lever_graphs_r2382, 0.002); end
  def test_lever_graphs_s2382; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_s2382, 0.002); end
  def test_lever_graphs_b2383; assert_in_epsilon(2.0, worksheet.lever_graphs_b2383, 0.002); end
  def test_lever_graphs_k2383; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_k2383, 0.002); end
  def test_lever_graphs_l2383; assert_in_epsilon(12.58733212950103, worksheet.lever_graphs_l2383, 0.002); end
  def test_lever_graphs_m2383; assert_in_epsilon(12.747069846880485, worksheet.lever_graphs_m2383, 0.002); end
  def test_lever_graphs_n2383; assert_in_epsilon(12.906807564259939, worksheet.lever_graphs_n2383, 0.002); end
  def test_lever_graphs_o2383; assert_in_epsilon(13.066545281639394, worksheet.lever_graphs_o2383, 0.002); end
  def test_lever_graphs_p2383; assert_in_epsilon(13.22628299901885, worksheet.lever_graphs_p2383, 0.002); end
  def test_lever_graphs_q2383; assert_in_epsilon(13.386020716398304, worksheet.lever_graphs_q2383, 0.002); end
  def test_lever_graphs_r2383; assert_in_epsilon(13.545758433777758, worksheet.lever_graphs_r2383, 0.002); end
  def test_lever_graphs_s2383; assert_in_epsilon(13.705496151157213, worksheet.lever_graphs_s2383, 0.002); end
  def test_lever_graphs_b2384; assert_in_epsilon(3.0, worksheet.lever_graphs_b2384, 0.002); end
  def test_lever_graphs_k2384; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_k2384, 0.002); end
  def test_lever_graphs_l2384; assert_in_epsilon(12.58733212950103, worksheet.lever_graphs_l2384, 0.002); end
  def test_lever_graphs_m2384; assert_in_epsilon(12.92506330338902, worksheet.lever_graphs_m2384, 0.002); end
  def test_lever_graphs_n2384; assert_in_epsilon(13.26279447727701, worksheet.lever_graphs_n2384, 0.002); end
  def test_lever_graphs_o2384; assert_in_epsilon(13.600525651165, worksheet.lever_graphs_o2384, 0.002); end
  def test_lever_graphs_p2384; assert_in_epsilon(13.938256825052989, worksheet.lever_graphs_p2384, 0.002); end
  def test_lever_graphs_q2384; assert_in_epsilon(14.275987998940979, worksheet.lever_graphs_q2384, 0.002); end
  def test_lever_graphs_r2384; assert_in_epsilon(14.613719172828969, worksheet.lever_graphs_r2384, 0.002); end
  def test_lever_graphs_s2384; assert_in_epsilon(14.951450346716959, worksheet.lever_graphs_s2384, 0.002); end
  def test_lever_graphs_b2385; assert_in_epsilon(4.0, worksheet.lever_graphs_b2385, 0.002); end
  def test_lever_graphs_k2385; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_k2385, 0.002); end
  def test_lever_graphs_l2385; assert_in_epsilon(12.58733212950103, worksheet.lever_graphs_l2385, 0.002); end
  def test_lever_graphs_m2385; assert_in_epsilon(13.103056759897555, worksheet.lever_graphs_m2385, 0.002); end
  def test_lever_graphs_n2385; assert_in_epsilon(13.618781390294082, worksheet.lever_graphs_n2385, 0.002); end
  def test_lever_graphs_o2385; assert_in_epsilon(14.134506020690607, worksheet.lever_graphs_o2385, 0.002); end
  def test_lever_graphs_p2385; assert_in_epsilon(14.650230651087131, worksheet.lever_graphs_p2385, 0.002); end
  def test_lever_graphs_q2385; assert_in_epsilon(15.165955281483658, worksheet.lever_graphs_q2385, 0.002); end
  def test_lever_graphs_r2385; assert_in_epsilon(15.681679911880183, worksheet.lever_graphs_r2385, 0.002); end
  def test_lever_graphs_s2385; assert_in_epsilon(16.197404542276708, worksheet.lever_graphs_s2385, 0.002); end
  def test_lever_graphs_c2390; assert_equal("1975", worksheet.lever_graphs_c2390); end
  def test_lever_graphs_d2390; assert_equal("1980", worksheet.lever_graphs_d2390); end
  def test_lever_graphs_e2390; assert_equal("1985", worksheet.lever_graphs_e2390); end
  def test_lever_graphs_f2390; assert_equal("1990", worksheet.lever_graphs_f2390); end
  def test_lever_graphs_g2390; assert_equal("1995", worksheet.lever_graphs_g2390); end
  def test_lever_graphs_h2390; assert_equal("2000", worksheet.lever_graphs_h2390); end
  def test_lever_graphs_i2390; assert_equal("2005", worksheet.lever_graphs_i2390); end
  def test_lever_graphs_j2390; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2390, 0.002); end
  def test_lever_graphs_k2390; assert_equal("2011", worksheet.lever_graphs_k2390); end
  def test_lever_graphs_l2390; assert_equal("2015", worksheet.lever_graphs_l2390); end
  def test_lever_graphs_m2390; assert_equal("2020", worksheet.lever_graphs_m2390); end
  def test_lever_graphs_n2390; assert_equal("2025", worksheet.lever_graphs_n2390); end
  def test_lever_graphs_o2390; assert_equal("2030", worksheet.lever_graphs_o2390); end
  def test_lever_graphs_p2390; assert_equal("2035", worksheet.lever_graphs_p2390); end
  def test_lever_graphs_q2390; assert_equal("2040", worksheet.lever_graphs_q2390); end
  def test_lever_graphs_r2390; assert_equal("2045", worksheet.lever_graphs_r2390); end
  def test_lever_graphs_s2390; assert_equal("2050", worksheet.lever_graphs_s2390); end
  def test_lever_graphs_b2391; assert_equal("Historic data", worksheet.lever_graphs_b2391); end
  def test_lever_graphs_b2392; assert_in_delta(1.0, worksheet.lever_graphs_b2392, 0.002); end
  def test_lever_graphs_k2392; assert_in_epsilon(7.0, worksheet.lever_graphs_k2392, 0.002); end
  def test_lever_graphs_l2392; assert_in_epsilon(7.0, worksheet.lever_graphs_l2392, 0.002); end
  def test_lever_graphs_m2392; assert_in_epsilon(6.714285714285714, worksheet.lever_graphs_m2392, 0.002); end
  def test_lever_graphs_n2392; assert_in_epsilon(6.428571428571429, worksheet.lever_graphs_n2392, 0.002); end
  def test_lever_graphs_o2392; assert_in_epsilon(6.142857142857143, worksheet.lever_graphs_o2392, 0.002); end
  def test_lever_graphs_p2392; assert_in_epsilon(5.857142857142858, worksheet.lever_graphs_p2392, 0.002); end
  def test_lever_graphs_q2392; assert_in_epsilon(5.571428571428571, worksheet.lever_graphs_q2392, 0.002); end
  def test_lever_graphs_r2392; assert_in_epsilon(5.285714285714286, worksheet.lever_graphs_r2392, 0.002); end
  def test_lever_graphs_s2392; assert_in_epsilon(5.0, worksheet.lever_graphs_s2392, 0.002); end
  def test_lever_graphs_b2393; assert_in_epsilon(2.0, worksheet.lever_graphs_b2393, 0.002); end
  def test_lever_graphs_k2393; assert_in_epsilon(7.0, worksheet.lever_graphs_k2393, 0.002); end
  def test_lever_graphs_l2393; assert_in_epsilon(7.0, worksheet.lever_graphs_l2393, 0.002); end
  def test_lever_graphs_m2393; assert_in_epsilon(7.0, worksheet.lever_graphs_m2393, 0.002); end
  def test_lever_graphs_n2393; assert_in_epsilon(7.0, worksheet.lever_graphs_n2393, 0.002); end
  def test_lever_graphs_o2393; assert_in_epsilon(7.0, worksheet.lever_graphs_o2393, 0.002); end
  def test_lever_graphs_p2393; assert_in_epsilon(7.0, worksheet.lever_graphs_p2393, 0.002); end
  def test_lever_graphs_q2393; assert_in_epsilon(7.0, worksheet.lever_graphs_q2393, 0.002); end
  def test_lever_graphs_r2393; assert_in_epsilon(7.0, worksheet.lever_graphs_r2393, 0.002); end
  def test_lever_graphs_s2393; assert_in_epsilon(7.0, worksheet.lever_graphs_s2393, 0.002); end
  def test_lever_graphs_b2394; assert_in_epsilon(3.0, worksheet.lever_graphs_b2394, 0.002); end
  def test_lever_graphs_k2394; assert_in_epsilon(7.0, worksheet.lever_graphs_k2394, 0.002); end
  def test_lever_graphs_l2394; assert_in_epsilon(7.0, worksheet.lever_graphs_l2394, 0.002); end
  def test_lever_graphs_m2394; assert_in_epsilon(7.428571428571429, worksheet.lever_graphs_m2394, 0.002); end
  def test_lever_graphs_n2394; assert_in_epsilon(7.857142857142858, worksheet.lever_graphs_n2394, 0.002); end
  def test_lever_graphs_o2394; assert_in_epsilon(8.285714285714286, worksheet.lever_graphs_o2394, 0.002); end
  def test_lever_graphs_p2394; assert_in_epsilon(8.714285714285715, worksheet.lever_graphs_p2394, 0.002); end
  def test_lever_graphs_q2394; assert_in_epsilon(9.142857142857142, worksheet.lever_graphs_q2394, 0.002); end
  def test_lever_graphs_r2394; assert_in_epsilon(9.571428571428571, worksheet.lever_graphs_r2394, 0.002); end
  def test_lever_graphs_s2394; assert_in_epsilon(10.0, worksheet.lever_graphs_s2394, 0.002); end
  def test_lever_graphs_b2395; assert_in_epsilon(4.0, worksheet.lever_graphs_b2395, 0.002); end
  def test_lever_graphs_k2395; assert_in_epsilon(7.0, worksheet.lever_graphs_k2395, 0.002); end
  def test_lever_graphs_l2395; assert_in_epsilon(7.0, worksheet.lever_graphs_l2395, 0.002); end
  def test_lever_graphs_m2395; assert_in_epsilon(8.142857142857142, worksheet.lever_graphs_m2395, 0.002); end
  def test_lever_graphs_n2395; assert_in_epsilon(9.285714285714285, worksheet.lever_graphs_n2395, 0.002); end
  def test_lever_graphs_o2395; assert_in_epsilon(10.428571428571429, worksheet.lever_graphs_o2395, 0.002); end
  def test_lever_graphs_p2395; assert_in_epsilon(11.571428571428571, worksheet.lever_graphs_p2395, 0.002); end
  def test_lever_graphs_q2395; assert_in_epsilon(12.714285714285715, worksheet.lever_graphs_q2395, 0.002); end
  def test_lever_graphs_r2395; assert_in_epsilon(13.857142857142858, worksheet.lever_graphs_r2395, 0.002); end
  def test_lever_graphs_s2395; assert_in_epsilon(15.0, worksheet.lever_graphs_s2395, 0.002); end
  def test_lever_graphs_d2761; assert_equal("Title", worksheet.lever_graphs_d2761); end
  def test_lever_graphs_e2761; assert_equal("Material switch for Steel Materials demand per product", worksheet.lever_graphs_e2761); end
  def test_lever_graphs_d2762; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2762, 0.002); end
  def test_lever_graphs_e2762; assert_in_delta(0.0, (worksheet.lever_graphs_e2762||0), 0.002); end
  def test_lever_graphs_d2763; assert_equal("2050: Level 1", worksheet.lever_graphs_d2763); end
  def test_lever_graphs_e2763; assert_in_delta(0.0, (worksheet.lever_graphs_e2763||0), 0.002); end
  def test_lever_graphs_d2764; assert_equal("2050: Level 2", worksheet.lever_graphs_d2764); end
  def test_lever_graphs_e2764; assert_in_delta(0.005, worksheet.lever_graphs_e2764, 0.002); end
  def test_lever_graphs_d2765; assert_equal("2050: Level 3", worksheet.lever_graphs_d2765); end
  def test_lever_graphs_e2765; assert_in_delta(0.01, worksheet.lever_graphs_e2765, 0.002); end
  def test_lever_graphs_d2766; assert_equal("2050: Level 4", worksheet.lever_graphs_d2766); end
  def test_lever_graphs_e2766; assert_in_delta(0.02, worksheet.lever_graphs_e2766, 0.002); end
  def test_lever_graphs_d2772; assert_equal("Title", worksheet.lever_graphs_d2772); end
  def test_lever_graphs_e2772; assert_equal("Material switch for Steel Materials demand per product", worksheet.lever_graphs_e2772); end
  def test_lever_graphs_f2772; assert_equal("Material switch for Cement Materials demand per product", worksheet.lever_graphs_f2772); end
  def test_lever_graphs_d2773; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2773, 0.002); end
  def test_lever_graphs_e2773; assert_in_delta(0.0, (worksheet.lever_graphs_e2773||0), 0.002); end
  def test_lever_graphs_f2773; assert_in_delta(0.0, (worksheet.lever_graphs_f2773||0), 0.002); end
  def test_lever_graphs_d2774; assert_equal("2050: Level 1", worksheet.lever_graphs_d2774); end
  def test_lever_graphs_e2774; assert_in_delta(0.0, (worksheet.lever_graphs_e2774||0), 0.002); end
  def test_lever_graphs_f2774; assert_in_delta(0.0, (worksheet.lever_graphs_f2774||0), 0.002); end
  def test_lever_graphs_d2775; assert_equal("2050: Level 2", worksheet.lever_graphs_d2775); end
  def test_lever_graphs_e2775; assert_in_delta(0.0025, worksheet.lever_graphs_e2775, 0.002); end
  def test_lever_graphs_f2775; assert_in_delta(0.0125, worksheet.lever_graphs_f2775, 0.002); end
  def test_lever_graphs_d2776; assert_equal("2050: Level 3", worksheet.lever_graphs_d2776); end
  def test_lever_graphs_e2776; assert_in_delta(0.005, worksheet.lever_graphs_e2776, 0.002); end
  def test_lever_graphs_f2776; assert_in_delta(0.025, worksheet.lever_graphs_f2776, 0.002); end
  def test_lever_graphs_d2777; assert_equal("2050: Level 4", worksheet.lever_graphs_d2777); end
  def test_lever_graphs_e2777; assert_in_delta(0.01, worksheet.lever_graphs_e2777, 0.002); end
  def test_lever_graphs_f2777; assert_in_delta(0.05, worksheet.lever_graphs_f2777, 0.002); end
  def test_lever_graphs_d2750; assert_equal("Title", worksheet.lever_graphs_d2750); end
  def test_lever_graphs_e2750; assert_equal("Material switch for Steel Materials demand per product", worksheet.lever_graphs_e2750); end
  def test_lever_graphs_f2750; assert_equal("Material switch for Cement Materials demand per product", worksheet.lever_graphs_f2750); end
  def test_lever_graphs_d2751; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2751, 0.002); end
  def test_lever_graphs_e2751; assert_in_delta(0.0, (worksheet.lever_graphs_e2751||0), 0.002); end
  def test_lever_graphs_f2751; assert_in_delta(0.0, (worksheet.lever_graphs_f2751||0), 0.002); end
  def test_lever_graphs_d2752; assert_equal("2050: Level 1", worksheet.lever_graphs_d2752); end
  def test_lever_graphs_e2752; assert_in_delta(0.0, (worksheet.lever_graphs_e2752||0), 0.002); end
  def test_lever_graphs_f2752; assert_in_delta(0.0, (worksheet.lever_graphs_f2752||0), 0.002); end
  def test_lever_graphs_d2753; assert_equal("2050: Level 2", worksheet.lever_graphs_d2753); end
  def test_lever_graphs_e2753; assert_in_delta(0.0175, worksheet.lever_graphs_e2753, 0.002); end
  def test_lever_graphs_f2753; assert_in_delta(0.04, worksheet.lever_graphs_f2753, 0.002); end
  def test_lever_graphs_d2754; assert_equal("2050: Level 3", worksheet.lever_graphs_d2754); end
  def test_lever_graphs_e2754; assert_in_delta(0.035, worksheet.lever_graphs_e2754, 0.002); end
  def test_lever_graphs_f2754; assert_in_delta(0.08, worksheet.lever_graphs_f2754, 0.002); end
  def test_lever_graphs_d2755; assert_equal("2050: Level 4", worksheet.lever_graphs_d2755); end
  def test_lever_graphs_e2755; assert_in_delta(0.07, worksheet.lever_graphs_e2755, 0.002); end
  def test_lever_graphs_f2755; assert_in_delta(0.16, worksheet.lever_graphs_f2755, 0.002); end
  def test_lever_graphs_b2999; assert_equal("Description", worksheet.lever_graphs_b2999); end
  def test_lever_graphs_c2999; assert_equal("1975", worksheet.lever_graphs_c2999); end
  def test_lever_graphs_d2999; assert_equal("1980", worksheet.lever_graphs_d2999); end
  def test_lever_graphs_e2999; assert_equal("1985", worksheet.lever_graphs_e2999); end
  def test_lever_graphs_f2999; assert_equal("1990", worksheet.lever_graphs_f2999); end
  def test_lever_graphs_g2999; assert_equal("1995", worksheet.lever_graphs_g2999); end
  def test_lever_graphs_h2999; assert_equal("2000", worksheet.lever_graphs_h2999); end
  def test_lever_graphs_i2999; assert_equal("2005", worksheet.lever_graphs_i2999); end
  def test_lever_graphs_j2999; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2999, 0.002); end
  def test_lever_graphs_k2999; assert_equal("2011", worksheet.lever_graphs_k2999); end
  def test_lever_graphs_l2999; assert_equal("2015", worksheet.lever_graphs_l2999); end
  def test_lever_graphs_m2999; assert_equal("2020", worksheet.lever_graphs_m2999); end
  def test_lever_graphs_n2999; assert_equal("2025", worksheet.lever_graphs_n2999); end
  def test_lever_graphs_o2999; assert_equal("2030", worksheet.lever_graphs_o2999); end
  def test_lever_graphs_p2999; assert_equal("2035", worksheet.lever_graphs_p2999); end
  def test_lever_graphs_q2999; assert_equal("2040", worksheet.lever_graphs_q2999); end
  def test_lever_graphs_r2999; assert_equal("2045", worksheet.lever_graphs_r2999); end
  def test_lever_graphs_s2999; assert_equal("2050", worksheet.lever_graphs_s2999); end
  def test_lever_graphs_b3000; assert_equal("Historic data", worksheet.lever_graphs_b3000); end
  def test_lever_graphs_b3001; assert_in_delta(1.0, worksheet.lever_graphs_b3001, 0.002); end
  def test_lever_graphs_k3001; assert_in_delta(0.0, (worksheet.lever_graphs_k3001||0), 0.002); end
  def test_lever_graphs_l3001; assert_in_delta(0.00427350427350427, worksheet.lever_graphs_l3001, 0.002); end
  def test_lever_graphs_m3001; assert_in_delta(0.0036630036630036595, worksheet.lever_graphs_m3001, 0.002); end
  def test_lever_graphs_n3001; assert_in_delta(0.0030525030525030495, worksheet.lever_graphs_n3001, 0.002); end
  def test_lever_graphs_o3001; assert_in_delta(0.00244200244200244, worksheet.lever_graphs_o3001, 0.002); end
  def test_lever_graphs_p3001; assert_in_delta(0.0018315018315018298, worksheet.lever_graphs_p3001, 0.002); end
  def test_lever_graphs_q3001; assert_in_delta(0.0012210012210012197, worksheet.lever_graphs_q3001, 0.002); end
  def test_lever_graphs_r3001; assert_in_delta(0.0006105006105006101, worksheet.lever_graphs_r3001, 0.002); end
  def test_lever_graphs_s3001; assert_in_delta(0.0, (worksheet.lever_graphs_s3001||0), 0.002); end
  def test_lever_graphs_b3002; assert_in_epsilon(2.0, worksheet.lever_graphs_b3002, 0.002); end
  def test_lever_graphs_k3002; assert_in_delta(0.0, (worksheet.lever_graphs_k3002||0), 0.002); end
  def test_lever_graphs_l3002; assert_in_delta(0.00427350427350427, worksheet.lever_graphs_l3002, 0.002); end
  def test_lever_graphs_m3002; assert_in_delta(0.009615384615384606, worksheet.lever_graphs_m3002, 0.002); end
  def test_lever_graphs_n3002; assert_in_delta(0.014957264957264942, worksheet.lever_graphs_n3002, 0.002); end
  def test_lever_graphs_o3002; assert_in_delta(0.02029914529914528, worksheet.lever_graphs_o3002, 0.002); end
  def test_lever_graphs_p3002; assert_in_delta(0.025641025641025616, worksheet.lever_graphs_p3002, 0.002); end
  def test_lever_graphs_q3002; assert_in_delta(0.030982905982905953, worksheet.lever_graphs_q3002, 0.002); end
  def test_lever_graphs_r3002; assert_in_delta(0.03632478632478629, worksheet.lever_graphs_r3002, 0.002); end
  def test_lever_graphs_s3002; assert_in_delta(0.04166666666666663, worksheet.lever_graphs_s3002, 0.002); end
  def test_lever_graphs_b3003; assert_in_epsilon(3.0, worksheet.lever_graphs_b3003, 0.002); end
  def test_lever_graphs_k3003; assert_in_delta(0.0, (worksheet.lever_graphs_k3003||0), 0.002); end
  def test_lever_graphs_l3003; assert_in_delta(0.00427350427350427, worksheet.lever_graphs_l3003, 0.002); end
  def test_lever_graphs_m3003; assert_in_delta(0.015567765567765561, worksheet.lever_graphs_m3003, 0.002); end
  def test_lever_graphs_n3003; assert_in_delta(0.026862026862026853, worksheet.lever_graphs_n3003, 0.002); end
  def test_lever_graphs_o3003; assert_in_delta(0.03815628815628815, worksheet.lever_graphs_o3003, 0.002); end
  def test_lever_graphs_p3003; assert_in_delta(0.04945054945054944, worksheet.lever_graphs_p3003, 0.002); end
  def test_lever_graphs_q3003; assert_in_delta(0.06074481074481074, worksheet.lever_graphs_q3003, 0.002); end
  def test_lever_graphs_r3003; assert_in_delta(0.07203907203907203, worksheet.lever_graphs_r3003, 0.002); end
  def test_lever_graphs_s3003; assert_in_delta(0.08333333333333333, worksheet.lever_graphs_s3003, 0.002); end
  def test_lever_graphs_b3004; assert_in_epsilon(4.0, worksheet.lever_graphs_b3004, 0.002); end
  def test_lever_graphs_k3004; assert_in_delta(0.0, (worksheet.lever_graphs_k3004||0), 0.002); end
  def test_lever_graphs_l3004; assert_in_delta(0.00427350427350427, worksheet.lever_graphs_l3004, 0.002); end
  def test_lever_graphs_m3004; assert_in_delta(0.12667887667887667, worksheet.lever_graphs_m3004, 0.002); end
  def test_lever_graphs_n3004; assert_in_delta(0.2490842490842491, worksheet.lever_graphs_n3004, 0.002); end
  def test_lever_graphs_o3004; assert_in_delta(0.3714896214896215, worksheet.lever_graphs_o3004, 0.002); end
  def test_lever_graphs_p3004; assert_in_delta(0.4938949938949939, worksheet.lever_graphs_p3004, 0.002); end
  def test_lever_graphs_q3004; assert_in_delta(0.6163003663003663, worksheet.lever_graphs_q3004, 0.002); end
  def test_lever_graphs_r3004; assert_in_delta(0.7387057387057387, worksheet.lever_graphs_r3004, 0.002); end
  def test_lever_graphs_s3004; assert_in_delta(0.8611111111111112, worksheet.lever_graphs_s3004, 0.002); end
  def test_lever_graphs_c2923; assert_equal("1975", worksheet.lever_graphs_c2923); end
  def test_lever_graphs_d2923; assert_equal("1980", worksheet.lever_graphs_d2923); end
  def test_lever_graphs_e2923; assert_equal("1985", worksheet.lever_graphs_e2923); end
  def test_lever_graphs_f2923; assert_equal("1990", worksheet.lever_graphs_f2923); end
  def test_lever_graphs_g2923; assert_equal("1995", worksheet.lever_graphs_g2923); end
  def test_lever_graphs_h2923; assert_equal("2000", worksheet.lever_graphs_h2923); end
  def test_lever_graphs_i2923; assert_equal("2005", worksheet.lever_graphs_i2923); end
  def test_lever_graphs_j2923; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2923, 0.002); end
  def test_lever_graphs_k2923; assert_equal("2011", worksheet.lever_graphs_k2923); end
  def test_lever_graphs_l2923; assert_equal("2015", worksheet.lever_graphs_l2923); end
  def test_lever_graphs_m2923; assert_equal("2020", worksheet.lever_graphs_m2923); end
  def test_lever_graphs_n2923; assert_equal("2025", worksheet.lever_graphs_n2923); end
  def test_lever_graphs_o2923; assert_equal("2030", worksheet.lever_graphs_o2923); end
  def test_lever_graphs_p2923; assert_equal("2035", worksheet.lever_graphs_p2923); end
  def test_lever_graphs_q2923; assert_equal("2040", worksheet.lever_graphs_q2923); end
  def test_lever_graphs_r2923; assert_equal("2045", worksheet.lever_graphs_r2923); end
  def test_lever_graphs_s2923; assert_equal("2050", worksheet.lever_graphs_s2923); end
  def test_lever_graphs_b2924; assert_equal("Historic data", worksheet.lever_graphs_b2924); end
  def test_lever_graphs_b2925; assert_in_delta(1.0, worksheet.lever_graphs_b2925, 0.002); end
  def test_lever_graphs_k2925; assert_in_delta(0.0, (worksheet.lever_graphs_k2925||0), 0.002); end
  def test_lever_graphs_l2925; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2925, 0.002); end
  def test_lever_graphs_m2925; assert_in_delta(0.004395604395604396, worksheet.lever_graphs_m2925, 0.002); end
  def test_lever_graphs_n2925; assert_in_delta(0.003663003663003663, worksheet.lever_graphs_n2925, 0.002); end
  def test_lever_graphs_o2925; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_o2925, 0.002); end
  def test_lever_graphs_p2925; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_p2925, 0.002); end
  def test_lever_graphs_q2925; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_q2925, 0.002); end
  def test_lever_graphs_r2925; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_r2925, 0.002); end
  def test_lever_graphs_s2925; assert_in_delta(0.0, (worksheet.lever_graphs_s2925||0), 0.002); end
  def test_lever_graphs_b2926; assert_in_epsilon(2.0, worksheet.lever_graphs_b2926, 0.002); end
  def test_lever_graphs_k2926; assert_in_delta(0.0, (worksheet.lever_graphs_k2926||0), 0.002); end
  def test_lever_graphs_l2926; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2926, 0.002); end
  def test_lever_graphs_m2926; assert_in_delta(0.011538461538461539, worksheet.lever_graphs_m2926, 0.002); end
  def test_lever_graphs_n2926; assert_in_delta(0.017948717948717947, worksheet.lever_graphs_n2926, 0.002); end
  def test_lever_graphs_o2926; assert_in_delta(0.02435897435897436, worksheet.lever_graphs_o2926, 0.002); end
  def test_lever_graphs_p2926; assert_in_delta(0.030769230769230767, worksheet.lever_graphs_p2926, 0.002); end
  def test_lever_graphs_q2926; assert_in_delta(0.03717948717948718, worksheet.lever_graphs_q2926, 0.002); end
  def test_lever_graphs_r2926; assert_in_delta(0.043589743589743594, worksheet.lever_graphs_r2926, 0.002); end
  def test_lever_graphs_s2926; assert_in_delta(0.05, worksheet.lever_graphs_s2926, 0.002); end
  def test_lever_graphs_b2927; assert_in_epsilon(3.0, worksheet.lever_graphs_b2927, 0.002); end
  def test_lever_graphs_k2927; assert_in_delta(0.0, (worksheet.lever_graphs_k2927||0), 0.002); end
  def test_lever_graphs_l2927; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2927, 0.002); end
  def test_lever_graphs_m2927; assert_in_delta(0.018681318681318684, worksheet.lever_graphs_m2927, 0.002); end
  def test_lever_graphs_n2927; assert_in_delta(0.03223443223443224, worksheet.lever_graphs_n2927, 0.002); end
  def test_lever_graphs_o2927; assert_in_delta(0.0457875457875458, worksheet.lever_graphs_o2927, 0.002); end
  def test_lever_graphs_p2927; assert_in_delta(0.05934065934065935, worksheet.lever_graphs_p2927, 0.002); end
  def test_lever_graphs_q2927; assert_in_delta(0.0728937728937729, worksheet.lever_graphs_q2927, 0.002); end
  def test_lever_graphs_r2927; assert_in_delta(0.08644688644688646, worksheet.lever_graphs_r2927, 0.002); end
  def test_lever_graphs_s2927; assert_in_delta(0.1, worksheet.lever_graphs_s2927, 0.002); end
  def test_lever_graphs_b2928; assert_in_epsilon(4.0, worksheet.lever_graphs_b2928, 0.002); end
  def test_lever_graphs_k2928; assert_in_delta(0.0, (worksheet.lever_graphs_k2928||0), 0.002); end
  def test_lever_graphs_l2928; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2928, 0.002); end
  def test_lever_graphs_m2928; assert_in_delta(0.03296703296703297, worksheet.lever_graphs_m2928, 0.002); end
  def test_lever_graphs_n2928; assert_in_delta(0.060805860805860805, worksheet.lever_graphs_n2928, 0.002); end
  def test_lever_graphs_o2928; assert_in_delta(0.08864468864468864, worksheet.lever_graphs_o2928, 0.002); end
  def test_lever_graphs_p2928; assert_in_delta(0.11648351648351647, worksheet.lever_graphs_p2928, 0.002); end
  def test_lever_graphs_q2928; assert_in_delta(0.14432234432234434, worksheet.lever_graphs_q2928, 0.002); end
  def test_lever_graphs_r2928; assert_in_delta(0.17216117216117216, worksheet.lever_graphs_r2928, 0.002); end
  def test_lever_graphs_s2928; assert_in_delta(0.2, worksheet.lever_graphs_s2928, 0.002); end
  def test_lever_graphs_c2961; assert_equal("1975", worksheet.lever_graphs_c2961); end
  def test_lever_graphs_d2961; assert_equal("1980", worksheet.lever_graphs_d2961); end
  def test_lever_graphs_e2961; assert_equal("1985", worksheet.lever_graphs_e2961); end
  def test_lever_graphs_f2961; assert_equal("1990", worksheet.lever_graphs_f2961); end
  def test_lever_graphs_g2961; assert_equal("1995", worksheet.lever_graphs_g2961); end
  def test_lever_graphs_h2961; assert_equal("2000", worksheet.lever_graphs_h2961); end
  def test_lever_graphs_i2961; assert_equal("2005", worksheet.lever_graphs_i2961); end
  def test_lever_graphs_j2961; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2961, 0.002); end
  def test_lever_graphs_k2961; assert_equal("2011", worksheet.lever_graphs_k2961); end
  def test_lever_graphs_l2961; assert_equal("2015", worksheet.lever_graphs_l2961); end
  def test_lever_graphs_m2961; assert_equal("2020", worksheet.lever_graphs_m2961); end
  def test_lever_graphs_n2961; assert_equal("2025", worksheet.lever_graphs_n2961); end
  def test_lever_graphs_o2961; assert_equal("2030", worksheet.lever_graphs_o2961); end
  def test_lever_graphs_p2961; assert_equal("2035", worksheet.lever_graphs_p2961); end
  def test_lever_graphs_q2961; assert_equal("2040", worksheet.lever_graphs_q2961); end
  def test_lever_graphs_r2961; assert_equal("2045", worksheet.lever_graphs_r2961); end
  def test_lever_graphs_s2961; assert_equal("2050", worksheet.lever_graphs_s2961); end
  def test_lever_graphs_b2962; assert_equal("Historic data", worksheet.lever_graphs_b2962); end
  def test_lever_graphs_b2963; assert_in_delta(1.0, worksheet.lever_graphs_b2963, 0.002); end
  def test_lever_graphs_k2963; assert_in_delta(0.0, (worksheet.lever_graphs_k2963||0), 0.002); end
  def test_lever_graphs_l2963; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2963, 0.002); end
  def test_lever_graphs_m2963; assert_in_delta(0.004395604395604396, worksheet.lever_graphs_m2963, 0.002); end
  def test_lever_graphs_n2963; assert_in_delta(0.003663003663003663, worksheet.lever_graphs_n2963, 0.002); end
  def test_lever_graphs_o2963; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_o2963, 0.002); end
  def test_lever_graphs_p2963; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_p2963, 0.002); end
  def test_lever_graphs_q2963; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_q2963, 0.002); end
  def test_lever_graphs_r2963; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_r2963, 0.002); end
  def test_lever_graphs_s2963; assert_in_delta(0.0, (worksheet.lever_graphs_s2963||0), 0.002); end
  def test_lever_graphs_b2964; assert_in_epsilon(2.0, worksheet.lever_graphs_b2964, 0.002); end
  def test_lever_graphs_k2964; assert_in_delta(0.0, (worksheet.lever_graphs_k2964||0), 0.002); end
  def test_lever_graphs_l2964; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2964, 0.002); end
  def test_lever_graphs_m2964; assert_in_delta(0.011538461538461539, worksheet.lever_graphs_m2964, 0.002); end
  def test_lever_graphs_n2964; assert_in_delta(0.017948717948717947, worksheet.lever_graphs_n2964, 0.002); end
  def test_lever_graphs_o2964; assert_in_delta(0.02435897435897436, worksheet.lever_graphs_o2964, 0.002); end
  def test_lever_graphs_p2964; assert_in_delta(0.030769230769230767, worksheet.lever_graphs_p2964, 0.002); end
  def test_lever_graphs_q2964; assert_in_delta(0.03717948717948718, worksheet.lever_graphs_q2964, 0.002); end
  def test_lever_graphs_r2964; assert_in_delta(0.043589743589743594, worksheet.lever_graphs_r2964, 0.002); end
  def test_lever_graphs_s2964; assert_in_delta(0.05, worksheet.lever_graphs_s2964, 0.002); end
  def test_lever_graphs_b2965; assert_in_epsilon(3.0, worksheet.lever_graphs_b2965, 0.002); end
  def test_lever_graphs_k2965; assert_in_delta(0.0, (worksheet.lever_graphs_k2965||0), 0.002); end
  def test_lever_graphs_l2965; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2965, 0.002); end
  def test_lever_graphs_m2965; assert_in_delta(0.018681318681318684, worksheet.lever_graphs_m2965, 0.002); end
  def test_lever_graphs_n2965; assert_in_delta(0.03223443223443224, worksheet.lever_graphs_n2965, 0.002); end
  def test_lever_graphs_o2965; assert_in_delta(0.0457875457875458, worksheet.lever_graphs_o2965, 0.002); end
  def test_lever_graphs_p2965; assert_in_delta(0.05934065934065935, worksheet.lever_graphs_p2965, 0.002); end
  def test_lever_graphs_q2965; assert_in_delta(0.0728937728937729, worksheet.lever_graphs_q2965, 0.002); end
  def test_lever_graphs_r2965; assert_in_delta(0.08644688644688646, worksheet.lever_graphs_r2965, 0.002); end
  def test_lever_graphs_s2965; assert_in_delta(0.1, worksheet.lever_graphs_s2965, 0.002); end
  def test_lever_graphs_b2966; assert_in_epsilon(4.0, worksheet.lever_graphs_b2966, 0.002); end
  def test_lever_graphs_k2966; assert_in_delta(0.0, (worksheet.lever_graphs_k2966||0), 0.002); end
  def test_lever_graphs_l2966; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2966, 0.002); end
  def test_lever_graphs_m2966; assert_in_delta(0.03296703296703297, worksheet.lever_graphs_m2966, 0.002); end
  def test_lever_graphs_n2966; assert_in_delta(0.060805860805860805, worksheet.lever_graphs_n2966, 0.002); end
  def test_lever_graphs_o2966; assert_in_delta(0.08864468864468864, worksheet.lever_graphs_o2966, 0.002); end
  def test_lever_graphs_p2966; assert_in_delta(0.11648351648351647, worksheet.lever_graphs_p2966, 0.002); end
  def test_lever_graphs_q2966; assert_in_delta(0.14432234432234434, worksheet.lever_graphs_q2966, 0.002); end
  def test_lever_graphs_r2966; assert_in_delta(0.17216117216117216, worksheet.lever_graphs_r2966, 0.002); end
  def test_lever_graphs_s2966; assert_in_delta(0.2, worksheet.lever_graphs_s2966, 0.002); end
  def test_lever_graphs_c2864; assert_equal("1975", worksheet.lever_graphs_c2864); end
  def test_lever_graphs_d2864; assert_equal("1980", worksheet.lever_graphs_d2864); end
  def test_lever_graphs_e2864; assert_equal("1985", worksheet.lever_graphs_e2864); end
  def test_lever_graphs_f2864; assert_equal("1990", worksheet.lever_graphs_f2864); end
  def test_lever_graphs_g2864; assert_equal("1995", worksheet.lever_graphs_g2864); end
  def test_lever_graphs_h2864; assert_equal("2000", worksheet.lever_graphs_h2864); end
  def test_lever_graphs_i2864; assert_equal("2005", worksheet.lever_graphs_i2864); end
  def test_lever_graphs_j2864; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2864, 0.002); end
  def test_lever_graphs_k2864; assert_equal("2011", worksheet.lever_graphs_k2864); end
  def test_lever_graphs_l2864; assert_equal("2015", worksheet.lever_graphs_l2864); end
  def test_lever_graphs_m2864; assert_equal("2020", worksheet.lever_graphs_m2864); end
  def test_lever_graphs_n2864; assert_equal("2025", worksheet.lever_graphs_n2864); end
  def test_lever_graphs_o2864; assert_equal("2030", worksheet.lever_graphs_o2864); end
  def test_lever_graphs_p2864; assert_equal("2035", worksheet.lever_graphs_p2864); end
  def test_lever_graphs_q2864; assert_equal("2040", worksheet.lever_graphs_q2864); end
  def test_lever_graphs_r2864; assert_equal("2045", worksheet.lever_graphs_r2864); end
  def test_lever_graphs_s2864; assert_equal("2050", worksheet.lever_graphs_s2864); end
  def test_lever_graphs_b2865; assert_equal("Historic data", worksheet.lever_graphs_b2865); end
  def test_lever_graphs_b2866; assert_in_delta(1.0, worksheet.lever_graphs_b2866, 0.002); end
  def test_lever_graphs_k2866; assert_in_delta(0.0, (worksheet.lever_graphs_k2866||0), 0.002); end
  def test_lever_graphs_l2866; assert_in_delta(0.0021736326216516143, worksheet.lever_graphs_l2866, 0.002); end
  def test_lever_graphs_m2866; assert_in_delta(0.0018631136757013837, worksheet.lever_graphs_m2866, 0.002); end
  def test_lever_graphs_n2866; assert_in_delta(0.001552594729751153, worksheet.lever_graphs_n2866, 0.002); end
  def test_lever_graphs_o2866; assert_in_delta(0.0012420757838009222, worksheet.lever_graphs_o2866, 0.002); end
  def test_lever_graphs_p2866; assert_in_delta(0.0009315568378506917, worksheet.lever_graphs_p2866, 0.002); end
  def test_lever_graphs_q2866; assert_in_delta(0.0006210378919004611, worksheet.lever_graphs_q2866, 0.002); end
  def test_lever_graphs_r2866; assert_in_delta(0.00031051894595023033, worksheet.lever_graphs_r2866, 0.002); end
  def test_lever_graphs_s2866; assert_in_delta(0.0, (worksheet.lever_graphs_s2866||0), 0.002); end
  def test_lever_graphs_b2867; assert_in_epsilon(2.0, worksheet.lever_graphs_b2867, 0.002); end
  def test_lever_graphs_k2867; assert_in_delta(0.0, (worksheet.lever_graphs_k2867||0), 0.002); end
  def test_lever_graphs_l2867; assert_in_delta(0.0021736326216516143, worksheet.lever_graphs_l2867, 0.002); end
  def test_lever_graphs_m2867; assert_in_delta(0.004890673398716132, worksheet.lever_graphs_m2867, 0.002); end
  def test_lever_graphs_n2867; assert_in_delta(0.00760771417578065, worksheet.lever_graphs_n2867, 0.002); end
  def test_lever_graphs_o2867; assert_in_delta(0.010324754952845168, worksheet.lever_graphs_o2867, 0.002); end
  def test_lever_graphs_p2867; assert_in_delta(0.013041795729909685, worksheet.lever_graphs_p2867, 0.002); end
  def test_lever_graphs_q2867; assert_in_delta(0.015758836506974204, worksheet.lever_graphs_q2867, 0.002); end
  def test_lever_graphs_r2867; assert_in_delta(0.01847587728403872, worksheet.lever_graphs_r2867, 0.002); end
  def test_lever_graphs_s2867; assert_in_delta(0.02119291806110324, worksheet.lever_graphs_s2867, 0.002); end
  def test_lever_graphs_b2868; assert_in_epsilon(3.0, worksheet.lever_graphs_b2868, 0.002); end
  def test_lever_graphs_k2868; assert_in_delta(0.0, (worksheet.lever_graphs_k2868||0), 0.002); end
  def test_lever_graphs_l2868; assert_in_delta(0.0021736326216516143, worksheet.lever_graphs_l2868, 0.002); end
  def test_lever_graphs_m2868; assert_in_delta(0.011700099533414884, worksheet.lever_graphs_m2868, 0.002); end
  def test_lever_graphs_n2868; assert_in_delta(0.021226566445178154, worksheet.lever_graphs_n2868, 0.002); end
  def test_lever_graphs_o2868; assert_in_delta(0.03075303335694142, worksheet.lever_graphs_o2868, 0.002); end
  def test_lever_graphs_p2868; assert_in_delta(0.04027950026870469, worksheet.lever_graphs_p2868, 0.002); end
  def test_lever_graphs_q2868; assert_in_delta(0.04980596718046796, worksheet.lever_graphs_q2868, 0.002); end
  def test_lever_graphs_r2868; assert_in_delta(0.059332434092231226, worksheet.lever_graphs_r2868, 0.002); end
  def test_lever_graphs_s2868; assert_in_delta(0.0688589010039945, worksheet.lever_graphs_s2868, 0.002); end
  def test_lever_graphs_b2869; assert_in_epsilon(4.0, worksheet.lever_graphs_b2869, 0.002); end
  def test_lever_graphs_k2869; assert_in_delta(0.0, (worksheet.lever_graphs_k2869||0), 0.002); end
  def test_lever_graphs_l2869; assert_in_delta(0.0021736326216516143, worksheet.lever_graphs_l2869, 0.002); end
  def test_lever_graphs_m2869; assert_in_delta(0.03182872185571095, worksheet.lever_graphs_m2869, 0.002); end
  def test_lever_graphs_n2869; assert_in_delta(0.06148381108977028, worksheet.lever_graphs_n2869, 0.002); end
  def test_lever_graphs_o2869; assert_in_delta(0.09113890032382961, worksheet.lever_graphs_o2869, 0.002); end
  def test_lever_graphs_p2869; assert_in_delta(0.12079398955788895, worksheet.lever_graphs_p2869, 0.002); end
  def test_lever_graphs_q2869; assert_in_delta(0.1504490787919483, worksheet.lever_graphs_q2869, 0.002); end
  def test_lever_graphs_r2869; assert_in_delta(0.18010416802600762, worksheet.lever_graphs_r2869, 0.002); end
  def test_lever_graphs_s2869; assert_in_delta(0.20975925726006694, worksheet.lever_graphs_s2869, 0.002); end
  def test_lever_graphs_b2400; assert_equal("Year", worksheet.lever_graphs_b2400); end
  def test_lever_graphs_c2400; assert_equal("Level", worksheet.lever_graphs_c2400); end
  def test_lever_graphs_d2400; assert_equal("Title", worksheet.lever_graphs_d2400); end
  def test_lever_graphs_e2400; assert_equal("Batteries", worksheet.lever_graphs_e2400); end
  def test_lever_graphs_f2400; assert_equal("Residential buildings", worksheet.lever_graphs_f2400); end
  def test_lever_graphs_g2400; assert_equal("Other buildings", worksheet.lever_graphs_g2400); end
  def test_lever_graphs_h2400; assert_equal("Infrastructure", worksheet.lever_graphs_h2400); end
  def test_lever_graphs_i2400; assert_equal("Mechanical equipments", worksheet.lever_graphs_i2400); end
  def test_lever_graphs_j2400; assert_equal("Appliance", worksheet.lever_graphs_j2400); end
  def test_lever_graphs_k2400; assert_equal("Print & graphic paper", worksheet.lever_graphs_k2400); end
  def test_lever_graphs_l2400; assert_equal("Metal goods", worksheet.lever_graphs_l2400); end
  def test_lever_graphs_m2400; assert_equal("Consumer packaging", worksheet.lever_graphs_m2400); end
  def test_lever_graphs_n2400; assert_equal("Fertilizer", worksheet.lever_graphs_n2400); end
  def test_lever_graphs_o2400; assert_equal("Wind turbines", worksheet.lever_graphs_o2400); end
  def test_lever_graphs_p2400; assert_equal("PV panels", worksheet.lever_graphs_p2400); end
  def test_lever_graphs_q2400; assert_equal("Electrical equipment", worksheet.lever_graphs_q2400); end
  def test_lever_graphs_r2400; assert_equal("Electrical cables", worksheet.lever_graphs_r2400); end
  def test_lever_graphs_s2400; assert_equal("Pipes", worksheet.lever_graphs_s2400); end
  def test_lever_graphs_t2400; assert_equal("Other steel", worksheet.lever_graphs_t2400); end
  def test_lever_graphs_u2400; assert_equal("Other chemicals", worksheet.lever_graphs_u2400); end
  def test_lever_graphs_v2400; assert_equal("Other aluminium", worksheet.lever_graphs_v2400); end
  def test_lever_graphs_w2400; assert_equal("Other cement", worksheet.lever_graphs_w2400); end
  def test_lever_graphs_x2400; assert_equal("Other paper", worksheet.lever_graphs_x2400); end
  def test_lever_graphs_y2400; assert_equal("Other timber", worksheet.lever_graphs_y2400); end
  def test_lever_graphs_z2400; assert_equal("Other", worksheet.lever_graphs_z2400); end
  def test_lever_graphs_aa2400; assert_equal("Other steel", worksheet.lever_graphs_aa2400); end
  def test_lever_graphs_ab2400; assert_equal("Other chemicals", worksheet.lever_graphs_ab2400); end
  def test_lever_graphs_ac2400; assert_equal("Other aluminium", worksheet.lever_graphs_ac2400); end
  def test_lever_graphs_ad2400; assert_equal("Other cement", worksheet.lever_graphs_ad2400); end
  def test_lever_graphs_ae2400; assert_equal("Other paper", worksheet.lever_graphs_ae2400); end
  def test_lever_graphs_af2400; assert_equal("Other timber", worksheet.lever_graphs_af2400); end
  def test_lever_graphs_ag2400; assert_equal("Other", worksheet.lever_graphs_ag2400); end
  def test_lever_graphs_b2401; assert_in_epsilon(2011.0, worksheet.lever_graphs_b2401, 0.002); end
  def test_lever_graphs_c2401; assert_in_delta(1.0, worksheet.lever_graphs_c2401, 0.002); end
  def test_lever_graphs_d2401; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2401, 0.002); end
  def test_lever_graphs_e2401; assert_in_delta(1.0, worksheet.lever_graphs_e2401, 0.002); end
  def test_lever_graphs_f2401; assert_in_delta(1.0, worksheet.lever_graphs_f2401, 0.002); end
  def test_lever_graphs_g2401; assert_in_delta(1.0, worksheet.lever_graphs_g2401, 0.002); end
  def test_lever_graphs_h2401; assert_in_delta(1.0, worksheet.lever_graphs_h2401, 0.002); end
  def test_lever_graphs_i2401; assert_in_delta(1.0, worksheet.lever_graphs_i2401, 0.002); end
  def test_lever_graphs_j2401; assert_in_delta(1.0, worksheet.lever_graphs_j2401, 0.002); end
  def test_lever_graphs_k2401; assert_in_delta(1.0, worksheet.lever_graphs_k2401, 0.002); end
  def test_lever_graphs_l2401; assert_in_delta(1.0, worksheet.lever_graphs_l2401, 0.002); end
  def test_lever_graphs_m2401; assert_in_delta(1.0, worksheet.lever_graphs_m2401, 0.002); end
  def test_lever_graphs_n2401; assert_in_delta(1.0, worksheet.lever_graphs_n2401, 0.002); end
  def test_lever_graphs_o2401; assert_in_delta(1.0, worksheet.lever_graphs_o2401, 0.002); end
  def test_lever_graphs_p2401; assert_in_delta(1.0, worksheet.lever_graphs_p2401, 0.002); end
  def test_lever_graphs_q2401; assert_in_delta(1.0, worksheet.lever_graphs_q2401, 0.002); end
  def test_lever_graphs_r2401; assert_in_delta(1.0, worksheet.lever_graphs_r2401, 0.002); end
  def test_lever_graphs_s2401; assert_in_delta(1.0, worksheet.lever_graphs_s2401, 0.002); end
  def test_lever_graphs_t2401; assert_in_delta(1.0, worksheet.lever_graphs_t2401, 0.002); end
  def test_lever_graphs_u2401; assert_in_delta(1.0, worksheet.lever_graphs_u2401, 0.002); end
  def test_lever_graphs_v2401; assert_in_delta(1.0, worksheet.lever_graphs_v2401, 0.002); end
  def test_lever_graphs_w2401; assert_in_delta(1.0, worksheet.lever_graphs_w2401, 0.002); end
  def test_lever_graphs_x2401; assert_in_delta(1.0, worksheet.lever_graphs_x2401, 0.002); end
  def test_lever_graphs_y2401; assert_in_delta(1.0, worksheet.lever_graphs_y2401, 0.002); end
  def test_lever_graphs_z2401; assert_in_delta(1.0, worksheet.lever_graphs_z2401, 0.002); end
  def test_lever_graphs_aa2401; assert_in_delta(1.0, worksheet.lever_graphs_aa2401, 0.002); end
  def test_lever_graphs_ab2401; assert_in_delta(1.0, worksheet.lever_graphs_ab2401, 0.002); end
  def test_lever_graphs_ac2401; assert_in_delta(1.0, worksheet.lever_graphs_ac2401, 0.002); end
  def test_lever_graphs_ad2401; assert_in_delta(1.0, worksheet.lever_graphs_ad2401, 0.002); end
  def test_lever_graphs_ae2401; assert_in_delta(1.0, worksheet.lever_graphs_ae2401, 0.002); end
  def test_lever_graphs_af2401; assert_in_delta(1.0, worksheet.lever_graphs_af2401, 0.002); end
  def test_lever_graphs_ag2401; assert_in_delta(1.0, worksheet.lever_graphs_ag2401, 0.002); end
  def test_lever_graphs_b2402; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2402, 0.002); end
  def test_lever_graphs_c2402; assert_in_delta(1.0, worksheet.lever_graphs_c2402, 0.002); end
  def test_lever_graphs_d2402; assert_equal("2050: Level 1", worksheet.lever_graphs_d2402); end
  def test_lever_graphs_e2402; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_e2402, 0.002); end
  def test_lever_graphs_f2402; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_f2402, 0.002); end
  def test_lever_graphs_g2402; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_g2402, 0.002); end
  def test_lever_graphs_h2402; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_h2402, 0.002); end
  def test_lever_graphs_i2402; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_i2402, 0.002); end
  def test_lever_graphs_j2402; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_j2402, 0.002); end
  def test_lever_graphs_k2402; assert_in_epsilon(1.5080930768557264, worksheet.lever_graphs_k2402, 0.002); end
  def test_lever_graphs_l2402; assert_in_epsilon(1.645192447478974, worksheet.lever_graphs_l2402, 0.002); end
  def test_lever_graphs_m2402; assert_in_epsilon(1.5080930768557264, worksheet.lever_graphs_m2402, 0.002); end
  def test_lever_graphs_n2402; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_n2402, 0.002); end
  def test_lever_graphs_o2402; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_o2402, 0.002); end
  def test_lever_graphs_p2402; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_p2402, 0.002); end
  def test_lever_graphs_q2402; assert_in_epsilon(2.399238985906837, worksheet.lever_graphs_q2402, 0.002); end
  def test_lever_graphs_r2402; assert_in_epsilon(2.399238985906837, worksheet.lever_graphs_r2402, 0.002); end
  def test_lever_graphs_s2402; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_s2402, 0.002); end
  def test_lever_graphs_t2402; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_t2402, 0.002); end
  def test_lever_graphs_u2402; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_u2402, 0.002); end
  def test_lever_graphs_v2402; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_v2402, 0.002); end
  def test_lever_graphs_w2402; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_w2402, 0.002); end
  def test_lever_graphs_x2402; assert_in_epsilon(1.5080930768557264, worksheet.lever_graphs_x2402, 0.002); end
  def test_lever_graphs_y2402; assert_in_epsilon(2.399238985906837, worksheet.lever_graphs_y2402, 0.002); end
  def test_lever_graphs_z2402; assert_in_epsilon(2.399238985906837, worksheet.lever_graphs_z2402, 0.002); end
  def test_lever_graphs_aa2402; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_aa2402, 0.002); end
  def test_lever_graphs_ab2402; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ab2402, 0.002); end
  def test_lever_graphs_ac2402; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ac2402, 0.002); end
  def test_lever_graphs_ad2402; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ad2402, 0.002); end
  def test_lever_graphs_ae2402; assert_in_epsilon(1.5080930768557264, worksheet.lever_graphs_ae2402, 0.002); end
  def test_lever_graphs_af2402; assert_in_epsilon(2.399238985906837, worksheet.lever_graphs_af2402, 0.002); end
  def test_lever_graphs_ag2402; assert_in_epsilon(2.399238985906837, worksheet.lever_graphs_ag2402, 0.002); end
  def test_lever_graphs_b2403; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2403, 0.002); end
  def test_lever_graphs_c2403; assert_in_epsilon(2.0, worksheet.lever_graphs_c2403, 0.002); end
  def test_lever_graphs_d2403; assert_equal("2050: Level 2", worksheet.lever_graphs_d2403); end
  def test_lever_graphs_e2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_e2403, 0.002); end
  def test_lever_graphs_f2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_f2403, 0.002); end
  def test_lever_graphs_g2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_g2403, 0.002); end
  def test_lever_graphs_h2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_h2403, 0.002); end
  def test_lever_graphs_i2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_i2403, 0.002); end
  def test_lever_graphs_j2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_j2403, 0.002); end
  def test_lever_graphs_k2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_k2403, 0.002); end
  def test_lever_graphs_l2403; assert_in_epsilon(1.5080930768557264, worksheet.lever_graphs_l2403, 0.002); end
  def test_lever_graphs_m2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_m2403, 0.002); end
  def test_lever_graphs_n2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_n2403, 0.002); end
  def test_lever_graphs_o2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_o2403, 0.002); end
  def test_lever_graphs_p2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_p2403, 0.002); end
  def test_lever_graphs_q2403; assert_in_epsilon(2.0564905593487177, worksheet.lever_graphs_q2403, 0.002); end
  def test_lever_graphs_r2403; assert_in_epsilon(2.0564905593487177, worksheet.lever_graphs_r2403, 0.002); end
  def test_lever_graphs_s2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_s2403, 0.002); end
  def test_lever_graphs_t2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_t2403, 0.002); end
  def test_lever_graphs_u2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_u2403, 0.002); end
  def test_lever_graphs_v2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_v2403, 0.002); end
  def test_lever_graphs_w2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_w2403, 0.002); end
  def test_lever_graphs_x2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_x2403, 0.002); end
  def test_lever_graphs_y2403; assert_in_epsilon(2.0564905593487177, worksheet.lever_graphs_y2403, 0.002); end
  def test_lever_graphs_z2403; assert_in_epsilon(2.0564905593487177, worksheet.lever_graphs_z2403, 0.002); end
  def test_lever_graphs_aa2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_aa2403, 0.002); end
  def test_lever_graphs_ab2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ab2403, 0.002); end
  def test_lever_graphs_ac2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ac2403, 0.002); end
  def test_lever_graphs_ad2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ad2403, 0.002); end
  def test_lever_graphs_ae2403; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ae2403, 0.002); end
  def test_lever_graphs_af2403; assert_in_epsilon(2.0564905593487177, worksheet.lever_graphs_af2403, 0.002); end
  def test_lever_graphs_ag2403; assert_in_epsilon(2.0564905593487177, worksheet.lever_graphs_ag2403, 0.002); end
  def test_lever_graphs_b2404; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2404, 0.002); end
  def test_lever_graphs_c2404; assert_in_epsilon(3.0, worksheet.lever_graphs_c2404, 0.002); end
  def test_lever_graphs_d2404; assert_equal("2050: Level 3", worksheet.lever_graphs_d2404); end
  def test_lever_graphs_e2404; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_e2404, 0.002); end
  def test_lever_graphs_f2404; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_f2404, 0.002); end
  def test_lever_graphs_g2404; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_g2404, 0.002); end
  def test_lever_graphs_h2404; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_h2404, 0.002); end
  def test_lever_graphs_i2404; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_i2404, 0.002); end
  def test_lever_graphs_j2404; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_j2404, 0.002); end
  def test_lever_graphs_k2404; assert_in_epsilon(1.2338943356092307, worksheet.lever_graphs_k2404, 0.002); end
  def test_lever_graphs_l2404; assert_in_epsilon(1.2338943356092307, worksheet.lever_graphs_l2404, 0.002); end
  def test_lever_graphs_m2404; assert_in_epsilon(1.2338943356092307, worksheet.lever_graphs_m2404, 0.002); end
  def test_lever_graphs_n2404; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_n2404, 0.002); end
  def test_lever_graphs_o2404; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_o2404, 0.002); end
  def test_lever_graphs_p2404; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_p2404, 0.002); end
  def test_lever_graphs_q2404; assert_in_epsilon(1.713742132790598, worksheet.lever_graphs_q2404, 0.002); end
  def test_lever_graphs_r2404; assert_in_epsilon(1.713742132790598, worksheet.lever_graphs_r2404, 0.002); end
  def test_lever_graphs_s2404; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_s2404, 0.002); end
  def test_lever_graphs_t2404; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_t2404, 0.002); end
  def test_lever_graphs_u2404; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_u2404, 0.002); end
  def test_lever_graphs_v2404; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_v2404, 0.002); end
  def test_lever_graphs_w2404; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_w2404, 0.002); end
  def test_lever_graphs_x2404; assert_in_epsilon(1.2338943356092307, worksheet.lever_graphs_x2404, 0.002); end
  def test_lever_graphs_y2404; assert_in_epsilon(1.713742132790598, worksheet.lever_graphs_y2404, 0.002); end
  def test_lever_graphs_z2404; assert_in_epsilon(1.713742132790598, worksheet.lever_graphs_z2404, 0.002); end
  def test_lever_graphs_aa2404; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_aa2404, 0.002); end
  def test_lever_graphs_ab2404; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ab2404, 0.002); end
  def test_lever_graphs_ac2404; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ac2404, 0.002); end
  def test_lever_graphs_ad2404; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ad2404, 0.002); end
  def test_lever_graphs_ae2404; assert_in_epsilon(1.2338943356092307, worksheet.lever_graphs_ae2404, 0.002); end
  def test_lever_graphs_af2404; assert_in_epsilon(1.713742132790598, worksheet.lever_graphs_af2404, 0.002); end
  def test_lever_graphs_ag2404; assert_in_epsilon(1.713742132790598, worksheet.lever_graphs_ag2404, 0.002); end
  def test_lever_graphs_b2405; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2405, 0.002); end
  def test_lever_graphs_c2405; assert_in_epsilon(4.0, worksheet.lever_graphs_c2405, 0.002); end
  def test_lever_graphs_d2405; assert_equal("2050: Level 4", worksheet.lever_graphs_d2405); end
  def test_lever_graphs_e2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_e2405, 0.002); end
  def test_lever_graphs_f2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_f2405, 0.002); end
  def test_lever_graphs_g2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_g2405, 0.002); end
  def test_lever_graphs_h2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_h2405, 0.002); end
  def test_lever_graphs_i2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_i2405, 0.002); end
  def test_lever_graphs_j2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_j2405, 0.002); end
  def test_lever_graphs_k2405; assert_in_epsilon(1.0967949649859827, worksheet.lever_graphs_k2405, 0.002); end
  def test_lever_graphs_l2405; assert_in_epsilon(1.0967949649859827, worksheet.lever_graphs_l2405, 0.002); end
  def test_lever_graphs_m2405; assert_in_epsilon(1.0967949649859827, worksheet.lever_graphs_m2405, 0.002); end
  def test_lever_graphs_n2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_n2405, 0.002); end
  def test_lever_graphs_o2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_o2405, 0.002); end
  def test_lever_graphs_p2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_p2405, 0.002); end
  def test_lever_graphs_q2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_q2405, 0.002); end
  def test_lever_graphs_r2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_r2405, 0.002); end
  def test_lever_graphs_s2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_s2405, 0.002); end
  def test_lever_graphs_t2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_t2405, 0.002); end
  def test_lever_graphs_u2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_u2405, 0.002); end
  def test_lever_graphs_v2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_v2405, 0.002); end
  def test_lever_graphs_w2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_w2405, 0.002); end
  def test_lever_graphs_x2405; assert_in_epsilon(1.0967949649859827, worksheet.lever_graphs_x2405, 0.002); end
  def test_lever_graphs_y2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_y2405, 0.002); end
  def test_lever_graphs_z2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_z2405, 0.002); end
  def test_lever_graphs_aa2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_aa2405, 0.002); end
  def test_lever_graphs_ab2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ab2405, 0.002); end
  def test_lever_graphs_ac2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ac2405, 0.002); end
  def test_lever_graphs_ad2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ad2405, 0.002); end
  def test_lever_graphs_ae2405; assert_in_epsilon(1.0967949649859827, worksheet.lever_graphs_ae2405, 0.002); end
  def test_lever_graphs_af2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_af2405, 0.002); end
  def test_lever_graphs_ag2405; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ag2405, 0.002); end
  def test_lever_graphs_d1787; assert_equal("Title", worksheet.lever_graphs_d1787); end
  def test_lever_graphs_e1787; assert_equal("Open-cycle gas turbine power plant", worksheet.lever_graphs_e1787); end
  def test_lever_graphs_f1787; assert_equal("Combined cycle gas turbine power plant", worksheet.lever_graphs_f1787); end
  def test_lever_graphs_d1788; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1788, 0.002); end
  def test_lever_graphs_e1788; assert_in_delta(0.35, worksheet.lever_graphs_e1788, 0.002); end
  def test_lever_graphs_f1788; assert_in_delta(0.65, worksheet.lever_graphs_f1788, 0.002); end
  def test_lever_graphs_d1789; assert_equal("2050: Level 1", worksheet.lever_graphs_d1789); end
  def test_lever_graphs_e1789; assert_in_delta(0.61, worksheet.lever_graphs_e1789, 0.002); end
  def test_lever_graphs_f1789; assert_in_delta(0.39, worksheet.lever_graphs_f1789, 0.002); end
  def test_lever_graphs_d1790; assert_equal("2050: Level 2", worksheet.lever_graphs_d1790); end
  def test_lever_graphs_e1790; assert_in_delta(0.475, worksheet.lever_graphs_e1790, 0.002); end
  def test_lever_graphs_f1790; assert_in_delta(0.525, worksheet.lever_graphs_f1790, 0.002); end
  def test_lever_graphs_d1791; assert_equal("2050: Level 3", worksheet.lever_graphs_d1791); end
  def test_lever_graphs_e1791; assert_in_delta(0.175, worksheet.lever_graphs_e1791, 0.002); end
  def test_lever_graphs_f1791; assert_in_delta(0.825, worksheet.lever_graphs_f1791, 0.002); end
  def test_lever_graphs_d1792; assert_equal("2050: Level 4", worksheet.lever_graphs_d1792); end
  def test_lever_graphs_e1792; assert_in_delta(0.07, worksheet.lever_graphs_e1792, 0.002); end
  def test_lever_graphs_f1792; assert_in_delta(0.9299999999999999, worksheet.lever_graphs_f1792, 0.002); end
  def test_lever_graphs_c3841; assert_equal("1975", worksheet.lever_graphs_c3841); end
  def test_lever_graphs_d3841; assert_equal("1980", worksheet.lever_graphs_d3841); end
  def test_lever_graphs_e3841; assert_equal("1985", worksheet.lever_graphs_e3841); end
  def test_lever_graphs_f3841; assert_equal("1990", worksheet.lever_graphs_f3841); end
  def test_lever_graphs_g3841; assert_equal("1995", worksheet.lever_graphs_g3841); end
  def test_lever_graphs_h3841; assert_equal("2000", worksheet.lever_graphs_h3841); end
  def test_lever_graphs_i3841; assert_equal("2005", worksheet.lever_graphs_i3841); end
  def test_lever_graphs_j3841; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3841, 0.002); end
  def test_lever_graphs_k3841; assert_equal("2011", worksheet.lever_graphs_k3841); end
  def test_lever_graphs_l3841; assert_equal("2015", worksheet.lever_graphs_l3841); end
  def test_lever_graphs_m3841; assert_equal("2020", worksheet.lever_graphs_m3841); end
  def test_lever_graphs_n3841; assert_equal("2025", worksheet.lever_graphs_n3841); end
  def test_lever_graphs_o3841; assert_equal("2030", worksheet.lever_graphs_o3841); end
  def test_lever_graphs_p3841; assert_equal("2035", worksheet.lever_graphs_p3841); end
  def test_lever_graphs_q3841; assert_equal("2040", worksheet.lever_graphs_q3841); end
  def test_lever_graphs_r3841; assert_equal("2045", worksheet.lever_graphs_r3841); end
  def test_lever_graphs_s3841; assert_equal("2050", worksheet.lever_graphs_s3841); end
  def test_lever_graphs_b3842; assert_equal("Historic data", worksheet.lever_graphs_b3842); end
  def test_lever_graphs_b3843; assert_in_delta(1.0, worksheet.lever_graphs_b3843, 0.002); end
  def test_lever_graphs_k3843; assert_in_delta(0.0, (worksheet.lever_graphs_k3843||0), 0.002); end
  def test_lever_graphs_l3843; assert_in_delta(0.0, (worksheet.lever_graphs_l3843||0), 0.002); end
  def test_lever_graphs_m3843; assert_in_delta(0.0, (worksheet.lever_graphs_m3843||0), 0.002); end
  def test_lever_graphs_n3843; assert_in_delta(0.0, (worksheet.lever_graphs_n3843||0), 0.002); end
  def test_lever_graphs_o3843; assert_in_delta(0.0, (worksheet.lever_graphs_o3843||0), 0.002); end
  def test_lever_graphs_p3843; assert_in_delta(0.0, (worksheet.lever_graphs_p3843||0), 0.002); end
  def test_lever_graphs_q3843; assert_in_delta(0.0, (worksheet.lever_graphs_q3843||0), 0.002); end
  def test_lever_graphs_r3843; assert_in_delta(0.0, (worksheet.lever_graphs_r3843||0), 0.002); end
  def test_lever_graphs_s3843; assert_in_delta(0.0, (worksheet.lever_graphs_s3843||0), 0.002); end
  def test_lever_graphs_b3844; assert_in_epsilon(2.0, worksheet.lever_graphs_b3844, 0.002); end
  def test_lever_graphs_k3844; assert_in_delta(0.0, (worksheet.lever_graphs_k3844||0), 0.002); end
  def test_lever_graphs_l3844; assert_in_delta(0.0, (worksheet.lever_graphs_l3844||0), 0.002); end
  def test_lever_graphs_m3844; assert_in_delta(0.0, (worksheet.lever_graphs_m3844||0), 0.002); end
  def test_lever_graphs_n3844; assert_in_delta(0.0033000000000000004, worksheet.lever_graphs_n3844, 0.002); end
  def test_lever_graphs_o3844; assert_in_delta(0.0165, worksheet.lever_graphs_o3844, 0.002); end
  def test_lever_graphs_p3844; assert_in_delta(0.066, worksheet.lever_graphs_p3844, 0.002); end
  def test_lever_graphs_q3844; assert_in_delta(0.132, worksheet.lever_graphs_q3844, 0.002); end
  def test_lever_graphs_r3844; assert_in_delta(0.23099999999999998, worksheet.lever_graphs_r3844, 0.002); end
  def test_lever_graphs_s3844; assert_in_delta(0.33, worksheet.lever_graphs_s3844, 0.002); end
  def test_lever_graphs_b3845; assert_in_epsilon(3.0, worksheet.lever_graphs_b3845, 0.002); end
  def test_lever_graphs_k3845; assert_in_delta(0.0, (worksheet.lever_graphs_k3845||0), 0.002); end
  def test_lever_graphs_l3845; assert_in_delta(0.0, (worksheet.lever_graphs_l3845||0), 0.002); end
  def test_lever_graphs_m3845; assert_in_delta(0.0, (worksheet.lever_graphs_m3845||0), 0.002); end
  def test_lever_graphs_n3845; assert_in_delta(0.00825, worksheet.lever_graphs_n3845, 0.002); end
  def test_lever_graphs_o3845; assert_in_delta(0.04125, worksheet.lever_graphs_o3845, 0.002); end
  def test_lever_graphs_p3845; assert_in_delta(0.165, worksheet.lever_graphs_p3845, 0.002); end
  def test_lever_graphs_q3845; assert_in_delta(0.33, worksheet.lever_graphs_q3845, 0.002); end
  def test_lever_graphs_r3845; assert_in_delta(0.5774999999999999, worksheet.lever_graphs_r3845, 0.002); end
  def test_lever_graphs_s3845; assert_in_delta(0.825, worksheet.lever_graphs_s3845, 0.002); end
  def test_lever_graphs_b3846; assert_in_epsilon(4.0, worksheet.lever_graphs_b3846, 0.002); end
  def test_lever_graphs_k3846; assert_in_delta(0.0, (worksheet.lever_graphs_k3846||0), 0.002); end
  def test_lever_graphs_l3846; assert_in_delta(0.0, (worksheet.lever_graphs_l3846||0), 0.002); end
  def test_lever_graphs_m3846; assert_in_delta(0.0, (worksheet.lever_graphs_m3846||0), 0.002); end
  def test_lever_graphs_n3846; assert_in_delta(0.033, worksheet.lever_graphs_n3846, 0.002); end
  def test_lever_graphs_o3846; assert_in_delta(0.165, worksheet.lever_graphs_o3846, 0.002); end
  def test_lever_graphs_p3846; assert_in_delta(0.66, worksheet.lever_graphs_p3846, 0.002); end
  def test_lever_graphs_q3846; assert_in_epsilon(1.32, worksheet.lever_graphs_q3846, 0.002); end
  def test_lever_graphs_r3846; assert_in_epsilon(2.3099999999999996, worksheet.lever_graphs_r3846, 0.002); end
  def test_lever_graphs_s3846; assert_in_epsilon(3.3, worksheet.lever_graphs_s3846, 0.002); end
  def test_lever_graphs_c3859; assert_equal("1975", worksheet.lever_graphs_c3859); end
  def test_lever_graphs_d3859; assert_equal("1980", worksheet.lever_graphs_d3859); end
  def test_lever_graphs_e3859; assert_equal("1985", worksheet.lever_graphs_e3859); end
  def test_lever_graphs_f3859; assert_equal("1990", worksheet.lever_graphs_f3859); end
  def test_lever_graphs_g3859; assert_equal("1995", worksheet.lever_graphs_g3859); end
  def test_lever_graphs_h3859; assert_equal("2000", worksheet.lever_graphs_h3859); end
  def test_lever_graphs_i3859; assert_equal("2005", worksheet.lever_graphs_i3859); end
  def test_lever_graphs_j3859; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3859, 0.002); end
  def test_lever_graphs_k3859; assert_equal("2011", worksheet.lever_graphs_k3859); end
  def test_lever_graphs_l3859; assert_equal("2015", worksheet.lever_graphs_l3859); end
  def test_lever_graphs_m3859; assert_equal("2020", worksheet.lever_graphs_m3859); end
  def test_lever_graphs_n3859; assert_equal("2025", worksheet.lever_graphs_n3859); end
  def test_lever_graphs_o3859; assert_equal("2030", worksheet.lever_graphs_o3859); end
  def test_lever_graphs_p3859; assert_equal("2035", worksheet.lever_graphs_p3859); end
  def test_lever_graphs_q3859; assert_equal("2040", worksheet.lever_graphs_q3859); end
  def test_lever_graphs_r3859; assert_equal("2045", worksheet.lever_graphs_r3859); end
  def test_lever_graphs_s3859; assert_equal("2050", worksheet.lever_graphs_s3859); end
  def test_lever_graphs_b3860; assert_equal("Historic data", worksheet.lever_graphs_b3860); end
  def test_lever_graphs_b3861; assert_in_delta(1.0, worksheet.lever_graphs_b3861, 0.002); end
  def test_lever_graphs_k3861; assert_in_delta(0.0, (worksheet.lever_graphs_k3861||0), 0.002); end
  def test_lever_graphs_l3861; assert_in_delta(0.0, (worksheet.lever_graphs_l3861||0), 0.002); end
  def test_lever_graphs_m3861; assert_in_delta(0.0, (worksheet.lever_graphs_m3861||0), 0.002); end
  def test_lever_graphs_n3861; assert_in_delta(0.0, (worksheet.lever_graphs_n3861||0), 0.002); end
  def test_lever_graphs_o3861; assert_in_delta(0.0, (worksheet.lever_graphs_o3861||0), 0.002); end
  def test_lever_graphs_p3861; assert_in_delta(0.0, (worksheet.lever_graphs_p3861||0), 0.002); end
  def test_lever_graphs_q3861; assert_in_delta(0.0, (worksheet.lever_graphs_q3861||0), 0.002); end
  def test_lever_graphs_r3861; assert_in_delta(0.0, (worksheet.lever_graphs_r3861||0), 0.002); end
  def test_lever_graphs_s3861; assert_in_delta(0.0, (worksheet.lever_graphs_s3861||0), 0.002); end
  def test_lever_graphs_b3862; assert_in_epsilon(2.0, worksheet.lever_graphs_b3862, 0.002); end
  def test_lever_graphs_k3862; assert_in_delta(0.0, (worksheet.lever_graphs_k3862||0), 0.002); end
  def test_lever_graphs_l3862; assert_in_delta(0.0, (worksheet.lever_graphs_l3862||0), 0.002); end
  def test_lever_graphs_m3862; assert_in_delta(0.0, (worksheet.lever_graphs_m3862||0), 0.002); end
  def test_lever_graphs_n3862; assert_in_delta(0.01, worksheet.lever_graphs_n3862, 0.002); end
  def test_lever_graphs_o3862; assert_in_delta(0.05, worksheet.lever_graphs_o3862, 0.002); end
  def test_lever_graphs_p3862; assert_in_delta(0.2, worksheet.lever_graphs_p3862, 0.002); end
  def test_lever_graphs_q3862; assert_in_delta(0.4, worksheet.lever_graphs_q3862, 0.002); end
  def test_lever_graphs_r3862; assert_in_delta(0.7, worksheet.lever_graphs_r3862, 0.002); end
  def test_lever_graphs_s3862; assert_in_delta(1.0, worksheet.lever_graphs_s3862, 0.002); end
  def test_lever_graphs_b3863; assert_in_epsilon(3.0, worksheet.lever_graphs_b3863, 0.002); end
  def test_lever_graphs_k3863; assert_in_delta(0.0, (worksheet.lever_graphs_k3863||0), 0.002); end
  def test_lever_graphs_l3863; assert_in_delta(0.0, (worksheet.lever_graphs_l3863||0), 0.002); end
  def test_lever_graphs_m3863; assert_in_delta(0.0, (worksheet.lever_graphs_m3863||0), 0.002); end
  def test_lever_graphs_n3863; assert_in_delta(0.025, worksheet.lever_graphs_n3863, 0.002); end
  def test_lever_graphs_o3863; assert_in_delta(0.125, worksheet.lever_graphs_o3863, 0.002); end
  def test_lever_graphs_p3863; assert_in_delta(0.5, worksheet.lever_graphs_p3863, 0.002); end
  def test_lever_graphs_q3863; assert_in_delta(1.0, worksheet.lever_graphs_q3863, 0.002); end
  def test_lever_graphs_r3863; assert_in_epsilon(1.75, worksheet.lever_graphs_r3863, 0.002); end
  def test_lever_graphs_s3863; assert_in_epsilon(2.5, worksheet.lever_graphs_s3863, 0.002); end
  def test_lever_graphs_b3864; assert_in_epsilon(4.0, worksheet.lever_graphs_b3864, 0.002); end
  def test_lever_graphs_k3864; assert_in_delta(0.0, (worksheet.lever_graphs_k3864||0), 0.002); end
  def test_lever_graphs_l3864; assert_in_delta(0.0, (worksheet.lever_graphs_l3864||0), 0.002); end
  def test_lever_graphs_m3864; assert_in_delta(0.0, (worksheet.lever_graphs_m3864||0), 0.002); end
  def test_lever_graphs_n3864; assert_in_delta(0.1, worksheet.lever_graphs_n3864, 0.002); end
  def test_lever_graphs_o3864; assert_in_delta(0.5, worksheet.lever_graphs_o3864, 0.002); end
  def test_lever_graphs_p3864; assert_in_epsilon(2.0, worksheet.lever_graphs_p3864, 0.002); end
  def test_lever_graphs_q3864; assert_in_epsilon(4.0, worksheet.lever_graphs_q3864, 0.002); end
  def test_lever_graphs_r3864; assert_in_epsilon(7.0, worksheet.lever_graphs_r3864, 0.002); end
  def test_lever_graphs_s3864; assert_in_epsilon(10.0, worksheet.lever_graphs_s3864, 0.002); end
  def test_lever_graphs_c3877; assert_equal("1975", worksheet.lever_graphs_c3877); end
  def test_lever_graphs_d3877; assert_equal("1980", worksheet.lever_graphs_d3877); end
  def test_lever_graphs_e3877; assert_equal("1985", worksheet.lever_graphs_e3877); end
  def test_lever_graphs_f3877; assert_equal("1990", worksheet.lever_graphs_f3877); end
  def test_lever_graphs_g3877; assert_equal("1995", worksheet.lever_graphs_g3877); end
  def test_lever_graphs_h3877; assert_equal("2000", worksheet.lever_graphs_h3877); end
  def test_lever_graphs_i3877; assert_equal("2005", worksheet.lever_graphs_i3877); end
  def test_lever_graphs_j3877; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3877, 0.002); end
  def test_lever_graphs_k3877; assert_equal("2011", worksheet.lever_graphs_k3877); end
  def test_lever_graphs_l3877; assert_equal("2015", worksheet.lever_graphs_l3877); end
  def test_lever_graphs_m3877; assert_equal("2020", worksheet.lever_graphs_m3877); end
  def test_lever_graphs_n3877; assert_equal("2025", worksheet.lever_graphs_n3877); end
  def test_lever_graphs_o3877; assert_equal("2030", worksheet.lever_graphs_o3877); end
  def test_lever_graphs_p3877; assert_equal("2035", worksheet.lever_graphs_p3877); end
  def test_lever_graphs_q3877; assert_equal("2040", worksheet.lever_graphs_q3877); end
  def test_lever_graphs_r3877; assert_equal("2045", worksheet.lever_graphs_r3877); end
  def test_lever_graphs_s3877; assert_equal("2050", worksheet.lever_graphs_s3877); end
  def test_lever_graphs_b3878; assert_equal("Historic data", worksheet.lever_graphs_b3878); end
  def test_lever_graphs_b3879; assert_in_delta(1.0, worksheet.lever_graphs_b3879, 0.002); end
  def test_lever_graphs_k3879; assert_in_delta(0.0, (worksheet.lever_graphs_k3879||0), 0.002); end
  def test_lever_graphs_l3879; assert_in_delta(0.0, (worksheet.lever_graphs_l3879||0), 0.002); end
  def test_lever_graphs_m3879; assert_in_delta(0.0, (worksheet.lever_graphs_m3879||0), 0.002); end
  def test_lever_graphs_n3879; assert_in_delta(0.0, (worksheet.lever_graphs_n3879||0), 0.002); end
  def test_lever_graphs_o3879; assert_in_delta(0.0, (worksheet.lever_graphs_o3879||0), 0.002); end
  def test_lever_graphs_p3879; assert_in_delta(0.0, (worksheet.lever_graphs_p3879||0), 0.002); end
  def test_lever_graphs_q3879; assert_in_delta(0.0, (worksheet.lever_graphs_q3879||0), 0.002); end
  def test_lever_graphs_r3879; assert_in_delta(0.0, (worksheet.lever_graphs_r3879||0), 0.002); end
  def test_lever_graphs_s3879; assert_in_delta(0.0, (worksheet.lever_graphs_s3879||0), 0.002); end
  def test_lever_graphs_b3880; assert_in_epsilon(2.0, worksheet.lever_graphs_b3880, 0.002); end
  def test_lever_graphs_k3880; assert_in_delta(0.0, (worksheet.lever_graphs_k3880||0), 0.002); end
  def test_lever_graphs_l3880; assert_in_delta(0.0, (worksheet.lever_graphs_l3880||0), 0.002); end
  def test_lever_graphs_m3880; assert_in_delta(0.0, (worksheet.lever_graphs_m3880||0), 0.002); end
  def test_lever_graphs_n3880; assert_in_delta(0.001, worksheet.lever_graphs_n3880, 0.002); end
  def test_lever_graphs_o3880; assert_in_delta(0.005000000000000001, worksheet.lever_graphs_o3880, 0.002); end
  def test_lever_graphs_p3880; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_p3880, 0.002); end
  def test_lever_graphs_q3880; assert_in_delta(0.04000000000000001, worksheet.lever_graphs_q3880, 0.002); end
  def test_lever_graphs_r3880; assert_in_delta(0.06999999999999999, worksheet.lever_graphs_r3880, 0.002); end
  def test_lever_graphs_s3880; assert_in_delta(0.1, worksheet.lever_graphs_s3880, 0.002); end
  def test_lever_graphs_b3881; assert_in_epsilon(3.0, worksheet.lever_graphs_b3881, 0.002); end
  def test_lever_graphs_k3881; assert_in_delta(0.0, (worksheet.lever_graphs_k3881||0), 0.002); end
  def test_lever_graphs_l3881; assert_in_delta(0.0, (worksheet.lever_graphs_l3881||0), 0.002); end
  def test_lever_graphs_m3881; assert_in_delta(0.0, (worksheet.lever_graphs_m3881||0), 0.002); end
  def test_lever_graphs_n3881; assert_in_delta(0.0025, worksheet.lever_graphs_n3881, 0.002); end
  def test_lever_graphs_o3881; assert_in_delta(0.0125, worksheet.lever_graphs_o3881, 0.002); end
  def test_lever_graphs_p3881; assert_in_delta(0.05, worksheet.lever_graphs_p3881, 0.002); end
  def test_lever_graphs_q3881; assert_in_delta(0.1, worksheet.lever_graphs_q3881, 0.002); end
  def test_lever_graphs_r3881; assert_in_delta(0.175, worksheet.lever_graphs_r3881, 0.002); end
  def test_lever_graphs_s3881; assert_in_delta(0.25, worksheet.lever_graphs_s3881, 0.002); end
  def test_lever_graphs_b3882; assert_in_epsilon(4.0, worksheet.lever_graphs_b3882, 0.002); end
  def test_lever_graphs_k3882; assert_in_delta(0.0, (worksheet.lever_graphs_k3882||0), 0.002); end
  def test_lever_graphs_l3882; assert_in_delta(0.0, (worksheet.lever_graphs_l3882||0), 0.002); end
  def test_lever_graphs_m3882; assert_in_delta(0.0, (worksheet.lever_graphs_m3882||0), 0.002); end
  def test_lever_graphs_n3882; assert_in_delta(0.01, worksheet.lever_graphs_n3882, 0.002); end
  def test_lever_graphs_o3882; assert_in_delta(0.05, worksheet.lever_graphs_o3882, 0.002); end
  def test_lever_graphs_p3882; assert_in_delta(0.2, worksheet.lever_graphs_p3882, 0.002); end
  def test_lever_graphs_q3882; assert_in_delta(0.4, worksheet.lever_graphs_q3882, 0.002); end
  def test_lever_graphs_r3882; assert_in_delta(0.7, worksheet.lever_graphs_r3882, 0.002); end
  def test_lever_graphs_s3882; assert_in_delta(1.0, worksheet.lever_graphs_s3882, 0.002); end
  def test_lever_graphs_c3895; assert_equal("1975", worksheet.lever_graphs_c3895); end
  def test_lever_graphs_d3895; assert_equal("1980", worksheet.lever_graphs_d3895); end
  def test_lever_graphs_e3895; assert_equal("1985", worksheet.lever_graphs_e3895); end
  def test_lever_graphs_f3895; assert_equal("1990", worksheet.lever_graphs_f3895); end
  def test_lever_graphs_g3895; assert_equal("1995", worksheet.lever_graphs_g3895); end
  def test_lever_graphs_h3895; assert_equal("2000", worksheet.lever_graphs_h3895); end
  def test_lever_graphs_i3895; assert_equal("2005", worksheet.lever_graphs_i3895); end
  def test_lever_graphs_j3895; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3895, 0.002); end
  def test_lever_graphs_k3895; assert_equal("2011", worksheet.lever_graphs_k3895); end
  def test_lever_graphs_l3895; assert_equal("2015", worksheet.lever_graphs_l3895); end
  def test_lever_graphs_m3895; assert_equal("2020", worksheet.lever_graphs_m3895); end
  def test_lever_graphs_n3895; assert_equal("2025", worksheet.lever_graphs_n3895); end
  def test_lever_graphs_o3895; assert_equal("2030", worksheet.lever_graphs_o3895); end
  def test_lever_graphs_p3895; assert_equal("2035", worksheet.lever_graphs_p3895); end
  def test_lever_graphs_q3895; assert_equal("2040", worksheet.lever_graphs_q3895); end
  def test_lever_graphs_r3895; assert_equal("2045", worksheet.lever_graphs_r3895); end
  def test_lever_graphs_s3895; assert_equal("2050", worksheet.lever_graphs_s3895); end
  def test_lever_graphs_b3896; assert_equal("Historic data", worksheet.lever_graphs_b3896); end
  def test_lever_graphs_b3897; assert_in_delta(1.0, worksheet.lever_graphs_b3897, 0.002); end
  def test_lever_graphs_k3897; assert_in_delta(0.0, (worksheet.lever_graphs_k3897||0), 0.002); end
  def test_lever_graphs_l3897; assert_in_delta(0.0, (worksheet.lever_graphs_l3897||0), 0.002); end
  def test_lever_graphs_m3897; assert_in_delta(0.0, (worksheet.lever_graphs_m3897||0), 0.002); end
  def test_lever_graphs_n3897; assert_in_delta(0.0, (worksheet.lever_graphs_n3897||0), 0.002); end
  def test_lever_graphs_o3897; assert_in_delta(0.0, (worksheet.lever_graphs_o3897||0), 0.002); end
  def test_lever_graphs_p3897; assert_in_delta(0.0, (worksheet.lever_graphs_p3897||0), 0.002); end
  def test_lever_graphs_q3897; assert_in_delta(0.0, (worksheet.lever_graphs_q3897||0), 0.002); end
  def test_lever_graphs_r3897; assert_in_delta(0.0, (worksheet.lever_graphs_r3897||0), 0.002); end
  def test_lever_graphs_s3897; assert_in_delta(0.0, (worksheet.lever_graphs_s3897||0), 0.002); end
  def test_lever_graphs_b3898; assert_in_epsilon(2.0, worksheet.lever_graphs_b3898, 0.002); end
  def test_lever_graphs_k3898; assert_in_delta(0.0, (worksheet.lever_graphs_k3898||0), 0.002); end
  def test_lever_graphs_l3898; assert_in_delta(0.0, (worksheet.lever_graphs_l3898||0), 0.002); end
  def test_lever_graphs_m3898; assert_in_delta(0.0, (worksheet.lever_graphs_m3898||0), 0.002); end
  def test_lever_graphs_n3898; assert_in_delta(0.01, worksheet.lever_graphs_n3898, 0.002); end
  def test_lever_graphs_o3898; assert_in_delta(0.05, worksheet.lever_graphs_o3898, 0.002); end
  def test_lever_graphs_p3898; assert_in_delta(0.2, worksheet.lever_graphs_p3898, 0.002); end
  def test_lever_graphs_q3898; assert_in_delta(0.4, worksheet.lever_graphs_q3898, 0.002); end
  def test_lever_graphs_r3898; assert_in_delta(0.7, worksheet.lever_graphs_r3898, 0.002); end
  def test_lever_graphs_s3898; assert_in_delta(1.0, worksheet.lever_graphs_s3898, 0.002); end
  def test_lever_graphs_b3899; assert_in_epsilon(3.0, worksheet.lever_graphs_b3899, 0.002); end
  def test_lever_graphs_k3899; assert_in_delta(0.0, (worksheet.lever_graphs_k3899||0), 0.002); end
  def test_lever_graphs_l3899; assert_in_delta(0.0, (worksheet.lever_graphs_l3899||0), 0.002); end
  def test_lever_graphs_m3899; assert_in_delta(0.0, (worksheet.lever_graphs_m3899||0), 0.002); end
  def test_lever_graphs_n3899; assert_in_delta(0.025, worksheet.lever_graphs_n3899, 0.002); end
  def test_lever_graphs_o3899; assert_in_delta(0.125, worksheet.lever_graphs_o3899, 0.002); end
  def test_lever_graphs_p3899; assert_in_delta(0.5, worksheet.lever_graphs_p3899, 0.002); end
  def test_lever_graphs_q3899; assert_in_delta(1.0, worksheet.lever_graphs_q3899, 0.002); end
  def test_lever_graphs_r3899; assert_in_epsilon(1.75, worksheet.lever_graphs_r3899, 0.002); end
  def test_lever_graphs_s3899; assert_in_epsilon(2.5, worksheet.lever_graphs_s3899, 0.002); end
  def test_lever_graphs_b3900; assert_in_epsilon(4.0, worksheet.lever_graphs_b3900, 0.002); end
  def test_lever_graphs_k3900; assert_in_delta(0.0, (worksheet.lever_graphs_k3900||0), 0.002); end
  def test_lever_graphs_l3900; assert_in_delta(0.0, (worksheet.lever_graphs_l3900||0), 0.002); end
  def test_lever_graphs_m3900; assert_in_delta(0.0, (worksheet.lever_graphs_m3900||0), 0.002); end
  def test_lever_graphs_n3900; assert_in_delta(0.1, worksheet.lever_graphs_n3900, 0.002); end
  def test_lever_graphs_o3900; assert_in_delta(0.5, worksheet.lever_graphs_o3900, 0.002); end
  def test_lever_graphs_p3900; assert_in_epsilon(2.0, worksheet.lever_graphs_p3900, 0.002); end
  def test_lever_graphs_q3900; assert_in_epsilon(4.0, worksheet.lever_graphs_q3900, 0.002); end
  def test_lever_graphs_r3900; assert_in_epsilon(7.0, worksheet.lever_graphs_r3900, 0.002); end
  def test_lever_graphs_s3900; assert_in_epsilon(10.0, worksheet.lever_graphs_s3900, 0.002); end
  def test_lever_graphs_c3913; assert_equal("1975", worksheet.lever_graphs_c3913); end
  def test_lever_graphs_d3913; assert_equal("1980", worksheet.lever_graphs_d3913); end
  def test_lever_graphs_e3913; assert_equal("1985", worksheet.lever_graphs_e3913); end
  def test_lever_graphs_f3913; assert_equal("1990", worksheet.lever_graphs_f3913); end
  def test_lever_graphs_g3913; assert_equal("1995", worksheet.lever_graphs_g3913); end
  def test_lever_graphs_h3913; assert_equal("2000", worksheet.lever_graphs_h3913); end
  def test_lever_graphs_i3913; assert_equal("2005", worksheet.lever_graphs_i3913); end
  def test_lever_graphs_j3913; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3913, 0.002); end
  def test_lever_graphs_k3913; assert_equal("2011", worksheet.lever_graphs_k3913); end
  def test_lever_graphs_l3913; assert_equal("2015", worksheet.lever_graphs_l3913); end
  def test_lever_graphs_m3913; assert_equal("2020", worksheet.lever_graphs_m3913); end
  def test_lever_graphs_n3913; assert_equal("2025", worksheet.lever_graphs_n3913); end
  def test_lever_graphs_o3913; assert_equal("2030", worksheet.lever_graphs_o3913); end
  def test_lever_graphs_p3913; assert_equal("2035", worksheet.lever_graphs_p3913); end
  def test_lever_graphs_q3913; assert_equal("2040", worksheet.lever_graphs_q3913); end
  def test_lever_graphs_r3913; assert_equal("2045", worksheet.lever_graphs_r3913); end
  def test_lever_graphs_s3913; assert_equal("2050", worksheet.lever_graphs_s3913); end
  def test_lever_graphs_b3914; assert_equal("Historic data", worksheet.lever_graphs_b3914); end
  def test_lever_graphs_b3915; assert_in_delta(1.0, worksheet.lever_graphs_b3915, 0.002); end
  def test_lever_graphs_k3915; assert_in_delta(0.0, (worksheet.lever_graphs_k3915||0), 0.002); end
  def test_lever_graphs_l3915; assert_in_delta(0.0, (worksheet.lever_graphs_l3915||0), 0.002); end
  def test_lever_graphs_m3915; assert_in_delta(0.0, (worksheet.lever_graphs_m3915||0), 0.002); end
  def test_lever_graphs_n3915; assert_in_delta(0.0, (worksheet.lever_graphs_n3915||0), 0.002); end
  def test_lever_graphs_o3915; assert_in_delta(0.0, (worksheet.lever_graphs_o3915||0), 0.002); end
  def test_lever_graphs_p3915; assert_in_delta(0.0, (worksheet.lever_graphs_p3915||0), 0.002); end
  def test_lever_graphs_q3915; assert_in_delta(0.0, (worksheet.lever_graphs_q3915||0), 0.002); end
  def test_lever_graphs_r3915; assert_in_delta(0.0, (worksheet.lever_graphs_r3915||0), 0.002); end
  def test_lever_graphs_s3915; assert_in_delta(0.0, (worksheet.lever_graphs_s3915||0), 0.002); end
  def test_lever_graphs_b3916; assert_in_epsilon(2.0, worksheet.lever_graphs_b3916, 0.002); end
  def test_lever_graphs_k3916; assert_in_delta(0.0, (worksheet.lever_graphs_k3916||0), 0.002); end
  def test_lever_graphs_l3916; assert_in_delta(0.0, (worksheet.lever_graphs_l3916||0), 0.002); end
  def test_lever_graphs_m3916; assert_in_delta(0.0, (worksheet.lever_graphs_m3916||0), 0.002); end
  def test_lever_graphs_n3916; assert_in_delta(0.0037000000000000006, worksheet.lever_graphs_n3916, 0.002); end
  def test_lever_graphs_o3916; assert_in_delta(0.018500000000000003, worksheet.lever_graphs_o3916, 0.002); end
  def test_lever_graphs_p3916; assert_in_delta(0.07400000000000001, worksheet.lever_graphs_p3916, 0.002); end
  def test_lever_graphs_q3916; assert_in_delta(0.14800000000000002, worksheet.lever_graphs_q3916, 0.002); end
  def test_lever_graphs_r3916; assert_in_delta(0.259, worksheet.lever_graphs_r3916, 0.002); end
  def test_lever_graphs_s3916; assert_in_delta(0.37000000000000005, worksheet.lever_graphs_s3916, 0.002); end
  def test_lever_graphs_b3917; assert_in_epsilon(3.0, worksheet.lever_graphs_b3917, 0.002); end
  def test_lever_graphs_k3917; assert_in_delta(0.0, (worksheet.lever_graphs_k3917||0), 0.002); end
  def test_lever_graphs_l3917; assert_in_delta(0.0, (worksheet.lever_graphs_l3917||0), 0.002); end
  def test_lever_graphs_m3917; assert_in_delta(0.0, (worksheet.lever_graphs_m3917||0), 0.002); end
  def test_lever_graphs_n3917; assert_in_delta(0.009250000000000001, worksheet.lever_graphs_n3917, 0.002); end
  def test_lever_graphs_o3917; assert_in_delta(0.046250000000000006, worksheet.lever_graphs_o3917, 0.002); end
  def test_lever_graphs_p3917; assert_in_delta(0.18500000000000003, worksheet.lever_graphs_p3917, 0.002); end
  def test_lever_graphs_q3917; assert_in_delta(0.37000000000000005, worksheet.lever_graphs_q3917, 0.002); end
  def test_lever_graphs_r3917; assert_in_delta(0.6475, worksheet.lever_graphs_r3917, 0.002); end
  def test_lever_graphs_s3917; assert_in_delta(0.925, worksheet.lever_graphs_s3917, 0.002); end
  def test_lever_graphs_b3918; assert_in_epsilon(4.0, worksheet.lever_graphs_b3918, 0.002); end
  def test_lever_graphs_k3918; assert_in_delta(0.0, (worksheet.lever_graphs_k3918||0), 0.002); end
  def test_lever_graphs_l3918; assert_in_delta(0.0, (worksheet.lever_graphs_l3918||0), 0.002); end
  def test_lever_graphs_m3918; assert_in_delta(0.0, (worksheet.lever_graphs_m3918||0), 0.002); end
  def test_lever_graphs_n3918; assert_in_delta(0.037000000000000005, worksheet.lever_graphs_n3918, 0.002); end
  def test_lever_graphs_o3918; assert_in_delta(0.18500000000000003, worksheet.lever_graphs_o3918, 0.002); end
  def test_lever_graphs_p3918; assert_in_delta(0.7400000000000001, worksheet.lever_graphs_p3918, 0.002); end
  def test_lever_graphs_q3918; assert_in_epsilon(1.4800000000000002, worksheet.lever_graphs_q3918, 0.002); end
  def test_lever_graphs_r3918; assert_in_epsilon(2.59, worksheet.lever_graphs_r3918, 0.002); end
  def test_lever_graphs_s3918; assert_in_epsilon(3.7, worksheet.lever_graphs_s3918, 0.002); end
  def test_lever_graphs_b2611; assert_equal("Year", worksheet.lever_graphs_b2611); end
  def test_lever_graphs_c2611; assert_equal("Level", worksheet.lever_graphs_c2611); end
  def test_lever_graphs_d2611; assert_equal("Title", worksheet.lever_graphs_d2611); end
  def test_lever_graphs_e2611; assert_equal("heater.solid.boiler.urban.space", worksheet.lever_graphs_e2611); end
  def test_lever_graphs_f2611; assert_equal("heater.liquid.boiler.urban.space", worksheet.lever_graphs_f2611); end
  def test_lever_graphs_g2611; assert_equal("heater.gas.boiler.urban.space", worksheet.lever_graphs_g2611); end
  def test_lever_graphs_h2611; assert_equal("heater.heatpump.urban.space", worksheet.lever_graphs_h2611); end
  def test_lever_graphs_i2611; assert_equal("heater.electricity.urban.space", worksheet.lever_graphs_i2611); end
  def test_lever_graphs_j2611; assert_equal("heater.solar.urban.space", worksheet.lever_graphs_j2611); end
  def test_lever_graphs_k2611; assert_equal("heater.microchp.urban.space", worksheet.lever_graphs_k2611); end
  def test_lever_graphs_l2611; assert_equal("heater.districtheating.urban.space", worksheet.lever_graphs_l2611); end
  def test_lever_graphs_b2612; assert_in_epsilon(2011.0, worksheet.lever_graphs_b2612, 0.002); end
  def test_lever_graphs_c2612; assert_in_delta(1.0, worksheet.lever_graphs_c2612, 0.002); end
  def test_lever_graphs_d2612; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2612, 0.002); end
  def test_lever_graphs_e2612; assert_in_delta(0.07, worksheet.lever_graphs_e2612, 0.002); end
  def test_lever_graphs_f2612; assert_in_delta(0.14, worksheet.lever_graphs_f2612, 0.002); end
  def test_lever_graphs_g2612; assert_in_delta(0.55, worksheet.lever_graphs_g2612, 0.002); end
  def test_lever_graphs_h2612; assert_in_delta(0.02, worksheet.lever_graphs_h2612, 0.002); end
  def test_lever_graphs_i2612; assert_in_delta(0.03, worksheet.lever_graphs_i2612, 0.002); end
  def test_lever_graphs_j2612; assert_in_delta(0.0, (worksheet.lever_graphs_j2612||0), 0.002); end
  def test_lever_graphs_k2612; assert_in_delta(0.02, worksheet.lever_graphs_k2612, 0.002); end
  def test_lever_graphs_l2612; assert_in_delta(0.17, worksheet.lever_graphs_l2612, 0.002); end
  def test_lever_graphs_b2613; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2613, 0.002); end
  def test_lever_graphs_c2613; assert_in_delta(1.0, worksheet.lever_graphs_c2613, 0.002); end
  def test_lever_graphs_d2613; assert_equal("2050: Level 1", worksheet.lever_graphs_d2613); end
  def test_lever_graphs_e2613; assert_in_delta(0.02, worksheet.lever_graphs_e2613, 0.002); end
  def test_lever_graphs_f2613; assert_in_delta(0.14, worksheet.lever_graphs_f2613, 0.002); end
  def test_lever_graphs_g2613; assert_in_delta(0.55, worksheet.lever_graphs_g2613, 0.002); end
  def test_lever_graphs_h2613; assert_in_delta(0.02, worksheet.lever_graphs_h2613, 0.002); end
  def test_lever_graphs_i2613; assert_in_delta(0.08, worksheet.lever_graphs_i2613, 0.002); end
  def test_lever_graphs_j2613; assert_in_delta(0.0, (worksheet.lever_graphs_j2613||0), 0.002); end
  def test_lever_graphs_k2613; assert_in_delta(0.02, worksheet.lever_graphs_k2613, 0.002); end
  def test_lever_graphs_l2613; assert_in_delta(0.17, worksheet.lever_graphs_l2613, 0.002); end
  def test_lever_graphs_b2614; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2614, 0.002); end
  def test_lever_graphs_c2614; assert_in_epsilon(2.0, worksheet.lever_graphs_c2614, 0.002); end
  def test_lever_graphs_d2614; assert_equal("2050: Level 2", worksheet.lever_graphs_d2614); end
  def test_lever_graphs_e2614; assert_in_delta(0.01, worksheet.lever_graphs_e2614, 0.002); end
  def test_lever_graphs_f2614; assert_in_delta(0.01, worksheet.lever_graphs_f2614, 0.002); end
  def test_lever_graphs_g2614; assert_in_delta(0.1, worksheet.lever_graphs_g2614, 0.002); end
  def test_lever_graphs_h2614; assert_in_delta(0.15, worksheet.lever_graphs_h2614, 0.002); end
  def test_lever_graphs_i2614; assert_in_delta(0.05, worksheet.lever_graphs_i2614, 0.002); end
  def test_lever_graphs_j2614; assert_in_delta(0.05, worksheet.lever_graphs_j2614, 0.002); end
  def test_lever_graphs_k2614; assert_in_delta(0.08, worksheet.lever_graphs_k2614, 0.002); end
  def test_lever_graphs_l2614; assert_in_delta(0.55, worksheet.lever_graphs_l2614, 0.002); end
  def test_lever_graphs_b2615; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2615, 0.002); end
  def test_lever_graphs_c2615; assert_in_epsilon(3.0, worksheet.lever_graphs_c2615, 0.002); end
  def test_lever_graphs_d2615; assert_equal("2050: Level 3", worksheet.lever_graphs_d2615); end
  def test_lever_graphs_e2615; assert_in_delta(0.01, worksheet.lever_graphs_e2615, 0.002); end
  def test_lever_graphs_f2615; assert_in_delta(0.0, (worksheet.lever_graphs_f2615||0), 0.002); end
  def test_lever_graphs_g2615; assert_in_delta(0.3, worksheet.lever_graphs_g2615, 0.002); end
  def test_lever_graphs_h2615; assert_in_delta(0.35, worksheet.lever_graphs_h2615, 0.002); end
  def test_lever_graphs_i2615; assert_in_delta(0.05, worksheet.lever_graphs_i2615, 0.002); end
  def test_lever_graphs_j2615; assert_in_delta(0.1, worksheet.lever_graphs_j2615, 0.002); end
  def test_lever_graphs_k2615; assert_in_delta(0.09, worksheet.lever_graphs_k2615, 0.002); end
  def test_lever_graphs_l2615; assert_in_delta(0.1, worksheet.lever_graphs_l2615, 0.002); end
  def test_lever_graphs_b2616; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2616, 0.002); end
  def test_lever_graphs_c2616; assert_in_epsilon(4.0, worksheet.lever_graphs_c2616, 0.002); end
  def test_lever_graphs_d2616; assert_equal("2050: Level 4", worksheet.lever_graphs_d2616); end
  def test_lever_graphs_e2616; assert_in_delta(0.0, (worksheet.lever_graphs_e2616||0), 0.002); end
  def test_lever_graphs_f2616; assert_in_delta(0.0, (worksheet.lever_graphs_f2616||0), 0.002); end
  def test_lever_graphs_g2616; assert_in_delta(0.1, worksheet.lever_graphs_g2616, 0.002); end
  def test_lever_graphs_h2616; assert_in_delta(0.5, worksheet.lever_graphs_h2616, 0.002); end
  def test_lever_graphs_i2616; assert_in_delta(0.02, worksheet.lever_graphs_i2616, 0.002); end
  def test_lever_graphs_j2616; assert_in_delta(0.2, worksheet.lever_graphs_j2616, 0.002); end
  def test_lever_graphs_k2616; assert_in_delta(0.11, worksheet.lever_graphs_k2616, 0.002); end
  def test_lever_graphs_l2616; assert_in_delta(0.07, worksheet.lever_graphs_l2616, 0.002); end
  def test_lever_graphs_c2622; assert_equal("1975", worksheet.lever_graphs_c2622); end
  def test_lever_graphs_d2622; assert_equal("1980", worksheet.lever_graphs_d2622); end
  def test_lever_graphs_e2622; assert_equal("1985", worksheet.lever_graphs_e2622); end
  def test_lever_graphs_f2622; assert_equal("1990", worksheet.lever_graphs_f2622); end
  def test_lever_graphs_g2622; assert_equal("1995", worksheet.lever_graphs_g2622); end
  def test_lever_graphs_h2622; assert_equal("2000", worksheet.lever_graphs_h2622); end
  def test_lever_graphs_i2622; assert_equal("2005", worksheet.lever_graphs_i2622); end
  def test_lever_graphs_j2622; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2622, 0.002); end
  def test_lever_graphs_k2622; assert_equal("2011", worksheet.lever_graphs_k2622); end
  def test_lever_graphs_l2622; assert_equal("2015", worksheet.lever_graphs_l2622); end
  def test_lever_graphs_m2622; assert_equal("2020", worksheet.lever_graphs_m2622); end
  def test_lever_graphs_n2622; assert_equal("2025", worksheet.lever_graphs_n2622); end
  def test_lever_graphs_o2622; assert_equal("2030", worksheet.lever_graphs_o2622); end
  def test_lever_graphs_p2622; assert_equal("2035", worksheet.lever_graphs_p2622); end
  def test_lever_graphs_q2622; assert_equal("2040", worksheet.lever_graphs_q2622); end
  def test_lever_graphs_r2622; assert_equal("2045", worksheet.lever_graphs_r2622); end
  def test_lever_graphs_s2622; assert_equal("2050", worksheet.lever_graphs_s2622); end
  def test_lever_graphs_b2623; assert_equal("Historic data", worksheet.lever_graphs_b2623); end
  def test_lever_graphs_b2624; assert_in_delta(1.0, worksheet.lever_graphs_b2624, 0.002); end
  def test_lever_graphs_k2624; assert_in_delta(0.02, worksheet.lever_graphs_k2624, 0.002); end
  def test_lever_graphs_l2624; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2624, 0.002); end
  def test_lever_graphs_m2624; assert_in_delta(0.02, worksheet.lever_graphs_m2624, 0.002); end
  def test_lever_graphs_n2624; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_n2624, 0.002); end
  def test_lever_graphs_o2624; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_o2624, 0.002); end
  def test_lever_graphs_p2624; assert_in_delta(0.02, worksheet.lever_graphs_p2624, 0.002); end
  def test_lever_graphs_q2624; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_q2624, 0.002); end
  def test_lever_graphs_r2624; assert_in_delta(0.02, worksheet.lever_graphs_r2624, 0.002); end
  def test_lever_graphs_s2624; assert_in_delta(0.02, worksheet.lever_graphs_s2624, 0.002); end
  def test_lever_graphs_b2625; assert_in_epsilon(2.0, worksheet.lever_graphs_b2625, 0.002); end
  def test_lever_graphs_k2625; assert_in_delta(0.02, worksheet.lever_graphs_k2625, 0.002); end
  def test_lever_graphs_l2625; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2625, 0.002); end
  def test_lever_graphs_m2625; assert_in_delta(0.03857142857142857, worksheet.lever_graphs_m2625, 0.002); end
  def test_lever_graphs_n2625; assert_in_delta(0.05714285714285714, worksheet.lever_graphs_n2625, 0.002); end
  def test_lever_graphs_o2625; assert_in_delta(0.0757142857142857, worksheet.lever_graphs_o2625, 0.002); end
  def test_lever_graphs_p2625; assert_in_delta(0.09428571428571428, worksheet.lever_graphs_p2625, 0.002); end
  def test_lever_graphs_q2625; assert_in_delta(0.11285714285714285, worksheet.lever_graphs_q2625, 0.002); end
  def test_lever_graphs_r2625; assert_in_delta(0.13142857142857142, worksheet.lever_graphs_r2625, 0.002); end
  def test_lever_graphs_s2625; assert_in_delta(0.15, worksheet.lever_graphs_s2625, 0.002); end
  def test_lever_graphs_b2626; assert_in_epsilon(3.0, worksheet.lever_graphs_b2626, 0.002); end
  def test_lever_graphs_k2626; assert_in_delta(0.02, worksheet.lever_graphs_k2626, 0.002); end
  def test_lever_graphs_l2626; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2626, 0.002); end
  def test_lever_graphs_m2626; assert_in_delta(0.06714285714285714, worksheet.lever_graphs_m2626, 0.002); end
  def test_lever_graphs_n2626; assert_in_delta(0.11428571428571428, worksheet.lever_graphs_n2626, 0.002); end
  def test_lever_graphs_o2626; assert_in_delta(0.16142857142857142, worksheet.lever_graphs_o2626, 0.002); end
  def test_lever_graphs_p2626; assert_in_delta(0.20857142857142855, worksheet.lever_graphs_p2626, 0.002); end
  def test_lever_graphs_q2626; assert_in_delta(0.2557142857142857, worksheet.lever_graphs_q2626, 0.002); end
  def test_lever_graphs_r2626; assert_in_delta(0.3028571428571428, worksheet.lever_graphs_r2626, 0.002); end
  def test_lever_graphs_s2626; assert_in_delta(0.35, worksheet.lever_graphs_s2626, 0.002); end
  def test_lever_graphs_b2627; assert_in_epsilon(4.0, worksheet.lever_graphs_b2627, 0.002); end
  def test_lever_graphs_k2627; assert_in_delta(0.02, worksheet.lever_graphs_k2627, 0.002); end
  def test_lever_graphs_l2627; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2627, 0.002); end
  def test_lever_graphs_m2627; assert_in_delta(0.08857142857142856, worksheet.lever_graphs_m2627, 0.002); end
  def test_lever_graphs_n2627; assert_in_delta(0.15714285714285714, worksheet.lever_graphs_n2627, 0.002); end
  def test_lever_graphs_o2627; assert_in_delta(0.2257142857142857, worksheet.lever_graphs_o2627, 0.002); end
  def test_lever_graphs_p2627; assert_in_delta(0.29428571428571426, worksheet.lever_graphs_p2627, 0.002); end
  def test_lever_graphs_q2627; assert_in_delta(0.3628571428571429, worksheet.lever_graphs_q2627, 0.002); end
  def test_lever_graphs_r2627; assert_in_delta(0.4314285714285714, worksheet.lever_graphs_r2627, 0.002); end
  def test_lever_graphs_s2627; assert_in_delta(0.5, worksheet.lever_graphs_s2627, 0.002); end
  def test_lever_graphs_c2632; assert_equal("1975", worksheet.lever_graphs_c2632); end
  def test_lever_graphs_d2632; assert_equal("1980", worksheet.lever_graphs_d2632); end
  def test_lever_graphs_e2632; assert_equal("1985", worksheet.lever_graphs_e2632); end
  def test_lever_graphs_f2632; assert_equal("1990", worksheet.lever_graphs_f2632); end
  def test_lever_graphs_g2632; assert_equal("1995", worksheet.lever_graphs_g2632); end
  def test_lever_graphs_h2632; assert_equal("2000", worksheet.lever_graphs_h2632); end
  def test_lever_graphs_i2632; assert_equal("2005", worksheet.lever_graphs_i2632); end
  def test_lever_graphs_j2632; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2632, 0.002); end
  def test_lever_graphs_k2632; assert_equal("2011", worksheet.lever_graphs_k2632); end
  def test_lever_graphs_l2632; assert_equal("2015", worksheet.lever_graphs_l2632); end
  def test_lever_graphs_m2632; assert_equal("2020", worksheet.lever_graphs_m2632); end
  def test_lever_graphs_n2632; assert_equal("2025", worksheet.lever_graphs_n2632); end
  def test_lever_graphs_o2632; assert_equal("2030", worksheet.lever_graphs_o2632); end
  def test_lever_graphs_p2632; assert_equal("2035", worksheet.lever_graphs_p2632); end
  def test_lever_graphs_q2632; assert_equal("2040", worksheet.lever_graphs_q2632); end
  def test_lever_graphs_r2632; assert_equal("2045", worksheet.lever_graphs_r2632); end
  def test_lever_graphs_s2632; assert_equal("2050", worksheet.lever_graphs_s2632); end
  def test_lever_graphs_b2633; assert_equal("Historic data", worksheet.lever_graphs_b2633); end
  def test_lever_graphs_b2634; assert_in_delta(1.0, worksheet.lever_graphs_b2634, 0.002); end
  def test_lever_graphs_k2634; assert_in_delta(0.0, (worksheet.lever_graphs_k2634||0), 0.002); end
  def test_lever_graphs_l2634; assert_in_delta(0.0, (worksheet.lever_graphs_l2634||0), 0.002); end
  def test_lever_graphs_m2634; assert_in_delta(0.0, (worksheet.lever_graphs_m2634||0), 0.002); end
  def test_lever_graphs_n2634; assert_in_delta(0.0, (worksheet.lever_graphs_n2634||0), 0.002); end
  def test_lever_graphs_o2634; assert_in_delta(0.0, (worksheet.lever_graphs_o2634||0), 0.002); end
  def test_lever_graphs_p2634; assert_in_delta(0.0, (worksheet.lever_graphs_p2634||0), 0.002); end
  def test_lever_graphs_q2634; assert_in_delta(0.0, (worksheet.lever_graphs_q2634||0), 0.002); end
  def test_lever_graphs_r2634; assert_in_delta(0.0, (worksheet.lever_graphs_r2634||0), 0.002); end
  def test_lever_graphs_s2634; assert_in_delta(0.0, (worksheet.lever_graphs_s2634||0), 0.002); end
  def test_lever_graphs_b2635; assert_in_epsilon(2.0, worksheet.lever_graphs_b2635, 0.002); end
  def test_lever_graphs_k2635; assert_in_delta(0.0, (worksheet.lever_graphs_k2635||0), 0.002); end
  def test_lever_graphs_l2635; assert_in_delta(0.0, (worksheet.lever_graphs_l2635||0), 0.002); end
  def test_lever_graphs_m2635; assert_in_delta(0.007142857142857143, worksheet.lever_graphs_m2635, 0.002); end
  def test_lever_graphs_n2635; assert_in_delta(0.014285714285714285, worksheet.lever_graphs_n2635, 0.002); end
  def test_lever_graphs_o2635; assert_in_delta(0.02142857142857143, worksheet.lever_graphs_o2635, 0.002); end
  def test_lever_graphs_p2635; assert_in_delta(0.02857142857142857, worksheet.lever_graphs_p2635, 0.002); end
  def test_lever_graphs_q2635; assert_in_delta(0.03571428571428572, worksheet.lever_graphs_q2635, 0.002); end
  def test_lever_graphs_r2635; assert_in_delta(0.04285714285714286, worksheet.lever_graphs_r2635, 0.002); end
  def test_lever_graphs_s2635; assert_in_delta(0.05, worksheet.lever_graphs_s2635, 0.002); end
  def test_lever_graphs_b2636; assert_in_epsilon(3.0, worksheet.lever_graphs_b2636, 0.002); end
  def test_lever_graphs_k2636; assert_in_delta(0.0, (worksheet.lever_graphs_k2636||0), 0.002); end
  def test_lever_graphs_l2636; assert_in_delta(0.0, (worksheet.lever_graphs_l2636||0), 0.002); end
  def test_lever_graphs_m2636; assert_in_delta(0.014285714285714285, worksheet.lever_graphs_m2636, 0.002); end
  def test_lever_graphs_n2636; assert_in_delta(0.02857142857142857, worksheet.lever_graphs_n2636, 0.002); end
  def test_lever_graphs_o2636; assert_in_delta(0.04285714285714286, worksheet.lever_graphs_o2636, 0.002); end
  def test_lever_graphs_p2636; assert_in_delta(0.05714285714285714, worksheet.lever_graphs_p2636, 0.002); end
  def test_lever_graphs_q2636; assert_in_delta(0.07142857142857144, worksheet.lever_graphs_q2636, 0.002); end
  def test_lever_graphs_r2636; assert_in_delta(0.08571428571428572, worksheet.lever_graphs_r2636, 0.002); end
  def test_lever_graphs_s2636; assert_in_delta(0.1, worksheet.lever_graphs_s2636, 0.002); end
  def test_lever_graphs_b2637; assert_in_epsilon(4.0, worksheet.lever_graphs_b2637, 0.002); end
  def test_lever_graphs_k2637; assert_in_delta(0.0, (worksheet.lever_graphs_k2637||0), 0.002); end
  def test_lever_graphs_l2637; assert_in_delta(0.0, (worksheet.lever_graphs_l2637||0), 0.002); end
  def test_lever_graphs_m2637; assert_in_delta(0.02857142857142857, worksheet.lever_graphs_m2637, 0.002); end
  def test_lever_graphs_n2637; assert_in_delta(0.05714285714285714, worksheet.lever_graphs_n2637, 0.002); end
  def test_lever_graphs_o2637; assert_in_delta(0.08571428571428572, worksheet.lever_graphs_o2637, 0.002); end
  def test_lever_graphs_p2637; assert_in_delta(0.11428571428571428, worksheet.lever_graphs_p2637, 0.002); end
  def test_lever_graphs_q2637; assert_in_delta(0.14285714285714288, worksheet.lever_graphs_q2637, 0.002); end
  def test_lever_graphs_r2637; assert_in_delta(0.17142857142857143, worksheet.lever_graphs_r2637, 0.002); end
  def test_lever_graphs_s2637; assert_in_delta(0.2, worksheet.lever_graphs_s2637, 0.002); end
  def test_lever_graphs_c2642; assert_equal("1975", worksheet.lever_graphs_c2642); end
  def test_lever_graphs_d2642; assert_equal("1980", worksheet.lever_graphs_d2642); end
  def test_lever_graphs_e2642; assert_equal("1985", worksheet.lever_graphs_e2642); end
  def test_lever_graphs_f2642; assert_equal("1990", worksheet.lever_graphs_f2642); end
  def test_lever_graphs_g2642; assert_equal("1995", worksheet.lever_graphs_g2642); end
  def test_lever_graphs_h2642; assert_equal("2000", worksheet.lever_graphs_h2642); end
  def test_lever_graphs_i2642; assert_equal("2005", worksheet.lever_graphs_i2642); end
  def test_lever_graphs_j2642; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2642, 0.002); end
  def test_lever_graphs_k2642; assert_equal("2011", worksheet.lever_graphs_k2642); end
  def test_lever_graphs_l2642; assert_equal("2015", worksheet.lever_graphs_l2642); end
  def test_lever_graphs_m2642; assert_equal("2020", worksheet.lever_graphs_m2642); end
  def test_lever_graphs_n2642; assert_equal("2025", worksheet.lever_graphs_n2642); end
  def test_lever_graphs_o2642; assert_equal("2030", worksheet.lever_graphs_o2642); end
  def test_lever_graphs_p2642; assert_equal("2035", worksheet.lever_graphs_p2642); end
  def test_lever_graphs_q2642; assert_equal("2040", worksheet.lever_graphs_q2642); end
  def test_lever_graphs_r2642; assert_equal("2045", worksheet.lever_graphs_r2642); end
  def test_lever_graphs_s2642; assert_equal("2050", worksheet.lever_graphs_s2642); end
  def test_lever_graphs_b2643; assert_equal("Historic data", worksheet.lever_graphs_b2643); end
  def test_lever_graphs_b2644; assert_in_delta(1.0, worksheet.lever_graphs_b2644, 0.002); end
  def test_lever_graphs_k2644; assert_in_delta(0.02, worksheet.lever_graphs_k2644, 0.002); end
  def test_lever_graphs_l2644; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2644, 0.002); end
  def test_lever_graphs_m2644; assert_in_delta(0.02, worksheet.lever_graphs_m2644, 0.002); end
  def test_lever_graphs_n2644; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_n2644, 0.002); end
  def test_lever_graphs_o2644; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_o2644, 0.002); end
  def test_lever_graphs_p2644; assert_in_delta(0.02, worksheet.lever_graphs_p2644, 0.002); end
  def test_lever_graphs_q2644; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_q2644, 0.002); end
  def test_lever_graphs_r2644; assert_in_delta(0.02, worksheet.lever_graphs_r2644, 0.002); end
  def test_lever_graphs_s2644; assert_in_delta(0.02, worksheet.lever_graphs_s2644, 0.002); end
  def test_lever_graphs_b2645; assert_in_epsilon(2.0, worksheet.lever_graphs_b2645, 0.002); end
  def test_lever_graphs_k2645; assert_in_delta(0.02, worksheet.lever_graphs_k2645, 0.002); end
  def test_lever_graphs_l2645; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2645, 0.002); end
  def test_lever_graphs_m2645; assert_in_delta(0.045714285714285714, worksheet.lever_graphs_m2645, 0.002); end
  def test_lever_graphs_n2645; assert_in_delta(0.07142857142857142, worksheet.lever_graphs_n2645, 0.002); end
  def test_lever_graphs_o2645; assert_in_delta(0.09714285714285714, worksheet.lever_graphs_o2645, 0.002); end
  def test_lever_graphs_p2645; assert_in_delta(0.12285714285714285, worksheet.lever_graphs_p2645, 0.002); end
  def test_lever_graphs_q2645; assert_in_delta(0.14857142857142858, worksheet.lever_graphs_q2645, 0.002); end
  def test_lever_graphs_r2645; assert_in_delta(0.17428571428571427, worksheet.lever_graphs_r2645, 0.002); end
  def test_lever_graphs_s2645; assert_in_delta(0.2, worksheet.lever_graphs_s2645, 0.002); end
  def test_lever_graphs_b2646; assert_in_epsilon(3.0, worksheet.lever_graphs_b2646, 0.002); end
  def test_lever_graphs_k2646; assert_in_delta(0.02, worksheet.lever_graphs_k2646, 0.002); end
  def test_lever_graphs_l2646; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2646, 0.002); end
  def test_lever_graphs_m2646; assert_in_delta(0.08142857142857143, worksheet.lever_graphs_m2646, 0.002); end
  def test_lever_graphs_n2646; assert_in_delta(0.14285714285714285, worksheet.lever_graphs_n2646, 0.002); end
  def test_lever_graphs_o2646; assert_in_delta(0.2042857142857143, worksheet.lever_graphs_o2646, 0.002); end
  def test_lever_graphs_p2646; assert_in_delta(0.2657142857142857, worksheet.lever_graphs_p2646, 0.002); end
  def test_lever_graphs_q2646; assert_in_delta(0.3271428571428572, worksheet.lever_graphs_q2646, 0.002); end
  def test_lever_graphs_r2646; assert_in_delta(0.38857142857142857, worksheet.lever_graphs_r2646, 0.002); end
  def test_lever_graphs_s2646; assert_in_delta(0.44999999999999996, worksheet.lever_graphs_s2646, 0.002); end
  def test_lever_graphs_b2647; assert_in_epsilon(4.0, worksheet.lever_graphs_b2647, 0.002); end
  def test_lever_graphs_k2647; assert_in_delta(0.02, worksheet.lever_graphs_k2647, 0.002); end
  def test_lever_graphs_l2647; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2647, 0.002); end
  def test_lever_graphs_m2647; assert_in_delta(0.11714285714285713, worksheet.lever_graphs_m2647, 0.002); end
  def test_lever_graphs_n2647; assert_in_delta(0.21428571428571427, worksheet.lever_graphs_n2647, 0.002); end
  def test_lever_graphs_o2647; assert_in_delta(0.3114285714285714, worksheet.lever_graphs_o2647, 0.002); end
  def test_lever_graphs_p2647; assert_in_delta(0.40857142857142853, worksheet.lever_graphs_p2647, 0.002); end
  def test_lever_graphs_q2647; assert_in_delta(0.5057142857142858, worksheet.lever_graphs_q2647, 0.002); end
  def test_lever_graphs_r2647; assert_in_delta(0.6028571428571428, worksheet.lever_graphs_r2647, 0.002); end
  def test_lever_graphs_s2647; assert_in_delta(0.7, worksheet.lever_graphs_s2647, 0.002); end
  def test_lever_graphs_c2509; assert_equal("1975", worksheet.lever_graphs_c2509); end
  def test_lever_graphs_d2509; assert_equal("1980", worksheet.lever_graphs_d2509); end
  def test_lever_graphs_e2509; assert_equal("1985", worksheet.lever_graphs_e2509); end
  def test_lever_graphs_f2509; assert_equal("1990", worksheet.lever_graphs_f2509); end
  def test_lever_graphs_g2509; assert_equal("1995", worksheet.lever_graphs_g2509); end
  def test_lever_graphs_h2509; assert_equal("2000", worksheet.lever_graphs_h2509); end
  def test_lever_graphs_i2509; assert_equal("2005", worksheet.lever_graphs_i2509); end
  def test_lever_graphs_j2509; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2509, 0.002); end
  def test_lever_graphs_k2509; assert_equal("2011", worksheet.lever_graphs_k2509); end
  def test_lever_graphs_l2509; assert_equal("2015", worksheet.lever_graphs_l2509); end
  def test_lever_graphs_m2509; assert_equal("2020", worksheet.lever_graphs_m2509); end
  def test_lever_graphs_n2509; assert_equal("2025", worksheet.lever_graphs_n2509); end
  def test_lever_graphs_o2509; assert_equal("2030", worksheet.lever_graphs_o2509); end
  def test_lever_graphs_p2509; assert_equal("2035", worksheet.lever_graphs_p2509); end
  def test_lever_graphs_q2509; assert_equal("2040", worksheet.lever_graphs_q2509); end
  def test_lever_graphs_r2509; assert_equal("2045", worksheet.lever_graphs_r2509); end
  def test_lever_graphs_s2509; assert_equal("2050", worksheet.lever_graphs_s2509); end
  def test_lever_graphs_b2510; assert_equal("Historic data", worksheet.lever_graphs_b2510); end
  def test_lever_graphs_b2511; assert_in_delta(1.0, worksheet.lever_graphs_b2511, 0.002); end
  def test_lever_graphs_k2511; assert_in_epsilon(4565.625, worksheet.lever_graphs_k2511, 0.002); end
  def test_lever_graphs_l2511; assert_in_epsilon(4659.278846153847, worksheet.lever_graphs_l2511, 0.002); end
  def test_lever_graphs_m2511; assert_in_epsilon(4776.346153846154, worksheet.lever_graphs_m2511, 0.002); end
  def test_lever_graphs_n2511; assert_in_epsilon(4893.413461538462, worksheet.lever_graphs_n2511, 0.002); end
  def test_lever_graphs_o2511; assert_in_epsilon(5010.4807692307695, worksheet.lever_graphs_o2511, 0.002); end
  def test_lever_graphs_p2511; assert_in_epsilon(5127.548076923076, worksheet.lever_graphs_p2511, 0.002); end
  def test_lever_graphs_q2511; assert_in_epsilon(5244.615384615385, worksheet.lever_graphs_q2511, 0.002); end
  def test_lever_graphs_r2511; assert_in_epsilon(5361.682692307692, worksheet.lever_graphs_r2511, 0.002); end
  def test_lever_graphs_s2511; assert_in_epsilon(5478.75, worksheet.lever_graphs_s2511, 0.002); end
  def test_lever_graphs_b2512; assert_in_epsilon(2.0, worksheet.lever_graphs_b2512, 0.002); end
  def test_lever_graphs_k2512; assert_in_epsilon(4565.625, worksheet.lever_graphs_k2512, 0.002); end
  def test_lever_graphs_l2512; assert_in_epsilon(4659.278846153847, worksheet.lever_graphs_l2512, 0.002); end
  def test_lever_graphs_m2512; assert_in_epsilon(4711.12293956044, worksheet.lever_graphs_m2512, 0.002); end
  def test_lever_graphs_n2512; assert_in_epsilon(4762.967032967033, worksheet.lever_graphs_n2512, 0.002); end
  def test_lever_graphs_o2512; assert_in_epsilon(4814.811126373626, worksheet.lever_graphs_o2512, 0.002); end
  def test_lever_graphs_p2512; assert_in_epsilon(4866.655219780219, worksheet.lever_graphs_p2512, 0.002); end
  def test_lever_graphs_q2512; assert_in_epsilon(4918.499313186813, worksheet.lever_graphs_q2512, 0.002); end
  def test_lever_graphs_r2512; assert_in_epsilon(4970.343406593406, worksheet.lever_graphs_r2512, 0.002); end
  def test_lever_graphs_s2512; assert_in_epsilon(5022.1875, worksheet.lever_graphs_s2512, 0.002); end
  def test_lever_graphs_b2513; assert_in_epsilon(3.0, worksheet.lever_graphs_b2513, 0.002); end
  def test_lever_graphs_k2513; assert_in_epsilon(4565.625, worksheet.lever_graphs_k2513, 0.002); end
  def test_lever_graphs_l2513; assert_in_epsilon(4659.278846153847, worksheet.lever_graphs_l2513, 0.002); end
  def test_lever_graphs_m2513; assert_in_epsilon(4645.899725274726, worksheet.lever_graphs_m2513, 0.002); end
  def test_lever_graphs_n2513; assert_in_epsilon(4632.520604395605, worksheet.lever_graphs_n2513, 0.002); end
  def test_lever_graphs_o2513; assert_in_epsilon(4619.141483516483, worksheet.lever_graphs_o2513, 0.002); end
  def test_lever_graphs_p2513; assert_in_epsilon(4605.7623626373625, worksheet.lever_graphs_p2513, 0.002); end
  def test_lever_graphs_q2513; assert_in_epsilon(4592.383241758242, worksheet.lever_graphs_q2513, 0.002); end
  def test_lever_graphs_r2513; assert_in_epsilon(4579.004120879121, worksheet.lever_graphs_r2513, 0.002); end
  def test_lever_graphs_s2513; assert_in_epsilon(4565.625, worksheet.lever_graphs_s2513, 0.002); end
  def test_lever_graphs_b2514; assert_in_epsilon(4.0, worksheet.lever_graphs_b2514, 0.002); end
  def test_lever_graphs_k2514; assert_in_epsilon(4565.625, worksheet.lever_graphs_k2514, 0.002); end
  def test_lever_graphs_l2514; assert_in_epsilon(4659.278846153847, worksheet.lever_graphs_l2514, 0.002); end
  def test_lever_graphs_m2514; assert_in_epsilon(4515.453296703297, worksheet.lever_graphs_m2514, 0.002); end
  def test_lever_graphs_n2514; assert_in_epsilon(4371.627747252747, worksheet.lever_graphs_n2514, 0.002); end
  def test_lever_graphs_o2514; assert_in_epsilon(4227.802197802198, worksheet.lever_graphs_o2514, 0.002); end
  def test_lever_graphs_p2514; assert_in_epsilon(4083.9766483516482, worksheet.lever_graphs_p2514, 0.002); end
  def test_lever_graphs_q2514; assert_in_epsilon(3940.1510989010994, worksheet.lever_graphs_q2514, 0.002); end
  def test_lever_graphs_r2514; assert_in_epsilon(3796.3255494505493, worksheet.lever_graphs_r2514, 0.002); end
  def test_lever_graphs_s2514; assert_in_epsilon(3652.5, worksheet.lever_graphs_s2514, 0.002); end
  def test_lever_graphs_c2499; assert_equal("1975", worksheet.lever_graphs_c2499); end
  def test_lever_graphs_d2499; assert_equal("1980", worksheet.lever_graphs_d2499); end
  def test_lever_graphs_e2499; assert_equal("1985", worksheet.lever_graphs_e2499); end
  def test_lever_graphs_f2499; assert_equal("1990", worksheet.lever_graphs_f2499); end
  def test_lever_graphs_g2499; assert_equal("1995", worksheet.lever_graphs_g2499); end
  def test_lever_graphs_h2499; assert_equal("2000", worksheet.lever_graphs_h2499); end
  def test_lever_graphs_i2499; assert_equal("2005", worksheet.lever_graphs_i2499); end
  def test_lever_graphs_j2499; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2499, 0.002); end
  def test_lever_graphs_k2499; assert_equal("2011", worksheet.lever_graphs_k2499); end
  def test_lever_graphs_l2499; assert_equal("2015", worksheet.lever_graphs_l2499); end
  def test_lever_graphs_m2499; assert_equal("2020", worksheet.lever_graphs_m2499); end
  def test_lever_graphs_n2499; assert_equal("2025", worksheet.lever_graphs_n2499); end
  def test_lever_graphs_o2499; assert_equal("2030", worksheet.lever_graphs_o2499); end
  def test_lever_graphs_p2499; assert_equal("2035", worksheet.lever_graphs_p2499); end
  def test_lever_graphs_q2499; assert_equal("2040", worksheet.lever_graphs_q2499); end
  def test_lever_graphs_r2499; assert_equal("2045", worksheet.lever_graphs_r2499); end
  def test_lever_graphs_s2499; assert_equal("2050", worksheet.lever_graphs_s2499); end
  def test_lever_graphs_b2500; assert_equal("Historic data", worksheet.lever_graphs_b2500); end
  def test_lever_graphs_b2501; assert_in_delta(1.0, worksheet.lever_graphs_b2501, 0.002); end
  def test_lever_graphs_k2501; assert_in_epsilon(9131.25, worksheet.lever_graphs_k2501, 0.002); end
  def test_lever_graphs_l2501; assert_in_epsilon(9131.25, worksheet.lever_graphs_l2501, 0.002); end
  def test_lever_graphs_m2501; assert_in_epsilon(9131.25, worksheet.lever_graphs_m2501, 0.002); end
  def test_lever_graphs_n2501; assert_in_epsilon(9131.25, worksheet.lever_graphs_n2501, 0.002); end
  def test_lever_graphs_o2501; assert_in_epsilon(9131.25, worksheet.lever_graphs_o2501, 0.002); end
  def test_lever_graphs_p2501; assert_in_epsilon(9131.25, worksheet.lever_graphs_p2501, 0.002); end
  def test_lever_graphs_q2501; assert_in_epsilon(9131.25, worksheet.lever_graphs_q2501, 0.002); end
  def test_lever_graphs_r2501; assert_in_epsilon(9131.25, worksheet.lever_graphs_r2501, 0.002); end
  def test_lever_graphs_s2501; assert_in_epsilon(9131.25, worksheet.lever_graphs_s2501, 0.002); end
  def test_lever_graphs_b2502; assert_in_epsilon(2.0, worksheet.lever_graphs_b2502, 0.002); end
  def test_lever_graphs_k2502; assert_in_epsilon(9131.25, worksheet.lever_graphs_k2502, 0.002); end
  def test_lever_graphs_l2502; assert_in_epsilon(9131.25, worksheet.lever_graphs_l2502, 0.002); end
  def test_lever_graphs_m2502; assert_in_epsilon(8870.357142857141, worksheet.lever_graphs_m2502, 0.002); end
  def test_lever_graphs_n2502; assert_in_epsilon(8609.464285714286, worksheet.lever_graphs_n2502, 0.002); end
  def test_lever_graphs_o2502; assert_in_epsilon(8348.571428571428, worksheet.lever_graphs_o2502, 0.002); end
  def test_lever_graphs_p2502; assert_in_epsilon(8087.678571428571, worksheet.lever_graphs_p2502, 0.002); end
  def test_lever_graphs_q2502; assert_in_epsilon(7826.785714285714, worksheet.lever_graphs_q2502, 0.002); end
  def test_lever_graphs_r2502; assert_in_epsilon(7565.892857142856, worksheet.lever_graphs_r2502, 0.002); end
  def test_lever_graphs_s2502; assert_in_epsilon(7305.0, worksheet.lever_graphs_s2502, 0.002); end
  def test_lever_graphs_b2503; assert_in_epsilon(3.0, worksheet.lever_graphs_b2503, 0.002); end
  def test_lever_graphs_k2503; assert_in_epsilon(9131.25, worksheet.lever_graphs_k2503, 0.002); end
  def test_lever_graphs_l2503; assert_in_epsilon(9131.25, worksheet.lever_graphs_l2503, 0.002); end
  def test_lever_graphs_m2503; assert_in_epsilon(8674.6875, worksheet.lever_graphs_m2503, 0.002); end
  def test_lever_graphs_n2503; assert_in_epsilon(8218.125, worksheet.lever_graphs_n2503, 0.002); end
  def test_lever_graphs_o2503; assert_in_epsilon(7761.562499999999, worksheet.lever_graphs_o2503, 0.002); end
  def test_lever_graphs_p2503; assert_in_epsilon(7305.0, worksheet.lever_graphs_p2503, 0.002); end
  def test_lever_graphs_q2503; assert_in_epsilon(6848.4375, worksheet.lever_graphs_q2503, 0.002); end
  def test_lever_graphs_r2503; assert_in_epsilon(6391.874999999999, worksheet.lever_graphs_r2503, 0.002); end
  def test_lever_graphs_s2503; assert_in_epsilon(5935.3125, worksheet.lever_graphs_s2503, 0.002); end
  def test_lever_graphs_b2504; assert_in_epsilon(4.0, worksheet.lever_graphs_b2504, 0.002); end
  def test_lever_graphs_k2504; assert_in_epsilon(9131.25, worksheet.lever_graphs_k2504, 0.002); end
  def test_lever_graphs_l2504; assert_in_epsilon(9131.25, worksheet.lever_graphs_l2504, 0.002); end
  def test_lever_graphs_m2504; assert_in_epsilon(8479.017857142857, worksheet.lever_graphs_m2504, 0.002); end
  def test_lever_graphs_n2504; assert_in_epsilon(7826.785714285714, worksheet.lever_graphs_n2504, 0.002); end
  def test_lever_graphs_o2504; assert_in_epsilon(7174.553571428571, worksheet.lever_graphs_o2504, 0.002); end
  def test_lever_graphs_p2504; assert_in_epsilon(6522.3214285714275, worksheet.lever_graphs_p2504, 0.002); end
  def test_lever_graphs_q2504; assert_in_epsilon(5870.089285714285, worksheet.lever_graphs_q2504, 0.002); end
  def test_lever_graphs_r2504; assert_in_epsilon(5217.857142857142, worksheet.lever_graphs_r2504, 0.002); end
  def test_lever_graphs_s2504; assert_in_epsilon(4565.625, worksheet.lever_graphs_s2504, 0.002); end
  def test_lever_graphs_c2709; assert_equal("1975", worksheet.lever_graphs_c2709); end
  def test_lever_graphs_d2709; assert_equal("1980", worksheet.lever_graphs_d2709); end
  def test_lever_graphs_e2709; assert_equal("1985", worksheet.lever_graphs_e2709); end
  def test_lever_graphs_f2709; assert_equal("1990", worksheet.lever_graphs_f2709); end
  def test_lever_graphs_g2709; assert_equal("1995", worksheet.lever_graphs_g2709); end
  def test_lever_graphs_h2709; assert_equal("2000", worksheet.lever_graphs_h2709); end
  def test_lever_graphs_i2709; assert_equal("2005", worksheet.lever_graphs_i2709); end
  def test_lever_graphs_j2709; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2709, 0.002); end
  def test_lever_graphs_k2709; assert_equal("2011", worksheet.lever_graphs_k2709); end
  def test_lever_graphs_l2709; assert_equal("2015", worksheet.lever_graphs_l2709); end
  def test_lever_graphs_m2709; assert_equal("2020", worksheet.lever_graphs_m2709); end
  def test_lever_graphs_n2709; assert_equal("2025", worksheet.lever_graphs_n2709); end
  def test_lever_graphs_o2709; assert_equal("2030", worksheet.lever_graphs_o2709); end
  def test_lever_graphs_p2709; assert_equal("2035", worksheet.lever_graphs_p2709); end
  def test_lever_graphs_q2709; assert_equal("2040", worksheet.lever_graphs_q2709); end
  def test_lever_graphs_r2709; assert_equal("2045", worksheet.lever_graphs_r2709); end
  def test_lever_graphs_s2709; assert_equal("2050", worksheet.lever_graphs_s2709); end
  def test_lever_graphs_b2710; assert_equal("Historic data", worksheet.lever_graphs_b2710); end
  def test_lever_graphs_b2711; assert_in_delta(1.0, worksheet.lever_graphs_b2711, 0.002); end
  def test_lever_graphs_k2711; assert_in_epsilon(18.700000000000003, worksheet.lever_graphs_k2711, 0.002); end
  def test_lever_graphs_l2711; assert_in_epsilon(18.5, worksheet.lever_graphs_l2711, 0.002); end
  def test_lever_graphs_m2711; assert_in_epsilon(17.57142857142857, worksheet.lever_graphs_m2711, 0.002); end
  def test_lever_graphs_n2711; assert_in_epsilon(16.642857142857142, worksheet.lever_graphs_n2711, 0.002); end
  def test_lever_graphs_o2711; assert_in_epsilon(15.714285714285714, worksheet.lever_graphs_o2711, 0.002); end
  def test_lever_graphs_p2711; assert_in_epsilon(14.785714285714285, worksheet.lever_graphs_p2711, 0.002); end
  def test_lever_graphs_q2711; assert_in_epsilon(13.857142857142858, worksheet.lever_graphs_q2711, 0.002); end
  def test_lever_graphs_r2711; assert_in_epsilon(12.928571428571427, worksheet.lever_graphs_r2711, 0.002); end
  def test_lever_graphs_s2711; assert_in_epsilon(12.0, worksheet.lever_graphs_s2711, 0.002); end
  def test_lever_graphs_b2712; assert_in_epsilon(2.0, worksheet.lever_graphs_b2712, 0.002); end
  def test_lever_graphs_k2712; assert_in_epsilon(18.700000000000003, worksheet.lever_graphs_k2712, 0.002); end
  def test_lever_graphs_l2712; assert_in_epsilon(18.5, worksheet.lever_graphs_l2712, 0.002); end
  def test_lever_graphs_m2712; assert_in_epsilon(17.142857142857142, worksheet.lever_graphs_m2712, 0.002); end
  def test_lever_graphs_n2712; assert_in_epsilon(15.785714285714286, worksheet.lever_graphs_n2712, 0.002); end
  def test_lever_graphs_o2712; assert_in_epsilon(14.428571428571427, worksheet.lever_graphs_o2712, 0.002); end
  def test_lever_graphs_p2712; assert_in_epsilon(13.07142857142857, worksheet.lever_graphs_p2712, 0.002); end
  def test_lever_graphs_q2712; assert_in_epsilon(11.714285714285715, worksheet.lever_graphs_q2712, 0.002); end
  def test_lever_graphs_r2712; assert_in_epsilon(10.357142857142856, worksheet.lever_graphs_r2712, 0.002); end
  def test_lever_graphs_s2712; assert_in_epsilon(9.0, worksheet.lever_graphs_s2712, 0.002); end
  def test_lever_graphs_b2713; assert_in_epsilon(3.0, worksheet.lever_graphs_b2713, 0.002); end
  def test_lever_graphs_k2713; assert_in_epsilon(18.700000000000003, worksheet.lever_graphs_k2713, 0.002); end
  def test_lever_graphs_l2713; assert_in_epsilon(18.5, worksheet.lever_graphs_l2713, 0.002); end
  def test_lever_graphs_m2713; assert_in_epsilon(16.71428571428571, worksheet.lever_graphs_m2713, 0.002); end
  def test_lever_graphs_n2713; assert_in_epsilon(14.928571428571429, worksheet.lever_graphs_n2713, 0.002); end
  def test_lever_graphs_o2713; assert_in_epsilon(13.142857142857142, worksheet.lever_graphs_o2713, 0.002); end
  def test_lever_graphs_p2713; assert_in_epsilon(11.357142857142856, worksheet.lever_graphs_p2713, 0.002); end
  def test_lever_graphs_q2713; assert_in_epsilon(9.571428571428571, worksheet.lever_graphs_q2713, 0.002); end
  def test_lever_graphs_r2713; assert_in_epsilon(7.785714285714285, worksheet.lever_graphs_r2713, 0.002); end
  def test_lever_graphs_s2713; assert_in_epsilon(6.0, worksheet.lever_graphs_s2713, 0.002); end
  def test_lever_graphs_b2714; assert_in_epsilon(4.0, worksheet.lever_graphs_b2714, 0.002); end
  def test_lever_graphs_k2714; assert_in_epsilon(18.700000000000003, worksheet.lever_graphs_k2714, 0.002); end
  def test_lever_graphs_l2714; assert_in_epsilon(18.5, worksheet.lever_graphs_l2714, 0.002); end
  def test_lever_graphs_m2714; assert_in_epsilon(16.428571428571427, worksheet.lever_graphs_m2714, 0.002); end
  def test_lever_graphs_n2714; assert_in_epsilon(14.357142857142858, worksheet.lever_graphs_n2714, 0.002); end
  def test_lever_graphs_o2714; assert_in_epsilon(12.285714285714286, worksheet.lever_graphs_o2714, 0.002); end
  def test_lever_graphs_p2714; assert_in_epsilon(10.214285714285714, worksheet.lever_graphs_p2714, 0.002); end
  def test_lever_graphs_q2714; assert_in_epsilon(8.142857142857142, worksheet.lever_graphs_q2714, 0.002); end
  def test_lever_graphs_r2714; assert_in_epsilon(6.071428571428572, worksheet.lever_graphs_r2714, 0.002); end
  def test_lever_graphs_s2714; assert_in_epsilon(4.000000000000001, worksheet.lever_graphs_s2714, 0.002); end
  def test_lever_graphs_c2699; assert_equal("1975", worksheet.lever_graphs_c2699); end
  def test_lever_graphs_d2699; assert_equal("1980", worksheet.lever_graphs_d2699); end
  def test_lever_graphs_e2699; assert_equal("1985", worksheet.lever_graphs_e2699); end
  def test_lever_graphs_f2699; assert_equal("1990", worksheet.lever_graphs_f2699); end
  def test_lever_graphs_g2699; assert_equal("1995", worksheet.lever_graphs_g2699); end
  def test_lever_graphs_h2699; assert_equal("2000", worksheet.lever_graphs_h2699); end
  def test_lever_graphs_i2699; assert_equal("2005", worksheet.lever_graphs_i2699); end
  def test_lever_graphs_j2699; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2699, 0.002); end
  def test_lever_graphs_k2699; assert_equal("2011", worksheet.lever_graphs_k2699); end
  def test_lever_graphs_l2699; assert_equal("2015", worksheet.lever_graphs_l2699); end
  def test_lever_graphs_m2699; assert_equal("2020", worksheet.lever_graphs_m2699); end
  def test_lever_graphs_n2699; assert_equal("2025", worksheet.lever_graphs_n2699); end
  def test_lever_graphs_o2699; assert_equal("2030", worksheet.lever_graphs_o2699); end
  def test_lever_graphs_p2699; assert_equal("2035", worksheet.lever_graphs_p2699); end
  def test_lever_graphs_q2699; assert_equal("2040", worksheet.lever_graphs_q2699); end
  def test_lever_graphs_r2699; assert_equal("2045", worksheet.lever_graphs_r2699); end
  def test_lever_graphs_s2699; assert_equal("2050", worksheet.lever_graphs_s2699); end
  def test_lever_graphs_b2700; assert_equal("Historic data", worksheet.lever_graphs_b2700); end
  def test_lever_graphs_b2701; assert_in_delta(1.0, worksheet.lever_graphs_b2701, 0.002); end
  def test_lever_graphs_k2701; assert_in_epsilon(16.9, worksheet.lever_graphs_k2701, 0.002); end
  def test_lever_graphs_l2701; assert_in_epsilon(16.8, worksheet.lever_graphs_l2701, 0.002); end
  def test_lever_graphs_m2701; assert_in_epsilon(16.114285714285714, worksheet.lever_graphs_m2701, 0.002); end
  def test_lever_graphs_n2701; assert_in_epsilon(15.428571428571429, worksheet.lever_graphs_n2701, 0.002); end
  def test_lever_graphs_o2701; assert_in_epsilon(14.742857142857142, worksheet.lever_graphs_o2701, 0.002); end
  def test_lever_graphs_p2701; assert_in_epsilon(14.057142857142857, worksheet.lever_graphs_p2701, 0.002); end
  def test_lever_graphs_q2701; assert_in_epsilon(13.37142857142857, worksheet.lever_graphs_q2701, 0.002); end
  def test_lever_graphs_r2701; assert_in_epsilon(12.685714285714285, worksheet.lever_graphs_r2701, 0.002); end
  def test_lever_graphs_s2701; assert_in_epsilon(12.0, worksheet.lever_graphs_s2701, 0.002); end
  def test_lever_graphs_b2702; assert_in_epsilon(2.0, worksheet.lever_graphs_b2702, 0.002); end
  def test_lever_graphs_k2702; assert_in_epsilon(16.9, worksheet.lever_graphs_k2702, 0.002); end
  def test_lever_graphs_l2702; assert_in_epsilon(16.8, worksheet.lever_graphs_l2702, 0.002); end
  def test_lever_graphs_m2702; assert_in_epsilon(15.685714285714287, worksheet.lever_graphs_m2702, 0.002); end
  def test_lever_graphs_n2702; assert_in_epsilon(14.571428571428571, worksheet.lever_graphs_n2702, 0.002); end
  def test_lever_graphs_o2702; assert_in_epsilon(13.457142857142856, worksheet.lever_graphs_o2702, 0.002); end
  def test_lever_graphs_p2702; assert_in_epsilon(12.342857142857142, worksheet.lever_graphs_p2702, 0.002); end
  def test_lever_graphs_q2702; assert_in_epsilon(11.228571428571428, worksheet.lever_graphs_q2702, 0.002); end
  def test_lever_graphs_r2702; assert_in_epsilon(10.114285714285714, worksheet.lever_graphs_r2702, 0.002); end
  def test_lever_graphs_s2702; assert_in_epsilon(9.0, worksheet.lever_graphs_s2702, 0.002); end
  def test_lever_graphs_b2703; assert_in_epsilon(3.0, worksheet.lever_graphs_b2703, 0.002); end
  def test_lever_graphs_k2703; assert_in_epsilon(16.9, worksheet.lever_graphs_k2703, 0.002); end
  def test_lever_graphs_l2703; assert_in_epsilon(16.8, worksheet.lever_graphs_l2703, 0.002); end
  def test_lever_graphs_m2703; assert_in_epsilon(15.257142857142858, worksheet.lever_graphs_m2703, 0.002); end
  def test_lever_graphs_n2703; assert_in_epsilon(13.714285714285714, worksheet.lever_graphs_n2703, 0.002); end
  def test_lever_graphs_o2703; assert_in_epsilon(12.17142857142857, worksheet.lever_graphs_o2703, 0.002); end
  def test_lever_graphs_p2703; assert_in_epsilon(10.628571428571428, worksheet.lever_graphs_p2703, 0.002); end
  def test_lever_graphs_q2703; assert_in_epsilon(9.085714285714285, worksheet.lever_graphs_q2703, 0.002); end
  def test_lever_graphs_r2703; assert_in_epsilon(7.542857142857143, worksheet.lever_graphs_r2703, 0.002); end
  def test_lever_graphs_s2703; assert_in_epsilon(6.0, worksheet.lever_graphs_s2703, 0.002); end
  def test_lever_graphs_b2704; assert_in_epsilon(4.0, worksheet.lever_graphs_b2704, 0.002); end
  def test_lever_graphs_k2704; assert_in_epsilon(16.9, worksheet.lever_graphs_k2704, 0.002); end
  def test_lever_graphs_l2704; assert_in_epsilon(16.8, worksheet.lever_graphs_l2704, 0.002); end
  def test_lever_graphs_m2704; assert_in_epsilon(14.971428571428572, worksheet.lever_graphs_m2704, 0.002); end
  def test_lever_graphs_n2704; assert_in_epsilon(13.142857142857142, worksheet.lever_graphs_n2704, 0.002); end
  def test_lever_graphs_o2704; assert_in_epsilon(11.314285714285715, worksheet.lever_graphs_o2704, 0.002); end
  def test_lever_graphs_p2704; assert_in_epsilon(9.485714285714286, worksheet.lever_graphs_p2704, 0.002); end
  def test_lever_graphs_q2704; assert_in_epsilon(7.6571428571428575, worksheet.lever_graphs_q2704, 0.002); end
  def test_lever_graphs_r2704; assert_in_epsilon(5.828571428571429, worksheet.lever_graphs_r2704, 0.002); end
  def test_lever_graphs_s2704; assert_in_epsilon(4.000000000000001, worksheet.lever_graphs_s2704, 0.002); end
  def test_lever_graphs_c2469; assert_equal("1975", worksheet.lever_graphs_c2469); end
  def test_lever_graphs_d2469; assert_equal("1980", worksheet.lever_graphs_d2469); end
  def test_lever_graphs_e2469; assert_equal("1985", worksheet.lever_graphs_e2469); end
  def test_lever_graphs_f2469; assert_equal("1990", worksheet.lever_graphs_f2469); end
  def test_lever_graphs_g2469; assert_equal("1995", worksheet.lever_graphs_g2469); end
  def test_lever_graphs_h2469; assert_equal("2000", worksheet.lever_graphs_h2469); end
  def test_lever_graphs_i2469; assert_equal("2005", worksheet.lever_graphs_i2469); end
  def test_lever_graphs_j2469; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2469, 0.002); end
  def test_lever_graphs_k2469; assert_equal("2011", worksheet.lever_graphs_k2469); end
  def test_lever_graphs_l2469; assert_equal("2015", worksheet.lever_graphs_l2469); end
  def test_lever_graphs_m2469; assert_equal("2020", worksheet.lever_graphs_m2469); end
  def test_lever_graphs_n2469; assert_equal("2025", worksheet.lever_graphs_n2469); end
  def test_lever_graphs_o2469; assert_equal("2030", worksheet.lever_graphs_o2469); end
  def test_lever_graphs_p2469; assert_equal("2035", worksheet.lever_graphs_p2469); end
  def test_lever_graphs_q2469; assert_equal("2040", worksheet.lever_graphs_q2469); end
  def test_lever_graphs_r2469; assert_equal("2045", worksheet.lever_graphs_r2469); end
  def test_lever_graphs_s2469; assert_equal("2050", worksheet.lever_graphs_s2469); end
  def test_lever_graphs_b2470; assert_equal("Historic data", worksheet.lever_graphs_b2470); end
  def test_lever_graphs_b2471; assert_in_delta(1.0, worksheet.lever_graphs_b2471, 0.002); end
  def test_lever_graphs_k2471; assert_in_epsilon(29.0, worksheet.lever_graphs_k2471, 0.002); end
  def test_lever_graphs_l2471; assert_in_epsilon(28.58974358974359, worksheet.lever_graphs_l2471, 0.002); end
  def test_lever_graphs_m2471; assert_in_epsilon(27.93406593406593, worksheet.lever_graphs_m2471, 0.002); end
  def test_lever_graphs_n2471; assert_in_epsilon(27.27838827838828, worksheet.lever_graphs_n2471, 0.002); end
  def test_lever_graphs_o2471; assert_in_epsilon(26.62271062271062, worksheet.lever_graphs_o2471, 0.002); end
  def test_lever_graphs_p2471; assert_in_epsilon(25.967032967032964, worksheet.lever_graphs_p2471, 0.002); end
  def test_lever_graphs_q2471; assert_in_epsilon(25.31135531135531, worksheet.lever_graphs_q2471, 0.002); end
  def test_lever_graphs_r2471; assert_in_epsilon(24.655677655677653, worksheet.lever_graphs_r2471, 0.002); end
  def test_lever_graphs_s2471; assert_in_epsilon(24.0, worksheet.lever_graphs_s2471, 0.002); end
  def test_lever_graphs_b2472; assert_in_epsilon(2.0, worksheet.lever_graphs_b2472, 0.002); end
  def test_lever_graphs_k2472; assert_in_epsilon(29.0, worksheet.lever_graphs_k2472, 0.002); end
  def test_lever_graphs_l2472; assert_in_epsilon(28.58974358974359, worksheet.lever_graphs_l2472, 0.002); end
  def test_lever_graphs_m2472; assert_in_epsilon(28.076923076923073, worksheet.lever_graphs_m2472, 0.002); end
  def test_lever_graphs_n2472; assert_in_epsilon(27.564102564102566, worksheet.lever_graphs_n2472, 0.002); end
  def test_lever_graphs_o2472; assert_in_epsilon(27.05128205128205, worksheet.lever_graphs_o2472, 0.002); end
  def test_lever_graphs_p2472; assert_in_epsilon(26.538461538461537, worksheet.lever_graphs_p2472, 0.002); end
  def test_lever_graphs_q2472; assert_in_epsilon(26.025641025641026, worksheet.lever_graphs_q2472, 0.002); end
  def test_lever_graphs_r2472; assert_in_epsilon(25.51282051282051, worksheet.lever_graphs_r2472, 0.002); end
  def test_lever_graphs_s2472; assert_in_epsilon(25.0, worksheet.lever_graphs_s2472, 0.002); end
  def test_lever_graphs_b2473; assert_in_epsilon(3.0, worksheet.lever_graphs_b2473, 0.002); end
  def test_lever_graphs_k2473; assert_in_epsilon(29.0, worksheet.lever_graphs_k2473, 0.002); end
  def test_lever_graphs_l2473; assert_in_epsilon(28.58974358974359, worksheet.lever_graphs_l2473, 0.002); end
  def test_lever_graphs_m2473; assert_in_epsilon(28.21978021978022, worksheet.lever_graphs_m2473, 0.002); end
  def test_lever_graphs_n2473; assert_in_epsilon(27.84981684981685, worksheet.lever_graphs_n2473, 0.002); end
  def test_lever_graphs_o2473; assert_in_epsilon(27.479853479853478, worksheet.lever_graphs_o2473, 0.002); end
  def test_lever_graphs_p2473; assert_in_epsilon(27.10989010989011, worksheet.lever_graphs_p2473, 0.002); end
  def test_lever_graphs_q2473; assert_in_epsilon(26.73992673992674, worksheet.lever_graphs_q2473, 0.002); end
  def test_lever_graphs_r2473; assert_in_epsilon(26.36996336996337, worksheet.lever_graphs_r2473, 0.002); end
  def test_lever_graphs_s2473; assert_in_epsilon(26.0, worksheet.lever_graphs_s2473, 0.002); end
  def test_lever_graphs_b2474; assert_in_epsilon(4.0, worksheet.lever_graphs_b2474, 0.002); end
  def test_lever_graphs_k2474; assert_in_epsilon(29.0, worksheet.lever_graphs_k2474, 0.002); end
  def test_lever_graphs_l2474; assert_in_epsilon(28.58974358974359, worksheet.lever_graphs_l2474, 0.002); end
  def test_lever_graphs_m2474; assert_in_epsilon(28.36263736263736, worksheet.lever_graphs_m2474, 0.002); end
  def test_lever_graphs_n2474; assert_in_epsilon(28.13553113553114, worksheet.lever_graphs_n2474, 0.002); end
  def test_lever_graphs_o2474; assert_in_epsilon(27.908424908424905, worksheet.lever_graphs_o2474, 0.002); end
  def test_lever_graphs_p2474; assert_in_epsilon(27.68131868131868, worksheet.lever_graphs_p2474, 0.002); end
  def test_lever_graphs_q2474; assert_in_epsilon(27.454212454212453, worksheet.lever_graphs_q2474, 0.002); end
  def test_lever_graphs_r2474; assert_in_epsilon(27.227106227106226, worksheet.lever_graphs_r2474, 0.002); end
  def test_lever_graphs_s2474; assert_in_epsilon(27.0, worksheet.lever_graphs_s2474, 0.002); end
  def test_lever_graphs_c2459; assert_equal("1975", worksheet.lever_graphs_c2459); end
  def test_lever_graphs_d2459; assert_equal("1980", worksheet.lever_graphs_d2459); end
  def test_lever_graphs_e2459; assert_equal("1985", worksheet.lever_graphs_e2459); end
  def test_lever_graphs_f2459; assert_equal("1990", worksheet.lever_graphs_f2459); end
  def test_lever_graphs_g2459; assert_equal("1995", worksheet.lever_graphs_g2459); end
  def test_lever_graphs_h2459; assert_equal("2000", worksheet.lever_graphs_h2459); end
  def test_lever_graphs_i2459; assert_equal("2005", worksheet.lever_graphs_i2459); end
  def test_lever_graphs_j2459; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2459, 0.002); end
  def test_lever_graphs_k2459; assert_equal("2011", worksheet.lever_graphs_k2459); end
  def test_lever_graphs_l2459; assert_equal("2015", worksheet.lever_graphs_l2459); end
  def test_lever_graphs_m2459; assert_equal("2020", worksheet.lever_graphs_m2459); end
  def test_lever_graphs_n2459; assert_equal("2025", worksheet.lever_graphs_n2459); end
  def test_lever_graphs_o2459; assert_equal("2030", worksheet.lever_graphs_o2459); end
  def test_lever_graphs_p2459; assert_equal("2035", worksheet.lever_graphs_p2459); end
  def test_lever_graphs_q2459; assert_equal("2040", worksheet.lever_graphs_q2459); end
  def test_lever_graphs_r2459; assert_equal("2045", worksheet.lever_graphs_r2459); end
  def test_lever_graphs_s2459; assert_equal("2050", worksheet.lever_graphs_s2459); end
  def test_lever_graphs_b2460; assert_equal("Historic data", worksheet.lever_graphs_b2460); end
  def test_lever_graphs_b2461; assert_in_delta(1.0, worksheet.lever_graphs_b2461, 0.002); end
  def test_lever_graphs_k2461; assert_in_epsilon(26.5, worksheet.lever_graphs_k2461, 0.002); end
  def test_lever_graphs_l2461; assert_in_epsilon(26.346153846153847, worksheet.lever_graphs_l2461, 0.002); end
  def test_lever_graphs_m2461; assert_in_epsilon(26.010989010989007, worksheet.lever_graphs_m2461, 0.002); end
  def test_lever_graphs_n2461; assert_in_epsilon(25.67582417582418, worksheet.lever_graphs_n2461, 0.002); end
  def test_lever_graphs_o2461; assert_in_epsilon(25.34065934065934, worksheet.lever_graphs_o2461, 0.002); end
  def test_lever_graphs_p2461; assert_in_epsilon(25.005494505494504, worksheet.lever_graphs_p2461, 0.002); end
  def test_lever_graphs_q2461; assert_in_epsilon(24.67032967032967, worksheet.lever_graphs_q2461, 0.002); end
  def test_lever_graphs_r2461; assert_in_epsilon(24.335164835164832, worksheet.lever_graphs_r2461, 0.002); end
  def test_lever_graphs_s2461; assert_in_epsilon(24.0, worksheet.lever_graphs_s2461, 0.002); end
  def test_lever_graphs_b2462; assert_in_epsilon(2.0, worksheet.lever_graphs_b2462, 0.002); end
  def test_lever_graphs_k2462; assert_in_epsilon(26.5, worksheet.lever_graphs_k2462, 0.002); end
  def test_lever_graphs_l2462; assert_in_epsilon(26.346153846153847, worksheet.lever_graphs_l2462, 0.002); end
  def test_lever_graphs_m2462; assert_in_epsilon(26.153846153846153, worksheet.lever_graphs_m2462, 0.002); end
  def test_lever_graphs_n2462; assert_in_epsilon(25.961538461538463, worksheet.lever_graphs_n2462, 0.002); end
  def test_lever_graphs_o2462; assert_in_epsilon(25.769230769230766, worksheet.lever_graphs_o2462, 0.002); end
  def test_lever_graphs_p2462; assert_in_epsilon(25.576923076923073, worksheet.lever_graphs_p2462, 0.002); end
  def test_lever_graphs_q2462; assert_in_epsilon(25.384615384615387, worksheet.lever_graphs_q2462, 0.002); end
  def test_lever_graphs_r2462; assert_in_epsilon(25.19230769230769, worksheet.lever_graphs_r2462, 0.002); end
  def test_lever_graphs_s2462; assert_in_epsilon(25.0, worksheet.lever_graphs_s2462, 0.002); end
  def test_lever_graphs_b2463; assert_in_epsilon(3.0, worksheet.lever_graphs_b2463, 0.002); end
  def test_lever_graphs_k2463; assert_in_epsilon(26.5, worksheet.lever_graphs_k2463, 0.002); end
  def test_lever_graphs_l2463; assert_in_epsilon(26.346153846153847, worksheet.lever_graphs_l2463, 0.002); end
  def test_lever_graphs_m2463; assert_in_epsilon(26.296703296703296, worksheet.lever_graphs_m2463, 0.002); end
  def test_lever_graphs_n2463; assert_in_epsilon(26.247252747252748, worksheet.lever_graphs_n2463, 0.002); end
  def test_lever_graphs_o2463; assert_in_epsilon(26.197802197802197, worksheet.lever_graphs_o2463, 0.002); end
  def test_lever_graphs_p2463; assert_in_epsilon(26.148351648351646, worksheet.lever_graphs_p2463, 0.002); end
  def test_lever_graphs_q2463; assert_in_epsilon(26.098901098901102, worksheet.lever_graphs_q2463, 0.002); end
  def test_lever_graphs_r2463; assert_in_epsilon(26.049450549450547, worksheet.lever_graphs_r2463, 0.002); end
  def test_lever_graphs_s2463; assert_in_epsilon(26.0, worksheet.lever_graphs_s2463, 0.002); end
  def test_lever_graphs_b2464; assert_in_epsilon(4.0, worksheet.lever_graphs_b2464, 0.002); end
  def test_lever_graphs_k2464; assert_in_epsilon(26.5, worksheet.lever_graphs_k2464, 0.002); end
  def test_lever_graphs_l2464; assert_in_epsilon(26.346153846153847, worksheet.lever_graphs_l2464, 0.002); end
  def test_lever_graphs_m2464; assert_in_epsilon(26.439560439560438, worksheet.lever_graphs_m2464, 0.002); end
  def test_lever_graphs_n2464; assert_in_epsilon(26.532967032967036, worksheet.lever_graphs_n2464, 0.002); end
  def test_lever_graphs_o2464; assert_in_epsilon(26.626373626373628, worksheet.lever_graphs_o2464, 0.002); end
  def test_lever_graphs_p2464; assert_in_epsilon(26.71978021978022, worksheet.lever_graphs_p2464, 0.002); end
  def test_lever_graphs_q2464; assert_in_epsilon(26.81318681318681, worksheet.lever_graphs_q2464, 0.002); end
  def test_lever_graphs_r2464; assert_in_epsilon(26.906593406593405, worksheet.lever_graphs_r2464, 0.002); end
  def test_lever_graphs_s2464; assert_in_epsilon(27.0, worksheet.lever_graphs_s2464, 0.002); end
  def test_lever_graphs_c2489; assert_equal("1975", worksheet.lever_graphs_c2489); end
  def test_lever_graphs_d2489; assert_equal("1980", worksheet.lever_graphs_d2489); end
  def test_lever_graphs_e2489; assert_equal("1985", worksheet.lever_graphs_e2489); end
  def test_lever_graphs_f2489; assert_equal("1990", worksheet.lever_graphs_f2489); end
  def test_lever_graphs_g2489; assert_equal("1995", worksheet.lever_graphs_g2489); end
  def test_lever_graphs_h2489; assert_equal("2000", worksheet.lever_graphs_h2489); end
  def test_lever_graphs_i2489; assert_equal("2005", worksheet.lever_graphs_i2489); end
  def test_lever_graphs_j2489; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2489, 0.002); end
  def test_lever_graphs_k2489; assert_equal("2011", worksheet.lever_graphs_k2489); end
  def test_lever_graphs_l2489; assert_equal("2015", worksheet.lever_graphs_l2489); end
  def test_lever_graphs_m2489; assert_equal("2020", worksheet.lever_graphs_m2489); end
  def test_lever_graphs_n2489; assert_equal("2025", worksheet.lever_graphs_n2489); end
  def test_lever_graphs_o2489; assert_equal("2030", worksheet.lever_graphs_o2489); end
  def test_lever_graphs_p2489; assert_equal("2035", worksheet.lever_graphs_p2489); end
  def test_lever_graphs_q2489; assert_equal("2040", worksheet.lever_graphs_q2489); end
  def test_lever_graphs_r2489; assert_equal("2045", worksheet.lever_graphs_r2489); end
  def test_lever_graphs_s2489; assert_equal("2050", worksheet.lever_graphs_s2489); end
  def test_lever_graphs_b2490; assert_equal("Historic data", worksheet.lever_graphs_b2490); end
  def test_lever_graphs_b2491; assert_in_delta(1.0, worksheet.lever_graphs_b2491, 0.002); end
  def test_lever_graphs_k2491; assert_in_epsilon(13.0, worksheet.lever_graphs_k2491, 0.002); end
  def test_lever_graphs_l2491; assert_in_epsilon(13.410256410256412, worksheet.lever_graphs_l2491, 0.002); end
  def test_lever_graphs_m2491; assert_in_epsilon(13.923076923076925, worksheet.lever_graphs_m2491, 0.002); end
  def test_lever_graphs_n2491; assert_in_epsilon(14.435897435897438, worksheet.lever_graphs_n2491, 0.002); end
  def test_lever_graphs_o2491; assert_in_epsilon(14.948717948717949, worksheet.lever_graphs_o2491, 0.002); end
  def test_lever_graphs_p2491; assert_in_epsilon(15.461538461538462, worksheet.lever_graphs_p2491, 0.002); end
  def test_lever_graphs_q2491; assert_in_epsilon(15.974358974358974, worksheet.lever_graphs_q2491, 0.002); end
  def test_lever_graphs_r2491; assert_in_epsilon(16.48717948717949, worksheet.lever_graphs_r2491, 0.002); end
  def test_lever_graphs_s2491; assert_in_epsilon(17.0, worksheet.lever_graphs_s2491, 0.002); end
  def test_lever_graphs_b2492; assert_in_epsilon(2.0, worksheet.lever_graphs_b2492, 0.002); end
  def test_lever_graphs_k2492; assert_in_epsilon(13.0, worksheet.lever_graphs_k2492, 0.002); end
  def test_lever_graphs_l2492; assert_in_epsilon(13.410256410256412, worksheet.lever_graphs_l2492, 0.002); end
  def test_lever_graphs_m2492; assert_in_epsilon(13.780219780219781, worksheet.lever_graphs_m2492, 0.002); end
  def test_lever_graphs_n2492; assert_in_epsilon(14.150183150183151, worksheet.lever_graphs_n2492, 0.002); end
  def test_lever_graphs_o2492; assert_in_epsilon(14.520146520146522, worksheet.lever_graphs_o2492, 0.002); end
  def test_lever_graphs_p2492; assert_in_epsilon(14.89010989010989, worksheet.lever_graphs_p2492, 0.002); end
  def test_lever_graphs_q2492; assert_in_epsilon(15.260073260073261, worksheet.lever_graphs_q2492, 0.002); end
  def test_lever_graphs_r2492; assert_in_epsilon(15.63003663003663, worksheet.lever_graphs_r2492, 0.002); end
  def test_lever_graphs_s2492; assert_in_epsilon(16.0, worksheet.lever_graphs_s2492, 0.002); end
  def test_lever_graphs_b2493; assert_in_epsilon(3.0, worksheet.lever_graphs_b2493, 0.002); end
  def test_lever_graphs_k2493; assert_in_epsilon(13.0, worksheet.lever_graphs_k2493, 0.002); end
  def test_lever_graphs_l2493; assert_in_epsilon(13.410256410256412, worksheet.lever_graphs_l2493, 0.002); end
  def test_lever_graphs_m2493; assert_in_epsilon(13.637362637362639, worksheet.lever_graphs_m2493, 0.002); end
  def test_lever_graphs_n2493; assert_in_epsilon(13.864468864468865, worksheet.lever_graphs_n2493, 0.002); end
  def test_lever_graphs_o2493; assert_in_epsilon(14.091575091575091, worksheet.lever_graphs_o2493, 0.002); end
  def test_lever_graphs_p2493; assert_in_epsilon(14.31868131868132, worksheet.lever_graphs_p2493, 0.002); end
  def test_lever_graphs_q2493; assert_in_epsilon(14.545787545787547, worksheet.lever_graphs_q2493, 0.002); end
  def test_lever_graphs_r2493; assert_in_epsilon(14.772893772893772, worksheet.lever_graphs_r2493, 0.002); end
  def test_lever_graphs_s2493; assert_in_epsilon(15.0, worksheet.lever_graphs_s2493, 0.002); end
  def test_lever_graphs_b2494; assert_in_epsilon(4.0, worksheet.lever_graphs_b2494, 0.002); end
  def test_lever_graphs_k2494; assert_in_epsilon(13.0, worksheet.lever_graphs_k2494, 0.002); end
  def test_lever_graphs_l2494; assert_in_epsilon(13.410256410256412, worksheet.lever_graphs_l2494, 0.002); end
  def test_lever_graphs_m2494; assert_in_epsilon(13.494505494505496, worksheet.lever_graphs_m2494, 0.002); end
  def test_lever_graphs_n2494; assert_in_epsilon(13.57875457875458, worksheet.lever_graphs_n2494, 0.002); end
  def test_lever_graphs_o2494; assert_in_epsilon(13.663003663003664, worksheet.lever_graphs_o2494, 0.002); end
  def test_lever_graphs_p2494; assert_in_epsilon(13.747252747252748, worksheet.lever_graphs_p2494, 0.002); end
  def test_lever_graphs_q2494; assert_in_epsilon(13.831501831501832, worksheet.lever_graphs_q2494, 0.002); end
  def test_lever_graphs_r2494; assert_in_epsilon(13.915750915750916, worksheet.lever_graphs_r2494, 0.002); end
  def test_lever_graphs_s2494; assert_in_epsilon(14.0, worksheet.lever_graphs_s2494, 0.002); end
  def test_lever_graphs_c2479; assert_equal("1975", worksheet.lever_graphs_c2479); end
  def test_lever_graphs_d2479; assert_equal("1980", worksheet.lever_graphs_d2479); end
  def test_lever_graphs_e2479; assert_equal("1985", worksheet.lever_graphs_e2479); end
  def test_lever_graphs_f2479; assert_equal("1990", worksheet.lever_graphs_f2479); end
  def test_lever_graphs_g2479; assert_equal("1995", worksheet.lever_graphs_g2479); end
  def test_lever_graphs_h2479; assert_equal("2000", worksheet.lever_graphs_h2479); end
  def test_lever_graphs_i2479; assert_equal("2005", worksheet.lever_graphs_i2479); end
  def test_lever_graphs_j2479; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2479, 0.002); end
  def test_lever_graphs_k2479; assert_equal("2011", worksheet.lever_graphs_k2479); end
  def test_lever_graphs_l2479; assert_equal("2015", worksheet.lever_graphs_l2479); end
  def test_lever_graphs_m2479; assert_equal("2020", worksheet.lever_graphs_m2479); end
  def test_lever_graphs_n2479; assert_equal("2025", worksheet.lever_graphs_n2479); end
  def test_lever_graphs_o2479; assert_equal("2030", worksheet.lever_graphs_o2479); end
  def test_lever_graphs_p2479; assert_equal("2035", worksheet.lever_graphs_p2479); end
  def test_lever_graphs_q2479; assert_equal("2040", worksheet.lever_graphs_q2479); end
  def test_lever_graphs_r2479; assert_equal("2045", worksheet.lever_graphs_r2479); end
  def test_lever_graphs_s2479; assert_equal("2050", worksheet.lever_graphs_s2479); end
  def test_lever_graphs_b2480; assert_equal("Historic data", worksheet.lever_graphs_b2480); end
  def test_lever_graphs_b2481; assert_in_delta(1.0, worksheet.lever_graphs_b2481, 0.002); end
  def test_lever_graphs_k2481; assert_in_epsilon(17.5, worksheet.lever_graphs_k2481, 0.002); end
  def test_lever_graphs_l2481; assert_in_epsilon(17.653846153846153, worksheet.lever_graphs_l2481, 0.002); end
  def test_lever_graphs_m2481; assert_in_epsilon(17.98901098901099, worksheet.lever_graphs_m2481, 0.002); end
  def test_lever_graphs_n2481; assert_in_epsilon(18.324175824175825, worksheet.lever_graphs_n2481, 0.002); end
  def test_lever_graphs_o2481; assert_in_epsilon(18.659340659340657, worksheet.lever_graphs_o2481, 0.002); end
  def test_lever_graphs_p2481; assert_in_epsilon(18.994505494505493, worksheet.lever_graphs_p2481, 0.002); end
  def test_lever_graphs_q2481; assert_in_epsilon(19.32967032967033, worksheet.lever_graphs_q2481, 0.002); end
  def test_lever_graphs_r2481; assert_in_epsilon(19.664835164835164, worksheet.lever_graphs_r2481, 0.002); end
  def test_lever_graphs_s2481; assert_in_epsilon(20.0, worksheet.lever_graphs_s2481, 0.002); end
  def test_lever_graphs_b2482; assert_in_epsilon(2.0, worksheet.lever_graphs_b2482, 0.002); end
  def test_lever_graphs_k2482; assert_in_epsilon(17.5, worksheet.lever_graphs_k2482, 0.002); end
  def test_lever_graphs_l2482; assert_in_epsilon(17.653846153846153, worksheet.lever_graphs_l2482, 0.002); end
  def test_lever_graphs_m2482; assert_in_epsilon(17.846153846153847, worksheet.lever_graphs_m2482, 0.002); end
  def test_lever_graphs_n2482; assert_in_epsilon(18.038461538461537, worksheet.lever_graphs_n2482, 0.002); end
  def test_lever_graphs_o2482; assert_in_epsilon(18.23076923076923, worksheet.lever_graphs_o2482, 0.002); end
  def test_lever_graphs_p2482; assert_in_epsilon(18.42307692307692, worksheet.lever_graphs_p2482, 0.002); end
  def test_lever_graphs_q2482; assert_in_epsilon(18.615384615384613, worksheet.lever_graphs_q2482, 0.002); end
  def test_lever_graphs_r2482; assert_in_epsilon(18.807692307692307, worksheet.lever_graphs_r2482, 0.002); end
  def test_lever_graphs_s2482; assert_in_epsilon(19.0, worksheet.lever_graphs_s2482, 0.002); end
  def test_lever_graphs_b2483; assert_in_epsilon(3.0, worksheet.lever_graphs_b2483, 0.002); end
  def test_lever_graphs_k2483; assert_in_epsilon(17.5, worksheet.lever_graphs_k2483, 0.002); end
  def test_lever_graphs_l2483; assert_in_epsilon(17.653846153846153, worksheet.lever_graphs_l2483, 0.002); end
  def test_lever_graphs_m2483; assert_in_epsilon(17.7032967032967, worksheet.lever_graphs_m2483, 0.002); end
  def test_lever_graphs_n2483; assert_in_epsilon(17.752747252747252, worksheet.lever_graphs_n2483, 0.002); end
  def test_lever_graphs_o2483; assert_in_epsilon(17.802197802197803, worksheet.lever_graphs_o2483, 0.002); end
  def test_lever_graphs_p2483; assert_in_epsilon(17.85164835164835, worksheet.lever_graphs_p2483, 0.002); end
  def test_lever_graphs_q2483; assert_in_epsilon(17.9010989010989, worksheet.lever_graphs_q2483, 0.002); end
  def test_lever_graphs_r2483; assert_in_epsilon(17.95054945054945, worksheet.lever_graphs_r2483, 0.002); end
  def test_lever_graphs_s2483; assert_in_epsilon(18.0, worksheet.lever_graphs_s2483, 0.002); end
  def test_lever_graphs_b2484; assert_in_epsilon(4.0, worksheet.lever_graphs_b2484, 0.002); end
  def test_lever_graphs_k2484; assert_in_epsilon(17.5, worksheet.lever_graphs_k2484, 0.002); end
  def test_lever_graphs_l2484; assert_in_epsilon(17.653846153846153, worksheet.lever_graphs_l2484, 0.002); end
  def test_lever_graphs_m2484; assert_in_epsilon(17.56043956043956, worksheet.lever_graphs_m2484, 0.002); end
  def test_lever_graphs_n2484; assert_in_epsilon(17.467032967032967, worksheet.lever_graphs_n2484, 0.002); end
  def test_lever_graphs_o2484; assert_in_epsilon(17.373626373626372, worksheet.lever_graphs_o2484, 0.002); end
  def test_lever_graphs_p2484; assert_in_epsilon(17.28021978021978, worksheet.lever_graphs_p2484, 0.002); end
  def test_lever_graphs_q2484; assert_in_epsilon(17.186813186813186, worksheet.lever_graphs_q2484, 0.002); end
  def test_lever_graphs_r2484; assert_in_epsilon(17.09340659340659, worksheet.lever_graphs_r2484, 0.002); end
  def test_lever_graphs_s2484; assert_in_epsilon(17.0, worksheet.lever_graphs_s2484, 0.002); end
  def test_lever_graphs_c1798; assert_equal("1975", worksheet.lever_graphs_c1798); end
  def test_lever_graphs_d1798; assert_equal("1980", worksheet.lever_graphs_d1798); end
  def test_lever_graphs_e1798; assert_equal("1985", worksheet.lever_graphs_e1798); end
  def test_lever_graphs_f1798; assert_equal("1990", worksheet.lever_graphs_f1798); end
  def test_lever_graphs_g1798; assert_equal("1995", worksheet.lever_graphs_g1798); end
  def test_lever_graphs_h1798; assert_equal("2000", worksheet.lever_graphs_h1798); end
  def test_lever_graphs_i1798; assert_equal("2005", worksheet.lever_graphs_i1798); end
  def test_lever_graphs_j1798; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1798, 0.002); end
  def test_lever_graphs_k1798; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1798, 0.002); end
  def test_lever_graphs_l1798; assert_equal("2015", worksheet.lever_graphs_l1798); end
  def test_lever_graphs_m1798; assert_equal("2020", worksheet.lever_graphs_m1798); end
  def test_lever_graphs_n1798; assert_equal("2025", worksheet.lever_graphs_n1798); end
  def test_lever_graphs_o1798; assert_equal("2030", worksheet.lever_graphs_o1798); end
  def test_lever_graphs_p1798; assert_equal("2035", worksheet.lever_graphs_p1798); end
  def test_lever_graphs_q1798; assert_equal("2040", worksheet.lever_graphs_q1798); end
  def test_lever_graphs_r1798; assert_equal("2045", worksheet.lever_graphs_r1798); end
  def test_lever_graphs_s1798; assert_equal("2050", worksheet.lever_graphs_s1798); end
  def test_lever_graphs_b1799; assert_equal("Historic data", worksheet.lever_graphs_b1799); end
  def test_lever_graphs_b1800; assert_in_delta(1.0, worksheet.lever_graphs_b1800, 0.002); end
  def test_lever_graphs_k1800; assert_in_delta(0.61, worksheet.lever_graphs_k1800, 0.002); end
  def test_lever_graphs_l1800; assert_in_delta(0.61, worksheet.lever_graphs_l1800, 0.002); end
  def test_lever_graphs_m1800; assert_in_delta(0.61, worksheet.lever_graphs_m1800, 0.002); end
  def test_lever_graphs_n1800; assert_in_delta(0.61, worksheet.lever_graphs_n1800, 0.002); end
  def test_lever_graphs_o1800; assert_in_delta(0.61, worksheet.lever_graphs_o1800, 0.002); end
  def test_lever_graphs_p1800; assert_in_delta(0.61, worksheet.lever_graphs_p1800, 0.002); end
  def test_lever_graphs_q1800; assert_in_delta(0.61, worksheet.lever_graphs_q1800, 0.002); end
  def test_lever_graphs_r1800; assert_in_delta(0.61, worksheet.lever_graphs_r1800, 0.002); end
  def test_lever_graphs_s1800; assert_in_delta(0.61, worksheet.lever_graphs_s1800, 0.002); end
  def test_lever_graphs_b1801; assert_in_epsilon(2.0, worksheet.lever_graphs_b1801, 0.002); end
  def test_lever_graphs_k1801; assert_in_delta(0.61, worksheet.lever_graphs_k1801, 0.002); end
  def test_lever_graphs_l1801; assert_in_delta(0.61, worksheet.lever_graphs_l1801, 0.002); end
  def test_lever_graphs_m1801; assert_in_delta(0.58, worksheet.lever_graphs_m1801, 0.002); end
  def test_lever_graphs_n1801; assert_in_delta(0.58, worksheet.lever_graphs_n1801, 0.002); end
  def test_lever_graphs_o1801; assert_in_delta(0.58, worksheet.lever_graphs_o1801, 0.002); end
  def test_lever_graphs_p1801; assert_in_delta(0.56, worksheet.lever_graphs_p1801, 0.002); end
  def test_lever_graphs_q1801; assert_in_delta(0.54, worksheet.lever_graphs_q1801, 0.002); end
  def test_lever_graphs_r1801; assert_in_delta(0.5, worksheet.lever_graphs_r1801, 0.002); end
  def test_lever_graphs_s1801; assert_in_delta(0.48, worksheet.lever_graphs_s1801, 0.002); end
  def test_lever_graphs_b1802; assert_in_epsilon(3.0, worksheet.lever_graphs_b1802, 0.002); end
  def test_lever_graphs_k1802; assert_in_delta(0.61, worksheet.lever_graphs_k1802, 0.002); end
  def test_lever_graphs_l1802; assert_in_delta(0.61, worksheet.lever_graphs_l1802, 0.002); end
  def test_lever_graphs_m1802; assert_in_delta(0.57, worksheet.lever_graphs_m1802, 0.002); end
  def test_lever_graphs_n1802; assert_in_delta(0.56, worksheet.lever_graphs_n1802, 0.002); end
  def test_lever_graphs_o1802; assert_in_delta(0.53, worksheet.lever_graphs_o1802, 0.002); end
  def test_lever_graphs_p1802; assert_in_delta(0.5, worksheet.lever_graphs_p1802, 0.002); end
  def test_lever_graphs_q1802; assert_in_delta(0.46, worksheet.lever_graphs_q1802, 0.002); end
  def test_lever_graphs_r1802; assert_in_delta(0.41, worksheet.lever_graphs_r1802, 0.002); end
  def test_lever_graphs_s1802; assert_in_delta(0.36, worksheet.lever_graphs_s1802, 0.002); end
  def test_lever_graphs_b1803; assert_in_epsilon(4.0, worksheet.lever_graphs_b1803, 0.002); end
  def test_lever_graphs_k1803; assert_in_delta(0.61, worksheet.lever_graphs_k1803, 0.002); end
  def test_lever_graphs_l1803; assert_in_delta(0.61, worksheet.lever_graphs_l1803, 0.002); end
  def test_lever_graphs_m1803; assert_in_delta(0.56, worksheet.lever_graphs_m1803, 0.002); end
  def test_lever_graphs_n1803; assert_in_delta(0.53, worksheet.lever_graphs_n1803, 0.002); end
  def test_lever_graphs_o1803; assert_in_delta(0.48, worksheet.lever_graphs_o1803, 0.002); end
  def test_lever_graphs_p1803; assert_in_delta(0.43, worksheet.lever_graphs_p1803, 0.002); end
  def test_lever_graphs_q1803; assert_in_delta(0.37, worksheet.lever_graphs_q1803, 0.002); end
  def test_lever_graphs_r1803; assert_in_delta(0.32, worksheet.lever_graphs_r1803, 0.002); end
  def test_lever_graphs_s1803; assert_in_delta(0.26, worksheet.lever_graphs_s1803, 0.002); end
  def test_lever_graphs_b1804; assert_equal("Comparator A", worksheet.lever_graphs_b1804); end
  def test_lever_graphs_b1805; assert_equal("Comparator B", worksheet.lever_graphs_b1805); end
  def test_lever_graphs_b1806; assert_equal("Comparator C", worksheet.lever_graphs_b1806); end
  def test_lever_graphs_d1748; assert_equal("Title", worksheet.lever_graphs_d1748); end
  def test_lever_graphs_e1748; assert_equal("Solid fueled", worksheet.lever_graphs_e1748); end
  def test_lever_graphs_f1748; assert_equal("Liquid fueled", worksheet.lever_graphs_f1748); end
  def test_lever_graphs_g1748; assert_equal("Gas fueled", worksheet.lever_graphs_g1748); end
  def test_lever_graphs_d1749; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1749, 0.002); end
  def test_lever_graphs_e1749; assert_in_delta(0.61, worksheet.lever_graphs_e1749, 0.002); end
  def test_lever_graphs_f1749; assert_in_delta(0.07, worksheet.lever_graphs_f1749, 0.002); end
  def test_lever_graphs_g1749; assert_in_delta(0.32, worksheet.lever_graphs_g1749, 0.002); end
  def test_lever_graphs_d1750; assert_equal("2050: Level 1", worksheet.lever_graphs_d1750); end
  def test_lever_graphs_e1750; assert_in_delta(0.61, worksheet.lever_graphs_e1750, 0.002); end
  def test_lever_graphs_f1750; assert_in_delta(0.27, worksheet.lever_graphs_f1750, 0.002); end
  def test_lever_graphs_g1750; assert_in_delta(0.12, worksheet.lever_graphs_g1750, 0.002); end
  def test_lever_graphs_d1751; assert_equal("2050: Level 2", worksheet.lever_graphs_d1751); end
  def test_lever_graphs_e1751; assert_in_delta(0.48, worksheet.lever_graphs_e1751, 0.002); end
  def test_lever_graphs_f1751; assert_in_delta(0.2, worksheet.lever_graphs_f1751, 0.002); end
  def test_lever_graphs_g1751; assert_in_delta(0.32, worksheet.lever_graphs_g1751, 0.002); end
  def test_lever_graphs_d1752; assert_equal("2050: Level 3", worksheet.lever_graphs_d1752); end
  def test_lever_graphs_e1752; assert_in_delta(0.36, worksheet.lever_graphs_e1752, 0.002); end
  def test_lever_graphs_f1752; assert_in_delta(0.06, worksheet.lever_graphs_f1752, 0.002); end
  def test_lever_graphs_g1752; assert_in_delta(0.58, worksheet.lever_graphs_g1752, 0.002); end
  def test_lever_graphs_d1753; assert_equal("2050: Level 4", worksheet.lever_graphs_d1753); end
  def test_lever_graphs_e1753; assert_in_delta(0.26, worksheet.lever_graphs_e1753, 0.002); end
  def test_lever_graphs_f1753; assert_in_delta(0.04, worksheet.lever_graphs_f1753, 0.002); end
  def test_lever_graphs_g1753; assert_in_delta(0.7, worksheet.lever_graphs_g1753, 0.002); end
  def test_lever_graphs_c3151; assert_equal("1975", worksheet.lever_graphs_c3151); end
  def test_lever_graphs_d3151; assert_equal("1980", worksheet.lever_graphs_d3151); end
  def test_lever_graphs_e3151; assert_equal("1985", worksheet.lever_graphs_e3151); end
  def test_lever_graphs_f3151; assert_equal("1990", worksheet.lever_graphs_f3151); end
  def test_lever_graphs_g3151; assert_equal("1995", worksheet.lever_graphs_g3151); end
  def test_lever_graphs_h3151; assert_equal("2000", worksheet.lever_graphs_h3151); end
  def test_lever_graphs_i3151; assert_equal("2005", worksheet.lever_graphs_i3151); end
  def test_lever_graphs_j3151; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3151, 0.002); end
  def test_lever_graphs_k3151; assert_equal("2011", worksheet.lever_graphs_k3151); end
  def test_lever_graphs_l3151; assert_equal("2015", worksheet.lever_graphs_l3151); end
  def test_lever_graphs_m3151; assert_equal("2020", worksheet.lever_graphs_m3151); end
  def test_lever_graphs_n3151; assert_equal("2025", worksheet.lever_graphs_n3151); end
  def test_lever_graphs_o3151; assert_equal("2030", worksheet.lever_graphs_o3151); end
  def test_lever_graphs_p3151; assert_equal("2035", worksheet.lever_graphs_p3151); end
  def test_lever_graphs_q3151; assert_equal("2040", worksheet.lever_graphs_q3151); end
  def test_lever_graphs_r3151; assert_equal("2045", worksheet.lever_graphs_r3151); end
  def test_lever_graphs_s3151; assert_equal("2050", worksheet.lever_graphs_s3151); end
  def test_lever_graphs_b3152; assert_equal("Historic data", worksheet.lever_graphs_b3152); end
  def test_lever_graphs_b3153; assert_in_delta(1.0, worksheet.lever_graphs_b3153, 0.002); end
  def test_lever_graphs_k3153; assert_in_delta(1.0, worksheet.lever_graphs_k3153, 0.002); end
  def test_lever_graphs_l3153; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l3153, 0.002); end
  def test_lever_graphs_m3153; assert_in_epsilon(1.0054945054945055, worksheet.lever_graphs_m3153, 0.002); end
  def test_lever_graphs_n3153; assert_in_epsilon(1.0212454212454214, worksheet.lever_graphs_n3153, 0.002); end
  def test_lever_graphs_o3153; assert_in_epsilon(1.036996336996337, worksheet.lever_graphs_o3153, 0.002); end
  def test_lever_graphs_p3153; assert_in_epsilon(1.0527472527472528, worksheet.lever_graphs_p3153, 0.002); end
  def test_lever_graphs_q3153; assert_in_epsilon(1.0684981684981685, worksheet.lever_graphs_q3153, 0.002); end
  def test_lever_graphs_r3153; assert_in_epsilon(1.0842490842490844, worksheet.lever_graphs_r3153, 0.002); end
  def test_lever_graphs_s3153; assert_in_epsilon(1.1, worksheet.lever_graphs_s3153, 0.002); end
  def test_lever_graphs_b3154; assert_in_epsilon(2.0, worksheet.lever_graphs_b3154, 0.002); end
  def test_lever_graphs_k3154; assert_in_delta(1.0, worksheet.lever_graphs_k3154, 0.002); end
  def test_lever_graphs_l3154; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l3154, 0.002); end
  def test_lever_graphs_m3154; assert_in_delta(0.9912087912087912, worksheet.lever_graphs_m3154, 0.002); end
  def test_lever_graphs_n3154; assert_in_delta(0.9926739926739927, worksheet.lever_graphs_n3154, 0.002); end
  def test_lever_graphs_o3154; assert_in_delta(0.9941391941391942, worksheet.lever_graphs_o3154, 0.002); end
  def test_lever_graphs_p3154; assert_in_delta(0.9956043956043956, worksheet.lever_graphs_p3154, 0.002); end
  def test_lever_graphs_q3154; assert_in_delta(0.9970695970695971, worksheet.lever_graphs_q3154, 0.002); end
  def test_lever_graphs_r3154; assert_in_delta(0.9985347985347985, worksheet.lever_graphs_r3154, 0.002); end
  def test_lever_graphs_s3154; assert_in_delta(1.0, worksheet.lever_graphs_s3154, 0.002); end
  def test_lever_graphs_b3155; assert_in_epsilon(3.0, worksheet.lever_graphs_b3155, 0.002); end
  def test_lever_graphs_k3155; assert_in_delta(1.0, worksheet.lever_graphs_k3155, 0.002); end
  def test_lever_graphs_l3155; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l3155, 0.002); end
  def test_lever_graphs_m3155; assert_in_delta(0.976923076923077, worksheet.lever_graphs_m3155, 0.002); end
  def test_lever_graphs_n3155; assert_in_delta(0.9641025641025641, worksheet.lever_graphs_n3155, 0.002); end
  def test_lever_graphs_o3155; assert_in_delta(0.9512820512820513, worksheet.lever_graphs_o3155, 0.002); end
  def test_lever_graphs_p3155; assert_in_delta(0.9384615384615385, worksheet.lever_graphs_p3155, 0.002); end
  def test_lever_graphs_q3155; assert_in_delta(0.9256410256410257, worksheet.lever_graphs_q3155, 0.002); end
  def test_lever_graphs_r3155; assert_in_delta(0.9128205128205129, worksheet.lever_graphs_r3155, 0.002); end
  def test_lever_graphs_s3155; assert_in_delta(0.9, worksheet.lever_graphs_s3155, 0.002); end
  def test_lever_graphs_b3156; assert_in_epsilon(4.0, worksheet.lever_graphs_b3156, 0.002); end
  def test_lever_graphs_k3156; assert_in_delta(1.0, worksheet.lever_graphs_k3156, 0.002); end
  def test_lever_graphs_l3156; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l3156, 0.002); end
  def test_lever_graphs_m3156; assert_in_delta(0.9483516483516484, worksheet.lever_graphs_m3156, 0.002); end
  def test_lever_graphs_n3156; assert_in_delta(0.906959706959707, worksheet.lever_graphs_n3156, 0.002); end
  def test_lever_graphs_o3156; assert_in_delta(0.8655677655677656, worksheet.lever_graphs_o3156, 0.002); end
  def test_lever_graphs_p3156; assert_in_delta(0.8241758241758241, worksheet.lever_graphs_p3156, 0.002); end
  def test_lever_graphs_q3156; assert_in_delta(0.7827838827838828, worksheet.lever_graphs_q3156, 0.002); end
  def test_lever_graphs_r3156; assert_in_delta(0.7413919413919414, worksheet.lever_graphs_r3156, 0.002); end
  def test_lever_graphs_s3156; assert_in_delta(0.7, worksheet.lever_graphs_s3156, 0.002); end
  def test_lever_graphs_d3416; assert_equal("Title", worksheet.lever_graphs_d3416); end
  def test_lever_graphs_e3416; assert_equal("Forest", worksheet.lever_graphs_e3416); end
  def test_lever_graphs_f3416; assert_equal("Arable.bio", worksheet.lever_graphs_f3416); end
  def test_lever_graphs_g3416; assert_equal("natural.grassland", worksheet.lever_graphs_g3416); end
  def test_lever_graphs_d3417; assert_in_epsilon(2011.0, worksheet.lever_graphs_d3417, 0.002); end
  def test_lever_graphs_e3417; assert_in_delta(0.8, worksheet.lever_graphs_e3417, 0.002); end
  def test_lever_graphs_f3417; assert_in_delta(0.0, (worksheet.lever_graphs_f3417||0), 0.002); end
  def test_lever_graphs_g3417; assert_in_delta(0.2, worksheet.lever_graphs_g3417, 0.002); end
  def test_lever_graphs_d3418; assert_equal("2050: Level 1", worksheet.lever_graphs_d3418); end
  def test_lever_graphs_e3418; assert_in_delta(0.8, worksheet.lever_graphs_e3418, 0.002); end
  def test_lever_graphs_f3418; assert_in_delta(0.0, (worksheet.lever_graphs_f3418||0), 0.002); end
  def test_lever_graphs_g3418; assert_in_delta(0.2, worksheet.lever_graphs_g3418, 0.002); end
  def test_lever_graphs_d3419; assert_equal("2050: Level 2", worksheet.lever_graphs_d3419); end
  def test_lever_graphs_e3419; assert_in_delta(0.48, worksheet.lever_graphs_e3419, 0.002); end
  def test_lever_graphs_f3419; assert_in_delta(0.4, worksheet.lever_graphs_f3419, 0.002); end
  def test_lever_graphs_g3419; assert_in_delta(0.12, worksheet.lever_graphs_g3419, 0.002); end
  def test_lever_graphs_d3420; assert_equal("2050: Level 3", worksheet.lever_graphs_d3420); end
  def test_lever_graphs_e3420; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_e3420, 0.002); end
  def test_lever_graphs_f3420; assert_in_delta(0.6, worksheet.lever_graphs_f3420, 0.002); end
  def test_lever_graphs_g3420; assert_in_delta(0.07999999999999996, worksheet.lever_graphs_g3420, 0.002); end
  def test_lever_graphs_d3421; assert_equal("2050: Level 4", worksheet.lever_graphs_d3421); end
  def test_lever_graphs_e3421; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_e3421, 0.002); end
  def test_lever_graphs_f3421; assert_in_delta(0.8, worksheet.lever_graphs_f3421, 0.002); end
  def test_lever_graphs_g3421; assert_in_delta(0.040000000000000036, worksheet.lever_graphs_g3421, 0.002); end
  def test_lever_graphs_c3385; assert_equal("1975", worksheet.lever_graphs_c3385); end
  def test_lever_graphs_d3385; assert_equal("1980", worksheet.lever_graphs_d3385); end
  def test_lever_graphs_e3385; assert_equal("1985", worksheet.lever_graphs_e3385); end
  def test_lever_graphs_f3385; assert_equal("1990", worksheet.lever_graphs_f3385); end
  def test_lever_graphs_g3385; assert_equal("1995", worksheet.lever_graphs_g3385); end
  def test_lever_graphs_h3385; assert_equal("2000", worksheet.lever_graphs_h3385); end
  def test_lever_graphs_i3385; assert_equal("2005", worksheet.lever_graphs_i3385); end
  def test_lever_graphs_j3385; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3385, 0.002); end
  def test_lever_graphs_k3385; assert_equal("2011", worksheet.lever_graphs_k3385); end
  def test_lever_graphs_l3385; assert_equal("2015", worksheet.lever_graphs_l3385); end
  def test_lever_graphs_m3385; assert_equal("2020", worksheet.lever_graphs_m3385); end
  def test_lever_graphs_n3385; assert_equal("2025", worksheet.lever_graphs_n3385); end
  def test_lever_graphs_o3385; assert_equal("2030", worksheet.lever_graphs_o3385); end
  def test_lever_graphs_p3385; assert_equal("2035", worksheet.lever_graphs_p3385); end
  def test_lever_graphs_q3385; assert_equal("2040", worksheet.lever_graphs_q3385); end
  def test_lever_graphs_r3385; assert_equal("2045", worksheet.lever_graphs_r3385); end
  def test_lever_graphs_s3385; assert_equal("2050", worksheet.lever_graphs_s3385); end
  def test_lever_graphs_b3386; assert_equal("Historic data", worksheet.lever_graphs_b3386); end
  def test_lever_graphs_b3387; assert_in_delta(1.0, worksheet.lever_graphs_b3387, 0.002); end
  def test_lever_graphs_k3387; assert_in_delta(0.8, worksheet.lever_graphs_k3387, 0.002); end
  def test_lever_graphs_l3387; assert_in_delta(0.8, worksheet.lever_graphs_l3387, 0.002); end
  def test_lever_graphs_m3387; assert_in_delta(0.8, worksheet.lever_graphs_m3387, 0.002); end
  def test_lever_graphs_n3387; assert_in_delta(0.8, worksheet.lever_graphs_n3387, 0.002); end
  def test_lever_graphs_o3387; assert_in_delta(0.8, worksheet.lever_graphs_o3387, 0.002); end
  def test_lever_graphs_p3387; assert_in_delta(0.8, worksheet.lever_graphs_p3387, 0.002); end
  def test_lever_graphs_q3387; assert_in_delta(0.8, worksheet.lever_graphs_q3387, 0.002); end
  def test_lever_graphs_r3387; assert_in_delta(0.8, worksheet.lever_graphs_r3387, 0.002); end
  def test_lever_graphs_s3387; assert_in_delta(0.8, worksheet.lever_graphs_s3387, 0.002); end
  def test_lever_graphs_b3388; assert_in_epsilon(2.0, worksheet.lever_graphs_b3388, 0.002); end
  def test_lever_graphs_k3388; assert_in_delta(0.48, worksheet.lever_graphs_k3388, 0.002); end
  def test_lever_graphs_l3388; assert_in_delta(0.48, worksheet.lever_graphs_l3388, 0.002); end
  def test_lever_graphs_m3388; assert_in_delta(0.48, worksheet.lever_graphs_m3388, 0.002); end
  def test_lever_graphs_n3388; assert_in_delta(0.48, worksheet.lever_graphs_n3388, 0.002); end
  def test_lever_graphs_o3388; assert_in_delta(0.48, worksheet.lever_graphs_o3388, 0.002); end
  def test_lever_graphs_p3388; assert_in_delta(0.48, worksheet.lever_graphs_p3388, 0.002); end
  def test_lever_graphs_q3388; assert_in_delta(0.48, worksheet.lever_graphs_q3388, 0.002); end
  def test_lever_graphs_r3388; assert_in_delta(0.48, worksheet.lever_graphs_r3388, 0.002); end
  def test_lever_graphs_s3388; assert_in_delta(0.48, worksheet.lever_graphs_s3388, 0.002); end
  def test_lever_graphs_b3389; assert_in_epsilon(3.0, worksheet.lever_graphs_b3389, 0.002); end
  def test_lever_graphs_k3389; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_k3389, 0.002); end
  def test_lever_graphs_l3389; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_l3389, 0.002); end
  def test_lever_graphs_m3389; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_m3389, 0.002); end
  def test_lever_graphs_n3389; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_n3389, 0.002); end
  def test_lever_graphs_o3389; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_o3389, 0.002); end
  def test_lever_graphs_p3389; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_p3389, 0.002); end
  def test_lever_graphs_q3389; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_q3389, 0.002); end
  def test_lever_graphs_r3389; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_r3389, 0.002); end
  def test_lever_graphs_s3389; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_s3389, 0.002); end
  def test_lever_graphs_b3390; assert_in_epsilon(4.0, worksheet.lever_graphs_b3390, 0.002); end
  def test_lever_graphs_k3390; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_k3390, 0.002); end
  def test_lever_graphs_l3390; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_l3390, 0.002); end
  def test_lever_graphs_m3390; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_m3390, 0.002); end
  def test_lever_graphs_n3390; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_n3390, 0.002); end
  def test_lever_graphs_o3390; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_o3390, 0.002); end
  def test_lever_graphs_p3390; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_p3390, 0.002); end
  def test_lever_graphs_q3390; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_q3390, 0.002); end
  def test_lever_graphs_r3390; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_r3390, 0.002); end
  def test_lever_graphs_s3390; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_s3390, 0.002); end
  def test_lever_graphs_c2582; assert_equal("1975", worksheet.lever_graphs_c2582); end
  def test_lever_graphs_d2582; assert_equal("1980", worksheet.lever_graphs_d2582); end
  def test_lever_graphs_e2582; assert_equal("1985", worksheet.lever_graphs_e2582); end
  def test_lever_graphs_f2582; assert_equal("1990", worksheet.lever_graphs_f2582); end
  def test_lever_graphs_g2582; assert_equal("1995", worksheet.lever_graphs_g2582); end
  def test_lever_graphs_h2582; assert_equal("2000", worksheet.lever_graphs_h2582); end
  def test_lever_graphs_i2582; assert_equal("2005", worksheet.lever_graphs_i2582); end
  def test_lever_graphs_j2582; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2582, 0.002); end
  def test_lever_graphs_k2582; assert_equal("2011", worksheet.lever_graphs_k2582); end
  def test_lever_graphs_l2582; assert_equal("2015", worksheet.lever_graphs_l2582); end
  def test_lever_graphs_m2582; assert_equal("2020", worksheet.lever_graphs_m2582); end
  def test_lever_graphs_n2582; assert_equal("2025", worksheet.lever_graphs_n2582); end
  def test_lever_graphs_o2582; assert_equal("2030", worksheet.lever_graphs_o2582); end
  def test_lever_graphs_p2582; assert_equal("2035", worksheet.lever_graphs_p2582); end
  def test_lever_graphs_q2582; assert_equal("2040", worksheet.lever_graphs_q2582); end
  def test_lever_graphs_r2582; assert_equal("2045", worksheet.lever_graphs_r2582); end
  def test_lever_graphs_s2582; assert_equal("2050", worksheet.lever_graphs_s2582); end
  def test_lever_graphs_b2583; assert_equal("Historic data", worksheet.lever_graphs_b2583); end
  def test_lever_graphs_b2584; assert_in_delta(1.0, worksheet.lever_graphs_b2584, 0.002); end
  def test_lever_graphs_k2584; assert_in_epsilon(24.0, worksheet.lever_graphs_k2584, 0.002); end
  def test_lever_graphs_l2584; assert_in_epsilon(25.641025641025642, worksheet.lever_graphs_l2584, 0.002); end
  def test_lever_graphs_m2584; assert_in_epsilon(27.692307692307693, worksheet.lever_graphs_m2584, 0.002); end
  def test_lever_graphs_n2584; assert_in_epsilon(29.743589743589745, worksheet.lever_graphs_n2584, 0.002); end
  def test_lever_graphs_o2584; assert_in_epsilon(31.794871794871796, worksheet.lever_graphs_o2584, 0.002); end
  def test_lever_graphs_p2584; assert_in_epsilon(33.84615384615384, worksheet.lever_graphs_p2584, 0.002); end
  def test_lever_graphs_q2584; assert_in_epsilon(35.8974358974359, worksheet.lever_graphs_q2584, 0.002); end
  def test_lever_graphs_r2584; assert_in_epsilon(37.94871794871795, worksheet.lever_graphs_r2584, 0.002); end
  def test_lever_graphs_s2584; assert_in_epsilon(40.0, worksheet.lever_graphs_s2584, 0.002); end
  def test_lever_graphs_b2585; assert_in_epsilon(2.0, worksheet.lever_graphs_b2585, 0.002); end
  def test_lever_graphs_k2585; assert_in_epsilon(24.0, worksheet.lever_graphs_k2585, 0.002); end
  def test_lever_graphs_l2585; assert_in_epsilon(25.641025641025642, worksheet.lever_graphs_l2585, 0.002); end
  def test_lever_graphs_m2585; assert_in_epsilon(26.978021978021978, worksheet.lever_graphs_m2585, 0.002); end
  def test_lever_graphs_n2585; assert_in_epsilon(28.315018315018317, worksheet.lever_graphs_n2585, 0.002); end
  def test_lever_graphs_o2585; assert_in_epsilon(29.65201465201465, worksheet.lever_graphs_o2585, 0.002); end
  def test_lever_graphs_p2585; assert_in_epsilon(30.98901098901099, worksheet.lever_graphs_p2585, 0.002); end
  def test_lever_graphs_q2585; assert_in_epsilon(32.32600732600733, worksheet.lever_graphs_q2585, 0.002); end
  def test_lever_graphs_r2585; assert_in_epsilon(33.663003663003664, worksheet.lever_graphs_r2585, 0.002); end
  def test_lever_graphs_s2585; assert_in_epsilon(35.0, worksheet.lever_graphs_s2585, 0.002); end
  def test_lever_graphs_b2586; assert_in_epsilon(3.0, worksheet.lever_graphs_b2586, 0.002); end
  def test_lever_graphs_k2586; assert_in_epsilon(24.0, worksheet.lever_graphs_k2586, 0.002); end
  def test_lever_graphs_l2586; assert_in_epsilon(25.641025641025642, worksheet.lever_graphs_l2586, 0.002); end
  def test_lever_graphs_m2586; assert_in_epsilon(26.263736263736263, worksheet.lever_graphs_m2586, 0.002); end
  def test_lever_graphs_n2586; assert_in_epsilon(26.88644688644689, worksheet.lever_graphs_n2586, 0.002); end
  def test_lever_graphs_o2586; assert_in_epsilon(27.509157509157507, worksheet.lever_graphs_o2586, 0.002); end
  def test_lever_graphs_p2586; assert_in_epsilon(28.13186813186813, worksheet.lever_graphs_p2586, 0.002); end
  def test_lever_graphs_q2586; assert_in_epsilon(28.754578754578755, worksheet.lever_graphs_q2586, 0.002); end
  def test_lever_graphs_r2586; assert_in_epsilon(29.377289377289376, worksheet.lever_graphs_r2586, 0.002); end
  def test_lever_graphs_s2586; assert_in_epsilon(30.0, worksheet.lever_graphs_s2586, 0.002); end
  def test_lever_graphs_b2587; assert_in_epsilon(4.0, worksheet.lever_graphs_b2587, 0.002); end
  def test_lever_graphs_k2587; assert_in_epsilon(24.0, worksheet.lever_graphs_k2587, 0.002); end
  def test_lever_graphs_l2587; assert_in_epsilon(25.641025641025642, worksheet.lever_graphs_l2587, 0.002); end
  def test_lever_graphs_m2587; assert_in_epsilon(25.549450549450547, worksheet.lever_graphs_m2587, 0.002); end
  def test_lever_graphs_n2587; assert_in_epsilon(25.45787545787546, worksheet.lever_graphs_n2587, 0.002); end
  def test_lever_graphs_o2587; assert_in_epsilon(25.366300366300365, worksheet.lever_graphs_o2587, 0.002); end
  def test_lever_graphs_p2587; assert_in_epsilon(25.274725274725274, worksheet.lever_graphs_p2587, 0.002); end
  def test_lever_graphs_q2587; assert_in_epsilon(25.183150183150182, worksheet.lever_graphs_q2587, 0.002); end
  def test_lever_graphs_r2587; assert_in_epsilon(25.09157509157509, worksheet.lever_graphs_r2587, 0.002); end
  def test_lever_graphs_s2587; assert_in_epsilon(25.0, worksheet.lever_graphs_s2587, 0.002); end
  def test_lever_graphs_d2592; assert_equal("Title", worksheet.lever_graphs_d2592); end
  def test_lever_graphs_e2592; assert_equal("Global urban incandescent light bulb", worksheet.lever_graphs_e2592); end
  def test_lever_graphs_f2592; assert_equal("Global urban halogens light bulb", worksheet.lever_graphs_f2592); end
  def test_lever_graphs_g2592; assert_equal("Global urban compact fluorescent lamp", worksheet.lever_graphs_g2592); end
  def test_lever_graphs_h2592; assert_equal("Global urban LEDs bulb", worksheet.lever_graphs_h2592); end
  def test_lever_graphs_d2593; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2593, 0.002); end
  def test_lever_graphs_e2593; assert_in_delta(0.717, worksheet.lever_graphs_e2593, 0.002); end
  def test_lever_graphs_f2593; assert_in_delta(0.03, worksheet.lever_graphs_f2593, 0.002); end
  def test_lever_graphs_g2593; assert_in_delta(0.25, worksheet.lever_graphs_g2593, 0.002); end
  def test_lever_graphs_h2593; assert_in_delta(0.0030000000000000027, worksheet.lever_graphs_h2593, 0.002); end
  def test_lever_graphs_d2594; assert_equal("2050: Level 1", worksheet.lever_graphs_d2594); end
  def test_lever_graphs_e2594; assert_in_delta(0.51, worksheet.lever_graphs_e2594, 0.002); end
  def test_lever_graphs_f2594; assert_in_delta(0.03, worksheet.lever_graphs_f2594, 0.002); end
  def test_lever_graphs_g2594; assert_in_delta(0.45, worksheet.lever_graphs_g2594, 0.002); end
  def test_lever_graphs_h2594; assert_in_delta(0.01, worksheet.lever_graphs_h2594, 0.002); end
  def test_lever_graphs_d2595; assert_equal("2050: Level 2", worksheet.lever_graphs_d2595); end
  def test_lever_graphs_e2595; assert_in_delta(0.20000000000000007, worksheet.lever_graphs_e2595, 0.002); end
  def test_lever_graphs_f2595; assert_in_delta(0.01, worksheet.lever_graphs_f2595, 0.002); end
  def test_lever_graphs_g2595; assert_in_delta(0.69, worksheet.lever_graphs_g2595, 0.002); end
  def test_lever_graphs_h2595; assert_in_delta(0.1, worksheet.lever_graphs_h2595, 0.002); end
  def test_lever_graphs_d2596; assert_equal("2050: Level 3", worksheet.lever_graphs_d2596); end
  def test_lever_graphs_e2596; assert_in_delta(0.0, (worksheet.lever_graphs_e2596||0), 0.002); end
  def test_lever_graphs_f2596; assert_in_delta(0.0, (worksheet.lever_graphs_f2596||0), 0.002); end
  def test_lever_graphs_g2596; assert_in_delta(0.5, worksheet.lever_graphs_g2596, 0.002); end
  def test_lever_graphs_h2596; assert_in_delta(0.5, worksheet.lever_graphs_h2596, 0.002); end
  def test_lever_graphs_d2597; assert_equal("2050: Level 4", worksheet.lever_graphs_d2597); end
  def test_lever_graphs_e2597; assert_in_delta(0.0, (worksheet.lever_graphs_e2597||0), 0.002); end
  def test_lever_graphs_f2597; assert_in_delta(0.0, (worksheet.lever_graphs_f2597||0), 0.002); end
  def test_lever_graphs_g2597; assert_in_delta(0.2, worksheet.lever_graphs_g2597, 0.002); end
  def test_lever_graphs_h2597; assert_in_delta(0.8, worksheet.lever_graphs_h2597, 0.002); end
  def test_lever_graphs_d1777; assert_equal("Title", worksheet.lever_graphs_d1777); end
  def test_lever_graphs_e1777; assert_equal("liquid-fuel efficient power plant", worksheet.lever_graphs_e1777); end
  def test_lever_graphs_f1777; assert_equal("Liquid-fuel inefficient power plant", worksheet.lever_graphs_f1777); end
  def test_lever_graphs_d1778; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1778, 0.002); end
  def test_lever_graphs_e1778; assert_in_delta(0.3, worksheet.lever_graphs_e1778, 0.002); end
  def test_lever_graphs_f1778; assert_in_delta(0.7, worksheet.lever_graphs_f1778, 0.002); end
  def test_lever_graphs_d1779; assert_equal("2050: Level 1", worksheet.lever_graphs_d1779); end
  def test_lever_graphs_e1779; assert_in_delta(0.3288, worksheet.lever_graphs_e1779, 0.002); end
  def test_lever_graphs_f1779; assert_in_delta(0.6712, worksheet.lever_graphs_f1779, 0.002); end
  def test_lever_graphs_d1780; assert_equal("2050: Level 2", worksheet.lever_graphs_d1780); end
  def test_lever_graphs_e1780; assert_in_delta(0.47, worksheet.lever_graphs_e1780, 0.002); end
  def test_lever_graphs_f1780; assert_in_delta(0.53, worksheet.lever_graphs_f1780, 0.002); end
  def test_lever_graphs_d1781; assert_equal("2050: Level 3", worksheet.lever_graphs_d1781); end
  def test_lever_graphs_e1781; assert_in_delta(0.65, worksheet.lever_graphs_e1781, 0.002); end
  def test_lever_graphs_f1781; assert_in_delta(0.35, worksheet.lever_graphs_f1781, 0.002); end
  def test_lever_graphs_d1782; assert_equal("2050: Level 4", worksheet.lever_graphs_d1782); end
  def test_lever_graphs_e1782; assert_in_delta(0.7142, worksheet.lever_graphs_e1782, 0.002); end
  def test_lever_graphs_f1782; assert_in_delta(0.28580000000000005, worksheet.lever_graphs_f1782, 0.002); end
  def test_lever_graphs_c1570; assert_equal("1975", worksheet.lever_graphs_c1570); end
  def test_lever_graphs_d1570; assert_equal("1980", worksheet.lever_graphs_d1570); end
  def test_lever_graphs_e1570; assert_equal("1985", worksheet.lever_graphs_e1570); end
  def test_lever_graphs_f1570; assert_equal("1990", worksheet.lever_graphs_f1570); end
  def test_lever_graphs_g1570; assert_equal("1995", worksheet.lever_graphs_g1570); end
  def test_lever_graphs_h1570; assert_equal("2000", worksheet.lever_graphs_h1570); end
  def test_lever_graphs_i1570; assert_equal("2005", worksheet.lever_graphs_i1570); end
  def test_lever_graphs_j1570; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1570, 0.002); end
  def test_lever_graphs_k1570; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1570, 0.002); end
  def test_lever_graphs_l1570; assert_equal("2015", worksheet.lever_graphs_l1570); end
  def test_lever_graphs_m1570; assert_equal("2020", worksheet.lever_graphs_m1570); end
  def test_lever_graphs_n1570; assert_equal("2025", worksheet.lever_graphs_n1570); end
  def test_lever_graphs_o1570; assert_equal("2030", worksheet.lever_graphs_o1570); end
  def test_lever_graphs_p1570; assert_equal("2035", worksheet.lever_graphs_p1570); end
  def test_lever_graphs_q1570; assert_equal("2040", worksheet.lever_graphs_q1570); end
  def test_lever_graphs_r1570; assert_equal("2045", worksheet.lever_graphs_r1570); end
  def test_lever_graphs_s1570; assert_equal("2050", worksheet.lever_graphs_s1570); end
  def test_lever_graphs_b1571; assert_equal("Historic data", worksheet.lever_graphs_b1571); end
  def test_lever_graphs_b1572; assert_in_delta(1.0, worksheet.lever_graphs_b1572, 0.002); end
  def test_lever_graphs_k1572; assert_in_delta(0.24, worksheet.lever_graphs_k1572, 0.002); end
  def test_lever_graphs_l1572; assert_in_delta(0.24246153846153845, worksheet.lever_graphs_l1572, 0.002); end
  def test_lever_graphs_m1572; assert_in_delta(0.2421098901098901, worksheet.lever_graphs_m1572, 0.002); end
  def test_lever_graphs_n1572; assert_in_delta(0.24175824175824173, worksheet.lever_graphs_n1572, 0.002); end
  def test_lever_graphs_o1572; assert_in_delta(0.2414065934065934, worksheet.lever_graphs_o1572, 0.002); end
  def test_lever_graphs_p1572; assert_in_delta(0.24105494505494504, worksheet.lever_graphs_p1572, 0.002); end
  def test_lever_graphs_q1572; assert_in_delta(0.24070329670329668, worksheet.lever_graphs_q1572, 0.002); end
  def test_lever_graphs_r1572; assert_in_delta(0.24035164835164835, worksheet.lever_graphs_r1572, 0.002); end
  def test_lever_graphs_s1572; assert_in_delta(0.24, worksheet.lever_graphs_s1572, 0.002); end
  def test_lever_graphs_b1573; assert_in_epsilon(2.0, worksheet.lever_graphs_b1573, 0.002); end
  def test_lever_graphs_k1573; assert_in_delta(0.24, worksheet.lever_graphs_k1573, 0.002); end
  def test_lever_graphs_l1573; assert_in_delta(0.24246153846153845, worksheet.lever_graphs_l1573, 0.002); end
  def test_lever_graphs_m1573; assert_in_delta(0.2455384615384615, worksheet.lever_graphs_m1573, 0.002); end
  def test_lever_graphs_n1573; assert_in_delta(0.24861538461538457, worksheet.lever_graphs_n1573, 0.002); end
  def test_lever_graphs_o1573; assert_in_delta(0.25169230769230766, worksheet.lever_graphs_o1573, 0.002); end
  def test_lever_graphs_p1573; assert_in_delta(0.25476923076923075, worksheet.lever_graphs_p1573, 0.002); end
  def test_lever_graphs_q1573; assert_in_delta(0.2578461538461539, worksheet.lever_graphs_q1573, 0.002); end
  def test_lever_graphs_r1573; assert_in_delta(0.26092307692307687, worksheet.lever_graphs_r1573, 0.002); end
  def test_lever_graphs_s1573; assert_in_delta(0.264, worksheet.lever_graphs_s1573, 0.002); end
  def test_lever_graphs_b1574; assert_in_epsilon(3.0, worksheet.lever_graphs_b1574, 0.002); end
  def test_lever_graphs_k1574; assert_in_delta(0.24, worksheet.lever_graphs_k1574, 0.002); end
  def test_lever_graphs_l1574; assert_in_delta(0.24246153846153845, worksheet.lever_graphs_l1574, 0.002); end
  def test_lever_graphs_m1574; assert_in_delta(0.24896703296703293, worksheet.lever_graphs_m1574, 0.002); end
  def test_lever_graphs_n1574; assert_in_delta(0.25547252747252747, worksheet.lever_graphs_n1574, 0.002); end
  def test_lever_graphs_o1574; assert_in_delta(0.26197802197802195, worksheet.lever_graphs_o1574, 0.002); end
  def test_lever_graphs_p1574; assert_in_delta(0.2684835164835164, worksheet.lever_graphs_p1574, 0.002); end
  def test_lever_graphs_q1574; assert_in_delta(0.27498901098901096, worksheet.lever_graphs_q1574, 0.002); end
  def test_lever_graphs_r1574; assert_in_delta(0.28149450549450544, worksheet.lever_graphs_r1574, 0.002); end
  def test_lever_graphs_s1574; assert_in_delta(0.288, worksheet.lever_graphs_s1574, 0.002); end
  def test_lever_graphs_b1575; assert_in_epsilon(4.0, worksheet.lever_graphs_b1575, 0.002); end
  def test_lever_graphs_k1575; assert_in_delta(0.24, worksheet.lever_graphs_k1575, 0.002); end
  def test_lever_graphs_l1575; assert_in_delta(0.24246153846153845, worksheet.lever_graphs_l1575, 0.002); end
  def test_lever_graphs_m1575; assert_in_delta(0.2523956043956043, worksheet.lever_graphs_m1575, 0.002); end
  def test_lever_graphs_n1575; assert_in_delta(0.26232967032967036, worksheet.lever_graphs_n1575, 0.002); end
  def test_lever_graphs_o1575; assert_in_delta(0.27226373626373623, worksheet.lever_graphs_o1575, 0.002); end
  def test_lever_graphs_p1575; assert_in_delta(0.2821978021978022, worksheet.lever_graphs_p1575, 0.002); end
  def test_lever_graphs_q1575; assert_in_delta(0.29213186813186814, worksheet.lever_graphs_q1575, 0.002); end
  def test_lever_graphs_r1575; assert_in_delta(0.30206593406593407, worksheet.lever_graphs_r1575, 0.002); end
  def test_lever_graphs_s1575; assert_in_delta(0.312, worksheet.lever_graphs_s1575, 0.002); end
  def test_lever_graphs_c1582; assert_equal("1975", worksheet.lever_graphs_c1582); end
  def test_lever_graphs_d1582; assert_equal("1980", worksheet.lever_graphs_d1582); end
  def test_lever_graphs_e1582; assert_equal("1985", worksheet.lever_graphs_e1582); end
  def test_lever_graphs_f1582; assert_equal("1990", worksheet.lever_graphs_f1582); end
  def test_lever_graphs_g1582; assert_equal("1995", worksheet.lever_graphs_g1582); end
  def test_lever_graphs_h1582; assert_equal("2000", worksheet.lever_graphs_h1582); end
  def test_lever_graphs_i1582; assert_equal("2005", worksheet.lever_graphs_i1582); end
  def test_lever_graphs_j1582; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1582, 0.002); end
  def test_lever_graphs_k1582; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1582, 0.002); end
  def test_lever_graphs_l1582; assert_equal("2015", worksheet.lever_graphs_l1582); end
  def test_lever_graphs_m1582; assert_equal("2020", worksheet.lever_graphs_m1582); end
  def test_lever_graphs_n1582; assert_equal("2025", worksheet.lever_graphs_n1582); end
  def test_lever_graphs_o1582; assert_equal("2030", worksheet.lever_graphs_o1582); end
  def test_lever_graphs_p1582; assert_equal("2035", worksheet.lever_graphs_p1582); end
  def test_lever_graphs_q1582; assert_equal("2040", worksheet.lever_graphs_q1582); end
  def test_lever_graphs_r1582; assert_equal("2045", worksheet.lever_graphs_r1582); end
  def test_lever_graphs_s1582; assert_equal("2050", worksheet.lever_graphs_s1582); end
  def test_lever_graphs_b1583; assert_equal("Historic data", worksheet.lever_graphs_b1583); end
  def test_lever_graphs_b1584; assert_in_delta(1.0, worksheet.lever_graphs_b1584, 0.002); end
  def test_lever_graphs_k1584; assert_in_epsilon(20000.0, worksheet.lever_graphs_k1584, 0.002); end
  def test_lever_graphs_l1584; assert_in_epsilon(20205.1282051282, worksheet.lever_graphs_l1584, 0.002); end
  def test_lever_graphs_m1584; assert_in_epsilon(20175.82417582417, worksheet.lever_graphs_m1584, 0.002); end
  def test_lever_graphs_n1584; assert_in_epsilon(20146.520146520146, worksheet.lever_graphs_n1584, 0.002); end
  def test_lever_graphs_o1584; assert_in_epsilon(20117.216117216114, worksheet.lever_graphs_o1584, 0.002); end
  def test_lever_graphs_p1584; assert_in_epsilon(20087.912087912082, worksheet.lever_graphs_p1584, 0.002); end
  def test_lever_graphs_q1584; assert_in_epsilon(20058.608058608057, worksheet.lever_graphs_q1584, 0.002); end
  def test_lever_graphs_r1584; assert_in_epsilon(20029.30402930403, worksheet.lever_graphs_r1584, 0.002); end
  def test_lever_graphs_s1584; assert_in_epsilon(20000.0, worksheet.lever_graphs_s1584, 0.002); end
  def test_lever_graphs_b1585; assert_in_epsilon(2.0, worksheet.lever_graphs_b1585, 0.002); end
  def test_lever_graphs_k1585; assert_in_epsilon(20000.0, worksheet.lever_graphs_k1585, 0.002); end
  def test_lever_graphs_l1585; assert_in_epsilon(20205.1282051282, worksheet.lever_graphs_l1585, 0.002); end
  def test_lever_graphs_m1585; assert_in_epsilon(20318.681318681312, worksheet.lever_graphs_m1585, 0.002); end
  def test_lever_graphs_n1585; assert_in_epsilon(20432.234432234432, worksheet.lever_graphs_n1585, 0.002); end
  def test_lever_graphs_o1585; assert_in_epsilon(20545.787545787545, worksheet.lever_graphs_o1585, 0.002); end
  def test_lever_graphs_p1585; assert_in_epsilon(20659.340659340658, worksheet.lever_graphs_p1585, 0.002); end
  def test_lever_graphs_q1585; assert_in_epsilon(20772.89377289377, worksheet.lever_graphs_q1585, 0.002); end
  def test_lever_graphs_r1585; assert_in_epsilon(20886.446886446887, worksheet.lever_graphs_r1585, 0.002); end
  def test_lever_graphs_s1585; assert_in_epsilon(21000.0, worksheet.lever_graphs_s1585, 0.002); end
  def test_lever_graphs_b1586; assert_in_epsilon(3.0, worksheet.lever_graphs_b1586, 0.002); end
  def test_lever_graphs_k1586; assert_in_epsilon(20000.0, worksheet.lever_graphs_k1586, 0.002); end
  def test_lever_graphs_l1586; assert_in_epsilon(20205.1282051282, worksheet.lever_graphs_l1586, 0.002); end
  def test_lever_graphs_m1586; assert_in_epsilon(20461.538461538454, worksheet.lever_graphs_m1586, 0.002); end
  def test_lever_graphs_n1586; assert_in_epsilon(20717.948717948715, worksheet.lever_graphs_n1586, 0.002); end
  def test_lever_graphs_o1586; assert_in_epsilon(20974.35897435897, worksheet.lever_graphs_o1586, 0.002); end
  def test_lever_graphs_p1586; assert_in_epsilon(21230.769230769227, worksheet.lever_graphs_p1586, 0.002); end
  def test_lever_graphs_q1586; assert_in_epsilon(21487.179487179485, worksheet.lever_graphs_q1586, 0.002); end
  def test_lever_graphs_r1586; assert_in_epsilon(21743.589743589742, worksheet.lever_graphs_r1586, 0.002); end
  def test_lever_graphs_s1586; assert_in_epsilon(22000.0, worksheet.lever_graphs_s1586, 0.002); end
  def test_lever_graphs_b1587; assert_in_epsilon(4.0, worksheet.lever_graphs_b1587, 0.002); end
  def test_lever_graphs_k1587; assert_in_epsilon(20000.0, worksheet.lever_graphs_k1587, 0.002); end
  def test_lever_graphs_l1587; assert_in_epsilon(20205.1282051282, worksheet.lever_graphs_l1587, 0.002); end
  def test_lever_graphs_m1587; assert_in_epsilon(20604.3956043956, worksheet.lever_graphs_m1587, 0.002); end
  def test_lever_graphs_n1587; assert_in_epsilon(21003.663003663, worksheet.lever_graphs_n1587, 0.002); end
  def test_lever_graphs_o1587; assert_in_epsilon(21402.930402930397, worksheet.lever_graphs_o1587, 0.002); end
  def test_lever_graphs_p1587; assert_in_epsilon(21802.197802197796, worksheet.lever_graphs_p1587, 0.002); end
  def test_lever_graphs_q1587; assert_in_epsilon(22201.4652014652, worksheet.lever_graphs_q1587, 0.002); end
  def test_lever_graphs_r1587; assert_in_epsilon(22600.732600732597, worksheet.lever_graphs_r1587, 0.002); end
  def test_lever_graphs_s1587; assert_in_epsilon(23000.0, worksheet.lever_graphs_s1587, 0.002); end
  def test_lever_graphs_c3043; assert_equal("1975", worksheet.lever_graphs_c3043); end
  def test_lever_graphs_d3043; assert_equal("1980", worksheet.lever_graphs_d3043); end
  def test_lever_graphs_e3043; assert_equal("1985", worksheet.lever_graphs_e3043); end
  def test_lever_graphs_f3043; assert_equal("1990", worksheet.lever_graphs_f3043); end
  def test_lever_graphs_g3043; assert_equal("1995", worksheet.lever_graphs_g3043); end
  def test_lever_graphs_h3043; assert_equal("2000", worksheet.lever_graphs_h3043); end
  def test_lever_graphs_i3043; assert_equal("2005", worksheet.lever_graphs_i3043); end
  def test_lever_graphs_j3043; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3043, 0.002); end
  def test_lever_graphs_k3043; assert_equal("2011", worksheet.lever_graphs_k3043); end
  def test_lever_graphs_l3043; assert_equal("2015", worksheet.lever_graphs_l3043); end
  def test_lever_graphs_m3043; assert_equal("2020", worksheet.lever_graphs_m3043); end
  def test_lever_graphs_n3043; assert_equal("2025", worksheet.lever_graphs_n3043); end
  def test_lever_graphs_o3043; assert_equal("2030", worksheet.lever_graphs_o3043); end
  def test_lever_graphs_p3043; assert_equal("2035", worksheet.lever_graphs_p3043); end
  def test_lever_graphs_q3043; assert_equal("2040", worksheet.lever_graphs_q3043); end
  def test_lever_graphs_r3043; assert_equal("2045", worksheet.lever_graphs_r3043); end
  def test_lever_graphs_s3043; assert_equal("2050", worksheet.lever_graphs_s3043); end
  def test_lever_graphs_b3044; assert_equal("Historic data", worksheet.lever_graphs_b3044); end
  def test_lever_graphs_c3044; assert_in_epsilon(113.0, worksheet.lever_graphs_c3044, 0.002); end
  def test_lever_graphs_d3044; assert_in_epsilon(126.0, worksheet.lever_graphs_d3044, 0.002); end
  def test_lever_graphs_e3044; assert_in_epsilon(131.0, worksheet.lever_graphs_e3044, 0.002); end
  def test_lever_graphs_f3044; assert_in_epsilon(143.0, worksheet.lever_graphs_f3044, 0.002); end
  def test_lever_graphs_g3044; assert_in_epsilon(153.0, worksheet.lever_graphs_g3044, 0.002); end
  def test_lever_graphs_h3044; assert_in_epsilon(165.0, worksheet.lever_graphs_h3044, 0.002); end
  def test_lever_graphs_i3044; assert_in_epsilon(171.0, worksheet.lever_graphs_i3044, 0.002); end
  def test_lever_graphs_j3044; assert_in_epsilon(185.0, worksheet.lever_graphs_j3044, 0.002); end
  def test_lever_graphs_k3044; assert_in_epsilon(187.0, worksheet.lever_graphs_k3044, 0.002); end
  def test_lever_graphs_b3045; assert_in_delta(1.0, worksheet.lever_graphs_b3045, 0.002); end
  def test_lever_graphs_k3045; assert_in_epsilon(187.0, worksheet.lever_graphs_k3045, 0.002); end
  def test_lever_graphs_l3045; assert_in_epsilon(187.0, worksheet.lever_graphs_l3045, 0.002); end
  def test_lever_graphs_m3045; assert_in_epsilon(189.5705979588412, worksheet.lever_graphs_m3045, 0.002); end
  def test_lever_graphs_n3045; assert_in_epsilon(193.039472841604, worksheet.lever_graphs_n3045, 0.002); end
  def test_lever_graphs_o3045; assert_in_epsilon(200.49830306235523, worksheet.lever_graphs_o3045, 0.002); end
  def test_lever_graphs_p3045; assert_in_epsilon(214.308933160323, worksheet.lever_graphs_p3045, 0.002); end
  def test_lever_graphs_q3045; assert_in_epsilon(234.0, worksheet.lever_graphs_q3045, 0.002); end
  def test_lever_graphs_r3045; assert_in_epsilon(253.69106683967703, worksheet.lever_graphs_r3045, 0.002); end
  def test_lever_graphs_s3045; assert_in_epsilon(281.0, worksheet.lever_graphs_s3045, 0.002); end
  def test_lever_graphs_b3046; assert_in_epsilon(2.0, worksheet.lever_graphs_b3046, 0.002); end
  def test_lever_graphs_k3046; assert_in_epsilon(187.0, worksheet.lever_graphs_k3046, 0.002); end
  def test_lever_graphs_l3046; assert_in_epsilon(187.0, worksheet.lever_graphs_l3046, 0.002); end
  def test_lever_graphs_m3046; assert_in_epsilon(187.90244396427403, worksheet.lever_graphs_m3046, 0.002); end
  def test_lever_graphs_n3046; assert_in_epsilon(189.1202404656695, worksheet.lever_graphs_n3046, 0.002); end
  def test_lever_graphs_o3046; assert_in_epsilon(191.7387659686992, worksheet.lever_graphs_o3046, 0.002); end
  def test_lever_graphs_p3046; assert_in_epsilon(196.5871786626666, worksheet.lever_graphs_p3046, 0.002); end
  def test_lever_graphs_q3046; assert_in_epsilon(203.50000000000003, worksheet.lever_graphs_q3046, 0.002); end
  def test_lever_graphs_r3046; assert_in_epsilon(210.41282133733344, worksheet.lever_graphs_r3046, 0.002); end
  def test_lever_graphs_s3046; assert_in_epsilon(220.00000000000003, worksheet.lever_graphs_s3046, 0.002); end
  def test_lever_graphs_b3047; assert_in_epsilon(3.0, worksheet.lever_graphs_b3047, 0.002); end
  def test_lever_graphs_k3047; assert_in_epsilon(187.0, worksheet.lever_graphs_k3047, 0.002); end
  def test_lever_graphs_l3047; assert_in_epsilon(187.0, worksheet.lever_graphs_l3047, 0.002); end
  def test_lever_graphs_m3047; assert_in_epsilon(186.04286246213363, worksheet.lever_graphs_m3047, 0.002); end
  def test_lever_graphs_n3047; assert_in_epsilon(184.75126011216872, worksheet.lever_graphs_n3047, 0.002); end
  def test_lever_graphs_o3047; assert_in_epsilon(181.9740360938039, worksheet.lever_graphs_o3047, 0.002); end
  def test_lever_graphs_p3047; assert_in_epsilon(176.83178020626272, worksheet.lever_graphs_p3047, 0.002); end
  def test_lever_graphs_q3047; assert_in_epsilon(169.5, worksheet.lever_graphs_q3047, 0.002); end
  def test_lever_graphs_r3047; assert_in_epsilon(162.16821979373728, worksheet.lever_graphs_r3047, 0.002); end
  def test_lever_graphs_s3047; assert_in_epsilon(152.0, worksheet.lever_graphs_s3047, 0.002); end
  def test_lever_graphs_b3048; assert_in_epsilon(4.0, worksheet.lever_graphs_b3048, 0.002); end
  def test_lever_graphs_k3048; assert_in_epsilon(187.0, worksheet.lever_graphs_k3048, 0.002); end
  def test_lever_graphs_l3048; assert_in_epsilon(187.0, worksheet.lever_graphs_l3048, 0.002); end
  def test_lever_graphs_m3048; assert_in_epsilon(182.26900588426037, worksheet.lever_graphs_m3048, 0.002); end
  def test_lever_graphs_n3048; assert_in_epsilon(175.8847999830054, worksheet.lever_graphs_n3048, 0.002); end
  def test_lever_graphs_o3048; assert_in_epsilon(162.15737840651644, worksheet.lever_graphs_o3048, 0.002); end
  def test_lever_graphs_p3048; assert_in_epsilon(136.7399421623843, worksheet.lever_graphs_p3048, 0.002); end
  def test_lever_graphs_q3048; assert_in_epsilon(100.5, worksheet.lever_graphs_q3048, 0.002); end
  def test_lever_graphs_r3048; assert_in_epsilon(64.2600578376157, worksheet.lever_graphs_r3048, 0.002); end
  def test_lever_graphs_s3048; assert_in_epsilon(14.0, worksheet.lever_graphs_s3048, 0.002); end
  def test_lever_graphs_b3049; assert_equal("USA", worksheet.lever_graphs_b3049); end
  def test_lever_graphs_k3049; assert_in_epsilon(350.0, worksheet.lever_graphs_k3049, 0.002); end
  def test_lever_graphs_b3050; assert_equal("UK ", worksheet.lever_graphs_b3050); end
  def test_lever_graphs_k3050; assert_in_epsilon(360.0, worksheet.lever_graphs_k3050, 0.002); end
  def test_lever_graphs_b3051; assert_equal("Japan", worksheet.lever_graphs_b3051); end
  def test_lever_graphs_k3051; assert_in_epsilon(150.66, worksheet.lever_graphs_k3051, 0.002); end
  def test_lever_graphs_b3052; assert_equal("Brazil", worksheet.lever_graphs_b3052); end
  def test_lever_graphs_k3052; assert_in_epsilon(344.0, worksheet.lever_graphs_k3052, 0.002); end
  def test_lever_graphs_b3053; assert_equal("China", worksheet.lever_graphs_b3053); end
  def test_lever_graphs_k3053; assert_in_epsilon(367.0, worksheet.lever_graphs_k3053, 0.002); end
  def test_lever_graphs_b3054; assert_equal("Europe", worksheet.lever_graphs_b3054); end
  def test_lever_graphs_k3054; assert_in_epsilon(281.0, worksheet.lever_graphs_k3054, 0.002); end
  def test_lever_graphs_b3055; assert_equal("India ", worksheet.lever_graphs_b3055); end
  def test_lever_graphs_k3055; assert_in_epsilon(14.0, worksheet.lever_graphs_k3055, 0.002); end
  def test_lever_graphs_b3056; assert_equal("Nigeria", worksheet.lever_graphs_b3056); end
  def test_lever_graphs_k3056; assert_in_epsilon(34.0, worksheet.lever_graphs_k3056, 0.002); end
  def test_lever_graphs_b3057; assert_equal("WHO healthy diet recommendation", worksheet.lever_graphs_b3057); end
  def test_lever_graphs_k3057; assert_in_epsilon(162.0, worksheet.lever_graphs_k3057, 0.002); end
  def test_lever_graphs_c3070; assert_equal("1975", worksheet.lever_graphs_c3070); end
  def test_lever_graphs_d3070; assert_equal("1980", worksheet.lever_graphs_d3070); end
  def test_lever_graphs_e3070; assert_equal("1985", worksheet.lever_graphs_e3070); end
  def test_lever_graphs_f3070; assert_equal("1990", worksheet.lever_graphs_f3070); end
  def test_lever_graphs_g3070; assert_equal("1995", worksheet.lever_graphs_g3070); end
  def test_lever_graphs_h3070; assert_equal("2000", worksheet.lever_graphs_h3070); end
  def test_lever_graphs_i3070; assert_equal("2005", worksheet.lever_graphs_i3070); end
  def test_lever_graphs_j3070; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3070, 0.002); end
  def test_lever_graphs_k3070; assert_equal("2011", worksheet.lever_graphs_k3070); end
  def test_lever_graphs_l3070; assert_equal("2015", worksheet.lever_graphs_l3070); end
  def test_lever_graphs_m3070; assert_equal("2020", worksheet.lever_graphs_m3070); end
  def test_lever_graphs_n3070; assert_equal("2025", worksheet.lever_graphs_n3070); end
  def test_lever_graphs_o3070; assert_equal("2030", worksheet.lever_graphs_o3070); end
  def test_lever_graphs_p3070; assert_equal("2035", worksheet.lever_graphs_p3070); end
  def test_lever_graphs_q3070; assert_equal("2040", worksheet.lever_graphs_q3070); end
  def test_lever_graphs_r3070; assert_equal("2045", worksheet.lever_graphs_r3070); end
  def test_lever_graphs_s3070; assert_equal("2050", worksheet.lever_graphs_s3070); end
  def test_lever_graphs_b3071; assert_equal("Historic data", worksheet.lever_graphs_b3071); end
  def test_lever_graphs_c3071; assert_in_delta(0.4, worksheet.lever_graphs_c3071, 0.002); end
  def test_lever_graphs_d3071; assert_in_delta(0.3484, worksheet.lever_graphs_d3071, 0.002); end
  def test_lever_graphs_e3071; assert_in_delta(0.3333, worksheet.lever_graphs_e3071, 0.002); end
  def test_lever_graphs_f3071; assert_in_delta(0.3125, worksheet.lever_graphs_f3071, 0.002); end
  def test_lever_graphs_g3071; assert_in_delta(0.2593, worksheet.lever_graphs_g3071, 0.002); end
  def test_lever_graphs_h3071; assert_in_delta(0.2451, worksheet.lever_graphs_h3071, 0.002); end
  def test_lever_graphs_i3071; assert_in_delta(0.237, worksheet.lever_graphs_i3071, 0.002); end
  def test_lever_graphs_j3071; assert_in_delta(0.2227, worksheet.lever_graphs_j3071, 0.002); end
  def test_lever_graphs_k3071; assert_in_delta(0.2208, worksheet.lever_graphs_k3071, 0.002); end
  def test_lever_graphs_b3072; assert_in_delta(1.0, worksheet.lever_graphs_b3072, 0.002); end
  def test_lever_graphs_k3072; assert_in_delta(0.22099999999999997, worksheet.lever_graphs_k3072, 0.002); end
  def test_lever_graphs_l3072; assert_in_delta(0.22356410256410253, worksheet.lever_graphs_l3072, 0.002); end
  def test_lever_graphs_m3072; assert_in_delta(0.23134065934065934, worksheet.lever_graphs_m3072, 0.002); end
  def test_lever_graphs_n3072; assert_in_delta(0.2391172161172161, worksheet.lever_graphs_n3072, 0.002); end
  def test_lever_graphs_o3072; assert_in_delta(0.24689377289377287, worksheet.lever_graphs_o3072, 0.002); end
  def test_lever_graphs_p3072; assert_in_delta(0.25467032967032965, worksheet.lever_graphs_p3072, 0.002); end
  def test_lever_graphs_q3072; assert_in_delta(0.2624468864468864, worksheet.lever_graphs_q3072, 0.002); end
  def test_lever_graphs_r3072; assert_in_delta(0.2702234432234432, worksheet.lever_graphs_r3072, 0.002); end
  def test_lever_graphs_s3072; assert_in_delta(0.278, worksheet.lever_graphs_s3072, 0.002); end
  def test_lever_graphs_b3073; assert_in_epsilon(2.0, worksheet.lever_graphs_b3073, 0.002); end
  def test_lever_graphs_k3073; assert_in_delta(0.22099999999999997, worksheet.lever_graphs_k3073, 0.002); end
  def test_lever_graphs_l3073; assert_in_delta(0.22356410256410253, worksheet.lever_graphs_l3073, 0.002); end
  def test_lever_graphs_m3073; assert_in_delta(0.22676923076923075, worksheet.lever_graphs_m3073, 0.002); end
  def test_lever_graphs_n3073; assert_in_delta(0.22997435897435894, worksheet.lever_graphs_n3073, 0.002); end
  def test_lever_graphs_o3073; assert_in_delta(0.23317948717948717, worksheet.lever_graphs_o3073, 0.002); end
  def test_lever_graphs_p3073; assert_in_delta(0.2363846153846154, worksheet.lever_graphs_p3073, 0.002); end
  def test_lever_graphs_q3073; assert_in_delta(0.2395897435897436, worksheet.lever_graphs_q3073, 0.002); end
  def test_lever_graphs_r3073; assert_in_delta(0.24279487179487177, worksheet.lever_graphs_r3073, 0.002); end
  def test_lever_graphs_s3073; assert_in_delta(0.246, worksheet.lever_graphs_s3073, 0.002); end
  def test_lever_graphs_b3074; assert_in_epsilon(3.0, worksheet.lever_graphs_b3074, 0.002); end
  def test_lever_graphs_k3074; assert_in_delta(0.22099999999999997, worksheet.lever_graphs_k3074, 0.002); end
  def test_lever_graphs_l3074; assert_in_delta(0.22356410256410253, worksheet.lever_graphs_l3074, 0.002); end
  def test_lever_graphs_m3074; assert_in_delta(0.2231978021978022, worksheet.lever_graphs_m3074, 0.002); end
  def test_lever_graphs_n3074; assert_in_delta(0.22283150183150183, worksheet.lever_graphs_n3074, 0.002); end
  def test_lever_graphs_o3074; assert_in_delta(0.22246520146520146, worksheet.lever_graphs_o3074, 0.002); end
  def test_lever_graphs_p3074; assert_in_delta(0.22209890109890107, worksheet.lever_graphs_p3074, 0.002); end
  def test_lever_graphs_q3074; assert_in_delta(0.2217326007326007, worksheet.lever_graphs_q3074, 0.002); end
  def test_lever_graphs_r3074; assert_in_delta(0.22136630036630034, worksheet.lever_graphs_r3074, 0.002); end
  def test_lever_graphs_s3074; assert_in_delta(0.22099999999999997, worksheet.lever_graphs_s3074, 0.002); end
  def test_lever_graphs_b3075; assert_in_epsilon(4.0, worksheet.lever_graphs_b3075, 0.002); end
  def test_lever_graphs_k3075; assert_in_delta(0.22099999999999997, worksheet.lever_graphs_k3075, 0.002); end
  def test_lever_graphs_l3075; assert_in_delta(0.22356410256410253, worksheet.lever_graphs_l3075, 0.002); end
  def test_lever_graphs_m3075; assert_in_delta(0.20519780219780218, worksheet.lever_graphs_m3075, 0.002); end
  def test_lever_graphs_n3075; assert_in_delta(0.18683150183150182, worksheet.lever_graphs_n3075, 0.002); end
  def test_lever_graphs_o3075; assert_in_delta(0.16846520146520144, worksheet.lever_graphs_o3075, 0.002); end
  def test_lever_graphs_p3075; assert_in_delta(0.1500989010989011, worksheet.lever_graphs_p3075, 0.002); end
  def test_lever_graphs_q3075; assert_in_delta(0.13173260073260074, worksheet.lever_graphs_q3075, 0.002); end
  def test_lever_graphs_r3075; assert_in_delta(0.11336630036630038, worksheet.lever_graphs_r3075, 0.002); end
  def test_lever_graphs_s3075; assert_in_delta(0.095, worksheet.lever_graphs_s3075, 0.002); end
  def test_lever_graphs_b3076; assert_equal("USA", worksheet.lever_graphs_b3076); end
  def test_lever_graphs_k3076; assert_in_delta(0.24, worksheet.lever_graphs_k3076, 0.002); end
  def test_lever_graphs_b3077; assert_equal("UK ", worksheet.lever_graphs_b3077); end
  def test_lever_graphs_k3077; assert_in_delta(0.19, worksheet.lever_graphs_k3077, 0.002); end
  def test_lever_graphs_b3078; assert_equal("Japan", worksheet.lever_graphs_b3078); end
  def test_lever_graphs_k3078; assert_in_delta(0.161, worksheet.lever_graphs_k3078, 0.002); end
  def test_lever_graphs_b3079; assert_equal("Canada", worksheet.lever_graphs_b3079); end
  def test_lever_graphs_k3079; assert_in_delta(0.28, worksheet.lever_graphs_k3079, 0.002); end
  def test_lever_graphs_b3080; assert_equal("Brazil ", worksheet.lever_graphs_b3080); end
  def test_lever_graphs_k3080; assert_in_delta(0.38, worksheet.lever_graphs_k3080, 0.002); end
  def test_lever_graphs_b3081; assert_equal("China ", worksheet.lever_graphs_b3081); end
  def test_lever_graphs_k3081; assert_in_delta(0.09, worksheet.lever_graphs_k3081, 0.002); end
  def test_lever_graphs_b3082; assert_equal("Europe", worksheet.lever_graphs_b3082); end
  def test_lever_graphs_k3082; assert_in_delta(0.22, worksheet.lever_graphs_k3082, 0.002); end
  def test_lever_graphs_b3083; assert_equal("India", worksheet.lever_graphs_b3083); end
  def test_lever_graphs_k3083; assert_in_delta(0.47, worksheet.lever_graphs_k3083, 0.002); end
  def test_lever_graphs_b3084; assert_equal("Nigeria", worksheet.lever_graphs_b3084); end
  def test_lever_graphs_k3084; assert_in_delta(0.52, worksheet.lever_graphs_k3084, 0.002); end
  def test_lever_graphs_b3085; assert_equal("WHO healthy diet recommendation", worksheet.lever_graphs_b3085); end
  def test_lever_graphs_d1509; assert_equal("Title", worksheet.lever_graphs_d1509); end
  def test_lever_graphs_e1509; assert_equal("Urban passenger walk", worksheet.lever_graphs_e1509); end
  def test_lever_graphs_f1509; assert_equal("Urban passenger bike", worksheet.lever_graphs_f1509); end
  def test_lever_graphs_g1509; assert_equal("Urban passenger motorbike", worksheet.lever_graphs_g1509); end
  def test_lever_graphs_h1509; assert_equal("Urban passenger car", worksheet.lever_graphs_h1509); end
  def test_lever_graphs_i1509; assert_equal("Urban passenger bus", worksheet.lever_graphs_i1509); end
  def test_lever_graphs_j1509; assert_equal("Urban passenger train", worksheet.lever_graphs_j1509); end
  def test_lever_graphs_d1510; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1510, 0.002); end
  def test_lever_graphs_e1510; assert_in_delta(0.014029126814902794, worksheet.lever_graphs_e1510, 0.002); end
  def test_lever_graphs_f1510; assert_in_delta(0.003050510137966473, worksheet.lever_graphs_f1510, 0.002); end
  def test_lever_graphs_g1510; assert_in_delta(0.01163819442092095, worksheet.lever_graphs_g1510, 0.002); end
  def test_lever_graphs_h1510; assert_in_delta(0.7598986494851144, worksheet.lever_graphs_h1510, 0.002); end
  def test_lever_graphs_i1510; assert_in_delta(0.19310320114294077, worksheet.lever_graphs_i1510, 0.002); end
  def test_lever_graphs_j1510; assert_in_delta(0.01828031799815466, worksheet.lever_graphs_j1510, 0.002); end
  def test_lever_graphs_d1511; assert_equal("2050: Level 1", worksheet.lever_graphs_d1511); end
  def test_lever_graphs_e1511; assert_in_delta(0.01079411386416709, worksheet.lever_graphs_e1511, 0.002); end
  def test_lever_graphs_f1511; assert_in_delta(0.003189163273233461, worksheet.lever_graphs_f1511, 0.002); end
  def test_lever_graphs_g1511; assert_in_delta(0.02290550711079704, worksheet.lever_graphs_g1511, 0.002); end
  def test_lever_graphs_h1511; assert_in_delta(0.7784845756581111, worksheet.lever_graphs_h1511, 0.002); end
  def test_lever_graphs_i1511; assert_in_delta(0.1332866427545019, worksheet.lever_graphs_i1511, 0.002); end
  def test_lever_graphs_j1511; assert_in_delta(0.05133999733918934, worksheet.lever_graphs_j1511, 0.002); end
  def test_lever_graphs_d1512; assert_equal("2050: Level 2", worksheet.lever_graphs_d1512); end
  def test_lever_graphs_e1512; assert_in_delta(0.022796417705789093, worksheet.lever_graphs_e1512, 0.002); end
  def test_lever_graphs_f1512; assert_in_delta(0.009512790847152591, worksheet.lever_graphs_f1512, 0.002); end
  def test_lever_graphs_g1512; assert_in_delta(0.033423319192698295, worksheet.lever_graphs_g1512, 0.002); end
  def test_lever_graphs_h1512; assert_in_delta(0.6901915413292197, worksheet.lever_graphs_h1512, 0.002); end
  def test_lever_graphs_i1512; assert_in_delta(0.17482966962334492, worksheet.lever_graphs_i1512, 0.002); end
  def test_lever_graphs_j1512; assert_in_delta(0.06924626130179543, worksheet.lever_graphs_j1512, 0.002); end
  def test_lever_graphs_d1513; assert_equal("2050: Level 3", worksheet.lever_graphs_d1513); end
  def test_lever_graphs_e1513; assert_in_delta(0.02672087112825595, worksheet.lever_graphs_e1513, 0.002); end
  def test_lever_graphs_f1513; assert_in_delta(0.01040707612363653, worksheet.lever_graphs_f1513, 0.002); end
  def test_lever_graphs_g1513; assert_in_delta(0.060831697923719716, worksheet.lever_graphs_g1513, 0.002); end
  def test_lever_graphs_h1513; assert_in_delta(0.5996726025835968, worksheet.lever_graphs_h1513, 0.002); end
  def test_lever_graphs_i1513; assert_in_delta(0.20626637362162492, worksheet.lever_graphs_i1513, 0.002); end
  def test_lever_graphs_j1513; assert_in_delta(0.09610137861916612, worksheet.lever_graphs_j1513, 0.002); end
  def test_lever_graphs_d1514; assert_equal("2050: Level 4", worksheet.lever_graphs_d1514); end
  def test_lever_graphs_e1514; assert_in_delta(0.036189143851419275, worksheet.lever_graphs_e1514, 0.002); end
  def test_lever_graphs_f1514; assert_in_delta(0.027406398413794133, worksheet.lever_graphs_f1514, 0.002); end
  def test_lever_graphs_g1514; assert_in_delta(0.09611793339525283, worksheet.lever_graphs_g1514, 0.002); end
  def test_lever_graphs_h1514; assert_in_delta(0.4498247091005362, worksheet.lever_graphs_h1514, 0.002); end
  def test_lever_graphs_i1514; assert_in_delta(0.27935479464253477, worksheet.lever_graphs_i1514, 0.002); end
  def test_lever_graphs_j1514; assert_in_delta(0.11110702059646282, worksheet.lever_graphs_j1514, 0.002); end
  def test_lever_graphs_d1531; assert_equal("Title", worksheet.lever_graphs_d1531); end
  def test_lever_graphs_e1531; assert_equal("Urban passenger walk", worksheet.lever_graphs_e1531); end
  def test_lever_graphs_f1531; assert_equal("Urban passenger bike", worksheet.lever_graphs_f1531); end
  def test_lever_graphs_g1531; assert_equal("Urban passenger motorbike", worksheet.lever_graphs_g1531); end
  def test_lever_graphs_h1531; assert_equal("Urban passenger car", worksheet.lever_graphs_h1531); end
  def test_lever_graphs_i1531; assert_equal("Urban passenger bus", worksheet.lever_graphs_i1531); end
  def test_lever_graphs_j1531; assert_equal("Urban passenger train", worksheet.lever_graphs_j1531); end
  def test_lever_graphs_d1532; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1532, 0.002); end
  def test_lever_graphs_e1532; assert_in_delta(0.11247000971418973, worksheet.lever_graphs_e1532, 0.002); end
  def test_lever_graphs_f1532; assert_in_delta(0.08431450603944185, worksheet.lever_graphs_f1532, 0.002); end
  def test_lever_graphs_g1532; assert_in_delta(0.1487304791246149, worksheet.lever_graphs_g1532, 0.002); end
  def test_lever_graphs_h1532; assert_in_delta(0.2322045028959011, worksheet.lever_graphs_h1532, 0.002); end
  def test_lever_graphs_i1532; assert_in_delta(0.3796610169491526, worksheet.lever_graphs_i1532, 0.002); end
  def test_lever_graphs_j1532; assert_in_delta(0.04261948527669973, worksheet.lever_graphs_j1532, 0.002); end
  def test_lever_graphs_d1533; assert_equal("2050: Level 1", worksheet.lever_graphs_d1533); end
  def test_lever_graphs_e1533; assert_in_delta(0.024221820886008705, worksheet.lever_graphs_e1533, 0.002); end
  def test_lever_graphs_f1533; assert_in_delta(0.0037182619781153717, worksheet.lever_graphs_f1533, 0.002); end
  def test_lever_graphs_g1533; assert_in_delta(0.1487304791246149, worksheet.lever_graphs_g1533, 0.002); end
  def test_lever_graphs_h1533; assert_in_delta(0.6193562094975034, worksheet.lever_graphs_h1533, 0.002); end
  def test_lever_graphs_i1533; assert_in_delta(0.19866142568787845, worksheet.lever_graphs_i1533, 0.002); end
  def test_lever_graphs_j1533; assert_in_delta(0.005311802825879203, worksheet.lever_graphs_j1533, 0.002); end
  def test_lever_graphs_d1534; assert_equal("2050: Level 2", worksheet.lever_graphs_d1534); end
  def test_lever_graphs_e1534; assert_in_delta(0.03238268378593342, worksheet.lever_graphs_e1534, 0.002); end
  def test_lever_graphs_f1534; assert_in_delta(0.023860924894898307, worksheet.lever_graphs_f1534, 0.002); end
  def test_lever_graphs_g1534; assert_in_delta(0.16191341892966707, worksheet.lever_graphs_g1534, 0.002); end
  def test_lever_graphs_h1534; assert_in_delta(0.4938075218725145, worksheet.lever_graphs_h1534, 0.002); end
  def test_lever_graphs_i1534; assert_in_delta(0.27496875355073286, worksheet.lever_graphs_i1534, 0.002); end
  def test_lever_graphs_j1534; assert_in_delta(0.013066696966253843, worksheet.lever_graphs_j1534, 0.002); end
  def test_lever_graphs_d1535; assert_equal("2050: Level 3", worksheet.lever_graphs_d1535); end
  def test_lever_graphs_e1535; assert_in_delta(0.036979322877091506, worksheet.lever_graphs_e1535, 0.002); end
  def test_lever_graphs_f1535; assert_in_delta(0.02974530482992349, worksheet.lever_graphs_f1535, 0.002); end
  def test_lever_graphs_g1535; assert_in_delta(0.1728510014278969, worksheet.lever_graphs_g1535, 0.002); end
  def test_lever_graphs_h1535; assert_in_delta(0.4081204200380899, worksheet.lever_graphs_h1535, 0.002); end
  def test_lever_graphs_i1535; assert_in_delta(0.3270965131187632, worksheet.lever_graphs_i1535, 0.002); end
  def test_lever_graphs_j1535; assert_in_delta(0.02520743770823497, worksheet.lever_graphs_j1535, 0.002); end
  def test_lever_graphs_d1536; assert_equal("2050: Level 4", worksheet.lever_graphs_d1536); end
  def test_lever_graphs_e1536; assert_in_delta(0.05408328879859205, worksheet.lever_graphs_e1536, 0.002); end
  def test_lever_graphs_f1536; assert_in_delta(0.049718098389071146, worksheet.lever_graphs_f1536, 0.002); end
  def test_lever_graphs_g1536; assert_in_delta(0.22471057762431754, worksheet.lever_graphs_g1536, 0.002); end
  def test_lever_graphs_h1536; assert_in_delta(0.25364652438624186, worksheet.lever_graphs_h1536, 0.002); end
  def test_lever_graphs_i1536; assert_in_delta(0.3841349241581299, worksheet.lever_graphs_i1536, 0.002); end
  def test_lever_graphs_j1536; assert_in_delta(0.03370658664364751, worksheet.lever_graphs_j1536, 0.002); end
  def test_lever_graphs_d1520; assert_equal("Title", worksheet.lever_graphs_d1520); end
  def test_lever_graphs_e1520; assert_equal("Urban passenger walk", worksheet.lever_graphs_e1520); end
  def test_lever_graphs_f1520; assert_equal("Urban passenger bike", worksheet.lever_graphs_f1520); end
  def test_lever_graphs_g1520; assert_equal("Urban passenger motorbike", worksheet.lever_graphs_g1520); end
  def test_lever_graphs_h1520; assert_equal("Urban passenger car", worksheet.lever_graphs_h1520); end
  def test_lever_graphs_i1520; assert_equal("Urban passenger bus", worksheet.lever_graphs_i1520); end
  def test_lever_graphs_j1520; assert_equal("Urban passenger train", worksheet.lever_graphs_j1520); end
  def test_lever_graphs_d1521; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1521, 0.002); end
  def test_lever_graphs_e1521; assert_in_delta(0.04635097613382408, worksheet.lever_graphs_e1521, 0.002); end
  def test_lever_graphs_f1521; assert_in_delta(0.026083051554046464, worksheet.lever_graphs_f1521, 0.002); end
  def test_lever_graphs_g1521; assert_in_delta(0.061057423607414035, worksheet.lever_graphs_g1521, 0.002); end
  def test_lever_graphs_h1521; assert_in_delta(0.5217689415674699, worksheet.lever_graphs_h1521, 0.002); end
  def test_lever_graphs_i1521; assert_in_delta(0.25597150666185114, worksheet.lever_graphs_i1521, 0.002); end
  def test_lever_graphs_j1521; assert_in_delta(0.08876810047539435, worksheet.lever_graphs_j1521, 0.002); end
  def test_lever_graphs_d1522; assert_equal("2050: Level 1", worksheet.lever_graphs_d1522); end
  def test_lever_graphs_e1522; assert_in_delta(0.026523421094867723, worksheet.lever_graphs_e1522, 0.002); end
  def test_lever_graphs_f1522; assert_in_delta(0.018446740235152366, worksheet.lever_graphs_f1522, 0.002); end
  def test_lever_graphs_g1522; assert_in_delta(0.03888772265788877, worksheet.lever_graphs_g1522, 0.002); end
  def test_lever_graphs_h1522; assert_in_delta(0.7119444609675022, worksheet.lever_graphs_h1522, 0.002); end
  def test_lever_graphs_i1522; assert_in_delta(0.1665064776992505, worksheet.lever_graphs_i1522, 0.002); end
  def test_lever_graphs_j1522; assert_in_delta(0.03769117734533847, worksheet.lever_graphs_j1522, 0.002); end
  def test_lever_graphs_d1523; assert_equal("2050: Level 2", worksheet.lever_graphs_d1523); end
  def test_lever_graphs_e1523; assert_in_delta(0.03434157116153882, worksheet.lever_graphs_e1523, 0.002); end
  def test_lever_graphs_f1523; assert_in_delta(0.023603185132698507, worksheet.lever_graphs_f1523, 0.002); end
  def test_lever_graphs_g1523; assert_in_delta(0.06898295981370371, worksheet.lever_graphs_g1523, 0.002); end
  def test_lever_graphs_h1523; assert_in_delta(0.5886974598187011, worksheet.lever_graphs_h1523, 0.002); end
  def test_lever_graphs_i1523; assert_in_delta(0.24423032237528697, worksheet.lever_graphs_i1523, 0.002); end
  def test_lever_graphs_j1523; assert_in_delta(0.04014450169807082, worksheet.lever_graphs_j1523, 0.002); end
  def test_lever_graphs_d1524; assert_equal("2050: Level 3", worksheet.lever_graphs_d1524); end
  def test_lever_graphs_e1524; assert_in_delta(0.041424283431744015, worksheet.lever_graphs_e1524, 0.002); end
  def test_lever_graphs_f1524; assert_in_delta(0.029719915259893908, worksheet.lever_graphs_f1524, 0.002); end
  def test_lever_graphs_g1524; assert_in_delta(0.11933865586984425, worksheet.lever_graphs_g1524, 0.002); end
  def test_lever_graphs_h1524; assert_in_delta(0.41925679100261354, worksheet.lever_graphs_h1524, 0.002); end
  def test_lever_graphs_i1524; assert_in_delta(0.3251978372453256, worksheet.lever_graphs_i1524, 0.002); end
  def test_lever_graphs_j1524; assert_in_delta(0.0650625171905787, worksheet.lever_graphs_j1524, 0.002); end
  def test_lever_graphs_d1525; assert_equal("2050: Level 4", worksheet.lever_graphs_d1525); end
  def test_lever_graphs_e1525; assert_in_delta(0.04979364078226359, worksheet.lever_graphs_e1525, 0.002); end
  def test_lever_graphs_f1525; assert_in_delta(0.03837022017086388, worksheet.lever_graphs_f1525, 0.002); end
  def test_lever_graphs_g1525; assert_in_delta(0.12314766608892123, worksheet.lever_graphs_g1525, 0.002); end
  def test_lever_graphs_h1525; assert_in_delta(0.3511714667205578, worksheet.lever_graphs_h1525, 0.002); end
  def test_lever_graphs_i1525; assert_in_delta(0.3545543680301203, worksheet.lever_graphs_i1525, 0.002); end
  def test_lever_graphs_j1525; assert_in_delta(0.08296263820727318, worksheet.lever_graphs_j1525, 0.002); end
  def test_lever_graphs_c1550; assert_equal("1975", worksheet.lever_graphs_c1550); end
  def test_lever_graphs_d1550; assert_equal("1980", worksheet.lever_graphs_d1550); end
  def test_lever_graphs_e1550; assert_equal("1985", worksheet.lever_graphs_e1550); end
  def test_lever_graphs_f1550; assert_equal("1990", worksheet.lever_graphs_f1550); end
  def test_lever_graphs_g1550; assert_equal("1995", worksheet.lever_graphs_g1550); end
  def test_lever_graphs_h1550; assert_equal("2000", worksheet.lever_graphs_h1550); end
  def test_lever_graphs_i1550; assert_equal("2005", worksheet.lever_graphs_i1550); end
  def test_lever_graphs_j1550; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1550, 0.002); end
  def test_lever_graphs_k1550; assert_equal("2011", worksheet.lever_graphs_k1550); end
  def test_lever_graphs_l1550; assert_equal("2015", worksheet.lever_graphs_l1550); end
  def test_lever_graphs_m1550; assert_equal("2020", worksheet.lever_graphs_m1550); end
  def test_lever_graphs_n1550; assert_equal("2025", worksheet.lever_graphs_n1550); end
  def test_lever_graphs_o1550; assert_equal("2030", worksheet.lever_graphs_o1550); end
  def test_lever_graphs_p1550; assert_equal("2035", worksheet.lever_graphs_p1550); end
  def test_lever_graphs_q1550; assert_equal("2040", worksheet.lever_graphs_q1550); end
  def test_lever_graphs_r1550; assert_equal("2045", worksheet.lever_graphs_r1550); end
  def test_lever_graphs_s1550; assert_equal("2050", worksheet.lever_graphs_s1550); end
  def test_lever_graphs_b1551; assert_equal("Historic data", worksheet.lever_graphs_b1551); end
  def test_lever_graphs_b1552; assert_in_delta(1.0, worksheet.lever_graphs_b1552, 0.002); end
  def test_lever_graphs_k1552; assert_in_epsilon(1.6, worksheet.lever_graphs_k1552, 0.002); end
  def test_lever_graphs_l1552; assert_in_epsilon(1.6, worksheet.lever_graphs_l1552, 0.002); end
  def test_lever_graphs_m1552; assert_in_epsilon(1.5771428571428572, worksheet.lever_graphs_m1552, 0.002); end
  def test_lever_graphs_n1552; assert_in_epsilon(1.5542857142857143, worksheet.lever_graphs_n1552, 0.002); end
  def test_lever_graphs_o1552; assert_in_epsilon(1.5314285714285714, worksheet.lever_graphs_o1552, 0.002); end
  def test_lever_graphs_p1552; assert_in_epsilon(1.5085714285714287, worksheet.lever_graphs_p1552, 0.002); end
  def test_lever_graphs_q1552; assert_in_epsilon(1.4857142857142858, worksheet.lever_graphs_q1552, 0.002); end
  def test_lever_graphs_r1552; assert_in_epsilon(1.4628571428571426, worksheet.lever_graphs_r1552, 0.002); end
  def test_lever_graphs_s1552; assert_in_epsilon(1.4400000000000002, worksheet.lever_graphs_s1552, 0.002); end
  def test_lever_graphs_b1553; assert_in_epsilon(2.0, worksheet.lever_graphs_b1553, 0.002); end
  def test_lever_graphs_k1553; assert_in_epsilon(1.6, worksheet.lever_graphs_k1553, 0.002); end
  def test_lever_graphs_l1553; assert_in_epsilon(1.6, worksheet.lever_graphs_l1553, 0.002); end
  def test_lever_graphs_m1553; assert_in_epsilon(1.6, worksheet.lever_graphs_m1553, 0.002); end
  def test_lever_graphs_n1553; assert_in_epsilon(1.6, worksheet.lever_graphs_n1553, 0.002); end
  def test_lever_graphs_o1553; assert_in_epsilon(1.6, worksheet.lever_graphs_o1553, 0.002); end
  def test_lever_graphs_p1553; assert_in_epsilon(1.6, worksheet.lever_graphs_p1553, 0.002); end
  def test_lever_graphs_q1553; assert_in_epsilon(1.6, worksheet.lever_graphs_q1553, 0.002); end
  def test_lever_graphs_r1553; assert_in_epsilon(1.6, worksheet.lever_graphs_r1553, 0.002); end
  def test_lever_graphs_s1553; assert_in_epsilon(1.6, worksheet.lever_graphs_s1553, 0.002); end
  def test_lever_graphs_b1554; assert_in_epsilon(3.0, worksheet.lever_graphs_b1554, 0.002); end
  def test_lever_graphs_k1554; assert_in_epsilon(1.6, worksheet.lever_graphs_k1554, 0.002); end
  def test_lever_graphs_l1554; assert_in_epsilon(1.6, worksheet.lever_graphs_l1554, 0.002); end
  def test_lever_graphs_m1554; assert_in_epsilon(1.6228571428571428, worksheet.lever_graphs_m1554, 0.002); end
  def test_lever_graphs_n1554; assert_in_epsilon(1.6457142857142857, worksheet.lever_graphs_n1554, 0.002); end
  def test_lever_graphs_o1554; assert_in_epsilon(1.6685714285714284, worksheet.lever_graphs_o1554, 0.002); end
  def test_lever_graphs_p1554; assert_in_epsilon(1.6914285714285715, worksheet.lever_graphs_p1554, 0.002); end
  def test_lever_graphs_q1554; assert_in_epsilon(1.7142857142857146, worksheet.lever_graphs_q1554, 0.002); end
  def test_lever_graphs_r1554; assert_in_epsilon(1.737142857142857, worksheet.lever_graphs_r1554, 0.002); end
  def test_lever_graphs_s1554; assert_in_epsilon(1.7600000000000002, worksheet.lever_graphs_s1554, 0.002); end
  def test_lever_graphs_b1555; assert_in_epsilon(4.0, worksheet.lever_graphs_b1555, 0.002); end
  def test_lever_graphs_k1555; assert_in_epsilon(1.6, worksheet.lever_graphs_k1555, 0.002); end
  def test_lever_graphs_l1555; assert_in_epsilon(1.6, worksheet.lever_graphs_l1555, 0.002); end
  def test_lever_graphs_m1555; assert_in_epsilon(1.6457142857142857, worksheet.lever_graphs_m1555, 0.002); end
  def test_lever_graphs_n1555; assert_in_epsilon(1.6914285714285715, worksheet.lever_graphs_n1555, 0.002); end
  def test_lever_graphs_o1555; assert_in_epsilon(1.737142857142857, worksheet.lever_graphs_o1555, 0.002); end
  def test_lever_graphs_p1555; assert_in_epsilon(1.7828571428571427, worksheet.lever_graphs_p1555, 0.002); end
  def test_lever_graphs_q1555; assert_in_epsilon(1.8285714285714285, worksheet.lever_graphs_q1555, 0.002); end
  def test_lever_graphs_r1555; assert_in_epsilon(1.874285714285714, worksheet.lever_graphs_r1555, 0.002); end
  def test_lever_graphs_s1555; assert_in_epsilon(1.92, worksheet.lever_graphs_s1555, 0.002); end
  def test_lever_graphs_c3495; assert_equal("1975", worksheet.lever_graphs_c3495); end
  def test_lever_graphs_d3495; assert_equal("1980", worksheet.lever_graphs_d3495); end
  def test_lever_graphs_e3495; assert_equal("1985", worksheet.lever_graphs_e3495); end
  def test_lever_graphs_f3495; assert_equal("1990", worksheet.lever_graphs_f3495); end
  def test_lever_graphs_g3495; assert_equal("1995", worksheet.lever_graphs_g3495); end
  def test_lever_graphs_h3495; assert_equal("2000", worksheet.lever_graphs_h3495); end
  def test_lever_graphs_i3495; assert_equal("2005", worksheet.lever_graphs_i3495); end
  def test_lever_graphs_j3495; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3495, 0.002); end
  def test_lever_graphs_k3495; assert_equal("2011", worksheet.lever_graphs_k3495); end
  def test_lever_graphs_l3495; assert_equal("2015", worksheet.lever_graphs_l3495); end
  def test_lever_graphs_m3495; assert_equal("2020", worksheet.lever_graphs_m3495); end
  def test_lever_graphs_n3495; assert_equal("2025", worksheet.lever_graphs_n3495); end
  def test_lever_graphs_o3495; assert_equal("2030", worksheet.lever_graphs_o3495); end
  def test_lever_graphs_p3495; assert_equal("2035", worksheet.lever_graphs_p3495); end
  def test_lever_graphs_q3495; assert_equal("2040", worksheet.lever_graphs_q3495); end
  def test_lever_graphs_r3495; assert_equal("2045", worksheet.lever_graphs_r3495); end
  def test_lever_graphs_s3495; assert_equal("2050", worksheet.lever_graphs_s3495); end
  def test_lever_graphs_b3496; assert_equal("Historic data", worksheet.lever_graphs_b3496); end
  def test_lever_graphs_c3496; assert_in_epsilon(48.366777087544, worksheet.lever_graphs_c3496, 0.002); end
  def test_lever_graphs_d3496; assert_in_epsilon(100.8586055269058, worksheet.lever_graphs_d3496, 0.002); end
  def test_lever_graphs_e3496; assert_in_epsilon(57.79701296868199, worksheet.lever_graphs_e3496, 0.002); end
  def test_lever_graphs_f3496; assert_in_epsilon(40.96227805628421, worksheet.lever_graphs_f3496, 0.002); end
  def test_lever_graphs_g3496; assert_in_epsilon(25.195809116543934, worksheet.lever_graphs_g3496, 0.002); end
  def test_lever_graphs_h3496; assert_in_epsilon(37.34055877514925, worksheet.lever_graphs_h3496, 0.002); end
  def test_lever_graphs_i3496; assert_in_epsilon(62.994224615593296, worksheet.lever_graphs_i3496, 0.002); end
  def test_lever_graphs_k3496; assert_in_epsilon(111.60806135788701, worksheet.lever_graphs_k3496, 0.002); end
  def test_lever_graphs_b3497; assert_in_delta(1.0, worksheet.lever_graphs_b3497, 0.002); end
  def test_lever_graphs_b3498; assert_in_epsilon(2.0, worksheet.lever_graphs_b3498, 0.002); end
  def test_lever_graphs_b3499; assert_in_epsilon(3.0, worksheet.lever_graphs_b3499, 0.002); end
  def test_lever_graphs_b3500; assert_in_epsilon(4.0, worksheet.lever_graphs_b3500, 0.002); end
  def test_lever_graphs_c1215; assert_equal("1975", worksheet.lever_graphs_c1215); end
  def test_lever_graphs_d1215; assert_equal("1980", worksheet.lever_graphs_d1215); end
  def test_lever_graphs_e1215; assert_equal("1985", worksheet.lever_graphs_e1215); end
  def test_lever_graphs_f1215; assert_equal("1990", worksheet.lever_graphs_f1215); end
  def test_lever_graphs_g1215; assert_equal("1995", worksheet.lever_graphs_g1215); end
  def test_lever_graphs_h1215; assert_equal("2000", worksheet.lever_graphs_h1215); end
  def test_lever_graphs_i1215; assert_equal("2005", worksheet.lever_graphs_i1215); end
  def test_lever_graphs_j1215; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1215, 0.002); end
  def test_lever_graphs_k1215; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1215, 0.002); end
  def test_lever_graphs_l1215; assert_equal("2015", worksheet.lever_graphs_l1215); end
  def test_lever_graphs_m1215; assert_equal("2020", worksheet.lever_graphs_m1215); end
  def test_lever_graphs_n1215; assert_equal("2025", worksheet.lever_graphs_n1215); end
  def test_lever_graphs_o1215; assert_equal("2030", worksheet.lever_graphs_o1215); end
  def test_lever_graphs_p1215; assert_equal("2035", worksheet.lever_graphs_p1215); end
  def test_lever_graphs_q1215; assert_equal("2040", worksheet.lever_graphs_q1215); end
  def test_lever_graphs_r1215; assert_equal("2045", worksheet.lever_graphs_r1215); end
  def test_lever_graphs_s1215; assert_equal("2050", worksheet.lever_graphs_s1215); end
  def test_lever_graphs_b1216; assert_equal("Historic data", worksheet.lever_graphs_b1216); end
  def test_lever_graphs_b1217; assert_in_delta(1.0, worksheet.lever_graphs_b1217, 0.002); end
  def test_lever_graphs_k1217; assert_in_epsilon(11737.0, worksheet.lever_graphs_k1217, 0.002); end
  def test_lever_graphs_l1217; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l1217, 0.002); end
  def test_lever_graphs_m1217; assert_in_epsilon(12302.73761329493, worksheet.lever_graphs_m1217, 0.002); end
  def test_lever_graphs_n1217; assert_in_epsilon(12600.851505289062, worksheet.lever_graphs_n1217, 0.002); end
  def test_lever_graphs_o1217; assert_in_epsilon(12721.015350442445, worksheet.lever_graphs_o1217, 0.002); end
  def test_lever_graphs_p1217; assert_in_epsilon(12842.325098289466, worksheet.lever_graphs_p1217, 0.002); end
  def test_lever_graphs_q1217; assert_in_epsilon(12964.791676351475, worksheet.lever_graphs_q1217, 0.002); end
  def test_lever_graphs_r1217; assert_in_epsilon(13088.426116356506, worksheet.lever_graphs_r1217, 0.002); end
  def test_lever_graphs_s1217; assert_in_epsilon(13101.519778890486, worksheet.lever_graphs_s1217, 0.002); end
  def test_lever_graphs_b1218; assert_in_epsilon(2.0, worksheet.lever_graphs_b1218, 0.002); end
  def test_lever_graphs_k1218; assert_in_epsilon(11737.0, worksheet.lever_graphs_k1218, 0.002); end
  def test_lever_graphs_l1218; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l1218, 0.002); end
  def test_lever_graphs_m1218; assert_in_epsilon(12302.73761329493, worksheet.lever_graphs_m1218, 0.002); end
  def test_lever_graphs_n1218; assert_in_epsilon(12420.058594095803, worksheet.lever_graphs_n1218, 0.002); end
  def test_lever_graphs_o1218; assert_in_epsilon(12538.498367556385, worksheet.lever_graphs_o1218, 0.002); end
  def test_lever_graphs_p1218; assert_in_epsilon(12658.067602672169, worksheet.lever_graphs_p1218, 0.002); end
  def test_lever_graphs_q1218; assert_in_epsilon(12778.777070179987, worksheet.lever_graphs_q1218, 0.002); end
  def test_lever_graphs_r1218; assert_in_epsilon(12651.499429280722, worksheet.lever_graphs_r1218, 0.002); end
  def test_lever_graphs_s1218; assert_in_epsilon(12525.489483856847, worksheet.lever_graphs_s1218, 0.002); end
  def test_lever_graphs_b1219; assert_in_epsilon(3.0, worksheet.lever_graphs_b1219, 0.002); end
  def test_lever_graphs_k1219; assert_in_epsilon(11737.0, worksheet.lever_graphs_k1219, 0.002); end
  def test_lever_graphs_l1219; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l1219, 0.002); end
  def test_lever_graphs_m1219; assert_in_epsilon(12180.784397392952, worksheet.lever_graphs_m1219, 0.002); end
  def test_lever_graphs_n1219; assert_in_epsilon(12272.414759432238, worksheet.lever_graphs_n1219, 0.002); end
  def test_lever_graphs_o1219; assert_in_epsilon(12272.414759432238, worksheet.lever_graphs_o1219, 0.002); end
  def test_lever_graphs_p1219; assert_in_epsilon(12150.180527616512, worksheet.lever_graphs_p1219, 0.002); end
  def test_lever_graphs_q1219; assert_in_epsilon(11969.018060318878, worksheet.lever_graphs_q1219, 0.002); end
  def test_lever_graphs_r1219; assert_in_epsilon(11731.54509713868, worksheet.lever_graphs_r1219, 0.002); end
  def test_lever_graphs_s1219; assert_in_epsilon(11441.174728177544, worksheet.lever_graphs_s1219, 0.002); end
  def test_lever_graphs_b1220; assert_in_epsilon(4.0, worksheet.lever_graphs_b1220, 0.002); end
  def test_lever_graphs_k1220; assert_in_epsilon(11737.0, worksheet.lever_graphs_k1220, 0.002); end
  def test_lever_graphs_l1220; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l1220, 0.002); end
  def test_lever_graphs_m1220; assert_in_epsilon(12132.274764133377, worksheet.lever_graphs_m1220, 0.002); end
  def test_lever_graphs_n1220; assert_in_epsilon(12193.057582085099, worksheet.lever_graphs_n1220, 0.002); end
  def test_lever_graphs_o1220; assert_in_epsilon(12132.214102880871, worksheet.lever_graphs_o1220, 0.002); end
  def test_lever_graphs_p1220; assert_in_epsilon(11951.319519819708, worksheet.lever_graphs_p1220, 0.002); end
  def test_lever_graphs_q1220; assert_in_epsilon(11714.197706987443, worksheet.lever_graphs_q1220, 0.002); end
  def test_lever_graphs_r1220; assert_in_epsilon(11424.256707562632, worksheet.lever_graphs_r1220, 0.002); end
  def test_lever_graphs_s1220; assert_in_epsilon(11085.617136296338, worksheet.lever_graphs_s1220, 0.002); end
  def test_lever_graphs_c3715; assert_equal("1975", worksheet.lever_graphs_c3715); end
  def test_lever_graphs_d3715; assert_equal("1980", worksheet.lever_graphs_d3715); end
  def test_lever_graphs_e3715; assert_equal("1985", worksheet.lever_graphs_e3715); end
  def test_lever_graphs_f3715; assert_equal("1990", worksheet.lever_graphs_f3715); end
  def test_lever_graphs_g3715; assert_equal("1995", worksheet.lever_graphs_g3715); end
  def test_lever_graphs_h3715; assert_equal("2000", worksheet.lever_graphs_h3715); end
  def test_lever_graphs_i3715; assert_equal("2005", worksheet.lever_graphs_i3715); end
  def test_lever_graphs_j3715; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3715, 0.002); end
  def test_lever_graphs_k3715; assert_in_epsilon(2011.0, worksheet.lever_graphs_k3715, 0.002); end
  def test_lever_graphs_l3715; assert_equal("2015", worksheet.lever_graphs_l3715); end
  def test_lever_graphs_m3715; assert_equal("2020", worksheet.lever_graphs_m3715); end
  def test_lever_graphs_n3715; assert_equal("2025", worksheet.lever_graphs_n3715); end
  def test_lever_graphs_o3715; assert_equal("2030", worksheet.lever_graphs_o3715); end
  def test_lever_graphs_p3715; assert_equal("2035", worksheet.lever_graphs_p3715); end
  def test_lever_graphs_q3715; assert_equal("2040", worksheet.lever_graphs_q3715); end
  def test_lever_graphs_r3715; assert_equal("2045", worksheet.lever_graphs_r3715); end
  def test_lever_graphs_s3715; assert_equal("2050", worksheet.lever_graphs_s3715); end
  def test_lever_graphs_b3716; assert_equal("Historic data", worksheet.lever_graphs_b3716); end
  def test_lever_graphs_b3717; assert_in_delta(1.0, worksheet.lever_graphs_b3717, 0.002); end
  def test_lever_graphs_k3717; assert_in_epsilon(7495.30785179888, worksheet.lever_graphs_k3717, 0.002); end
  def test_lever_graphs_l3717; assert_in_epsilon(8200.76494319802, worksheet.lever_graphs_l3717, 0.002); end
  def test_lever_graphs_m3717; assert_in_epsilon(9127.517502386307, worksheet.lever_graphs_m3717, 0.002); end
  def test_lever_graphs_n3717; assert_in_epsilon(9901.40615333935, worksheet.lever_graphs_n3717, 0.002); end
  def test_lever_graphs_o3717; assert_in_epsilon(10564.1267769512, worksheet.lever_graphs_o3717, 0.002); end
  def test_lever_graphs_p3717; assert_in_epsilon(11098.74797386444, worksheet.lever_graphs_p3717, 0.002); end
  def test_lever_graphs_q3717; assert_in_epsilon(11556.362926708309, worksheet.lever_graphs_q3717, 0.002); end
  def test_lever_graphs_r3717; assert_in_epsilon(12009.80733643601, worksheet.lever_graphs_r3717, 0.002); end
  def test_lever_graphs_s3717; assert_in_epsilon(12441.958274558961, worksheet.lever_graphs_s3717, 0.002); end
  def test_lever_graphs_b3718; assert_in_epsilon(2.0, worksheet.lever_graphs_b3718, 0.002); end
  def test_lever_graphs_k3718; assert_in_epsilon(7495.30785179888, worksheet.lever_graphs_k3718, 0.002); end
  def test_lever_graphs_l3718; assert_in_epsilon(8200.76494319802, worksheet.lever_graphs_l3718, 0.002); end
  def test_lever_graphs_m3718; assert_in_epsilon(9024.410602910062, worksheet.lever_graphs_m3718, 0.002); end
  def test_lever_graphs_n3718; assert_in_epsilon(9598.322532630373, worksheet.lever_graphs_n3718, 0.002); end
  def test_lever_graphs_o3718; assert_in_epsilon(10142.870091843353, worksheet.lever_graphs_o3718, 0.002); end
  def test_lever_graphs_p3718; assert_in_epsilon(10566.336759517386, worksheet.lever_graphs_p3718, 0.002); end
  def test_lever_graphs_q3718; assert_in_epsilon(10913.930554070532, worksheet.lever_graphs_q3718, 0.002); end
  def test_lever_graphs_r3718; assert_in_epsilon(11186.047946453627, worksheet.lever_graphs_r3718, 0.002); end
  def test_lever_graphs_s3718; assert_in_epsilon(11445.764045241753, worksheet.lever_graphs_s3718, 0.002); end
  def test_lever_graphs_b3719; assert_in_epsilon(3.0, worksheet.lever_graphs_b3719, 0.002); end
  def test_lever_graphs_k3719; assert_in_epsilon(7495.30785179888, worksheet.lever_graphs_k3719, 0.002); end
  def test_lever_graphs_l3719; assert_in_epsilon(8200.76494319802, worksheet.lever_graphs_l3719, 0.002); end
  def test_lever_graphs_m3719; assert_in_epsilon(8895.212950493811, worksheet.lever_graphs_m3719, 0.002); end
  def test_lever_graphs_n3719; assert_in_epsilon(9394.425724697645, worksheet.lever_graphs_n3719, 0.002); end
  def test_lever_graphs_o3719; assert_in_epsilon(9821.520845871033, worksheet.lever_graphs_o3719, 0.002); end
  def test_lever_graphs_p3719; assert_in_epsilon(10145.75205793321, worksheet.lever_graphs_p3719, 0.002); end
  def test_lever_graphs_q3719; assert_in_epsilon(10424.059550598964, worksheet.lever_graphs_q3719, 0.002); end
  def test_lever_graphs_r3719; assert_in_epsilon(10615.471717175049, worksheet.lever_graphs_r3719, 0.002); end
  def test_lever_graphs_s3719; assert_in_epsilon(10772.20635248794, worksheet.lever_graphs_s3719, 0.002); end
  def test_lever_graphs_b3720; assert_in_epsilon(4.0, worksheet.lever_graphs_b3720, 0.002); end
  def test_lever_graphs_k3720; assert_in_epsilon(7495.30785179888, worksheet.lever_graphs_k3720, 0.002); end
  def test_lever_graphs_l3720; assert_in_epsilon(8200.76494319802, worksheet.lever_graphs_l3720, 0.002); end
  def test_lever_graphs_m3720; assert_in_epsilon(8839.30526874148, worksheet.lever_graphs_m3720, 0.002); end
  def test_lever_graphs_n3720; assert_in_epsilon(9311.965794840882, worksheet.lever_graphs_n3720, 0.002); end
  def test_lever_graphs_o3720; assert_in_epsilon(9661.726480807101, worksheet.lever_graphs_o3720, 0.002); end
  def test_lever_graphs_p3720; assert_in_epsilon(9937.00595358458, worksheet.lever_graphs_p3720, 0.002); end
  def test_lever_graphs_q3720; assert_in_epsilon(10111.056161126158, worksheet.lever_graphs_q3720, 0.002); end
  def test_lever_graphs_r3720; assert_in_epsilon(10204.074860500457, worksheet.lever_graphs_r3720, 0.002); end
  def test_lever_graphs_s3720; assert_in_epsilon(10291.707193567849, worksheet.lever_graphs_s3720, 0.002); end
  def test_lever_graphs_c3725; assert_equal("1975", worksheet.lever_graphs_c3725); end
  def test_lever_graphs_d3725; assert_equal("1980", worksheet.lever_graphs_d3725); end
  def test_lever_graphs_e3725; assert_equal("1985", worksheet.lever_graphs_e3725); end
  def test_lever_graphs_f3725; assert_equal("1990", worksheet.lever_graphs_f3725); end
  def test_lever_graphs_g3725; assert_equal("1995", worksheet.lever_graphs_g3725); end
  def test_lever_graphs_h3725; assert_equal("2000", worksheet.lever_graphs_h3725); end
  def test_lever_graphs_i3725; assert_equal("2005", worksheet.lever_graphs_i3725); end
  def test_lever_graphs_j3725; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3725, 0.002); end
  def test_lever_graphs_k3725; assert_in_epsilon(2011.0, worksheet.lever_graphs_k3725, 0.002); end
  def test_lever_graphs_l3725; assert_equal("2015", worksheet.lever_graphs_l3725); end
  def test_lever_graphs_m3725; assert_equal("2020", worksheet.lever_graphs_m3725); end
  def test_lever_graphs_n3725; assert_equal("2025", worksheet.lever_graphs_n3725); end
  def test_lever_graphs_o3725; assert_equal("2030", worksheet.lever_graphs_o3725); end
  def test_lever_graphs_p3725; assert_equal("2035", worksheet.lever_graphs_p3725); end
  def test_lever_graphs_q3725; assert_equal("2040", worksheet.lever_graphs_q3725); end
  def test_lever_graphs_r3725; assert_equal("2045", worksheet.lever_graphs_r3725); end
  def test_lever_graphs_s3725; assert_equal("2050", worksheet.lever_graphs_s3725); end
  def test_lever_graphs_b3726; assert_equal("Historic data", worksheet.lever_graphs_b3726); end
  def test_lever_graphs_b3727; assert_in_delta(1.0, worksheet.lever_graphs_b3727, 0.002); end
  def test_lever_graphs_k3727; assert_in_epsilon(8261.626388147826, worksheet.lever_graphs_k3727, 0.002); end
  def test_lever_graphs_l3727; assert_in_epsilon(9050.206872658084, worksheet.lever_graphs_l3727, 0.002); end
  def test_lever_graphs_m3727; assert_in_epsilon(10099.48858081049, worksheet.lever_graphs_m3727, 0.002); end
  def test_lever_graphs_n3727; assert_in_epsilon(11021.646264359362, worksheet.lever_graphs_n3727, 0.002); end
  def test_lever_graphs_o3727; assert_in_epsilon(11865.278682705206, worksheet.lever_graphs_o3727, 0.002); end
  def test_lever_graphs_p3727; assert_in_epsilon(12622.388155934439, worksheet.lever_graphs_p3727, 0.002); end
  def test_lever_graphs_q3727; assert_in_epsilon(13355.645390112692, worksheet.lever_graphs_q3727, 0.002); end
  def test_lever_graphs_r3727; assert_in_epsilon(14152.906396643948, worksheet.lever_graphs_r3727, 0.002); end
  def test_lever_graphs_s3727; assert_in_epsilon(15016.552829275124, worksheet.lever_graphs_s3727, 0.002); end
  def test_lever_graphs_b3728; assert_in_epsilon(2.0, worksheet.lever_graphs_b3728, 0.002); end
  def test_lever_graphs_k3728; assert_in_epsilon(8261.626388147826, worksheet.lever_graphs_k3728, 0.002); end
  def test_lever_graphs_l3728; assert_in_epsilon(9050.206872658084, worksheet.lever_graphs_l3728, 0.002); end
  def test_lever_graphs_m3728; assert_in_epsilon(9960.032556285665, worksheet.lever_graphs_m3728, 0.002); end
  def test_lever_graphs_n3728; assert_in_epsilon(10634.370642009915, worksheet.lever_graphs_n3728, 0.002); end
  def test_lever_graphs_o3728; assert_in_epsilon(11296.656260823567, worksheet.lever_graphs_o3728, 0.002); end
  def test_lever_graphs_p3728; assert_in_epsilon(11858.94816223792, worksheet.lever_graphs_p3728, 0.002); end
  def test_lever_graphs_q3728; assert_in_epsilon(12371.10536370927, worksheet.lever_graphs_q3728, 0.002); end
  def test_lever_graphs_r3728; assert_in_epsilon(12839.25624248088, worksheet.lever_graphs_r3728, 0.002); end
  def test_lever_graphs_s3728; assert_in_epsilon(13333.541962939387, worksheet.lever_graphs_s3728, 0.002); end
  def test_lever_graphs_b3729; assert_in_epsilon(3.0, worksheet.lever_graphs_b3729, 0.002); end
  def test_lever_graphs_k3729; assert_in_epsilon(8261.626388147826, worksheet.lever_graphs_k3729, 0.002); end
  def test_lever_graphs_l3729; assert_in_epsilon(9050.206872658084, worksheet.lever_graphs_l3729, 0.002); end
  def test_lever_graphs_m3729; assert_in_epsilon(9784.664136333937, worksheet.lever_graphs_m3729, 0.002); end
  def test_lever_graphs_n3729; assert_in_epsilon(10329.117502241443, worksheet.lever_graphs_n3729, 0.002); end
  def test_lever_graphs_o3729; assert_in_epsilon(10807.500006913484, worksheet.lever_graphs_o3729, 0.002); end
  def test_lever_graphs_p3729; assert_in_epsilon(11190.00637302338, worksheet.lever_graphs_p3729, 0.002); end
  def test_lever_graphs_q3729; assert_in_epsilon(11534.662400779556, worksheet.lever_graphs_q3729, 0.002); end
  def test_lever_graphs_r3729; assert_in_epsilon(11801.748732392898, worksheet.lever_graphs_r3729, 0.002); end
  def test_lever_graphs_s3729; assert_in_epsilon(12044.927392408357, worksheet.lever_graphs_s3729, 0.002); end
  def test_lever_graphs_b3730; assert_in_epsilon(4.0, worksheet.lever_graphs_b3730, 0.002); end
  def test_lever_graphs_k3730; assert_in_epsilon(8261.626388147826, worksheet.lever_graphs_k3730, 0.002); end
  def test_lever_graphs_l3730; assert_in_epsilon(9050.206872658084, worksheet.lever_graphs_l3730, 0.002); end
  def test_lever_graphs_m3730; assert_in_epsilon(9669.541370074612, worksheet.lever_graphs_m3730, 0.002); end
  def test_lever_graphs_n3730; assert_in_epsilon(10126.464434518593, worksheet.lever_graphs_n3730, 0.002); end
  def test_lever_graphs_o3730; assert_in_epsilon(10463.9579615931, worksheet.lever_graphs_o3730, 0.002); end
  def test_lever_graphs_p3730; assert_in_epsilon(10730.456064693657, worksheet.lever_graphs_p3730, 0.002); end
  def test_lever_graphs_q3730; assert_in_epsilon(10899.240105404408, worksheet.lever_graphs_q3730, 0.002); end
  def test_lever_graphs_r3730; assert_in_epsilon(10990.551618765367, worksheet.lever_graphs_r3730, 0.002); end
  def test_lever_graphs_s3730; assert_in_epsilon(11080.094389337553, worksheet.lever_graphs_s3730, 0.002); end
  def test_lever_graphs_c1235; assert_equal("1975", worksheet.lever_graphs_c1235); end
  def test_lever_graphs_d1235; assert_equal("1980", worksheet.lever_graphs_d1235); end
  def test_lever_graphs_e1235; assert_equal("1985", worksheet.lever_graphs_e1235); end
  def test_lever_graphs_f1235; assert_equal("1990", worksheet.lever_graphs_f1235); end
  def test_lever_graphs_g1235; assert_equal("1995", worksheet.lever_graphs_g1235); end
  def test_lever_graphs_h1235; assert_equal("2000", worksheet.lever_graphs_h1235); end
  def test_lever_graphs_i1235; assert_equal("2005", worksheet.lever_graphs_i1235); end
  def test_lever_graphs_j1235; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1235, 0.002); end
  def test_lever_graphs_k1235; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1235, 0.002); end
  def test_lever_graphs_l1235; assert_equal("2015", worksheet.lever_graphs_l1235); end
  def test_lever_graphs_m1235; assert_equal("2020", worksheet.lever_graphs_m1235); end
  def test_lever_graphs_n1235; assert_equal("2025", worksheet.lever_graphs_n1235); end
  def test_lever_graphs_o1235; assert_equal("2030", worksheet.lever_graphs_o1235); end
  def test_lever_graphs_p1235; assert_equal("2035", worksheet.lever_graphs_p1235); end
  def test_lever_graphs_q1235; assert_equal("2040", worksheet.lever_graphs_q1235); end
  def test_lever_graphs_r1235; assert_equal("2045", worksheet.lever_graphs_r1235); end
  def test_lever_graphs_s1235; assert_equal("2050", worksheet.lever_graphs_s1235); end
  def test_lever_graphs_b1236; assert_equal("Historic data", worksheet.lever_graphs_b1236); end
  def test_lever_graphs_b1237; assert_in_delta(1.0, worksheet.lever_graphs_b1237, 0.002); end
  def test_lever_graphs_k1237; assert_in_epsilon(9198.0, worksheet.lever_graphs_k1237, 0.002); end
  def test_lever_graphs_l1237; assert_in_epsilon(10152.870967968747, worksheet.lever_graphs_l1237, 0.002); end
  def test_lever_graphs_m1237; assert_in_epsilon(11487.041597578627, worksheet.lever_graphs_m1237, 0.002); end
  def test_lever_graphs_n1237; assert_in_epsilon(12374.806165025862, worksheet.lever_graphs_n1237, 0.002); end
  def test_lever_graphs_o1237; assert_in_epsilon(13006.04564748162, worksheet.lever_graphs_o1237, 0.002); end
  def test_lever_graphs_p1237; assert_in_epsilon(13334.464598322116, worksheet.lever_graphs_p1237, 0.002); end
  def test_lever_graphs_q1237; assert_in_epsilon(13501.980895954319, worksheet.lever_graphs_q1237, 0.002); end
  def test_lever_graphs_r1237; assert_in_epsilon(13671.601643282682, worksheet.lever_graphs_r1237, 0.002); end
  def test_lever_graphs_s1237; assert_in_epsilon(13843.353277785745, worksheet.lever_graphs_s1237, 0.002); end
  def test_lever_graphs_b1238; assert_in_epsilon(2.0, worksheet.lever_graphs_b1238, 0.002); end
  def test_lever_graphs_k1238; assert_in_epsilon(9198.0, worksheet.lever_graphs_k1238, 0.002); end
  def test_lever_graphs_l1238; assert_in_epsilon(10152.870967968747, worksheet.lever_graphs_l1238, 0.002); end
  def test_lever_graphs_m1238; assert_in_epsilon(11209.589933100897, worksheet.lever_graphs_m1238, 0.002); end
  def test_lever_graphs_n1238; assert_in_epsilon(11781.391677188829, worksheet.lever_graphs_n1238, 0.002); end
  def test_lever_graphs_o1238; assert_in_epsilon(12229.870787312846, worksheet.lever_graphs_o1238, 0.002); end
  def test_lever_graphs_p1238; assert_in_epsilon(12538.690350287534, worksheet.lever_graphs_p1238, 0.002); end
  def test_lever_graphs_q1238; assert_in_epsilon(12696.209609433574, worksheet.lever_graphs_q1238, 0.002); end
  def test_lever_graphs_r1238; assert_in_epsilon(12759.817746602417, worksheet.lever_graphs_r1238, 0.002); end
  def test_lever_graphs_s1238; assert_in_epsilon(12823.744561174875, worksheet.lever_graphs_s1238, 0.002); end
  def test_lever_graphs_b1239; assert_in_epsilon(3.0, worksheet.lever_graphs_b1239, 0.002); end
  def test_lever_graphs_k1239; assert_in_epsilon(9198.0, worksheet.lever_graphs_k1239, 0.002); end
  def test_lever_graphs_l1239; assert_in_epsilon(10152.870967968747, worksheet.lever_graphs_l1239, 0.002); end
  def test_lever_graphs_m1239; assert_in_epsilon(11072.889253239104, worksheet.lever_graphs_m1239, 0.002); end
  def test_lever_graphs_n1239; assert_in_epsilon(11637.717888798581, worksheet.lever_graphs_n1239, 0.002); end
  def test_lever_graphs_o1239; assert_in_epsilon(12080.727806951827, worksheet.lever_graphs_o1239, 0.002); end
  def test_lever_graphs_p1239; assert_in_epsilon(12263.029256250862, worksheet.lever_graphs_p1239, 0.002); end
  def test_lever_graphs_q1239; assert_in_epsilon(12386.151052007395, worksheet.lever_graphs_q1239, 0.002); end
  def test_lever_graphs_r1239; assert_in_epsilon(12448.205792701398, worksheet.lever_graphs_r1239, 0.002); end
  def test_lever_graphs_s1239; assert_in_epsilon(12479.357443261779, worksheet.lever_graphs_s1239, 0.002); end
  def test_lever_graphs_b1240; assert_in_epsilon(4.0, worksheet.lever_graphs_b1240, 0.002); end
  def test_lever_graphs_k1240; assert_in_epsilon(9198.0, worksheet.lever_graphs_k1240, 0.002); end
  def test_lever_graphs_l1240; assert_in_epsilon(10152.870967968747, worksheet.lever_graphs_l1240, 0.002); end
  def test_lever_graphs_m1240; assert_in_epsilon(10937.525487294795, worksheet.lever_graphs_m1240, 0.002); end
  def test_lever_graphs_n1240; assert_in_epsilon(11495.44921037173, worksheet.lever_graphs_n1240, 0.002); end
  def test_lever_graphs_o1240; assert_in_epsilon(11785.723708204321, worksheet.lever_graphs_o1240, 0.002); end
  def test_lever_graphs_p1240; assert_in_epsilon(11933.783706111015, worksheet.lever_graphs_p1240, 0.002); end
  def test_lever_graphs_q1240; assert_in_epsilon(11993.572081876142, worksheet.lever_graphs_q1240, 0.002); end
  def test_lever_graphs_r1240; assert_in_epsilon(12005.570452346432, worksheet.lever_graphs_r1240, 0.002); end
  def test_lever_graphs_s1240; assert_in_epsilon(12017.5808259875, worksheet.lever_graphs_s1240, 0.002); end
  def test_lever_graphs_c3705; assert_equal("1975", worksheet.lever_graphs_c3705); end
  def test_lever_graphs_d3705; assert_equal("1980", worksheet.lever_graphs_d3705); end
  def test_lever_graphs_e3705; assert_equal("1985", worksheet.lever_graphs_e3705); end
  def test_lever_graphs_f3705; assert_equal("1990", worksheet.lever_graphs_f3705); end
  def test_lever_graphs_g3705; assert_equal("1995", worksheet.lever_graphs_g3705); end
  def test_lever_graphs_h3705; assert_equal("2000", worksheet.lever_graphs_h3705); end
  def test_lever_graphs_i3705; assert_equal("2005", worksheet.lever_graphs_i3705); end
  def test_lever_graphs_j3705; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3705, 0.002); end
  def test_lever_graphs_k3705; assert_in_epsilon(2011.0, worksheet.lever_graphs_k3705, 0.002); end
  def test_lever_graphs_l3705; assert_equal("2015", worksheet.lever_graphs_l3705); end
  def test_lever_graphs_m3705; assert_equal("2020", worksheet.lever_graphs_m3705); end
  def test_lever_graphs_n3705; assert_equal("2025", worksheet.lever_graphs_n3705); end
  def test_lever_graphs_o3705; assert_equal("2030", worksheet.lever_graphs_o3705); end
  def test_lever_graphs_p3705; assert_equal("2035", worksheet.lever_graphs_p3705); end
  def test_lever_graphs_q3705; assert_equal("2040", worksheet.lever_graphs_q3705); end
  def test_lever_graphs_r3705; assert_equal("2045", worksheet.lever_graphs_r3705); end
  def test_lever_graphs_s3705; assert_equal("2050", worksheet.lever_graphs_s3705); end
  def test_lever_graphs_b3706; assert_equal("Historic data", worksheet.lever_graphs_b3706); end
  def test_lever_graphs_b3707; assert_in_delta(1.0, worksheet.lever_graphs_b3707, 0.002); end
  def test_lever_graphs_k3707; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3707, 0.002); end
  def test_lever_graphs_l3707; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3707, 0.002); end
  def test_lever_graphs_m3707; assert_in_epsilon(971.971078424184, worksheet.lever_graphs_m3707, 0.002); end
  def test_lever_graphs_n3707; assert_in_epsilon(1120.240111020011, worksheet.lever_graphs_n3707, 0.002); end
  def test_lever_graphs_o3707; assert_in_epsilon(1301.151905754007, worksheet.lever_graphs_o3707, 0.002); end
  def test_lever_graphs_p3707; assert_in_epsilon(1523.6401820699998, worksheet.lever_graphs_p3707, 0.002); end
  def test_lever_graphs_q3707; assert_in_epsilon(1799.2824634043834, worksheet.lever_graphs_q3707, 0.002); end
  def test_lever_graphs_r3707; assert_in_epsilon(2143.099060207938, worksheet.lever_graphs_r3707, 0.002); end
  def test_lever_graphs_s3707; assert_in_epsilon(2574.5945547161623, worksheet.lever_graphs_s3707, 0.002); end
  def test_lever_graphs_b3708; assert_in_epsilon(2.0, worksheet.lever_graphs_b3708, 0.002); end
  def test_lever_graphs_k3708; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3708, 0.002); end
  def test_lever_graphs_l3708; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3708, 0.002); end
  def test_lever_graphs_m3708; assert_in_epsilon(935.6219533756032, worksheet.lever_graphs_m3708, 0.002); end
  def test_lever_graphs_n3708; assert_in_epsilon(1036.0481093795418, worksheet.lever_graphs_n3708, 0.002); end
  def test_lever_graphs_o3708; assert_in_epsilon(1153.7861689802146, worksheet.lever_graphs_o3708, 0.002); end
  def test_lever_graphs_p3708; assert_in_epsilon(1292.6114027205344, worksheet.lever_graphs_p3708, 0.002); end
  def test_lever_graphs_q3708; assert_in_epsilon(1457.174809638739, worksheet.lever_graphs_q3708, 0.002); end
  def test_lever_graphs_r3708; assert_in_epsilon(1653.2082960272533, worksheet.lever_graphs_r3708, 0.002); end
  def test_lever_graphs_s3708; assert_in_epsilon(1887.777917697634, worksheet.lever_graphs_s3708, 0.002); end
  def test_lever_graphs_b3709; assert_in_epsilon(3.0, worksheet.lever_graphs_b3709, 0.002); end
  def test_lever_graphs_k3709; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3709, 0.002); end
  def test_lever_graphs_l3709; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3709, 0.002); end
  def test_lever_graphs_m3709; assert_in_epsilon(889.4511858401264, worksheet.lever_graphs_m3709, 0.002); end
  def test_lever_graphs_n3709; assert_in_epsilon(934.6917775437978, worksheet.lever_graphs_n3709, 0.002); end
  def test_lever_graphs_o3709; assert_in_epsilon(985.9791610424517, worksheet.lever_graphs_o3709, 0.002); end
  def test_lever_graphs_p3709; assert_in_epsilon(1044.2543150901697, worksheet.lever_graphs_p3709, 0.002); end
  def test_lever_graphs_q3709; assert_in_epsilon(1110.6028501805924, worksheet.lever_graphs_q3709, 0.002); end
  def test_lever_graphs_r3709; assert_in_epsilon(1186.2770152178489, worksheet.lever_graphs_r3709, 0.002); end
  def test_lever_graphs_s3709; assert_in_epsilon(1272.721039920418, worksheet.lever_graphs_s3709, 0.002); end
  def test_lever_graphs_b3710; assert_in_epsilon(4.0, worksheet.lever_graphs_b3710, 0.002); end
  def test_lever_graphs_k3710; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3710, 0.002); end
  def test_lever_graphs_l3710; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3710, 0.002); end
  def test_lever_graphs_m3710; assert_in_epsilon(830.2361013331315, worksheet.lever_graphs_m3710, 0.002); end
  def test_lever_graphs_n3710; assert_in_epsilon(814.4986396777115, worksheet.lever_graphs_n3710, 0.002); end
  def test_lever_graphs_o3710; assert_in_epsilon(802.2314807859979, worksheet.lever_graphs_o3710, 0.002); end
  def test_lever_graphs_p3710; assert_in_epsilon(793.450111109077, worksheet.lever_graphs_p3710, 0.002); end
  def test_lever_graphs_q3710; assert_in_epsilon(788.1839442782499, worksheet.lever_graphs_q3710, 0.002); end
  def test_lever_graphs_r3710; assert_in_epsilon(786.4767582649091, worksheet.lever_graphs_r3710, 0.002); end
  def test_lever_graphs_s3710; assert_in_epsilon(788.3871957697046, worksheet.lever_graphs_s3710, 0.002); end
  def test_lever_graphs_b1265; assert_equal("Level", worksheet.lever_graphs_b1265); end
  def test_lever_graphs_c1265; assert_equal("1975", worksheet.lever_graphs_c1265); end
  def test_lever_graphs_d1265; assert_equal("1980", worksheet.lever_graphs_d1265); end
  def test_lever_graphs_e1265; assert_equal("1985", worksheet.lever_graphs_e1265); end
  def test_lever_graphs_f1265; assert_equal("1990", worksheet.lever_graphs_f1265); end
  def test_lever_graphs_g1265; assert_equal("1995", worksheet.lever_graphs_g1265); end
  def test_lever_graphs_h1265; assert_equal("2000", worksheet.lever_graphs_h1265); end
  def test_lever_graphs_i1265; assert_equal("2005", worksheet.lever_graphs_i1265); end
  def test_lever_graphs_j1265; assert_equal("2010", worksheet.lever_graphs_j1265); end
  def test_lever_graphs_k1265; assert_equal("2011", worksheet.lever_graphs_k1265); end
  def test_lever_graphs_l1265; assert_equal("2015", worksheet.lever_graphs_l1265); end
  def test_lever_graphs_m1265; assert_equal("2020", worksheet.lever_graphs_m1265); end
  def test_lever_graphs_n1265; assert_equal("2025", worksheet.lever_graphs_n1265); end
  def test_lever_graphs_o1265; assert_equal("2030", worksheet.lever_graphs_o1265); end
  def test_lever_graphs_p1265; assert_equal("2035", worksheet.lever_graphs_p1265); end
  def test_lever_graphs_q1265; assert_equal("2040", worksheet.lever_graphs_q1265); end
  def test_lever_graphs_r1265; assert_equal("2045", worksheet.lever_graphs_r1265); end
  def test_lever_graphs_s1265; assert_equal("2050", worksheet.lever_graphs_s1265); end
  def test_lever_graphs_b1266; assert_equal("Historic data", worksheet.lever_graphs_b1266); end
  def test_lever_graphs_b1267; assert_in_delta(1.0, worksheet.lever_graphs_b1267, 0.002); end
  def test_lever_graphs_k1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k1267, 0.002); end
  def test_lever_graphs_l1267; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_l1267, 0.002); end
  def test_lever_graphs_m1267; assert_in_epsilon(3850.7126100605683, worksheet.lever_graphs_m1267, 0.002); end
  def test_lever_graphs_n1267; assert_in_epsilon(4255.859523652149, worksheet.lever_graphs_n1267, 0.002); end
  def test_lever_graphs_o1267; assert_in_epsilon(4703.63335808013, worksheet.lever_graphs_o1267, 0.002); end
  def test_lever_graphs_p1267; assert_in_epsilon(5198.519040463629, worksheet.lever_graphs_p1267, 0.002); end
  def test_lever_graphs_q1267; assert_in_epsilon(5745.473372757406, worksheet.lever_graphs_q1267, 0.002); end
  def test_lever_graphs_r1267; assert_in_epsilon(6349.97467935028, worksheet.lever_graphs_r1267, 0.002); end
  def test_lever_graphs_s1267; assert_in_epsilon(7018.077678260653, worksheet.lever_graphs_s1267, 0.002); end
  def test_lever_graphs_b1268; assert_in_epsilon(2.0, worksheet.lever_graphs_b1268, 0.002); end
  def test_lever_graphs_k1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k1268, 0.002); end
  def test_lever_graphs_l1268; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_l1268, 0.002); end
  def test_lever_graphs_m1268; assert_in_epsilon(3735.420476881267, worksheet.lever_graphs_m1268, 0.002); end
  def test_lever_graphs_n1268; assert_in_epsilon(4004.829768603747, worksheet.lever_graphs_n1268, 0.002); end
  def test_lever_graphs_o1268; assert_in_epsilon(4293.6696349872645, worksheet.lever_graphs_o1268, 0.002); end
  def test_lever_graphs_p1268; assert_in_epsilon(4603.341465082821, worksheet.lever_graphs_p1268, 0.002); end
  def test_lever_graphs_q1268; assert_in_epsilon(4935.347720159124, worksheet.lever_graphs_q1268, 0.002); end
  def test_lever_graphs_r1268; assert_in_epsilon(5291.299223322255, worksheet.lever_graphs_r1268, 0.002); end
  def test_lever_graphs_s1268; assert_in_epsilon(5672.922974883723, worksheet.lever_graphs_s1268, 0.002); end
  def test_lever_graphs_b1269; assert_in_epsilon(3.0, worksheet.lever_graphs_b1269, 0.002); end
  def test_lever_graphs_k1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k1269, 0.002); end
  def test_lever_graphs_l1269; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_l1269, 0.002); end
  def test_lever_graphs_m1269; assert_in_epsilon(3580.4299416660083, worksheet.lever_graphs_m1269, 0.002); end
  def test_lever_graphs_n1269; assert_in_epsilon(3679.3866707142247, worksheet.lever_graphs_n1269, 0.002); end
  def test_lever_graphs_o1269; assert_in_epsilon(3781.078388125142, worksheet.lever_graphs_o1269, 0.002); end
  def test_lever_graphs_p1269; assert_in_epsilon(3885.5806841230533, worksheet.lever_graphs_p1269, 0.002); end
  def test_lever_graphs_q1269; assert_in_epsilon(3992.9712381118948, worksheet.lever_graphs_q1269, 0.002); end
  def test_lever_graphs_r1269; assert_in_epsilon(4103.329876416461, worksheet.lever_graphs_r1269, 0.002); end
  def test_lever_graphs_s1269; assert_in_epsilon(4216.73863161949, worksheet.lever_graphs_s1269, 0.002); end
  def test_lever_graphs_b1270; assert_in_epsilon(4.0, worksheet.lever_graphs_b1270, 0.002); end
  def test_lever_graphs_k1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k1270, 0.002); end
  def test_lever_graphs_l1270; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_l1270, 0.002); end
  def test_lever_graphs_m1270; assert_in_epsilon(3339.573235999637, worksheet.lever_graphs_m1270, 0.002); end
  def test_lever_graphs_n1270; assert_in_epsilon(3201.009874466012, worksheet.lever_graphs_n1270, 0.002); end
  def test_lever_graphs_o1270; assert_in_epsilon(3068.1956921845535, worksheet.lever_graphs_o1270, 0.002); end
  def test_lever_graphs_p1270; assert_in_epsilon(2940.8921480163353, worksheet.lever_graphs_p1270, 0.002); end
  def test_lever_graphs_q1270; assert_in_epsilon(2818.870598213428, worksheet.lever_graphs_q1270, 0.002); end
  def test_lever_graphs_r1270; assert_in_epsilon(2701.9118857629023, worksheet.lever_graphs_r1270, 0.002); end
  def test_lever_graphs_s1270; assert_in_epsilon(2589.8059467695034, worksheet.lever_graphs_s1270, 0.002); end
  def test_lever_graphs_c3695; assert_equal("1975", worksheet.lever_graphs_c3695); end
  def test_lever_graphs_d3695; assert_equal("1980", worksheet.lever_graphs_d3695); end
  def test_lever_graphs_e3695; assert_equal("1985", worksheet.lever_graphs_e3695); end
  def test_lever_graphs_f3695; assert_equal("1990", worksheet.lever_graphs_f3695); end
  def test_lever_graphs_g3695; assert_equal("1995", worksheet.lever_graphs_g3695); end
  def test_lever_graphs_h3695; assert_equal("2000", worksheet.lever_graphs_h3695); end
  def test_lever_graphs_i3695; assert_equal("2005", worksheet.lever_graphs_i3695); end
  def test_lever_graphs_j3695; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3695, 0.002); end
  def test_lever_graphs_k3695; assert_in_epsilon(2011.0, worksheet.lever_graphs_k3695, 0.002); end
  def test_lever_graphs_l3695; assert_equal("2015", worksheet.lever_graphs_l3695); end
  def test_lever_graphs_m3695; assert_equal("2020", worksheet.lever_graphs_m3695); end
  def test_lever_graphs_n3695; assert_equal("2025", worksheet.lever_graphs_n3695); end
  def test_lever_graphs_o3695; assert_equal("2030", worksheet.lever_graphs_o3695); end
  def test_lever_graphs_p3695; assert_equal("2035", worksheet.lever_graphs_p3695); end
  def test_lever_graphs_q3695; assert_equal("2040", worksheet.lever_graphs_q3695); end
  def test_lever_graphs_r3695; assert_equal("2045", worksheet.lever_graphs_r3695); end
  def test_lever_graphs_s3695; assert_equal("2050", worksheet.lever_graphs_s3695); end
  def test_lever_graphs_b3696; assert_equal("Historic data", worksheet.lever_graphs_b3696); end
  def test_lever_graphs_b3697; assert_in_delta(1.0, worksheet.lever_graphs_b3697, 0.002); end
  def test_lever_graphs_k3697; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3697, 0.002); end
  def test_lever_graphs_l3697; assert_in_epsilon(6093.117515886366, worksheet.lever_graphs_l3697, 0.002); end
  def test_lever_graphs_m3697; assert_in_epsilon(6664.1263441837, worksheet.lever_graphs_m3697, 0.002); end
  def test_lever_graphs_n3697; assert_in_epsilon(7243.056376186197, worksheet.lever_graphs_n3697, 0.002); end
  def test_lever_graphs_o3697; assert_in_epsilon(7887.2949337135715, worksheet.lever_graphs_o3697, 0.002); end
  def test_lever_graphs_p3697; assert_in_epsilon(8525.07375358166, worksheet.lever_graphs_p3697, 0.002); end
  def test_lever_graphs_q3697; assert_in_epsilon(9226.803340963846, worksheet.lever_graphs_q3697, 0.002); end
  def test_lever_graphs_r3697; assert_in_epsilon(9955.987398889049, worksheet.lever_graphs_r3697, 0.002); end
  def test_lever_graphs_s3697; assert_in_epsilon(10764.797342603037, worksheet.lever_graphs_s3697, 0.002); end
  def test_lever_graphs_b3698; assert_in_epsilon(2.0, worksheet.lever_graphs_b3698, 0.002); end
  def test_lever_graphs_k3698; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3698, 0.002); end
  def test_lever_graphs_l3698; assert_in_epsilon(6093.117515886366, worksheet.lever_graphs_l3698, 0.002); end
  def test_lever_graphs_m3698; assert_in_epsilon(6646.209338998034, worksheet.lever_graphs_m3698, 0.002); end
  def test_lever_graphs_n3698; assert_in_epsilon(7143.717627075208, worksheet.lever_graphs_n3698, 0.002); end
  def test_lever_graphs_o3698; assert_in_epsilon(7691.9897306673, worksheet.lever_graphs_o3698, 0.002); end
  def test_lever_graphs_p3698; assert_in_epsilon(8143.24972040434, worksheet.lever_graphs_p3698, 0.002); end
  def test_lever_graphs_q3698; assert_in_epsilon(8579.80792307853, worksheet.lever_graphs_q3698, 0.002); end
  def test_lever_graphs_r3698; assert_in_epsilon(9054.715705951416, worksheet.lever_graphs_r3698, 0.002); end
  def test_lever_graphs_s3698; assert_in_epsilon(9571.175177699599, worksheet.lever_graphs_s3698, 0.002); end
  def test_lever_graphs_b3699; assert_in_epsilon(3.0, worksheet.lever_graphs_b3699, 0.002); end
  def test_lever_graphs_k3699; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3699, 0.002); end
  def test_lever_graphs_l3699; assert_in_epsilon(6093.117515886366, worksheet.lever_graphs_l3699, 0.002); end
  def test_lever_graphs_m3699; assert_in_epsilon(6509.279246905705, worksheet.lever_graphs_m3699, 0.002); end
  def test_lever_graphs_n3699; assert_in_epsilon(6848.463439189495, worksheet.lever_graphs_n3699, 0.002); end
  def test_lever_graphs_o3699; assert_in_epsilon(7190.893448214032, worksheet.lever_graphs_o3699, 0.002); end
  def test_lever_graphs_p3699; assert_in_epsilon(7563.657694950676, worksheet.lever_graphs_p3699, 0.002); end
  def test_lever_graphs_q3699; assert_in_epsilon(7960.445136085623, worksheet.lever_graphs_q3699, 0.002); end
  def test_lever_graphs_r3699; assert_in_epsilon(8217.602966247085, worksheet.lever_graphs_r3699, 0.002); end
  def test_lever_graphs_s3699; assert_in_epsilon(8481.016349083062, worksheet.lever_graphs_s3699, 0.002); end
  def test_lever_graphs_b3700; assert_in_epsilon(4.0, worksheet.lever_graphs_b3700, 0.002); end
  def test_lever_graphs_k3700; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3700, 0.002); end
  def test_lever_graphs_l3700; assert_in_epsilon(6093.117515886366, worksheet.lever_graphs_l3700, 0.002); end
  def test_lever_graphs_m3700; assert_in_epsilon(6494.473209383298, worksheet.lever_graphs_m3700, 0.002); end
  def test_lever_graphs_n3700; assert_in_epsilon(6786.290151590854, worksheet.lever_graphs_n3700, 0.002); end
  def test_lever_graphs_o3700; assert_in_epsilon(7094.192642881444, worksheet.lever_graphs_o3700, 0.002); end
  def test_lever_graphs_p3700; assert_in_epsilon(7435.312790906834, worksheet.lever_graphs_p3700, 0.002); end
  def test_lever_graphs_q3700; assert_in_epsilon(7661.242889193842, worksheet.lever_graphs_q3700, 0.002); end
  def test_lever_graphs_r3700; assert_in_epsilon(7749.223868905651, worksheet.lever_graphs_r3700, 0.002); end
  def test_lever_graphs_s3700; assert_in_epsilon(7843.266178929781, worksheet.lever_graphs_s3700, 0.002); end
  def test_lever_graphs_c1225; assert_equal("1975", worksheet.lever_graphs_c1225); end
  def test_lever_graphs_d1225; assert_equal("1980", worksheet.lever_graphs_d1225); end
  def test_lever_graphs_e1225; assert_equal("1985", worksheet.lever_graphs_e1225); end
  def test_lever_graphs_f1225; assert_equal("1990", worksheet.lever_graphs_f1225); end
  def test_lever_graphs_g1225; assert_equal("1995", worksheet.lever_graphs_g1225); end
  def test_lever_graphs_h1225; assert_equal("2000", worksheet.lever_graphs_h1225); end
  def test_lever_graphs_i1225; assert_equal("2005", worksheet.lever_graphs_i1225); end
  def test_lever_graphs_j1225; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1225, 0.002); end
  def test_lever_graphs_k1225; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1225, 0.002); end
  def test_lever_graphs_l1225; assert_equal("2015", worksheet.lever_graphs_l1225); end
  def test_lever_graphs_m1225; assert_equal("2020", worksheet.lever_graphs_m1225); end
  def test_lever_graphs_n1225; assert_equal("2025", worksheet.lever_graphs_n1225); end
  def test_lever_graphs_o1225; assert_equal("2030", worksheet.lever_graphs_o1225); end
  def test_lever_graphs_p1225; assert_equal("2035", worksheet.lever_graphs_p1225); end
  def test_lever_graphs_q1225; assert_equal("2040", worksheet.lever_graphs_q1225); end
  def test_lever_graphs_r1225; assert_equal("2045", worksheet.lever_graphs_r1225); end
  def test_lever_graphs_s1225; assert_equal("2050", worksheet.lever_graphs_s1225); end
  def test_lever_graphs_b1226; assert_equal("Historic data", worksheet.lever_graphs_b1226); end
  def test_lever_graphs_b1227; assert_in_delta(1.0, worksheet.lever_graphs_b1227, 0.002); end
  def test_lever_graphs_k1227; assert_in_epsilon(8237.0, worksheet.lever_graphs_k1227, 0.002); end
  def test_lever_graphs_l1227; assert_in_epsilon(8915.99370192, worksheet.lever_graphs_l1227, 0.002); end
  def test_lever_graphs_m1227; assert_in_epsilon(9605.057393812243, worksheet.lever_graphs_m1227, 0.002); end
  def test_lever_graphs_n1227; assert_in_epsilon(10195.359093722229, worksheet.lever_graphs_n1227, 0.002); end
  def test_lever_graphs_o1227; assert_in_epsilon(10583.46312243392, worksheet.lever_graphs_o1227, 0.002); end
  def test_lever_graphs_p1227; assert_in_epsilon(10986.341004201457, worksheet.lever_graphs_p1227, 0.002); end
  def test_lever_graphs_q1227; assert_in_epsilon(11263.759881850438, worksheet.lever_graphs_q1227, 0.002); end
  def test_lever_graphs_r1227; assert_in_epsilon(11548.183933801452, worksheet.lever_graphs_r1227, 0.002); end
  def test_lever_graphs_s1227; assert_in_epsilon(11664.128625275758, worksheet.lever_graphs_s1227, 0.002); end
  def test_lever_graphs_b1228; assert_in_epsilon(2.0, worksheet.lever_graphs_b1228, 0.002); end
  def test_lever_graphs_k1228; assert_in_epsilon(8237.0, worksheet.lever_graphs_k1228, 0.002); end
  def test_lever_graphs_l1228; assert_in_epsilon(8915.99370192, worksheet.lever_graphs_l1228, 0.002); end
  def test_lever_graphs_m1228; assert_in_epsilon(9605.057393812243, worksheet.lever_graphs_m1228, 0.002); end
  def test_lever_graphs_n1228; assert_in_epsilon(9970.690564383047, worksheet.lever_graphs_n1228, 0.002); end
  def test_lever_graphs_o1228; assert_in_epsilon(10350.242195816749, worksheet.lever_graphs_o1228, 0.002); end
  def test_lever_graphs_p1228; assert_in_epsilon(10611.598781440709, worksheet.lever_graphs_p1228, 0.002); end
  def test_lever_graphs_q1228; assert_in_epsilon(10879.554948364963, worksheet.lever_graphs_q1228, 0.002); end
  def test_lever_graphs_r1228; assert_in_epsilon(10988.786551281655, worksheet.lever_graphs_r1228, 0.002); end
  def test_lever_graphs_s1228; assert_in_epsilon(10999.779734226748, worksheet.lever_graphs_s1228, 0.002); end
  def test_lever_graphs_b1229; assert_in_epsilon(3.0, worksheet.lever_graphs_b1229, 0.002); end
  def test_lever_graphs_k1229; assert_in_epsilon(8237.0, worksheet.lever_graphs_k1229, 0.002); end
  def test_lever_graphs_l1229; assert_in_epsilon(8915.99370192, worksheet.lever_graphs_l1229, 0.002); end
  def test_lever_graphs_m1229; assert_in_epsilon(9510.798482841601, worksheet.lever_graphs_m1229, 0.002); end
  def test_lever_graphs_n1229; assert_in_epsilon(9848.369457373425, worksheet.lever_graphs_n1229, 0.002); end
  def test_lever_graphs_o1229; assert_in_epsilon(10046.918901206524, worksheet.lever_graphs_o1229, 0.002); end
  def test_lever_graphs_p1229; assert_in_epsilon(10249.471229153289, worksheet.lever_graphs_p1229, 0.002); end
  def test_lever_graphs_q1229; assert_in_epsilon(10352.376741071972, worksheet.lever_graphs_q1229, 0.002); end
  def test_lever_graphs_r1229; assert_in_epsilon(10456.315432570995, worksheet.lever_graphs_r1229, 0.002); end
  def test_lever_graphs_s1229; assert_in_epsilon(10466.775931366326, worksheet.lever_graphs_s1229, 0.002); end
  def test_lever_graphs_b1230; assert_in_epsilon(4.0, worksheet.lever_graphs_b1230, 0.002); end
  def test_lever_graphs_k1230; assert_in_epsilon(8237.0, worksheet.lever_graphs_k1230, 0.002); end
  def test_lever_graphs_l1230; assert_in_epsilon(8915.99370192, worksheet.lever_graphs_l1230, 0.002); end
  def test_lever_graphs_m1230; assert_in_epsilon(9510.798482841601, worksheet.lever_graphs_m1230, 0.002); end
  def test_lever_graphs_n1230; assert_in_epsilon(9848.369457373425, worksheet.lever_graphs_n1230, 0.002); end
  def test_lever_graphs_o1230; assert_in_epsilon(10046.918901206524, worksheet.lever_graphs_o1230, 0.002); end
  def test_lever_graphs_p1230; assert_in_epsilon(10147.790771532224, worksheet.lever_graphs_p1230, 0.002); end
  def test_lever_graphs_q1230; assert_in_epsilon(10198.631304826251, worksheet.lever_graphs_q1230, 0.002); end
  def test_lever_graphs_r1230; assert_in_epsilon(10224.153392418053, worksheet.lever_graphs_r1230, 0.002); end
  def test_lever_graphs_s1230; assert_in_epsilon(10234.381636289841, worksheet.lever_graphs_s1230, 0.002); end
  def test_lever_graphs_c3685; assert_equal("1975", worksheet.lever_graphs_c3685); end
  def test_lever_graphs_d3685; assert_equal("1980", worksheet.lever_graphs_d3685); end
  def test_lever_graphs_e3685; assert_equal("1985", worksheet.lever_graphs_e3685); end
  def test_lever_graphs_f3685; assert_equal("1990", worksheet.lever_graphs_f3685); end
  def test_lever_graphs_g3685; assert_equal("1995", worksheet.lever_graphs_g3685); end
  def test_lever_graphs_h3685; assert_equal("2000", worksheet.lever_graphs_h3685); end
  def test_lever_graphs_i3685; assert_equal("2005", worksheet.lever_graphs_i3685); end
  def test_lever_graphs_j3685; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3685, 0.002); end
  def test_lever_graphs_k3685; assert_in_epsilon(2011.0, worksheet.lever_graphs_k3685, 0.002); end
  def test_lever_graphs_l3685; assert_equal("2015", worksheet.lever_graphs_l3685); end
  def test_lever_graphs_m3685; assert_equal("2020", worksheet.lever_graphs_m3685); end
  def test_lever_graphs_n3685; assert_equal("2025", worksheet.lever_graphs_n3685); end
  def test_lever_graphs_o3685; assert_equal("2030", worksheet.lever_graphs_o3685); end
  def test_lever_graphs_p3685; assert_equal("2035", worksheet.lever_graphs_p3685); end
  def test_lever_graphs_q3685; assert_equal("2040", worksheet.lever_graphs_q3685); end
  def test_lever_graphs_r3685; assert_equal("2045", worksheet.lever_graphs_r3685); end
  def test_lever_graphs_s3685; assert_equal("2050", worksheet.lever_graphs_s3685); end
  def test_lever_graphs_b3686; assert_equal("Historic data", worksheet.lever_graphs_b3686); end
  def test_lever_graphs_b3687; assert_in_delta(1.0, worksheet.lever_graphs_b3687, 0.002); end
  def test_lever_graphs_k3687; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3687, 0.002); end
  def test_lever_graphs_l3687; assert_in_epsilon(9994.291770817243, worksheet.lever_graphs_l3687, 0.002); end
  def test_lever_graphs_m3687; assert_in_epsilon(11046.170134527109, worksheet.lever_graphs_m3687, 0.002); end
  def test_lever_graphs_n3687; assert_in_epsilon(11809.476362077294, worksheet.lever_graphs_n3687, 0.002); end
  def test_lever_graphs_o3687; assert_in_epsilon(12345.8624313576, worksheet.lever_graphs_o3687, 0.002); end
  def test_lever_graphs_p3687; assert_in_epsilon(12696.709809149066, worksheet.lever_graphs_p3687, 0.002); end
  def test_lever_graphs_q3687; assert_in_epsilon(12910.904592845103, worksheet.lever_graphs_q3687, 0.002); end
  def test_lever_graphs_r3687; assert_in_epsilon(13125.958652274365, worksheet.lever_graphs_r3687, 0.002); end
  def test_lever_graphs_s3687; assert_in_epsilon(13291.923615394213, worksheet.lever_graphs_s3687, 0.002); end
  def test_lever_graphs_b3688; assert_in_epsilon(2.0, worksheet.lever_graphs_b3688, 0.002); end
  def test_lever_graphs_k3688; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3688, 0.002); end
  def test_lever_graphs_l3688; assert_in_epsilon(9994.291770817243, worksheet.lever_graphs_l3688, 0.002); end
  def test_lever_graphs_m3688; assert_in_epsilon(10876.711687766885, worksheet.lever_graphs_m3688, 0.002); end
  def test_lever_graphs_n3688; assert_in_epsilon(11360.15182039531, worksheet.lever_graphs_n3688, 0.002); end
  def test_lever_graphs_o3688; assert_in_epsilon(11774.209368990529, worksheet.lever_graphs_o3688, 0.002); end
  def test_lever_graphs_p3688; assert_in_epsilon(12070.800914910777, worksheet.lever_graphs_p3688, 0.002); end
  def test_lever_graphs_q3688; assert_in_epsilon(12271.12544056283, worksheet.lever_graphs_q3688, 0.002); end
  def test_lever_graphs_r3688; assert_in_epsilon(12344.323431677783, worksheet.lever_graphs_r3688, 0.002); end
  def test_lever_graphs_s3688; assert_in_epsilon(12395.783530770947, worksheet.lever_graphs_s3688, 0.002); end
  def test_lever_graphs_b3689; assert_in_epsilon(3.0, worksheet.lever_graphs_b3689, 0.002); end
  def test_lever_graphs_k3689; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3689, 0.002); end
  def test_lever_graphs_l3689; assert_in_epsilon(9994.291770817243, worksheet.lever_graphs_l3689, 0.002); end
  def test_lever_graphs_m3689; assert_in_epsilon(10753.536572895262, worksheet.lever_graphs_m3689, 0.002); end
  def test_lever_graphs_n3689; assert_in_epsilon(11221.828134756262, worksheet.lever_graphs_n3689, 0.002); end
  def test_lever_graphs_o3689; assert_in_epsilon(11572.502193356342, worksheet.lever_graphs_o3689, 0.002); end
  def test_lever_graphs_p3689; assert_in_epsilon(11748.94185353069, worksheet.lever_graphs_p3689, 0.002); end
  def test_lever_graphs_q3689; assert_in_epsilon(11856.548504379938, worksheet.lever_graphs_q3689, 0.002); end
  def test_lever_graphs_r3689; assert_in_epsilon(11918.596841548191, worksheet.lever_graphs_r3689, 0.002); end
  def test_lever_graphs_s3689; assert_in_epsilon(11933.354370580171, worksheet.lever_graphs_s3689, 0.002); end
  def test_lever_graphs_b3690; assert_in_epsilon(4.0, worksheet.lever_graphs_b3690, 0.002); end
  def test_lever_graphs_k3690; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3690, 0.002); end
  def test_lever_graphs_l3690; assert_in_epsilon(9994.291770817243, worksheet.lever_graphs_l3690, 0.002); end
  def test_lever_graphs_m3690; assert_in_epsilon(10665.616200984294, worksheet.lever_graphs_m3690, 0.002); end
  def test_lever_graphs_n3690; assert_in_epsilon(11124.807164790815, worksheet.lever_graphs_n3690, 0.002); end
  def test_lever_graphs_o3690; assert_in_epsilon(11370.711897460687, worksheet.lever_graphs_o3690, 0.002); end
  def test_lever_graphs_p3690; assert_in_epsilon(11490.275658835888, worksheet.lever_graphs_p3690, 0.002); end
  def test_lever_graphs_q3690; assert_in_epsilon(11535.520326539108, worksheet.lever_graphs_q3690, 0.002); end
  def test_lever_graphs_r3690; assert_in_epsilon(11538.167063212353, worksheet.lever_graphs_r3690, 0.002); end
  def test_lever_graphs_s3690; assert_in_epsilon(11532.54816587386, worksheet.lever_graphs_s3690, 0.002); end
  def test_lever_graphs_c2235; assert_equal("1975", worksheet.lever_graphs_c2235); end
  def test_lever_graphs_d2235; assert_equal("1980", worksheet.lever_graphs_d2235); end
  def test_lever_graphs_e2235; assert_equal("1985", worksheet.lever_graphs_e2235); end
  def test_lever_graphs_f2235; assert_equal("1990", worksheet.lever_graphs_f2235); end
  def test_lever_graphs_g2235; assert_equal("1995", worksheet.lever_graphs_g2235); end
  def test_lever_graphs_h2235; assert_equal("2000", worksheet.lever_graphs_h2235); end
  def test_lever_graphs_i2235; assert_equal("2005", worksheet.lever_graphs_i2235); end
  def test_lever_graphs_j2235; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2235, 0.002); end
  def test_lever_graphs_k2235; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2235, 0.002); end
  def test_lever_graphs_l2235; assert_equal("2015", worksheet.lever_graphs_l2235); end
  def test_lever_graphs_m2235; assert_equal("2020", worksheet.lever_graphs_m2235); end
  def test_lever_graphs_n2235; assert_equal("2025", worksheet.lever_graphs_n2235); end
  def test_lever_graphs_o2235; assert_equal("2030", worksheet.lever_graphs_o2235); end
  def test_lever_graphs_p2235; assert_equal("2035", worksheet.lever_graphs_p2235); end
  def test_lever_graphs_q2235; assert_equal("2040", worksheet.lever_graphs_q2235); end
  def test_lever_graphs_r2235; assert_equal("2045", worksheet.lever_graphs_r2235); end
  def test_lever_graphs_s2235; assert_equal("2050", worksheet.lever_graphs_s2235); end
  def test_lever_graphs_b2236; assert_equal("Historic data", worksheet.lever_graphs_b2236); end
  def test_lever_graphs_b2237; assert_in_delta(1.0, worksheet.lever_graphs_b2237, 0.002); end
  def test_lever_graphs_k2237; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2237, 0.002); end
  def test_lever_graphs_l2237; assert_in_epsilon(8.011719332690992, worksheet.lever_graphs_l2237, 0.002); end
  def test_lever_graphs_m2237; assert_in_epsilon(7.5806628990088445, worksheet.lever_graphs_m2237, 0.002); end
  def test_lever_graphs_n2237; assert_in_epsilon(7.13660906986481, worksheet.lever_graphs_n2237, 0.002); end
  def test_lever_graphs_o2237; assert_in_epsilon(6.718566660276611, worksheet.lever_graphs_o2237, 0.002); end
  def test_lever_graphs_p2237; assert_in_epsilon(6.38929004351293, worksheet.lever_graphs_p2237, 0.002); end
  def test_lever_graphs_q2237; assert_in_epsilon(6.231147148269996, worksheet.lever_graphs_q2237, 0.002); end
  def test_lever_graphs_r2237; assert_in_epsilon(6.076918486869242, worksheet.lever_graphs_r2237, 0.002); end
  def test_lever_graphs_s2237; assert_in_epsilon(5.9265071771425, worksheet.lever_graphs_s2237, 0.002); end
  def test_lever_graphs_b2238; assert_in_epsilon(2.0, worksheet.lever_graphs_b2238, 0.002); end
  def test_lever_graphs_k2238; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2238, 0.002); end
  def test_lever_graphs_l2238; assert_in_epsilon(8.011719332690992, worksheet.lever_graphs_l2238, 0.002); end
  def test_lever_graphs_m2238; assert_in_epsilon(7.4285983775928015, worksheet.lever_graphs_m2238, 0.002); end
  def test_lever_graphs_n2238; assert_in_epsilon(6.783663831581343, worksheet.lever_graphs_n2238, 0.002); end
  def test_lever_graphs_o2238; assert_in_epsilon(6.289925051143047, worksheet.lever_graphs_o2238, 0.002); end
  def test_lever_graphs_p2238; assert_in_epsilon(5.951506723180597, worksheet.lever_graphs_p2238, 0.002); end
  def test_lever_graphs_q2238; assert_in_epsilon(5.631296396707781, worksheet.lever_graphs_q2238, 0.002); end
  def test_lever_graphs_r2238; assert_in_epsilon(5.409619853440235, worksheet.lever_graphs_r2238, 0.002); end
  def test_lever_graphs_s2238; assert_in_epsilon(5.27572501693093, worksheet.lever_graphs_s2238, 0.002); end
  def test_lever_graphs_b2239; assert_in_epsilon(3.0, worksheet.lever_graphs_b2239, 0.002); end
  def test_lever_graphs_k2239; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2239, 0.002); end
  def test_lever_graphs_l2239; assert_in_epsilon(8.011719332690992, worksheet.lever_graphs_l2239, 0.002); end
  def test_lever_graphs_m2239; assert_in_epsilon(7.3348041473624335, worksheet.lever_graphs_m2239, 0.002); end
  def test_lever_graphs_n2239; assert_in_epsilon(6.715081950093092, worksheet.lever_graphs_n2239, 0.002); end
  def test_lever_graphs_o2239; assert_in_epsilon(6.1477204694935255, worksheet.lever_graphs_o2239, 0.002); end
  def test_lever_graphs_p2239; assert_in_epsilon(5.628295715811145, worksheet.lever_graphs_p2239, 0.002); end
  def test_lever_graphs_q2239; assert_in_epsilon(5.152757484958946, worksheet.lever_graphs_q2239, 0.002); end
  def test_lever_graphs_r2239; assert_in_epsilon(4.717397777130469, worksheet.lever_graphs_r2239, 0.002); end
  def test_lever_graphs_s2239; assert_in_epsilon(4.318821883745767, worksheet.lever_graphs_s2239, 0.002); end
  def test_lever_graphs_b2240; assert_in_epsilon(4.0, worksheet.lever_graphs_b2240, 0.002); end
  def test_lever_graphs_k2240; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2240, 0.002); end
  def test_lever_graphs_l2240; assert_in_epsilon(8.011719332690992, worksheet.lever_graphs_l2240, 0.002); end
  def test_lever_graphs_m2240; assert_in_epsilon(7.3348041473624335, worksheet.lever_graphs_m2240, 0.002); end
  def test_lever_graphs_n2240; assert_in_epsilon(6.715081950093092, worksheet.lever_graphs_n2240, 0.002); end
  def test_lever_graphs_o2240; assert_in_epsilon(5.916629786782296, worksheet.lever_graphs_o2240, 0.002); end
  def test_lever_graphs_p2240; assert_in_epsilon(5.213117024335677, worksheet.lever_graphs_p2240, 0.002); end
  def test_lever_graphs_q2240; assert_in_epsilon(4.593254959120604, worksheet.lever_graphs_q2240, 0.002); end
  def test_lever_graphs_r2240; assert_in_epsilon(4.047097162982756, worksheet.lever_graphs_r2240, 0.002); end
  def test_lever_graphs_s2240; assert_in_epsilon(3.5658798809110506, worksheet.lever_graphs_s2240, 0.002); end
  def test_lever_graphs_c2104; assert_equal("1975", worksheet.lever_graphs_c2104); end
  def test_lever_graphs_d2104; assert_equal("1980", worksheet.lever_graphs_d2104); end
  def test_lever_graphs_e2104; assert_equal("1985", worksheet.lever_graphs_e2104); end
  def test_lever_graphs_f2104; assert_equal("1990", worksheet.lever_graphs_f2104); end
  def test_lever_graphs_g2104; assert_equal("1995", worksheet.lever_graphs_g2104); end
  def test_lever_graphs_h2104; assert_equal("2000", worksheet.lever_graphs_h2104); end
  def test_lever_graphs_i2104; assert_equal("2005", worksheet.lever_graphs_i2104); end
  def test_lever_graphs_j2104; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2104, 0.002); end
  def test_lever_graphs_k2104; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2104, 0.002); end
  def test_lever_graphs_l2104; assert_equal("2015", worksheet.lever_graphs_l2104); end
  def test_lever_graphs_m2104; assert_equal("2020", worksheet.lever_graphs_m2104); end
  def test_lever_graphs_n2104; assert_equal("2025", worksheet.lever_graphs_n2104); end
  def test_lever_graphs_o2104; assert_equal("2030", worksheet.lever_graphs_o2104); end
  def test_lever_graphs_p2104; assert_equal("2035", worksheet.lever_graphs_p2104); end
  def test_lever_graphs_q2104; assert_equal("2040", worksheet.lever_graphs_q2104); end
  def test_lever_graphs_r2104; assert_equal("2045", worksheet.lever_graphs_r2104); end
  def test_lever_graphs_s2104; assert_equal("2050", worksheet.lever_graphs_s2104); end
  def test_lever_graphs_b2105; assert_equal("Historic data", worksheet.lever_graphs_b2105); end
  def test_lever_graphs_b2106; assert_in_delta(1.0, worksheet.lever_graphs_b2106, 0.002); end
  def test_lever_graphs_k2106; assert_in_epsilon(1.42, worksheet.lever_graphs_k2106, 0.002); end
  def test_lever_graphs_l2106; assert_in_epsilon(1.4343589743589742, worksheet.lever_graphs_l2106, 0.002); end
  def test_lever_graphs_m2106; assert_in_epsilon(1.4523076923076925, worksheet.lever_graphs_m2106, 0.002); end
  def test_lever_graphs_n2106; assert_in_epsilon(1.4702564102564102, worksheet.lever_graphs_n2106, 0.002); end
  def test_lever_graphs_o2106; assert_in_epsilon(1.488205128205128, worksheet.lever_graphs_o2106, 0.002); end
  def test_lever_graphs_p2106; assert_in_epsilon(1.5061538461538464, worksheet.lever_graphs_p2106, 0.002); end
  def test_lever_graphs_q2106; assert_in_epsilon(1.5241025641025643, worksheet.lever_graphs_q2106, 0.002); end
  def test_lever_graphs_r2106; assert_in_epsilon(1.5420512820512822, worksheet.lever_graphs_r2106, 0.002); end
  def test_lever_graphs_s2106; assert_in_epsilon(1.56, worksheet.lever_graphs_s2106, 0.002); end
  def test_lever_graphs_b2107; assert_in_epsilon(2.0, worksheet.lever_graphs_b2107, 0.002); end
  def test_lever_graphs_k2107; assert_in_epsilon(1.42, worksheet.lever_graphs_k2107, 0.002); end
  def test_lever_graphs_l2107; assert_in_epsilon(1.42, worksheet.lever_graphs_l2107, 0.002); end
  def test_lever_graphs_m2107; assert_in_epsilon(1.4200000000000002, worksheet.lever_graphs_m2107, 0.002); end
  def test_lever_graphs_n2107; assert_in_epsilon(1.42, worksheet.lever_graphs_n2107, 0.002); end
  def test_lever_graphs_o2107; assert_in_epsilon(1.42, worksheet.lever_graphs_o2107, 0.002); end
  def test_lever_graphs_p2107; assert_in_epsilon(1.42, worksheet.lever_graphs_p2107, 0.002); end
  def test_lever_graphs_q2107; assert_in_epsilon(1.42, worksheet.lever_graphs_q2107, 0.002); end
  def test_lever_graphs_r2107; assert_in_epsilon(1.42, worksheet.lever_graphs_r2107, 0.002); end
  def test_lever_graphs_s2107; assert_in_epsilon(1.42, worksheet.lever_graphs_s2107, 0.002); end
  def test_lever_graphs_b2108; assert_in_epsilon(3.0, worksheet.lever_graphs_b2108, 0.002); end
  def test_lever_graphs_k2108; assert_in_epsilon(1.42, worksheet.lever_graphs_k2108, 0.002); end
  def test_lever_graphs_l2108; assert_in_epsilon(1.4046153846153846, worksheet.lever_graphs_l2108, 0.002); end
  def test_lever_graphs_m2108; assert_in_epsilon(1.3853846153846154, worksheet.lever_graphs_m2108, 0.002); end
  def test_lever_graphs_n2108; assert_in_epsilon(1.3661538461538463, worksheet.lever_graphs_n2108, 0.002); end
  def test_lever_graphs_o2108; assert_in_epsilon(1.3469230769230767, worksheet.lever_graphs_o2108, 0.002); end
  def test_lever_graphs_p2108; assert_in_epsilon(1.327692307692308, worksheet.lever_graphs_p2108, 0.002); end
  def test_lever_graphs_q2108; assert_in_epsilon(1.3084615384615383, worksheet.lever_graphs_q2108, 0.002); end
  def test_lever_graphs_r2108; assert_in_epsilon(1.2892307692307692, worksheet.lever_graphs_r2108, 0.002); end
  def test_lever_graphs_s2108; assert_in_epsilon(1.27, worksheet.lever_graphs_s2108, 0.002); end
  def test_lever_graphs_b2109; assert_in_epsilon(4.0, worksheet.lever_graphs_b2109, 0.002); end
  def test_lever_graphs_k2109; assert_in_epsilon(1.42, worksheet.lever_graphs_k2109, 0.002); end
  def test_lever_graphs_l2109; assert_in_epsilon(1.3915897435897435, worksheet.lever_graphs_l2109, 0.002); end
  def test_lever_graphs_m2109; assert_in_epsilon(1.3560769230769232, worksheet.lever_graphs_m2109, 0.002); end
  def test_lever_graphs_n2109; assert_in_epsilon(1.3205641025641026, worksheet.lever_graphs_n2109, 0.002); end
  def test_lever_graphs_o2109; assert_in_epsilon(1.285051282051282, worksheet.lever_graphs_o2109, 0.002); end
  def test_lever_graphs_p2109; assert_in_epsilon(1.2495384615384615, worksheet.lever_graphs_p2109, 0.002); end
  def test_lever_graphs_q2109; assert_in_epsilon(1.214025641025641, worksheet.lever_graphs_q2109, 0.002); end
  def test_lever_graphs_r2109; assert_in_epsilon(1.1785128205128206, worksheet.lever_graphs_r2109, 0.002); end
  def test_lever_graphs_s2109; assert_in_epsilon(1.143, worksheet.lever_graphs_s2109, 0.002); end
  def test_lever_graphs_b2110; assert_equal("Comparator A", worksheet.lever_graphs_b2110); end
  def test_lever_graphs_b2111; assert_equal("Comparator B", worksheet.lever_graphs_b2111); end
  def test_lever_graphs_b2112; assert_equal("Comparator C", worksheet.lever_graphs_b2112); end
  def test_lever_graphs_c3119; assert_equal("1975", worksheet.lever_graphs_c3119); end
  def test_lever_graphs_d3119; assert_equal("1980", worksheet.lever_graphs_d3119); end
  def test_lever_graphs_e3119; assert_equal("1985", worksheet.lever_graphs_e3119); end
  def test_lever_graphs_f3119; assert_equal("1990", worksheet.lever_graphs_f3119); end
  def test_lever_graphs_g3119; assert_equal("1995", worksheet.lever_graphs_g3119); end
  def test_lever_graphs_h3119; assert_equal("2000", worksheet.lever_graphs_h3119); end
  def test_lever_graphs_i3119; assert_equal("2005", worksheet.lever_graphs_i3119); end
  def test_lever_graphs_j3119; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3119, 0.002); end
  def test_lever_graphs_k3119; assert_equal("2011", worksheet.lever_graphs_k3119); end
  def test_lever_graphs_l3119; assert_equal("2015", worksheet.lever_graphs_l3119); end
  def test_lever_graphs_m3119; assert_equal("2020", worksheet.lever_graphs_m3119); end
  def test_lever_graphs_n3119; assert_equal("2025", worksheet.lever_graphs_n3119); end
  def test_lever_graphs_o3119; assert_equal("2030", worksheet.lever_graphs_o3119); end
  def test_lever_graphs_p3119; assert_equal("2035", worksheet.lever_graphs_p3119); end
  def test_lever_graphs_q3119; assert_equal("2040", worksheet.lever_graphs_q3119); end
  def test_lever_graphs_r3119; assert_equal("2045", worksheet.lever_graphs_r3119); end
  def test_lever_graphs_s3119; assert_equal("2050", worksheet.lever_graphs_s3119); end
  def test_lever_graphs_b3120; assert_equal("Historic data", worksheet.lever_graphs_b3120); end
  def test_lever_graphs_b3121; assert_in_delta(1.0, worksheet.lever_graphs_b3121, 0.002); end
  def test_lever_graphs_k3121; assert_in_delta(0.0, (worksheet.lever_graphs_k3121||0), 0.002); end
  def test_lever_graphs_l3121; assert_in_delta(0.04887093273599996, worksheet.lever_graphs_l3121, 0.002); end
  def test_lever_graphs_m3121; assert_in_delta(0.0418893709165714, worksheet.lever_graphs_m3121, 0.002); end
  def test_lever_graphs_n3121; assert_in_delta(0.03490780909714283, worksheet.lever_graphs_n3121, 0.002); end
  def test_lever_graphs_o3121; assert_in_delta(0.027926247277714266, worksheet.lever_graphs_o3121, 0.002); end
  def test_lever_graphs_p3121; assert_in_delta(0.0209446854582857, worksheet.lever_graphs_p3121, 0.002); end
  def test_lever_graphs_q3121; assert_in_delta(0.013963123638857128, worksheet.lever_graphs_q3121, 0.002); end
  def test_lever_graphs_r3121; assert_in_delta(0.006981561819428571, worksheet.lever_graphs_r3121, 0.002); end
  def test_lever_graphs_s3121; assert_in_delta(0.0, (worksheet.lever_graphs_s3121||0), 0.002); end
  def test_lever_graphs_b3122; assert_in_epsilon(2.0, worksheet.lever_graphs_b3122, 0.002); end
  def test_lever_graphs_k3122; assert_in_delta(0.0, (worksheet.lever_graphs_k3122||0), 0.002); end
  def test_lever_graphs_l3122; assert_in_delta(0.04887093273599996, worksheet.lever_graphs_l3122, 0.002); end
  def test_lever_graphs_m3122; assert_in_delta(0.09903222805942855, worksheet.lever_graphs_m3122, 0.002); end
  def test_lever_graphs_n3122; assert_in_delta(0.14919352338285713, worksheet.lever_graphs_n3122, 0.002); end
  def test_lever_graphs_o3122; assert_in_delta(0.19935481870628569, worksheet.lever_graphs_o3122, 0.002); end
  def test_lever_graphs_p3122; assert_in_delta(0.24951611402971427, worksheet.lever_graphs_p3122, 0.002); end
  def test_lever_graphs_q3122; assert_in_delta(0.29967740935314285, worksheet.lever_graphs_q3122, 0.002); end
  def test_lever_graphs_r3122; assert_in_delta(0.3498387046765714, worksheet.lever_graphs_r3122, 0.002); end
  def test_lever_graphs_s3122; assert_in_delta(0.4, worksheet.lever_graphs_s3122, 0.002); end
  def test_lever_graphs_b3123; assert_in_epsilon(3.0, worksheet.lever_graphs_b3123, 0.002); end
  def test_lever_graphs_k3123; assert_in_delta(0.0, (worksheet.lever_graphs_k3123||0), 0.002); end
  def test_lever_graphs_l3123; assert_in_delta(0.04887093273599996, worksheet.lever_graphs_l3123, 0.002); end
  def test_lever_graphs_m3123; assert_in_delta(0.1276036566308571, worksheet.lever_graphs_m3123, 0.002); end
  def test_lever_graphs_n3123; assert_in_delta(0.20633638052571424, worksheet.lever_graphs_n3123, 0.002); end
  def test_lever_graphs_o3123; assert_in_delta(0.2850691044205714, worksheet.lever_graphs_o3123, 0.002); end
  def test_lever_graphs_p3123; assert_in_delta(0.3638018283154285, worksheet.lever_graphs_p3123, 0.002); end
  def test_lever_graphs_q3123; assert_in_delta(0.4425345522102857, worksheet.lever_graphs_q3123, 0.002); end
  def test_lever_graphs_r3123; assert_in_delta(0.5212672761051428, worksheet.lever_graphs_r3123, 0.002); end
  def test_lever_graphs_s3123; assert_in_delta(0.6, worksheet.lever_graphs_s3123, 0.002); end
  def test_lever_graphs_b3124; assert_in_epsilon(4.0, worksheet.lever_graphs_b3124, 0.002); end
  def test_lever_graphs_k3124; assert_in_delta(0.0, (worksheet.lever_graphs_k3124||0), 0.002); end
  def test_lever_graphs_l3124; assert_in_delta(0.04887093273599996, worksheet.lever_graphs_l3124, 0.002); end
  def test_lever_graphs_m3124; assert_in_delta(0.18474651377371423, worksheet.lever_graphs_m3124, 0.002); end
  def test_lever_graphs_n3124; assert_in_delta(0.3206220948114285, worksheet.lever_graphs_n3124, 0.002); end
  def test_lever_graphs_o3124; assert_in_delta(0.4564976758491428, worksheet.lever_graphs_o3124, 0.002); end
  def test_lever_graphs_p3124; assert_in_delta(0.592373256886857, worksheet.lever_graphs_p3124, 0.002); end
  def test_lever_graphs_q3124; assert_in_delta(0.7282488379245714, worksheet.lever_graphs_q3124, 0.002); end
  def test_lever_graphs_r3124; assert_in_delta(0.8641244189622856, worksheet.lever_graphs_r3124, 0.002); end
  def test_lever_graphs_s3124; assert_in_delta(1.0, worksheet.lever_graphs_s3124, 0.002); end
  def test_lever_graphs_c3130; assert_equal("1975", worksheet.lever_graphs_c3130); end
  def test_lever_graphs_d3130; assert_equal("1980", worksheet.lever_graphs_d3130); end
  def test_lever_graphs_e3130; assert_equal("1985", worksheet.lever_graphs_e3130); end
  def test_lever_graphs_f3130; assert_equal("1990", worksheet.lever_graphs_f3130); end
  def test_lever_graphs_g3130; assert_equal("1995", worksheet.lever_graphs_g3130); end
  def test_lever_graphs_h3130; assert_equal("2000", worksheet.lever_graphs_h3130); end
  def test_lever_graphs_i3130; assert_equal("2005", worksheet.lever_graphs_i3130); end
  def test_lever_graphs_j3130; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3130, 0.002); end
  def test_lever_graphs_k3130; assert_equal("2011", worksheet.lever_graphs_k3130); end
  def test_lever_graphs_l3130; assert_equal("2015", worksheet.lever_graphs_l3130); end
  def test_lever_graphs_m3130; assert_equal("2020", worksheet.lever_graphs_m3130); end
  def test_lever_graphs_n3130; assert_equal("2025", worksheet.lever_graphs_n3130); end
  def test_lever_graphs_o3130; assert_equal("2030", worksheet.lever_graphs_o3130); end
  def test_lever_graphs_p3130; assert_equal("2035", worksheet.lever_graphs_p3130); end
  def test_lever_graphs_q3130; assert_equal("2040", worksheet.lever_graphs_q3130); end
  def test_lever_graphs_r3130; assert_equal("2045", worksheet.lever_graphs_r3130); end
  def test_lever_graphs_s3130; assert_equal("2050", worksheet.lever_graphs_s3130); end
  def test_lever_graphs_b3131; assert_equal("Historic data for cereals", worksheet.lever_graphs_b3131); end
  def test_lever_graphs_c3131; assert_in_delta(0.5214, worksheet.lever_graphs_c3131, 0.002); end
  def test_lever_graphs_d3131; assert_in_delta(0.5891, worksheet.lever_graphs_d3131, 0.002); end
  def test_lever_graphs_e3131; assert_in_delta(0.6893, worksheet.lever_graphs_e3131, 0.002); end
  def test_lever_graphs_f3131; assert_in_delta(0.7515, worksheet.lever_graphs_f3131, 0.002); end
  def test_lever_graphs_g3131; assert_in_delta(0.7537, worksheet.lever_graphs_g3131, 0.002); end
  def test_lever_graphs_h3131; assert_in_delta(0.8346, worksheet.lever_graphs_h3131, 0.002); end
  def test_lever_graphs_i3131; assert_in_delta(0.8952, worksheet.lever_graphs_i3131, 0.002); end
  def test_lever_graphs_j3131; assert_in_delta(0.9739, worksheet.lever_graphs_j3131, 0.002); end
  def test_lever_graphs_k3131; assert_in_delta(1.0, worksheet.lever_graphs_k3131, 0.002); end
  def test_lever_graphs_b3132; assert_in_delta(1.0, worksheet.lever_graphs_b3132, 0.002); end
  def test_lever_graphs_k3132; assert_in_delta(1.0, worksheet.lever_graphs_k3132, 0.002); end
  def test_lever_graphs_l3132; assert_in_epsilon(1.048870932736, worksheet.lever_graphs_l3132, 0.002); end
  def test_lever_graphs_m3132; assert_in_epsilon(1.0418893709165713, worksheet.lever_graphs_m3132, 0.002); end
  def test_lever_graphs_n3132; assert_in_epsilon(1.0349078090971429, worksheet.lever_graphs_n3132, 0.002); end
  def test_lever_graphs_o3132; assert_in_epsilon(1.0279262472777142, worksheet.lever_graphs_o3132, 0.002); end
  def test_lever_graphs_p3132; assert_in_epsilon(1.0209446854582858, worksheet.lever_graphs_p3132, 0.002); end
  def test_lever_graphs_q3132; assert_in_epsilon(1.013963123638857, worksheet.lever_graphs_q3132, 0.002); end
  def test_lever_graphs_r3132; assert_in_epsilon(1.0069815618194287, worksheet.lever_graphs_r3132, 0.002); end
  def test_lever_graphs_s3132; assert_in_delta(1.0, worksheet.lever_graphs_s3132, 0.002); end
  def test_lever_graphs_b3133; assert_in_epsilon(2.0, worksheet.lever_graphs_b3133, 0.002); end
  def test_lever_graphs_k3133; assert_in_delta(1.0, worksheet.lever_graphs_k3133, 0.002); end
  def test_lever_graphs_l3133; assert_in_epsilon(1.048870932736, worksheet.lever_graphs_l3133, 0.002); end
  def test_lever_graphs_m3133; assert_in_epsilon(1.0990322280594285, worksheet.lever_graphs_m3133, 0.002); end
  def test_lever_graphs_n3133; assert_in_epsilon(1.1491935233828572, worksheet.lever_graphs_n3133, 0.002); end
  def test_lever_graphs_o3133; assert_in_epsilon(1.1993548187062857, worksheet.lever_graphs_o3133, 0.002); end
  def test_lever_graphs_p3133; assert_in_epsilon(1.2495161140297142, worksheet.lever_graphs_p3133, 0.002); end
  def test_lever_graphs_q3133; assert_in_epsilon(1.299677409353143, worksheet.lever_graphs_q3133, 0.002); end
  def test_lever_graphs_r3133; assert_in_epsilon(1.3498387046765714, worksheet.lever_graphs_r3133, 0.002); end
  def test_lever_graphs_s3133; assert_in_epsilon(1.4, worksheet.lever_graphs_s3133, 0.002); end
  def test_lever_graphs_b3134; assert_in_epsilon(3.0, worksheet.lever_graphs_b3134, 0.002); end
  def test_lever_graphs_k3134; assert_in_delta(1.0, worksheet.lever_graphs_k3134, 0.002); end
  def test_lever_graphs_l3134; assert_in_epsilon(1.048870932736, worksheet.lever_graphs_l3134, 0.002); end
  def test_lever_graphs_m3134; assert_in_epsilon(1.1276036566308572, worksheet.lever_graphs_m3134, 0.002); end
  def test_lever_graphs_n3134; assert_in_epsilon(1.2063363805257143, worksheet.lever_graphs_n3134, 0.002); end
  def test_lever_graphs_o3134; assert_in_epsilon(1.2850691044205713, worksheet.lever_graphs_o3134, 0.002); end
  def test_lever_graphs_p3134; assert_in_epsilon(1.3638018283154285, worksheet.lever_graphs_p3134, 0.002); end
  def test_lever_graphs_q3134; assert_in_epsilon(1.4425345522102857, worksheet.lever_graphs_q3134, 0.002); end
  def test_lever_graphs_r3134; assert_in_epsilon(1.5212672761051427, worksheet.lever_graphs_r3134, 0.002); end
  def test_lever_graphs_s3134; assert_in_epsilon(1.6, worksheet.lever_graphs_s3134, 0.002); end
  def test_lever_graphs_b3135; assert_in_epsilon(4.0, worksheet.lever_graphs_b3135, 0.002); end
  def test_lever_graphs_k3135; assert_in_delta(1.0, worksheet.lever_graphs_k3135, 0.002); end
  def test_lever_graphs_l3135; assert_in_epsilon(1.048870932736, worksheet.lever_graphs_l3135, 0.002); end
  def test_lever_graphs_m3135; assert_in_epsilon(1.1847465137737143, worksheet.lever_graphs_m3135, 0.002); end
  def test_lever_graphs_n3135; assert_in_epsilon(1.3206220948114284, worksheet.lever_graphs_n3135, 0.002); end
  def test_lever_graphs_o3135; assert_in_epsilon(1.4564976758491428, worksheet.lever_graphs_o3135, 0.002); end
  def test_lever_graphs_p3135; assert_in_epsilon(1.592373256886857, worksheet.lever_graphs_p3135, 0.002); end
  def test_lever_graphs_q3135; assert_in_epsilon(1.7282488379245713, worksheet.lever_graphs_q3135, 0.002); end
  def test_lever_graphs_r3135; assert_in_epsilon(1.8641244189622856, worksheet.lever_graphs_r3135, 0.002); end
  def test_lever_graphs_s3135; assert_in_epsilon(2.0, worksheet.lever_graphs_s3135, 0.002); end
  def test_lever_graphs_c3445; assert_equal("1975", worksheet.lever_graphs_c3445); end
  def test_lever_graphs_d3445; assert_equal("1980", worksheet.lever_graphs_d3445); end
  def test_lever_graphs_e3445; assert_equal("1985", worksheet.lever_graphs_e3445); end
  def test_lever_graphs_f3445; assert_equal("1990", worksheet.lever_graphs_f3445); end
  def test_lever_graphs_g3445; assert_equal("1995", worksheet.lever_graphs_g3445); end
  def test_lever_graphs_h3445; assert_equal("2000", worksheet.lever_graphs_h3445); end
  def test_lever_graphs_i3445; assert_equal("2005", worksheet.lever_graphs_i3445); end
  def test_lever_graphs_j3445; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3445, 0.002); end
  def test_lever_graphs_k3445; assert_equal("2011", worksheet.lever_graphs_k3445); end
  def test_lever_graphs_l3445; assert_equal("2015", worksheet.lever_graphs_l3445); end
  def test_lever_graphs_m3445; assert_equal("2020", worksheet.lever_graphs_m3445); end
  def test_lever_graphs_n3445; assert_equal("2025", worksheet.lever_graphs_n3445); end
  def test_lever_graphs_o3445; assert_equal("2030", worksheet.lever_graphs_o3445); end
  def test_lever_graphs_p3445; assert_equal("2035", worksheet.lever_graphs_p3445); end
  def test_lever_graphs_q3445; assert_equal("2040", worksheet.lever_graphs_q3445); end
  def test_lever_graphs_r3445; assert_equal("2045", worksheet.lever_graphs_r3445); end
  def test_lever_graphs_s3445; assert_equal("2050", worksheet.lever_graphs_s3445); end
  def test_lever_graphs_b3446; assert_equal("Historic data", worksheet.lever_graphs_b3446); end
  def test_lever_graphs_b3447; assert_in_delta(1.0, worksheet.lever_graphs_b3447, 0.002); end
  def test_lever_graphs_k3447; assert_in_delta(0.1, worksheet.lever_graphs_k3447, 0.002); end
  def test_lever_graphs_l3447; assert_in_delta(0.11538461538461539, worksheet.lever_graphs_l3447, 0.002); end
  def test_lever_graphs_m3447; assert_in_delta(0.11318681318681319, worksheet.lever_graphs_m3447, 0.002); end
  def test_lever_graphs_n3447; assert_in_delta(0.110989010989011, worksheet.lever_graphs_n3447, 0.002); end
  def test_lever_graphs_o3447; assert_in_delta(0.1087912087912088, worksheet.lever_graphs_o3447, 0.002); end
  def test_lever_graphs_p3447; assert_in_delta(0.1065934065934066, worksheet.lever_graphs_p3447, 0.002); end
  def test_lever_graphs_q3447; assert_in_delta(0.1043956043956044, worksheet.lever_graphs_q3447, 0.002); end
  def test_lever_graphs_r3447; assert_in_delta(0.10219780219780221, worksheet.lever_graphs_r3447, 0.002); end
  def test_lever_graphs_s3447; assert_in_delta(0.1, worksheet.lever_graphs_s3447, 0.002); end
  def test_lever_graphs_b3448; assert_in_epsilon(2.0, worksheet.lever_graphs_b3448, 0.002); end
  def test_lever_graphs_k3448; assert_in_delta(0.1, worksheet.lever_graphs_k3448, 0.002); end
  def test_lever_graphs_l3448; assert_in_delta(0.11538461538461539, worksheet.lever_graphs_l3448, 0.002); end
  def test_lever_graphs_m3448; assert_in_delta(0.1274725274725275, worksheet.lever_graphs_m3448, 0.002); end
  def test_lever_graphs_n3448; assert_in_delta(0.13956043956043956, worksheet.lever_graphs_n3448, 0.002); end
  def test_lever_graphs_o3448; assert_in_delta(0.15164835164835166, worksheet.lever_graphs_o3448, 0.002); end
  def test_lever_graphs_p3448; assert_in_delta(0.16373626373626374, worksheet.lever_graphs_p3448, 0.002); end
  def test_lever_graphs_q3448; assert_in_delta(0.17582417582417584, worksheet.lever_graphs_q3448, 0.002); end
  def test_lever_graphs_r3448; assert_in_delta(0.1879120879120879, worksheet.lever_graphs_r3448, 0.002); end
  def test_lever_graphs_s3448; assert_in_delta(0.2, worksheet.lever_graphs_s3448, 0.002); end
  def test_lever_graphs_b3449; assert_in_epsilon(3.0, worksheet.lever_graphs_b3449, 0.002); end
  def test_lever_graphs_k3449; assert_in_delta(0.1, worksheet.lever_graphs_k3449, 0.002); end
  def test_lever_graphs_l3449; assert_in_delta(0.11538461538461539, worksheet.lever_graphs_l3449, 0.002); end
  def test_lever_graphs_m3449; assert_in_delta(0.14175824175824175, worksheet.lever_graphs_m3449, 0.002); end
  def test_lever_graphs_n3449; assert_in_delta(0.16813186813186815, worksheet.lever_graphs_n3449, 0.002); end
  def test_lever_graphs_o3449; assert_in_delta(0.19450549450549448, worksheet.lever_graphs_o3449, 0.002); end
  def test_lever_graphs_p3449; assert_in_delta(0.22087912087912087, worksheet.lever_graphs_p3449, 0.002); end
  def test_lever_graphs_q3449; assert_in_delta(0.24725274725274726, worksheet.lever_graphs_q3449, 0.002); end
  def test_lever_graphs_r3449; assert_in_delta(0.2736263736263736, worksheet.lever_graphs_r3449, 0.002); end
  def test_lever_graphs_s3449; assert_in_delta(0.3, worksheet.lever_graphs_s3449, 0.002); end
  def test_lever_graphs_b3450; assert_in_epsilon(4.0, worksheet.lever_graphs_b3450, 0.002); end
  def test_lever_graphs_k3450; assert_in_delta(0.1, worksheet.lever_graphs_k3450, 0.002); end
  def test_lever_graphs_l3450; assert_in_delta(0.11538461538461539, worksheet.lever_graphs_l3450, 0.002); end
  def test_lever_graphs_m3450; assert_in_delta(0.17032967032967034, worksheet.lever_graphs_m3450, 0.002); end
  def test_lever_graphs_n3450; assert_in_delta(0.22527472527472525, worksheet.lever_graphs_n3450, 0.002); end
  def test_lever_graphs_o3450; assert_in_delta(0.2802197802197802, worksheet.lever_graphs_o3450, 0.002); end
  def test_lever_graphs_p3450; assert_in_delta(0.33516483516483514, worksheet.lever_graphs_p3450, 0.002); end
  def test_lever_graphs_q3450; assert_in_delta(0.39010989010989006, worksheet.lever_graphs_q3450, 0.002); end
  def test_lever_graphs_r3450; assert_in_delta(0.44505494505494503, worksheet.lever_graphs_r3450, 0.002); end
  def test_lever_graphs_s3450; assert_in_delta(0.5, worksheet.lever_graphs_s3450, 0.002); end
  def test_lever_graphs_d3477; assert_equal("Title", worksheet.lever_graphs_d3477); end
  def test_lever_graphs_e3477; assert_equal("Food crops", worksheet.lever_graphs_e3477); end
  def test_lever_graphs_f3477; assert_equal("Cows and other bovines ", worksheet.lever_graphs_f3477); end
  def test_lever_graphs_g3477; assert_equal("Chickens and other poultry", worksheet.lever_graphs_g3477); end
  def test_lever_graphs_h3477; assert_equal("Pigs", worksheet.lever_graphs_h3477); end
  def test_lever_graphs_i3477; assert_equal("Sheep and goats", worksheet.lever_graphs_i3477); end
  def test_lever_graphs_j3477; assert_equal("Other animals", worksheet.lever_graphs_j3477); end
  def test_lever_graphs_k3477; assert_equal("Eggs", worksheet.lever_graphs_k3477); end
  def test_lever_graphs_l3477; assert_equal("Milk products", worksheet.lever_graphs_l3477); end
  def test_lever_graphs_d3478; assert_in_epsilon(2011.0, worksheet.lever_graphs_d3478, 0.002); end
  def test_lever_graphs_e3478; assert_in_delta(0.01, worksheet.lever_graphs_e3478, 0.002); end
  def test_lever_graphs_f3478; assert_in_delta(0.01, worksheet.lever_graphs_f3478, 0.002); end
  def test_lever_graphs_g3478; assert_in_delta(0.01, worksheet.lever_graphs_g3478, 0.002); end
  def test_lever_graphs_h3478; assert_in_delta(0.01, worksheet.lever_graphs_h3478, 0.002); end
  def test_lever_graphs_i3478; assert_in_delta(0.01, worksheet.lever_graphs_i3478, 0.002); end
  def test_lever_graphs_j3478; assert_in_delta(0.01, worksheet.lever_graphs_j3478, 0.002); end
  def test_lever_graphs_k3478; assert_in_delta(0.002, worksheet.lever_graphs_k3478, 0.002); end
  def test_lever_graphs_l3478; assert_in_delta(0.001, worksheet.lever_graphs_l3478, 0.002); end
  def test_lever_graphs_d3479; assert_equal("2050: Level 1", worksheet.lever_graphs_d3479); end
  def test_lever_graphs_e3479; assert_in_delta(0.05, worksheet.lever_graphs_e3479, 0.002); end
  def test_lever_graphs_f3479; assert_in_delta(0.05, worksheet.lever_graphs_f3479, 0.002); end
  def test_lever_graphs_g3479; assert_in_delta(0.05, worksheet.lever_graphs_g3479, 0.002); end
  def test_lever_graphs_h3479; assert_in_delta(0.05, worksheet.lever_graphs_h3479, 0.002); end
  def test_lever_graphs_i3479; assert_in_delta(0.05, worksheet.lever_graphs_i3479, 0.002); end
  def test_lever_graphs_j3479; assert_in_delta(0.05, worksheet.lever_graphs_j3479, 0.002); end
  def test_lever_graphs_k3479; assert_in_delta(0.005, worksheet.lever_graphs_k3479, 0.002); end
  def test_lever_graphs_l3479; assert_in_delta(0.005, worksheet.lever_graphs_l3479, 0.002); end
  def test_lever_graphs_d3480; assert_equal("2050: Level 2", worksheet.lever_graphs_d3480); end
  def test_lever_graphs_e3480; assert_in_delta(0.15, worksheet.lever_graphs_e3480, 0.002); end
  def test_lever_graphs_f3480; assert_in_delta(0.15, worksheet.lever_graphs_f3480, 0.002); end
  def test_lever_graphs_g3480; assert_in_delta(0.15, worksheet.lever_graphs_g3480, 0.002); end
  def test_lever_graphs_h3480; assert_in_delta(0.15, worksheet.lever_graphs_h3480, 0.002); end
  def test_lever_graphs_i3480; assert_in_delta(0.15, worksheet.lever_graphs_i3480, 0.002); end
  def test_lever_graphs_j3480; assert_in_delta(0.15, worksheet.lever_graphs_j3480, 0.002); end
  def test_lever_graphs_k3480; assert_in_delta(0.02, worksheet.lever_graphs_k3480, 0.002); end
  def test_lever_graphs_l3480; assert_in_delta(0.02, worksheet.lever_graphs_l3480, 0.002); end
  def test_lever_graphs_d3481; assert_equal("2050: Level 3", worksheet.lever_graphs_d3481); end
  def test_lever_graphs_e3481; assert_in_delta(0.2, worksheet.lever_graphs_e3481, 0.002); end
  def test_lever_graphs_f3481; assert_in_delta(0.2, worksheet.lever_graphs_f3481, 0.002); end
  def test_lever_graphs_g3481; assert_in_delta(0.2, worksheet.lever_graphs_g3481, 0.002); end
  def test_lever_graphs_h3481; assert_in_delta(0.2, worksheet.lever_graphs_h3481, 0.002); end
  def test_lever_graphs_i3481; assert_in_delta(0.2, worksheet.lever_graphs_i3481, 0.002); end
  def test_lever_graphs_j3481; assert_in_delta(0.2, worksheet.lever_graphs_j3481, 0.002); end
  def test_lever_graphs_k3481; assert_in_delta(0.05, worksheet.lever_graphs_k3481, 0.002); end
  def test_lever_graphs_l3481; assert_in_delta(0.05, worksheet.lever_graphs_l3481, 0.002); end
  def test_lever_graphs_d3482; assert_equal("2050: Level 4", worksheet.lever_graphs_d3482); end
  def test_lever_graphs_e3482; assert_in_delta(0.3, worksheet.lever_graphs_e3482, 0.002); end
  def test_lever_graphs_f3482; assert_in_delta(0.3, worksheet.lever_graphs_f3482, 0.002); end
  def test_lever_graphs_g3482; assert_in_delta(0.3, worksheet.lever_graphs_g3482, 0.002); end
  def test_lever_graphs_h3482; assert_in_delta(0.3, worksheet.lever_graphs_h3482, 0.002); end
  def test_lever_graphs_i3482; assert_in_delta(0.3, worksheet.lever_graphs_i3482, 0.002); end
  def test_lever_graphs_j3482; assert_in_delta(0.3, worksheet.lever_graphs_j3482, 0.002); end
  def test_lever_graphs_k3482; assert_in_delta(0.1, worksheet.lever_graphs_k3482, 0.002); end
  def test_lever_graphs_l3482; assert_in_delta(0.1, worksheet.lever_graphs_l3482, 0.002); end
  def test_lever_graphs_c3466; assert_equal("1975", worksheet.lever_graphs_c3466); end
  def test_lever_graphs_d3466; assert_equal("1980", worksheet.lever_graphs_d3466); end
  def test_lever_graphs_e3466; assert_equal("1985", worksheet.lever_graphs_e3466); end
  def test_lever_graphs_f3466; assert_equal("1990", worksheet.lever_graphs_f3466); end
  def test_lever_graphs_g3466; assert_equal("1995", worksheet.lever_graphs_g3466); end
  def test_lever_graphs_h3466; assert_equal("2000", worksheet.lever_graphs_h3466); end
  def test_lever_graphs_i3466; assert_equal("2005", worksheet.lever_graphs_i3466); end
  def test_lever_graphs_j3466; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3466, 0.002); end
  def test_lever_graphs_k3466; assert_equal("2011", worksheet.lever_graphs_k3466); end
  def test_lever_graphs_l3466; assert_equal("2015", worksheet.lever_graphs_l3466); end
  def test_lever_graphs_m3466; assert_equal("2020", worksheet.lever_graphs_m3466); end
  def test_lever_graphs_n3466; assert_equal("2025", worksheet.lever_graphs_n3466); end
  def test_lever_graphs_o3466; assert_equal("2030", worksheet.lever_graphs_o3466); end
  def test_lever_graphs_p3466; assert_equal("2035", worksheet.lever_graphs_p3466); end
  def test_lever_graphs_q3466; assert_equal("2040", worksheet.lever_graphs_q3466); end
  def test_lever_graphs_r3466; assert_equal("2045", worksheet.lever_graphs_r3466); end
  def test_lever_graphs_s3466; assert_equal("2050", worksheet.lever_graphs_s3466); end
  def test_lever_graphs_b3467; assert_equal("Historic data", worksheet.lever_graphs_b3467); end
  def test_lever_graphs_b3468; assert_in_delta(1.0, worksheet.lever_graphs_b3468, 0.002); end
  def test_lever_graphs_k3468; assert_in_delta(0.24, worksheet.lever_graphs_k3468, 0.002); end
  def test_lever_graphs_l3468; assert_in_delta(0.2358974358974359, worksheet.lever_graphs_l3468, 0.002); end
  def test_lever_graphs_m3468; assert_in_delta(0.23648351648351648, worksheet.lever_graphs_m3468, 0.002); end
  def test_lever_graphs_n3468; assert_in_delta(0.23706959706959707, worksheet.lever_graphs_n3468, 0.002); end
  def test_lever_graphs_o3468; assert_in_delta(0.23765567765567766, worksheet.lever_graphs_o3468, 0.002); end
  def test_lever_graphs_p3468; assert_in_delta(0.23824175824175822, worksheet.lever_graphs_p3468, 0.002); end
  def test_lever_graphs_q3468; assert_in_delta(0.2388278388278388, worksheet.lever_graphs_q3468, 0.002); end
  def test_lever_graphs_r3468; assert_in_delta(0.2394139194139194, worksheet.lever_graphs_r3468, 0.002); end
  def test_lever_graphs_s3468; assert_in_delta(0.24, worksheet.lever_graphs_s3468, 0.002); end
  def test_lever_graphs_b3469; assert_in_epsilon(2.0, worksheet.lever_graphs_b3469, 0.002); end
  def test_lever_graphs_k3469; assert_in_delta(0.24, worksheet.lever_graphs_k3469, 0.002); end
  def test_lever_graphs_l3469; assert_in_delta(0.2358974358974359, worksheet.lever_graphs_l3469, 0.002); end
  def test_lever_graphs_m3469; assert_in_delta(0.23076923076923075, worksheet.lever_graphs_m3469, 0.002); end
  def test_lever_graphs_n3469; assert_in_delta(0.22564102564102564, worksheet.lever_graphs_n3469, 0.002); end
  def test_lever_graphs_o3469; assert_in_delta(0.2205128205128205, worksheet.lever_graphs_o3469, 0.002); end
  def test_lever_graphs_p3469; assert_in_delta(0.2153846153846154, worksheet.lever_graphs_p3469, 0.002); end
  def test_lever_graphs_q3469; assert_in_delta(0.21025641025641026, worksheet.lever_graphs_q3469, 0.002); end
  def test_lever_graphs_r3469; assert_in_delta(0.20512820512820515, worksheet.lever_graphs_r3469, 0.002); end
  def test_lever_graphs_s3469; assert_in_delta(0.2, worksheet.lever_graphs_s3469, 0.002); end
  def test_lever_graphs_b3470; assert_in_epsilon(3.0, worksheet.lever_graphs_b3470, 0.002); end
  def test_lever_graphs_k3470; assert_in_delta(0.24, worksheet.lever_graphs_k3470, 0.002); end
  def test_lever_graphs_l3470; assert_in_delta(0.2358974358974359, worksheet.lever_graphs_l3470, 0.002); end
  def test_lever_graphs_m3470; assert_in_delta(0.22505494505494505, worksheet.lever_graphs_m3470, 0.002); end
  def test_lever_graphs_n3470; assert_in_delta(0.21421245421245422, worksheet.lever_graphs_n3470, 0.002); end
  def test_lever_graphs_o3470; assert_in_delta(0.20336996336996338, worksheet.lever_graphs_o3470, 0.002); end
  def test_lever_graphs_p3470; assert_in_delta(0.19252747252747254, worksheet.lever_graphs_p3470, 0.002); end
  def test_lever_graphs_q3470; assert_in_delta(0.18168498168498168, worksheet.lever_graphs_q3470, 0.002); end
  def test_lever_graphs_r3470; assert_in_delta(0.17084249084249087, worksheet.lever_graphs_r3470, 0.002); end
  def test_lever_graphs_s3470; assert_in_delta(0.16, worksheet.lever_graphs_s3470, 0.002); end
  def test_lever_graphs_b3471; assert_in_epsilon(4.0, worksheet.lever_graphs_b3471, 0.002); end
  def test_lever_graphs_k3471; assert_in_delta(0.24, worksheet.lever_graphs_k3471, 0.002); end
  def test_lever_graphs_l3471; assert_in_delta(0.2358974358974359, worksheet.lever_graphs_l3471, 0.002); end
  def test_lever_graphs_m3471; assert_in_delta(0.2164835164835165, worksheet.lever_graphs_m3471, 0.002); end
  def test_lever_graphs_n3471; assert_in_delta(0.19706959706959706, worksheet.lever_graphs_n3471, 0.002); end
  def test_lever_graphs_o3471; assert_in_delta(0.17765567765567766, worksheet.lever_graphs_o3471, 0.002); end
  def test_lever_graphs_p3471; assert_in_delta(0.15824175824175823, worksheet.lever_graphs_p3471, 0.002); end
  def test_lever_graphs_q3471; assert_in_delta(0.13882783882783883, worksheet.lever_graphs_q3471, 0.002); end
  def test_lever_graphs_r3471; assert_in_delta(0.11941391941391942, worksheet.lever_graphs_r3471, 0.002); end
  def test_lever_graphs_s3471; assert_in_delta(0.1, worksheet.lever_graphs_s3471, 0.002); end
  def test_lever_graphs_c1676; assert_equal("1975", worksheet.lever_graphs_c1676); end
  def test_lever_graphs_d1676; assert_equal("1980", worksheet.lever_graphs_d1676); end
  def test_lever_graphs_e1676; assert_equal("1985", worksheet.lever_graphs_e1676); end
  def test_lever_graphs_f1676; assert_equal("1990", worksheet.lever_graphs_f1676); end
  def test_lever_graphs_g1676; assert_equal("1995", worksheet.lever_graphs_g1676); end
  def test_lever_graphs_h1676; assert_equal("2000", worksheet.lever_graphs_h1676); end
  def test_lever_graphs_i1676; assert_equal("2005", worksheet.lever_graphs_i1676); end
  def test_lever_graphs_j1676; assert_equal("2010", worksheet.lever_graphs_j1676); end
  def test_lever_graphs_k1676; assert_equal("2011", worksheet.lever_graphs_k1676); end
  def test_lever_graphs_l1676; assert_equal("2015", worksheet.lever_graphs_l1676); end
  def test_lever_graphs_m1676; assert_equal("2020", worksheet.lever_graphs_m1676); end
  def test_lever_graphs_n1676; assert_equal("2025", worksheet.lever_graphs_n1676); end
  def test_lever_graphs_o1676; assert_equal("2030", worksheet.lever_graphs_o1676); end
  def test_lever_graphs_p1676; assert_equal("2035", worksheet.lever_graphs_p1676); end
  def test_lever_graphs_q1676; assert_equal("2040", worksheet.lever_graphs_q1676); end
  def test_lever_graphs_r1676; assert_equal("2045", worksheet.lever_graphs_r1676); end
  def test_lever_graphs_s1676; assert_equal("2050", worksheet.lever_graphs_s1676); end
  def test_lever_graphs_b1677; assert_equal("Historic data", worksheet.lever_graphs_b1677); end
  def test_lever_graphs_c1677; assert_in_epsilon(4071020000.0, worksheet.lever_graphs_c1677, 0.002); end
  def test_lever_graphs_d1677; assert_in_epsilon(4449049000.0, worksheet.lever_graphs_d1677, 0.002); end
  def test_lever_graphs_e1677; assert_in_epsilon(4863602000.0, worksheet.lever_graphs_e1677, 0.002); end
  def test_lever_graphs_f1677; assert_in_epsilon(5320817000.0, worksheet.lever_graphs_f1677, 0.002); end
  def test_lever_graphs_g1677; assert_in_epsilon(5741822000.0, worksheet.lever_graphs_g1677, 0.002); end
  def test_lever_graphs_h1677; assert_in_epsilon(6127700000.0, worksheet.lever_graphs_h1677, 0.002); end
  def test_lever_graphs_i1677; assert_in_epsilon(6514095000.0, worksheet.lever_graphs_i1677, 0.002); end
  def test_lever_graphs_j1677; assert_in_epsilon(6916183000.0, worksheet.lever_graphs_j1677, 0.002); end
  def test_lever_graphs_k1677; assert_in_epsilon(6966439712.0, worksheet.lever_graphs_k1677, 0.002); end
  def test_lever_graphs_b1678; assert_in_delta(1.0, worksheet.lever_graphs_b1678, 0.002); end
  def test_lever_graphs_k1678; assert_in_epsilon(6966439712.0, worksheet.lever_graphs_k1678, 0.002); end
  def test_lever_graphs_l1678; assert_in_epsilon(7392233000.0, worksheet.lever_graphs_l1678, 0.002); end
  def test_lever_graphs_m1678; assert_in_epsilon(7893904000.0, worksheet.lever_graphs_m1678, 0.002); end
  def test_lever_graphs_n1678; assert_in_epsilon(8398226000.0, worksheet.lever_graphs_n1678, 0.002); end
  def test_lever_graphs_o1678; assert_in_epsilon(8881519000.0, worksheet.lever_graphs_o1678, 0.002); end
  def test_lever_graphs_p1678; assert_in_epsilon(9359400000.0, worksheet.lever_graphs_p1678, 0.002); end
  def test_lever_graphs_q1678; assert_in_epsilon(9847909000.0, worksheet.lever_graphs_q1678, 0.002); end
  def test_lever_graphs_r1678; assert_in_epsilon(10352435000.0, worksheet.lever_graphs_r1678, 0.002); end
  def test_lever_graphs_s1678; assert_in_epsilon(10868444000.0, worksheet.lever_graphs_s1678, 0.002); end
  def test_lever_graphs_b1679; assert_in_epsilon(2.0, worksheet.lever_graphs_b1679, 0.002); end
  def test_lever_graphs_k1679; assert_in_epsilon(6966439712.0, worksheet.lever_graphs_k1679, 0.002); end
  def test_lever_graphs_l1679; assert_in_epsilon(7324782000.0, worksheet.lever_graphs_l1679, 0.002); end
  def test_lever_graphs_m1679; assert_in_epsilon(7716749000.0, worksheet.lever_graphs_m1679, 0.002); end
  def test_lever_graphs_n1679; assert_in_epsilon(8083413000.0, worksheet.lever_graphs_n1679, 0.002); end
  def test_lever_graphs_o1679; assert_in_epsilon(8424937000.0, worksheet.lever_graphs_o1679, 0.002); end
  def test_lever_graphs_p1679; assert_in_epsilon(8743447000.0, worksheet.lever_graphs_p1679, 0.002); end
  def test_lever_graphs_q1679; assert_in_epsilon(9038687000.0, worksheet.lever_graphs_q1679, 0.002); end
  def test_lever_graphs_r1679; assert_in_epsilon(9308438000.0, worksheet.lever_graphs_r1679, 0.002); end
  def test_lever_graphs_s1679; assert_in_epsilon(9550945000.0, worksheet.lever_graphs_s1679, 0.002); end
  def test_lever_graphs_b1680; assert_in_epsilon(3.0, worksheet.lever_graphs_b1680, 0.002); end
  def test_lever_graphs_k1680; assert_in_epsilon(6966439712.0, worksheet.lever_graphs_k1680, 0.002); end
  def test_lever_graphs_l1680; assert_in_epsilon(7256925000.0, worksheet.lever_graphs_l1680, 0.002); end
  def test_lever_graphs_m1680; assert_in_epsilon(7539163000.0, worksheet.lever_graphs_m1680, 0.002); end
  def test_lever_graphs_n1680; assert_in_epsilon(7768450000.0, worksheet.lever_graphs_n1680, 0.002); end
  def test_lever_graphs_o1680; assert_in_epsilon(7969407000.0, worksheet.lever_graphs_o1680, 0.002); end
  def test_lever_graphs_p1680; assert_in_epsilon(8135087000.0, worksheet.lever_graphs_p1680, 0.002); end
  def test_lever_graphs_q1680; assert_in_epsilon(8255351000.0, worksheet.lever_graphs_q1680, 0.002); end
  def test_lever_graphs_r1680; assert_in_epsilon(8323978000.0, worksheet.lever_graphs_r1680, 0.002); end
  def test_lever_graphs_s1680; assert_in_epsilon(8341706000.0, worksheet.lever_graphs_s1680, 0.002); end
  def test_lever_graphs_d1661; assert_equal("Title", worksheet.lever_graphs_d1661); end
  def test_lever_graphs_e1661; assert_equal("Proportion of 15 year trend", worksheet.lever_graphs_e1661); end
  def test_lever_graphs_d1662; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1662, 0.002); end
  def test_lever_graphs_e1662; assert_in_delta(0.0, (worksheet.lever_graphs_e1662||0), 0.002); end
  def test_lever_graphs_d1663; assert_equal("2050: Level 1", worksheet.lever_graphs_d1663); end
  def test_lever_graphs_e1663; assert_in_delta(0.0, (worksheet.lever_graphs_e1663||0), 0.002); end
  def test_lever_graphs_d1664; assert_equal("2050: Level 2", worksheet.lever_graphs_d1664); end
  def test_lever_graphs_e1664; assert_in_delta(0.33, worksheet.lever_graphs_e1664, 0.002); end
  def test_lever_graphs_d1665; assert_equal("2050: Level 3", worksheet.lever_graphs_d1665); end
  def test_lever_graphs_e1665; assert_in_delta(0.66, worksheet.lever_graphs_e1665, 0.002); end
  def test_lever_graphs_d1666; assert_equal("2050: Level 4", worksheet.lever_graphs_d1666); end
  def test_lever_graphs_e1666; assert_in_delta(1.0, worksheet.lever_graphs_e1666, 0.002); end
  def test_lever_graphs_d1767; assert_equal("Title", worksheet.lever_graphs_d1767); end
  def test_lever_graphs_e1767; assert_equal("Solid-fuel ultrasupercritical power plant", worksheet.lever_graphs_e1767); end
  def test_lever_graphs_f1767; assert_equal("Solid-fuel supercritical power plant", worksheet.lever_graphs_f1767); end
  def test_lever_graphs_g1767; assert_equal("Solid-fuel subcritical power plant", worksheet.lever_graphs_g1767); end
  def test_lever_graphs_d1768; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1768, 0.002); end
  def test_lever_graphs_e1768; assert_in_delta(0.08, worksheet.lever_graphs_e1768, 0.002); end
  def test_lever_graphs_f1768; assert_in_delta(0.17, worksheet.lever_graphs_f1768, 0.002); end
  def test_lever_graphs_g1768; assert_in_delta(0.75, worksheet.lever_graphs_g1768, 0.002); end
  def test_lever_graphs_d1769; assert_equal("2050: Level 1", worksheet.lever_graphs_d1769); end
  def test_lever_graphs_e1769; assert_in_delta(0.1435, worksheet.lever_graphs_e1769, 0.002); end
  def test_lever_graphs_f1769; assert_in_delta(0.2315, worksheet.lever_graphs_f1769, 0.002); end
  def test_lever_graphs_g1769; assert_in_delta(0.625, worksheet.lever_graphs_g1769, 0.002); end
  def test_lever_graphs_d1770; assert_equal("2050: Level 2", worksheet.lever_graphs_d1770); end
  def test_lever_graphs_e1770; assert_in_delta(0.18, worksheet.lever_graphs_e1770, 0.002); end
  def test_lever_graphs_f1770; assert_in_delta(0.27, worksheet.lever_graphs_f1770, 0.002); end
  def test_lever_graphs_g1770; assert_in_delta(0.55, worksheet.lever_graphs_g1770, 0.002); end
  def test_lever_graphs_d1771; assert_equal("2050: Level 3", worksheet.lever_graphs_d1771); end
  def test_lever_graphs_e1771; assert_in_delta(0.204, worksheet.lever_graphs_e1771, 0.002); end
  def test_lever_graphs_f1771; assert_in_delta(0.293, worksheet.lever_graphs_f1771, 0.002); end
  def test_lever_graphs_g1771; assert_in_delta(0.5030000000000001, worksheet.lever_graphs_g1771, 0.002); end
  def test_lever_graphs_d1772; assert_equal("2050: Level 4", worksheet.lever_graphs_d1772); end
  def test_lever_graphs_e1772; assert_in_delta(0.2324, worksheet.lever_graphs_e1772, 0.002); end
  def test_lever_graphs_f1772; assert_in_delta(0.3223, worksheet.lever_graphs_f1772, 0.002); end
  def test_lever_graphs_g1772; assert_in_delta(0.4453000000000001, worksheet.lever_graphs_g1772, 0.002); end
  def test_lever_graphs_c1812; assert_equal("1975", worksheet.lever_graphs_c1812); end
  def test_lever_graphs_d1812; assert_equal("1980", worksheet.lever_graphs_d1812); end
  def test_lever_graphs_e1812; assert_equal("1985", worksheet.lever_graphs_e1812); end
  def test_lever_graphs_f1812; assert_equal("1990", worksheet.lever_graphs_f1812); end
  def test_lever_graphs_g1812; assert_equal("1995", worksheet.lever_graphs_g1812); end
  def test_lever_graphs_h1812; assert_equal("2000", worksheet.lever_graphs_h1812); end
  def test_lever_graphs_i1812; assert_equal("2005", worksheet.lever_graphs_i1812); end
  def test_lever_graphs_j1812; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1812, 0.002); end
  def test_lever_graphs_k1812; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1812, 0.002); end
  def test_lever_graphs_l1812; assert_equal("2015", worksheet.lever_graphs_l1812); end
  def test_lever_graphs_m1812; assert_equal("2020", worksheet.lever_graphs_m1812); end
  def test_lever_graphs_n1812; assert_equal("2025", worksheet.lever_graphs_n1812); end
  def test_lever_graphs_o1812; assert_equal("2030", worksheet.lever_graphs_o1812); end
  def test_lever_graphs_p1812; assert_equal("2035", worksheet.lever_graphs_p1812); end
  def test_lever_graphs_q1812; assert_equal("2040", worksheet.lever_graphs_q1812); end
  def test_lever_graphs_r1812; assert_equal("2045", worksheet.lever_graphs_r1812); end
  def test_lever_graphs_s1812; assert_equal("2050", worksheet.lever_graphs_s1812); end
  def test_lever_graphs_b1813; assert_equal("Historic data", worksheet.lever_graphs_b1813); end
  def test_lever_graphs_b1814; assert_in_delta(1.0, worksheet.lever_graphs_b1814, 0.002); end
  def test_lever_graphs_k1814; assert_in_delta(0.25, worksheet.lever_graphs_k1814, 0.002); end
  def test_lever_graphs_l1814; assert_in_delta(0.27051282051282055, worksheet.lever_graphs_l1814, 0.002); end
  def test_lever_graphs_m1814; assert_in_delta(0.2854395604395604, worksheet.lever_graphs_m1814, 0.002); end
  def test_lever_graphs_n1814; assert_in_delta(0.3003663003663004, worksheet.lever_graphs_n1814, 0.002); end
  def test_lever_graphs_o1814; assert_in_delta(0.3152930402930403, worksheet.lever_graphs_o1814, 0.002); end
  def test_lever_graphs_p1814; assert_in_delta(0.3302197802197802, worksheet.lever_graphs_p1814, 0.002); end
  def test_lever_graphs_q1814; assert_in_delta(0.34514652014652014, worksheet.lever_graphs_q1814, 0.002); end
  def test_lever_graphs_r1814; assert_in_delta(0.36007326007326007, worksheet.lever_graphs_r1814, 0.002); end
  def test_lever_graphs_s1814; assert_in_delta(0.375, worksheet.lever_graphs_s1814, 0.002); end
  def test_lever_graphs_b1815; assert_in_epsilon(2.0, worksheet.lever_graphs_b1815, 0.002); end
  def test_lever_graphs_k1815; assert_in_delta(0.25, worksheet.lever_graphs_k1815, 0.002); end
  def test_lever_graphs_l1815; assert_in_delta(0.27051282051282055, worksheet.lever_graphs_l1815, 0.002); end
  def test_lever_graphs_m1815; assert_in_delta(0.29615384615384616, worksheet.lever_graphs_m1815, 0.002); end
  def test_lever_graphs_n1815; assert_in_delta(0.3217948717948718, worksheet.lever_graphs_n1815, 0.002); end
  def test_lever_graphs_o1815; assert_in_delta(0.3474358974358974, worksheet.lever_graphs_o1815, 0.002); end
  def test_lever_graphs_p1815; assert_in_delta(0.3730769230769231, worksheet.lever_graphs_p1815, 0.002); end
  def test_lever_graphs_q1815; assert_in_delta(0.39871794871794874, worksheet.lever_graphs_q1815, 0.002); end
  def test_lever_graphs_r1815; assert_in_delta(0.42435897435897435, worksheet.lever_graphs_r1815, 0.002); end
  def test_lever_graphs_s1815; assert_in_delta(0.45, worksheet.lever_graphs_s1815, 0.002); end
  def test_lever_graphs_b1816; assert_in_epsilon(3.0, worksheet.lever_graphs_b1816, 0.002); end
  def test_lever_graphs_k1816; assert_in_delta(0.25, worksheet.lever_graphs_k1816, 0.002); end
  def test_lever_graphs_l1816; assert_in_delta(0.27051282051282055, worksheet.lever_graphs_l1816, 0.002); end
  def test_lever_graphs_m1816; assert_in_delta(0.3028681318681319, worksheet.lever_graphs_m1816, 0.002); end
  def test_lever_graphs_n1816; assert_in_delta(0.3352234432234432, worksheet.lever_graphs_n1816, 0.002); end
  def test_lever_graphs_o1816; assert_in_delta(0.36757875457875455, worksheet.lever_graphs_o1816, 0.002); end
  def test_lever_graphs_p1816; assert_in_delta(0.3999340659340659, worksheet.lever_graphs_p1816, 0.002); end
  def test_lever_graphs_q1816; assert_in_delta(0.4322893772893773, worksheet.lever_graphs_q1816, 0.002); end
  def test_lever_graphs_r1816; assert_in_delta(0.4646446886446886, worksheet.lever_graphs_r1816, 0.002); end
  def test_lever_graphs_s1816; assert_in_delta(0.497, worksheet.lever_graphs_s1816, 0.002); end
  def test_lever_graphs_b1817; assert_in_epsilon(4.0, worksheet.lever_graphs_b1817, 0.002); end
  def test_lever_graphs_k1817; assert_in_delta(0.25, worksheet.lever_graphs_k1817, 0.002); end
  def test_lever_graphs_l1817; assert_in_delta(0.27051282051282055, worksheet.lever_graphs_l1817, 0.002); end
  def test_lever_graphs_m1817; assert_in_delta(0.311110989010989, worksheet.lever_graphs_m1817, 0.002); end
  def test_lever_graphs_n1817; assert_in_delta(0.35170915750915754, worksheet.lever_graphs_n1817, 0.002); end
  def test_lever_graphs_o1817; assert_in_delta(0.392307326007326, worksheet.lever_graphs_o1817, 0.002); end
  def test_lever_graphs_p1817; assert_in_delta(0.43290549450549454, worksheet.lever_graphs_p1817, 0.002); end
  def test_lever_graphs_q1817; assert_in_delta(0.47350366300366303, worksheet.lever_graphs_q1817, 0.002); end
  def test_lever_graphs_r1817; assert_in_delta(0.5141018315018315, worksheet.lever_graphs_r1817, 0.002); end
  def test_lever_graphs_s1817; assert_in_delta(0.5547, worksheet.lever_graphs_s1817, 0.002); end
  def test_lever_graphs_b1818; assert_equal("Comparator A", worksheet.lever_graphs_b1818); end
  def test_lever_graphs_b1819; assert_equal("Comparator B", worksheet.lever_graphs_b1819); end
  def test_lever_graphs_b1820; assert_equal("Comparator C", worksheet.lever_graphs_b1820); end
  def test_lever_graphs_d2187; assert_equal("Title", worksheet.lever_graphs_d2187); end
  def test_lever_graphs_e2187; assert_equal("Internal Combustion Engine (liquid)", worksheet.lever_graphs_e2187); end
  def test_lever_graphs_f2187; assert_equal("Internal Combustion Engine (gas)", worksheet.lever_graphs_f2187); end
  def test_lever_graphs_g2187; assert_equal("Plug-in hybrid technology (electric and internal combustion)", worksheet.lever_graphs_g2187); end
  def test_lever_graphs_h2187; assert_equal("Electric Vehicle", worksheet.lever_graphs_h2187); end
  def test_lever_graphs_i2187; assert_equal("Hydrogen", worksheet.lever_graphs_i2187); end
  def test_lever_graphs_d2188; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2188, 0.002); end
  def test_lever_graphs_e2188; assert_in_delta(0.9995553411198423, worksheet.lever_graphs_e2188, 0.002); end
  def test_lever_graphs_f2188; assert_in_delta(8.937397766306532e-08, worksheet.lever_graphs_f2188, 0.002); end
  def test_lever_graphs_g2188; assert_in_delta(0.0, (worksheet.lever_graphs_g2188||0), 0.002); end
  def test_lever_graphs_h2188; assert_in_delta(0.0004445695061800071, worksheet.lever_graphs_h2188, 0.002); end
  def test_lever_graphs_i2188; assert_in_delta(0.0, (worksheet.lever_graphs_i2188||0), 0.002); end
  def test_lever_graphs_d2189; assert_equal("2050: Level 1", worksheet.lever_graphs_d2189); end
  def test_lever_graphs_e2189; assert_in_delta(0.9299999999999999, worksheet.lever_graphs_e2189, 0.002); end
  def test_lever_graphs_f2189; assert_in_delta(0.03, worksheet.lever_graphs_f2189, 0.002); end
  def test_lever_graphs_g2189; assert_in_delta(0.03, worksheet.lever_graphs_g2189, 0.002); end
  def test_lever_graphs_h2189; assert_in_delta(0.01, worksheet.lever_graphs_h2189, 0.002); end
  def test_lever_graphs_i2189; assert_in_delta(0.0, (worksheet.lever_graphs_i2189||0), 0.002); end
  def test_lever_graphs_d2190; assert_equal("2050: Level 2", worksheet.lever_graphs_d2190); end
  def test_lever_graphs_e2190; assert_in_delta(0.7499999999999999, worksheet.lever_graphs_e2190, 0.002); end
  def test_lever_graphs_f2190; assert_in_delta(0.05, worksheet.lever_graphs_f2190, 0.002); end
  def test_lever_graphs_g2190; assert_in_delta(0.05, worksheet.lever_graphs_g2190, 0.002); end
  def test_lever_graphs_h2190; assert_in_delta(0.15, worksheet.lever_graphs_h2190, 0.002); end
  def test_lever_graphs_i2190; assert_in_delta(0.0, (worksheet.lever_graphs_i2190||0), 0.002); end
  def test_lever_graphs_d2191; assert_equal("2050: Level 3", worksheet.lever_graphs_d2191); end
  def test_lever_graphs_e2191; assert_in_delta(0.4, worksheet.lever_graphs_e2191, 0.002); end
  def test_lever_graphs_f2191; assert_in_delta(0.1, worksheet.lever_graphs_f2191, 0.002); end
  def test_lever_graphs_g2191; assert_in_delta(0.1, worksheet.lever_graphs_g2191, 0.002); end
  def test_lever_graphs_h2191; assert_in_delta(0.3, worksheet.lever_graphs_h2191, 0.002); end
  def test_lever_graphs_i2191; assert_in_delta(0.1, worksheet.lever_graphs_i2191, 0.002); end
  def test_lever_graphs_d2192; assert_equal("2050: Level 4", worksheet.lever_graphs_d2192); end
  def test_lever_graphs_e2192; assert_in_delta(0.04999999999999999, worksheet.lever_graphs_e2192, 0.002); end
  def test_lever_graphs_f2192; assert_in_delta(0.2, worksheet.lever_graphs_f2192, 0.002); end
  def test_lever_graphs_g2192; assert_in_delta(0.15, worksheet.lever_graphs_g2192, 0.002); end
  def test_lever_graphs_h2192; assert_in_delta(0.4, worksheet.lever_graphs_h2192, 0.002); end
  def test_lever_graphs_i2192; assert_in_delta(0.2, worksheet.lever_graphs_i2192, 0.002); end
  def test_lever_graphs_d2174; assert_equal("Title", worksheet.lever_graphs_d2174); end
  def test_lever_graphs_e2174; assert_equal("Internal Combustion Engine (liquid)", worksheet.lever_graphs_e2174); end
  def test_lever_graphs_f2174; assert_equal("Internal Combustion Engine (gas)", worksheet.lever_graphs_f2174); end
  def test_lever_graphs_g2174; assert_equal("Plug-in hybrid technology (electric and internal combustion)", worksheet.lever_graphs_g2174); end
  def test_lever_graphs_h2174; assert_equal("Electric Vehicle", worksheet.lever_graphs_h2174); end
  def test_lever_graphs_i2174; assert_equal("Hydrogen", worksheet.lever_graphs_i2174); end
  def test_lever_graphs_d2175; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2175, 0.002); end
  def test_lever_graphs_e2175; assert_in_delta(0.988235872414889, worksheet.lever_graphs_e2175, 0.002); end
  def test_lever_graphs_f2175; assert_in_delta(0.00959176661788106, worksheet.lever_graphs_f2175, 0.002); end
  def test_lever_graphs_g2175; assert_in_delta(2.834105983229307e-08, worksheet.lever_graphs_g2175, 0.002); end
  def test_lever_graphs_h2175; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_h2175, 0.002); end
  def test_lever_graphs_i2175; assert_in_delta(0.0, (worksheet.lever_graphs_i2175||0), 0.002); end
  def test_lever_graphs_d2176; assert_equal("2050: Level 1", worksheet.lever_graphs_d2176); end
  def test_lever_graphs_e2176; assert_in_delta(0.9099999999999999, worksheet.lever_graphs_e2176, 0.002); end
  def test_lever_graphs_f2176; assert_in_delta(0.02, worksheet.lever_graphs_f2176, 0.002); end
  def test_lever_graphs_g2176; assert_in_delta(0.05, worksheet.lever_graphs_g2176, 0.002); end
  def test_lever_graphs_h2176; assert_in_delta(0.02, worksheet.lever_graphs_h2176, 0.002); end
  def test_lever_graphs_i2176; assert_in_delta(0.0, (worksheet.lever_graphs_i2176||0), 0.002); end
  def test_lever_graphs_d2177; assert_equal("2050: Level 2", worksheet.lever_graphs_d2177); end
  def test_lever_graphs_e2177; assert_in_delta(0.77, worksheet.lever_graphs_e2177, 0.002); end
  def test_lever_graphs_f2177; assert_in_delta(0.03, worksheet.lever_graphs_f2177, 0.002); end
  def test_lever_graphs_g2177; assert_in_delta(0.1, worksheet.lever_graphs_g2177, 0.002); end
  def test_lever_graphs_h2177; assert_in_delta(0.1, worksheet.lever_graphs_h2177, 0.002); end
  def test_lever_graphs_i2177; assert_in_delta(0.0, (worksheet.lever_graphs_i2177||0), 0.002); end
  def test_lever_graphs_d2178; assert_equal("2050: Level 3", worksheet.lever_graphs_d2178); end
  def test_lever_graphs_e2178; assert_in_delta(0.32999999999999996, worksheet.lever_graphs_e2178, 0.002); end
  def test_lever_graphs_f2178; assert_in_delta(0.07, worksheet.lever_graphs_f2178, 0.002); end
  def test_lever_graphs_g2178; assert_in_delta(0.25, worksheet.lever_graphs_g2178, 0.002); end
  def test_lever_graphs_h2178; assert_in_delta(0.2, worksheet.lever_graphs_h2178, 0.002); end
  def test_lever_graphs_i2178; assert_in_delta(0.15, worksheet.lever_graphs_i2178, 0.002); end
  def test_lever_graphs_d2179; assert_equal("2050: Level 4", worksheet.lever_graphs_d2179); end
  def test_lever_graphs_e2179; assert_in_delta(0.020000000000000073, worksheet.lever_graphs_e2179, 0.002); end
  def test_lever_graphs_f2179; assert_in_delta(0.1, worksheet.lever_graphs_f2179, 0.002); end
  def test_lever_graphs_g2179; assert_in_delta(0.33, worksheet.lever_graphs_g2179, 0.002); end
  def test_lever_graphs_h2179; assert_in_delta(0.35, worksheet.lever_graphs_h2179, 0.002); end
  def test_lever_graphs_i2179; assert_in_delta(0.2, worksheet.lever_graphs_i2179, 0.002); end
  def test_lever_graphs_d2213; assert_equal("Title", worksheet.lever_graphs_d2213); end
  def test_lever_graphs_e2213; assert_equal("Fuel-powered plane", worksheet.lever_graphs_e2213); end
  def test_lever_graphs_f2213; assert_equal("Hydrogen-powered plane", worksheet.lever_graphs_f2213); end
  def test_lever_graphs_d2214; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2214, 0.002); end
  def test_lever_graphs_e2214; assert_in_delta(1.0, worksheet.lever_graphs_e2214, 0.002); end
  def test_lever_graphs_f2214; assert_in_delta(0.0, (worksheet.lever_graphs_f2214||0), 0.002); end
  def test_lever_graphs_d2215; assert_equal("2050: Level 1", worksheet.lever_graphs_d2215); end
  def test_lever_graphs_e2215; assert_in_delta(1.0, worksheet.lever_graphs_e2215, 0.002); end
  def test_lever_graphs_f2215; assert_in_delta(0.0, (worksheet.lever_graphs_f2215||0), 0.002); end
  def test_lever_graphs_d2216; assert_equal("2050: Level 2", worksheet.lever_graphs_d2216); end
  def test_lever_graphs_e2216; assert_in_delta(1.0, worksheet.lever_graphs_e2216, 0.002); end
  def test_lever_graphs_f2216; assert_in_delta(0.0, (worksheet.lever_graphs_f2216||0), 0.002); end
  def test_lever_graphs_d2217; assert_equal("2050: Level 3", worksheet.lever_graphs_d2217); end
  def test_lever_graphs_e2217; assert_in_delta(0.95, worksheet.lever_graphs_e2217, 0.002); end
  def test_lever_graphs_f2217; assert_in_delta(0.05, worksheet.lever_graphs_f2217, 0.002); end
  def test_lever_graphs_d2218; assert_equal("2050: Level 4", worksheet.lever_graphs_d2218); end
  def test_lever_graphs_e2218; assert_in_delta(0.9, worksheet.lever_graphs_e2218, 0.002); end
  def test_lever_graphs_f2218; assert_in_delta(0.1, worksheet.lever_graphs_f2218, 0.002); end
  def test_lever_graphs_d2200; assert_equal("Title", worksheet.lever_graphs_d2200); end
  def test_lever_graphs_e2200; assert_equal("Fuel-powered train", worksheet.lever_graphs_e2200); end
  def test_lever_graphs_f2200; assert_equal("Electric-powered train", worksheet.lever_graphs_f2200); end
  def test_lever_graphs_d2201; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2201, 0.002); end
  def test_lever_graphs_e2201; assert_in_delta(0.1, worksheet.lever_graphs_e2201, 0.002); end
  def test_lever_graphs_f2201; assert_in_delta(0.9, worksheet.lever_graphs_f2201, 0.002); end
  def test_lever_graphs_d2202; assert_equal("2050: Level 1", worksheet.lever_graphs_d2202); end
  def test_lever_graphs_e2202; assert_in_delta(0.1, worksheet.lever_graphs_e2202, 0.002); end
  def test_lever_graphs_f2202; assert_in_delta(0.9, worksheet.lever_graphs_f2202, 0.002); end
  def test_lever_graphs_d2203; assert_equal("2050: Level 2", worksheet.lever_graphs_d2203); end
  def test_lever_graphs_e2203; assert_in_delta(0.05, worksheet.lever_graphs_e2203, 0.002); end
  def test_lever_graphs_f2203; assert_in_delta(0.95, worksheet.lever_graphs_f2203, 0.002); end
  def test_lever_graphs_d2204; assert_equal("2050: Level 3", worksheet.lever_graphs_d2204); end
  def test_lever_graphs_e2204; assert_in_delta(0.03, worksheet.lever_graphs_e2204, 0.002); end
  def test_lever_graphs_f2204; assert_in_delta(0.97, worksheet.lever_graphs_f2204, 0.002); end
  def test_lever_graphs_d2205; assert_equal("2050: Level 4", worksheet.lever_graphs_d2205); end
  def test_lever_graphs_e2205; assert_in_delta(0.0, (worksheet.lever_graphs_e2205||0), 0.002); end
  def test_lever_graphs_f2205; assert_in_delta(1.0, worksheet.lever_graphs_f2205, 0.002); end
  def test_lever_graphs_b1621; assert_equal("Year", worksheet.lever_graphs_b1621); end
  def test_lever_graphs_c1621; assert_equal("Level", worksheet.lever_graphs_c1621); end
  def test_lever_graphs_d1621; assert_equal("Title", worksheet.lever_graphs_d1621); end
  def test_lever_graphs_e1621; assert_equal("motorbike.passenger.urban.fuel", worksheet.lever_graphs_e1621); end
  def test_lever_graphs_f1621; assert_equal("motorbike.passenger.urban.elec", worksheet.lever_graphs_f1621); end
  def test_lever_graphs_g1621; assert_equal("car.passenger.urban.ICE.liquid", worksheet.lever_graphs_g1621); end
  def test_lever_graphs_h1621; assert_equal("car.passenger.urban.ICE.gas", worksheet.lever_graphs_h1621); end
  def test_lever_graphs_i1621; assert_equal("car.passenger.urban.PH", worksheet.lever_graphs_i1621); end
  def test_lever_graphs_j1621; assert_equal("car.passenger.urban.EV", worksheet.lever_graphs_j1621); end
  def test_lever_graphs_k1621; assert_equal("car.passenger.urban.H2", worksheet.lever_graphs_k1621); end
  def test_lever_graphs_l1621; assert_equal("motorbike.passenger.rural.fuel", worksheet.lever_graphs_l1621); end
  def test_lever_graphs_m1621; assert_equal("motorbike.passenger.rural.elec", worksheet.lever_graphs_m1621); end
  def test_lever_graphs_n1621; assert_equal("car.passenger.rural.ICE.liquid", worksheet.lever_graphs_n1621); end
  def test_lever_graphs_o1621; assert_equal("car.passenger.rural.ICE.gas", worksheet.lever_graphs_o1621); end
  def test_lever_graphs_p1621; assert_equal("car.passenger.rural.PH", worksheet.lever_graphs_p1621); end
  def test_lever_graphs_q1621; assert_equal("car.passenger.rural.EV", worksheet.lever_graphs_q1621); end
  def test_lever_graphs_r1621; assert_equal("car.passenger.rural.H2", worksheet.lever_graphs_r1621); end
  def test_lever_graphs_b1622; assert_in_epsilon(2011.0, worksheet.lever_graphs_b1622, 0.002); end
  def test_lever_graphs_c1622; assert_in_delta(1.0, worksheet.lever_graphs_c1622, 0.002); end
  def test_lever_graphs_d1622; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1622, 0.002); end
  def test_lever_graphs_e1622; assert_in_delta(1.0, worksheet.lever_graphs_e1622, 0.002); end
  def test_lever_graphs_f1622; assert_in_delta(1.0, worksheet.lever_graphs_f1622, 0.002); end
  def test_lever_graphs_g1622; assert_in_delta(1.0, worksheet.lever_graphs_g1622, 0.002); end
  def test_lever_graphs_h1622; assert_in_delta(1.0, worksheet.lever_graphs_h1622, 0.002); end
  def test_lever_graphs_i1622; assert_in_delta(1.0, worksheet.lever_graphs_i1622, 0.002); end
  def test_lever_graphs_j1622; assert_in_delta(1.0, worksheet.lever_graphs_j1622, 0.002); end
  def test_lever_graphs_k1622; assert_in_delta(1.0, worksheet.lever_graphs_k1622, 0.002); end
  def test_lever_graphs_l1622; assert_in_delta(1.0, worksheet.lever_graphs_l1622, 0.002); end
  def test_lever_graphs_m1622; assert_in_delta(1.0, worksheet.lever_graphs_m1622, 0.002); end
  def test_lever_graphs_n1622; assert_in_delta(1.0, worksheet.lever_graphs_n1622, 0.002); end
  def test_lever_graphs_o1622; assert_in_delta(1.0, worksheet.lever_graphs_o1622, 0.002); end
  def test_lever_graphs_p1622; assert_in_delta(1.0, worksheet.lever_graphs_p1622, 0.002); end
  def test_lever_graphs_q1622; assert_in_delta(1.0, worksheet.lever_graphs_q1622, 0.002); end
  def test_lever_graphs_r1622; assert_in_delta(1.0, worksheet.lever_graphs_r1622, 0.002); end
  def test_lever_graphs_b1623; assert_in_epsilon(2050.0, worksheet.lever_graphs_b1623, 0.002); end
  def test_lever_graphs_c1623; assert_in_delta(1.0, worksheet.lever_graphs_c1623, 0.002); end
  def test_lever_graphs_d1623; assert_equal("2050: Level 1", worksheet.lever_graphs_d1623); end
  def test_lever_graphs_e1623; assert_in_delta(0.8, worksheet.lever_graphs_e1623, 0.002); end
  def test_lever_graphs_f1623; assert_in_delta(0.8, worksheet.lever_graphs_f1623, 0.002); end
  def test_lever_graphs_g1623; assert_in_delta(0.8, worksheet.lever_graphs_g1623, 0.002); end
  def test_lever_graphs_h1623; assert_in_delta(0.8, worksheet.lever_graphs_h1623, 0.002); end
  def test_lever_graphs_i1623; assert_in_delta(0.8, worksheet.lever_graphs_i1623, 0.002); end
  def test_lever_graphs_j1623; assert_in_delta(0.8, worksheet.lever_graphs_j1623, 0.002); end
  def test_lever_graphs_k1623; assert_in_delta(0.8, worksheet.lever_graphs_k1623, 0.002); end
  def test_lever_graphs_l1623; assert_in_delta(0.9, worksheet.lever_graphs_l1623, 0.002); end
  def test_lever_graphs_m1623; assert_in_delta(0.9, worksheet.lever_graphs_m1623, 0.002); end
  def test_lever_graphs_n1623; assert_in_delta(0.8, worksheet.lever_graphs_n1623, 0.002); end
  def test_lever_graphs_o1623; assert_in_delta(0.8, worksheet.lever_graphs_o1623, 0.002); end
  def test_lever_graphs_p1623; assert_in_delta(0.8, worksheet.lever_graphs_p1623, 0.002); end
  def test_lever_graphs_q1623; assert_in_delta(0.8, worksheet.lever_graphs_q1623, 0.002); end
  def test_lever_graphs_r1623; assert_in_delta(0.8, worksheet.lever_graphs_r1623, 0.002); end
  def test_lever_graphs_b1624; assert_in_epsilon(2050.0, worksheet.lever_graphs_b1624, 0.002); end
  def test_lever_graphs_c1624; assert_in_epsilon(2.0, worksheet.lever_graphs_c1624, 0.002); end
  def test_lever_graphs_d1624; assert_equal("2050: Level 2", worksheet.lever_graphs_d1624); end
  def test_lever_graphs_e1624; assert_in_delta(1.0, worksheet.lever_graphs_e1624, 0.002); end
  def test_lever_graphs_f1624; assert_in_delta(1.0, worksheet.lever_graphs_f1624, 0.002); end
  def test_lever_graphs_g1624; assert_in_delta(1.0, worksheet.lever_graphs_g1624, 0.002); end
  def test_lever_graphs_h1624; assert_in_delta(1.0, worksheet.lever_graphs_h1624, 0.002); end
  def test_lever_graphs_i1624; assert_in_delta(1.0, worksheet.lever_graphs_i1624, 0.002); end
  def test_lever_graphs_j1624; assert_in_delta(1.0, worksheet.lever_graphs_j1624, 0.002); end
  def test_lever_graphs_k1624; assert_in_delta(1.0, worksheet.lever_graphs_k1624, 0.002); end
  def test_lever_graphs_l1624; assert_in_delta(1.0, worksheet.lever_graphs_l1624, 0.002); end
  def test_lever_graphs_m1624; assert_in_delta(1.0, worksheet.lever_graphs_m1624, 0.002); end
  def test_lever_graphs_n1624; assert_in_delta(1.0, worksheet.lever_graphs_n1624, 0.002); end
  def test_lever_graphs_o1624; assert_in_delta(1.0, worksheet.lever_graphs_o1624, 0.002); end
  def test_lever_graphs_p1624; assert_in_delta(1.0, worksheet.lever_graphs_p1624, 0.002); end
  def test_lever_graphs_q1624; assert_in_delta(1.0, worksheet.lever_graphs_q1624, 0.002); end
  def test_lever_graphs_r1624; assert_in_delta(1.0, worksheet.lever_graphs_r1624, 0.002); end
  def test_lever_graphs_b1625; assert_in_epsilon(2050.0, worksheet.lever_graphs_b1625, 0.002); end
  def test_lever_graphs_c1625; assert_in_epsilon(3.0, worksheet.lever_graphs_c1625, 0.002); end
  def test_lever_graphs_d1625; assert_equal("2050: Level 3", worksheet.lever_graphs_d1625); end
  def test_lever_graphs_e1625; assert_in_epsilon(1.25, worksheet.lever_graphs_e1625, 0.002); end
  def test_lever_graphs_f1625; assert_in_epsilon(1.25, worksheet.lever_graphs_f1625, 0.002); end
  def test_lever_graphs_g1625; assert_in_epsilon(2.0, worksheet.lever_graphs_g1625, 0.002); end
  def test_lever_graphs_h1625; assert_in_epsilon(2.0, worksheet.lever_graphs_h1625, 0.002); end
  def test_lever_graphs_i1625; assert_in_epsilon(2.0, worksheet.lever_graphs_i1625, 0.002); end
  def test_lever_graphs_j1625; assert_in_epsilon(2.0, worksheet.lever_graphs_j1625, 0.002); end
  def test_lever_graphs_k1625; assert_in_epsilon(2.0, worksheet.lever_graphs_k1625, 0.002); end
  def test_lever_graphs_l1625; assert_in_epsilon(1.25, worksheet.lever_graphs_l1625, 0.002); end
  def test_lever_graphs_m1625; assert_in_epsilon(1.25, worksheet.lever_graphs_m1625, 0.002); end
  def test_lever_graphs_n1625; assert_in_epsilon(1.5, worksheet.lever_graphs_n1625, 0.002); end
  def test_lever_graphs_o1625; assert_in_epsilon(1.5, worksheet.lever_graphs_o1625, 0.002); end
  def test_lever_graphs_p1625; assert_in_epsilon(1.5, worksheet.lever_graphs_p1625, 0.002); end
  def test_lever_graphs_q1625; assert_in_epsilon(1.5, worksheet.lever_graphs_q1625, 0.002); end
  def test_lever_graphs_r1625; assert_in_epsilon(1.5, worksheet.lever_graphs_r1625, 0.002); end
  def test_lever_graphs_b1626; assert_in_epsilon(2050.0, worksheet.lever_graphs_b1626, 0.002); end
  def test_lever_graphs_c1626; assert_in_epsilon(4.0, worksheet.lever_graphs_c1626, 0.002); end
  def test_lever_graphs_d1626; assert_equal("2050: Level 4", worksheet.lever_graphs_d1626); end
  def test_lever_graphs_e1626; assert_in_epsilon(1.5, worksheet.lever_graphs_e1626, 0.002); end
  def test_lever_graphs_f1626; assert_in_epsilon(1.5, worksheet.lever_graphs_f1626, 0.002); end
  def test_lever_graphs_g1626; assert_in_epsilon(3.6, worksheet.lever_graphs_g1626, 0.002); end
  def test_lever_graphs_h1626; assert_in_epsilon(3.6, worksheet.lever_graphs_h1626, 0.002); end
  def test_lever_graphs_i1626; assert_in_epsilon(3.6, worksheet.lever_graphs_i1626, 0.002); end
  def test_lever_graphs_j1626; assert_in_epsilon(3.6, worksheet.lever_graphs_j1626, 0.002); end
  def test_lever_graphs_k1626; assert_in_epsilon(3.6, worksheet.lever_graphs_k1626, 0.002); end
  def test_lever_graphs_l1626; assert_in_epsilon(1.5, worksheet.lever_graphs_l1626, 0.002); end
  def test_lever_graphs_m1626; assert_in_epsilon(1.5, worksheet.lever_graphs_m1626, 0.002); end
  def test_lever_graphs_n1626; assert_in_epsilon(2.0, worksheet.lever_graphs_n1626, 0.002); end
  def test_lever_graphs_o1626; assert_in_epsilon(2.0, worksheet.lever_graphs_o1626, 0.002); end
  def test_lever_graphs_p1626; assert_in_epsilon(2.0, worksheet.lever_graphs_p1626, 0.002); end
  def test_lever_graphs_q1626; assert_in_epsilon(2.0, worksheet.lever_graphs_q1626, 0.002); end
  def test_lever_graphs_r1626; assert_in_epsilon(2.0, worksheet.lever_graphs_r1626, 0.002); end
  def test_lever_graphs_b1600; assert_equal("Level", worksheet.lever_graphs_b1600); end
  def test_lever_graphs_c1600; assert_equal("1975", worksheet.lever_graphs_c1600); end
  def test_lever_graphs_d1600; assert_equal("1980", worksheet.lever_graphs_d1600); end
  def test_lever_graphs_e1600; assert_equal("1985", worksheet.lever_graphs_e1600); end
  def test_lever_graphs_f1600; assert_equal("1990", worksheet.lever_graphs_f1600); end
  def test_lever_graphs_g1600; assert_equal("1995", worksheet.lever_graphs_g1600); end
  def test_lever_graphs_h1600; assert_equal("2000", worksheet.lever_graphs_h1600); end
  def test_lever_graphs_i1600; assert_equal("2005", worksheet.lever_graphs_i1600); end
  def test_lever_graphs_j1600; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1600, 0.002); end
  def test_lever_graphs_k1600; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1600, 0.002); end
  def test_lever_graphs_l1600; assert_equal("2015", worksheet.lever_graphs_l1600); end
  def test_lever_graphs_m1600; assert_equal("2020", worksheet.lever_graphs_m1600); end
  def test_lever_graphs_n1600; assert_equal("2025", worksheet.lever_graphs_n1600); end
  def test_lever_graphs_o1600; assert_equal("2030", worksheet.lever_graphs_o1600); end
  def test_lever_graphs_p1600; assert_equal("2035", worksheet.lever_graphs_p1600); end
  def test_lever_graphs_q1600; assert_equal("2040", worksheet.lever_graphs_q1600); end
  def test_lever_graphs_r1600; assert_equal("2045", worksheet.lever_graphs_r1600); end
  def test_lever_graphs_s1600; assert_equal("2050", worksheet.lever_graphs_s1600); end
  def test_lever_graphs_b1601; assert_equal("Historic data", worksheet.lever_graphs_b1601); end
  def test_lever_graphs_b1602; assert_in_delta(1.0, worksheet.lever_graphs_b1602, 0.002); end
  def test_lever_graphs_k1602; assert_in_delta(1.0, worksheet.lever_graphs_k1602, 0.002); end
  def test_lever_graphs_l1602; assert_in_delta(1.0, worksheet.lever_graphs_l1602, 0.002); end
  def test_lever_graphs_m1602; assert_in_delta(0.9714285714285714, worksheet.lever_graphs_m1602, 0.002); end
  def test_lever_graphs_n1602; assert_in_delta(0.9428571428571428, worksheet.lever_graphs_n1602, 0.002); end
  def test_lever_graphs_o1602; assert_in_delta(0.9142857142857143, worksheet.lever_graphs_o1602, 0.002); end
  def test_lever_graphs_p1602; assert_in_delta(0.8857142857142857, worksheet.lever_graphs_p1602, 0.002); end
  def test_lever_graphs_q1602; assert_in_delta(0.8571428571428572, worksheet.lever_graphs_q1602, 0.002); end
  def test_lever_graphs_r1602; assert_in_delta(0.8285714285714285, worksheet.lever_graphs_r1602, 0.002); end
  def test_lever_graphs_s1602; assert_in_delta(0.8, worksheet.lever_graphs_s1602, 0.002); end
  def test_lever_graphs_b1603; assert_in_epsilon(2.0, worksheet.lever_graphs_b1603, 0.002); end
  def test_lever_graphs_k1603; assert_in_delta(1.0, worksheet.lever_graphs_k1603, 0.002); end
  def test_lever_graphs_l1603; assert_in_delta(1.0, worksheet.lever_graphs_l1603, 0.002); end
  def test_lever_graphs_m1603; assert_in_delta(1.0, worksheet.lever_graphs_m1603, 0.002); end
  def test_lever_graphs_n1603; assert_in_delta(1.0, worksheet.lever_graphs_n1603, 0.002); end
  def test_lever_graphs_o1603; assert_in_delta(1.0, worksheet.lever_graphs_o1603, 0.002); end
  def test_lever_graphs_p1603; assert_in_delta(1.0, worksheet.lever_graphs_p1603, 0.002); end
  def test_lever_graphs_q1603; assert_in_delta(1.0, worksheet.lever_graphs_q1603, 0.002); end
  def test_lever_graphs_r1603; assert_in_delta(1.0, worksheet.lever_graphs_r1603, 0.002); end
  def test_lever_graphs_s1603; assert_in_delta(1.0, worksheet.lever_graphs_s1603, 0.002); end
  def test_lever_graphs_b1604; assert_in_epsilon(3.0, worksheet.lever_graphs_b1604, 0.002); end
  def test_lever_graphs_k1604; assert_in_delta(1.0, worksheet.lever_graphs_k1604, 0.002); end
  def test_lever_graphs_l1604; assert_in_delta(1.0, worksheet.lever_graphs_l1604, 0.002); end
  def test_lever_graphs_m1604; assert_in_epsilon(1.1428571428571428, worksheet.lever_graphs_m1604, 0.002); end
  def test_lever_graphs_n1604; assert_in_epsilon(1.2857142857142856, worksheet.lever_graphs_n1604, 0.002); end
  def test_lever_graphs_o1604; assert_in_epsilon(1.4285714285714284, worksheet.lever_graphs_o1604, 0.002); end
  def test_lever_graphs_p1604; assert_in_epsilon(1.5714285714285714, worksheet.lever_graphs_p1604, 0.002); end
  def test_lever_graphs_q1604; assert_in_epsilon(1.7142857142857144, worksheet.lever_graphs_q1604, 0.002); end
  def test_lever_graphs_r1604; assert_in_epsilon(1.857142857142857, worksheet.lever_graphs_r1604, 0.002); end
  def test_lever_graphs_s1604; assert_in_epsilon(2.0, worksheet.lever_graphs_s1604, 0.002); end
  def test_lever_graphs_b1605; assert_in_epsilon(4.0, worksheet.lever_graphs_b1605, 0.002); end
  def test_lever_graphs_k1605; assert_in_delta(1.0, worksheet.lever_graphs_k1605, 0.002); end
  def test_lever_graphs_l1605; assert_in_delta(1.0, worksheet.lever_graphs_l1605, 0.002); end
  def test_lever_graphs_m1605; assert_in_epsilon(1.3714285714285714, worksheet.lever_graphs_m1605, 0.002); end
  def test_lever_graphs_n1605; assert_in_epsilon(1.7428571428571429, worksheet.lever_graphs_n1605, 0.002); end
  def test_lever_graphs_o1605; assert_in_epsilon(2.114285714285714, worksheet.lever_graphs_o1605, 0.002); end
  def test_lever_graphs_p1605; assert_in_epsilon(2.4857142857142853, worksheet.lever_graphs_p1605, 0.002); end
  def test_lever_graphs_q1605; assert_in_epsilon(2.857142857142857, worksheet.lever_graphs_q1605, 0.002); end
  def test_lever_graphs_r1605; assert_in_epsilon(3.228571428571428, worksheet.lever_graphs_r1605, 0.002); end
  def test_lever_graphs_s1605; assert_in_epsilon(3.6, worksheet.lever_graphs_s1605, 0.002); end
  def test_lever_graphs_b1611; assert_equal("Level", worksheet.lever_graphs_b1611); end
  def test_lever_graphs_c1611; assert_equal("1975", worksheet.lever_graphs_c1611); end
  def test_lever_graphs_d1611; assert_equal("1980", worksheet.lever_graphs_d1611); end
  def test_lever_graphs_e1611; assert_equal("1985", worksheet.lever_graphs_e1611); end
  def test_lever_graphs_f1611; assert_equal("1990", worksheet.lever_graphs_f1611); end
  def test_lever_graphs_g1611; assert_equal("1995", worksheet.lever_graphs_g1611); end
  def test_lever_graphs_h1611; assert_equal("2000", worksheet.lever_graphs_h1611); end
  def test_lever_graphs_i1611; assert_equal("2005", worksheet.lever_graphs_i1611); end
  def test_lever_graphs_j1611; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1611, 0.002); end
  def test_lever_graphs_k1611; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1611, 0.002); end
  def test_lever_graphs_l1611; assert_equal("2015", worksheet.lever_graphs_l1611); end
  def test_lever_graphs_m1611; assert_equal("2020", worksheet.lever_graphs_m1611); end
  def test_lever_graphs_n1611; assert_equal("2025", worksheet.lever_graphs_n1611); end
  def test_lever_graphs_o1611; assert_equal("2030", worksheet.lever_graphs_o1611); end
  def test_lever_graphs_p1611; assert_equal("2035", worksheet.lever_graphs_p1611); end
  def test_lever_graphs_q1611; assert_equal("2040", worksheet.lever_graphs_q1611); end
  def test_lever_graphs_r1611; assert_equal("2045", worksheet.lever_graphs_r1611); end
  def test_lever_graphs_s1611; assert_equal("2050", worksheet.lever_graphs_s1611); end
  def test_lever_graphs_b1612; assert_equal("Historic data", worksheet.lever_graphs_b1612); end
  def test_lever_graphs_b1613; assert_in_delta(1.0, worksheet.lever_graphs_b1613, 0.002); end
  def test_lever_graphs_k1613; assert_in_delta(1.0, worksheet.lever_graphs_k1613, 0.002); end
  def test_lever_graphs_l1613; assert_in_delta(1.0, worksheet.lever_graphs_l1613, 0.002); end
  def test_lever_graphs_m1613; assert_in_delta(0.9714285714285714, worksheet.lever_graphs_m1613, 0.002); end
  def test_lever_graphs_n1613; assert_in_delta(0.9428571428571428, worksheet.lever_graphs_n1613, 0.002); end
  def test_lever_graphs_o1613; assert_in_delta(0.9142857142857143, worksheet.lever_graphs_o1613, 0.002); end
  def test_lever_graphs_p1613; assert_in_delta(0.8857142857142857, worksheet.lever_graphs_p1613, 0.002); end
  def test_lever_graphs_q1613; assert_in_delta(0.8571428571428572, worksheet.lever_graphs_q1613, 0.002); end
  def test_lever_graphs_r1613; assert_in_delta(0.8285714285714285, worksheet.lever_graphs_r1613, 0.002); end
  def test_lever_graphs_s1613; assert_in_delta(0.8, worksheet.lever_graphs_s1613, 0.002); end
  def test_lever_graphs_b1614; assert_in_epsilon(2.0, worksheet.lever_graphs_b1614, 0.002); end
  def test_lever_graphs_k1614; assert_in_delta(1.0, worksheet.lever_graphs_k1614, 0.002); end
  def test_lever_graphs_l1614; assert_in_delta(1.0, worksheet.lever_graphs_l1614, 0.002); end
  def test_lever_graphs_m1614; assert_in_delta(1.0, worksheet.lever_graphs_m1614, 0.002); end
  def test_lever_graphs_n1614; assert_in_delta(1.0, worksheet.lever_graphs_n1614, 0.002); end
  def test_lever_graphs_o1614; assert_in_delta(1.0, worksheet.lever_graphs_o1614, 0.002); end
  def test_lever_graphs_p1614; assert_in_delta(1.0, worksheet.lever_graphs_p1614, 0.002); end
  def test_lever_graphs_q1614; assert_in_delta(1.0, worksheet.lever_graphs_q1614, 0.002); end
  def test_lever_graphs_r1614; assert_in_delta(1.0, worksheet.lever_graphs_r1614, 0.002); end
  def test_lever_graphs_s1614; assert_in_delta(1.0, worksheet.lever_graphs_s1614, 0.002); end
  def test_lever_graphs_b1615; assert_in_epsilon(3.0, worksheet.lever_graphs_b1615, 0.002); end
  def test_lever_graphs_k1615; assert_in_delta(1.0, worksheet.lever_graphs_k1615, 0.002); end
  def test_lever_graphs_l1615; assert_in_delta(1.0, worksheet.lever_graphs_l1615, 0.002); end
  def test_lever_graphs_m1615; assert_in_epsilon(1.0714285714285714, worksheet.lever_graphs_m1615, 0.002); end
  def test_lever_graphs_n1615; assert_in_epsilon(1.1428571428571428, worksheet.lever_graphs_n1615, 0.002); end
  def test_lever_graphs_o1615; assert_in_epsilon(1.2142857142857142, worksheet.lever_graphs_o1615, 0.002); end
  def test_lever_graphs_p1615; assert_in_epsilon(1.2857142857142856, worksheet.lever_graphs_p1615, 0.002); end
  def test_lever_graphs_q1615; assert_in_epsilon(1.3571428571428572, worksheet.lever_graphs_q1615, 0.002); end
  def test_lever_graphs_r1615; assert_in_epsilon(1.4285714285714284, worksheet.lever_graphs_r1615, 0.002); end
  def test_lever_graphs_s1615; assert_in_epsilon(1.5, worksheet.lever_graphs_s1615, 0.002); end
  def test_lever_graphs_b1616; assert_in_epsilon(4.0, worksheet.lever_graphs_b1616, 0.002); end
  def test_lever_graphs_k1616; assert_in_delta(1.0, worksheet.lever_graphs_k1616, 0.002); end
  def test_lever_graphs_l1616; assert_in_delta(1.0, worksheet.lever_graphs_l1616, 0.002); end
  def test_lever_graphs_m1616; assert_in_epsilon(1.1428571428571428, worksheet.lever_graphs_m1616, 0.002); end
  def test_lever_graphs_n1616; assert_in_epsilon(1.2857142857142856, worksheet.lever_graphs_n1616, 0.002); end
  def test_lever_graphs_o1616; assert_in_epsilon(1.4285714285714284, worksheet.lever_graphs_o1616, 0.002); end
  def test_lever_graphs_p1616; assert_in_epsilon(1.5714285714285714, worksheet.lever_graphs_p1616, 0.002); end
  def test_lever_graphs_q1616; assert_in_epsilon(1.7142857142857144, worksheet.lever_graphs_q1616, 0.002); end
  def test_lever_graphs_r1616; assert_in_epsilon(1.857142857142857, worksheet.lever_graphs_r1616, 0.002); end
  def test_lever_graphs_s1616; assert_in_epsilon(2.0, worksheet.lever_graphs_s1616, 0.002); end
  def test_lever_graphs_b1632; assert_equal("Level", worksheet.lever_graphs_b1632); end
  def test_lever_graphs_c1632; assert_equal("1975", worksheet.lever_graphs_c1632); end
  def test_lever_graphs_d1632; assert_equal("1980", worksheet.lever_graphs_d1632); end
  def test_lever_graphs_e1632; assert_equal("1985", worksheet.lever_graphs_e1632); end
  def test_lever_graphs_f1632; assert_equal("1990", worksheet.lever_graphs_f1632); end
  def test_lever_graphs_g1632; assert_equal("1995", worksheet.lever_graphs_g1632); end
  def test_lever_graphs_h1632; assert_equal("2000", worksheet.lever_graphs_h1632); end
  def test_lever_graphs_i1632; assert_equal("2005", worksheet.lever_graphs_i1632); end
  def test_lever_graphs_j1632; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1632, 0.002); end
  def test_lever_graphs_k1632; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1632, 0.002); end
  def test_lever_graphs_l1632; assert_equal("2015", worksheet.lever_graphs_l1632); end
  def test_lever_graphs_m1632; assert_equal("2020", worksheet.lever_graphs_m1632); end
  def test_lever_graphs_n1632; assert_equal("2025", worksheet.lever_graphs_n1632); end
  def test_lever_graphs_o1632; assert_equal("2030", worksheet.lever_graphs_o1632); end
  def test_lever_graphs_p1632; assert_equal("2035", worksheet.lever_graphs_p1632); end
  def test_lever_graphs_q1632; assert_equal("2040", worksheet.lever_graphs_q1632); end
  def test_lever_graphs_r1632; assert_equal("2045", worksheet.lever_graphs_r1632); end
  def test_lever_graphs_s1632; assert_equal("2050", worksheet.lever_graphs_s1632); end
  def test_lever_graphs_b1633; assert_equal("Historic data", worksheet.lever_graphs_b1633); end
  def test_lever_graphs_b1634; assert_in_delta(1.0, worksheet.lever_graphs_b1634, 0.002); end
  def test_lever_graphs_k1634; assert_in_epsilon(15000.0, worksheet.lever_graphs_k1634, 0.002); end
  def test_lever_graphs_l1634; assert_in_epsilon(15000.0, worksheet.lever_graphs_l1634, 0.002); end
  def test_lever_graphs_m1634; assert_in_epsilon(14571.42857142857, worksheet.lever_graphs_m1634, 0.002); end
  def test_lever_graphs_n1634; assert_in_epsilon(14142.857142857143, worksheet.lever_graphs_n1634, 0.002); end
  def test_lever_graphs_o1634; assert_in_epsilon(13714.285714285714, worksheet.lever_graphs_o1634, 0.002); end
  def test_lever_graphs_p1634; assert_in_epsilon(13285.714285714284, worksheet.lever_graphs_p1634, 0.002); end
  def test_lever_graphs_q1634; assert_in_epsilon(12857.142857142859, worksheet.lever_graphs_q1634, 0.002); end
  def test_lever_graphs_r1634; assert_in_epsilon(12428.571428571428, worksheet.lever_graphs_r1634, 0.002); end
  def test_lever_graphs_s1634; assert_in_epsilon(12000.0, worksheet.lever_graphs_s1634, 0.002); end
  def test_lever_graphs_b1635; assert_in_epsilon(2.0, worksheet.lever_graphs_b1635, 0.002); end
  def test_lever_graphs_k1635; assert_in_epsilon(15000.0, worksheet.lever_graphs_k1635, 0.002); end
  def test_lever_graphs_l1635; assert_in_epsilon(15000.0, worksheet.lever_graphs_l1635, 0.002); end
  def test_lever_graphs_m1635; assert_in_epsilon(15000.0, worksheet.lever_graphs_m1635, 0.002); end
  def test_lever_graphs_n1635; assert_in_epsilon(15000.0, worksheet.lever_graphs_n1635, 0.002); end
  def test_lever_graphs_o1635; assert_in_epsilon(15000.0, worksheet.lever_graphs_o1635, 0.002); end
  def test_lever_graphs_p1635; assert_in_epsilon(15000.0, worksheet.lever_graphs_p1635, 0.002); end
  def test_lever_graphs_q1635; assert_in_epsilon(15000.0, worksheet.lever_graphs_q1635, 0.002); end
  def test_lever_graphs_r1635; assert_in_epsilon(15000.0, worksheet.lever_graphs_r1635, 0.002); end
  def test_lever_graphs_s1635; assert_in_epsilon(15000.0, worksheet.lever_graphs_s1635, 0.002); end
  def test_lever_graphs_b1636; assert_in_epsilon(3.0, worksheet.lever_graphs_b1636, 0.002); end
  def test_lever_graphs_k1636; assert_in_epsilon(15000.0, worksheet.lever_graphs_k1636, 0.002); end
  def test_lever_graphs_l1636; assert_in_epsilon(15000.0, worksheet.lever_graphs_l1636, 0.002); end
  def test_lever_graphs_m1636; assert_in_epsilon(17142.85714285714, worksheet.lever_graphs_m1636, 0.002); end
  def test_lever_graphs_n1636; assert_in_epsilon(19285.714285714283, worksheet.lever_graphs_n1636, 0.002); end
  def test_lever_graphs_o1636; assert_in_epsilon(21428.571428571428, worksheet.lever_graphs_o1636, 0.002); end
  def test_lever_graphs_p1636; assert_in_epsilon(23571.428571428572, worksheet.lever_graphs_p1636, 0.002); end
  def test_lever_graphs_q1636; assert_in_epsilon(25714.285714285717, worksheet.lever_graphs_q1636, 0.002); end
  def test_lever_graphs_r1636; assert_in_epsilon(27857.142857142855, worksheet.lever_graphs_r1636, 0.002); end
  def test_lever_graphs_s1636; assert_in_epsilon(30000.0, worksheet.lever_graphs_s1636, 0.002); end
  def test_lever_graphs_b1637; assert_in_epsilon(4.0, worksheet.lever_graphs_b1637, 0.002); end
  def test_lever_graphs_k1637; assert_in_epsilon(15000.0, worksheet.lever_graphs_k1637, 0.002); end
  def test_lever_graphs_l1637; assert_in_epsilon(15000.0, worksheet.lever_graphs_l1637, 0.002); end
  def test_lever_graphs_m1637; assert_in_epsilon(20571.428571428572, worksheet.lever_graphs_m1637, 0.002); end
  def test_lever_graphs_n1637; assert_in_epsilon(26142.857142857145, worksheet.lever_graphs_n1637, 0.002); end
  def test_lever_graphs_o1637; assert_in_epsilon(31714.285714285706, worksheet.lever_graphs_o1637, 0.002); end
  def test_lever_graphs_p1637; assert_in_epsilon(37285.71428571428, worksheet.lever_graphs_p1637, 0.002); end
  def test_lever_graphs_q1637; assert_in_epsilon(42857.142857142855, worksheet.lever_graphs_q1637, 0.002); end
  def test_lever_graphs_r1637; assert_in_epsilon(48428.57142857142, worksheet.lever_graphs_r1637, 0.002); end
  def test_lever_graphs_s1637; assert_in_epsilon(54000.0, worksheet.lever_graphs_s1637, 0.002); end
  def test_lever_graphs_b1643; assert_equal("Level", worksheet.lever_graphs_b1643); end
  def test_lever_graphs_c1643; assert_equal("1975", worksheet.lever_graphs_c1643); end
  def test_lever_graphs_d1643; assert_equal("1980", worksheet.lever_graphs_d1643); end
  def test_lever_graphs_e1643; assert_equal("1985", worksheet.lever_graphs_e1643); end
  def test_lever_graphs_f1643; assert_equal("1990", worksheet.lever_graphs_f1643); end
  def test_lever_graphs_g1643; assert_equal("1995", worksheet.lever_graphs_g1643); end
  def test_lever_graphs_h1643; assert_equal("2000", worksheet.lever_graphs_h1643); end
  def test_lever_graphs_i1643; assert_equal("2005", worksheet.lever_graphs_i1643); end
  def test_lever_graphs_j1643; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1643, 0.002); end
  def test_lever_graphs_k1643; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1643, 0.002); end
  def test_lever_graphs_l1643; assert_equal("2015", worksheet.lever_graphs_l1643); end
  def test_lever_graphs_m1643; assert_equal("2020", worksheet.lever_graphs_m1643); end
  def test_lever_graphs_n1643; assert_equal("2025", worksheet.lever_graphs_n1643); end
  def test_lever_graphs_o1643; assert_equal("2030", worksheet.lever_graphs_o1643); end
  def test_lever_graphs_p1643; assert_equal("2035", worksheet.lever_graphs_p1643); end
  def test_lever_graphs_q1643; assert_equal("2040", worksheet.lever_graphs_q1643); end
  def test_lever_graphs_r1643; assert_equal("2045", worksheet.lever_graphs_r1643); end
  def test_lever_graphs_s1643; assert_equal("2050", worksheet.lever_graphs_s1643); end
  def test_lever_graphs_b1644; assert_equal("Historic data", worksheet.lever_graphs_b1644); end
  def test_lever_graphs_b1645; assert_in_delta(1.0, worksheet.lever_graphs_b1645, 0.002); end
  def test_lever_graphs_k1645; assert_in_epsilon(15000.0, worksheet.lever_graphs_k1645, 0.002); end
  def test_lever_graphs_l1645; assert_in_epsilon(15000.0, worksheet.lever_graphs_l1645, 0.002); end
  def test_lever_graphs_m1645; assert_in_epsilon(14571.42857142857, worksheet.lever_graphs_m1645, 0.002); end
  def test_lever_graphs_n1645; assert_in_epsilon(14142.857142857143, worksheet.lever_graphs_n1645, 0.002); end
  def test_lever_graphs_o1645; assert_in_epsilon(13714.285714285714, worksheet.lever_graphs_o1645, 0.002); end
  def test_lever_graphs_p1645; assert_in_epsilon(13285.714285714284, worksheet.lever_graphs_p1645, 0.002); end
  def test_lever_graphs_q1645; assert_in_epsilon(12857.142857142859, worksheet.lever_graphs_q1645, 0.002); end
  def test_lever_graphs_r1645; assert_in_epsilon(12428.571428571428, worksheet.lever_graphs_r1645, 0.002); end
  def test_lever_graphs_s1645; assert_in_epsilon(12000.0, worksheet.lever_graphs_s1645, 0.002); end
  def test_lever_graphs_b1646; assert_in_epsilon(2.0, worksheet.lever_graphs_b1646, 0.002); end
  def test_lever_graphs_k1646; assert_in_epsilon(15000.0, worksheet.lever_graphs_k1646, 0.002); end
  def test_lever_graphs_l1646; assert_in_epsilon(15000.0, worksheet.lever_graphs_l1646, 0.002); end
  def test_lever_graphs_m1646; assert_in_epsilon(15000.0, worksheet.lever_graphs_m1646, 0.002); end
  def test_lever_graphs_n1646; assert_in_epsilon(15000.0, worksheet.lever_graphs_n1646, 0.002); end
  def test_lever_graphs_o1646; assert_in_epsilon(15000.0, worksheet.lever_graphs_o1646, 0.002); end
  def test_lever_graphs_p1646; assert_in_epsilon(15000.0, worksheet.lever_graphs_p1646, 0.002); end
  def test_lever_graphs_q1646; assert_in_epsilon(15000.0, worksheet.lever_graphs_q1646, 0.002); end
  def test_lever_graphs_r1646; assert_in_epsilon(15000.0, worksheet.lever_graphs_r1646, 0.002); end
  def test_lever_graphs_s1646; assert_in_epsilon(15000.0, worksheet.lever_graphs_s1646, 0.002); end
  def test_lever_graphs_b1647; assert_in_epsilon(3.0, worksheet.lever_graphs_b1647, 0.002); end
  def test_lever_graphs_k1647; assert_in_epsilon(15000.0, worksheet.lever_graphs_k1647, 0.002); end
  def test_lever_graphs_l1647; assert_in_epsilon(15000.0, worksheet.lever_graphs_l1647, 0.002); end
  def test_lever_graphs_m1647; assert_in_epsilon(16071.42857142857, worksheet.lever_graphs_m1647, 0.002); end
  def test_lever_graphs_n1647; assert_in_epsilon(17142.85714285714, worksheet.lever_graphs_n1647, 0.002); end
  def test_lever_graphs_o1647; assert_in_epsilon(18214.285714285714, worksheet.lever_graphs_o1647, 0.002); end
  def test_lever_graphs_p1647; assert_in_epsilon(19285.714285714283, worksheet.lever_graphs_p1647, 0.002); end
  def test_lever_graphs_q1647; assert_in_epsilon(20357.14285714286, worksheet.lever_graphs_q1647, 0.002); end
  def test_lever_graphs_r1647; assert_in_epsilon(21428.571428571428, worksheet.lever_graphs_r1647, 0.002); end
  def test_lever_graphs_s1647; assert_in_epsilon(22500.0, worksheet.lever_graphs_s1647, 0.002); end
  def test_lever_graphs_b1648; assert_in_epsilon(4.0, worksheet.lever_graphs_b1648, 0.002); end
  def test_lever_graphs_k1648; assert_in_epsilon(15000.0, worksheet.lever_graphs_k1648, 0.002); end
  def test_lever_graphs_l1648; assert_in_epsilon(15000.0, worksheet.lever_graphs_l1648, 0.002); end
  def test_lever_graphs_m1648; assert_in_epsilon(17142.85714285714, worksheet.lever_graphs_m1648, 0.002); end
  def test_lever_graphs_n1648; assert_in_epsilon(19285.714285714283, worksheet.lever_graphs_n1648, 0.002); end
  def test_lever_graphs_o1648; assert_in_epsilon(21428.571428571428, worksheet.lever_graphs_o1648, 0.002); end
  def test_lever_graphs_p1648; assert_in_epsilon(23571.428571428572, worksheet.lever_graphs_p1648, 0.002); end
  def test_lever_graphs_q1648; assert_in_epsilon(25714.285714285717, worksheet.lever_graphs_q1648, 0.002); end
  def test_lever_graphs_r1648; assert_in_epsilon(27857.142857142855, worksheet.lever_graphs_r1648, 0.002); end
  def test_lever_graphs_s1648; assert_in_epsilon(30000.0, worksheet.lever_graphs_s1648, 0.002); end
  def test_lever_graphs_c1692; assert_equal("1975", worksheet.lever_graphs_c1692); end
  def test_lever_graphs_d1692; assert_equal("1980", worksheet.lever_graphs_d1692); end
  def test_lever_graphs_e1692; assert_equal("1985", worksheet.lever_graphs_e1692); end
  def test_lever_graphs_f1692; assert_equal("1990", worksheet.lever_graphs_f1692); end
  def test_lever_graphs_g1692; assert_equal("1995", worksheet.lever_graphs_g1692); end
  def test_lever_graphs_h1692; assert_equal("2000", worksheet.lever_graphs_h1692); end
  def test_lever_graphs_i1692; assert_equal("2005", worksheet.lever_graphs_i1692); end
  def test_lever_graphs_j1692; assert_equal("2010", worksheet.lever_graphs_j1692); end
  def test_lever_graphs_k1692; assert_equal("2011", worksheet.lever_graphs_k1692); end
  def test_lever_graphs_l1692; assert_equal("2015", worksheet.lever_graphs_l1692); end
  def test_lever_graphs_m1692; assert_equal("2020", worksheet.lever_graphs_m1692); end
  def test_lever_graphs_n1692; assert_equal("2025", worksheet.lever_graphs_n1692); end
  def test_lever_graphs_o1692; assert_equal("2030", worksheet.lever_graphs_o1692); end
  def test_lever_graphs_p1692; assert_equal("2035", worksheet.lever_graphs_p1692); end
  def test_lever_graphs_q1692; assert_equal("2040", worksheet.lever_graphs_q1692); end
  def test_lever_graphs_r1692; assert_equal("2045", worksheet.lever_graphs_r1692); end
  def test_lever_graphs_s1692; assert_equal("2050", worksheet.lever_graphs_s1692); end
  def test_lever_graphs_b1693; assert_equal("Historic data", worksheet.lever_graphs_b1693); end
  def test_lever_graphs_c1693; assert_in_delta(0.377, worksheet.lever_graphs_c1693, 0.002); end
  def test_lever_graphs_d1693; assert_in_delta(0.39399999999999996, worksheet.lever_graphs_d1693, 0.002); end
  def test_lever_graphs_e1693; assert_in_delta(0.41200000000000003, worksheet.lever_graphs_e1693, 0.002); end
  def test_lever_graphs_f1693; assert_in_delta(0.43, worksheet.lever_graphs_f1693, 0.002); end
  def test_lever_graphs_g1693; assert_in_delta(0.44799999999999995, worksheet.lever_graphs_g1693, 0.002); end
  def test_lever_graphs_h1693; assert_in_delta(0.467, worksheet.lever_graphs_h1693, 0.002); end
  def test_lever_graphs_i1693; assert_in_delta(0.491, worksheet.lever_graphs_i1693, 0.002); end
  def test_lever_graphs_j1693; assert_in_delta(0.516, worksheet.lever_graphs_j1693, 0.002); end
  def test_lever_graphs_k1693; assert_in_delta(0.5213279389034929, worksheet.lever_graphs_k1693, 0.002); end
  def test_lever_graphs_b1694; assert_in_delta(1.0, worksheet.lever_graphs_b1694, 0.002); end
  def test_lever_graphs_k1694; assert_in_delta(0.5213279389034929, worksheet.lever_graphs_k1694, 0.002); end
  def test_lever_graphs_l1694; assert_in_delta(0.540259749906762, worksheet.lever_graphs_l1694, 0.002); end
  def test_lever_graphs_m1694; assert_in_delta(0.57, worksheet.lever_graphs_m1694, 0.002); end
  def test_lever_graphs_n1694; assert_in_delta(0.6, worksheet.lever_graphs_n1694, 0.002); end
  def test_lever_graphs_o1694; assert_in_delta(0.63, worksheet.lever_graphs_o1694, 0.002); end
  def test_lever_graphs_p1694; assert_in_delta(0.65, worksheet.lever_graphs_p1694, 0.002); end
  def test_lever_graphs_q1694; assert_in_delta(0.68, worksheet.lever_graphs_q1694, 0.002); end
  def test_lever_graphs_r1694; assert_in_delta(0.71, worksheet.lever_graphs_r1694, 0.002); end
  def test_lever_graphs_s1694; assert_in_delta(0.75, worksheet.lever_graphs_s1694, 0.002); end
  def test_lever_graphs_b1695; assert_in_epsilon(2.0, worksheet.lever_graphs_b1695, 0.002); end
  def test_lever_graphs_k1695; assert_in_delta(0.5213279389034929, worksheet.lever_graphs_k1695, 0.002); end
  def test_lever_graphs_l1695; assert_in_delta(0.540259749906762, worksheet.lever_graphs_l1695, 0.002); end
  def test_lever_graphs_m1695; assert_in_delta(0.562155760202834, worksheet.lever_graphs_m1695, 0.002); end
  def test_lever_graphs_n1695; assert_in_delta(0.582151835653899, worksheet.lever_graphs_n1695, 0.002); end
  def test_lever_graphs_o1695; assert_in_delta(0.6003793471001849, worksheet.lever_graphs_o1695, 0.002); end
  def test_lever_graphs_p1695; assert_in_delta(0.61694601015062, worksheet.lever_graphs_p1695, 0.002); end
  def test_lever_graphs_q1695; assert_in_delta(0.632327785387248, worksheet.lever_graphs_q1695, 0.002); end
  def test_lever_graphs_r1695; assert_in_delta(0.647898600138288, worksheet.lever_graphs_r1695, 0.002); end
  def test_lever_graphs_s1695; assert_in_delta(0.663663288223238, worksheet.lever_graphs_s1695, 0.002); end
  def test_lever_graphs_b1696; assert_in_epsilon(3.0, worksheet.lever_graphs_b1696, 0.002); end
  def test_lever_graphs_k1696; assert_in_delta(0.5213279389034929, worksheet.lever_graphs_k1696, 0.002); end
  def test_lever_graphs_l1696; assert_in_delta(0.53, worksheet.lever_graphs_l1696, 0.002); end
  def test_lever_graphs_m1696; assert_in_delta(0.54, worksheet.lever_graphs_m1696, 0.002); end
  def test_lever_graphs_n1696; assert_in_delta(0.55, worksheet.lever_graphs_n1696, 0.002); end
  def test_lever_graphs_o1696; assert_in_delta(0.56, worksheet.lever_graphs_o1696, 0.002); end
  def test_lever_graphs_p1696; assert_in_delta(0.57, worksheet.lever_graphs_p1696, 0.002); end
  def test_lever_graphs_q1696; assert_in_delta(0.57, worksheet.lever_graphs_q1696, 0.002); end
  def test_lever_graphs_r1696; assert_in_delta(0.57, worksheet.lever_graphs_r1696, 0.002); end
  def test_lever_graphs_s1696; assert_in_delta(0.58, worksheet.lever_graphs_s1696, 0.002); end
  def test_lever_graphs_b1697; assert_equal("Comparator A", worksheet.lever_graphs_b1697); end
  def test_lever_graphs_b1698; assert_equal("Comparator B", worksheet.lever_graphs_b1698); end
  def test_lever_graphs_b1699; assert_equal("Comparator C", worksheet.lever_graphs_b1699); end
  def test_lever_graphs_b4990; assert_equal("Name in Model", worksheet.lever_graphs_b4990); end
  def test_lever_graphs_c4990; assert_equal("Name in 1-Pager", worksheet.lever_graphs_c4990); end
  def test_lever_graphs_d4990; assert_in_epsilon(2011.0, worksheet.lever_graphs_d4990, 0.002); end
  def test_lever_graphs_e4990; assert_equal("Level 1", worksheet.lever_graphs_e4990); end
  def test_lever_graphs_f4990; assert_equal("Level 2", worksheet.lever_graphs_f4990); end
  def test_lever_graphs_g4990; assert_equal("Level 3", worksheet.lever_graphs_g4990); end
  def test_lever_graphs_h4990; assert_equal("Level 4", worksheet.lever_graphs_h4990); end
  def test_lever_graphs_b4991; assert_equal("Cement", worksheet.lever_graphs_b4991); end
  def test_lever_graphs_c4991; assert_equal("Cement", worksheet.lever_graphs_c4991); end
  def test_lever_graphs_d4991; assert_in_delta(0.4106418635061298, worksheet.lever_graphs_d4991, 0.002); end
  def test_lever_graphs_e4991; assert_in_delta(0.3991070133010894, worksheet.lever_graphs_e4991, 0.002); end
  def test_lever_graphs_f4991; assert_in_delta(0.38161847378236474, worksheet.lever_graphs_f4991, 0.002); end
  def test_lever_graphs_g4991; assert_in_delta(0.356497700295827, worksheet.lever_graphs_g4991, 0.002); end
  def test_lever_graphs_h4991; assert_in_delta(0.20325036204147334, worksheet.lever_graphs_h4991, 0.002); end
  def test_lever_graphs_b4877; assert_equal("Chemicals & petrochemicals.HVC", worksheet.lever_graphs_b4877); end
  def test_lever_graphs_c4877; assert_equal("High Value Chemical", worksheet.lever_graphs_c4877); end
  def test_lever_graphs_d4877; assert_in_epsilon(1.0882763538290248, worksheet.lever_graphs_d4877, 0.002); end
  def test_lever_graphs_e4877; assert_in_epsilon(1.0882763538290248, worksheet.lever_graphs_e4877, 0.002); end
  def test_lever_graphs_f4877; assert_in_epsilon(1.022112932347027, worksheet.lever_graphs_f4877, 0.002); end
  def test_lever_graphs_g4877; assert_in_delta(0.9611476293767254, worksheet.lever_graphs_g4877, 0.002); end
  def test_lever_graphs_h4877; assert_in_delta(0.862674940290228, worksheet.lever_graphs_h4877, 0.002); end
  def test_lever_graphs_b4878; assert_equal("Chemicals & petrochemicals.Ammonia", worksheet.lever_graphs_b4878); end
  def test_lever_graphs_c4878; assert_equal("Ammonia", worksheet.lever_graphs_c4878); end
  def test_lever_graphs_d4878; assert_in_epsilon(2.2354836573853953, worksheet.lever_graphs_d4878, 0.002); end
  def test_lever_graphs_e4878; assert_in_epsilon(2.2354836573853953, worksheet.lever_graphs_e4878, 0.002); end
  def test_lever_graphs_f4878; assert_in_epsilon(2.1699698150822373, worksheet.lever_graphs_f4878, 0.002); end
  def test_lever_graphs_g4878; assert_in_epsilon(2.104157361649473, worksheet.lever_graphs_g4878, 0.002); end
  def test_lever_graphs_h4878; assert_in_epsilon(1.9716366213951184, worksheet.lever_graphs_h4878, 0.002); end
  def test_lever_graphs_b4879; assert_equal("Chemicals & petrochemicals.Methanol", worksheet.lever_graphs_b4879); end
  def test_lever_graphs_c4879; assert_equal("Methanol", worksheet.lever_graphs_c4879); end
  def test_lever_graphs_d4879; assert_in_epsilon(1.405875794970769, worksheet.lever_graphs_d4879, 0.002); end
  def test_lever_graphs_e4879; assert_in_epsilon(1.405875794970769, worksheet.lever_graphs_e4879, 0.002); end
  def test_lever_graphs_f4879; assert_in_epsilon(1.303400670104823, worksheet.lever_graphs_f4879, 0.002); end
  def test_lever_graphs_g4879; assert_in_epsilon(1.2004889032589132, worksheet.lever_graphs_g4879, 0.002); end
  def test_lever_graphs_h4879; assert_in_delta(0.9933554436272007, worksheet.lever_graphs_h4879, 0.002); end
  def test_lever_graphs_b4880; assert_equal("Chemicals & petrochemicals.Others", worksheet.lever_graphs_b4880); end
  def test_lever_graphs_c4880; assert_equal("Other", worksheet.lever_graphs_c4880); end
  def test_lever_graphs_d4880; assert_in_epsilon(2.604960729019383, worksheet.lever_graphs_d4880, 0.002); end
  def test_lever_graphs_e4880; assert_in_epsilon(2.604960729019383, worksheet.lever_graphs_e4880, 0.002); end
  def test_lever_graphs_f4880; assert_in_epsilon(2.5358239266187534, worksheet.lever_graphs_f4880, 0.002); end
  def test_lever_graphs_g4880; assert_in_epsilon(2.461484302339102, worksheet.lever_graphs_g4880, 0.002); end
  def test_lever_graphs_h4880; assert_in_epsilon(2.2608927411627304, worksheet.lever_graphs_h4880, 0.002); end
  def test_lever_graphs_b4933; assert_equal("Name in Model", worksheet.lever_graphs_b4933); end
  def test_lever_graphs_c4933; assert_equal("Name in 1-Pager", worksheet.lever_graphs_c4933); end
  def test_lever_graphs_d4933; assert_in_epsilon(2011.0, worksheet.lever_graphs_d4933, 0.002); end
  def test_lever_graphs_e4933; assert_equal("Level 1", worksheet.lever_graphs_e4933); end
  def test_lever_graphs_f4933; assert_equal("Level 2", worksheet.lever_graphs_f4933); end
  def test_lever_graphs_g4933; assert_equal("Level 3", worksheet.lever_graphs_g4933); end
  def test_lever_graphs_h4933; assert_equal("Level 4", worksheet.lever_graphs_h4933); end
  def test_lever_graphs_b4934; assert_equal("Pulp & paper.Virgin", worksheet.lever_graphs_b4934); end
  def test_lever_graphs_c4934; assert_equal("Virgin paper", worksheet.lever_graphs_c4934); end
  def test_lever_graphs_d4934; assert_in_delta(0.4465638546115754, worksheet.lever_graphs_d4934, 0.002); end
  def test_lever_graphs_e4934; assert_in_delta(0.4465638546115754, worksheet.lever_graphs_e4934, 0.002); end
  def test_lever_graphs_f4934; assert_in_delta(0.3449653573936872, worksheet.lever_graphs_f4934, 0.002); end
  def test_lever_graphs_g4934; assert_in_delta(0.29052314516906713, worksheet.lever_graphs_g4934, 0.002); end
  def test_lever_graphs_h4934; assert_in_delta(0.22487317483558059, worksheet.lever_graphs_h4934, 0.002); end
  def test_lever_graphs_b4935; assert_equal("Pulp & paper.Recycled", worksheet.lever_graphs_b4935); end
  def test_lever_graphs_c4935; assert_equal("Recycled paper", worksheet.lever_graphs_c4935); end
  def test_lever_graphs_d4935; assert_in_delta(0.10859508742387186, worksheet.lever_graphs_d4935, 0.002); end
  def test_lever_graphs_e4935; assert_in_delta(0.10859508742387186, worksheet.lever_graphs_e4935, 0.002); end
  def test_lever_graphs_f4935; assert_in_delta(0.08530570392310666, worksheet.lever_graphs_f4935, 0.002); end
  def test_lever_graphs_g4935; assert_in_delta(0.07299176634567725, worksheet.lever_graphs_g4935, 0.002); end
  def test_lever_graphs_h4935; assert_in_delta(0.05736441908343064, worksheet.lever_graphs_h4935, 0.002); end
  def test_lever_graphs_b4212; assert_equal("Type of travel", worksheet.lever_graphs_b4212); end
  def test_lever_graphs_c4212; assert_equal("Level", worksheet.lever_graphs_c4212); end
  def test_lever_graphs_d4212; assert_equal("Type of city", worksheet.lever_graphs_d4212); end
  def test_lever_graphs_e4212; assert_equal("1985", worksheet.lever_graphs_e4212); end
  def test_lever_graphs_f4212; assert_equal("1990", worksheet.lever_graphs_f4212); end
  def test_lever_graphs_g4212; assert_equal("1995", worksheet.lever_graphs_g4212); end
  def test_lever_graphs_h4212; assert_equal("2000", worksheet.lever_graphs_h4212); end
  def test_lever_graphs_i4212; assert_equal("2005", worksheet.lever_graphs_i4212); end
  def test_lever_graphs_j4212; assert_equal("2010", worksheet.lever_graphs_j4212); end
  def test_lever_graphs_k4212; assert_equal("2011", worksheet.lever_graphs_k4212); end
  def test_lever_graphs_l4212; assert_equal("2015", worksheet.lever_graphs_l4212); end
  def test_lever_graphs_m4212; assert_equal("2020", worksheet.lever_graphs_m4212); end
  def test_lever_graphs_n4212; assert_equal("2025", worksheet.lever_graphs_n4212); end
  def test_lever_graphs_o4212; assert_equal("2030", worksheet.lever_graphs_o4212); end
  def test_lever_graphs_p4212; assert_equal("2035", worksheet.lever_graphs_p4212); end
  def test_lever_graphs_q4212; assert_equal("2040", worksheet.lever_graphs_q4212); end
  def test_lever_graphs_r4212; assert_equal("2045", worksheet.lever_graphs_r4212); end
  def test_lever_graphs_s4212; assert_equal("2050", worksheet.lever_graphs_s4212); end
  def test_lever_graphs_b4213; assert_equal("International", worksheet.lever_graphs_b4213); end
  def test_lever_graphs_c4213; assert_in_delta(1.0, worksheet.lever_graphs_c4213, 0.002); end
  def test_lever_graphs_k4213; assert_in_delta(0.0, (worksheet.lever_graphs_k4213||0), 0.002); end
  def test_lever_graphs_l4213; assert_in_delta(0.013000000000000123, worksheet.lever_graphs_l4213, 0.002); end
  def test_lever_graphs_m4213; assert_in_delta(0.011142857142857232, worksheet.lever_graphs_m4213, 0.002); end
  def test_lever_graphs_n4213; assert_in_delta(0.009285714285714342, worksheet.lever_graphs_n4213, 0.002); end
  def test_lever_graphs_o4213; assert_in_delta(0.007428571428571562, worksheet.lever_graphs_o4213, 0.002); end
  def test_lever_graphs_p4213; assert_in_delta(0.005571428571428894, worksheet.lever_graphs_p4213, 0.002); end
  def test_lever_graphs_q4213; assert_in_delta(0.00371428571428567, worksheet.lever_graphs_q4213, 0.002); end
  def test_lever_graphs_r4213; assert_in_delta(0.0018571428571432236, worksheet.lever_graphs_r4213, 0.002); end
  def test_lever_graphs_s4213; assert_in_delta(0.0, (worksheet.lever_graphs_s4213||0), 0.002); end
  def test_lever_graphs_b4214; assert_equal("International", worksheet.lever_graphs_b4214); end
  def test_lever_graphs_c4214; assert_in_epsilon(2.0, worksheet.lever_graphs_c4214, 0.002); end
  def test_lever_graphs_k4214; assert_in_delta(0.0, (worksheet.lever_graphs_k4214||0), 0.002); end
  def test_lever_graphs_l4214; assert_in_delta(0.013000000000000123, worksheet.lever_graphs_l4214, 0.002); end
  def test_lever_graphs_m4214; assert_in_delta(0.0286849284549765, worksheet.lever_graphs_m4214, 0.002); end
  def test_lever_graphs_n4214; assert_in_delta(0.04440273471412415, worksheet.lever_graphs_n4214, 0.002); end
  def test_lever_graphs_o4214; assert_in_delta(0.060156043613111, worksheet.lever_graphs_o4214, 0.002); end
  def test_lever_graphs_p4214; assert_in_delta(0.07594679403867244, worksheet.lever_graphs_p4214, 0.002); end
  def test_lever_graphs_q4214; assert_in_delta(0.09177606687492768, worksheet.lever_graphs_q4214, 0.002); end
  def test_lever_graphs_r4214; assert_in_delta(0.10764396256338593, worksheet.lever_graphs_r4214, 0.002); end
  def test_lever_graphs_s4214; assert_in_delta(0.12354954748373115, worksheet.lever_graphs_s4214, 0.002); end
  def test_lever_graphs_b4215; assert_equal("International", worksheet.lever_graphs_b4215); end
  def test_lever_graphs_c4215; assert_in_epsilon(3.0, worksheet.lever_graphs_c4215, 0.002); end
  def test_lever_graphs_k4215; assert_in_delta(0.0, (worksheet.lever_graphs_k4215||0), 0.002); end
  def test_lever_graphs_l4215; assert_in_delta(0.013000000000000123, worksheet.lever_graphs_l4215, 0.002); end
  def test_lever_graphs_m4215; assert_in_delta(0.03766550531182633, worksheet.lever_graphs_m4215, 0.002); end
  def test_lever_graphs_n4215; assert_in_delta(0.06252619115283964, worksheet.lever_graphs_n4215, 0.002); end
  def test_lever_graphs_o4215; assert_in_delta(0.08759633847782566, worksheet.lever_graphs_o4215, 0.002); end
  def test_lever_graphs_p4215; assert_in_delta(0.11288766717800514, worksheet.lever_graphs_p4215, 0.002); end
  def test_lever_graphs_q4215; assert_in_delta(0.13840865530438706, worksheet.lever_graphs_q4215, 0.002); end
  def test_lever_graphs_r4215; assert_in_delta(0.16416396308069514, worksheet.lever_graphs_r4215, 0.002); end
  def test_lever_graphs_s4215; assert_in_delta(0.19015401953456146, worksheet.lever_graphs_s4215, 0.002); end
  def test_lever_graphs_b4216; assert_equal("International", worksheet.lever_graphs_b4216); end
  def test_lever_graphs_c4216; assert_in_epsilon(4.0, worksheet.lever_graphs_c4216, 0.002); end
  def test_lever_graphs_k4216; assert_in_delta(0.0, (worksheet.lever_graphs_k4216||0), 0.002); end
  def test_lever_graphs_l4216; assert_in_delta(0.013000000000000123, worksheet.lever_graphs_l4216, 0.002); end
  def test_lever_graphs_m4216; assert_in_delta(0.056591019051802305, worksheet.lever_graphs_m4216, 0.002); end
  def test_lever_graphs_n4216; assert_in_delta(0.10036183853879543, worksheet.lever_graphs_n4216, 0.002); end
  def test_lever_graphs_o4216; assert_in_delta(0.14432573667084136, worksheet.lever_graphs_o4216, 0.002); end
  def test_lever_graphs_p4216; assert_in_delta(0.18849351914538914, worksheet.lever_graphs_p4216, 0.002); end
  def test_lever_graphs_q4216; assert_in_delta(0.2328728647945003, worksheet.lever_graphs_q4216, 0.002); end
  def test_lever_graphs_r4216; assert_in_delta(0.27746777890430396, worksheet.lever_graphs_r4216, 0.002); end
  def test_lever_graphs_s4216; assert_in_delta(0.32227821156801806, worksheet.lever_graphs_s4216, 0.002); end
  def test_lever_graphs_b4202; assert_equal("Type of travel", worksheet.lever_graphs_b4202); end
  def test_lever_graphs_c4202; assert_equal("Level", worksheet.lever_graphs_c4202); end
  def test_lever_graphs_d4202; assert_equal("Type of city", worksheet.lever_graphs_d4202); end
  def test_lever_graphs_e4202; assert_equal("1985", worksheet.lever_graphs_e4202); end
  def test_lever_graphs_f4202; assert_equal("1990", worksheet.lever_graphs_f4202); end
  def test_lever_graphs_g4202; assert_equal("1995", worksheet.lever_graphs_g4202); end
  def test_lever_graphs_h4202; assert_equal("2000", worksheet.lever_graphs_h4202); end
  def test_lever_graphs_i4202; assert_equal("2005", worksheet.lever_graphs_i4202); end
  def test_lever_graphs_j4202; assert_equal("2010", worksheet.lever_graphs_j4202); end
  def test_lever_graphs_k4202; assert_equal("2011", worksheet.lever_graphs_k4202); end
  def test_lever_graphs_l4202; assert_equal("2015", worksheet.lever_graphs_l4202); end
  def test_lever_graphs_m4202; assert_equal("2020", worksheet.lever_graphs_m4202); end
  def test_lever_graphs_n4202; assert_equal("2025", worksheet.lever_graphs_n4202); end
  def test_lever_graphs_o4202; assert_equal("2030", worksheet.lever_graphs_o4202); end
  def test_lever_graphs_p4202; assert_equal("2035", worksheet.lever_graphs_p4202); end
  def test_lever_graphs_q4202; assert_equal("2040", worksheet.lever_graphs_q4202); end
  def test_lever_graphs_r4202; assert_equal("2045", worksheet.lever_graphs_r4202); end
  def test_lever_graphs_s4202; assert_equal("2050", worksheet.lever_graphs_s4202); end
  def test_lever_graphs_b4203; assert_equal("International", worksheet.lever_graphs_b4203); end
  def test_lever_graphs_c4203; assert_in_delta(1.0, worksheet.lever_graphs_c4203, 0.002); end
  def test_lever_graphs_k4203; assert_in_delta(1.0, worksheet.lever_graphs_k4203, 0.002); end
  def test_lever_graphs_l4203; assert_in_delta(0.9869999999999999, worksheet.lever_graphs_l4203, 0.002); end
  def test_lever_graphs_m4203; assert_in_delta(0.9888571428571428, worksheet.lever_graphs_m4203, 0.002); end
  def test_lever_graphs_n4203; assert_in_delta(0.9907142857142857, worksheet.lever_graphs_n4203, 0.002); end
  def test_lever_graphs_o4203; assert_in_delta(0.9925714285714284, worksheet.lever_graphs_o4203, 0.002); end
  def test_lever_graphs_p4203; assert_in_delta(0.9944285714285711, worksheet.lever_graphs_p4203, 0.002); end
  def test_lever_graphs_q4203; assert_in_delta(0.9962857142857143, worksheet.lever_graphs_q4203, 0.002); end
  def test_lever_graphs_r4203; assert_in_delta(0.9981428571428568, worksheet.lever_graphs_r4203, 0.002); end
  def test_lever_graphs_s4203; assert_in_delta(1.0, worksheet.lever_graphs_s4203, 0.002); end
  def test_lever_graphs_b4204; assert_equal("International", worksheet.lever_graphs_b4204); end
  def test_lever_graphs_c4204; assert_in_epsilon(2.0, worksheet.lever_graphs_c4204, 0.002); end
  def test_lever_graphs_k4204; assert_in_delta(1.0, worksheet.lever_graphs_k4204, 0.002); end
  def test_lever_graphs_l4204; assert_in_delta(0.9869999999999999, worksheet.lever_graphs_l4204, 0.002); end
  def test_lever_graphs_m4204; assert_in_delta(0.9713150715450235, worksheet.lever_graphs_m4204, 0.002); end
  def test_lever_graphs_n4204; assert_in_delta(0.9555972652858759, worksheet.lever_graphs_n4204, 0.002); end
  def test_lever_graphs_o4204; assert_in_delta(0.939843956386889, worksheet.lever_graphs_o4204, 0.002); end
  def test_lever_graphs_p4204; assert_in_delta(0.9240532059613276, worksheet.lever_graphs_p4204, 0.002); end
  def test_lever_graphs_q4204; assert_in_delta(0.9082239331250723, worksheet.lever_graphs_q4204, 0.002); end
  def test_lever_graphs_r4204; assert_in_delta(0.8923560374366141, worksheet.lever_graphs_r4204, 0.002); end
  def test_lever_graphs_s4204; assert_in_delta(0.8764504525162689, worksheet.lever_graphs_s4204, 0.002); end
  def test_lever_graphs_b4205; assert_equal("International", worksheet.lever_graphs_b4205); end
  def test_lever_graphs_c4205; assert_in_epsilon(3.0, worksheet.lever_graphs_c4205, 0.002); end
  def test_lever_graphs_k4205; assert_in_delta(1.0, worksheet.lever_graphs_k4205, 0.002); end
  def test_lever_graphs_l4205; assert_in_delta(0.9869999999999999, worksheet.lever_graphs_l4205, 0.002); end
  def test_lever_graphs_m4205; assert_in_delta(0.9623344946881737, worksheet.lever_graphs_m4205, 0.002); end
  def test_lever_graphs_n4205; assert_in_delta(0.9374738088471604, worksheet.lever_graphs_n4205, 0.002); end
  def test_lever_graphs_o4205; assert_in_delta(0.9124036615221743, worksheet.lever_graphs_o4205, 0.002); end
  def test_lever_graphs_p4205; assert_in_delta(0.8871123328219949, worksheet.lever_graphs_p4205, 0.002); end
  def test_lever_graphs_q4205; assert_in_delta(0.8615913446956129, worksheet.lever_graphs_q4205, 0.002); end
  def test_lever_graphs_r4205; assert_in_delta(0.8358360369193049, worksheet.lever_graphs_r4205, 0.002); end
  def test_lever_graphs_s4205; assert_in_delta(0.8098459804654385, worksheet.lever_graphs_s4205, 0.002); end
  def test_lever_graphs_b4206; assert_equal("International", worksheet.lever_graphs_b4206); end
  def test_lever_graphs_c4206; assert_in_epsilon(4.0, worksheet.lever_graphs_c4206, 0.002); end
  def test_lever_graphs_k4206; assert_in_delta(1.0, worksheet.lever_graphs_k4206, 0.002); end
  def test_lever_graphs_l4206; assert_in_delta(0.9869999999999999, worksheet.lever_graphs_l4206, 0.002); end
  def test_lever_graphs_m4206; assert_in_delta(0.9434089809481977, worksheet.lever_graphs_m4206, 0.002); end
  def test_lever_graphs_n4206; assert_in_delta(0.8996381614612046, worksheet.lever_graphs_n4206, 0.002); end
  def test_lever_graphs_o4206; assert_in_delta(0.8556742633291586, worksheet.lever_graphs_o4206, 0.002); end
  def test_lever_graphs_p4206; assert_in_delta(0.8115064808546109, worksheet.lever_graphs_p4206, 0.002); end
  def test_lever_graphs_q4206; assert_in_delta(0.7671271352054997, worksheet.lever_graphs_q4206, 0.002); end
  def test_lever_graphs_r4206; assert_in_delta(0.722532221095696, worksheet.lever_graphs_r4206, 0.002); end
  def test_lever_graphs_s4206; assert_in_delta(0.6777217884319819, worksheet.lever_graphs_s4206, 0.002); end
  def test_lever_graphs_b3815; assert_equal("Type of travel", worksheet.lever_graphs_b3815); end
  def test_lever_graphs_c3815; assert_equal("Level", worksheet.lever_graphs_c3815); end
  def test_lever_graphs_e3815; assert_equal("1985", worksheet.lever_graphs_e3815); end
  def test_lever_graphs_f3815; assert_equal("1990", worksheet.lever_graphs_f3815); end
  def test_lever_graphs_g3815; assert_equal("1995", worksheet.lever_graphs_g3815); end
  def test_lever_graphs_h3815; assert_equal("2000", worksheet.lever_graphs_h3815); end
  def test_lever_graphs_i3815; assert_equal("2005", worksheet.lever_graphs_i3815); end
  def test_lever_graphs_j3815; assert_equal("2010", worksheet.lever_graphs_j3815); end
  def test_lever_graphs_k3815; assert_equal("2011", worksheet.lever_graphs_k3815); end
  def test_lever_graphs_l3815; assert_equal("2015", worksheet.lever_graphs_l3815); end
  def test_lever_graphs_m3815; assert_equal("2020", worksheet.lever_graphs_m3815); end
  def test_lever_graphs_n3815; assert_equal("2025", worksheet.lever_graphs_n3815); end
  def test_lever_graphs_o3815; assert_equal("2030", worksheet.lever_graphs_o3815); end
  def test_lever_graphs_p3815; assert_equal("2035", worksheet.lever_graphs_p3815); end
  def test_lever_graphs_q3815; assert_equal("2040", worksheet.lever_graphs_q3815); end
  def test_lever_graphs_r3815; assert_equal("2045", worksheet.lever_graphs_r3815); end
  def test_lever_graphs_s3815; assert_equal("2050", worksheet.lever_graphs_s3815); end
  def test_lever_graphs_b3816; assert_equal("Rural", worksheet.lever_graphs_b3816); end
  def test_lever_graphs_c3816; assert_in_delta(1.0, worksheet.lever_graphs_c3816, 0.002); end
  def test_lever_graphs_k3816; assert_in_delta(0.451433121898344, worksheet.lever_graphs_k3816, 0.002); end
  def test_lever_graphs_l3816; assert_in_delta(0.45467424317206623, worksheet.lever_graphs_l3816, 0.002); end
  def test_lever_graphs_m3816; assert_in_delta(0.4719946346596325, worksheet.lever_graphs_m3816, 0.002); end
  def test_lever_graphs_n3816; assert_in_delta(0.4927787531683575, worksheet.lever_graphs_n3816, 0.002); end
  def test_lever_graphs_o3816; assert_in_delta(0.515466554383111, worksheet.lever_graphs_o3816, 0.002); end
  def test_lever_graphs_p3816; assert_in_delta(0.5409630035476174, worksheet.lever_graphs_p3816, 0.002); end
  def test_lever_graphs_q3816; assert_in_delta(0.5679994187321225, worksheet.lever_graphs_q3816, 0.002); end
  def test_lever_graphs_r3816; assert_in_delta(0.5952919906141663, worksheet.lever_graphs_r3816, 0.002); end
  def test_lever_graphs_s3816; assert_in_delta(0.6244139755732606, worksheet.lever_graphs_s3816, 0.002); end
  def test_lever_graphs_b3817; assert_equal("Rural", worksheet.lever_graphs_b3817); end
  def test_lever_graphs_c3817; assert_in_epsilon(2.0, worksheet.lever_graphs_c3817, 0.002); end
  def test_lever_graphs_k3817; assert_in_delta(0.451433121898344, worksheet.lever_graphs_k3817, 0.002); end
  def test_lever_graphs_l3817; assert_in_delta(0.45467424317206623, worksheet.lever_graphs_l3817, 0.002); end
  def test_lever_graphs_m3817; assert_in_delta(0.4632271163246127, worksheet.lever_graphs_m3817, 0.002); end
  def test_lever_graphs_n3817; assert_in_delta(0.47755798353826684, worksheet.lever_graphs_n3817, 0.002); end
  def test_lever_graphs_o3817; assert_in_delta(0.4945431014416915, worksheet.lever_graphs_o3817, 0.002); end
  def test_lever_graphs_p3817; assert_in_delta(0.515646748106515, worksheet.lever_graphs_p3817, 0.002); end
  def test_lever_graphs_q3817; assert_in_delta(0.5373175512394701, worksheet.lever_graphs_q3817, 0.002); end
  def test_lever_graphs_r3817; assert_in_delta(0.5613639988639266, worksheet.lever_graphs_r3817, 0.002); end
  def test_lever_graphs_s3817; assert_in_delta(0.5876558679853673, worksheet.lever_graphs_s3817, 0.002); end
  def test_lever_graphs_b3818; assert_equal("Rural", worksheet.lever_graphs_b3818); end
  def test_lever_graphs_c3818; assert_in_epsilon(3.0, worksheet.lever_graphs_c3818, 0.002); end
  def test_lever_graphs_k3818; assert_in_delta(0.451433121898344, worksheet.lever_graphs_k3818, 0.002); end
  def test_lever_graphs_l3818; assert_in_delta(0.45467424317206623, worksheet.lever_graphs_l3818, 0.002); end
  def test_lever_graphs_m3818; assert_in_delta(0.452071987267495, worksheet.lever_graphs_m3818, 0.002); end
  def test_lever_graphs_n3818; assert_in_delta(0.4545990515048957, worksheet.lever_graphs_n3818, 0.002); end
  def test_lever_graphs_o3818; assert_in_delta(0.4581257594224438, worksheet.lever_graphs_o3818, 0.002); end
  def test_lever_graphs_p3818; assert_in_delta(0.4639558878030191, worksheet.lever_graphs_p3818, 0.002); end
  def test_lever_graphs_q3818; assert_in_delta(0.4717214667876415, worksheet.lever_graphs_q3818, 0.002); end
  def test_lever_graphs_r3818; assert_in_delta(0.4825002859909021, worksheet.lever_graphs_r3818, 0.002); end
  def test_lever_graphs_s3818; assert_in_delta(0.4947680987605924, worksheet.lever_graphs_s3818, 0.002); end
  def test_lever_graphs_b3819; assert_equal("Rural", worksheet.lever_graphs_b3819); end
  def test_lever_graphs_c3819; assert_in_epsilon(4.0, worksheet.lever_graphs_c3819, 0.002); end
  def test_lever_graphs_k3819; assert_in_delta(0.451433121898344, worksheet.lever_graphs_k3819, 0.002); end
  def test_lever_graphs_l3819; assert_in_delta(0.45467424317206623, worksheet.lever_graphs_l3819, 0.002); end
  def test_lever_graphs_m3819; assert_in_delta(0.4413545155080788, worksheet.lever_graphs_m3819, 0.002); end
  def test_lever_graphs_n3819; assert_in_delta(0.431709213615189, worksheet.lever_graphs_n3819, 0.002); end
  def test_lever_graphs_o3819; assert_in_delta(0.4241610460811397, worksheet.lever_graphs_o3819, 0.002); end
  def test_lever_graphs_p3819; assert_in_delta(0.41941546014156195, worksheet.lever_graphs_p3819, 0.002); end
  def test_lever_graphs_q3819; assert_in_delta(0.41867126304090696, worksheet.lever_graphs_q3819, 0.002); end
  def test_lever_graphs_r3819; assert_in_delta(0.42096494476714647, worksheet.lever_graphs_r3819, 0.002); end
  def test_lever_graphs_s3819; assert_in_delta(0.42461577737353323, worksheet.lever_graphs_s3819, 0.002); end
  def test_lever_graphs_b3825; assert_equal("Type of travel", worksheet.lever_graphs_b3825); end
  def test_lever_graphs_c3825; assert_equal("Level", worksheet.lever_graphs_c3825); end
  def test_lever_graphs_e3825; assert_equal("1985", worksheet.lever_graphs_e3825); end
  def test_lever_graphs_f3825; assert_equal("1990", worksheet.lever_graphs_f3825); end
  def test_lever_graphs_g3825; assert_equal("1995", worksheet.lever_graphs_g3825); end
  def test_lever_graphs_h3825; assert_equal("2000", worksheet.lever_graphs_h3825); end
  def test_lever_graphs_i3825; assert_equal("2005", worksheet.lever_graphs_i3825); end
  def test_lever_graphs_j3825; assert_equal("2010", worksheet.lever_graphs_j3825); end
  def test_lever_graphs_k3825; assert_equal("2011", worksheet.lever_graphs_k3825); end
  def test_lever_graphs_l3825; assert_equal("2015", worksheet.lever_graphs_l3825); end
  def test_lever_graphs_m3825; assert_equal("2020", worksheet.lever_graphs_m3825); end
  def test_lever_graphs_n3825; assert_equal("2025", worksheet.lever_graphs_n3825); end
  def test_lever_graphs_o3825; assert_equal("2030", worksheet.lever_graphs_o3825); end
  def test_lever_graphs_p3825; assert_equal("2035", worksheet.lever_graphs_p3825); end
  def test_lever_graphs_q3825; assert_equal("2040", worksheet.lever_graphs_q3825); end
  def test_lever_graphs_r3825; assert_equal("2045", worksheet.lever_graphs_r3825); end
  def test_lever_graphs_s3825; assert_equal("2050", worksheet.lever_graphs_s3825); end
  def test_lever_graphs_b3826; assert_equal("Rural", worksheet.lever_graphs_b3826); end
  def test_lever_graphs_c3826; assert_in_delta(1.0, worksheet.lever_graphs_c3826, 0.002); end
  def test_lever_graphs_k3826; assert_in_delta(0.4082408624554811, worksheet.lever_graphs_k3826, 0.002); end
  def test_lever_graphs_l3826; assert_in_delta(0.41455813180862516, worksheet.lever_graphs_l3826, 0.002); end
  def test_lever_graphs_m3826; assert_in_delta(0.4392910415953992, worksheet.lever_graphs_m3826, 0.002); end
  def test_lever_graphs_n3826; assert_in_delta(0.46917114636016966, worksheet.lever_graphs_n3826, 0.002); end
  def test_lever_graphs_o3826; assert_in_delta(0.5012249784280532, worksheet.lever_graphs_o3826, 0.002); end
  def test_lever_graphs_p3826; assert_in_delta(0.5358665509027337, worksheet.lever_graphs_p3826, 0.002); end
  def test_lever_graphs_q3826; assert_in_delta(0.5716689497423719, worksheet.lever_graphs_q3826, 0.002); end
  def test_lever_graphs_r3826; assert_in_delta(0.6079431549745008, worksheet.lever_graphs_r3826, 0.002); end
  def test_lever_graphs_s3826; assert_in_delta(0.6449359780699422, worksheet.lever_graphs_s3826, 0.002); end
  def test_lever_graphs_b3827; assert_equal("Rural", worksheet.lever_graphs_b3827); end
  def test_lever_graphs_c3827; assert_in_epsilon(2.0, worksheet.lever_graphs_c3827, 0.002); end
  def test_lever_graphs_k3827; assert_in_delta(0.4082408624554811, worksheet.lever_graphs_k3827, 0.002); end
  def test_lever_graphs_l3827; assert_in_delta(0.41455813180862516, worksheet.lever_graphs_l3827, 0.002); end
  def test_lever_graphs_m3827; assert_in_delta(0.42613909764953617, worksheet.lever_graphs_m3827, 0.002); end
  def test_lever_graphs_n3827; assert_in_delta(0.44223375764127915, worksheet.lever_graphs_n3827, 0.002); end
  def test_lever_graphs_o3827; assert_in_delta(0.4605670420617201, worksheet.lever_graphs_o3827, 0.002); end
  def test_lever_graphs_p3827; assert_in_delta(0.48095966253255185, worksheet.lever_graphs_p3827, 0.002); end
  def test_lever_graphs_q3827; assert_in_delta(0.50244574468213, worksheet.lever_graphs_q3827, 0.002); end
  def test_lever_graphs_r3827; assert_in_delta(0.5248212076582999, worksheet.lever_graphs_r3827, 0.002); end
  def test_lever_graphs_s3827; assert_in_delta(0.5482145647800318, worksheet.lever_graphs_s3827, 0.002); end
  def test_lever_graphs_b3828; assert_equal("Rural", worksheet.lever_graphs_b3828); end
  def test_lever_graphs_c3828; assert_in_epsilon(3.0, worksheet.lever_graphs_c3828, 0.002); end
  def test_lever_graphs_k3828; assert_in_delta(0.4082408624554811, worksheet.lever_graphs_k3828, 0.002); end
  def test_lever_graphs_l3828; assert_in_delta(0.41455813180862516, worksheet.lever_graphs_l3828, 0.002); end
  def test_lever_graphs_m3828; assert_in_delta(0.4121709527274611, worksheet.lever_graphs_m3828, 0.002); end
  def test_lever_graphs_n3828; assert_in_delta(0.41383120604153695, worksheet.lever_graphs_n3828, 0.002); end
  def test_lever_graphs_o3828; assert_in_delta(0.4170139537353269, worksheet.lever_graphs_o3828, 0.002); end
  def test_lever_graphs_p3828; assert_in_delta(0.4225279014259804, worksheet.lever_graphs_p3828, 0.002); end
  def test_lever_graphs_q3828; assert_in_delta(0.4293528400595942, worksheet.lever_graphs_q3828, 0.002); end
  def test_lever_graphs_r3828; assert_in_delta(0.43750218950946834, worksheet.lever_graphs_r3828, 0.002); end
  def test_lever_graphs_s3828; assert_in_delta(0.4466775560794933, worksheet.lever_graphs_s3828, 0.002); end
  def test_lever_graphs_b3829; assert_equal("Rural", worksheet.lever_graphs_b3829); end
  def test_lever_graphs_c3829; assert_in_epsilon(4.0, worksheet.lever_graphs_c3829, 0.002); end
  def test_lever_graphs_k3829; assert_in_delta(0.4082408624554811, worksheet.lever_graphs_k3829, 0.002); end
  def test_lever_graphs_l3829; assert_in_delta(0.41455813180862516, worksheet.lever_graphs_l3829, 0.002); end
  def test_lever_graphs_m3829; assert_in_delta(0.39646580112208174, worksheet.lever_graphs_m3829, 0.002); end
  def test_lever_graphs_n3829; assert_in_delta(0.38073453361555126, worksheet.lever_graphs_n3829, 0.002); end
  def test_lever_graphs_o3829; assert_in_delta(0.36711513180095223, worksheet.lever_graphs_o3829, 0.002); end
  def test_lever_graphs_p3829; assert_in_delta(0.35519489693591927, worksheet.lever_graphs_p3829, 0.002); end
  def test_lever_graphs_q3829; assert_in_delta(0.344785629195369, worksheet.lever_graphs_q3829, 0.002); end
  def test_lever_graphs_r3829; assert_in_delta(0.33517279483237616, worksheet.lever_graphs_r3829, 0.002); end
  def test_lever_graphs_s3829; assert_in_delta(0.3260691603846441, worksheet.lever_graphs_s3829, 0.002); end
  def test_lever_graphs_b3804; assert_equal("Type of travel", worksheet.lever_graphs_b3804); end
  def test_lever_graphs_c3804; assert_equal("Level", worksheet.lever_graphs_c3804); end
  def test_lever_graphs_e3804; assert_equal("1985", worksheet.lever_graphs_e3804); end
  def test_lever_graphs_f3804; assert_equal("1990", worksheet.lever_graphs_f3804); end
  def test_lever_graphs_g3804; assert_equal("1995", worksheet.lever_graphs_g3804); end
  def test_lever_graphs_h3804; assert_equal("2000", worksheet.lever_graphs_h3804); end
  def test_lever_graphs_i3804; assert_equal("2005", worksheet.lever_graphs_i3804); end
  def test_lever_graphs_j3804; assert_equal("2010", worksheet.lever_graphs_j3804); end
  def test_lever_graphs_k3804; assert_equal("2011", worksheet.lever_graphs_k3804); end
  def test_lever_graphs_l3804; assert_equal("2015", worksheet.lever_graphs_l3804); end
  def test_lever_graphs_m3804; assert_equal("2020", worksheet.lever_graphs_m3804); end
  def test_lever_graphs_n3804; assert_equal("2025", worksheet.lever_graphs_n3804); end
  def test_lever_graphs_o3804; assert_equal("2030", worksheet.lever_graphs_o3804); end
  def test_lever_graphs_p3804; assert_equal("2035", worksheet.lever_graphs_p3804); end
  def test_lever_graphs_q3804; assert_equal("2040", worksheet.lever_graphs_q3804); end
  def test_lever_graphs_r3804; assert_equal("2045", worksheet.lever_graphs_r3804); end
  def test_lever_graphs_s3804; assert_equal("2050", worksheet.lever_graphs_s3804); end
  def test_lever_graphs_b3805; assert_equal("Urban", worksheet.lever_graphs_b3805); end
  def test_lever_graphs_c3805; assert_in_delta(1.0, worksheet.lever_graphs_c3805, 0.002); end
  def test_lever_graphs_k3805; assert_in_delta(0.383839680737352, worksheet.lever_graphs_k3805, 0.002); end
  def test_lever_graphs_l3805; assert_in_delta(0.39374601411892424, worksheet.lever_graphs_l3805, 0.002); end
  def test_lever_graphs_m3805; assert_in_delta(0.4239240115689753, worksheet.lever_graphs_m3805, 0.002); end
  def test_lever_graphs_n3805; assert_in_delta(0.4587785175756617, worksheet.lever_graphs_n3805, 0.002); end
  def test_lever_graphs_o3805; assert_in_delta(0.4951689643115428, worksheet.lever_graphs_o3805, 0.002); end
  def test_lever_graphs_p3805; assert_in_delta(0.5337418990576305, worksheet.lever_graphs_p3805, 0.002); end
  def test_lever_graphs_q3805; assert_in_delta(0.5731937877192915, worksheet.lever_graphs_q3805, 0.002); end
  def test_lever_graphs_r3805; assert_in_delta(0.613158037318569, worksheet.lever_graphs_r3805, 0.002); end
  def test_lever_graphs_s3805; assert_in_delta(0.6533589283470723, worksheet.lever_graphs_s3805, 0.002); end
  def test_lever_graphs_b3806; assert_equal("Urban", worksheet.lever_graphs_b3806); end
  def test_lever_graphs_c3806; assert_in_epsilon(2.0, worksheet.lever_graphs_c3806, 0.002); end
  def test_lever_graphs_k3806; assert_in_delta(0.383839680737352, worksheet.lever_graphs_k3806, 0.002); end
  def test_lever_graphs_l3806; assert_in_delta(0.39374601411892424, worksheet.lever_graphs_l3806, 0.002); end
  def test_lever_graphs_m3806; assert_in_delta(0.4084879475481851, worksheet.lever_graphs_m3806, 0.002); end
  def test_lever_graphs_n3806; assert_in_delta(0.4262898406368638, worksheet.lever_graphs_n3806, 0.002); end
  def test_lever_graphs_o3806; assert_in_delta(0.4457929048065874, worksheet.lever_graphs_o3806, 0.002); end
  def test_lever_graphs_p3806; assert_in_delta(0.4664304422607341, worksheet.lever_graphs_p3806, 0.002); end
  def test_lever_graphs_q3806; assert_in_delta(0.4882686851898847, worksheet.lever_graphs_q3806, 0.002); end
  def test_lever_graphs_r3806; assert_in_delta(0.5102542132441817, worksheet.lever_graphs_r3806, 0.002); end
  def test_lever_graphs_s3806; assert_in_delta(0.5327809016279603, worksheet.lever_graphs_s3806, 0.002); end
  def test_lever_graphs_b3807; assert_equal("Urban", worksheet.lever_graphs_b3807); end
  def test_lever_graphs_c3807; assert_in_epsilon(3.0, worksheet.lever_graphs_c3807, 0.002); end
  def test_lever_graphs_k3807; assert_in_delta(0.383839680737352, worksheet.lever_graphs_k3807, 0.002); end
  def test_lever_graphs_l3807; assert_in_delta(0.39374601411892424, worksheet.lever_graphs_l3807, 0.002); end
  def test_lever_graphs_m3807; assert_in_delta(0.3933592235340011, worksheet.lever_graphs_m3807, 0.002); end
  def test_lever_graphs_n3807; assert_in_delta(0.39597334184525396, worksheet.lever_graphs_n3807, 0.002); end
  def test_lever_graphs_o3807; assert_in_delta(0.4000102192557908, worksheet.lever_graphs_o3807, 0.002); end
  def test_lever_graphs_p3807; assert_in_delta(0.4059686856007424, worksheet.lever_graphs_p3807, 0.002); end
  def test_lever_graphs_q3807; assert_in_delta(0.412812592548572, worksheet.lever_graphs_q3807, 0.002); end
  def test_lever_graphs_r3807; assert_in_delta(0.42064151760019375, worksheet.lever_graphs_r3807, 0.002); end
  def test_lever_graphs_s3807; assert_in_delta(0.42935661356850213, worksheet.lever_graphs_s3807, 0.002); end
  def test_lever_graphs_b3808; assert_equal("Urban", worksheet.lever_graphs_b3808); end
  def test_lever_graphs_c3808; assert_in_epsilon(4.0, worksheet.lever_graphs_c3808, 0.002); end
  def test_lever_graphs_k3808; assert_in_delta(0.383839680737352, worksheet.lever_graphs_k3808, 0.002); end
  def test_lever_graphs_l3808; assert_in_delta(0.39374601411892424, worksheet.lever_graphs_l3808, 0.002); end
  def test_lever_graphs_m3808; assert_in_delta(0.37517666098166075, worksheet.lever_graphs_m3808, 0.002); end
  def test_lever_graphs_n3808; assert_in_delta(0.35841543413354493, worksheet.lever_graphs_n3808, 0.002); end
  def test_lever_graphs_o3808; assert_in_delta(0.3434252961642922, worksheet.lever_graphs_o3808, 0.002); end
  def test_lever_graphs_p3808; assert_in_delta(0.32939275643789556, worksheet.lever_graphs_p3808, 0.002); end
  def test_lever_graphs_q3808; assert_in_delta(0.3162530789249749, worksheet.lever_graphs_q3808, 0.002); end
  def test_lever_graphs_r3808; assert_in_delta(0.303859436632446, worksheet.lever_graphs_r3808, 0.002); end
  def test_lever_graphs_s3808; assert_in_delta(0.29210351459044337, worksheet.lever_graphs_s3808, 0.002); end
  def test_lever_graphs_b4817; assert_equal("Name in Model", worksheet.lever_graphs_b4817); end
  def test_lever_graphs_c4817; assert_equal("Name in 1-Pager", worksheet.lever_graphs_c4817); end
  def test_lever_graphs_d4817; assert_in_epsilon(2011.0, worksheet.lever_graphs_d4817, 0.002); end
  def test_lever_graphs_e4817; assert_equal("Level 1", worksheet.lever_graphs_e4817); end
  def test_lever_graphs_f4817; assert_equal("Level 2", worksheet.lever_graphs_f4817); end
  def test_lever_graphs_g4817; assert_equal("Level 3", worksheet.lever_graphs_g4817); end
  def test_lever_graphs_h4817; assert_equal("Level 4", worksheet.lever_graphs_h4817); end
  def test_lever_graphs_b4818; assert_equal("Steel.Oxygen", worksheet.lever_graphs_b4818); end
  def test_lever_graphs_c4818; assert_equal("Steel: Traditional oxygen blast furnace", worksheet.lever_graphs_c4818); end
  def test_lever_graphs_d4818; assert_in_epsilon(1.971190955108349, worksheet.lever_graphs_d4818, 0.002); end
  def test_lever_graphs_e4818; assert_in_epsilon(1.971190955108349, worksheet.lever_graphs_e4818, 0.002); end
  def test_lever_graphs_f4818; assert_in_epsilon(1.8716394079444385, worksheet.lever_graphs_f4818, 0.002); end
  def test_lever_graphs_g4818; assert_in_epsilon(1.7769574689305163, worksheet.lever_graphs_g4818, 0.002); end
  def test_lever_graphs_h4818; assert_in_epsilon(1.5517440768228397, worksheet.lever_graphs_h4818, 0.002); end
  def test_lever_graphs_b4819; assert_equal("Steel.OxygenHisarna", worksheet.lever_graphs_b4819); end
  def test_lever_graphs_c4819; assert_equal("Steel: Hisarana oxygen furnace", worksheet.lever_graphs_c4819); end
  def test_lever_graphs_d4819; assert_in_epsilon(1.5465060497714767, worksheet.lever_graphs_d4819, 0.002); end
  def test_lever_graphs_e4819; assert_in_epsilon(1.5465060497714767, worksheet.lever_graphs_e4819, 0.002); end
  def test_lever_graphs_f4819; assert_in_epsilon(1.5133098463376444, worksheet.lever_graphs_f4819, 0.002); end
  def test_lever_graphs_g4819; assert_in_epsilon(1.4801136429038122, worksheet.lever_graphs_g4819, 0.002); end
  def test_lever_graphs_h4819; assert_in_epsilon(1.3473288291684835, worksheet.lever_graphs_h4819, 0.002); end
  def test_lever_graphs_b4820; assert_equal("Steel.Electric", worksheet.lever_graphs_b4820); end
  def test_lever_graphs_c4820; assert_equal("Steel: Electric arc", worksheet.lever_graphs_c4820); end
  def test_lever_graphs_d4820; assert_in_delta(0.42076253688350856, worksheet.lever_graphs_d4820, 0.002); end
  def test_lever_graphs_e4820; assert_in_delta(0.42076253688350856, worksheet.lever_graphs_e4820, 0.002); end
  def test_lever_graphs_f4820; assert_in_delta(0.42076253688350856, worksheet.lever_graphs_f4820, 0.002); end
  def test_lever_graphs_g4820; assert_in_delta(0.42076253688350856, worksheet.lever_graphs_g4820, 0.002); end
  def test_lever_graphs_h4820; assert_in_delta(0.42076253688350856, worksheet.lever_graphs_h4820, 0.002); end
  def test_lever_graphs_b4821; assert_equal("Steel.ElectricDRI", worksheet.lever_graphs_b4821); end
  def test_lever_graphs_c4821; assert_equal("Steel: Electric arc DRI", worksheet.lever_graphs_c4821); end
  def test_lever_graphs_d4821; assert_in_delta(0.8425053320956735, worksheet.lever_graphs_d4821, 0.002); end
  def test_lever_graphs_e4821; assert_in_delta(0.8425053320956735, worksheet.lever_graphs_e4821, 0.002); end
  def test_lever_graphs_f4821; assert_in_delta(0.8335740317330512, worksheet.lever_graphs_f4821, 0.002); end
  def test_lever_graphs_g4821; assert_in_delta(0.8335740317330512, worksheet.lever_graphs_g4821, 0.002); end
  def test_lever_graphs_h4821; assert_in_delta(0.8335740317330512, worksheet.lever_graphs_h4821, 0.002); end
  def test_lever_graphs_b4822; assert_equal("Aluminium.Primary", worksheet.lever_graphs_b4822); end
  def test_lever_graphs_c4822; assert_equal("Aluminium: Virgin", worksheet.lever_graphs_c4822); end
  def test_lever_graphs_d4822; assert_in_delta(0.6502589702652978, worksheet.lever_graphs_d4822, 0.002); end
  def test_lever_graphs_e4822; assert_in_delta(0.6502589702652978, worksheet.lever_graphs_e4822, 0.002); end
  def test_lever_graphs_f4822; assert_in_delta(0.6025195768820145, worksheet.lever_graphs_f4822, 0.002); end
  def test_lever_graphs_g4822; assert_in_delta(0.5562721658943747, worksheet.lever_graphs_g4822, 0.002); end
  def test_lever_graphs_h4822; assert_in_delta(0.46860855868581464, worksheet.lever_graphs_h4822, 0.002); end
  def test_lever_graphs_b4823; assert_equal("Aluminium.Secondary", worksheet.lever_graphs_b4823); end
  def test_lever_graphs_c4823; assert_equal("Aluminium: Recycled", worksheet.lever_graphs_c4823); end
  def test_lever_graphs_d4823; assert_in_delta(0.7097860779758949, worksheet.lever_graphs_d4823, 0.002); end
  def test_lever_graphs_e4823; assert_in_delta(0.7067070891457794, worksheet.lever_graphs_e4823, 0.002); end
  def test_lever_graphs_f4823; assert_in_delta(0.654587441321278, worksheet.lever_graphs_f4823, 0.002); end
  def test_lever_graphs_g4823; assert_in_delta(0.6042345612196411, worksheet.lever_graphs_g4823, 0.002); end
  def test_lever_graphs_h4823; assert_in_delta(0.5088291041849612, worksheet.lever_graphs_h4823, 0.002); end
  def test_lever_graphs_b4161; assert_equal("Level", worksheet.lever_graphs_b4161); end
  def test_lever_graphs_c4161; assert_equal("1975", worksheet.lever_graphs_c4161); end
  def test_lever_graphs_d4161; assert_equal("1980", worksheet.lever_graphs_d4161); end
  def test_lever_graphs_e4161; assert_equal("1985", worksheet.lever_graphs_e4161); end
  def test_lever_graphs_f4161; assert_equal("1990", worksheet.lever_graphs_f4161); end
  def test_lever_graphs_g4161; assert_equal("1995", worksheet.lever_graphs_g4161); end
  def test_lever_graphs_h4161; assert_equal("2000", worksheet.lever_graphs_h4161); end
  def test_lever_graphs_i4161; assert_equal("2005", worksheet.lever_graphs_i4161); end
  def test_lever_graphs_j4161; assert_in_epsilon(2010.0, worksheet.lever_graphs_j4161, 0.002); end
  def test_lever_graphs_k4161; assert_equal("2011", worksheet.lever_graphs_k4161); end
  def test_lever_graphs_l4161; assert_equal("2015", worksheet.lever_graphs_l4161); end
  def test_lever_graphs_m4161; assert_equal("2020", worksheet.lever_graphs_m4161); end
  def test_lever_graphs_n4161; assert_equal("2025", worksheet.lever_graphs_n4161); end
  def test_lever_graphs_o4161; assert_equal("2030", worksheet.lever_graphs_o4161); end
  def test_lever_graphs_p4161; assert_equal("2035", worksheet.lever_graphs_p4161); end
  def test_lever_graphs_q4161; assert_equal("2040", worksheet.lever_graphs_q4161); end
  def test_lever_graphs_r4161; assert_equal("2045", worksheet.lever_graphs_r4161); end
  def test_lever_graphs_s4161; assert_equal("2050", worksheet.lever_graphs_s4161); end
  def test_lever_graphs_b4162; assert_equal("Historic data", worksheet.lever_graphs_b4162); end
  def test_lever_graphs_b4163; assert_in_delta(1.0, worksheet.lever_graphs_b4163, 0.002); end
  def test_lever_graphs_k4163; assert_in_delta(0.0, (worksheet.lever_graphs_k4163||0), 0.002); end
  def test_lever_graphs_l4163; assert_in_epsilon(47.3364, worksheet.lever_graphs_l4163, 0.002); end
  def test_lever_graphs_m4163; assert_in_epsilon(98.17920000000001, worksheet.lever_graphs_m4163, 0.002); end
  def test_lever_graphs_n4163; assert_in_epsilon(92.56895999999999, worksheet.lever_graphs_n4163, 0.002); end
  def test_lever_graphs_o4163; assert_in_epsilon(95.72472, worksheet.lever_graphs_o4163, 0.002); end
  def test_lever_graphs_p4163; assert_in_epsilon(94.67280000000001, worksheet.lever_graphs_p4163, 0.002); end
  def test_lever_graphs_q4163; assert_in_epsilon(84.15360000000001, worksheet.lever_graphs_q4163, 0.002); end
  def test_lever_graphs_r4163; assert_in_epsilon(65.21903999999999, worksheet.lever_graphs_r4163, 0.002); end
  def test_lever_graphs_s4163; assert_in_epsilon(51.89472000000001, worksheet.lever_graphs_s4163, 0.002); end
  def test_lever_graphs_b4164; assert_in_epsilon(2.0, worksheet.lever_graphs_b4164, 0.002); end
  def test_lever_graphs_k4164; assert_in_delta(0.0, (worksheet.lever_graphs_k4164||0), 0.002); end
  def test_lever_graphs_l4164; assert_in_epsilon(47.3364, worksheet.lever_graphs_l4164, 0.002); end
  def test_lever_graphs_m4164; assert_in_epsilon(110.4516, worksheet.lever_graphs_m4164, 0.002); end
  def test_lever_graphs_n4164; assert_in_epsilon(208.28015999999997, worksheet.lever_graphs_n4164, 0.002); end
  def test_lever_graphs_o4164; assert_in_epsilon(682.0386300000002, worksheet.lever_graphs_o4164, 0.002); end
  def test_lever_graphs_p4164; assert_in_epsilon(944.3611800000001, worksheet.lever_graphs_p4164, 0.002); end
  def test_lever_graphs_q4164; assert_in_epsilon(1174.9946400000001, worksheet.lever_graphs_q4164, 0.002); end
  def test_lever_graphs_r4164; assert_in_epsilon(1275.032232, worksheet.lever_graphs_r4164, 0.002); end
  def test_lever_graphs_s4164; assert_in_epsilon(1589.2758, worksheet.lever_graphs_s4164, 0.002); end
  def test_lever_graphs_b4165; assert_in_epsilon(3.0, worksheet.lever_graphs_b4165, 0.002); end
  def test_lever_graphs_k4165; assert_in_delta(0.0, (worksheet.lever_graphs_k4165||0), 0.002); end
  def test_lever_graphs_l4165; assert_in_epsilon(47.3364, worksheet.lever_graphs_l4165, 0.002); end
  def test_lever_graphs_m4165; assert_in_epsilon(192.06306, worksheet.lever_graphs_m4165, 0.002); end
  def test_lever_graphs_n4165; assert_in_epsilon(630.0474839999999, worksheet.lever_graphs_n4165, 0.002); end
  def test_lever_graphs_o4165; assert_in_epsilon(2273.4621, worksheet.lever_graphs_o4165, 0.002); end
  def test_lever_graphs_p4165; assert_in_epsilon(3170.3553899999993, worksheet.lever_graphs_p4165, 0.002); end
  def test_lever_graphs_q4165; assert_in_epsilon(3973.6278, worksheet.lever_graphs_q4165, 0.002); end
  def test_lever_graphs_r4165; assert_in_epsilon(4342.365207, worksheet.lever_graphs_r4165, 0.002); end
  def test_lever_graphs_s4165; assert_in_epsilon(4822.96554, worksheet.lever_graphs_s4165, 0.002); end
  def test_lever_graphs_b4166; assert_in_epsilon(4.0, worksheet.lever_graphs_b4166, 0.002); end
  def test_lever_graphs_k4166; assert_in_delta(0.0, (worksheet.lever_graphs_k4166||0), 0.002); end
  def test_lever_graphs_l4166; assert_in_epsilon(47.3364, worksheet.lever_graphs_l4166, 0.002); end
  def test_lever_graphs_m4166; assert_in_epsilon(2331.756, worksheet.lever_graphs_m4166, 0.002); end
  def test_lever_graphs_n4166; assert_in_epsilon(4397.0256, worksheet.lever_graphs_n4166, 0.002); end
  def test_lever_graphs_o4166; assert_in_epsilon(7578.406426500001, worksheet.lever_graphs_o4166, 0.002); end
  def test_lever_graphs_p4166; assert_in_epsilon(10493.296470000001, worksheet.lever_graphs_p4166, 0.002); end
  def test_lever_graphs_q4166; assert_in_epsilon(13058.534880000003, worksheet.lever_graphs_q4166, 0.002); end
  def test_lever_graphs_r4166; assert_in_epsilon(12228.57, worksheet.lever_graphs_r4166, 0.002); end
  def test_lever_graphs_s4166; assert_in_epsilon(12000.654, worksheet.lever_graphs_s4166, 0.002); end
  def test_lever_graphs_b3947; assert_equal("Level", worksheet.lever_graphs_b3947); end
  def test_lever_graphs_c3947; assert_equal("1975", worksheet.lever_graphs_c3947); end
  def test_lever_graphs_d3947; assert_equal("1980", worksheet.lever_graphs_d3947); end
  def test_lever_graphs_e3947; assert_equal("1985", worksheet.lever_graphs_e3947); end
  def test_lever_graphs_f3947; assert_equal("1990", worksheet.lever_graphs_f3947); end
  def test_lever_graphs_g3947; assert_equal("1995", worksheet.lever_graphs_g3947); end
  def test_lever_graphs_h3947; assert_equal("2000", worksheet.lever_graphs_h3947); end
  def test_lever_graphs_i3947; assert_equal("2005", worksheet.lever_graphs_i3947); end
  def test_lever_graphs_j3947; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3947, 0.002); end
  def test_lever_graphs_k3947; assert_equal("2011", worksheet.lever_graphs_k3947); end
  def test_lever_graphs_l3947; assert_equal("2015", worksheet.lever_graphs_l3947); end
  def test_lever_graphs_m3947; assert_equal("2020", worksheet.lever_graphs_m3947); end
  def test_lever_graphs_n3947; assert_equal("2025", worksheet.lever_graphs_n3947); end
  def test_lever_graphs_o3947; assert_equal("2030", worksheet.lever_graphs_o3947); end
  def test_lever_graphs_p3947; assert_equal("2035", worksheet.lever_graphs_p3947); end
  def test_lever_graphs_q3947; assert_equal("2040", worksheet.lever_graphs_q3947); end
  def test_lever_graphs_r3947; assert_equal("2045", worksheet.lever_graphs_r3947); end
  def test_lever_graphs_s3947; assert_equal("2050", worksheet.lever_graphs_s3947); end
  def test_lever_graphs_b3948; assert_equal("Historic data", worksheet.lever_graphs_b3948); end
  def test_lever_graphs_b3949; assert_in_delta(1.0, worksheet.lever_graphs_b3949, 0.002); end
  def test_lever_graphs_k3949; assert_in_epsilon(2.10384, worksheet.lever_graphs_k3949, 0.002); end
  def test_lever_graphs_l3949; assert_in_epsilon(10.5192, worksheet.lever_graphs_l3949, 0.002); end
  def test_lever_graphs_m3949; assert_in_epsilon(52.596000000000004, worksheet.lever_graphs_m3949, 0.002); end
  def test_lever_graphs_n3949; assert_in_epsilon(65.745, worksheet.lever_graphs_n3949, 0.002); end
  def test_lever_graphs_o3949; assert_in_epsilon(52.596000000000004, worksheet.lever_graphs_o3949, 0.002); end
  def test_lever_graphs_p3949; assert_in_epsilon(52.596000000000004, worksheet.lever_graphs_p3949, 0.002); end
  def test_lever_graphs_q3949; assert_in_delta(0.0, (worksheet.lever_graphs_q3949||0), 0.002); end
  def test_lever_graphs_r3949; assert_in_delta(0.0, (worksheet.lever_graphs_r3949||0), 0.002); end
  def test_lever_graphs_s3949; assert_in_delta(0.0, (worksheet.lever_graphs_s3949||0), 0.002); end
  def test_lever_graphs_b3950; assert_in_epsilon(2.0, worksheet.lever_graphs_b3950, 0.002); end
  def test_lever_graphs_k3950; assert_in_epsilon(2.10384, worksheet.lever_graphs_k3950, 0.002); end
  def test_lever_graphs_l3950; assert_in_epsilon(10.5192, worksheet.lever_graphs_l3950, 0.002); end
  def test_lever_graphs_m3950; assert_in_epsilon(124.47720000000002, worksheet.lever_graphs_m3950, 0.002); end
  def test_lever_graphs_n3950; assert_in_epsilon(221.34150000000002, worksheet.lever_graphs_n3950, 0.002); end
  def test_lever_graphs_o3950; assert_in_epsilon(431.2872, worksheet.lever_graphs_o3950, 0.002); end
  def test_lever_graphs_p3950; assert_in_epsilon(523.3302, worksheet.lever_graphs_p3950, 0.002); end
  def test_lever_graphs_q3950; assert_in_epsilon(702.1566, worksheet.lever_graphs_q3950, 0.002); end
  def test_lever_graphs_r3950; assert_in_epsilon(1093.9968000000001, worksheet.lever_graphs_r3950, 0.002); end
  def test_lever_graphs_s3950; assert_in_epsilon(1360.4832000000004, worksheet.lever_graphs_s3950, 0.002); end
  def test_lever_graphs_b3951; assert_in_epsilon(3.0, worksheet.lever_graphs_b3951, 0.002); end
  def test_lever_graphs_k3951; assert_in_epsilon(2.10384, worksheet.lever_graphs_k3951, 0.002); end
  def test_lever_graphs_l3951; assert_in_epsilon(10.5192, worksheet.lever_graphs_l3951, 0.002); end
  def test_lever_graphs_m3951; assert_in_epsilon(145.5156, worksheet.lever_graphs_m3951, 0.002); end
  def test_lever_graphs_n3951; assert_in_epsilon(320.61645000000004, worksheet.lever_graphs_n3951, 0.002); end
  def test_lever_graphs_o3951; assert_in_epsilon(677.9624400000001, worksheet.lever_graphs_o3951, 0.002); end
  def test_lever_graphs_p3951; assert_in_epsilon(1042.97868, worksheet.lever_graphs_p3951, 0.002); end
  def test_lever_graphs_q3951; assert_in_epsilon(1604.9669399999996, worksheet.lever_graphs_q3951, 0.002); end
  def test_lever_graphs_r3951; assert_in_epsilon(2731.13496, worksheet.lever_graphs_r3951, 0.002); end
  def test_lever_graphs_s3951; assert_in_epsilon(3485.7122400000007, worksheet.lever_graphs_s3951, 0.002); end
  def test_lever_graphs_b3952; assert_in_epsilon(4.0, worksheet.lever_graphs_b3952, 0.002); end
  def test_lever_graphs_k3952; assert_in_epsilon(2.10384, worksheet.lever_graphs_k3952, 0.002); end
  def test_lever_graphs_l3952; assert_in_epsilon(10.5192, worksheet.lever_graphs_l3952, 0.002); end
  def test_lever_graphs_m3952; assert_in_epsilon(171.11231999999998, worksheet.lever_graphs_m3952, 0.002); end
  def test_lever_graphs_n3952; assert_in_epsilon(429.97229999999996, worksheet.lever_graphs_n3952, 0.002); end
  def test_lever_graphs_o3952; assert_in_epsilon(1037.98206, worksheet.lever_graphs_o3952, 0.002); end
  def test_lever_graphs_p3952; assert_in_epsilon(1749.07998, worksheet.lever_graphs_p3952, 0.002); end
  def test_lever_graphs_q3952; assert_in_epsilon(2947.47984, worksheet.lever_graphs_q3952, 0.002); end
  def test_lever_graphs_r3952; assert_in_epsilon(5259.249360000002, worksheet.lever_graphs_r3952, 0.002); end
  def test_lever_graphs_s3952; assert_in_epsilon(7037.69544, worksheet.lever_graphs_s3952, 0.002); end
  def test_lever_graphs_b4057; assert_equal("Level", worksheet.lever_graphs_b4057); end
  def test_lever_graphs_c4057; assert_equal("1975", worksheet.lever_graphs_c4057); end
  def test_lever_graphs_d4057; assert_equal("1980", worksheet.lever_graphs_d4057); end
  def test_lever_graphs_e4057; assert_equal("1985", worksheet.lever_graphs_e4057); end
  def test_lever_graphs_f4057; assert_equal("1990", worksheet.lever_graphs_f4057); end
  def test_lever_graphs_g4057; assert_equal("1995", worksheet.lever_graphs_g4057); end
  def test_lever_graphs_h4057; assert_equal("2000", worksheet.lever_graphs_h4057); end
  def test_lever_graphs_i4057; assert_equal("2005", worksheet.lever_graphs_i4057); end
  def test_lever_graphs_j4057; assert_in_epsilon(2010.0, worksheet.lever_graphs_j4057, 0.002); end
  def test_lever_graphs_k4057; assert_equal("2011", worksheet.lever_graphs_k4057); end
  def test_lever_graphs_l4057; assert_equal("2015", worksheet.lever_graphs_l4057); end
  def test_lever_graphs_m4057; assert_equal("2020", worksheet.lever_graphs_m4057); end
  def test_lever_graphs_n4057; assert_equal("2025", worksheet.lever_graphs_n4057); end
  def test_lever_graphs_o4057; assert_equal("2030", worksheet.lever_graphs_o4057); end
  def test_lever_graphs_p4057; assert_equal("2035", worksheet.lever_graphs_p4057); end
  def test_lever_graphs_q4057; assert_equal("2040", worksheet.lever_graphs_q4057); end
  def test_lever_graphs_r4057; assert_equal("2045", worksheet.lever_graphs_r4057); end
  def test_lever_graphs_s4057; assert_equal("2050", worksheet.lever_graphs_s4057); end
  def test_lever_graphs_b4058; assert_equal("Historic data", worksheet.lever_graphs_b4058); end
  def test_lever_graphs_b4059; assert_in_delta(1.0, worksheet.lever_graphs_b4059, 0.002); end
  def test_lever_graphs_k4059; assert_in_epsilon(73.1426274, worksheet.lever_graphs_k4059, 0.002); end
  def test_lever_graphs_l4059; assert_in_epsilon(92.78811, worksheet.lever_graphs_l4059, 0.002); end
  def test_lever_graphs_m4059; assert_in_epsilon(105.19200000000001, worksheet.lever_graphs_m4059, 0.002); end
  def test_lever_graphs_n4059; assert_in_epsilon(105.19200000000001, worksheet.lever_graphs_n4059, 0.002); end
  def test_lever_graphs_o4059; assert_in_epsilon(70.128, worksheet.lever_graphs_o4059, 0.002); end
  def test_lever_graphs_p4059; assert_in_epsilon(49.08960000000001, worksheet.lever_graphs_p4059, 0.002); end
  def test_lever_graphs_q4059; assert_in_epsilon(28.051200000000005, worksheet.lever_graphs_q4059, 0.002); end
  def test_lever_graphs_r4059; assert_in_delta(0.0, (worksheet.lever_graphs_r4059||0), 0.002); end
  def test_lever_graphs_s4059; assert_in_delta(0.0, (worksheet.lever_graphs_s4059||0), 0.002); end
  def test_lever_graphs_b4060; assert_in_epsilon(2.0, worksheet.lever_graphs_b4060, 0.002); end
  def test_lever_graphs_k4060; assert_in_epsilon(73.1426274, worksheet.lever_graphs_k4060, 0.002); end
  def test_lever_graphs_l4060; assert_in_epsilon(92.78811, worksheet.lever_graphs_l4060, 0.002); end
  def test_lever_graphs_m4060; assert_in_epsilon(124.9155, worksheet.lever_graphs_m4060, 0.002); end
  def test_lever_graphs_n4060; assert_in_epsilon(164.36249999999998, worksheet.lever_graphs_n4060, 0.002); end
  def test_lever_graphs_o4060; assert_in_epsilon(273.49920000000003, worksheet.lever_graphs_o4060, 0.002); end
  def test_lever_graphs_p4060; assert_in_epsilon(511.93440000000004, worksheet.lever_graphs_p4060, 0.002); end
  def test_lever_graphs_q4060; assert_in_epsilon(687.2544000000001, worksheet.lever_graphs_q4060, 0.002); end
  def test_lever_graphs_r4060; assert_in_epsilon(1020.8007000000001, worksheet.lever_graphs_r4060, 0.002); end
  def test_lever_graphs_s4060; assert_in_epsilon(1281.5892, worksheet.lever_graphs_s4060, 0.002); end
  def test_lever_graphs_b4061; assert_in_epsilon(3.0, worksheet.lever_graphs_b4061, 0.002); end
  def test_lever_graphs_k4061; assert_in_epsilon(73.1426274, worksheet.lever_graphs_k4061, 0.002); end
  def test_lever_graphs_l4061; assert_in_epsilon(92.78811, worksheet.lever_graphs_l4061, 0.002); end
  def test_lever_graphs_m4061; assert_in_epsilon(151.2135, worksheet.lever_graphs_m4061, 0.002); end
  def test_lever_graphs_n4061; assert_in_epsilon(249.831, worksheet.lever_graphs_n4061, 0.002); end
  def test_lever_graphs_o4061; assert_in_epsilon(420.76800000000003, worksheet.lever_graphs_o4061, 0.002); end
  def test_lever_graphs_p4061; assert_in_epsilon(722.3184000000001, worksheet.lever_graphs_p4061, 0.002); end
  def test_lever_graphs_q4061; assert_in_epsilon(1185.1632000000002, worksheet.lever_graphs_q4061, 0.002); end
  def test_lever_graphs_r4061; assert_in_epsilon(1765.9107, worksheet.lever_graphs_r4061, 0.002); end
  def test_lever_graphs_s4061; assert_in_epsilon(2153.3679, worksheet.lever_graphs_s4061, 0.002); end
  def test_lever_graphs_b4062; assert_in_epsilon(4.0, worksheet.lever_graphs_b4062, 0.002); end
  def test_lever_graphs_k4062; assert_in_epsilon(73.1426274, worksheet.lever_graphs_k4062, 0.002); end
  def test_lever_graphs_l4062; assert_in_epsilon(92.78811, worksheet.lever_graphs_l4062, 0.002); end
  def test_lever_graphs_m4062; assert_in_epsilon(166.66357500000004, worksheet.lever_graphs_m4062, 0.002); end
  def test_lever_graphs_n4062; assert_in_epsilon(287.897355, worksheet.lever_graphs_n4062, 0.002); end
  def test_lever_graphs_o4062; assert_in_epsilon(530.378064, worksheet.lever_graphs_o4062, 0.002); end
  def test_lever_graphs_p4062; assert_in_epsilon(916.1521919999999, worksheet.lever_graphs_p4062, 0.002); end
  def test_lever_graphs_q4062; assert_in_epsilon(1584.8928000000003, worksheet.lever_graphs_q4062, 0.002); end
  def test_lever_graphs_r4062; assert_in_epsilon(2250.2322, worksheet.lever_graphs_r4062, 0.002); end
  def test_lever_graphs_s4062; assert_in_epsilon(3010.2444, worksheet.lever_graphs_s4062, 0.002); end
  def test_lever_graphs_b3977; assert_equal("Level", worksheet.lever_graphs_b3977); end
  def test_lever_graphs_c3977; assert_equal("1975", worksheet.lever_graphs_c3977); end
  def test_lever_graphs_d3977; assert_equal("1980", worksheet.lever_graphs_d3977); end
  def test_lever_graphs_e3977; assert_equal("1985", worksheet.lever_graphs_e3977); end
  def test_lever_graphs_f3977; assert_equal("1990", worksheet.lever_graphs_f3977); end
  def test_lever_graphs_g3977; assert_equal("1995", worksheet.lever_graphs_g3977); end
  def test_lever_graphs_h3977; assert_equal("2000", worksheet.lever_graphs_h3977); end
  def test_lever_graphs_i3977; assert_equal("2005", worksheet.lever_graphs_i3977); end
  def test_lever_graphs_j3977; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3977, 0.002); end
  def test_lever_graphs_k3977; assert_equal("2011", worksheet.lever_graphs_k3977); end
  def test_lever_graphs_l3977; assert_equal("2015", worksheet.lever_graphs_l3977); end
  def test_lever_graphs_m3977; assert_equal("2020", worksheet.lever_graphs_m3977); end
  def test_lever_graphs_n3977; assert_equal("2025", worksheet.lever_graphs_n3977); end
  def test_lever_graphs_o3977; assert_equal("2030", worksheet.lever_graphs_o3977); end
  def test_lever_graphs_p3977; assert_equal("2035", worksheet.lever_graphs_p3977); end
  def test_lever_graphs_q3977; assert_equal("2040", worksheet.lever_graphs_q3977); end
  def test_lever_graphs_r3977; assert_equal("2045", worksheet.lever_graphs_r3977); end
  def test_lever_graphs_s3977; assert_equal("2050", worksheet.lever_graphs_s3977); end
  def test_lever_graphs_b3978; assert_equal("Historic data", worksheet.lever_graphs_b3978); end
  def test_lever_graphs_c3978; assert_in_epsilon(1444.0, worksheet.lever_graphs_c3978, 0.002); end
  def test_lever_graphs_d3978; assert_in_epsilon(1717.0, worksheet.lever_graphs_d3978, 0.002); end
  def test_lever_graphs_e3978; assert_in_epsilon(1974.0, worksheet.lever_graphs_e3978, 0.002); end
  def test_lever_graphs_f3978; assert_in_epsilon(2145.0, worksheet.lever_graphs_f3978, 0.002); end
  def test_lever_graphs_g3978; assert_in_epsilon(2481.0, worksheet.lever_graphs_g3978, 0.002); end
  def test_lever_graphs_h3978; assert_in_epsilon(2621.0, worksheet.lever_graphs_h3978, 0.002); end
  def test_lever_graphs_i3978; assert_in_epsilon(2930.0, worksheet.lever_graphs_i3978, 0.002); end
  def test_lever_graphs_j3978; assert_in_epsilon(3442.0, worksheet.lever_graphs_j3978, 0.002); end
  def test_lever_graphs_b3979; assert_in_delta(1.0, worksheet.lever_graphs_b3979, 0.002); end
  def test_lever_graphs_k3979; assert_in_epsilon(3656.2986, worksheet.lever_graphs_k3979, 0.002); end
  def test_lever_graphs_l3979; assert_in_epsilon(5088.663, worksheet.lever_graphs_l3979, 0.002); end
  def test_lever_graphs_m3979; assert_in_epsilon(5201.7444, worksheet.lever_graphs_m3979, 0.002); end
  def test_lever_graphs_n3979; assert_in_epsilon(5352.5196000000005, worksheet.lever_graphs_n3979, 0.002); end
  def test_lever_graphs_o3979; assert_in_epsilon(5352.5196000000005, worksheet.lever_graphs_o3979, 0.002); end
  def test_lever_graphs_p3979; assert_in_epsilon(5352.5196000000005, worksheet.lever_graphs_p3979, 0.002); end
  def test_lever_graphs_q3979; assert_in_epsilon(4478.02344, worksheet.lever_graphs_q3979, 0.002); end
  def test_lever_graphs_r3979; assert_in_epsilon(4478.02344, worksheet.lever_graphs_r3979, 0.002); end
  def test_lever_graphs_s3979; assert_in_epsilon(4478.02344, worksheet.lever_graphs_s3979, 0.002); end
  def test_lever_graphs_b3980; assert_in_epsilon(2.0, worksheet.lever_graphs_b3980, 0.002); end
  def test_lever_graphs_k3980; assert_in_epsilon(3656.2986, worksheet.lever_graphs_k3980, 0.002); end
  def test_lever_graphs_l3980; assert_in_epsilon(5088.663, worksheet.lever_graphs_l3980, 0.002); end
  def test_lever_graphs_m3980; assert_in_epsilon(5314.8258, worksheet.lever_graphs_m3980, 0.002); end
  def test_lever_graphs_n3980; assert_in_epsilon(5503.2948, worksheet.lever_graphs_n3980, 0.002); end
  def test_lever_graphs_o3980; assert_in_epsilon(5710.6107, worksheet.lever_graphs_o3980, 0.002); end
  def test_lever_graphs_p3980; assert_in_epsilon(5917.926600000002, worksheet.lever_graphs_p3980, 0.002); end
  def test_lever_graphs_q3980; assert_in_epsilon(6125.2425, worksheet.lever_graphs_q3980, 0.002); end
  def test_lever_graphs_r3980; assert_in_epsilon(6351.405299999999, worksheet.lever_graphs_r3980, 0.002); end
  def test_lever_graphs_s3980; assert_in_epsilon(6596.415, worksheet.lever_graphs_s3980, 0.002); end
  def test_lever_graphs_b3981; assert_in_epsilon(3.0, worksheet.lever_graphs_b3981, 0.002); end
  def test_lever_graphs_k3981; assert_in_epsilon(3656.2986, worksheet.lever_graphs_k3981, 0.002); end
  def test_lever_graphs_l3981; assert_in_epsilon(5088.663, worksheet.lever_graphs_l3981, 0.002); end
  def test_lever_graphs_m3981; assert_in_epsilon(5691.7638, worksheet.lever_graphs_m3981, 0.002); end
  def test_lever_graphs_n3981; assert_in_epsilon(5993.314200000001, worksheet.lever_graphs_n3981, 0.002); end
  def test_lever_graphs_o3981; assert_in_epsilon(6294.8646, worksheet.lever_graphs_o3981, 0.002); end
  def test_lever_graphs_p3981; assert_in_epsilon(6596.415, worksheet.lever_graphs_p3981, 0.002); end
  def test_lever_graphs_q3981; assert_in_epsilon(7029.8937, worksheet.lever_graphs_q3981, 0.002); end
  def test_lever_graphs_r3981; assert_in_epsilon(7470.911160000001, worksheet.lever_graphs_r3981, 0.002); end
  def test_lever_graphs_s3981; assert_in_epsilon(7919.46738, worksheet.lever_graphs_s3981, 0.002); end
  def test_lever_graphs_b3982; assert_in_epsilon(4.0, worksheet.lever_graphs_b3982, 0.002); end
  def test_lever_graphs_k3982; assert_in_epsilon(3656.2986, worksheet.lever_graphs_k3982, 0.002); end
  def test_lever_graphs_l3982; assert_in_epsilon(5088.663, worksheet.lever_graphs_l3982, 0.002); end
  def test_lever_graphs_m3982; assert_in_epsilon(6219.477, worksheet.lever_graphs_m3982, 0.002); end
  def test_lever_graphs_n3982; assert_in_epsilon(6973.353, worksheet.lever_graphs_n3982, 0.002); end
  def test_lever_graphs_o3982; assert_in_epsilon(7519.9131, worksheet.lever_graphs_o3982, 0.002); end
  def test_lever_graphs_p3982; assert_in_epsilon(8066.4732, worksheet.lever_graphs_p3982, 0.002); end
  def test_lever_graphs_q3982; assert_in_epsilon(8613.0333, worksheet.lever_graphs_q3982, 0.002); end
  def test_lever_graphs_r3982; assert_in_epsilon(8782.6554, worksheet.lever_graphs_r3982, 0.002); end
  def test_lever_graphs_s3982; assert_in_epsilon(8952.2775, worksheet.lever_graphs_s3982, 0.002); end
  def test_lever_graphs_b3987; assert_equal("Level", worksheet.lever_graphs_b3987); end
  def test_lever_graphs_c3987; assert_equal("1975", worksheet.lever_graphs_c3987); end
  def test_lever_graphs_d3987; assert_equal("1980", worksheet.lever_graphs_d3987); end
  def test_lever_graphs_e3987; assert_equal("1985", worksheet.lever_graphs_e3987); end
  def test_lever_graphs_f3987; assert_equal("1990", worksheet.lever_graphs_f3987); end
  def test_lever_graphs_g3987; assert_equal("1995", worksheet.lever_graphs_g3987); end
  def test_lever_graphs_h3987; assert_equal("2000", worksheet.lever_graphs_h3987); end
  def test_lever_graphs_i3987; assert_equal("2005", worksheet.lever_graphs_i3987); end
  def test_lever_graphs_j3987; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3987, 0.002); end
  def test_lever_graphs_k3987; assert_equal("2011", worksheet.lever_graphs_k3987); end
  def test_lever_graphs_l3987; assert_equal("2015", worksheet.lever_graphs_l3987); end
  def test_lever_graphs_m3987; assert_equal("2020", worksheet.lever_graphs_m3987); end
  def test_lever_graphs_n3987; assert_equal("2025", worksheet.lever_graphs_n3987); end
  def test_lever_graphs_o3987; assert_equal("2030", worksheet.lever_graphs_o3987); end
  def test_lever_graphs_p3987; assert_equal("2035", worksheet.lever_graphs_p3987); end
  def test_lever_graphs_q3987; assert_equal("2040", worksheet.lever_graphs_q3987); end
  def test_lever_graphs_r3987; assert_equal("2045", worksheet.lever_graphs_r3987); end
  def test_lever_graphs_s3987; assert_equal("2050", worksheet.lever_graphs_s3987); end
  def test_lever_graphs_b3988; assert_equal("Historic data", worksheet.lever_graphs_b3988); end
  def test_lever_graphs_b3989; assert_in_delta(1.0, worksheet.lever_graphs_b3989, 0.002); end
  def test_lever_graphs_k3989; assert_in_epsilon(2425.0262399999997, worksheet.lever_graphs_k3989, 0.002); end
  def test_lever_graphs_l3989; assert_in_epsilon(2764.7964, worksheet.lever_graphs_l3989, 0.002); end
  def test_lever_graphs_m3989; assert_in_epsilon(2664.864, worksheet.lever_graphs_m3989, 0.002); end
  def test_lever_graphs_n3989; assert_in_epsilon(2103.84, worksheet.lever_graphs_n3989, 0.002); end
  def test_lever_graphs_o3989; assert_in_epsilon(1402.56, worksheet.lever_graphs_o3989, 0.002); end
  def test_lever_graphs_p3989; assert_in_epsilon(1490.22, worksheet.lever_graphs_p3989, 0.002); end
  def test_lever_graphs_q3989; assert_in_epsilon(745.11, worksheet.lever_graphs_q3989, 0.002); end
  def test_lever_graphs_r3989; assert_in_epsilon(372.555, worksheet.lever_graphs_r3989, 0.002); end
  def test_lever_graphs_s3989; assert_in_delta(0.0, (worksheet.lever_graphs_s3989||0), 0.002); end
  def test_lever_graphs_b3990; assert_in_epsilon(2.0, worksheet.lever_graphs_b3990, 0.002); end
  def test_lever_graphs_k3990; assert_in_epsilon(2425.0262399999997, worksheet.lever_graphs_k3990, 0.002); end
  def test_lever_graphs_l3990; assert_in_epsilon(2764.7964, worksheet.lever_graphs_l3990, 0.002); end
  def test_lever_graphs_m3990; assert_in_epsilon(3164.526, worksheet.lever_graphs_m3990, 0.002); end
  def test_lever_graphs_n3990; assert_in_epsilon(3492.3744000000006, worksheet.lever_graphs_n3990, 0.002); end
  def test_lever_graphs_o3990; assert_in_epsilon(3716.784, worksheet.lever_graphs_o3990, 0.002); end
  def test_lever_graphs_p3990; assert_in_epsilon(4187.5181999999995, worksheet.lever_graphs_p3990, 0.002); end
  def test_lever_graphs_q3990; assert_in_epsilon(4478.1111, worksheet.lever_graphs_q3990, 0.002); end
  def test_lever_graphs_r3990; assert_in_epsilon(4791.0572999999995, worksheet.lever_graphs_r3990, 0.002); end
  def test_lever_graphs_s3990; assert_in_epsilon(5104.0035, worksheet.lever_graphs_s3990, 0.002); end
  def test_lever_graphs_b3991; assert_in_epsilon(3.0, worksheet.lever_graphs_b3991, 0.002); end
  def test_lever_graphs_k3991; assert_in_epsilon(2425.0262399999997, worksheet.lever_graphs_k3991, 0.002); end
  def test_lever_graphs_l3991; assert_in_epsilon(2764.7964, worksheet.lever_graphs_l3991, 0.002); end
  def test_lever_graphs_m3991; assert_in_epsilon(3397.7016000000003, worksheet.lever_graphs_m3991, 0.002); end
  def test_lever_graphs_n3991; assert_in_epsilon(4102.488, worksheet.lever_graphs_n3991, 0.002); end
  def test_lever_graphs_o3991; assert_in_epsilon(4628.447999999999, worksheet.lever_graphs_o3991, 0.002); end
  def test_lever_graphs_p3991; assert_in_epsilon(5476.558499999999, worksheet.lever_graphs_p3991, 0.002); end
  def test_lever_graphs_q3991; assert_in_epsilon(6087.5487, worksheet.lever_graphs_q3991, 0.002); end
  def test_lever_graphs_r3991; assert_in_epsilon(6855.012, worksheet.lever_graphs_r3991, 0.002); end
  def test_lever_graphs_s3991; assert_in_epsilon(7674.633, worksheet.lever_graphs_s3991, 0.002); end
  def test_lever_graphs_b3992; assert_in_epsilon(4.0, worksheet.lever_graphs_b3992, 0.002); end
  def test_lever_graphs_k3992; assert_in_epsilon(2425.0262399999997, worksheet.lever_graphs_k3992, 0.002); end
  def test_lever_graphs_l3992; assert_in_epsilon(2764.7964, worksheet.lever_graphs_l3992, 0.002); end
  def test_lever_graphs_m3992; assert_in_epsilon(3637.5393599999998, worksheet.lever_graphs_m3992, 0.002); end
  def test_lever_graphs_n3992; assert_in_epsilon(4698.576, worksheet.lever_graphs_n3992, 0.002); end
  def test_lever_graphs_o3992; assert_in_epsilon(5771.534400000001, worksheet.lever_graphs_o3992, 0.002); end
  def test_lever_graphs_p3992; assert_in_epsilon(7525.611000000001, worksheet.lever_graphs_p3992, 0.002); end
  def test_lever_graphs_q3992; assert_in_epsilon(9239.364, worksheet.lever_graphs_q3992, 0.002); end
  def test_lever_graphs_r3992; assert_in_epsilon(11348.0253, worksheet.lever_graphs_r3992, 0.002); end
  def test_lever_graphs_s3992; assert_in_epsilon(13933.557, worksheet.lever_graphs_s3992, 0.002); end
  def test_lever_graphs_b4007; assert_equal("Level", worksheet.lever_graphs_b4007); end
  def test_lever_graphs_c4007; assert_equal("1975", worksheet.lever_graphs_c4007); end
  def test_lever_graphs_d4007; assert_equal("1980", worksheet.lever_graphs_d4007); end
  def test_lever_graphs_e4007; assert_equal("1985", worksheet.lever_graphs_e4007); end
  def test_lever_graphs_f4007; assert_equal("1990", worksheet.lever_graphs_f4007); end
  def test_lever_graphs_g4007; assert_equal("1995", worksheet.lever_graphs_g4007); end
  def test_lever_graphs_h4007; assert_equal("2000", worksheet.lever_graphs_h4007); end
  def test_lever_graphs_i4007; assert_equal("2005", worksheet.lever_graphs_i4007); end
  def test_lever_graphs_j4007; assert_in_epsilon(2010.0, worksheet.lever_graphs_j4007, 0.002); end
  def test_lever_graphs_k4007; assert_equal("2011", worksheet.lever_graphs_k4007); end
  def test_lever_graphs_l4007; assert_equal("2015", worksheet.lever_graphs_l4007); end
  def test_lever_graphs_m4007; assert_equal("2020", worksheet.lever_graphs_m4007); end
  def test_lever_graphs_n4007; assert_equal("2025", worksheet.lever_graphs_n4007); end
  def test_lever_graphs_o4007; assert_equal("2030", worksheet.lever_graphs_o4007); end
  def test_lever_graphs_p4007; assert_equal("2035", worksheet.lever_graphs_p4007); end
  def test_lever_graphs_q4007; assert_equal("2040", worksheet.lever_graphs_q4007); end
  def test_lever_graphs_r4007; assert_equal("2045", worksheet.lever_graphs_r4007); end
  def test_lever_graphs_s4007; assert_equal("2050", worksheet.lever_graphs_s4007); end
  def test_lever_graphs_b4008; assert_equal("Historic data", worksheet.lever_graphs_b4008); end
  def test_lever_graphs_b4009; assert_in_delta(1.0, worksheet.lever_graphs_b4009, 0.002); end
  def test_lever_graphs_k4009; assert_in_epsilon(10.422774, worksheet.lever_graphs_k4009, 0.002); end
  def test_lever_graphs_l4009; assert_in_epsilon(38.1321, worksheet.lever_graphs_l4009, 0.002); end
  def test_lever_graphs_m4009; assert_in_epsilon(43.216379999999994, worksheet.lever_graphs_m4009, 0.002); end
  def test_lever_graphs_n4009; assert_in_epsilon(37.60614, worksheet.lever_graphs_n4009, 0.002); end
  def test_lever_graphs_o4009; assert_in_delta(0.0, (worksheet.lever_graphs_o4009||0), 0.002); end
  def test_lever_graphs_p4009; assert_in_delta(0.0, (worksheet.lever_graphs_p4009||0), 0.002); end
  def test_lever_graphs_q4009; assert_in_delta(0.0, (worksheet.lever_graphs_q4009||0), 0.002); end
  def test_lever_graphs_r4009; assert_in_delta(0.0, (worksheet.lever_graphs_r4009||0), 0.002); end
  def test_lever_graphs_s4009; assert_in_delta(0.0, (worksheet.lever_graphs_s4009||0), 0.002); end
  def test_lever_graphs_b4010; assert_in_epsilon(2.0, worksheet.lever_graphs_b4010, 0.002); end
  def test_lever_graphs_k4010; assert_in_epsilon(10.422774, worksheet.lever_graphs_k4010, 0.002); end
  def test_lever_graphs_l4010; assert_in_epsilon(38.1321, worksheet.lever_graphs_l4010, 0.002); end
  def test_lever_graphs_m4010; assert_in_epsilon(83.89062, worksheet.lever_graphs_m4010, 0.002); end
  def test_lever_graphs_n4010; assert_in_epsilon(144.63899999999998, worksheet.lever_graphs_n4010, 0.002); end
  def test_lever_graphs_o4010; assert_in_epsilon(294.53759999999994, worksheet.lever_graphs_o4010, 0.002); end
  def test_lever_graphs_p4010; assert_in_epsilon(515.4408000000001, worksheet.lever_graphs_p4010, 0.002); end
  def test_lever_graphs_q4010; assert_in_epsilon(771.408, worksheet.lever_graphs_q4010, 0.002); end
  def test_lever_graphs_r4010; assert_in_epsilon(1318.4064, worksheet.lever_graphs_r4010, 0.002); end
  def test_lever_graphs_s4010; assert_in_epsilon(1595.412, worksheet.lever_graphs_s4010, 0.002); end
  def test_lever_graphs_b4011; assert_in_epsilon(3.0, worksheet.lever_graphs_b4011, 0.002); end
  def test_lever_graphs_k4011; assert_in_epsilon(10.422774, worksheet.lever_graphs_k4011, 0.002); end
  def test_lever_graphs_l4011; assert_in_epsilon(38.1321, worksheet.lever_graphs_l4011, 0.002); end
  def test_lever_graphs_m4011; assert_in_epsilon(116.93844, worksheet.lever_graphs_m4011, 0.002); end
  def test_lever_graphs_n4011; assert_in_epsilon(251.67185999999998, worksheet.lever_graphs_n4011, 0.002); end
  def test_lever_graphs_o4011; assert_in_epsilon(576.8028, worksheet.lever_graphs_o4011, 0.002); end
  def test_lever_graphs_p4011; assert_in_epsilon(1034.3880000000001, worksheet.lever_graphs_p4011, 0.002); end
  def test_lever_graphs_q4011; assert_in_epsilon(1486.7136000000003, worksheet.lever_graphs_q4011, 0.002); end
  def test_lever_graphs_r4011; assert_in_epsilon(2482.5312, worksheet.lever_graphs_r4011, 0.002); end
  def test_lever_graphs_s4011; assert_in_epsilon(3190.824, worksheet.lever_graphs_s4011, 0.002); end
  def test_lever_graphs_b4012; assert_in_epsilon(4.0, worksheet.lever_graphs_b4012, 0.002); end
  def test_lever_graphs_k4012; assert_in_epsilon(10.422774, worksheet.lever_graphs_k4012, 0.002); end
  def test_lever_graphs_l4012; assert_in_epsilon(38.1321, worksheet.lever_graphs_l4012, 0.002); end
  def test_lever_graphs_m4012; assert_in_epsilon(180.49194, worksheet.lever_graphs_m4012, 0.002); end
  def test_lever_graphs_n4012; assert_in_epsilon(512.0220600000001, worksheet.lever_graphs_n4012, 0.002); end
  def test_lever_graphs_o4012; assert_in_epsilon(1349.964, worksheet.lever_graphs_o4012, 0.002); end
  def test_lever_graphs_p4012; assert_in_epsilon(2268.6408, worksheet.lever_graphs_p4012, 0.002); end
  def test_lever_graphs_q4012; assert_in_epsilon(3334.5864000000006, worksheet.lever_graphs_q4012, 0.002); end
  def test_lever_graphs_r4012; assert_in_epsilon(4056.9048, worksheet.lever_graphs_r4012, 0.002); end
  def test_lever_graphs_s4012; assert_in_epsilon(4937.011200000001, worksheet.lever_graphs_s4012, 0.002); end
  def test_lever_graphs_b3997; assert_equal("Level", worksheet.lever_graphs_b3997); end
  def test_lever_graphs_c3997; assert_equal("1975", worksheet.lever_graphs_c3997); end
  def test_lever_graphs_d3997; assert_equal("1980", worksheet.lever_graphs_d3997); end
  def test_lever_graphs_e3997; assert_equal("1985", worksheet.lever_graphs_e3997); end
  def test_lever_graphs_f3997; assert_equal("1990", worksheet.lever_graphs_f3997); end
  def test_lever_graphs_g3997; assert_equal("1995", worksheet.lever_graphs_g3997); end
  def test_lever_graphs_h3997; assert_equal("2000", worksheet.lever_graphs_h3997); end
  def test_lever_graphs_i3997; assert_equal("2005", worksheet.lever_graphs_i3997); end
  def test_lever_graphs_j3997; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3997, 0.002); end
  def test_lever_graphs_k3997; assert_equal("2011", worksheet.lever_graphs_k3997); end
  def test_lever_graphs_l3997; assert_equal("2015", worksheet.lever_graphs_l3997); end
  def test_lever_graphs_m3997; assert_equal("2020", worksheet.lever_graphs_m3997); end
  def test_lever_graphs_n3997; assert_equal("2025", worksheet.lever_graphs_n3997); end
  def test_lever_graphs_o3997; assert_equal("2030", worksheet.lever_graphs_o3997); end
  def test_lever_graphs_p3997; assert_equal("2035", worksheet.lever_graphs_p3997); end
  def test_lever_graphs_q3997; assert_equal("2040", worksheet.lever_graphs_q3997); end
  def test_lever_graphs_r3997; assert_equal("2045", worksheet.lever_graphs_r3997); end
  def test_lever_graphs_s3997; assert_equal("2050", worksheet.lever_graphs_s3997); end
  def test_lever_graphs_b3998; assert_equal("Historic data", worksheet.lever_graphs_b3998); end
  def test_lever_graphs_b3999; assert_in_delta(1.0, worksheet.lever_graphs_b3999, 0.002); end
  def test_lever_graphs_k3999; assert_in_epsilon(429.96967019999994, worksheet.lever_graphs_k3999, 0.002); end
  def test_lever_graphs_l3999; assert_in_epsilon(734.5031399999999, worksheet.lever_graphs_l3999, 0.002); end
  def test_lever_graphs_m3999; assert_in_epsilon(692.1633599999999, worksheet.lever_graphs_m3999, 0.002); end
  def test_lever_graphs_n3999; assert_in_epsilon(704.7864000000001, worksheet.lever_graphs_n3999, 0.002); end
  def test_lever_graphs_o3999; assert_in_epsilon(468.63036, worksheet.lever_graphs_o3999, 0.002); end
  def test_lever_graphs_p3999; assert_in_delta(0.0, (worksheet.lever_graphs_p3999||0), 0.002); end
  def test_lever_graphs_q3999; assert_in_delta(0.0, (worksheet.lever_graphs_q3999||0), 0.002); end
  def test_lever_graphs_r3999; assert_in_delta(0.0, (worksheet.lever_graphs_r3999||0), 0.002); end
  def test_lever_graphs_s3999; assert_in_delta(0.0, (worksheet.lever_graphs_s3999||0), 0.002); end
  def test_lever_graphs_b4000; assert_in_epsilon(2.0, worksheet.lever_graphs_b4000, 0.002); end
  def test_lever_graphs_k4000; assert_in_epsilon(429.96967019999994, worksheet.lever_graphs_k4000, 0.002); end
  def test_lever_graphs_l4000; assert_in_epsilon(734.5031399999999, worksheet.lever_graphs_l4000, 0.002); end
  def test_lever_graphs_m4000; assert_in_epsilon(1038.24504, worksheet.lever_graphs_m4000, 0.002); end
  def test_lever_graphs_n4000; assert_in_epsilon(1277.0308800000003, worksheet.lever_graphs_n4000, 0.002); end
  def test_lever_graphs_o4000; assert_in_epsilon(1753.8136200000004, worksheet.lever_graphs_o4000, 0.002); end
  def test_lever_graphs_p4000; assert_in_epsilon(2078.06796, worksheet.lever_graphs_p4000, 0.002); end
  def test_lever_graphs_q4000; assert_in_epsilon(2808.6264, worksheet.lever_graphs_q4000, 0.002); end
  def test_lever_graphs_r4000; assert_in_epsilon(3942.0701999999997, worksheet.lever_graphs_r4000, 0.002); end
  def test_lever_graphs_s4000; assert_in_epsilon(4896.687600000001, worksheet.lever_graphs_s4000, 0.002); end
  def test_lever_graphs_b4001; assert_in_epsilon(3.0, worksheet.lever_graphs_b4001, 0.002); end
  def test_lever_graphs_k4001; assert_in_epsilon(429.96967019999994, worksheet.lever_graphs_k4001, 0.002); end
  def test_lever_graphs_l4001; assert_in_epsilon(734.5031399999999, worksheet.lever_graphs_l4001, 0.002); end
  def test_lever_graphs_m4001; assert_in_epsilon(1432.18908, worksheet.lever_graphs_m4001, 0.002); end
  def test_lever_graphs_n4001; assert_in_epsilon(2065.97088, worksheet.lever_graphs_n4001, 0.002); end
  def test_lever_graphs_o4001; assert_in_epsilon(3469.758120000001, worksheet.lever_graphs_o4001, 0.002); end
  def test_lever_graphs_p4001; assert_in_epsilon(4603.464900000001, worksheet.lever_graphs_p4001, 0.002); end
  def test_lever_graphs_q4001; assert_in_epsilon(6229.9962, worksheet.lever_graphs_q4001, 0.002); end
  def test_lever_graphs_r4001; assert_in_epsilon(7986.7026, worksheet.lever_graphs_r4001, 0.002); end
  def test_lever_graphs_s4001; assert_in_epsilon(9993.239999999998, worksheet.lever_graphs_s4001, 0.002); end
  def test_lever_graphs_b4002; assert_in_epsilon(4.0, worksheet.lever_graphs_b4002, 0.002); end
  def test_lever_graphs_k4002; assert_in_epsilon(429.96967019999994, worksheet.lever_graphs_k4002, 0.002); end
  def test_lever_graphs_l4002; assert_in_epsilon(734.5031399999999, worksheet.lever_graphs_l4002, 0.002); end
  def test_lever_graphs_m4002; assert_in_epsilon(1975.24278, worksheet.lever_graphs_m4002, 0.002); end
  def test_lever_graphs_n4002; assert_in_epsilon(3315.6518399999995, worksheet.lever_graphs_n4002, 0.002); end
  def test_lever_graphs_o4002; assert_in_epsilon(5481.55512, worksheet.lever_graphs_o4002, 0.002); end
  def test_lever_graphs_p4002; assert_in_epsilon(7337.142, worksheet.lever_graphs_p4002, 0.002); end
  def test_lever_graphs_q4002; assert_in_epsilon(10911.040200000001, worksheet.lever_graphs_q4002, 0.002); end
  def test_lever_graphs_r4002; assert_in_epsilon(12047.1138, worksheet.lever_graphs_r4002, 0.002); end
  def test_lever_graphs_s4002; assert_in_epsilon(13301.528400000001, worksheet.lever_graphs_s4002, 0.002); end
  def test_lever_graphs_b3957; assert_equal("Level", worksheet.lever_graphs_b3957); end
  def test_lever_graphs_c3957; assert_equal("1975", worksheet.lever_graphs_c3957); end
  def test_lever_graphs_d3957; assert_equal("1980", worksheet.lever_graphs_d3957); end
  def test_lever_graphs_e3957; assert_equal("1985", worksheet.lever_graphs_e3957); end
  def test_lever_graphs_f3957; assert_equal("1990", worksheet.lever_graphs_f3957); end
  def test_lever_graphs_g3957; assert_equal("1995", worksheet.lever_graphs_g3957); end
  def test_lever_graphs_h3957; assert_equal("2000", worksheet.lever_graphs_h3957); end
  def test_lever_graphs_i3957; assert_equal("2005", worksheet.lever_graphs_i3957); end
  def test_lever_graphs_j3957; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3957, 0.002); end
  def test_lever_graphs_k3957; assert_equal("2011", worksheet.lever_graphs_k3957); end
  def test_lever_graphs_l3957; assert_equal("2015", worksheet.lever_graphs_l3957); end
  def test_lever_graphs_m3957; assert_equal("2020", worksheet.lever_graphs_m3957); end
  def test_lever_graphs_n3957; assert_equal("2025", worksheet.lever_graphs_n3957); end
  def test_lever_graphs_o3957; assert_equal("2030", worksheet.lever_graphs_o3957); end
  def test_lever_graphs_p3957; assert_equal("2035", worksheet.lever_graphs_p3957); end
  def test_lever_graphs_q3957; assert_equal("2040", worksheet.lever_graphs_q3957); end
  def test_lever_graphs_r3957; assert_equal("2045", worksheet.lever_graphs_r3957); end
  def test_lever_graphs_s3957; assert_equal("2050", worksheet.lever_graphs_s3957); end
  def test_lever_graphs_b3958; assert_equal("Historic data", worksheet.lever_graphs_b3958); end
  def test_lever_graphs_b3959; assert_in_delta(1.0, worksheet.lever_graphs_b3959, 0.002); end
  def test_lever_graphs_k3959; assert_in_epsilon(61.090254, worksheet.lever_graphs_k3959, 0.002); end
  def test_lever_graphs_l3959; assert_in_epsilon(144.63899999999998, worksheet.lever_graphs_l3959, 0.002); end
  def test_lever_graphs_m3959; assert_in_epsilon(144.63899999999998, worksheet.lever_graphs_m3959, 0.002); end
  def test_lever_graphs_n3959; assert_in_epsilon(111.7665, worksheet.lever_graphs_n3959, 0.002); end
  def test_lever_graphs_o3959; assert_in_epsilon(96.426, worksheet.lever_graphs_o3959, 0.002); end
  def test_lever_graphs_p3959; assert_in_epsilon(61.362, worksheet.lever_graphs_p3959, 0.002); end
  def test_lever_graphs_q3959; assert_in_delta(0.0, (worksheet.lever_graphs_q3959||0), 0.002); end
  def test_lever_graphs_r3959; assert_in_delta(0.0, (worksheet.lever_graphs_r3959||0), 0.002); end
  def test_lever_graphs_s3959; assert_in_delta(0.0, (worksheet.lever_graphs_s3959||0), 0.002); end
  def test_lever_graphs_b3960; assert_in_epsilon(2.0, worksheet.lever_graphs_b3960, 0.002); end
  def test_lever_graphs_k3960; assert_in_epsilon(61.090254, worksheet.lever_graphs_k3960, 0.002); end
  def test_lever_graphs_l3960; assert_in_epsilon(144.63899999999998, worksheet.lever_graphs_l3960, 0.002); end
  def test_lever_graphs_m3960; assert_in_epsilon(272.789154, worksheet.lever_graphs_m3960, 0.002); end
  def test_lever_graphs_n3960; assert_in_epsilon(391.616667, worksheet.lever_graphs_n3960, 0.002); end
  def test_lever_graphs_o3960; assert_in_epsilon(749.6332560000002, worksheet.lever_graphs_o3960, 0.002); end
  def test_lever_graphs_p3960; assert_in_epsilon(1076.2018200000002, worksheet.lever_graphs_p3960, 0.002); end
  def test_lever_graphs_q3960; assert_in_epsilon(1545.0250320000002, worksheet.lever_graphs_q3960, 0.002); end
  def test_lever_graphs_r3960; assert_in_epsilon(2772.620055000001, worksheet.lever_graphs_r3960, 0.002); end
  def test_lever_graphs_s3960; assert_in_epsilon(3980.4433650000005, worksheet.lever_graphs_s3960, 0.002); end
  def test_lever_graphs_b3961; assert_in_epsilon(3.0, worksheet.lever_graphs_b3961, 0.002); end
  def test_lever_graphs_k3961; assert_in_epsilon(61.090254, worksheet.lever_graphs_k3961, 0.002); end
  def test_lever_graphs_l3961; assert_in_epsilon(144.63899999999998, worksheet.lever_graphs_l3961, 0.002); end
  def test_lever_graphs_m3961; assert_in_epsilon(313.314372, worksheet.lever_graphs_m3961, 0.002); end
  def test_lever_graphs_n3961; assert_in_epsilon(516.6505080000001, worksheet.lever_graphs_n3961, 0.002); end
  def test_lever_graphs_o3961; assert_in_epsilon(1135.89828, worksheet.lever_graphs_o3961, 0.002); end
  def test_lever_graphs_p3961; assert_in_epsilon(1873.013688, worksheet.lever_graphs_p3961, 0.002); end
  def test_lever_graphs_q3961; assert_in_epsilon(3088.5072480000003, worksheet.lever_graphs_q3961, 0.002); end
  def test_lever_graphs_r3961; assert_in_epsilon(5166.395504999999, worksheet.lever_graphs_r3961, 0.002); end
  def test_lever_graphs_s3961; assert_in_epsilon(6913.809945, worksheet.lever_graphs_s3961, 0.002); end
  def test_lever_graphs_b3962; assert_in_epsilon(4.0, worksheet.lever_graphs_b3962, 0.002); end
  def test_lever_graphs_k3962; assert_in_epsilon(61.090254, worksheet.lever_graphs_k3962, 0.002); end
  def test_lever_graphs_l3962; assert_in_epsilon(144.63899999999998, worksheet.lever_graphs_l3962, 0.002); end
  def test_lever_graphs_m3962; assert_in_epsilon(2038.1201663480929, worksheet.lever_graphs_m3962, 0.002); end
  def test_lever_graphs_n3962; assert_in_epsilon(4908.521699999999, worksheet.lever_graphs_n3962, 0.002); end
  def test_lever_graphs_o3962; assert_in_epsilon(11399.90210155352, worksheet.lever_graphs_o3962, 0.002); end
  def test_lever_graphs_p3962; assert_in_epsilon(16869.2904, worksheet.lever_graphs_p3962, 0.002); end
  def test_lever_graphs_q3962; assert_in_epsilon(22659.75702823997, worksheet.lever_graphs_q3962, 0.002); end
  def test_lever_graphs_r3962; assert_in_epsilon(36955.2645, worksheet.lever_graphs_r3962, 0.002); end
  def test_lever_graphs_s3962; assert_in_epsilon(46241.115405759076, worksheet.lever_graphs_s3962, 0.002); end
  def test_lever_graphs_b4027; assert_equal("Level", worksheet.lever_graphs_b4027); end
  def test_lever_graphs_c4027; assert_equal("1975", worksheet.lever_graphs_c4027); end
  def test_lever_graphs_d4027; assert_equal("1980", worksheet.lever_graphs_d4027); end
  def test_lever_graphs_e4027; assert_equal("1985", worksheet.lever_graphs_e4027); end
  def test_lever_graphs_f4027; assert_equal("1990", worksheet.lever_graphs_f4027); end
  def test_lever_graphs_g4027; assert_equal("1995", worksheet.lever_graphs_g4027); end
  def test_lever_graphs_h4027; assert_equal("2000", worksheet.lever_graphs_h4027); end
  def test_lever_graphs_i4027; assert_equal("2005", worksheet.lever_graphs_i4027); end
  def test_lever_graphs_j4027; assert_in_epsilon(2010.0, worksheet.lever_graphs_j4027, 0.002); end
  def test_lever_graphs_k4027; assert_equal("2011", worksheet.lever_graphs_k4027); end
  def test_lever_graphs_l4027; assert_equal("2015", worksheet.lever_graphs_l4027); end
  def test_lever_graphs_m4027; assert_equal("2020", worksheet.lever_graphs_m4027); end
  def test_lever_graphs_n4027; assert_equal("2025", worksheet.lever_graphs_n4027); end
  def test_lever_graphs_o4027; assert_equal("2030", worksheet.lever_graphs_o4027); end
  def test_lever_graphs_p4027; assert_equal("2035", worksheet.lever_graphs_p4027); end
  def test_lever_graphs_q4027; assert_equal("2040", worksheet.lever_graphs_q4027); end
  def test_lever_graphs_r4027; assert_equal("2045", worksheet.lever_graphs_r4027); end
  def test_lever_graphs_s4027; assert_equal("2050", worksheet.lever_graphs_s4027); end
  def test_lever_graphs_b4028; assert_equal("Historic data", worksheet.lever_graphs_b4028); end
  def test_lever_graphs_b4029; assert_in_delta(1.0, worksheet.lever_graphs_b4029, 0.002); end
  def test_lever_graphs_k4029; assert_in_delta(0.5543618400000001, worksheet.lever_graphs_k4029, 0.002); end
  def test_lever_graphs_l4029; assert_in_epsilon(1.05192, worksheet.lever_graphs_l4029, 0.002); end
  def test_lever_graphs_m4029; assert_in_epsilon(1.05192, worksheet.lever_graphs_m4029, 0.002); end
  def test_lever_graphs_n4029; assert_in_epsilon(1.7532000000000003, worksheet.lever_graphs_n4029, 0.002); end
  def test_lever_graphs_o4029; assert_in_epsilon(2.1915, worksheet.lever_graphs_o4029, 0.002); end
  def test_lever_graphs_p4029; assert_in_epsilon(2.1915, worksheet.lever_graphs_p4029, 0.002); end
  def test_lever_graphs_q4029; assert_in_epsilon(2.6298, worksheet.lever_graphs_q4029, 0.002); end
  def test_lever_graphs_r4029; assert_in_delta(0.0, (worksheet.lever_graphs_r4029||0), 0.002); end
  def test_lever_graphs_s4029; assert_in_delta(0.0, (worksheet.lever_graphs_s4029||0), 0.002); end
  def test_lever_graphs_b4030; assert_in_epsilon(2.0, worksheet.lever_graphs_b4030, 0.002); end
  def test_lever_graphs_k4030; assert_in_delta(0.5543618400000001, worksheet.lever_graphs_k4030, 0.002); end
  def test_lever_graphs_l4030; assert_in_epsilon(1.05192, worksheet.lever_graphs_l4030, 0.002); end
  def test_lever_graphs_m4030; assert_in_epsilon(2.10384, worksheet.lever_graphs_m4030, 0.002); end
  def test_lever_graphs_n4030; assert_in_epsilon(7.012800000000001, worksheet.lever_graphs_n4030, 0.002); end
  def test_lever_graphs_o4030; assert_in_epsilon(17.532, worksheet.lever_graphs_o4030, 0.002); end
  def test_lever_graphs_p4030; assert_in_epsilon(28.4895, worksheet.lever_graphs_p4030, 0.002); end
  def test_lever_graphs_q4030; assert_in_epsilon(55.2258, worksheet.lever_graphs_q4030, 0.002); end
  def test_lever_graphs_r4030; assert_in_epsilon(73.6344, worksheet.lever_graphs_r4030, 0.002); end
  def test_lever_graphs_s4030; assert_in_epsilon(92.043, worksheet.lever_graphs_s4030, 0.002); end
  def test_lever_graphs_b4031; assert_in_epsilon(3.0, worksheet.lever_graphs_b4031, 0.002); end
  def test_lever_graphs_k4031; assert_in_delta(0.5543618400000001, worksheet.lever_graphs_k4031, 0.002); end
  def test_lever_graphs_l4031; assert_in_epsilon(1.05192, worksheet.lever_graphs_l4031, 0.002); end
  def test_lever_graphs_m4031; assert_in_epsilon(2.10384, worksheet.lever_graphs_m4031, 0.002); end
  def test_lever_graphs_n4031; assert_in_epsilon(10.519200000000001, worksheet.lever_graphs_n4031, 0.002); end
  def test_lever_graphs_o4031; assert_in_epsilon(24.1065, worksheet.lever_graphs_o4031, 0.002); end
  def test_lever_graphs_p4031; assert_in_epsilon(48.213, worksheet.lever_graphs_p4031, 0.002); end
  def test_lever_graphs_q4031; assert_in_epsilon(99.93239999999999, worksheet.lever_graphs_q4031, 0.002); end
  def test_lever_graphs_r4031; assert_in_epsilon(184.086, worksheet.lever_graphs_r4031, 0.002); end
  def test_lever_graphs_s4031; assert_in_epsilon(347.1336, worksheet.lever_graphs_s4031, 0.002); end
  def test_lever_graphs_b4032; assert_in_epsilon(4.0, worksheet.lever_graphs_b4032, 0.002); end
  def test_lever_graphs_k4032; assert_in_delta(0.5543618400000001, worksheet.lever_graphs_k4032, 0.002); end
  def test_lever_graphs_l4032; assert_in_epsilon(1.05192, worksheet.lever_graphs_l4032, 0.002); end
  def test_lever_graphs_m4032; assert_in_epsilon(3.15576, worksheet.lever_graphs_m4032, 0.002); end
  def test_lever_graphs_n4032; assert_in_epsilon(17.532, worksheet.lever_graphs_n4032, 0.002); end
  def test_lever_graphs_o4032; assert_in_epsilon(39.446999999999996, worksheet.lever_graphs_o4032, 0.002); end
  def test_lever_graphs_p4032; assert_in_epsilon(69.47055, worksheet.lever_graphs_p4032, 0.002); end
  def test_lever_graphs_q4032; assert_in_epsilon(147.00582, worksheet.lever_graphs_q4032, 0.002); end
  def test_lever_graphs_r4032; assert_in_epsilon(336.35141999999996, worksheet.lever_graphs_r4032, 0.002); end
  def test_lever_graphs_s4032; assert_in_epsilon(769.47948, worksheet.lever_graphs_s4032, 0.002); end
  def test_lever_graphs_b4047; assert_equal("Level", worksheet.lever_graphs_b4047); end
  def test_lever_graphs_c4047; assert_equal("1975", worksheet.lever_graphs_c4047); end
  def test_lever_graphs_d4047; assert_equal("1980", worksheet.lever_graphs_d4047); end
  def test_lever_graphs_e4047; assert_equal("1985", worksheet.lever_graphs_e4047); end
  def test_lever_graphs_f4047; assert_equal("1990", worksheet.lever_graphs_f4047); end
  def test_lever_graphs_g4047; assert_equal("1995", worksheet.lever_graphs_g4047); end
  def test_lever_graphs_h4047; assert_equal("2000", worksheet.lever_graphs_h4047); end
  def test_lever_graphs_i4047; assert_equal("2005", worksheet.lever_graphs_i4047); end
  def test_lever_graphs_j4047; assert_in_epsilon(2010.0, worksheet.lever_graphs_j4047, 0.002); end
  def test_lever_graphs_k4047; assert_equal("2011", worksheet.lever_graphs_k4047); end
  def test_lever_graphs_l4047; assert_equal("2015", worksheet.lever_graphs_l4047); end
  def test_lever_graphs_m4047; assert_equal("2020", worksheet.lever_graphs_m4047); end
  def test_lever_graphs_n4047; assert_equal("2025", worksheet.lever_graphs_n4047); end
  def test_lever_graphs_o4047; assert_equal("2030", worksheet.lever_graphs_o4047); end
  def test_lever_graphs_p4047; assert_equal("2035", worksheet.lever_graphs_p4047); end
  def test_lever_graphs_q4047; assert_equal("2040", worksheet.lever_graphs_q4047); end
  def test_lever_graphs_r4047; assert_equal("2045", worksheet.lever_graphs_r4047); end
  def test_lever_graphs_s4047; assert_equal("2050", worksheet.lever_graphs_s4047); end
  def test_lever_graphs_b4048; assert_equal("Historic data", worksheet.lever_graphs_b4048); end
  def test_lever_graphs_b4049; assert_in_delta(1.0, worksheet.lever_graphs_b4049, 0.002); end
  def test_lever_graphs_k4049; assert_in_delta(0.5543618400000001, worksheet.lever_graphs_k4049, 0.002); end
  def test_lever_graphs_l4049; assert_in_epsilon(1.157112, worksheet.lever_graphs_l4049, 0.002); end
  def test_lever_graphs_m4049; assert_in_epsilon(1.157112, worksheet.lever_graphs_m4049, 0.002); end
  def test_lever_graphs_n4049; assert_in_epsilon(1.9285200000000002, worksheet.lever_graphs_n4049, 0.002); end
  def test_lever_graphs_o4049; assert_in_epsilon(4.383, worksheet.lever_graphs_o4049, 0.002); end
  def test_lever_graphs_p4049; assert_in_epsilon(6.5745000000000005, worksheet.lever_graphs_p4049, 0.002); end
  def test_lever_graphs_q4049; assert_in_epsilon(11.3958, worksheet.lever_graphs_q4049, 0.002); end
  def test_lever_graphs_r4049; assert_in_epsilon(18.4086, worksheet.lever_graphs_r4049, 0.002); end
  def test_lever_graphs_s4049; assert_in_epsilon(21.0384, worksheet.lever_graphs_s4049, 0.002); end
  def test_lever_graphs_b4050; assert_in_epsilon(2.0, worksheet.lever_graphs_b4050, 0.002); end
  def test_lever_graphs_k4050; assert_in_delta(0.5543618400000001, worksheet.lever_graphs_k4050, 0.002); end
  def test_lever_graphs_l4050; assert_in_epsilon(1.157112, worksheet.lever_graphs_l4050, 0.002); end
  def test_lever_graphs_m4050; assert_in_epsilon(3.15576, worksheet.lever_graphs_m4050, 0.002); end
  def test_lever_graphs_n4050; assert_in_epsilon(17.532000000000004, worksheet.lever_graphs_n4050, 0.002); end
  def test_lever_graphs_o4050; assert_in_epsilon(52.596000000000004, worksheet.lever_graphs_o4050, 0.002); end
  def test_lever_graphs_p4050; assert_in_epsilon(87.66, worksheet.lever_graphs_p4050, 0.002); end
  def test_lever_graphs_q4050; assert_in_epsilon(138.5028, worksheet.lever_graphs_q4050, 0.002); end
  def test_lever_graphs_r4050; assert_in_epsilon(207.75419999999997, worksheet.lever_graphs_r4050, 0.002); end
  def test_lever_graphs_s4050; assert_in_epsilon(255.0906, worksheet.lever_graphs_s4050, 0.002); end
  def test_lever_graphs_b4051; assert_in_epsilon(3.0, worksheet.lever_graphs_b4051, 0.002); end
  def test_lever_graphs_k4051; assert_in_delta(0.5543618400000001, worksheet.lever_graphs_k4051, 0.002); end
  def test_lever_graphs_l4051; assert_in_epsilon(1.157112, worksheet.lever_graphs_l4051, 0.002); end
  def test_lever_graphs_m4051; assert_in_epsilon(4.20768, worksheet.lever_graphs_m4051, 0.002); end
  def test_lever_graphs_n4051; assert_in_epsilon(24.544800000000002, worksheet.lever_graphs_n4051, 0.002); end
  def test_lever_graphs_o4051; assert_in_epsilon(65.745, worksheet.lever_graphs_o4051, 0.002); end
  def test_lever_graphs_p4051; assert_in_epsilon(122.72400000000002, worksheet.lever_graphs_p4051, 0.002); end
  def test_lever_graphs_q4051; assert_in_epsilon(229.23090000000002, worksheet.lever_graphs_q4051, 0.002); end
  def test_lever_graphs_r4051; assert_in_epsilon(402.35940000000005, worksheet.lever_graphs_r4051, 0.002); end
  def test_lever_graphs_s4051; assert_in_epsilon(623.2626, worksheet.lever_graphs_s4051, 0.002); end
  def test_lever_graphs_b4052; assert_in_epsilon(4.0, worksheet.lever_graphs_b4052, 0.002); end
  def test_lever_graphs_k4052; assert_in_delta(0.5543618400000001, worksheet.lever_graphs_k4052, 0.002); end
  def test_lever_graphs_l4052; assert_in_epsilon(1.157112, worksheet.lever_graphs_l4052, 0.002); end
  def test_lever_graphs_m4052; assert_in_epsilon(7.36344, worksheet.lever_graphs_m4052, 0.002); end
  def test_lever_graphs_n4052; assert_in_epsilon(42.076800000000006, worksheet.lever_graphs_n4052, 0.002); end
  def test_lever_graphs_o4052; assert_in_epsilon(105.19200000000001, worksheet.lever_graphs_o4052, 0.002); end
  def test_lever_graphs_p4052; assert_in_epsilon(196.57755, worksheet.lever_graphs_p4052, 0.002); end
  def test_lever_graphs_q4052; assert_in_epsilon(333.28332, worksheet.lever_graphs_q4052, 0.002); end
  def test_lever_graphs_r4052; assert_in_epsilon(644.03802, worksheet.lever_graphs_r4052, 0.002); end
  def test_lever_graphs_s4052; assert_in_epsilon(1145.54088, worksheet.lever_graphs_s4052, 0.002); end
  def test_lever_graphs_b3967; assert_equal("Level", worksheet.lever_graphs_b3967); end
  def test_lever_graphs_c3967; assert_equal("1975", worksheet.lever_graphs_c3967); end
  def test_lever_graphs_d3967; assert_equal("1980", worksheet.lever_graphs_d3967); end
  def test_lever_graphs_e3967; assert_equal("1985", worksheet.lever_graphs_e3967); end
  def test_lever_graphs_f3967; assert_equal("1990", worksheet.lever_graphs_f3967); end
  def test_lever_graphs_g3967; assert_equal("1995", worksheet.lever_graphs_g3967); end
  def test_lever_graphs_h3967; assert_equal("2000", worksheet.lever_graphs_h3967); end
  def test_lever_graphs_i3967; assert_equal("2005", worksheet.lever_graphs_i3967); end
  def test_lever_graphs_j3967; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3967, 0.002); end
  def test_lever_graphs_k3967; assert_equal("2011", worksheet.lever_graphs_k3967); end
  def test_lever_graphs_l3967; assert_equal("2015", worksheet.lever_graphs_l3967); end
  def test_lever_graphs_m3967; assert_equal("2020", worksheet.lever_graphs_m3967); end
  def test_lever_graphs_n3967; assert_equal("2025", worksheet.lever_graphs_n3967); end
  def test_lever_graphs_o3967; assert_equal("2030", worksheet.lever_graphs_o3967); end
  def test_lever_graphs_p3967; assert_equal("2035", worksheet.lever_graphs_p3967); end
  def test_lever_graphs_q3967; assert_equal("2040", worksheet.lever_graphs_q3967); end
  def test_lever_graphs_r3967; assert_equal("2045", worksheet.lever_graphs_r3967); end
  def test_lever_graphs_s3967; assert_equal("2050", worksheet.lever_graphs_s3967); end
  def test_lever_graphs_b3968; assert_equal("Historic data", worksheet.lever_graphs_b3968); end
  def test_lever_graphs_b3969; assert_in_delta(1.0, worksheet.lever_graphs_b3969, 0.002); end
  def test_lever_graphs_k3969; assert_in_epsilon(63.194094, worksheet.lever_graphs_k3969, 0.002); end
  def test_lever_graphs_l3969; assert_in_epsilon(155.1582, worksheet.lever_graphs_l3969, 0.002); end
  def test_lever_graphs_m3969; assert_in_epsilon(197.23499999999999, worksheet.lever_graphs_m3969, 0.002); end
  def test_lever_graphs_n3969; assert_in_epsilon(177.5115, worksheet.lever_graphs_n3969, 0.002); end
  def test_lever_graphs_o3969; assert_in_epsilon(149.022, worksheet.lever_graphs_o3969, 0.002); end
  def test_lever_graphs_p3969; assert_in_epsilon(113.958, worksheet.lever_graphs_p3969, 0.002); end
  def test_lever_graphs_q3969; assert_in_delta(0.0, (worksheet.lever_graphs_q3969||0), 0.002); end
  def test_lever_graphs_r3969; assert_in_delta(0.0, (worksheet.lever_graphs_r3969||0), 0.002); end
  def test_lever_graphs_s3969; assert_in_delta(0.0, (worksheet.lever_graphs_s3969||0), 0.002); end
  def test_lever_graphs_b3970; assert_in_epsilon(2.0, worksheet.lever_graphs_b3970, 0.002); end
  def test_lever_graphs_k3970; assert_in_epsilon(63.194094, worksheet.lever_graphs_k3970, 0.002); end
  def test_lever_graphs_l3970; assert_in_epsilon(155.1582, worksheet.lever_graphs_l3970, 0.002); end
  def test_lever_graphs_m3970; assert_in_epsilon(397.26635400000004, worksheet.lever_graphs_m3970, 0.002); end
  def test_lever_graphs_n3970; assert_in_epsilon(612.958167, worksheet.lever_graphs_n3970, 0.002); end
  def test_lever_graphs_o3970; assert_in_epsilon(1180.9204560000003, worksheet.lever_graphs_o3970, 0.002); end
  def test_lever_graphs_p3970; assert_in_epsilon(1599.53202, worksheet.lever_graphs_p3970, 0.002); end
  def test_lever_graphs_q3970; assert_in_epsilon(2247.1816320000003, worksheet.lever_graphs_q3970, 0.002); end
  def test_lever_graphs_r3970; assert_in_epsilon(3866.616855000001, worksheet.lever_graphs_r3970, 0.002); end
  def test_lever_graphs_s3970; assert_in_epsilon(5340.926565000001, worksheet.lever_graphs_s3970, 0.002); end
  def test_lever_graphs_b3971; assert_in_epsilon(3.0, worksheet.lever_graphs_b3971, 0.002); end
  def test_lever_graphs_k3971; assert_in_epsilon(63.194094, worksheet.lever_graphs_k3971, 0.002); end
  def test_lever_graphs_l3971; assert_in_epsilon(155.1582, worksheet.lever_graphs_l3971, 0.002); end
  def test_lever_graphs_m3971; assert_in_epsilon(458.829972, worksheet.lever_graphs_m3971, 0.002); end
  def test_lever_graphs_n3971; assert_in_epsilon(837.2669580000002, worksheet.lever_graphs_n3971, 0.002); end
  def test_lever_graphs_o3971; assert_in_epsilon(1813.8607200000001, worksheet.lever_graphs_o3971, 0.002); end
  def test_lever_graphs_p3971; assert_in_epsilon(2915.992368, worksheet.lever_graphs_p3971, 0.002); end
  def test_lever_graphs_q3971; assert_in_epsilon(4693.474188, worksheet.lever_graphs_q3971, 0.002); end
  def test_lever_graphs_r3971; assert_in_epsilon(7897.530464999998, worksheet.lever_graphs_r3971, 0.002); end
  def test_lever_graphs_s3971; assert_in_epsilon(10399.522185000002, worksheet.lever_graphs_s3971, 0.002); end
  def test_lever_graphs_b3972; assert_in_epsilon(4.0, worksheet.lever_graphs_b3972, 0.002); end
  def test_lever_graphs_k3972; assert_in_epsilon(63.194094, worksheet.lever_graphs_k3972, 0.002); end
  def test_lever_graphs_l3972; assert_in_epsilon(155.1582, worksheet.lever_graphs_l3972, 0.002); end
  def test_lever_graphs_m3972; assert_in_epsilon(2209.232486348093, worksheet.lever_graphs_m3972, 0.002); end
  def test_lever_graphs_n3972; assert_in_epsilon(5338.494, worksheet.lever_graphs_n3972, 0.002); end
  def test_lever_graphs_o3972; assert_in_epsilon(12437.88416155352, worksheet.lever_graphs_o3972, 0.002); end
  def test_lever_graphs_p3972; assert_in_epsilon(18618.37038, worksheet.lever_graphs_p3972, 0.002); end
  def test_lever_graphs_q3972; assert_in_epsilon(25607.23686823997, worksheet.lever_graphs_q3972, 0.002); end
  def test_lever_graphs_r3972; assert_in_epsilon(42214.51386, worksheet.lever_graphs_r3972, 0.002); end
  def test_lever_graphs_s3972; assert_in_epsilon(53278.81084575908, worksheet.lever_graphs_s3972, 0.002); end
  def test_lever_graphs_b4037; assert_equal("Level", worksheet.lever_graphs_b4037); end
  def test_lever_graphs_c4037; assert_equal("1975", worksheet.lever_graphs_c4037); end
  def test_lever_graphs_d4037; assert_equal("1980", worksheet.lever_graphs_d4037); end
  def test_lever_graphs_e4037; assert_equal("1985", worksheet.lever_graphs_e4037); end
  def test_lever_graphs_f4037; assert_equal("1990", worksheet.lever_graphs_f4037); end
  def test_lever_graphs_g4037; assert_equal("1995", worksheet.lever_graphs_g4037); end
  def test_lever_graphs_h4037; assert_equal("2000", worksheet.lever_graphs_h4037); end
  def test_lever_graphs_i4037; assert_equal("2005", worksheet.lever_graphs_i4037); end
  def test_lever_graphs_j4037; assert_in_epsilon(2010.0, worksheet.lever_graphs_j4037, 0.002); end
  def test_lever_graphs_k4037; assert_equal("2011", worksheet.lever_graphs_k4037); end
  def test_lever_graphs_l4037; assert_equal("2015", worksheet.lever_graphs_l4037); end
  def test_lever_graphs_m4037; assert_equal("2020", worksheet.lever_graphs_m4037); end
  def test_lever_graphs_n4037; assert_equal("2025", worksheet.lever_graphs_n4037); end
  def test_lever_graphs_o4037; assert_equal("2030", worksheet.lever_graphs_o4037); end
  def test_lever_graphs_p4037; assert_equal("2035", worksheet.lever_graphs_p4037); end
  def test_lever_graphs_q4037; assert_equal("2040", worksheet.lever_graphs_q4037); end
  def test_lever_graphs_r4037; assert_equal("2045", worksheet.lever_graphs_r4037); end
  def test_lever_graphs_s4037; assert_equal("2050", worksheet.lever_graphs_s4037); end
  def test_lever_graphs_b4038; assert_equal("Historic data", worksheet.lever_graphs_b4038); end
  def test_lever_graphs_b4039; assert_in_delta(1.0, worksheet.lever_graphs_b4039, 0.002); end
  def test_lever_graphs_k4039; assert_in_delta(0.0, (worksheet.lever_graphs_k4039||0), 0.002); end
  def test_lever_graphs_l4039; assert_in_delta(0.105192, worksheet.lever_graphs_l4039, 0.002); end
  def test_lever_graphs_m4039; assert_in_delta(0.105192, worksheet.lever_graphs_m4039, 0.002); end
  def test_lever_graphs_n4039; assert_in_delta(0.17532000000000003, worksheet.lever_graphs_n4039, 0.002); end
  def test_lever_graphs_o4039; assert_in_epsilon(2.1915, worksheet.lever_graphs_o4039, 0.002); end
  def test_lever_graphs_p4039; assert_in_epsilon(4.383, worksheet.lever_graphs_p4039, 0.002); end
  def test_lever_graphs_q4039; assert_in_epsilon(8.766, worksheet.lever_graphs_q4039, 0.002); end
  def test_lever_graphs_r4039; assert_in_epsilon(18.4086, worksheet.lever_graphs_r4039, 0.002); end
  def test_lever_graphs_s4039; assert_in_epsilon(21.0384, worksheet.lever_graphs_s4039, 0.002); end
  def test_lever_graphs_b4040; assert_in_epsilon(2.0, worksheet.lever_graphs_b4040, 0.002); end
  def test_lever_graphs_k4040; assert_in_delta(0.0, (worksheet.lever_graphs_k4040||0), 0.002); end
  def test_lever_graphs_l4040; assert_in_delta(0.105192, worksheet.lever_graphs_l4040, 0.002); end
  def test_lever_graphs_m4040; assert_in_epsilon(1.05192, worksheet.lever_graphs_m4040, 0.002); end
  def test_lever_graphs_n4040; assert_in_epsilon(10.519200000000001, worksheet.lever_graphs_n4040, 0.002); end
  def test_lever_graphs_o4040; assert_in_epsilon(35.064, worksheet.lever_graphs_o4040, 0.002); end
  def test_lever_graphs_p4040; assert_in_epsilon(59.170500000000004, worksheet.lever_graphs_p4040, 0.002); end
  def test_lever_graphs_q4040; assert_in_epsilon(83.277, worksheet.lever_graphs_q4040, 0.002); end
  def test_lever_graphs_r4040; assert_in_epsilon(134.11979999999997, worksheet.lever_graphs_r4040, 0.002); end
  def test_lever_graphs_s4040; assert_in_epsilon(163.0476, worksheet.lever_graphs_s4040, 0.002); end
  def test_lever_graphs_b4041; assert_in_epsilon(3.0, worksheet.lever_graphs_b4041, 0.002); end
  def test_lever_graphs_k4041; assert_in_delta(0.0, (worksheet.lever_graphs_k4041||0), 0.002); end
  def test_lever_graphs_l4041; assert_in_delta(0.105192, worksheet.lever_graphs_l4041, 0.002); end
  def test_lever_graphs_m4041; assert_in_epsilon(2.10384, worksheet.lever_graphs_m4041, 0.002); end
  def test_lever_graphs_n4041; assert_in_epsilon(14.025600000000003, worksheet.lever_graphs_n4041, 0.002); end
  def test_lever_graphs_o4041; assert_in_epsilon(41.6385, worksheet.lever_graphs_o4041, 0.002); end
  def test_lever_graphs_p4041; assert_in_epsilon(74.51100000000001, worksheet.lever_graphs_p4041, 0.002); end
  def test_lever_graphs_q4041; assert_in_epsilon(129.29850000000002, worksheet.lever_graphs_q4041, 0.002); end
  def test_lever_graphs_r4041; assert_in_epsilon(218.2734, worksheet.lever_graphs_r4041, 0.002); end
  def test_lever_graphs_s4041; assert_in_epsilon(276.129, worksheet.lever_graphs_s4041, 0.002); end
  def test_lever_graphs_b4042; assert_in_epsilon(4.0, worksheet.lever_graphs_b4042, 0.002); end
  def test_lever_graphs_k4042; assert_in_delta(0.0, (worksheet.lever_graphs_k4042||0), 0.002); end
  def test_lever_graphs_l4042; assert_in_delta(0.105192, worksheet.lever_graphs_l4042, 0.002); end
  def test_lever_graphs_m4042; assert_in_epsilon(4.20768, worksheet.lever_graphs_m4042, 0.002); end
  def test_lever_graphs_n4042; assert_in_epsilon(24.544800000000006, worksheet.lever_graphs_n4042, 0.002); end
  def test_lever_graphs_o4042; assert_in_epsilon(65.745, worksheet.lever_graphs_o4042, 0.002); end
  def test_lever_graphs_p4042; assert_in_epsilon(127.107, worksheet.lever_graphs_p4042, 0.002); end
  def test_lever_graphs_q4042; assert_in_epsilon(186.2775, worksheet.lever_graphs_q4042, 0.002); end
  def test_lever_graphs_r4042; assert_in_epsilon(307.68660000000006, worksheet.lever_graphs_r4042, 0.002); end
  def test_lever_graphs_s4042; assert_in_epsilon(376.0614, worksheet.lever_graphs_s4042, 0.002); end
  def test_lever_graphs_b4017; assert_equal("Level", worksheet.lever_graphs_b4017); end
  def test_lever_graphs_c4017; assert_equal("1975", worksheet.lever_graphs_c4017); end
  def test_lever_graphs_d4017; assert_equal("1980", worksheet.lever_graphs_d4017); end
  def test_lever_graphs_e4017; assert_equal("1985", worksheet.lever_graphs_e4017); end
  def test_lever_graphs_f4017; assert_equal("1990", worksheet.lever_graphs_f4017); end
  def test_lever_graphs_g4017; assert_equal("1995", worksheet.lever_graphs_g4017); end
  def test_lever_graphs_h4017; assert_equal("2000", worksheet.lever_graphs_h4017); end
  def test_lever_graphs_i4017; assert_equal("2005", worksheet.lever_graphs_i4017); end
  def test_lever_graphs_j4017; assert_in_epsilon(2010.0, worksheet.lever_graphs_j4017, 0.002); end
  def test_lever_graphs_k4017; assert_equal("2011", worksheet.lever_graphs_k4017); end
  def test_lever_graphs_l4017; assert_equal("2015", worksheet.lever_graphs_l4017); end
  def test_lever_graphs_m4017; assert_equal("2020", worksheet.lever_graphs_m4017); end
  def test_lever_graphs_n4017; assert_equal("2025", worksheet.lever_graphs_n4017); end
  def test_lever_graphs_o4017; assert_equal("2030", worksheet.lever_graphs_o4017); end
  def test_lever_graphs_p4017; assert_equal("2035", worksheet.lever_graphs_p4017); end
  def test_lever_graphs_q4017; assert_equal("2040", worksheet.lever_graphs_q4017); end
  def test_lever_graphs_r4017; assert_equal("2045", worksheet.lever_graphs_r4017); end
  def test_lever_graphs_s4017; assert_equal("2050", worksheet.lever_graphs_s4017); end
  def test_lever_graphs_b4018; assert_equal("Historic data", worksheet.lever_graphs_b4018); end
  def test_lever_graphs_b4019; assert_in_delta(1.0, worksheet.lever_graphs_b4019, 0.002); end
  def test_lever_graphs_k4019; assert_in_epsilon(440.39244419999994, worksheet.lever_graphs_k4019, 0.002); end
  def test_lever_graphs_l4019; assert_in_epsilon(772.63524, worksheet.lever_graphs_l4019, 0.002); end
  def test_lever_graphs_m4019; assert_in_epsilon(735.3797399999999, worksheet.lever_graphs_m4019, 0.002); end
  def test_lever_graphs_n4019; assert_in_epsilon(742.39254, worksheet.lever_graphs_n4019, 0.002); end
  def test_lever_graphs_o4019; assert_in_epsilon(468.63036, worksheet.lever_graphs_o4019, 0.002); end
  def test_lever_graphs_p4019; assert_in_delta(0.0, (worksheet.lever_graphs_p4019||0), 0.002); end
  def test_lever_graphs_q4019; assert_in_delta(0.0, (worksheet.lever_graphs_q4019||0), 0.002); end
  def test_lever_graphs_r4019; assert_in_delta(0.0, (worksheet.lever_graphs_r4019||0), 0.002); end
  def test_lever_graphs_s4019; assert_in_delta(0.0, (worksheet.lever_graphs_s4019||0), 0.002); end
  def test_lever_graphs_b4020; assert_in_epsilon(2.0, worksheet.lever_graphs_b4020, 0.002); end
  def test_lever_graphs_k4020; assert_in_epsilon(440.39244419999994, worksheet.lever_graphs_k4020, 0.002); end
  def test_lever_graphs_l4020; assert_in_epsilon(772.63524, worksheet.lever_graphs_l4020, 0.002); end
  def test_lever_graphs_m4020; assert_in_epsilon(1122.13566, worksheet.lever_graphs_m4020, 0.002); end
  def test_lever_graphs_n4020; assert_in_epsilon(1421.6698800000001, worksheet.lever_graphs_n4020, 0.002); end
  def test_lever_graphs_o4020; assert_in_epsilon(2048.3512200000005, worksheet.lever_graphs_o4020, 0.002); end
  def test_lever_graphs_p4020; assert_in_epsilon(2593.5087599999997, worksheet.lever_graphs_p4020, 0.002); end
  def test_lever_graphs_q4020; assert_in_epsilon(3580.0344, worksheet.lever_graphs_q4020, 0.002); end
  def test_lever_graphs_r4020; assert_in_epsilon(5260.4766, worksheet.lever_graphs_r4020, 0.002); end
  def test_lever_graphs_s4020; assert_in_epsilon(6492.099600000001, worksheet.lever_graphs_s4020, 0.002); end
  def test_lever_graphs_b4021; assert_in_epsilon(3.0, worksheet.lever_graphs_b4021, 0.002); end
  def test_lever_graphs_k4021; assert_in_epsilon(440.39244419999994, worksheet.lever_graphs_k4021, 0.002); end
  def test_lever_graphs_l4021; assert_in_epsilon(772.63524, worksheet.lever_graphs_l4021, 0.002); end
  def test_lever_graphs_m4021; assert_in_epsilon(1549.12752, worksheet.lever_graphs_m4021, 0.002); end
  def test_lever_graphs_n4021; assert_in_epsilon(2317.64274, worksheet.lever_graphs_n4021, 0.002); end
  def test_lever_graphs_o4021; assert_in_epsilon(4046.560920000001, worksheet.lever_graphs_o4021, 0.002); end
  def test_lever_graphs_p4021; assert_in_epsilon(5637.852900000001, worksheet.lever_graphs_p4021, 0.002); end
  def test_lever_graphs_q4021; assert_in_epsilon(7716.7098, worksheet.lever_graphs_q4021, 0.002); end
  def test_lever_graphs_r4021; assert_in_epsilon(10469.2338, worksheet.lever_graphs_r4021, 0.002); end
  def test_lever_graphs_s4021; assert_in_epsilon(13184.063999999998, worksheet.lever_graphs_s4021, 0.002); end
  def test_lever_graphs_b4022; assert_in_epsilon(4.0, worksheet.lever_graphs_b4022, 0.002); end
  def test_lever_graphs_k4022; assert_in_epsilon(440.39244419999994, worksheet.lever_graphs_k4022, 0.002); end
  def test_lever_graphs_l4022; assert_in_epsilon(772.63524, worksheet.lever_graphs_l4022, 0.002); end
  def test_lever_graphs_m4022; assert_in_epsilon(2155.73472, worksheet.lever_graphs_m4022, 0.002); end
  def test_lever_graphs_n4022; assert_in_epsilon(3827.6739, worksheet.lever_graphs_n4022, 0.002); end
  def test_lever_graphs_o4022; assert_in_epsilon(6831.51912, worksheet.lever_graphs_o4022, 0.002); end
  def test_lever_graphs_p4022; assert_in_epsilon(9605.7828, worksheet.lever_graphs_p4022, 0.002); end
  def test_lever_graphs_q4022; assert_in_epsilon(14245.626600000001, worksheet.lever_graphs_q4022, 0.002); end
  def test_lever_graphs_r4022; assert_in_epsilon(16104.0186, worksheet.lever_graphs_r4022, 0.002); end
  def test_lever_graphs_s4022; assert_in_epsilon(18238.539600000004, worksheet.lever_graphs_s4022, 0.002); end
  def test_lever_graphs_b2259; assert_equal("Technology code", worksheet.lever_graphs_b2259); end
  def test_lever_graphs_c2259; assert_equal("1975", worksheet.lever_graphs_c2259); end
  def test_lever_graphs_d2259; assert_equal("1980", worksheet.lever_graphs_d2259); end
  def test_lever_graphs_e2259; assert_equal("1985", worksheet.lever_graphs_e2259); end
  def test_lever_graphs_f2259; assert_equal("1990", worksheet.lever_graphs_f2259); end
  def test_lever_graphs_g2259; assert_equal("1995", worksheet.lever_graphs_g2259); end
  def test_lever_graphs_h2259; assert_equal("2000", worksheet.lever_graphs_h2259); end
  def test_lever_graphs_i2259; assert_equal("2005", worksheet.lever_graphs_i2259); end
  def test_lever_graphs_j2259; assert_equal("2010", worksheet.lever_graphs_j2259); end
  def test_lever_graphs_k2259; assert_equal("2011", worksheet.lever_graphs_k2259); end
  def test_lever_graphs_b2260; assert_equal("walk.passenger.urban", worksheet.lever_graphs_b2260); end
  def test_lever_graphs_k2260; assert_in_delta(0.0, (worksheet.lever_graphs_k2260||0), 0.002); end
  def test_lever_graphs_b2261; assert_equal("bike.passenger.urban", worksheet.lever_graphs_b2261); end
  def test_lever_graphs_k2261; assert_in_delta(0.0, (worksheet.lever_graphs_k2261||0), 0.002); end
  def test_lever_graphs_b2262; assert_equal("motorbike.passenger.urban.fuel", worksheet.lever_graphs_b2262); end
  def test_lever_graphs_k2262; assert_in_epsilon(4.320306698732465, worksheet.lever_graphs_k2262, 0.002); end
  def test_lever_graphs_b2263; assert_equal("motorbike.passenger.urban.elec", worksheet.lever_graphs_b2263); end
  def test_lever_graphs_k2263; assert_in_epsilon(1.198701595980695, worksheet.lever_graphs_k2263, 0.002); end
  def test_lever_graphs_b2264; assert_equal("car.passenger.urban.ICE.liquid", worksheet.lever_graphs_b2264); end
  def test_lever_graphs_k2264; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2264, 0.002); end
  def test_lever_graphs_b2265; assert_equal("car.passenger.urban.ICE.gas", worksheet.lever_graphs_b2265); end
  def test_lever_graphs_k2265; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2265, 0.002); end
  def test_lever_graphs_b2266; assert_equal("car.passenger.urban.PH", worksheet.lever_graphs_b2266); end
  def test_lever_graphs_k2266; assert_in_epsilon(6.537621244105451, worksheet.lever_graphs_k2266, 0.002); end
  def test_lever_graphs_b2267; assert_equal("car.passenger.urban.EV", worksheet.lever_graphs_b2267); end
  def test_lever_graphs_k2267; assert_in_epsilon(2.39740319196139, worksheet.lever_graphs_k2267, 0.002); end
  def test_lever_graphs_b2268; assert_equal("car.passenger.urban.H2", worksheet.lever_graphs_b2268); end
  def test_lever_graphs_k2268; assert_in_epsilon(7.894395740652819, worksheet.lever_graphs_k2268, 0.002); end
  def test_lever_graphs_b2269; assert_equal("bus.passenger.urban.ICE.liquid", worksheet.lever_graphs_b2269); end
  def test_lever_graphs_k2269; assert_in_epsilon(32.331711258141304, worksheet.lever_graphs_k2269, 0.002); end
  def test_lever_graphs_b2270; assert_equal("bus.passenger.urban.ICE.gas", worksheet.lever_graphs_b2270); end
  def test_lever_graphs_k2270; assert_in_epsilon(32.331711258141304, worksheet.lever_graphs_k2270, 0.002); end
  def test_lever_graphs_b2271; assert_equal("bus.passenger.urban.PH", worksheet.lever_graphs_b2271); end
  def test_lever_graphs_k2271; assert_in_epsilon(28.138535157781295, worksheet.lever_graphs_k2271, 0.002); end
  def test_lever_graphs_b2272; assert_equal("bus.passenger.urban.EV", worksheet.lever_graphs_b2272); end
  def test_lever_graphs_k2272; assert_in_epsilon(7.13287824899877, worksheet.lever_graphs_k2272, 0.002); end
  def test_lever_graphs_b2273; assert_equal("bus.passenger.urban.H2", worksheet.lever_graphs_b2273); end
  def test_lever_graphs_k2273; assert_in_epsilon(19.615415184746603, worksheet.lever_graphs_k2273, 0.002); end
  def test_lever_graphs_b2274; assert_equal("train.passenger.urban.fuel", worksheet.lever_graphs_b2274); end
  def test_lever_graphs_k2274; assert_in_epsilon(347.9830499369259, worksheet.lever_graphs_k2274, 0.002); end
  def test_lever_graphs_b2275; assert_equal("train.passenger.urban.elec", worksheet.lever_graphs_b2275); end
  def test_lever_graphs_k2275; assert_in_epsilon(143.2773007442537, worksheet.lever_graphs_k2275, 0.002); end
  def test_lever_graphs_b2276; assert_equal("walk.passenger.rural", worksheet.lever_graphs_b2276); end
  def test_lever_graphs_k2276; assert_in_delta(0.0, (worksheet.lever_graphs_k2276||0), 0.002); end
  def test_lever_graphs_b2277; assert_equal("bike.passenger.rural", worksheet.lever_graphs_b2277); end
  def test_lever_graphs_k2277; assert_in_delta(0.0, (worksheet.lever_graphs_k2277||0), 0.002); end
  def test_lever_graphs_b2278; assert_equal("motorbike.passenger.rural.fuel", worksheet.lever_graphs_b2278); end
  def test_lever_graphs_k2278; assert_in_epsilon(4.320306698732465, worksheet.lever_graphs_k2278, 0.002); end
  def test_lever_graphs_b2279; assert_equal("motorbike.passenger.rural.elec", worksheet.lever_graphs_b2279); end
  def test_lever_graphs_k2279; assert_in_epsilon(1.198701595980695, worksheet.lever_graphs_k2279, 0.002); end
  def test_lever_graphs_b2280; assert_equal("car.passenger.rural.ICE.liquid", worksheet.lever_graphs_b2280); end
  def test_lever_graphs_k2280; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2280, 0.002); end
  def test_lever_graphs_b2281; assert_equal("car.passenger.rural.ICE.gas", worksheet.lever_graphs_b2281); end
  def test_lever_graphs_k2281; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2281, 0.002); end
  def test_lever_graphs_b2282; assert_equal("car.passenger.rural.PH", worksheet.lever_graphs_b2282); end
  def test_lever_graphs_k2282; assert_in_epsilon(6.537621244105451, worksheet.lever_graphs_k2282, 0.002); end
  def test_lever_graphs_b2283; assert_equal("car.passenger.rural.EV", worksheet.lever_graphs_b2283); end
  def test_lever_graphs_k2283; assert_in_epsilon(2.39740319196139, worksheet.lever_graphs_k2283, 0.002); end
  def test_lever_graphs_b2284; assert_equal("car.passenger.rural.H2", worksheet.lever_graphs_b2284); end
  def test_lever_graphs_k2284; assert_in_epsilon(7.894395740652819, worksheet.lever_graphs_k2284, 0.002); end
  def test_lever_graphs_b2285; assert_equal("bus.passenger.rural.ICE.liquid", worksheet.lever_graphs_b2285); end
  def test_lever_graphs_k2285; assert_in_epsilon(32.331711258141304, worksheet.lever_graphs_k2285, 0.002); end
  def test_lever_graphs_b2286; assert_equal("bus.passenger.rural.ICE.gas", worksheet.lever_graphs_b2286); end
  def test_lever_graphs_k2286; assert_in_epsilon(32.331711258141304, worksheet.lever_graphs_k2286, 0.002); end
  def test_lever_graphs_b2287; assert_equal("bus.passenger.rural.PH", worksheet.lever_graphs_b2287); end
  def test_lever_graphs_k2287; assert_in_epsilon(28.138535157781295, worksheet.lever_graphs_k2287, 0.002); end
  def test_lever_graphs_b2288; assert_equal("bus.passenger.rural.EV", worksheet.lever_graphs_b2288); end
  def test_lever_graphs_k2288; assert_in_epsilon(7.13287824899877, worksheet.lever_graphs_k2288, 0.002); end
  def test_lever_graphs_b2289; assert_equal("bus.passenger.rural.H2", worksheet.lever_graphs_b2289); end
  def test_lever_graphs_k2289; assert_in_epsilon(19.615415184746603, worksheet.lever_graphs_k2289, 0.002); end
  def test_lever_graphs_b2290; assert_equal("train.passenger.rural.fuel", worksheet.lever_graphs_b2290); end
  def test_lever_graphs_k2290; assert_in_epsilon(347.9830499369259, worksheet.lever_graphs_k2290, 0.002); end
  def test_lever_graphs_b2291; assert_equal("train.passenger.rural.elec", worksheet.lever_graphs_b2291); end
  def test_lever_graphs_k2291; assert_in_epsilon(143.2773007442537, worksheet.lever_graphs_k2291, 0.002); end
  def test_lever_graphs_b2292; assert_equal("plane.passenger.international.short.fuel", worksheet.lever_graphs_b2292); end
  def test_lever_graphs_k2292; assert_in_epsilon(955.579493787423, worksheet.lever_graphs_k2292, 0.002); end
  def test_lever_graphs_b2293; assert_equal("plane.passenger.international.short.H2", worksheet.lever_graphs_b2293); end
  def test_lever_graphs_k2293; assert_in_epsilon(955.579493787423, worksheet.lever_graphs_k2293, 0.002); end
  def test_lever_graphs_b2294; assert_equal("plane.passenger.international.long.fuel", worksheet.lever_graphs_b2294); end
  def test_lever_graphs_k2294; assert_in_epsilon(687.3122998348063, worksheet.lever_graphs_k2294, 0.002); end
  def test_lever_graphs_b2295; assert_equal("plane.passenger.international.long.H2", worksheet.lever_graphs_b2295); end
  def test_lever_graphs_k2295; assert_in_epsilon(687.3122998348063, worksheet.lever_graphs_k2295, 0.002); end
  def test_lever_graphs_b2296; assert_equal("train.passenger.international.fuel", worksheet.lever_graphs_b2296); end
  def test_lever_graphs_k2296; assert_in_epsilon(347.9830499369259, worksheet.lever_graphs_k2296, 0.002); end
  def test_lever_graphs_b2297; assert_equal("train.passenger.international.elec", worksheet.lever_graphs_b2297); end
  def test_lever_graphs_k2297; assert_in_epsilon(143.2773007442537, worksheet.lever_graphs_k2297, 0.002); end
  def test_lever_graphs_b2342; assert_equal("Technology code", worksheet.lever_graphs_b2342); end
  def test_lever_graphs_c2342; assert_equal("1975", worksheet.lever_graphs_c2342); end
  def test_lever_graphs_d2342; assert_equal("1980", worksheet.lever_graphs_d2342); end
  def test_lever_graphs_e2342; assert_equal("1985", worksheet.lever_graphs_e2342); end
  def test_lever_graphs_f2342; assert_equal("1990", worksheet.lever_graphs_f2342); end
  def test_lever_graphs_g2342; assert_equal("1995", worksheet.lever_graphs_g2342); end
  def test_lever_graphs_h2342; assert_equal("2000", worksheet.lever_graphs_h2342); end
  def test_lever_graphs_i2342; assert_equal("2005", worksheet.lever_graphs_i2342); end
  def test_lever_graphs_j2342; assert_equal("2010", worksheet.lever_graphs_j2342); end
  def test_lever_graphs_k2342; assert_equal("2011", worksheet.lever_graphs_k2342); end
  def test_lever_graphs_b2343; assert_equal("light.truck.domestic.ICE.liquid", worksheet.lever_graphs_b2343); end
  def test_lever_graphs_k2343; assert_in_epsilon(9.96, worksheet.lever_graphs_k2343, 0.002); end
  def test_lever_graphs_b2344; assert_equal("light.truck.domestic.ICE.gas", worksheet.lever_graphs_b2344); end
  def test_lever_graphs_k2344; assert_in_epsilon(9.96, worksheet.lever_graphs_k2344, 0.002); end
  def test_lever_graphs_b2345; assert_equal("light.truck.domestic.PH", worksheet.lever_graphs_b2345); end
  def test_lever_graphs_k2345; assert_in_epsilon(9.060000000000002, worksheet.lever_graphs_k2345, 0.002); end
  def test_lever_graphs_b2346; assert_equal("light.truck.domestic.EV", worksheet.lever_graphs_b2346); end
  def test_lever_graphs_k2346; assert_in_epsilon(3.3999999999999995, worksheet.lever_graphs_k2346, 0.002); end
  def test_lever_graphs_b2347; assert_equal("light.truck.domestic.H2", worksheet.lever_graphs_b2347); end
  def test_lever_graphs_k2347; assert_in_epsilon(7.62, worksheet.lever_graphs_k2347, 0.002); end
  def test_lever_graphs_b2348; assert_equal("heavy.truck.domestic.ICE.liquid", worksheet.lever_graphs_b2348); end
  def test_lever_graphs_k2348; assert_in_epsilon(31.970000000000002, worksheet.lever_graphs_k2348, 0.002); end
  def test_lever_graphs_b2349; assert_equal("heavy.truck.domestic.ICE.gas", worksheet.lever_graphs_b2349); end
  def test_lever_graphs_k2349; assert_in_epsilon(31.970000000000002, worksheet.lever_graphs_k2349, 0.002); end
  def test_lever_graphs_b2350; assert_equal("heavy.truck.domestic.PH", worksheet.lever_graphs_b2350); end
  def test_lever_graphs_k2350; assert_in_epsilon(28.57, worksheet.lever_graphs_k2350, 0.002); end
  def test_lever_graphs_b2351; assert_equal("heavy.truck.domestic.EV", worksheet.lever_graphs_b2351); end
  def test_lever_graphs_k2351; assert_in_epsilon(12.37, worksheet.lever_graphs_k2351, 0.002); end
  def test_lever_graphs_b2352; assert_equal("heavy.truck.domestic.H2", worksheet.lever_graphs_b2352); end
  def test_lever_graphs_k2352; assert_in_epsilon(26.35, worksheet.lever_graphs_k2352, 0.002); end
  def test_lever_graphs_b2353; assert_equal("train.freight.domestic.fuel", worksheet.lever_graphs_b2353); end
  def test_lever_graphs_k2353; assert_in_epsilon(380.8196231999734, worksheet.lever_graphs_k2353, 0.002); end
  def test_lever_graphs_b2354; assert_equal("train.freight.domestic.elec", worksheet.lever_graphs_b2354); end
  def test_lever_graphs_k2354; assert_in_epsilon(380.8196231999734, worksheet.lever_graphs_k2354, 0.002); end
  def test_lever_graphs_b2355; assert_equal("ship.freight.domestic.fuel", worksheet.lever_graphs_b2355); end
  def test_lever_graphs_k2355; assert_in_epsilon(3852.2580065848556, worksheet.lever_graphs_k2355, 0.002); end
  def test_lever_graphs_b2356; assert_equal("ship.freight.domestic.H2", worksheet.lever_graphs_b2356); end
  def test_lever_graphs_k2356; assert_in_epsilon(3852.2580065848556, worksheet.lever_graphs_k2356, 0.002); end
  def test_lever_graphs_b2357; assert_equal("heavy.truck.international.ICE.liquid", worksheet.lever_graphs_b2357); end
  def test_lever_graphs_k2357; assert_in_epsilon(31.970000000000002, worksheet.lever_graphs_k2357, 0.002); end
  def test_lever_graphs_b2358; assert_equal("heavy.truck.international.ICE.gas", worksheet.lever_graphs_b2358); end
  def test_lever_graphs_k2358; assert_in_epsilon(31.970000000000002, worksheet.lever_graphs_k2358, 0.002); end
  def test_lever_graphs_b2359; assert_equal("heavy.truck.international.PH", worksheet.lever_graphs_b2359); end
  def test_lever_graphs_k2359; assert_in_epsilon(28.57, worksheet.lever_graphs_k2359, 0.002); end
  def test_lever_graphs_b2360; assert_equal("heavy.truck.international.EV", worksheet.lever_graphs_b2360); end
  def test_lever_graphs_k2360; assert_in_epsilon(12.37, worksheet.lever_graphs_k2360, 0.002); end
  def test_lever_graphs_b2361; assert_equal("heavy.truck.international.H2", worksheet.lever_graphs_b2361); end
  def test_lever_graphs_k2361; assert_in_epsilon(26.35, worksheet.lever_graphs_k2361, 0.002); end
  def test_lever_graphs_b2362; assert_equal("train.freight.international.fuel", worksheet.lever_graphs_b2362); end
  def test_lever_graphs_k2362; assert_in_epsilon(380.8196231999734, worksheet.lever_graphs_k2362, 0.002); end
  def test_lever_graphs_b2363; assert_equal("train.freight.international.elec", worksheet.lever_graphs_b2363); end
  def test_lever_graphs_k2363; assert_in_epsilon(380.8196231999734, worksheet.lever_graphs_k2363, 0.002); end
  def test_lever_graphs_b2364; assert_equal("ship.freight.international.fuel", worksheet.lever_graphs_b2364); end
  def test_lever_graphs_k2364; assert_in_epsilon(9064.136486082014, worksheet.lever_graphs_k2364, 0.002); end
  def test_lever_graphs_b2365; assert_equal("ship.freight.international.H2", worksheet.lever_graphs_b2365); end
  def test_lever_graphs_k2365; assert_in_epsilon(9064.136486082014, worksheet.lever_graphs_k2365, 0.002); end
  def test_lever_graphs_b2366; assert_equal("plane.freight.international.fuel", worksheet.lever_graphs_b2366); end
  def test_lever_graphs_k2366; assert_in_epsilon(1200.0000000000002, worksheet.lever_graphs_k2366, 0.002); end
  def test_lever_graphs_b2367; assert_equal("plane.freight.international.H2", worksheet.lever_graphs_b2367); end
  def test_lever_graphs_k2367; assert_in_epsilon(1200.0000000000002, worksheet.lever_graphs_k2367, 0.002); end
  def test_lever_graphs_b3548; assert_equal("Type of travel", worksheet.lever_graphs_b3548); end
  def test_lever_graphs_c3548; assert_equal("Level", worksheet.lever_graphs_c3548); end
  def test_lever_graphs_d3548; assert_equal("Type of city", worksheet.lever_graphs_d3548); end
  def test_lever_graphs_e3548; assert_equal("1985", worksheet.lever_graphs_e3548); end
  def test_lever_graphs_f3548; assert_equal("1990", worksheet.lever_graphs_f3548); end
  def test_lever_graphs_g3548; assert_equal("1995", worksheet.lever_graphs_g3548); end
  def test_lever_graphs_h3548; assert_equal("2000", worksheet.lever_graphs_h3548); end
  def test_lever_graphs_i3548; assert_equal("2005", worksheet.lever_graphs_i3548); end
  def test_lever_graphs_j3548; assert_equal("2010", worksheet.lever_graphs_j3548); end
  def test_lever_graphs_k3548; assert_equal("2011", worksheet.lever_graphs_k3548); end
  def test_lever_graphs_l3548; assert_equal("2015", worksheet.lever_graphs_l3548); end
  def test_lever_graphs_m3548; assert_equal("2020", worksheet.lever_graphs_m3548); end
  def test_lever_graphs_n3548; assert_equal("2025", worksheet.lever_graphs_n3548); end
  def test_lever_graphs_o3548; assert_equal("2030", worksheet.lever_graphs_o3548); end
  def test_lever_graphs_p3548; assert_equal("2035", worksheet.lever_graphs_p3548); end
  def test_lever_graphs_q3548; assert_equal("2040", worksheet.lever_graphs_q3548); end
  def test_lever_graphs_r3548; assert_equal("2045", worksheet.lever_graphs_r3548); end
  def test_lever_graphs_s3548; assert_equal("2050", worksheet.lever_graphs_s3548); end
  def test_lever_graphs_b3549; assert_equal("Urban", worksheet.lever_graphs_b3549); end
  def test_lever_graphs_c3549; assert_in_delta(1.0, worksheet.lever_graphs_c3549, 0.002); end
  def test_lever_graphs_d3549; assert_equal("Automobile city", worksheet.lever_graphs_d3549); end
  def test_lever_graphs_k3549; assert_in_epsilon(11737.0, worksheet.lever_graphs_k3549, 0.002); end
  def test_lever_graphs_l3549; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l3549, 0.002); end
  def test_lever_graphs_m3549; assert_in_epsilon(12302.73761329493, worksheet.lever_graphs_m3549, 0.002); end
  def test_lever_graphs_n3549; assert_in_epsilon(12600.851505289062, worksheet.lever_graphs_n3549, 0.002); end
  def test_lever_graphs_o3549; assert_in_epsilon(12721.015350442445, worksheet.lever_graphs_o3549, 0.002); end
  def test_lever_graphs_p3549; assert_in_epsilon(12842.325098289466, worksheet.lever_graphs_p3549, 0.002); end
  def test_lever_graphs_q3549; assert_in_epsilon(12964.791676351475, worksheet.lever_graphs_q3549, 0.002); end
  def test_lever_graphs_r3549; assert_in_epsilon(13088.426116356506, worksheet.lever_graphs_r3549, 0.002); end
  def test_lever_graphs_s3549; assert_in_epsilon(13101.519778890486, worksheet.lever_graphs_s3549, 0.002); end
  def test_lever_graphs_b3550; assert_equal("Urban", worksheet.lever_graphs_b3550); end
  def test_lever_graphs_c3550; assert_in_epsilon(2.0, worksheet.lever_graphs_c3550, 0.002); end
  def test_lever_graphs_d3550; assert_equal("Automobile city", worksheet.lever_graphs_d3550); end
  def test_lever_graphs_k3550; assert_in_epsilon(11737.0, worksheet.lever_graphs_k3550, 0.002); end
  def test_lever_graphs_l3550; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l3550, 0.002); end
  def test_lever_graphs_m3550; assert_in_epsilon(12302.73761329493, worksheet.lever_graphs_m3550, 0.002); end
  def test_lever_graphs_n3550; assert_in_epsilon(12420.058594095803, worksheet.lever_graphs_n3550, 0.002); end
  def test_lever_graphs_o3550; assert_in_epsilon(12538.498367556385, worksheet.lever_graphs_o3550, 0.002); end
  def test_lever_graphs_p3550; assert_in_epsilon(12658.067602672169, worksheet.lever_graphs_p3550, 0.002); end
  def test_lever_graphs_q3550; assert_in_epsilon(12778.777070179987, worksheet.lever_graphs_q3550, 0.002); end
  def test_lever_graphs_r3550; assert_in_epsilon(12651.499429280722, worksheet.lever_graphs_r3550, 0.002); end
  def test_lever_graphs_s3550; assert_in_epsilon(12525.489483856847, worksheet.lever_graphs_s3550, 0.002); end
  def test_lever_graphs_b3551; assert_equal("Urban", worksheet.lever_graphs_b3551); end
  def test_lever_graphs_c3551; assert_in_epsilon(3.0, worksheet.lever_graphs_c3551, 0.002); end
  def test_lever_graphs_d3551; assert_equal("Automobile city", worksheet.lever_graphs_d3551); end
  def test_lever_graphs_k3551; assert_in_epsilon(11737.0, worksheet.lever_graphs_k3551, 0.002); end
  def test_lever_graphs_l3551; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l3551, 0.002); end
  def test_lever_graphs_m3551; assert_in_epsilon(12180.784397392952, worksheet.lever_graphs_m3551, 0.002); end
  def test_lever_graphs_n3551; assert_in_epsilon(12272.414759432238, worksheet.lever_graphs_n3551, 0.002); end
  def test_lever_graphs_o3551; assert_in_epsilon(12272.414759432238, worksheet.lever_graphs_o3551, 0.002); end
  def test_lever_graphs_p3551; assert_in_epsilon(12150.180527616512, worksheet.lever_graphs_p3551, 0.002); end
  def test_lever_graphs_q3551; assert_in_epsilon(11969.018060318878, worksheet.lever_graphs_q3551, 0.002); end
  def test_lever_graphs_r3551; assert_in_epsilon(11731.54509713868, worksheet.lever_graphs_r3551, 0.002); end
  def test_lever_graphs_s3551; assert_in_epsilon(11441.174728177544, worksheet.lever_graphs_s3551, 0.002); end
  def test_lever_graphs_b3552; assert_equal("Urban", worksheet.lever_graphs_b3552); end
  def test_lever_graphs_c3552; assert_in_epsilon(4.0, worksheet.lever_graphs_c3552, 0.002); end
  def test_lever_graphs_d3552; assert_equal("Automobile city", worksheet.lever_graphs_d3552); end
  def test_lever_graphs_k3552; assert_in_epsilon(11737.0, worksheet.lever_graphs_k3552, 0.002); end
  def test_lever_graphs_l3552; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l3552, 0.002); end
  def test_lever_graphs_m3552; assert_in_epsilon(12132.274764133377, worksheet.lever_graphs_m3552, 0.002); end
  def test_lever_graphs_n3552; assert_in_epsilon(12193.057582085099, worksheet.lever_graphs_n3552, 0.002); end
  def test_lever_graphs_o3552; assert_in_epsilon(12132.214102880871, worksheet.lever_graphs_o3552, 0.002); end
  def test_lever_graphs_p3552; assert_in_epsilon(11951.319519819708, worksheet.lever_graphs_p3552, 0.002); end
  def test_lever_graphs_q3552; assert_in_epsilon(11714.197706987443, worksheet.lever_graphs_q3552, 0.002); end
  def test_lever_graphs_r3552; assert_in_epsilon(11424.256707562632, worksheet.lever_graphs_r3552, 0.002); end
  def test_lever_graphs_s3552; assert_in_epsilon(11085.617136296338, worksheet.lever_graphs_s3552, 0.002); end
  def test_lever_graphs_b3553; assert_equal("Urban", worksheet.lever_graphs_b3553); end
  def test_lever_graphs_c3553; assert_in_delta(1.0, worksheet.lever_graphs_c3553, 0.002); end
  def test_lever_graphs_d3553; assert_equal("Transit city", worksheet.lever_graphs_d3553); end
  def test_lever_graphs_k3553; assert_in_epsilon(8237.0, worksheet.lever_graphs_k3553, 0.002); end
  def test_lever_graphs_l3553; assert_in_epsilon(8915.99370192, worksheet.lever_graphs_l3553, 0.002); end
  def test_lever_graphs_m3553; assert_in_epsilon(9605.057393812243, worksheet.lever_graphs_m3553, 0.002); end
  def test_lever_graphs_n3553; assert_in_epsilon(10195.359093722229, worksheet.lever_graphs_n3553, 0.002); end
  def test_lever_graphs_o3553; assert_in_epsilon(10583.46312243392, worksheet.lever_graphs_o3553, 0.002); end
  def test_lever_graphs_p3553; assert_in_epsilon(10986.341004201457, worksheet.lever_graphs_p3553, 0.002); end
  def test_lever_graphs_q3553; assert_in_epsilon(11263.759881850438, worksheet.lever_graphs_q3553, 0.002); end
  def test_lever_graphs_r3553; assert_in_epsilon(11548.183933801452, worksheet.lever_graphs_r3553, 0.002); end
  def test_lever_graphs_s3553; assert_in_epsilon(11664.128625275758, worksheet.lever_graphs_s3553, 0.002); end
  def test_lever_graphs_b3554; assert_equal("Urban", worksheet.lever_graphs_b3554); end
  def test_lever_graphs_c3554; assert_in_epsilon(2.0, worksheet.lever_graphs_c3554, 0.002); end
  def test_lever_graphs_d3554; assert_equal("Transit city", worksheet.lever_graphs_d3554); end
  def test_lever_graphs_k3554; assert_in_epsilon(8237.0, worksheet.lever_graphs_k3554, 0.002); end
  def test_lever_graphs_l3554; assert_in_epsilon(8915.99370192, worksheet.lever_graphs_l3554, 0.002); end
  def test_lever_graphs_m3554; assert_in_epsilon(9605.057393812243, worksheet.lever_graphs_m3554, 0.002); end
  def test_lever_graphs_n3554; assert_in_epsilon(9970.690564383047, worksheet.lever_graphs_n3554, 0.002); end
  def test_lever_graphs_o3554; assert_in_epsilon(10350.242195816749, worksheet.lever_graphs_o3554, 0.002); end
  def test_lever_graphs_p3554; assert_in_epsilon(10611.598781440709, worksheet.lever_graphs_p3554, 0.002); end
  def test_lever_graphs_q3554; assert_in_epsilon(10879.554948364963, worksheet.lever_graphs_q3554, 0.002); end
  def test_lever_graphs_r3554; assert_in_epsilon(10988.786551281655, worksheet.lever_graphs_r3554, 0.002); end
  def test_lever_graphs_s3554; assert_in_epsilon(10999.779734226748, worksheet.lever_graphs_s3554, 0.002); end
  def test_lever_graphs_b3555; assert_equal("Urban", worksheet.lever_graphs_b3555); end
  def test_lever_graphs_c3555; assert_in_epsilon(3.0, worksheet.lever_graphs_c3555, 0.002); end
  def test_lever_graphs_d3555; assert_equal("Transit city", worksheet.lever_graphs_d3555); end
  def test_lever_graphs_k3555; assert_in_epsilon(8237.0, worksheet.lever_graphs_k3555, 0.002); end
  def test_lever_graphs_l3555; assert_in_epsilon(8915.99370192, worksheet.lever_graphs_l3555, 0.002); end
  def test_lever_graphs_m3555; assert_in_epsilon(9510.798482841601, worksheet.lever_graphs_m3555, 0.002); end
  def test_lever_graphs_n3555; assert_in_epsilon(9848.369457373425, worksheet.lever_graphs_n3555, 0.002); end
  def test_lever_graphs_o3555; assert_in_epsilon(10046.918901206524, worksheet.lever_graphs_o3555, 0.002); end
  def test_lever_graphs_p3555; assert_in_epsilon(10249.471229153289, worksheet.lever_graphs_p3555, 0.002); end
  def test_lever_graphs_q3555; assert_in_epsilon(10352.376741071972, worksheet.lever_graphs_q3555, 0.002); end
  def test_lever_graphs_r3555; assert_in_epsilon(10456.315432570995, worksheet.lever_graphs_r3555, 0.002); end
  def test_lever_graphs_s3555; assert_in_epsilon(10466.775931366326, worksheet.lever_graphs_s3555, 0.002); end
  def test_lever_graphs_b3556; assert_equal("Urban", worksheet.lever_graphs_b3556); end
  def test_lever_graphs_c3556; assert_in_epsilon(4.0, worksheet.lever_graphs_c3556, 0.002); end
  def test_lever_graphs_d3556; assert_equal("Transit city", worksheet.lever_graphs_d3556); end
  def test_lever_graphs_k3556; assert_in_epsilon(8237.0, worksheet.lever_graphs_k3556, 0.002); end
  def test_lever_graphs_l3556; assert_in_epsilon(8915.99370192, worksheet.lever_graphs_l3556, 0.002); end
  def test_lever_graphs_m3556; assert_in_epsilon(9510.798482841601, worksheet.lever_graphs_m3556, 0.002); end
  def test_lever_graphs_n3556; assert_in_epsilon(9848.369457373425, worksheet.lever_graphs_n3556, 0.002); end
  def test_lever_graphs_o3556; assert_in_epsilon(10046.918901206524, worksheet.lever_graphs_o3556, 0.002); end
  def test_lever_graphs_p3556; assert_in_epsilon(10147.790771532224, worksheet.lever_graphs_p3556, 0.002); end
  def test_lever_graphs_q3556; assert_in_epsilon(10198.631304826251, worksheet.lever_graphs_q3556, 0.002); end
  def test_lever_graphs_r3556; assert_in_epsilon(10224.153392418053, worksheet.lever_graphs_r3556, 0.002); end
  def test_lever_graphs_s3556; assert_in_epsilon(10234.381636289841, worksheet.lever_graphs_s3556, 0.002); end
  def test_lever_graphs_b3557; assert_equal("Urban", worksheet.lever_graphs_b3557); end
  def test_lever_graphs_c3557; assert_in_delta(1.0, worksheet.lever_graphs_c3557, 0.002); end
  def test_lever_graphs_d3557; assert_equal("Booming city", worksheet.lever_graphs_d3557); end
  def test_lever_graphs_k3557; assert_in_epsilon(9198.0, worksheet.lever_graphs_k3557, 0.002); end
  def test_lever_graphs_l3557; assert_in_epsilon(10152.870967968747, worksheet.lever_graphs_l3557, 0.002); end
  def test_lever_graphs_m3557; assert_in_epsilon(11487.041597578627, worksheet.lever_graphs_m3557, 0.002); end
  def test_lever_graphs_n3557; assert_in_epsilon(12374.806165025862, worksheet.lever_graphs_n3557, 0.002); end
  def test_lever_graphs_o3557; assert_in_epsilon(13006.04564748162, worksheet.lever_graphs_o3557, 0.002); end
  def test_lever_graphs_p3557; assert_in_epsilon(13334.464598322116, worksheet.lever_graphs_p3557, 0.002); end
  def test_lever_graphs_q3557; assert_in_epsilon(13501.980895954319, worksheet.lever_graphs_q3557, 0.002); end
  def test_lever_graphs_r3557; assert_in_epsilon(13671.601643282682, worksheet.lever_graphs_r3557, 0.002); end
  def test_lever_graphs_s3557; assert_in_epsilon(13843.353277785745, worksheet.lever_graphs_s3557, 0.002); end
  def test_lever_graphs_b3558; assert_equal("Urban", worksheet.lever_graphs_b3558); end
  def test_lever_graphs_c3558; assert_in_epsilon(2.0, worksheet.lever_graphs_c3558, 0.002); end
  def test_lever_graphs_d3558; assert_equal("Booming city", worksheet.lever_graphs_d3558); end
  def test_lever_graphs_k3558; assert_in_epsilon(9198.0, worksheet.lever_graphs_k3558, 0.002); end
  def test_lever_graphs_l3558; assert_in_epsilon(10152.870967968747, worksheet.lever_graphs_l3558, 0.002); end
  def test_lever_graphs_m3558; assert_in_epsilon(11209.589933100897, worksheet.lever_graphs_m3558, 0.002); end
  def test_lever_graphs_n3558; assert_in_epsilon(11781.391677188829, worksheet.lever_graphs_n3558, 0.002); end
  def test_lever_graphs_o3558; assert_in_epsilon(12229.870787312846, worksheet.lever_graphs_o3558, 0.002); end
  def test_lever_graphs_p3558; assert_in_epsilon(12538.690350287534, worksheet.lever_graphs_p3558, 0.002); end
  def test_lever_graphs_q3558; assert_in_epsilon(12696.209609433574, worksheet.lever_graphs_q3558, 0.002); end
  def test_lever_graphs_r3558; assert_in_epsilon(12759.817746602417, worksheet.lever_graphs_r3558, 0.002); end
  def test_lever_graphs_s3558; assert_in_epsilon(12823.744561174875, worksheet.lever_graphs_s3558, 0.002); end
  def test_lever_graphs_b3559; assert_equal("Urban", worksheet.lever_graphs_b3559); end
  def test_lever_graphs_c3559; assert_in_epsilon(3.0, worksheet.lever_graphs_c3559, 0.002); end
  def test_lever_graphs_d3559; assert_equal("Booming city", worksheet.lever_graphs_d3559); end
  def test_lever_graphs_k3559; assert_in_epsilon(9198.0, worksheet.lever_graphs_k3559, 0.002); end
  def test_lever_graphs_l3559; assert_in_epsilon(10152.870967968747, worksheet.lever_graphs_l3559, 0.002); end
  def test_lever_graphs_m3559; assert_in_epsilon(11072.889253239104, worksheet.lever_graphs_m3559, 0.002); end
  def test_lever_graphs_n3559; assert_in_epsilon(11637.717888798581, worksheet.lever_graphs_n3559, 0.002); end
  def test_lever_graphs_o3559; assert_in_epsilon(12080.727806951827, worksheet.lever_graphs_o3559, 0.002); end
  def test_lever_graphs_p3559; assert_in_epsilon(12263.029256250862, worksheet.lever_graphs_p3559, 0.002); end
  def test_lever_graphs_q3559; assert_in_epsilon(12386.151052007395, worksheet.lever_graphs_q3559, 0.002); end
  def test_lever_graphs_r3559; assert_in_epsilon(12448.205792701398, worksheet.lever_graphs_r3559, 0.002); end
  def test_lever_graphs_s3559; assert_in_epsilon(12479.357443261779, worksheet.lever_graphs_s3559, 0.002); end
  def test_lever_graphs_b3560; assert_equal("Urban", worksheet.lever_graphs_b3560); end
  def test_lever_graphs_c3560; assert_in_epsilon(4.0, worksheet.lever_graphs_c3560, 0.002); end
  def test_lever_graphs_d3560; assert_equal("Booming city", worksheet.lever_graphs_d3560); end
  def test_lever_graphs_k3560; assert_in_epsilon(9198.0, worksheet.lever_graphs_k3560, 0.002); end
  def test_lever_graphs_l3560; assert_in_epsilon(10152.870967968747, worksheet.lever_graphs_l3560, 0.002); end
  def test_lever_graphs_m3560; assert_in_epsilon(10937.525487294795, worksheet.lever_graphs_m3560, 0.002); end
  def test_lever_graphs_n3560; assert_in_epsilon(11495.44921037173, worksheet.lever_graphs_n3560, 0.002); end
  def test_lever_graphs_o3560; assert_in_epsilon(11785.723708204321, worksheet.lever_graphs_o3560, 0.002); end
  def test_lever_graphs_p3560; assert_in_epsilon(11933.783706111015, worksheet.lever_graphs_p3560, 0.002); end
  def test_lever_graphs_q3560; assert_in_epsilon(11993.572081876142, worksheet.lever_graphs_q3560, 0.002); end
  def test_lever_graphs_r3560; assert_in_epsilon(12005.570452346432, worksheet.lever_graphs_r3560, 0.002); end
  def test_lever_graphs_s3560; assert_in_epsilon(12017.5808259875, worksheet.lever_graphs_s3560, 0.002); end
  def test_lever_graphs_b3561; assert_equal("Rural", worksheet.lever_graphs_b3561); end
  def test_lever_graphs_c3561; assert_in_delta(1.0, worksheet.lever_graphs_c3561, 0.002); end
  def test_lever_graphs_d3561; assert_equal("Developed", worksheet.lever_graphs_d3561); end
  def test_lever_graphs_k3561; assert_in_epsilon(23191.0, worksheet.lever_graphs_k3561, 0.002); end
  def test_lever_graphs_l3561; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_l3561, 0.002); end
  def test_lever_graphs_m3561; assert_in_epsilon(25126.063462143684, worksheet.lever_graphs_m3561, 0.002); end
  def test_lever_graphs_n3561; assert_in_epsilon(26316.35999020017, worksheet.lever_graphs_n3561, 0.002); end
  def test_lever_graphs_o3561; assert_in_epsilon(27563.044413114836, worksheet.lever_graphs_o3561, 0.002); end
  def test_lever_graphs_p3561; assert_in_epsilon(28868.787993561808, worksheet.lever_graphs_p3561, 0.002); end
  def test_lever_graphs_q3561; assert_in_epsilon(30236.388539891228, worksheet.lever_graphs_q3561, 0.002); end
  def test_lever_graphs_r3561; assert_in_epsilon(30999.895240592334, worksheet.lever_graphs_r3561, 0.002); end
  def test_lever_graphs_s3561; assert_in_epsilon(31782.68144225786, worksheet.lever_graphs_s3561, 0.002); end
  def test_lever_graphs_b3562; assert_equal("Rural", worksheet.lever_graphs_b3562); end
  def test_lever_graphs_c3562; assert_in_epsilon(2.0, worksheet.lever_graphs_c3562, 0.002); end
  def test_lever_graphs_d3562; assert_equal("Developed", worksheet.lever_graphs_d3562); end
  def test_lever_graphs_k3562; assert_in_epsilon(23191.0, worksheet.lever_graphs_k3562, 0.002); end
  def test_lever_graphs_l3562; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_l3562, 0.002); end
  def test_lever_graphs_m3562; assert_in_epsilon(24902.81029151358, worksheet.lever_graphs_m3562, 0.002); end
  def test_lever_graphs_n3562; assert_in_epsilon(25850.778961526437, worksheet.lever_graphs_n3562, 0.002); end
  def test_lever_graphs_o3562; assert_in_epsilon(26834.833703304143, worksheet.lever_graphs_o3562, 0.002); end
  def test_lever_graphs_p3562; assert_in_epsilon(27856.34819576311, worksheet.lever_graphs_p3562, 0.002); end
  def test_lever_graphs_q3562; assert_in_epsilon(28206.297927970198, worksheet.lever_graphs_q3562, 0.002); end
  def test_lever_graphs_r3562; assert_in_epsilon(28560.64395843617, worksheet.lever_graphs_r3562, 0.002); end
  def test_lever_graphs_s3562; assert_in_epsilon(28919.441516345676, worksheet.lever_graphs_s3562, 0.002); end
  def test_lever_graphs_b3563; assert_equal("Rural", worksheet.lever_graphs_b3563); end
  def test_lever_graphs_c3563; assert_in_epsilon(3.0, worksheet.lever_graphs_c3563, 0.002); end
  def test_lever_graphs_d3563; assert_equal("Developed", worksheet.lever_graphs_d3563); end
  def test_lever_graphs_k3563; assert_in_epsilon(23191.0, worksheet.lever_graphs_k3563, 0.002); end
  def test_lever_graphs_l3563; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_l3563, 0.002); end
  def test_lever_graphs_m3563; assert_in_epsilon(24595.371961101227, worksheet.lever_graphs_m3563, 0.002); end
  def test_lever_graphs_n3563; assert_in_epsilon(25216.43592427136, worksheet.lever_graphs_n3563, 0.002); end
  def test_lever_graphs_o3563; assert_in_epsilon(25533.22134556568, worksheet.lever_graphs_o3563, 0.002); end
  def test_lever_graphs_p3563; assert_in_epsilon(25853.98643327463, worksheet.lever_graphs_p3563, 0.002); end
  def test_lever_graphs_q3563; assert_in_epsilon(26048.47391944562, worksheet.lever_graphs_q3563, 0.002); end
  def test_lever_graphs_r3563; assert_in_epsilon(26048.47391944562, worksheet.lever_graphs_r3563, 0.002); end
  def test_lever_graphs_s3563; assert_in_epsilon(25853.695577236133, worksheet.lever_graphs_s3563, 0.002); end
  def test_lever_graphs_b3564; assert_equal("Rural", worksheet.lever_graphs_b3564); end
  def test_lever_graphs_c3564; assert_in_epsilon(4.0, worksheet.lever_graphs_c3564, 0.002); end
  def test_lever_graphs_d3564; assert_equal("Developed", worksheet.lever_graphs_d3564); end
  def test_lever_graphs_k3564; assert_in_epsilon(23191.0, worksheet.lever_graphs_k3564, 0.002); end
  def test_lever_graphs_l3564; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_l3564, 0.002); end
  def test_lever_graphs_m3564; assert_in_epsilon(24410.882712641902, worksheet.lever_graphs_m3564, 0.002); end
  def test_lever_graphs_n3564; assert_in_epsilon(24410.882712641902, worksheet.lever_graphs_n3564, 0.002); end
  def test_lever_graphs_o3564; assert_in_epsilon(24228.349513908553, worksheet.lever_graphs_o3564, 0.002); end
  def test_lever_graphs_p3564; assert_in_epsilon(24047.18121332461, worksheet.lever_graphs_p3564, 0.002); end
  def test_lever_graphs_q3564; assert_in_epsilon(23867.367604818126, worksheet.lever_graphs_q3564, 0.002); end
  def test_lever_graphs_r3564; assert_in_epsilon(23688.89855863341, worksheet.lever_graphs_r3564, 0.002); end
  def test_lever_graphs_s3564; assert_in_epsilon(23511.764020760354, worksheet.lever_graphs_s3564, 0.002); end
  def test_lever_graphs_b3565; assert_equal("Rural", worksheet.lever_graphs_b3565); end
  def test_lever_graphs_c3565; assert_in_delta(1.0, worksheet.lever_graphs_c3565, 0.002); end
  def test_lever_graphs_d3565; assert_equal("Developing", worksheet.lever_graphs_d3565); end
  def test_lever_graphs_k3565; assert_in_epsilon(4007.0, worksheet.lever_graphs_k3565, 0.002); end
  def test_lever_graphs_l3565; assert_in_epsilon(4466.28738647215, worksheet.lever_graphs_l3565, 0.002); end
  def test_lever_graphs_m3565; assert_in_epsilon(5053.194230184394, worksheet.lever_graphs_m3565, 0.002); end
  def test_lever_graphs_n3565; assert_in_epsilon(5647.842471807051, worksheet.lever_graphs_n3565, 0.002); end
  def test_lever_graphs_o3565; assert_in_epsilon(6312.467546924988, worksheet.lever_graphs_o3565, 0.002); end
  def test_lever_graphs_p3565; assert_in_epsilon(6969.474239382875, worksheet.lever_graphs_p3565, 0.002); end
  def test_lever_graphs_q3565; assert_in_epsilon(7694.862716099554, worksheet.lever_graphs_q3565, 0.002); end
  def test_lever_graphs_r3565; assert_in_epsilon(8495.75020810493, worksheet.lever_graphs_r3565, 0.002); end
  def test_lever_graphs_s3565; assert_in_epsilon(9379.994713551057, worksheet.lever_graphs_s3565, 0.002); end
  def test_lever_graphs_b3566; assert_equal("Rural", worksheet.lever_graphs_b3566); end
  def test_lever_graphs_c3566; assert_in_epsilon(2.0, worksheet.lever_graphs_c3566, 0.002); end
  def test_lever_graphs_d3566; assert_equal("Developing", worksheet.lever_graphs_d3566); end
  def test_lever_graphs_k3566; assert_in_epsilon(4007.0, worksheet.lever_graphs_k3566, 0.002); end
  def test_lever_graphs_l3566; assert_in_epsilon(4466.28738647215, worksheet.lever_graphs_l3566, 0.002); end
  def test_lever_graphs_m3566; assert_in_epsilon(5053.194230184394, worksheet.lever_graphs_m3566, 0.002); end
  def test_lever_graphs_n3566; assert_in_epsilon(5579.134744387591, worksheet.lever_graphs_n3566, 0.002); end
  def test_lever_graphs_o3566; assert_in_epsilon(6159.815569744478, worksheet.lever_graphs_o3566, 0.002); end
  def test_lever_graphs_p3566; assert_in_epsilon(6635.870780163639, worksheet.lever_graphs_p3566, 0.002); end
  def test_lever_graphs_q3566; assert_in_epsilon(7148.717443314012, worksheet.lever_graphs_q3566, 0.002); end
  def test_lever_graphs_r3566; assert_in_epsilon(7701.198949971386, worksheet.lever_graphs_r3566, 0.002); end
  def test_lever_graphs_s3566; assert_in_epsilon(8296.378439535314, worksheet.lever_graphs_s3566, 0.002); end
  def test_lever_graphs_b3567; assert_equal("Rural", worksheet.lever_graphs_b3567); end
  def test_lever_graphs_c3567; assert_in_epsilon(3.0, worksheet.lever_graphs_c3567, 0.002); end
  def test_lever_graphs_d3567; assert_equal("Developing", worksheet.lever_graphs_d3567); end
  def test_lever_graphs_k3567; assert_in_epsilon(4007.0, worksheet.lever_graphs_k3567, 0.002); end
  def test_lever_graphs_l3567; assert_in_epsilon(4466.28738647215, worksheet.lever_graphs_l3567, 0.002); end
  def test_lever_graphs_m3567; assert_in_epsilon(4931.1421649782, worksheet.lever_graphs_m3567, 0.002); end
  def test_lever_graphs_n3567; assert_in_epsilon(5312.240575210777, worksheet.lever_graphs_n3567, 0.002); end
  def test_lever_graphs_o3567; assert_in_epsilon(5722.791796460097, worksheet.lever_graphs_o3567, 0.002); end
  def test_lever_graphs_p3567; assert_in_epsilon(6165.072059887185, worksheet.lever_graphs_p3567, 0.002); end
  def test_lever_graphs_q3567; assert_in_epsilon(6641.5335129109535, worksheet.lever_graphs_q3567, 0.002); end
  def test_lever_graphs_r3567; assert_in_epsilon(6980.31847014537, worksheet.lever_graphs_r3567, 0.002); end
  def test_lever_graphs_s3567; assert_in_epsilon(7336.38486502144, worksheet.lever_graphs_s3567, 0.002); end
  def test_lever_graphs_b3568; assert_equal("Rural", worksheet.lever_graphs_b3568); end
  def test_lever_graphs_c3568; assert_in_epsilon(4.0, worksheet.lever_graphs_c3568, 0.002); end
  def test_lever_graphs_d3568; assert_equal("Developing", worksheet.lever_graphs_d3568); end
  def test_lever_graphs_k3568; assert_in_epsilon(4007.0, worksheet.lever_graphs_k3568, 0.002); end
  def test_lever_graphs_l3568; assert_in_epsilon(4466.28738647215, worksheet.lever_graphs_l3568, 0.002); end
  def test_lever_graphs_m3568; assert_in_epsilon(4931.1421649782, worksheet.lever_graphs_m3568, 0.002); end
  def test_lever_graphs_n3568; assert_in_epsilon(5312.240575210777, worksheet.lever_graphs_n3568, 0.002); end
  def test_lever_graphs_o3568; assert_in_epsilon(5722.791796460097, worksheet.lever_graphs_o3568, 0.002); end
  def test_lever_graphs_p3568; assert_in_epsilon(6165.072059887185, worksheet.lever_graphs_p3568, 0.002); end
  def test_lever_graphs_q3568; assert_in_epsilon(6479.55269453214, worksheet.lever_graphs_q3568, 0.002); end
  def test_lever_graphs_r3568; assert_in_epsilon(6643.169519778789, worksheet.lever_graphs_r3568, 0.002); end
  def test_lever_graphs_s3568; assert_in_epsilon(6810.917874895763, worksheet.lever_graphs_s3568, 0.002); end
  def test_lever_graphs_b3569; assert_equal("International", worksheet.lever_graphs_b3569); end
  def test_lever_graphs_c3569; assert_in_delta(1.0, worksheet.lever_graphs_c3569, 0.002); end
  def test_lever_graphs_d3569; assert_equal("International slow growth", worksheet.lever_graphs_d3569); end
  def test_lever_graphs_k3569; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k3569, 0.002); end
  def test_lever_graphs_l3569; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_l3569, 0.002); end
  def test_lever_graphs_m3569; assert_in_epsilon(3850.7126100605683, worksheet.lever_graphs_m3569, 0.002); end
  def test_lever_graphs_n3569; assert_in_epsilon(4255.859523652149, worksheet.lever_graphs_n3569, 0.002); end
  def test_lever_graphs_o3569; assert_in_epsilon(4703.63335808013, worksheet.lever_graphs_o3569, 0.002); end
  def test_lever_graphs_p3569; assert_in_epsilon(5198.519040463629, worksheet.lever_graphs_p3569, 0.002); end
  def test_lever_graphs_q3569; assert_in_epsilon(5745.473372757406, worksheet.lever_graphs_q3569, 0.002); end
  def test_lever_graphs_r3569; assert_in_epsilon(6349.97467935028, worksheet.lever_graphs_r3569, 0.002); end
  def test_lever_graphs_s3569; assert_in_epsilon(7018.077678260653, worksheet.lever_graphs_s3569, 0.002); end
  def test_lever_graphs_b3570; assert_equal("International", worksheet.lever_graphs_b3570); end
  def test_lever_graphs_c3570; assert_in_epsilon(2.0, worksheet.lever_graphs_c3570, 0.002); end
  def test_lever_graphs_d3570; assert_equal("International slow growth", worksheet.lever_graphs_d3570); end
  def test_lever_graphs_k3570; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k3570, 0.002); end
  def test_lever_graphs_l3570; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_l3570, 0.002); end
  def test_lever_graphs_m3570; assert_in_epsilon(3735.420476881267, worksheet.lever_graphs_m3570, 0.002); end
  def test_lever_graphs_n3570; assert_in_epsilon(4004.829768603747, worksheet.lever_graphs_n3570, 0.002); end
  def test_lever_graphs_o3570; assert_in_epsilon(4293.6696349872645, worksheet.lever_graphs_o3570, 0.002); end
  def test_lever_graphs_p3570; assert_in_epsilon(4603.341465082821, worksheet.lever_graphs_p3570, 0.002); end
  def test_lever_graphs_q3570; assert_in_epsilon(4935.347720159124, worksheet.lever_graphs_q3570, 0.002); end
  def test_lever_graphs_r3570; assert_in_epsilon(5291.299223322255, worksheet.lever_graphs_r3570, 0.002); end
  def test_lever_graphs_s3570; assert_in_epsilon(5672.922974883723, worksheet.lever_graphs_s3570, 0.002); end
  def test_lever_graphs_b3571; assert_equal("International", worksheet.lever_graphs_b3571); end
  def test_lever_graphs_c3571; assert_in_epsilon(3.0, worksheet.lever_graphs_c3571, 0.002); end
  def test_lever_graphs_d3571; assert_equal("International slow growth", worksheet.lever_graphs_d3571); end
  def test_lever_graphs_k3571; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k3571, 0.002); end
  def test_lever_graphs_l3571; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_l3571, 0.002); end
  def test_lever_graphs_m3571; assert_in_epsilon(3580.4299416660083, worksheet.lever_graphs_m3571, 0.002); end
  def test_lever_graphs_n3571; assert_in_epsilon(3679.3866707142247, worksheet.lever_graphs_n3571, 0.002); end
  def test_lever_graphs_o3571; assert_in_epsilon(3781.078388125142, worksheet.lever_graphs_o3571, 0.002); end
  def test_lever_graphs_p3571; assert_in_epsilon(3885.5806841230533, worksheet.lever_graphs_p3571, 0.002); end
  def test_lever_graphs_q3571; assert_in_epsilon(3992.9712381118948, worksheet.lever_graphs_q3571, 0.002); end
  def test_lever_graphs_r3571; assert_in_epsilon(4103.329876416461, worksheet.lever_graphs_r3571, 0.002); end
  def test_lever_graphs_s3571; assert_in_epsilon(4216.73863161949, worksheet.lever_graphs_s3571, 0.002); end
  def test_lever_graphs_b3572; assert_equal("International", worksheet.lever_graphs_b3572); end
  def test_lever_graphs_c3572; assert_in_epsilon(4.0, worksheet.lever_graphs_c3572, 0.002); end
  def test_lever_graphs_d3572; assert_equal("International slow growth", worksheet.lever_graphs_d3572); end
  def test_lever_graphs_k3572; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k3572, 0.002); end
  def test_lever_graphs_l3572; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_l3572, 0.002); end
  def test_lever_graphs_m3572; assert_in_epsilon(3339.573235999637, worksheet.lever_graphs_m3572, 0.002); end
  def test_lever_graphs_n3572; assert_in_epsilon(3201.009874466012, worksheet.lever_graphs_n3572, 0.002); end
  def test_lever_graphs_o3572; assert_in_epsilon(3068.1956921845535, worksheet.lever_graphs_o3572, 0.002); end
  def test_lever_graphs_p3572; assert_in_epsilon(2940.8921480163353, worksheet.lever_graphs_p3572, 0.002); end
  def test_lever_graphs_q3572; assert_in_epsilon(2818.870598213428, worksheet.lever_graphs_q3572, 0.002); end
  def test_lever_graphs_r3572; assert_in_epsilon(2701.9118857629023, worksheet.lever_graphs_r3572, 0.002); end
  def test_lever_graphs_s3572; assert_in_epsilon(2589.8059467695034, worksheet.lever_graphs_s3572, 0.002); end
  def test_lever_graphs_b3573; assert_equal("International", worksheet.lever_graphs_b3573); end
  def test_lever_graphs_c3573; assert_in_delta(1.0, worksheet.lever_graphs_c3573, 0.002); end
  def test_lever_graphs_d3573; assert_equal("International fast growth", worksheet.lever_graphs_d3573); end
  def test_lever_graphs_k3573; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k3573, 0.002); end
  def test_lever_graphs_l3573; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_l3573, 0.002); end
  def test_lever_graphs_m3573; assert_in_epsilon(373.2108483170911, worksheet.lever_graphs_m3573, 0.002); end
  def test_lever_graphs_n3573; assert_in_epsilon(484.5581698391798, worksheet.lever_graphs_n3573, 0.002); end
  def test_lever_graphs_o3573; assert_in_epsilon(629.1259244383089, worksheet.lever_graphs_o3573, 0.002); end
  def test_lever_graphs_p3573; assert_in_epsilon(816.8254162997989, worksheet.lever_graphs_p3573, 0.002); end
  def test_lever_graphs_q3573; assert_in_epsilon(1060.5249836255393, worksheet.lever_graphs_q3573, 0.002); end
  def test_lever_graphs_r3573; assert_in_epsilon(1376.9322286626152, worksheet.lever_graphs_r3573, 0.002); end
  def test_lever_graphs_s3573; assert_in_epsilon(1787.7394607416759, worksheet.lever_graphs_s3573, 0.002); end
  def test_lever_graphs_b3574; assert_equal("International", worksheet.lever_graphs_b3574); end
  def test_lever_graphs_c3574; assert_in_epsilon(2.0, worksheet.lever_graphs_c3574, 0.002); end
  def test_lever_graphs_d3574; assert_equal("International fast growth", worksheet.lever_graphs_d3574); end
  def test_lever_graphs_k3574; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k3574, 0.002); end
  def test_lever_graphs_l3574; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_l3574, 0.002); end
  def test_lever_graphs_m3574; assert_in_epsilon(353.28137511784706, worksheet.lever_graphs_m3574, 0.002); end
  def test_lever_graphs_n3574; assert_in_epsilon(434.189069830633, worksheet.lever_graphs_n3574, 0.002); end
  def test_lever_graphs_o3574; assert_in_epsilon(533.6260602402377, worksheet.lever_graphs_o3574, 0.002); end
  def test_lever_graphs_p3574; assert_in_epsilon(655.8358833827733, worksheet.lever_graphs_p3574, 0.002); end
  def test_lever_graphs_q3574; assert_in_epsilon(806.0339214670718, worksheet.lever_graphs_q3574, 0.002); end
  def test_lever_graphs_r3574; assert_in_epsilon(990.6299716394122, worksheet.lever_graphs_r3574, 0.002); end
  def test_lever_graphs_s3574; assert_in_epsilon(1217.5017881680963, worksheet.lever_graphs_s3574, 0.002); end
  def test_lever_graphs_b3575; assert_equal("International", worksheet.lever_graphs_b3575); end
  def test_lever_graphs_c3575; assert_in_epsilon(3.0, worksheet.lever_graphs_c3575, 0.002); end
  def test_lever_graphs_d3575; assert_equal("International fast growth", worksheet.lever_graphs_d3575); end
  def test_lever_graphs_k3575; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k3575, 0.002); end
  def test_lever_graphs_l3575; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_l3575, 0.002); end
  def test_lever_graphs_m3575; assert_in_epsilon(329.7444385185951, worksheet.lever_graphs_m3575, 0.002); end
  def test_lever_graphs_n3575; assert_in_epsilon(378.26169211608646, worksheet.lever_graphs_n3575, 0.002); end
  def test_lever_graphs_o3575; assert_in_epsilon(433.9175767916894, worksheet.lever_graphs_o3575, 0.002); end
  def test_lever_graphs_p3575; assert_in_epsilon(497.76244164579106, worksheet.lever_graphs_p3575, 0.002); end
  def test_lever_graphs_q3575; assert_in_epsilon(571.0011798672197, worksheet.lever_graphs_q3575, 0.002); end
  def test_lever_graphs_r3575; assert_in_epsilon(655.0159677209424, worksheet.lever_graphs_r3575, 0.002); end
  def test_lever_graphs_s3575; assert_in_epsilon(751.3923492577945, worksheet.lever_graphs_s3575, 0.002); end
  def test_lever_graphs_b3576; assert_equal("International", worksheet.lever_graphs_b3576); end
  def test_lever_graphs_c3576; assert_in_epsilon(4.0, worksheet.lever_graphs_c3576, 0.002); end
  def test_lever_graphs_d3576; assert_equal("International fast growth", worksheet.lever_graphs_d3576); end
  def test_lever_graphs_k3576; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k3576, 0.002); end
  def test_lever_graphs_l3576; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_l3576, 0.002); end
  def test_lever_graphs_m3576; assert_in_epsilon(308.3096749216857, worksheet.lever_graphs_m3576, 0.002); end
  def test_lever_graphs_n3576; assert_in_epsilon(330.6828780235829, worksheet.lever_graphs_n3576, 0.002); end
  def test_lever_graphs_o3576; assert_in_epsilon(354.6796442431989, worksheet.lever_graphs_o3576, 0.002); end
  def test_lever_graphs_p3576; assert_in_epsilon(380.41779118515706, worksheet.lever_graphs_p3576, 0.002); end
  def test_lever_graphs_q3576; assert_in_epsilon(408.02368616046897, worksheet.lever_graphs_q3576, 0.002); end
  def test_lever_graphs_r3576; assert_in_epsilon(437.63286661571004, worksheet.lever_graphs_r3576, 0.002); end
  def test_lever_graphs_s3576; assert_in_epsilon(469.3907055850704, worksheet.lever_graphs_s3576, 0.002); end
  def test_lever_graphs_b3514; assert_equal("Type of travel", worksheet.lever_graphs_b3514); end
  def test_lever_graphs_c3514; assert_equal("Level", worksheet.lever_graphs_c3514); end
  def test_lever_graphs_d3514; assert_equal("Type of city", worksheet.lever_graphs_d3514); end
  def test_lever_graphs_e3514; assert_equal("1985", worksheet.lever_graphs_e3514); end
  def test_lever_graphs_f3514; assert_equal("1990", worksheet.lever_graphs_f3514); end
  def test_lever_graphs_g3514; assert_equal("1995", worksheet.lever_graphs_g3514); end
  def test_lever_graphs_h3514; assert_equal("2000", worksheet.lever_graphs_h3514); end
  def test_lever_graphs_i3514; assert_equal("2005", worksheet.lever_graphs_i3514); end
  def test_lever_graphs_j3514; assert_equal("2010", worksheet.lever_graphs_j3514); end
  def test_lever_graphs_k3514; assert_equal("2011", worksheet.lever_graphs_k3514); end
  def test_lever_graphs_l3514; assert_equal("2015", worksheet.lever_graphs_l3514); end
  def test_lever_graphs_m3514; assert_equal("2020", worksheet.lever_graphs_m3514); end
  def test_lever_graphs_n3514; assert_equal("2025", worksheet.lever_graphs_n3514); end
  def test_lever_graphs_o3514; assert_equal("2030", worksheet.lever_graphs_o3514); end
  def test_lever_graphs_p3514; assert_equal("2035", worksheet.lever_graphs_p3514); end
  def test_lever_graphs_q3514; assert_equal("2040", worksheet.lever_graphs_q3514); end
  def test_lever_graphs_r3514; assert_equal("2045", worksheet.lever_graphs_r3514); end
  def test_lever_graphs_s3514; assert_equal("2050", worksheet.lever_graphs_s3514); end
  def test_lever_graphs_b3515; assert_equal("Urban", worksheet.lever_graphs_b3515); end
  def test_lever_graphs_c3515; assert_in_delta(1.0, worksheet.lever_graphs_c3515, 0.002); end
  def test_lever_graphs_d3515; assert_equal("Automobile city", worksheet.lever_graphs_d3515); end
  def test_lever_graphs_k3515; assert_in_delta(0.0, (worksheet.lever_graphs_k3515||0), 0.002); end
  def test_lever_graphs_l3515; assert_in_delta(0.0058, worksheet.lever_graphs_l3515, 0.002); end
  def test_lever_graphs_m3515; assert_in_delta(0.0048, worksheet.lever_graphs_m3515, 0.002); end
  def test_lever_graphs_n3515; assert_in_delta(0.0048, worksheet.lever_graphs_n3515, 0.002); end
  def test_lever_graphs_o3515; assert_in_delta(0.0019, worksheet.lever_graphs_o3515, 0.002); end
  def test_lever_graphs_p3515; assert_in_delta(0.0019, worksheet.lever_graphs_p3515, 0.002); end
  def test_lever_graphs_q3515; assert_in_delta(0.0019, worksheet.lever_graphs_q3515, 0.002); end
  def test_lever_graphs_r3515; assert_in_delta(0.0019, worksheet.lever_graphs_r3515, 0.002); end
  def test_lever_graphs_s3515; assert_in_delta(0.0002, worksheet.lever_graphs_s3515, 0.002); end
  def test_lever_graphs_b3516; assert_equal("Urban", worksheet.lever_graphs_b3516); end
  def test_lever_graphs_c3516; assert_in_epsilon(2.0, worksheet.lever_graphs_c3516, 0.002); end
  def test_lever_graphs_d3516; assert_equal("Automobile city", worksheet.lever_graphs_d3516); end
  def test_lever_graphs_k3516; assert_in_delta(0.0, (worksheet.lever_graphs_k3516||0), 0.002); end
  def test_lever_graphs_l3516; assert_in_delta(0.0058, worksheet.lever_graphs_l3516, 0.002); end
  def test_lever_graphs_m3516; assert_in_delta(0.0048, worksheet.lever_graphs_m3516, 0.002); end
  def test_lever_graphs_n3516; assert_in_delta(0.0019, worksheet.lever_graphs_n3516, 0.002); end
  def test_lever_graphs_o3516; assert_in_delta(0.0019, worksheet.lever_graphs_o3516, 0.002); end
  def test_lever_graphs_p3516; assert_in_delta(0.0019, worksheet.lever_graphs_p3516, 0.002); end
  def test_lever_graphs_q3516; assert_in_delta(0.0019, worksheet.lever_graphs_q3516, 0.002); end
  def test_lever_graphs_r3516; assert_in_delta(-0.002, worksheet.lever_graphs_r3516, 0.002); end
  def test_lever_graphs_s3516; assert_in_delta(-0.002, worksheet.lever_graphs_s3516, 0.002); end
  def test_lever_graphs_b3517; assert_equal("Urban", worksheet.lever_graphs_b3517); end
  def test_lever_graphs_c3517; assert_in_epsilon(3.0, worksheet.lever_graphs_c3517, 0.002); end
  def test_lever_graphs_d3517; assert_equal("Automobile city", worksheet.lever_graphs_d3517); end
  def test_lever_graphs_k3517; assert_in_delta(0.0, (worksheet.lever_graphs_k3517||0), 0.002); end
  def test_lever_graphs_l3517; assert_in_delta(0.0058, worksheet.lever_graphs_l3517, 0.002); end
  def test_lever_graphs_m3517; assert_in_delta(0.0028, worksheet.lever_graphs_m3517, 0.002); end
  def test_lever_graphs_n3517; assert_in_delta(0.0015, worksheet.lever_graphs_n3517, 0.002); end
  def test_lever_graphs_o3517; assert_in_delta(0.0, (worksheet.lever_graphs_o3517||0), 0.002); end
  def test_lever_graphs_p3517; assert_in_delta(-0.002, worksheet.lever_graphs_p3517, 0.002); end
  def test_lever_graphs_q3517; assert_in_delta(-0.003, worksheet.lever_graphs_q3517, 0.002); end
  def test_lever_graphs_r3517; assert_in_delta(-0.004, worksheet.lever_graphs_r3517, 0.002); end
  def test_lever_graphs_s3517; assert_in_delta(-0.005, worksheet.lever_graphs_s3517, 0.002); end
  def test_lever_graphs_b3518; assert_equal("Urban", worksheet.lever_graphs_b3518); end
  def test_lever_graphs_c3518; assert_in_epsilon(4.0, worksheet.lever_graphs_c3518, 0.002); end
  def test_lever_graphs_d3518; assert_equal("Automobile city", worksheet.lever_graphs_d3518); end
  def test_lever_graphs_k3518; assert_in_delta(0.0, (worksheet.lever_graphs_k3518||0), 0.002); end
  def test_lever_graphs_l3518; assert_in_delta(0.0058, worksheet.lever_graphs_l3518, 0.002); end
  def test_lever_graphs_m3518; assert_in_delta(0.002, worksheet.lever_graphs_m3518, 0.002); end
  def test_lever_graphs_n3518; assert_in_delta(0.001, worksheet.lever_graphs_n3518, 0.002); end
  def test_lever_graphs_o3518; assert_in_delta(-0.001, worksheet.lever_graphs_o3518, 0.002); end
  def test_lever_graphs_p3518; assert_in_delta(-0.003, worksheet.lever_graphs_p3518, 0.002); end
  def test_lever_graphs_q3518; assert_in_delta(-0.004, worksheet.lever_graphs_q3518, 0.002); end
  def test_lever_graphs_r3518; assert_in_delta(-0.005, worksheet.lever_graphs_r3518, 0.002); end
  def test_lever_graphs_s3518; assert_in_delta(-0.006, worksheet.lever_graphs_s3518, 0.002); end
  def test_lever_graphs_b3519; assert_equal("Urban", worksheet.lever_graphs_b3519); end
  def test_lever_graphs_c3519; assert_in_delta(1.0, worksheet.lever_graphs_c3519, 0.002); end
  def test_lever_graphs_d3519; assert_equal("Transit city", worksheet.lever_graphs_d3519); end
  def test_lever_graphs_k3519; assert_in_delta(0.0, (worksheet.lever_graphs_k3519||0), 0.002); end
  def test_lever_graphs_l3519; assert_in_delta(0.02, worksheet.lever_graphs_l3519, 0.002); end
  def test_lever_graphs_m3519; assert_in_delta(0.015, worksheet.lever_graphs_m3519, 0.002); end
  def test_lever_graphs_n3519; assert_in_delta(0.012, worksheet.lever_graphs_n3519, 0.002); end
  def test_lever_graphs_o3519; assert_in_delta(0.0075, worksheet.lever_graphs_o3519, 0.002); end
  def test_lever_graphs_p3519; assert_in_delta(0.0075, worksheet.lever_graphs_p3519, 0.002); end
  def test_lever_graphs_q3519; assert_in_delta(0.005, worksheet.lever_graphs_q3519, 0.002); end
  def test_lever_graphs_r3519; assert_in_delta(0.005, worksheet.lever_graphs_r3519, 0.002); end
  def test_lever_graphs_s3519; assert_in_delta(0.002, worksheet.lever_graphs_s3519, 0.002); end
  def test_lever_graphs_b3520; assert_equal("Urban", worksheet.lever_graphs_b3520); end
  def test_lever_graphs_c3520; assert_in_epsilon(2.0, worksheet.lever_graphs_c3520, 0.002); end
  def test_lever_graphs_d3520; assert_equal("Transit city", worksheet.lever_graphs_d3520); end
  def test_lever_graphs_k3520; assert_in_delta(0.0, (worksheet.lever_graphs_k3520||0), 0.002); end
  def test_lever_graphs_l3520; assert_in_delta(0.02, worksheet.lever_graphs_l3520, 0.002); end
  def test_lever_graphs_m3520; assert_in_delta(0.015, worksheet.lever_graphs_m3520, 0.002); end
  def test_lever_graphs_n3520; assert_in_delta(0.0075, worksheet.lever_graphs_n3520, 0.002); end
  def test_lever_graphs_o3520; assert_in_delta(0.0075, worksheet.lever_graphs_o3520, 0.002); end
  def test_lever_graphs_p3520; assert_in_delta(0.005, worksheet.lever_graphs_p3520, 0.002); end
  def test_lever_graphs_q3520; assert_in_delta(0.005, worksheet.lever_graphs_q3520, 0.002); end
  def test_lever_graphs_r3520; assert_in_delta(0.002, worksheet.lever_graphs_r3520, 0.002); end
  def test_lever_graphs_s3520; assert_in_delta(0.0002, worksheet.lever_graphs_s3520, 0.002); end
  def test_lever_graphs_b3521; assert_equal("Urban", worksheet.lever_graphs_b3521); end
  def test_lever_graphs_c3521; assert_in_epsilon(3.0, worksheet.lever_graphs_c3521, 0.002); end
  def test_lever_graphs_d3521; assert_equal("Transit city", worksheet.lever_graphs_d3521); end
  def test_lever_graphs_k3521; assert_in_delta(0.0, (worksheet.lever_graphs_k3521||0), 0.002); end
  def test_lever_graphs_l3521; assert_in_delta(0.02, worksheet.lever_graphs_l3521, 0.002); end
  def test_lever_graphs_m3521; assert_in_delta(0.013, worksheet.lever_graphs_m3521, 0.002); end
  def test_lever_graphs_n3521; assert_in_delta(0.007, worksheet.lever_graphs_n3521, 0.002); end
  def test_lever_graphs_o3521; assert_in_delta(0.004, worksheet.lever_graphs_o3521, 0.002); end
  def test_lever_graphs_p3521; assert_in_delta(0.004, worksheet.lever_graphs_p3521, 0.002); end
  def test_lever_graphs_q3521; assert_in_delta(0.002, worksheet.lever_graphs_q3521, 0.002); end
  def test_lever_graphs_r3521; assert_in_delta(0.002, worksheet.lever_graphs_r3521, 0.002); end
  def test_lever_graphs_s3521; assert_in_delta(0.0002, worksheet.lever_graphs_s3521, 0.002); end
  def test_lever_graphs_b3522; assert_equal("Urban", worksheet.lever_graphs_b3522); end
  def test_lever_graphs_c3522; assert_in_epsilon(4.0, worksheet.lever_graphs_c3522, 0.002); end
  def test_lever_graphs_d3522; assert_equal("Transit city", worksheet.lever_graphs_d3522); end
  def test_lever_graphs_k3522; assert_in_delta(0.0, (worksheet.lever_graphs_k3522||0), 0.002); end
  def test_lever_graphs_l3522; assert_in_delta(0.02, worksheet.lever_graphs_l3522, 0.002); end
  def test_lever_graphs_m3522; assert_in_delta(0.013, worksheet.lever_graphs_m3522, 0.002); end
  def test_lever_graphs_n3522; assert_in_delta(0.007, worksheet.lever_graphs_n3522, 0.002); end
  def test_lever_graphs_o3522; assert_in_delta(0.004, worksheet.lever_graphs_o3522, 0.002); end
  def test_lever_graphs_p3522; assert_in_delta(0.002, worksheet.lever_graphs_p3522, 0.002); end
  def test_lever_graphs_q3522; assert_in_delta(0.001, worksheet.lever_graphs_q3522, 0.002); end
  def test_lever_graphs_r3522; assert_in_delta(0.0005, worksheet.lever_graphs_r3522, 0.002); end
  def test_lever_graphs_s3522; assert_in_delta(0.0002, worksheet.lever_graphs_s3522, 0.002); end
  def test_lever_graphs_b3523; assert_equal("Urban", worksheet.lever_graphs_b3523); end
  def test_lever_graphs_c3523; assert_in_delta(1.0, worksheet.lever_graphs_c3523, 0.002); end
  def test_lever_graphs_d3523; assert_equal("Booming city", worksheet.lever_graphs_d3523); end
  def test_lever_graphs_k3523; assert_in_delta(0.0, (worksheet.lever_graphs_k3523||0), 0.002); end
  def test_lever_graphs_l3523; assert_in_delta(0.025, worksheet.lever_graphs_l3523, 0.002); end
  def test_lever_graphs_m3523; assert_in_delta(0.025, worksheet.lever_graphs_m3523, 0.002); end
  def test_lever_graphs_n3523; assert_in_delta(0.015, worksheet.lever_graphs_n3523, 0.002); end
  def test_lever_graphs_o3523; assert_in_delta(0.01, worksheet.lever_graphs_o3523, 0.002); end
  def test_lever_graphs_p3523; assert_in_delta(0.005, worksheet.lever_graphs_p3523, 0.002); end
  def test_lever_graphs_q3523; assert_in_delta(0.0025, worksheet.lever_graphs_q3523, 0.002); end
  def test_lever_graphs_r3523; assert_in_delta(0.0025, worksheet.lever_graphs_r3523, 0.002); end
  def test_lever_graphs_s3523; assert_in_delta(0.0025, worksheet.lever_graphs_s3523, 0.002); end
  def test_lever_graphs_b3524; assert_equal("Urban", worksheet.lever_graphs_b3524); end
  def test_lever_graphs_c3524; assert_in_epsilon(2.0, worksheet.lever_graphs_c3524, 0.002); end
  def test_lever_graphs_d3524; assert_equal("Booming city", worksheet.lever_graphs_d3524); end
  def test_lever_graphs_k3524; assert_in_delta(0.0, (worksheet.lever_graphs_k3524||0), 0.002); end
  def test_lever_graphs_l3524; assert_in_delta(0.025, worksheet.lever_graphs_l3524, 0.002); end
  def test_lever_graphs_m3524; assert_in_delta(0.02, worksheet.lever_graphs_m3524, 0.002); end
  def test_lever_graphs_n3524; assert_in_delta(0.01, worksheet.lever_graphs_n3524, 0.002); end
  def test_lever_graphs_o3524; assert_in_delta(0.0075, worksheet.lever_graphs_o3524, 0.002); end
  def test_lever_graphs_p3524; assert_in_delta(0.005, worksheet.lever_graphs_p3524, 0.002); end
  def test_lever_graphs_q3524; assert_in_delta(0.0025, worksheet.lever_graphs_q3524, 0.002); end
  def test_lever_graphs_r3524; assert_in_delta(0.001, worksheet.lever_graphs_r3524, 0.002); end
  def test_lever_graphs_s3524; assert_in_delta(0.001, worksheet.lever_graphs_s3524, 0.002); end
  def test_lever_graphs_b3525; assert_equal("Urban", worksheet.lever_graphs_b3525); end
  def test_lever_graphs_c3525; assert_in_epsilon(3.0, worksheet.lever_graphs_c3525, 0.002); end
  def test_lever_graphs_d3525; assert_equal("Booming city", worksheet.lever_graphs_d3525); end
  def test_lever_graphs_k3525; assert_in_delta(0.0, (worksheet.lever_graphs_k3525||0), 0.002); end
  def test_lever_graphs_l3525; assert_in_delta(0.025, worksheet.lever_graphs_l3525, 0.002); end
  def test_lever_graphs_m3525; assert_in_delta(0.0175, worksheet.lever_graphs_m3525, 0.002); end
  def test_lever_graphs_n3525; assert_in_delta(0.01, worksheet.lever_graphs_n3525, 0.002); end
  def test_lever_graphs_o3525; assert_in_delta(0.0075, worksheet.lever_graphs_o3525, 0.002); end
  def test_lever_graphs_p3525; assert_in_delta(0.003, worksheet.lever_graphs_p3525, 0.002); end
  def test_lever_graphs_q3525; assert_in_delta(0.002, worksheet.lever_graphs_q3525, 0.002); end
  def test_lever_graphs_r3525; assert_in_delta(0.001, worksheet.lever_graphs_r3525, 0.002); end
  def test_lever_graphs_s3525; assert_in_delta(0.0005, worksheet.lever_graphs_s3525, 0.002); end
  def test_lever_graphs_b3526; assert_equal("Urban", worksheet.lever_graphs_b3526); end
  def test_lever_graphs_c3526; assert_in_epsilon(4.0, worksheet.lever_graphs_c3526, 0.002); end
  def test_lever_graphs_d3526; assert_equal("Booming city", worksheet.lever_graphs_d3526); end
  def test_lever_graphs_k3526; assert_in_delta(0.0, (worksheet.lever_graphs_k3526||0), 0.002); end
  def test_lever_graphs_l3526; assert_in_delta(0.025, worksheet.lever_graphs_l3526, 0.002); end
  def test_lever_graphs_m3526; assert_in_delta(0.015, worksheet.lever_graphs_m3526, 0.002); end
  def test_lever_graphs_n3526; assert_in_delta(0.01, worksheet.lever_graphs_n3526, 0.002); end
  def test_lever_graphs_o3526; assert_in_delta(0.005, worksheet.lever_graphs_o3526, 0.002); end
  def test_lever_graphs_p3526; assert_in_delta(0.0025, worksheet.lever_graphs_p3526, 0.002); end
  def test_lever_graphs_q3526; assert_in_delta(0.001, worksheet.lever_graphs_q3526, 0.002); end
  def test_lever_graphs_r3526; assert_in_delta(0.0002, worksheet.lever_graphs_r3526, 0.002); end
  def test_lever_graphs_s3526; assert_in_delta(0.0002, worksheet.lever_graphs_s3526, 0.002); end
  def test_lever_graphs_b3527; assert_equal("Rural", worksheet.lever_graphs_b3527); end
  def test_lever_graphs_c3527; assert_in_delta(1.0, worksheet.lever_graphs_c3527, 0.002); end
  def test_lever_graphs_d3527; assert_equal("Developed", worksheet.lever_graphs_d3527); end
  def test_lever_graphs_k3527; assert_in_delta(0.0, (worksheet.lever_graphs_k3527||0), 0.002); end
  def test_lever_graphs_l3527; assert_in_delta(0.0085, worksheet.lever_graphs_l3527, 0.002); end
  def test_lever_graphs_m3527; assert_in_delta(0.0093, worksheet.lever_graphs_m3527, 0.002); end
  def test_lever_graphs_n3527; assert_in_delta(0.0093, worksheet.lever_graphs_n3527, 0.002); end
  def test_lever_graphs_o3527; assert_in_delta(0.0093, worksheet.lever_graphs_o3527, 0.002); end
  def test_lever_graphs_p3527; assert_in_delta(0.0093, worksheet.lever_graphs_p3527, 0.002); end
  def test_lever_graphs_q3527; assert_in_delta(0.0093, worksheet.lever_graphs_q3527, 0.002); end
  def test_lever_graphs_r3527; assert_in_delta(0.005, worksheet.lever_graphs_r3527, 0.002); end
  def test_lever_graphs_s3527; assert_in_delta(0.005, worksheet.lever_graphs_s3527, 0.002); end
  def test_lever_graphs_b3528; assert_equal("Rural", worksheet.lever_graphs_b3528); end
  def test_lever_graphs_c3528; assert_in_epsilon(2.0, worksheet.lever_graphs_c3528, 0.002); end
  def test_lever_graphs_d3528; assert_equal("Developed", worksheet.lever_graphs_d3528); end
  def test_lever_graphs_k3528; assert_in_delta(0.0, (worksheet.lever_graphs_k3528||0), 0.002); end
  def test_lever_graphs_l3528; assert_in_delta(0.0085, worksheet.lever_graphs_l3528, 0.002); end
  def test_lever_graphs_m3528; assert_in_delta(0.0075, worksheet.lever_graphs_m3528, 0.002); end
  def test_lever_graphs_n3528; assert_in_delta(0.0075, worksheet.lever_graphs_n3528, 0.002); end
  def test_lever_graphs_o3528; assert_in_delta(0.0075, worksheet.lever_graphs_o3528, 0.002); end
  def test_lever_graphs_p3528; assert_in_delta(0.0075, worksheet.lever_graphs_p3528, 0.002); end
  def test_lever_graphs_q3528; assert_in_delta(0.0025, worksheet.lever_graphs_q3528, 0.002); end
  def test_lever_graphs_r3528; assert_in_delta(0.0025, worksheet.lever_graphs_r3528, 0.002); end
  def test_lever_graphs_s3528; assert_in_delta(0.0025, worksheet.lever_graphs_s3528, 0.002); end
  def test_lever_graphs_b3529; assert_equal("Rural", worksheet.lever_graphs_b3529); end
  def test_lever_graphs_c3529; assert_in_epsilon(3.0, worksheet.lever_graphs_c3529, 0.002); end
  def test_lever_graphs_d3529; assert_equal("Developed", worksheet.lever_graphs_d3529); end
  def test_lever_graphs_k3529; assert_in_delta(0.0, (worksheet.lever_graphs_k3529||0), 0.002); end
  def test_lever_graphs_l3529; assert_in_delta(0.0085, worksheet.lever_graphs_l3529, 0.002); end
  def test_lever_graphs_m3529; assert_in_delta(0.005, worksheet.lever_graphs_m3529, 0.002); end
  def test_lever_graphs_n3529; assert_in_delta(0.005, worksheet.lever_graphs_n3529, 0.002); end
  def test_lever_graphs_o3529; assert_in_delta(0.0025, worksheet.lever_graphs_o3529, 0.002); end
  def test_lever_graphs_p3529; assert_in_delta(0.0025, worksheet.lever_graphs_p3529, 0.002); end
  def test_lever_graphs_q3529; assert_in_delta(0.0015, worksheet.lever_graphs_q3529, 0.002); end
  def test_lever_graphs_r3529; assert_in_delta(0.0, (worksheet.lever_graphs_r3529||0), 0.002); end
  def test_lever_graphs_s3529; assert_in_delta(-0.0015, worksheet.lever_graphs_s3529, 0.002); end
  def test_lever_graphs_b3530; assert_equal("Rural", worksheet.lever_graphs_b3530); end
  def test_lever_graphs_c3530; assert_in_epsilon(4.0, worksheet.lever_graphs_c3530, 0.002); end
  def test_lever_graphs_d3530; assert_equal("Developed", worksheet.lever_graphs_d3530); end
  def test_lever_graphs_k3530; assert_in_delta(0.0, (worksheet.lever_graphs_k3530||0), 0.002); end
  def test_lever_graphs_l3530; assert_in_delta(0.0085, worksheet.lever_graphs_l3530, 0.002); end
  def test_lever_graphs_m3530; assert_in_delta(0.0034877600610832005, worksheet.lever_graphs_m3530, 0.002); end
  def test_lever_graphs_n3530; assert_in_delta(0.0, (worksheet.lever_graphs_n3530||0), 0.002); end
  def test_lever_graphs_o3530; assert_in_delta(-0.0015, worksheet.lever_graphs_o3530, 0.002); end
  def test_lever_graphs_p3530; assert_in_delta(-0.0015, worksheet.lever_graphs_p3530, 0.002); end
  def test_lever_graphs_q3530; assert_in_delta(-0.0015, worksheet.lever_graphs_q3530, 0.002); end
  def test_lever_graphs_r3530; assert_in_delta(-0.0015, worksheet.lever_graphs_r3530, 0.002); end
  def test_lever_graphs_s3530; assert_in_delta(-0.0015, worksheet.lever_graphs_s3530, 0.002); end
  def test_lever_graphs_b3531; assert_equal("Rural", worksheet.lever_graphs_b3531); end
  def test_lever_graphs_c3531; assert_in_delta(1.0, worksheet.lever_graphs_c3531, 0.002); end
  def test_lever_graphs_d3531; assert_equal("Developing", worksheet.lever_graphs_d3531); end
  def test_lever_graphs_k3531; assert_in_delta(0.0, (worksheet.lever_graphs_k3531||0), 0.002); end
  def test_lever_graphs_l3531; assert_in_delta(0.0275, worksheet.lever_graphs_l3531, 0.002); end
  def test_lever_graphs_m3531; assert_in_delta(0.025, worksheet.lever_graphs_m3531, 0.002); end
  def test_lever_graphs_n3531; assert_in_delta(0.0225, worksheet.lever_graphs_n3531, 0.002); end
  def test_lever_graphs_o3531; assert_in_delta(0.0225, worksheet.lever_graphs_o3531, 0.002); end
  def test_lever_graphs_p3531; assert_in_delta(0.02, worksheet.lever_graphs_p3531, 0.002); end
  def test_lever_graphs_q3531; assert_in_delta(0.02, worksheet.lever_graphs_q3531, 0.002); end
  def test_lever_graphs_r3531; assert_in_delta(0.02, worksheet.lever_graphs_r3531, 0.002); end
  def test_lever_graphs_s3531; assert_in_delta(0.02, worksheet.lever_graphs_s3531, 0.002); end
  def test_lever_graphs_b3532; assert_equal("Rural", worksheet.lever_graphs_b3532); end
  def test_lever_graphs_c3532; assert_in_epsilon(2.0, worksheet.lever_graphs_c3532, 0.002); end
  def test_lever_graphs_d3532; assert_equal("Developing", worksheet.lever_graphs_d3532); end
  def test_lever_graphs_k3532; assert_in_delta(0.0, (worksheet.lever_graphs_k3532||0), 0.002); end
  def test_lever_graphs_l3532; assert_in_delta(0.0275, worksheet.lever_graphs_l3532, 0.002); end
  def test_lever_graphs_m3532; assert_in_delta(0.025, worksheet.lever_graphs_m3532, 0.002); end
  def test_lever_graphs_n3532; assert_in_delta(0.02, worksheet.lever_graphs_n3532, 0.002); end
  def test_lever_graphs_o3532; assert_in_delta(0.02, worksheet.lever_graphs_o3532, 0.002); end
  def test_lever_graphs_p3532; assert_in_delta(0.015, worksheet.lever_graphs_p3532, 0.002); end
  def test_lever_graphs_q3532; assert_in_delta(0.015, worksheet.lever_graphs_q3532, 0.002); end
  def test_lever_graphs_r3532; assert_in_delta(0.015, worksheet.lever_graphs_r3532, 0.002); end
  def test_lever_graphs_s3532; assert_in_delta(0.015, worksheet.lever_graphs_s3532, 0.002); end
  def test_lever_graphs_b3533; assert_equal("Rural", worksheet.lever_graphs_b3533); end
  def test_lever_graphs_c3533; assert_in_epsilon(3.0, worksheet.lever_graphs_c3533, 0.002); end
  def test_lever_graphs_d3533; assert_equal("Developing", worksheet.lever_graphs_d3533); end
  def test_lever_graphs_k3533; assert_in_delta(0.0, (worksheet.lever_graphs_k3533||0), 0.002); end
  def test_lever_graphs_l3533; assert_in_delta(0.0275, worksheet.lever_graphs_l3533, 0.002); end
  def test_lever_graphs_m3533; assert_in_delta(0.02, worksheet.lever_graphs_m3533, 0.002); end
  def test_lever_graphs_n3533; assert_in_delta(0.015, worksheet.lever_graphs_n3533, 0.002); end
  def test_lever_graphs_o3533; assert_in_delta(0.015, worksheet.lever_graphs_o3533, 0.002); end
  def test_lever_graphs_p3533; assert_in_delta(0.015, worksheet.lever_graphs_p3533, 0.002); end
  def test_lever_graphs_q3533; assert_in_delta(0.015, worksheet.lever_graphs_q3533, 0.002); end
  def test_lever_graphs_r3533; assert_in_delta(0.01, worksheet.lever_graphs_r3533, 0.002); end
  def test_lever_graphs_s3533; assert_in_delta(0.01, worksheet.lever_graphs_s3533, 0.002); end
  def test_lever_graphs_b3534; assert_equal("Rural", worksheet.lever_graphs_b3534); end
  def test_lever_graphs_c3534; assert_in_epsilon(4.0, worksheet.lever_graphs_c3534, 0.002); end
  def test_lever_graphs_d3534; assert_equal("Developing", worksheet.lever_graphs_d3534); end
  def test_lever_graphs_k3534; assert_in_delta(0.0, (worksheet.lever_graphs_k3534||0), 0.002); end
  def test_lever_graphs_l3534; assert_in_delta(0.0275, worksheet.lever_graphs_l3534, 0.002); end
  def test_lever_graphs_m3534; assert_in_delta(0.02, worksheet.lever_graphs_m3534, 0.002); end
  def test_lever_graphs_n3534; assert_in_delta(0.015, worksheet.lever_graphs_n3534, 0.002); end
  def test_lever_graphs_o3534; assert_in_delta(0.015, worksheet.lever_graphs_o3534, 0.002); end
  def test_lever_graphs_p3534; assert_in_delta(0.015, worksheet.lever_graphs_p3534, 0.002); end
  def test_lever_graphs_q3534; assert_in_delta(0.01, worksheet.lever_graphs_q3534, 0.002); end
  def test_lever_graphs_r3534; assert_in_delta(0.005, worksheet.lever_graphs_r3534, 0.002); end
  def test_lever_graphs_s3534; assert_in_delta(0.005, worksheet.lever_graphs_s3534, 0.002); end
  def test_lever_graphs_b3535; assert_equal("International", worksheet.lever_graphs_b3535); end
  def test_lever_graphs_c3535; assert_in_delta(1.0, worksheet.lever_graphs_c3535, 0.002); end
  def test_lever_graphs_d3535; assert_equal("International slow growth", worksheet.lever_graphs_d3535); end
  def test_lever_graphs_k3535; assert_in_delta(0.0, (worksheet.lever_graphs_k3535||0), 0.002); end
  def test_lever_graphs_l3535; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_l3535, 0.002); end
  def test_lever_graphs_m3535; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_m3535, 0.002); end
  def test_lever_graphs_n3535; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_n3535, 0.002); end
  def test_lever_graphs_o3535; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_o3535, 0.002); end
  def test_lever_graphs_p3535; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_p3535, 0.002); end
  def test_lever_graphs_q3535; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_q3535, 0.002); end
  def test_lever_graphs_r3535; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_r3535, 0.002); end
  def test_lever_graphs_s3535; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_s3535, 0.002); end
  def test_lever_graphs_b3536; assert_equal("International", worksheet.lever_graphs_b3536); end
  def test_lever_graphs_c3536; assert_in_epsilon(2.0, worksheet.lever_graphs_c3536, 0.002); end
  def test_lever_graphs_d3536; assert_equal("International slow growth", worksheet.lever_graphs_d3536); end
  def test_lever_graphs_k3536; assert_in_delta(0.0, (worksheet.lever_graphs_k3536||0), 0.002); end
  def test_lever_graphs_l3536; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_l3536, 0.002); end
  def test_lever_graphs_m3536; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_m3536, 0.002); end
  def test_lever_graphs_n3536; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_n3536, 0.002); end
  def test_lever_graphs_o3536; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_o3536, 0.002); end
  def test_lever_graphs_p3536; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_p3536, 0.002); end
  def test_lever_graphs_q3536; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_q3536, 0.002); end
  def test_lever_graphs_r3536; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_r3536, 0.002); end
  def test_lever_graphs_s3536; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_s3536, 0.002); end
  def test_lever_graphs_b3537; assert_equal("International", worksheet.lever_graphs_b3537); end
  def test_lever_graphs_c3537; assert_in_epsilon(3.0, worksheet.lever_graphs_c3537, 0.002); end
  def test_lever_graphs_d3537; assert_equal("International slow growth", worksheet.lever_graphs_d3537); end
  def test_lever_graphs_k3537; assert_in_delta(0.0, (worksheet.lever_graphs_k3537||0), 0.002); end
  def test_lever_graphs_l3537; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_l3537, 0.002); end
  def test_lever_graphs_m3537; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_m3537, 0.002); end
  def test_lever_graphs_n3537; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_n3537, 0.002); end
  def test_lever_graphs_o3537; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_o3537, 0.002); end
  def test_lever_graphs_p3537; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_p3537, 0.002); end
  def test_lever_graphs_q3537; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_q3537, 0.002); end
  def test_lever_graphs_r3537; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_r3537, 0.002); end
  def test_lever_graphs_s3537; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_s3537, 0.002); end
  def test_lever_graphs_b3538; assert_equal("International", worksheet.lever_graphs_b3538); end
  def test_lever_graphs_c3538; assert_in_epsilon(4.0, worksheet.lever_graphs_c3538, 0.002); end
  def test_lever_graphs_d3538; assert_equal("International slow growth", worksheet.lever_graphs_d3538); end
  def test_lever_graphs_k3538; assert_in_delta(0.0, (worksheet.lever_graphs_k3538||0), 0.002); end
  def test_lever_graphs_l3538; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_l3538, 0.002); end
  def test_lever_graphs_m3538; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_m3538, 0.002); end
  def test_lever_graphs_n3538; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_n3538, 0.002); end
  def test_lever_graphs_o3538; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_o3538, 0.002); end
  def test_lever_graphs_p3538; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_p3538, 0.002); end
  def test_lever_graphs_q3538; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_q3538, 0.002); end
  def test_lever_graphs_r3538; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_r3538, 0.002); end
  def test_lever_graphs_s3538; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_s3538, 0.002); end
  def test_lever_graphs_b3539; assert_equal("International", worksheet.lever_graphs_b3539); end
  def test_lever_graphs_c3539; assert_in_delta(1.0, worksheet.lever_graphs_c3539, 0.002); end
  def test_lever_graphs_d3539; assert_equal("International fast growth", worksheet.lever_graphs_d3539); end
  def test_lever_graphs_k3539; assert_in_delta(0.0, (worksheet.lever_graphs_k3539||0), 0.002); end
  def test_lever_graphs_l3539; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_l3539, 0.002); end
  def test_lever_graphs_m3539; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_m3539, 0.002); end
  def test_lever_graphs_n3539; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_n3539, 0.002); end
  def test_lever_graphs_o3539; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_o3539, 0.002); end
  def test_lever_graphs_p3539; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_p3539, 0.002); end
  def test_lever_graphs_q3539; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_q3539, 0.002); end
  def test_lever_graphs_r3539; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_r3539, 0.002); end
  def test_lever_graphs_s3539; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_s3539, 0.002); end
  def test_lever_graphs_b3540; assert_equal("International", worksheet.lever_graphs_b3540); end
  def test_lever_graphs_c3540; assert_in_epsilon(2.0, worksheet.lever_graphs_c3540, 0.002); end
  def test_lever_graphs_d3540; assert_equal("International fast growth", worksheet.lever_graphs_d3540); end
  def test_lever_graphs_k3540; assert_in_delta(0.0, (worksheet.lever_graphs_k3540||0), 0.002); end
  def test_lever_graphs_l3540; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_l3540, 0.002); end
  def test_lever_graphs_m3540; assert_in_delta(0.042105358044495, worksheet.lever_graphs_m3540, 0.002); end
  def test_lever_graphs_n3540; assert_in_delta(0.042105358044495, worksheet.lever_graphs_n3540, 0.002); end
  def test_lever_graphs_o3540; assert_in_delta(0.042105358044495, worksheet.lever_graphs_o3540, 0.002); end
  def test_lever_graphs_p3540; assert_in_delta(0.042105358044495, worksheet.lever_graphs_p3540, 0.002); end
  def test_lever_graphs_q3540; assert_in_delta(0.042105358044495, worksheet.lever_graphs_q3540, 0.002); end
  def test_lever_graphs_r3540; assert_in_delta(0.042105358044495, worksheet.lever_graphs_r3540, 0.002); end
  def test_lever_graphs_s3540; assert_in_delta(0.042105358044495, worksheet.lever_graphs_s3540, 0.002); end
  def test_lever_graphs_b3541; assert_equal("International", worksheet.lever_graphs_b3541); end
  def test_lever_graphs_c3541; assert_in_epsilon(3.0, worksheet.lever_graphs_c3541, 0.002); end
  def test_lever_graphs_d3541; assert_equal("International fast growth", worksheet.lever_graphs_d3541); end
  def test_lever_graphs_k3541; assert_in_delta(0.0, (worksheet.lever_graphs_k3541||0), 0.002); end
  def test_lever_graphs_l3541; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_l3541, 0.002); end
  def test_lever_graphs_m3541; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_m3541, 0.002); end
  def test_lever_graphs_n3541; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_n3541, 0.002); end
  def test_lever_graphs_o3541; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_o3541, 0.002); end
  def test_lever_graphs_p3541; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_p3541, 0.002); end
  def test_lever_graphs_q3541; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_q3541, 0.002); end
  def test_lever_graphs_r3541; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_r3541, 0.002); end
  def test_lever_graphs_s3541; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_s3541, 0.002); end
  def test_lever_graphs_b3542; assert_equal("International", worksheet.lever_graphs_b3542); end
  def test_lever_graphs_c3542; assert_in_epsilon(4.0, worksheet.lever_graphs_c3542, 0.002); end
  def test_lever_graphs_d3542; assert_equal("International fast growth", worksheet.lever_graphs_d3542); end
  def test_lever_graphs_k3542; assert_in_delta(0.0, (worksheet.lever_graphs_k3542||0), 0.002); end
  def test_lever_graphs_l3542; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_l3542, 0.002); end
  def test_lever_graphs_m3542; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_m3542, 0.002); end
  def test_lever_graphs_n3542; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_n3542, 0.002); end
  def test_lever_graphs_o3542; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_o3542, 0.002); end
  def test_lever_graphs_p3542; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_p3542, 0.002); end
  def test_lever_graphs_q3542; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_q3542, 0.002); end
  def test_lever_graphs_r3542; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_r3542, 0.002); end
  def test_lever_graphs_s3542; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_s3542, 0.002); end
  def test_lever_graphs_f3615; assert_equal("Type of travel", worksheet.lever_graphs_f3615); end
  def test_lever_graphs_g3615; assert_equal("Level", worksheet.lever_graphs_g3615); end
  def test_lever_graphs_h3615; assert_equal("Notes", worksheet.lever_graphs_h3615); end
  def test_lever_graphs_i3615; assert_equal("…", worksheet.lever_graphs_i3615); end
  def test_lever_graphs_j3615; assert_equal("Type of city", worksheet.lever_graphs_j3615); end
  def test_lever_graphs_k3615; assert_equal("2011", worksheet.lever_graphs_k3615); end
  def test_lever_graphs_l3615; assert_equal("2015", worksheet.lever_graphs_l3615); end
  def test_lever_graphs_m3615; assert_equal("2020", worksheet.lever_graphs_m3615); end
  def test_lever_graphs_n3615; assert_equal("2025", worksheet.lever_graphs_n3615); end
  def test_lever_graphs_o3615; assert_equal("2030", worksheet.lever_graphs_o3615); end
  def test_lever_graphs_p3615; assert_equal("2035", worksheet.lever_graphs_p3615); end
  def test_lever_graphs_q3615; assert_equal("2040", worksheet.lever_graphs_q3615); end
  def test_lever_graphs_r3615; assert_equal("2045", worksheet.lever_graphs_r3615); end
  def test_lever_graphs_s3615; assert_equal("2050", worksheet.lever_graphs_s3615); end
  def test_lever_graphs_f3616; assert_equal("Urban", worksheet.lever_graphs_f3616); end
  def test_lever_graphs_g3616; assert_in_delta(1.0, worksheet.lever_graphs_g3616, 0.002); end
  def test_lever_graphs_j3616; assert_equal("Automobile city", worksheet.lever_graphs_j3616); end
  def test_lever_graphs_k3616; assert_in_epsilon(4660394117291.655, worksheet.lever_graphs_k3616, 0.002); end
  def test_lever_graphs_l3616; assert_in_epsilon(5171198867397.896, worksheet.lever_graphs_l3616, 0.002); end
  def test_lever_graphs_m3616; assert_in_epsilon(5770006285828.047, worksheet.lever_graphs_m3616, 0.002); end
  def test_lever_graphs_n3616; assert_in_epsilon(6370751046993.881, worksheet.lever_graphs_n3616, 0.002); end
  def test_lever_graphs_o3616; assert_in_epsilon(6869623077074.309, worksheet.lever_graphs_o3616, 0.002); end
  def test_lever_graphs_p3616; assert_in_epsilon(7349094693207.585, worksheet.lever_graphs_p3616, 0.002); end
  def test_lever_graphs_q3616; assert_in_epsilon(7810835330229.266, worksheet.lever_graphs_q3616, 0.002); end
  def test_lever_graphs_r3616; assert_in_epsilon(8267262538186.196, worksheet.lever_graphs_r3616, 0.002); end
  def test_lever_graphs_s3616; assert_in_epsilon(8641602846371.22, worksheet.lever_graphs_s3616, 0.002); end
  def test_lever_graphs_f3617; assert_equal("Urban", worksheet.lever_graphs_f3617); end
  def test_lever_graphs_g3617; assert_in_epsilon(2.0, worksheet.lever_graphs_g3617, 0.002); end
  def test_lever_graphs_j3617; assert_equal("Automobile city", worksheet.lever_graphs_j3617); end
  def test_lever_graphs_k3617; assert_in_epsilon(4660394117291.655, worksheet.lever_graphs_k3617, 0.002); end
  def test_lever_graphs_l3617; assert_in_epsilon(5171198867397.896, worksheet.lever_graphs_l3617, 0.002); end
  def test_lever_graphs_m3617; assert_in_epsilon(5770006285828.047, worksheet.lever_graphs_m3617, 0.002); end
  def test_lever_graphs_n3617; assert_in_epsilon(6279345586990.636, worksheet.lever_graphs_n3617, 0.002); end
  def test_lever_graphs_o3617; assert_in_epsilon(6771059963749.519, worksheet.lever_graphs_o3617, 0.002); end
  def test_lever_graphs_p3617; assert_in_epsilon(7243652277378.604, worksheet.lever_graphs_p3617, 0.002); end
  def test_lever_graphs_q3617; assert_in_epsilon(7698768010206.44, worksheet.lever_graphs_q3617, 0.002); end
  def test_lever_graphs_r3617; assert_in_epsilon(7991279192298.541, worksheet.lever_graphs_r3617, 0.002); end
  def test_lever_graphs_s3617; assert_in_epsilon(8261660280839.308, worksheet.lever_graphs_s3617, 0.002); end
  def test_lever_graphs_f3618; assert_equal("Urban", worksheet.lever_graphs_f3618); end
  def test_lever_graphs_g3618; assert_in_epsilon(3.0, worksheet.lever_graphs_g3618, 0.002); end
  def test_lever_graphs_j3618; assert_equal("Automobile city", worksheet.lever_graphs_j3618); end
  def test_lever_graphs_k3618; assert_in_epsilon(4660394117291.655, worksheet.lever_graphs_k3618, 0.002); end
  def test_lever_graphs_l3618; assert_in_epsilon(5171198867397.896, worksheet.lever_graphs_l3618, 0.002); end
  def test_lever_graphs_m3618; assert_in_epsilon(5712810006069.065, worksheet.lever_graphs_m3618, 0.002); end
  def test_lever_graphs_n3618; assert_in_epsilon(6204699670096.028, worksheet.lever_graphs_n3618, 0.002); end
  def test_lever_graphs_o3618; assert_in_epsilon(6627369067665.72, worksheet.lever_graphs_o3618, 0.002); end
  def test_lever_graphs_p3618; assert_in_epsilon(6953010965974.846, worksheet.lever_graphs_p3618, 0.002); end
  def test_lever_graphs_q3618; assert_in_epsilon(7210916416360.04, worksheet.lever_graphs_q3618, 0.002); end
  def test_lever_graphs_r3618; assert_in_epsilon(7410192977703.536, worksheet.lever_graphs_r3618, 0.002); end
  def test_lever_graphs_s3618; assert_in_epsilon(7546459476873.182, worksheet.lever_graphs_s3618, 0.002); end
  def test_lever_graphs_f3619; assert_equal("Urban", worksheet.lever_graphs_f3619); end
  def test_lever_graphs_g3619; assert_in_epsilon(4.0, worksheet.lever_graphs_g3619, 0.002); end
  def test_lever_graphs_j3619; assert_equal("Automobile city", worksheet.lever_graphs_j3619); end
  def test_lever_graphs_k3619; assert_in_epsilon(4660394117291.655, worksheet.lever_graphs_k3619, 0.002); end
  def test_lever_graphs_l3619; assert_in_epsilon(5171198867397.896, worksheet.lever_graphs_l3619, 0.002); end
  def test_lever_graphs_m3619; assert_in_epsilon(5690058899963.342, worksheet.lever_graphs_m3619, 0.002); end
  def test_lever_graphs_n3619; assert_in_epsilon(6164578189380.335, worksheet.lever_graphs_n3619, 0.002); end
  def test_lever_graphs_o3619; assert_in_epsilon(6551657684640.563, worksheet.lever_graphs_o3619, 0.002); end
  def test_lever_graphs_p3619; assert_in_epsilon(6839211605975.7705, worksheet.lever_graphs_p3619, 0.002); end
  def test_lever_graphs_q3619; assert_in_epsilon(7057396030660.884, worksheet.lever_graphs_q3619, 0.002); end
  def test_lever_graphs_r3619; assert_in_epsilon(7216095248230.405, worksheet.lever_graphs_r3619, 0.002); end
  def test_lever_graphs_s3619; assert_in_epsilon(7311938020591.433, worksheet.lever_graphs_s3619, 0.002); end
  def test_lever_graphs_f3620; assert_equal("Urban", worksheet.lever_graphs_f3620); end
  def test_lever_graphs_g3620; assert_in_delta(1.0, worksheet.lever_graphs_g3620, 0.002); end
  def test_lever_graphs_j3620; assert_equal("Transit city", worksheet.lever_graphs_j3620); end
  def test_lever_graphs_k3620; assert_in_epsilon(8979584841891.977, worksheet.lever_graphs_k3620, 0.002); end
  def test_lever_graphs_l3620; assert_in_epsilon(10292150178985.293, worksheet.lever_graphs_l3620, 0.002); end
  def test_lever_graphs_m3620; assert_in_epsilon(11713317232091.725, worksheet.lever_graphs_m3620, 0.002); end
  def test_lever_graphs_n3620; assert_in_epsilon(12979451050515.973, worksheet.lever_graphs_n3620, 0.002); end
  def test_lever_graphs_o3620; assert_in_epsilon(13915911051163.258, worksheet.lever_graphs_o3620, 0.002); end
  def test_lever_graphs_p3620; assert_in_epsilon(14778234104917.336, worksheet.lever_graphs_p3620, 0.002); end
  def test_lever_graphs_q3620; assert_in_epsilon(15372192282603.762, worksheet.lever_graphs_q3620, 0.002); end
  def test_lever_graphs_r3620; assert_in_epsilon(15893279513471.447, worksheet.lever_graphs_r3620, 0.002); end
  def test_lever_graphs_s3620; assert_in_epsilon(16089347071858.982, worksheet.lever_graphs_s3620, 0.002); end
  def test_lever_graphs_f3621; assert_equal("Urban", worksheet.lever_graphs_f3621); end
  def test_lever_graphs_g3621; assert_in_epsilon(2.0, worksheet.lever_graphs_g3621, 0.002); end
  def test_lever_graphs_j3621; assert_equal("Transit city", worksheet.lever_graphs_j3621); end
  def test_lever_graphs_k3621; assert_in_epsilon(8979584841891.977, worksheet.lever_graphs_k3621, 0.002); end
  def test_lever_graphs_l3621; assert_in_epsilon(10292150178985.293, worksheet.lever_graphs_l3621, 0.002); end
  def test_lever_graphs_m3621; assert_in_epsilon(11713317232091.725, worksheet.lever_graphs_m3621, 0.002); end
  def test_lever_graphs_n3621; assert_in_epsilon(12693431288745.65, worksheet.lever_graphs_n3621, 0.002); end
  def test_lever_graphs_o3621; assert_in_epsilon(13609255126488.195, worksheet.lever_graphs_o3621, 0.002); end
  def test_lever_graphs_p3621; assert_in_epsilon(14274151053532.209, worksheet.lever_graphs_p3621, 0.002); end
  def test_lever_graphs_q3621; assert_in_epsilon(14847849418816.307, worksheet.lever_graphs_q3621, 0.002); end
  def test_lever_graphs_r3621; assert_in_epsilon(15123404439567.53, worksheet.lever_graphs_r3621, 0.002); end
  def test_lever_graphs_s3621; assert_in_epsilon(15172952866317.594, worksheet.lever_graphs_s3621, 0.002); end
  def test_lever_graphs_f3622; assert_equal("Urban", worksheet.lever_graphs_f3622); end
  def test_lever_graphs_g3622; assert_in_epsilon(3.0, worksheet.lever_graphs_g3622, 0.002); end
  def test_lever_graphs_j3622; assert_equal("Transit city", worksheet.lever_graphs_j3622); end
  def test_lever_graphs_k3622; assert_in_epsilon(8979584841891.977, worksheet.lever_graphs_k3622, 0.002); end
  def test_lever_graphs_l3622; assert_in_epsilon(10292150178985.293, worksheet.lever_graphs_l3622, 0.002); end
  def test_lever_graphs_m3622; assert_in_epsilon(11598368983384.549, worksheet.lever_graphs_m3622, 0.002); end
  def test_lever_graphs_n3622; assert_in_epsilon(12537707414159.033, worksheet.lever_graphs_n3622, 0.002); end
  def test_lever_graphs_o3622; assert_in_epsilon(13210423483318.926, worksheet.lever_graphs_o3622, 0.002); end
  def test_lever_graphs_p3622; assert_in_epsilon(13787036577338.76, worksheet.lever_graphs_p3622, 0.002); end
  def test_lever_graphs_q3622; assert_in_epsilon(14128384084442.11, worksheet.lever_graphs_q3622, 0.002); end
  def test_lever_graphs_r3622; assert_in_epsilon(14390586849283.998, worksheet.lever_graphs_r3622, 0.002); end
  def test_lever_graphs_s3622; assert_in_epsilon(14437734364332.043, worksheet.lever_graphs_s3622, 0.002); end
  def test_lever_graphs_f3623; assert_equal("Urban", worksheet.lever_graphs_f3623); end
  def test_lever_graphs_g3623; assert_in_epsilon(4.0, worksheet.lever_graphs_g3623, 0.002); end
  def test_lever_graphs_j3623; assert_equal("Transit city", worksheet.lever_graphs_j3623); end
  def test_lever_graphs_k3623; assert_in_epsilon(8979584841891.977, worksheet.lever_graphs_k3623, 0.002); end
  def test_lever_graphs_l3623; assert_in_epsilon(10292150178985.293, worksheet.lever_graphs_l3623, 0.002); end
  def test_lever_graphs_m3623; assert_in_epsilon(11598368983384.549, worksheet.lever_graphs_m3623, 0.002); end
  def test_lever_graphs_n3623; assert_in_epsilon(12537707414159.033, worksheet.lever_graphs_n3623, 0.002); end
  def test_lever_graphs_o3623; assert_in_epsilon(13210423483318.926, worksheet.lever_graphs_o3623, 0.002); end
  def test_lever_graphs_p3623; assert_in_epsilon(13650261503085.688, worksheet.lever_graphs_p3623, 0.002); end
  def test_lever_graphs_q3623; assert_in_epsilon(13918560328135.812, worksheet.lever_graphs_q3623, 0.002); end
  def test_lever_graphs_r3623; assert_in_epsilon(14071072004549.979, worksheet.lever_graphs_r3623, 0.002); end
  def test_lever_graphs_s3623; assert_in_epsilon(14117172701208.479, worksheet.lever_graphs_s3623, 0.002); end
  def test_lever_graphs_f3624; assert_equal("Urban", worksheet.lever_graphs_f3624); end
  def test_lever_graphs_g3624; assert_in_delta(1.0, worksheet.lever_graphs_g3624, 0.002); end
  def test_lever_graphs_j3624; assert_equal("Booming city", worksheet.lever_graphs_j3624); end
  def test_lever_graphs_k3624; assert_in_epsilon(19725835047576.13, worksheet.lever_graphs_k3624, 0.002); end
  def test_lever_graphs_l3624; assert_in_epsilon(24086910778930.52, worksheet.lever_graphs_l3624, 0.002); end
  def test_lever_graphs_m3624; assert_in_epsilon(30435127117895.855, worksheet.lever_graphs_m3624, 0.002); end
  def test_lever_graphs_n3624; assert_in_epsilon(36222521370402.98, worksheet.lever_graphs_n3624, 0.002); end
  def test_lever_graphs_o3624; assert_in_epsilon(41661790861546.875, worksheet.lever_graphs_o3624, 0.002); end
  def test_lever_graphs_p3624; assert_in_epsilon(46361704358570.73, worksheet.lever_graphs_p3624, 0.002); end
  def test_lever_graphs_q3624; assert_in_epsilon(50608123480537.38, worksheet.lever_graphs_q3624, 0.002); end
  def test_lever_graphs_r3624; assert_in_epsilon(55001116346775.08, worksheet.lever_graphs_r3624, 0.002); end
  def test_lever_graphs_s3624; assert_in_epsilon(59521390822622.09, worksheet.lever_graphs_s3624, 0.002); end
  def test_lever_graphs_f3625; assert_equal("Urban", worksheet.lever_graphs_f3625); end
  def test_lever_graphs_g3625; assert_in_epsilon(2.0, worksheet.lever_graphs_g3625, 0.002); end
  def test_lever_graphs_j3625; assert_equal("Booming city", worksheet.lever_graphs_j3625); end
  def test_lever_graphs_k3625; assert_in_epsilon(19725835047576.13, worksheet.lever_graphs_k3625, 0.002); end
  def test_lever_graphs_l3625; assert_in_epsilon(24086910778930.52, worksheet.lever_graphs_l3625, 0.002); end
  def test_lever_graphs_m3625; assert_in_epsilon(29700013850853.15, worksheet.lever_graphs_m3625, 0.002); end
  def test_lever_graphs_n3625; assert_in_epsilon(34485526973841.55, worksheet.lever_graphs_n3625, 0.002); end
  def test_lever_graphs_o3625; assert_in_epsilon(39175498288630.734, worksheet.lever_graphs_o3625, 0.002); end
  def test_lever_graphs_p3625; assert_in_epsilon(43594930323399.82, worksheet.lever_graphs_p3625, 0.002); end
  def test_lever_graphs_q3625; assert_in_epsilon(47587931622798.05, worksheet.lever_graphs_q3625, 0.002); end
  def test_lever_graphs_r3625; assert_in_epsilon(51332992194761.98, worksheet.lever_graphs_r3625, 0.002); end
  def test_lever_graphs_s3625; assert_in_epsilon(55137443690034.37, worksheet.lever_graphs_s3625, 0.002); end
  def test_lever_graphs_f3626; assert_equal("Urban", worksheet.lever_graphs_f3626); end
  def test_lever_graphs_g3626; assert_in_epsilon(3.0, worksheet.lever_graphs_g3626, 0.002); end
  def test_lever_graphs_j3626; assert_equal("Booming city", worksheet.lever_graphs_j3626); end
  def test_lever_graphs_k3626; assert_in_epsilon(19725835047576.13, worksheet.lever_graphs_k3626, 0.002); end
  def test_lever_graphs_l3626; assert_in_epsilon(24086910778930.52, worksheet.lever_graphs_l3626, 0.002); end
  def test_lever_graphs_m3626; assert_in_epsilon(29337822895649.027, worksheet.lever_graphs_m3626, 0.002); end
  def test_lever_graphs_n3626; assert_in_epsilon(34064976801100.996, worksheet.lever_graphs_n3626, 0.002); end
  def test_lever_graphs_o3626; assert_in_epsilon(38697754028408.82, worksheet.lever_graphs_o3626, 0.002); end
  def test_lever_graphs_p3626; assert_in_epsilon(42636502780197.49, worksheet.lever_graphs_p3626, 0.002); end
  def test_lever_graphs_q3626; assert_in_epsilon(46425770168020.47, worksheet.lever_graphs_q3626, 0.002); end
  def test_lever_graphs_r3626; assert_in_epsilon(50079371311214.88, worksheet.lever_graphs_r3626, 0.002); end
  def test_lever_graphs_s3626; assert_in_epsilon(53656704173513.08, worksheet.lever_graphs_s3626, 0.002); end
  def test_lever_graphs_f3627; assert_equal("Urban", worksheet.lever_graphs_f3627); end
  def test_lever_graphs_g3627; assert_in_epsilon(4.0, worksheet.lever_graphs_g3627, 0.002); end
  def test_lever_graphs_j3627; assert_equal("Booming city", worksheet.lever_graphs_j3627); end
  def test_lever_graphs_k3627; assert_in_epsilon(19725835047576.13, worksheet.lever_graphs_k3627, 0.002); end
  def test_lever_graphs_l3627; assert_in_epsilon(24086910778930.52, worksheet.lever_graphs_l3627, 0.002); end
  def test_lever_graphs_m3627; assert_in_epsilon(28979174118357.184, worksheet.lever_graphs_m3627, 0.002); end
  def test_lever_graphs_n3627; assert_in_epsilon(33648539551423.49, worksheet.lever_graphs_n3627, 0.002); end
  def test_lever_graphs_o3627; assert_in_epsilon(37752778176528.92, worksheet.lever_graphs_o3627, 0.002); end
  def test_lever_graphs_p3627; assert_in_epsilon(41491771040545.99, worksheet.lever_graphs_p3627, 0.002); end
  def test_lever_graphs_q3627; assert_in_epsilon(44954305710370.57, worksheet.lever_graphs_q3627, 0.002); end
  def test_lever_graphs_r3627; assert_in_epsilon(48298640824087.24, worksheet.lever_graphs_r3627, 0.002); end
  def test_lever_graphs_s3627; assert_in_epsilon(51671232448708.04, worksheet.lever_graphs_s3627, 0.002); end
  def test_lever_graphs_f3628; assert_equal("Rural", worksheet.lever_graphs_f3628); end
  def test_lever_graphs_g3628; assert_in_delta(1.0, worksheet.lever_graphs_g3628, 0.002); end
  def test_lever_graphs_j3628; assert_equal("Developed", worksheet.lever_graphs_j3628); end
  def test_lever_graphs_k3628; assert_in_epsilon(6634160739736.332, worksheet.lever_graphs_k3628, 0.002); end
  def test_lever_graphs_l3628; assert_in_epsilon(6731609561968.717, worksheet.lever_graphs_l3628, 0.002); end
  def test_lever_graphs_m3628; assert_in_epsilon(6813123340819.391, worksheet.lever_graphs_m3628, 0.002); end
  def test_lever_graphs_n3628; assert_in_epsilon(6860388098157.445, worksheet.lever_graphs_n3628, 0.002); end
  def test_lever_graphs_o3628; assert_in_epsilon(6877078896253.531, worksheet.lever_graphs_o3628, 0.002); end
  def test_lever_graphs_p3628; assert_in_epsilon(6868130148301.212, worksheet.lever_graphs_p3628, 0.002); end
  def test_lever_graphs_q3628; assert_in_epsilon(6828962049884.475, worksheet.lever_graphs_q3628, 0.002); end
  def test_lever_graphs_r3628; assert_in_epsilon(6592735854237.43, worksheet.lever_graphs_r3628, 0.002); end
  def test_lever_graphs_s3628; assert_in_epsilon(6311010846238.058, worksheet.lever_graphs_s3628, 0.002); end
  def test_lever_graphs_f3629; assert_equal("Rural", worksheet.lever_graphs_f3629); end
  def test_lever_graphs_g3629; assert_in_epsilon(2.0, worksheet.lever_graphs_g3629, 0.002); end
  def test_lever_graphs_j3629; assert_equal("Developed", worksheet.lever_graphs_j3629); end
  def test_lever_graphs_k3629; assert_in_epsilon(6634160739736.332, worksheet.lever_graphs_k3629, 0.002); end
  def test_lever_graphs_l3629; assert_in_epsilon(6731609561968.717, worksheet.lever_graphs_l3629, 0.002); end
  def test_lever_graphs_m3629; assert_in_epsilon(6752586544435.684, worksheet.lever_graphs_m3629, 0.002); end
  def test_lever_graphs_n3629; assert_in_epsilon(6739016200637.021, worksheet.lever_graphs_n3629, 0.002); end
  def test_lever_graphs_o3629; assert_in_epsilon(6695387700266.412, worksheet.lever_graphs_o3629, 0.002); end
  def test_lever_graphs_p3629; assert_in_epsilon(6627262111161.863, worksheet.lever_graphs_p3629, 0.002); end
  def test_lever_graphs_q3629; assert_in_epsilon(6370461137040.822, worksheet.lever_graphs_q3629, 0.002); end
  def test_lever_graphs_r3629; assert_in_epsilon(6073981217792.462, worksheet.lever_graphs_r3629, 0.002); end
  def test_lever_graphs_s3629; assert_in_epsilon(5742464159557.68, worksheet.lever_graphs_s3629, 0.002); end
  def test_lever_graphs_f3630; assert_equal("Rural", worksheet.lever_graphs_f3630); end
  def test_lever_graphs_g3630; assert_in_epsilon(3.0, worksheet.lever_graphs_g3630, 0.002); end
  def test_lever_graphs_j3630; assert_equal("Developed", worksheet.lever_graphs_j3630); end
  def test_lever_graphs_k3630; assert_in_epsilon(6634160739736.332, worksheet.lever_graphs_k3630, 0.002); end
  def test_lever_graphs_l3630; assert_in_epsilon(6731609561968.717, worksheet.lever_graphs_l3630, 0.002); end
  def test_lever_graphs_m3630; assert_in_epsilon(6669222301248.492, worksheet.lever_graphs_m3630, 0.002); end
  def test_lever_graphs_n3630; assert_in_epsilon(6573649887645.622, worksheet.lever_graphs_n3630, 0.002); end
  def test_lever_graphs_o3630; assert_in_epsilon(6370630727040.085, worksheet.lever_graphs_o3630, 0.002); end
  def test_lever_graphs_p3630; assert_in_epsilon(6150883220859.31, worksheet.lever_graphs_p3630, 0.002); end
  def test_lever_graphs_q3630; assert_in_epsilon(5883111325236.978, worksheet.lever_graphs_q3630, 0.002); end
  def test_lever_graphs_r3630; assert_in_epsilon(5539718977244.4, worksheet.lever_graphs_r3630, 0.002); end
  def test_lever_graphs_s3630; assert_in_epsilon(5133706339400.762, worksheet.lever_graphs_s3630, 0.002); end
  def test_lever_graphs_f3631; assert_equal("Rural", worksheet.lever_graphs_f3631); end
  def test_lever_graphs_g3631; assert_in_epsilon(4.0, worksheet.lever_graphs_g3631, 0.002); end
  def test_lever_graphs_j3631; assert_equal("Developed", worksheet.lever_graphs_j3631); end
  def test_lever_graphs_k3631; assert_in_epsilon(6634160739736.332, worksheet.lever_graphs_k3631, 0.002); end
  def test_lever_graphs_l3631; assert_in_epsilon(6731609561968.717, worksheet.lever_graphs_l3631, 0.002); end
  def test_lever_graphs_m3631; assert_in_epsilon(6619196637391.429, worksheet.lever_graphs_m3631, 0.002); end
  def test_lever_graphs_n3631; assert_in_epsilon(6363650949055.589, worksheet.lever_graphs_n3631, 0.002); end
  def test_lever_graphs_o3631; assert_in_epsilon(6045060503326.514, worksheet.lever_graphs_o3631, 0.002); end
  def test_lever_graphs_p3631; assert_in_epsilon(5721028894934.223, worksheet.lever_graphs_p3631, 0.002); end
  def test_lever_graphs_q3631; assert_in_epsilon(5390503147851.514, worksheet.lever_graphs_q3631, 0.002); end
  def test_lever_graphs_r3631; assert_in_epsilon(5037908988492.173, worksheet.lever_graphs_r3631, 0.002); end
  def test_lever_graphs_s3631; assert_in_epsilon(4668674605658.669, worksheet.lever_graphs_s3631, 0.002); end
  def test_lever_graphs_f3632; assert_equal("Rural", worksheet.lever_graphs_f3632); end
  def test_lever_graphs_g3632; assert_in_delta(1.0, worksheet.lever_graphs_g3632, 0.002); end
  def test_lever_graphs_j3632; assert_equal("Developing", worksheet.lever_graphs_j3632); end
  def test_lever_graphs_k3632; assert_in_epsilon(12215635525941.037, worksheet.lever_graphs_k3632, 0.002); end
  def test_lever_graphs_l3632; assert_in_epsilon(13786946054885.453, worksheet.lever_graphs_l3632, 0.002); end
  def test_lever_graphs_m3632; assert_in_epsilon(15703187582387.014, worksheet.lever_graphs_m3632, 0.002); end
  def test_lever_graphs_n3632; assert_in_epsilon(17604043652113.027, worksheet.lever_graphs_n3632, 0.002); end
  def test_lever_graphs_o3632; assert_in_epsilon(19677698669788.93, worksheet.lever_graphs_o3632, 0.002); end
  def test_lever_graphs_p3632; assert_in_epsilon(21684151370844.285, worksheet.lever_graphs_p3632, 0.002); end
  def test_lever_graphs_q3632; assert_in_epsilon(23834234209665.465, worksheet.lever_graphs_q3632, 0.002); end
  def test_lever_graphs_r3632; assert_in_epsilon(26038152730489.582, worksheet.lever_graphs_r3632, 0.002); end
  def test_lever_graphs_s3632; assert_in_epsilon(28269107585517.195, worksheet.lever_graphs_s3632, 0.002); end
  def test_lever_graphs_f3633; assert_equal("Rural", worksheet.lever_graphs_f3633); end
  def test_lever_graphs_g3633; assert_in_epsilon(2.0, worksheet.lever_graphs_g3633, 0.002); end
  def test_lever_graphs_j3633; assert_equal("Developing", worksheet.lever_graphs_j3633); end
  def test_lever_graphs_k3633; assert_in_epsilon(12215635525941.037, worksheet.lever_graphs_k3633, 0.002); end
  def test_lever_graphs_l3633; assert_in_epsilon(13786946054885.453, worksheet.lever_graphs_l3633, 0.002); end
  def test_lever_graphs_m3633; assert_in_epsilon(15703187582387.014, worksheet.lever_graphs_m3633, 0.002); end
  def test_lever_graphs_n3633; assert_in_epsilon(17389885088242.414, worksheet.lever_graphs_n3633, 0.002); end
  def test_lever_graphs_o3633; assert_in_epsilon(19201840443829.6, worksheet.lever_graphs_o3633, 0.002); end
  def test_lever_graphs_p3633; assert_in_epsilon(20646209675519.543, worksheet.lever_graphs_p3633, 0.002); end
  def test_lever_graphs_q3633; assert_in_epsilon(22142592029118.492, worksheet.lever_graphs_q3633, 0.002); end
  def test_lever_graphs_r3633; assert_in_epsilon(23602976730170.395, worksheet.lever_graphs_r3633, 0.002); end
  def test_lever_graphs_s3633; assert_in_epsilon(25003341882332.547, worksheet.lever_graphs_s3633, 0.002); end
  def test_lever_graphs_f3634; assert_equal("Rural", worksheet.lever_graphs_f3634); end
  def test_lever_graphs_g3634; assert_in_epsilon(3.0, worksheet.lever_graphs_g3634, 0.002); end
  def test_lever_graphs_j3634; assert_equal("Developing", worksheet.lever_graphs_j3634); end
  def test_lever_graphs_k3634; assert_in_epsilon(12215635525941.037, worksheet.lever_graphs_k3634, 0.002); end
  def test_lever_graphs_l3634; assert_in_epsilon(13786946054885.453, worksheet.lever_graphs_l3634, 0.002); end
  def test_lever_graphs_m3634; assert_in_epsilon(15323901454159.037, worksheet.lever_graphs_m3634, 0.002); end
  def test_lever_graphs_n3634; assert_in_epsilon(16557989257553.674, worksheet.lever_graphs_n3634, 0.002); end
  def test_lever_graphs_o3634; assert_in_epsilon(17839517064216.605, worksheet.lever_graphs_o3634, 0.002); end
  def test_lever_graphs_p3634; assert_in_epsilon(19181411849309.574, worksheet.lever_graphs_p3634, 0.002); end
  def test_lever_graphs_q3634; assert_in_epsilon(20571629553165.105, worksheet.lever_graphs_q3634, 0.002); end
  def test_lever_graphs_r3634; assert_in_epsilon(21393590204630.66, worksheet.lever_graphs_r3634, 0.002); end
  def test_lever_graphs_s3634; assert_in_epsilon(22110146047143.85, worksheet.lever_graphs_s3634, 0.002); end
  def test_lever_graphs_f3635; assert_equal("Rural", worksheet.lever_graphs_f3635); end
  def test_lever_graphs_g3635; assert_in_epsilon(4.0, worksheet.lever_graphs_g3635, 0.002); end
  def test_lever_graphs_j3635; assert_equal("Developing", worksheet.lever_graphs_j3635); end
  def test_lever_graphs_k3635; assert_in_epsilon(12215635525941.037, worksheet.lever_graphs_k3635, 0.002); end
  def test_lever_graphs_l3635; assert_in_epsilon(13786946054885.453, worksheet.lever_graphs_l3635, 0.002); end
  def test_lever_graphs_m3635; assert_in_epsilon(15323901454159.037, worksheet.lever_graphs_m3635, 0.002); end
  def test_lever_graphs_n3635; assert_in_epsilon(16557989257553.674, worksheet.lever_graphs_n3635, 0.002); end
  def test_lever_graphs_o3635; assert_in_epsilon(17839517064216.605, worksheet.lever_graphs_o3635, 0.002); end
  def test_lever_graphs_p3635; assert_in_epsilon(19181411849309.574, worksheet.lever_graphs_p3635, 0.002); end
  def test_lever_graphs_q3635; assert_in_epsilon(20069906662822.12, worksheet.lever_graphs_q3635, 0.002); end
  def test_lever_graphs_r3635; assert_in_epsilon(20360281120967.35, worksheet.lever_graphs_r3635, 0.002); end
  def test_lever_graphs_s3635; assert_in_epsilon(20526511585704.258, worksheet.lever_graphs_s3635, 0.002); end
  def test_lever_graphs_f3636; assert_equal("International", worksheet.lever_graphs_f3636); end
  def test_lever_graphs_g3636; assert_in_delta(1.0, worksheet.lever_graphs_g3636, 0.002); end
  def test_lever_graphs_j3636; assert_equal("International slow growth", worksheet.lever_graphs_j3636); end
  def test_lever_graphs_k3636; assert_in_epsilon(4003883912747.2563, worksheet.lever_graphs_k3636, 0.002); end
  def test_lever_graphs_l3636; assert_in_epsilon(4486625265288.134, worksheet.lever_graphs_l3636, 0.002); end
  def test_lever_graphs_m3636; assert_in_epsilon(5116359699546.063, worksheet.lever_graphs_m3636, 0.002); end
  def test_lever_graphs_n3636; assert_in_epsilon(5798700654526.816, worksheet.lever_graphs_n3636, 0.002); end
  def test_lever_graphs_o3636; assert_in_epsilon(6535985392974.534, worksheet.lever_graphs_o3636, 0.002); end
  def test_lever_graphs_p3636; assert_in_epsilon(7332058590767.87, worksheet.lever_graphs_p3636, 0.002); end
  def test_lever_graphs_q3636; assert_in_epsilon(8188950461781.942, worksheet.lever_graphs_q3636, 0.002); end
  def test_lever_graphs_r3636; assert_in_epsilon(9106468388033.11, worksheet.lever_graphs_r3636, 0.002); end
  def test_lever_graphs_s3636; assert_in_epsilon(10083922574157.883, worksheet.lever_graphs_s3636, 0.002); end
  def test_lever_graphs_f3637; assert_equal("International", worksheet.lever_graphs_f3637); end
  def test_lever_graphs_g3637; assert_in_epsilon(2.0, worksheet.lever_graphs_g3637, 0.002); end
  def test_lever_graphs_j3637; assert_equal("International slow growth", worksheet.lever_graphs_j3637); end
  def test_lever_graphs_k3637; assert_in_epsilon(4003883912747.2563, worksheet.lever_graphs_k3637, 0.002); end
  def test_lever_graphs_l3637; assert_in_epsilon(4486625265288.134, worksheet.lever_graphs_l3637, 0.002); end
  def test_lever_graphs_m3637; assert_in_epsilon(4963173501663.59, worksheet.lever_graphs_m3637, 0.002); end
  def test_lever_graphs_n3637; assert_in_epsilon(5456667183540.511, worksheet.lever_graphs_n3637, 0.002); end
  def test_lever_graphs_o3637; assert_in_epsilon(5966315798897.56, worksheet.lever_graphs_o3637, 0.002); end
  def test_lever_graphs_p3637; assert_in_epsilon(6492612429152.186, worksheet.lever_graphs_p3637, 0.002); end
  def test_lever_graphs_q3637; assert_in_epsilon(7034288625143.366, worksheet.lever_graphs_q3637, 0.002); end
  def test_lever_graphs_r3637; assert_in_epsilon(7588226968133.119, worksheet.lever_graphs_r3637, 0.002); end
  def test_lever_graphs_s3637; assert_in_epsilon(8151137486706.55, worksheet.lever_graphs_s3637, 0.002); end
  def test_lever_graphs_f3638; assert_equal("International", worksheet.lever_graphs_f3638); end
  def test_lever_graphs_g3638; assert_in_epsilon(3.0, worksheet.lever_graphs_g3638, 0.002); end
  def test_lever_graphs_j3638; assert_equal("International slow growth", worksheet.lever_graphs_j3638); end
  def test_lever_graphs_k3638; assert_in_epsilon(4003883912747.2563, worksheet.lever_graphs_k3638, 0.002); end
  def test_lever_graphs_l3638; assert_in_epsilon(4486625265288.134, worksheet.lever_graphs_l3638, 0.002); end
  def test_lever_graphs_m3638; assert_in_epsilon(4757240883863.283, worksheet.lever_graphs_m3638, 0.002); end
  def test_lever_graphs_n3638; assert_in_epsilon(5013243923384.648, worksheet.lever_graphs_n3638, 0.002); end
  def test_lever_graphs_o3638; assert_in_epsilon(5254039002003.484, worksheet.lever_graphs_o3638, 0.002); end
  def test_lever_graphs_p3638; assert_in_epsilon(5480273326575.201, worksheet.lever_graphs_p3638, 0.002); end
  def test_lever_graphs_q3638; assert_in_epsilon(5691131355557.158, worksheet.lever_graphs_q3638, 0.002); end
  def test_lever_graphs_r3638; assert_in_epsilon(5884565796265.762, worksheet.lever_graphs_r3638, 0.002); end
  def test_lever_graphs_s3638; assert_in_epsilon(6058819498169.161, worksheet.lever_graphs_s3638, 0.002); end
  def test_lever_graphs_f3639; assert_equal("International", worksheet.lever_graphs_f3639); end
  def test_lever_graphs_g3639; assert_in_epsilon(4.0, worksheet.lever_graphs_g3639, 0.002); end
  def test_lever_graphs_j3639; assert_equal("International slow growth", worksheet.lever_graphs_j3639); end
  def test_lever_graphs_k3639; assert_in_epsilon(4003883912747.2563, worksheet.lever_graphs_k3639, 0.002); end
  def test_lever_graphs_l3639; assert_in_epsilon(4486625265288.134, worksheet.lever_graphs_l3639, 0.002); end
  def test_lever_graphs_m3639; assert_in_epsilon(4437219717127.221, worksheet.lever_graphs_m3639, 0.002); end
  def test_lever_graphs_n3639; assert_in_epsilon(4361445191283.9976, worksheet.lever_graphs_n3639, 0.002); end
  def test_lever_graphs_o3639; assert_in_epsilon(4263445022230.834, worksheet.lever_graphs_o3639, 0.002); end
  def test_lever_graphs_p3639; assert_in_epsilon(4147872378757.677, worksheet.lever_graphs_p3639, 0.002); end
  def test_lever_graphs_q3639; assert_in_epsilon(4017700577361.6455, worksheet.lever_graphs_q3639, 0.002); end
  def test_lever_graphs_r3639; assert_in_epsilon(3874798942894.1045, worksheet.lever_graphs_r3639, 0.002); end
  def test_lever_graphs_s3639; assert_in_epsilon(3721161811903.7007, worksheet.lever_graphs_s3639, 0.002); end
  def test_lever_graphs_f3640; assert_equal("International", worksheet.lever_graphs_f3640); end
  def test_lever_graphs_g3640; assert_in_delta(1.0, worksheet.lever_graphs_g3640, 0.002); end
  def test_lever_graphs_j3640; assert_equal("International fast growth", worksheet.lever_graphs_j3640); end
  def test_lever_graphs_k3640; assert_in_epsilon(1334627970915.7546, worksheet.lever_graphs_k3640, 0.002); end
  def test_lever_graphs_l3640; assert_in_epsilon(1735351689666.2114, worksheet.lever_graphs_l3640, 0.002); end
  def test_lever_graphs_m3640; assert_in_epsilon(2384097147912.68, worksheet.lever_graphs_m3640, 0.002); end
  def test_lever_graphs_n3640; assert_in_epsilon(3256662822013.7827, worksheet.lever_graphs_n3640, 0.002); end
  def test_lever_graphs_o3640; assert_in_epsilon(4426137440432.912, worksheet.lever_graphs_o3640, 0.002); end
  def test_lever_graphs_p3640; assert_in_epsilon(5989808588231.523, worksheet.lever_graphs_p3640, 0.002); end
  def test_lever_graphs_q3640; assert_in_epsilon(8074200549519.234, worksheet.lever_graphs_q3640, 0.002); end
  def test_lever_graphs_r3640; assert_in_epsilon(10842436341770.746, worksheet.lever_graphs_r3640, 0.002); end
  def test_lever_graphs_s3640; assert_in_epsilon(14505888415235.67, worksheet.lever_graphs_s3640, 0.002); end
  def test_lever_graphs_f3641; assert_equal("International", worksheet.lever_graphs_f3641); end
  def test_lever_graphs_g3641; assert_in_epsilon(2.0, worksheet.lever_graphs_g3641, 0.002); end
  def test_lever_graphs_j3641; assert_equal("International fast growth", worksheet.lever_graphs_j3641); end
  def test_lever_graphs_k3641; assert_in_epsilon(1334627970915.7546, worksheet.lever_graphs_k3641, 0.002); end
  def test_lever_graphs_l3641; assert_in_epsilon(1735351689666.2114, worksheet.lever_graphs_l3641, 0.002); end
  def test_lever_graphs_m3641; assert_in_epsilon(2256786271425.642, worksheet.lever_graphs_m3641, 0.002); end
  def test_lever_graphs_n3641; assert_in_epsilon(2918137572443.4985, worksheet.lever_graphs_n3641, 0.002); end
  def test_lever_graphs_o3641; assert_in_epsilon(3754259986232.103, worksheet.lever_graphs_o3641, 0.002); end
  def test_lever_graphs_p3641; assert_in_epsilon(4809266862130.464, worksheet.lever_graphs_p3641, 0.002); end
  def test_lever_graphs_q3641; assert_in_epsilon(6136658383465.779, worksheet.lever_graphs_q3641, 0.002); end
  def test_lever_graphs_r3641; assert_in_epsilon(7800559956522.215, worksheet.lever_graphs_r3641, 0.002); end
  def test_lever_graphs_s3641; assert_in_epsilon(9878925577438.08, worksheet.lever_graphs_s3641, 0.002); end
  def test_lever_graphs_f3642; assert_equal("International", worksheet.lever_graphs_f3642); end
  def test_lever_graphs_g3642; assert_in_epsilon(3.0, worksheet.lever_graphs_g3642, 0.002); end
  def test_lever_graphs_j3642; assert_equal("International fast growth", worksheet.lever_graphs_j3642); end
  def test_lever_graphs_k3642; assert_in_epsilon(1334627970915.7546, worksheet.lever_graphs_k3642, 0.002); end
  def test_lever_graphs_l3642; assert_in_epsilon(1735351689666.2114, worksheet.lever_graphs_l3642, 0.002); end
  def test_lever_graphs_m3642; assert_in_epsilon(2106430665017.3262, worksheet.lever_graphs_m3642, 0.002); end
  def test_lever_graphs_n3642; assert_in_epsilon(2542255742205.995, worksheet.lever_graphs_n3642, 0.002); end
  def test_lever_graphs_o3642; assert_in_epsilon(3052773313092.0254, worksheet.lever_graphs_o3642, 0.002); end
  def test_lever_graphs_p3642; assert_in_epsilon(3650108931936.997, worksheet.lever_graphs_p3642, 0.002); end
  def test_lever_graphs_q3642; assert_in_epsilon(4347260188533.1104, worksheet.lever_graphs_q3642, 0.002); end
  def test_lever_graphs_r3642; assert_in_epsilon(5157820250714.642, worksheet.lever_graphs_r3642, 0.002); end
  def test_lever_graphs_s3642; assert_in_epsilon(6096869154453.556, worksheet.lever_graphs_s3642, 0.002); end
  def test_lever_graphs_f3643; assert_equal("International", worksheet.lever_graphs_f3643); end
  def test_lever_graphs_g3643; assert_in_epsilon(4.0, worksheet.lever_graphs_g3643, 0.002); end
  def test_lever_graphs_j3643; assert_equal("International fast growth", worksheet.lever_graphs_j3643); end
  def test_lever_graphs_k3643; assert_in_epsilon(1334627970915.7546, worksheet.lever_graphs_k3643, 0.002); end
  def test_lever_graphs_l3643; assert_in_epsilon(1735351689666.2114, worksheet.lever_graphs_l3643, 0.002); end
  def test_lever_graphs_m3643; assert_in_epsilon(1969503887599.12, worksheet.lever_graphs_m3643, 0.002); end
  def test_lever_graphs_n3643; assert_in_epsilon(2222483701169.1313, worksheet.lever_graphs_n3643, 0.002); end
  def test_lever_graphs_o3643; assert_in_epsilon(2495304662807.9087, worksheet.lever_graphs_o3643, 0.002); end
  def test_lever_graphs_p3643; assert_in_epsilon(2789616614868.6494, worksheet.lever_graphs_p3643, 0.002); end
  def test_lever_graphs_q3643; assert_in_epsilon(3106447393394.8965, worksheet.lever_graphs_q3643, 0.002); end
  def test_lever_graphs_r3643; assert_in_epsilon(3446071199855.789, worksheet.lever_graphs_r3643, 0.002); end
  def test_lever_graphs_s3643; assert_in_epsilon(3808680933596.9814, worksheet.lever_graphs_s3643, 0.002); end
  def test_lever_graphs_f3646; assert_equal("Type of travel", worksheet.lever_graphs_f3646); end
  def test_lever_graphs_g3646; assert_equal("Level", worksheet.lever_graphs_g3646); end
  def test_lever_graphs_h3646; assert_equal("Notes", worksheet.lever_graphs_h3646); end
  def test_lever_graphs_i3646; assert_equal("…", worksheet.lever_graphs_i3646); end
  def test_lever_graphs_j3646; assert_equal("…2", worksheet.lever_graphs_j3646); end
  def test_lever_graphs_k3646; assert_equal("2011", worksheet.lever_graphs_k3646); end
  def test_lever_graphs_l3646; assert_equal("2015", worksheet.lever_graphs_l3646); end
  def test_lever_graphs_m3646; assert_equal("2020", worksheet.lever_graphs_m3646); end
  def test_lever_graphs_n3646; assert_equal("2025", worksheet.lever_graphs_n3646); end
  def test_lever_graphs_o3646; assert_equal("2030", worksheet.lever_graphs_o3646); end
  def test_lever_graphs_p3646; assert_equal("2035", worksheet.lever_graphs_p3646); end
  def test_lever_graphs_q3646; assert_equal("2040", worksheet.lever_graphs_q3646); end
  def test_lever_graphs_r3646; assert_equal("2045", worksheet.lever_graphs_r3646); end
  def test_lever_graphs_s3646; assert_equal("2050", worksheet.lever_graphs_s3646); end
  def test_lever_graphs_f3647; assert_equal("Urban", worksheet.lever_graphs_f3647); end
  def test_lever_graphs_g3647; assert_in_delta(1.0, worksheet.lever_graphs_g3647, 0.002); end
  def test_lever_graphs_k3647; assert_in_epsilon(33365814006759.76, worksheet.lever_graphs_k3647, 0.002); end
  def test_lever_graphs_l3647; assert_in_epsilon(39550259825313.71, worksheet.lever_graphs_l3647, 0.002); end
  def test_lever_graphs_m3647; assert_in_epsilon(47918450635815.625, worksheet.lever_graphs_m3647, 0.002); end
  def test_lever_graphs_n3647; assert_in_epsilon(55572723467912.83, worksheet.lever_graphs_n3647, 0.002); end
  def test_lever_graphs_o3647; assert_in_epsilon(62447324989784.44, worksheet.lever_graphs_o3647, 0.002); end
  def test_lever_graphs_p3647; assert_in_epsilon(68489033156695.65, worksheet.lever_graphs_p3647, 0.002); end
  def test_lever_graphs_q3647; assert_in_epsilon(73791151093370.4, worksheet.lever_graphs_q3647, 0.002); end
  def test_lever_graphs_r3647; assert_in_epsilon(79161658398432.72, worksheet.lever_graphs_r3647, 0.002); end
  def test_lever_graphs_s3647; assert_in_epsilon(84252340740852.3, worksheet.lever_graphs_s3647, 0.002); end
  def test_lever_graphs_f3648; assert_equal("Urban", worksheet.lever_graphs_f3648); end
  def test_lever_graphs_g3648; assert_in_epsilon(2.0, worksheet.lever_graphs_g3648, 0.002); end
  def test_lever_graphs_k3648; assert_in_epsilon(33365814006759.76, worksheet.lever_graphs_k3648, 0.002); end
  def test_lever_graphs_l3648; assert_in_epsilon(39550259825313.71, worksheet.lever_graphs_l3648, 0.002); end
  def test_lever_graphs_m3648; assert_in_epsilon(47183337368772.92, worksheet.lever_graphs_m3648, 0.002); end
  def test_lever_graphs_n3648; assert_in_epsilon(53458303849577.836, worksheet.lever_graphs_n3648, 0.002); end
  def test_lever_graphs_o3648; assert_in_epsilon(59555813378868.45, worksheet.lever_graphs_o3648, 0.002); end
  def test_lever_graphs_p3648; assert_in_epsilon(65112733654310.63, worksheet.lever_graphs_p3648, 0.002); end
  def test_lever_graphs_q3648; assert_in_epsilon(70134549051820.8, worksheet.lever_graphs_q3648, 0.002); end
  def test_lever_graphs_r3648; assert_in_epsilon(74447675826628.05, worksheet.lever_graphs_r3648, 0.002); end
  def test_lever_graphs_s3648; assert_in_epsilon(78572056837191.27, worksheet.lever_graphs_s3648, 0.002); end
  def test_lever_graphs_f3649; assert_equal("Urban", worksheet.lever_graphs_f3649); end
  def test_lever_graphs_g3649; assert_in_epsilon(3.0, worksheet.lever_graphs_g3649, 0.002); end
  def test_lever_graphs_k3649; assert_in_epsilon(33365814006759.76, worksheet.lever_graphs_k3649, 0.002); end
  def test_lever_graphs_l3649; assert_in_epsilon(39550259825313.71, worksheet.lever_graphs_l3649, 0.002); end
  def test_lever_graphs_m3649; assert_in_epsilon(46649001885102.64, worksheet.lever_graphs_m3649, 0.002); end
  def test_lever_graphs_n3649; assert_in_epsilon(52807383885356.06, worksheet.lever_graphs_n3649, 0.002); end
  def test_lever_graphs_o3649; assert_in_epsilon(58535546579393.47, worksheet.lever_graphs_o3649, 0.002); end
  def test_lever_graphs_p3649; assert_in_epsilon(63376550323511.09, worksheet.lever_graphs_p3649, 0.002); end
  def test_lever_graphs_q3649; assert_in_epsilon(67765070668822.62, worksheet.lever_graphs_q3649, 0.002); end
  def test_lever_graphs_r3649; assert_in_epsilon(71880151138202.42, worksheet.lever_graphs_r3649, 0.002); end
  def test_lever_graphs_s3649; assert_in_epsilon(75640898014718.31, worksheet.lever_graphs_s3649, 0.002); end
  def test_lever_graphs_f3650; assert_equal("Urban", worksheet.lever_graphs_f3650); end
  def test_lever_graphs_g3650; assert_in_epsilon(4.0, worksheet.lever_graphs_g3650, 0.002); end
  def test_lever_graphs_k3650; assert_in_epsilon(33365814006759.76, worksheet.lever_graphs_k3650, 0.002); end
  def test_lever_graphs_l3650; assert_in_epsilon(39550259825313.71, worksheet.lever_graphs_l3650, 0.002); end
  def test_lever_graphs_m3650; assert_in_epsilon(46267602001705.08, worksheet.lever_graphs_m3650, 0.002); end
  def test_lever_graphs_n3650; assert_in_epsilon(52350825154962.86, worksheet.lever_graphs_n3650, 0.002); end
  def test_lever_graphs_o3650; assert_in_epsilon(57514859344488.41, worksheet.lever_graphs_o3650, 0.002); end
  def test_lever_graphs_p3650; assert_in_epsilon(61981244149607.45, worksheet.lever_graphs_p3650, 0.002); end
  def test_lever_graphs_q3650; assert_in_epsilon(65930262069167.266, worksheet.lever_graphs_q3650, 0.002); end
  def test_lever_graphs_r3650; assert_in_epsilon(69585808076867.625, worksheet.lever_graphs_r3650, 0.002); end
  def test_lever_graphs_s3650; assert_in_epsilon(73100343170507.95, worksheet.lever_graphs_s3650, 0.002); end
  def test_lever_graphs_f3651; assert_equal("Rural", worksheet.lever_graphs_f3651); end
  def test_lever_graphs_g3651; assert_in_delta(1.0, worksheet.lever_graphs_g3651, 0.002); end
  def test_lever_graphs_k3651; assert_in_epsilon(18849796265677.367, worksheet.lever_graphs_k3651, 0.002); end
  def test_lever_graphs_l3651; assert_in_epsilon(20518555616854.17, worksheet.lever_graphs_l3651, 0.002); end
  def test_lever_graphs_m3651; assert_in_epsilon(22516310923206.406, worksheet.lever_graphs_m3651, 0.002); end
  def test_lever_graphs_n3651; assert_in_epsilon(24464431750270.473, worksheet.lever_graphs_n3651, 0.002); end
  def test_lever_graphs_o3651; assert_in_epsilon(26554777566042.46, worksheet.lever_graphs_o3651, 0.002); end
  def test_lever_graphs_p3651; assert_in_epsilon(28552281519145.496, worksheet.lever_graphs_p3651, 0.002); end
  def test_lever_graphs_q3651; assert_in_epsilon(30663196259549.938, worksheet.lever_graphs_q3651, 0.002); end
  def test_lever_graphs_r3651; assert_in_epsilon(32630888584727.01, worksheet.lever_graphs_r3651, 0.002); end
  def test_lever_graphs_s3651; assert_in_epsilon(34580118431755.254, worksheet.lever_graphs_s3651, 0.002); end
  def test_lever_graphs_f3652; assert_equal("Rural", worksheet.lever_graphs_f3652); end
  def test_lever_graphs_g3652; assert_in_epsilon(2.0, worksheet.lever_graphs_g3652, 0.002); end
  def test_lever_graphs_k3652; assert_in_epsilon(18849796265677.367, worksheet.lever_graphs_k3652, 0.002); end
  def test_lever_graphs_l3652; assert_in_epsilon(20518555616854.17, worksheet.lever_graphs_l3652, 0.002); end
  def test_lever_graphs_m3652; assert_in_epsilon(22455774126822.695, worksheet.lever_graphs_m3652, 0.002); end
  def test_lever_graphs_n3652; assert_in_epsilon(24128901288879.438, worksheet.lever_graphs_n3652, 0.002); end
  def test_lever_graphs_o3652; assert_in_epsilon(25897228144096.016, worksheet.lever_graphs_o3652, 0.002); end
  def test_lever_graphs_p3652; assert_in_epsilon(27273471786681.406, worksheet.lever_graphs_p3652, 0.002); end
  def test_lever_graphs_q3652; assert_in_epsilon(28513053166159.312, worksheet.lever_graphs_q3652, 0.002); end
  def test_lever_graphs_r3652; assert_in_epsilon(29676957947962.855, worksheet.lever_graphs_r3652, 0.002); end
  def test_lever_graphs_s3652; assert_in_epsilon(30745806041890.227, worksheet.lever_graphs_s3652, 0.002); end
  def test_lever_graphs_f3653; assert_equal("Rural", worksheet.lever_graphs_f3653); end
  def test_lever_graphs_g3653; assert_in_epsilon(3.0, worksheet.lever_graphs_g3653, 0.002); end
  def test_lever_graphs_k3653; assert_in_epsilon(18849796265677.367, worksheet.lever_graphs_k3653, 0.002); end
  def test_lever_graphs_l3653; assert_in_epsilon(20518555616854.17, worksheet.lever_graphs_l3653, 0.002); end
  def test_lever_graphs_m3653; assert_in_epsilon(21993123755407.53, worksheet.lever_graphs_m3653, 0.002); end
  def test_lever_graphs_n3653; assert_in_epsilon(23131639145199.297, worksheet.lever_graphs_n3653, 0.002); end
  def test_lever_graphs_o3653; assert_in_epsilon(24210147791256.69, worksheet.lever_graphs_o3653, 0.002); end
  def test_lever_graphs_p3653; assert_in_epsilon(25332295070168.883, worksheet.lever_graphs_p3653, 0.002); end
  def test_lever_graphs_q3653; assert_in_epsilon(26454740878402.082, worksheet.lever_graphs_q3653, 0.002); end
  def test_lever_graphs_r3653; assert_in_epsilon(26933309181875.062, worksheet.lever_graphs_r3653, 0.002); end
  def test_lever_graphs_s3653; assert_in_epsilon(27243852386544.613, worksheet.lever_graphs_s3653, 0.002); end
  def test_lever_graphs_f3654; assert_equal("Rural", worksheet.lever_graphs_f3654); end
  def test_lever_graphs_g3654; assert_in_epsilon(4.0, worksheet.lever_graphs_g3654, 0.002); end
  def test_lever_graphs_k3654; assert_in_epsilon(18849796265677.367, worksheet.lever_graphs_k3654, 0.002); end
  def test_lever_graphs_l3654; assert_in_epsilon(20518555616854.17, worksheet.lever_graphs_l3654, 0.002); end
  def test_lever_graphs_m3654; assert_in_epsilon(21943098091550.465, worksheet.lever_graphs_m3654, 0.002); end
  def test_lever_graphs_n3654; assert_in_epsilon(22921640206609.26, worksheet.lever_graphs_n3654, 0.002); end
  def test_lever_graphs_o3654; assert_in_epsilon(23884577567543.117, worksheet.lever_graphs_o3654, 0.002); end
  def test_lever_graphs_p3654; assert_in_epsilon(24902440744243.797, worksheet.lever_graphs_p3654, 0.002); end
  def test_lever_graphs_q3654; assert_in_epsilon(25460409810673.633, worksheet.lever_graphs_q3654, 0.002); end
  def test_lever_graphs_r3654; assert_in_epsilon(25398190109459.523, worksheet.lever_graphs_r3654, 0.002); end
  def test_lever_graphs_s3654; assert_in_epsilon(25195186191362.926, worksheet.lever_graphs_s3654, 0.002); end
  def test_lever_graphs_f3655; assert_equal("International", worksheet.lever_graphs_f3655); end
  def test_lever_graphs_g3655; assert_in_delta(1.0, worksheet.lever_graphs_g3655, 0.002); end
  def test_lever_graphs_k3655; assert_in_epsilon(5338511883663.011, worksheet.lever_graphs_k3655, 0.002); end
  def test_lever_graphs_l3655; assert_in_epsilon(6221976954954.346, worksheet.lever_graphs_l3655, 0.002); end
  def test_lever_graphs_m3655; assert_in_epsilon(7500456847458.744, worksheet.lever_graphs_m3655, 0.002); end
  def test_lever_graphs_n3655; assert_in_epsilon(9055363476540.6, worksheet.lever_graphs_n3655, 0.002); end
  def test_lever_graphs_o3655; assert_in_epsilon(10962122833407.445, worksheet.lever_graphs_o3655, 0.002); end
  def test_lever_graphs_p3655; assert_in_epsilon(13321867178999.395, worksheet.lever_graphs_p3655, 0.002); end
  def test_lever_graphs_q3655; assert_in_epsilon(16263151011301.176, worksheet.lever_graphs_q3655, 0.002); end
  def test_lever_graphs_r3655; assert_in_epsilon(19948904729803.855, worksheet.lever_graphs_r3655, 0.002); end
  def test_lever_graphs_s3655; assert_in_epsilon(24589810989393.555, worksheet.lever_graphs_s3655, 0.002); end
  def test_lever_graphs_f3656; assert_equal("International", worksheet.lever_graphs_f3656); end
  def test_lever_graphs_g3656; assert_in_epsilon(2.0, worksheet.lever_graphs_g3656, 0.002); end
  def test_lever_graphs_k3656; assert_in_epsilon(5338511883663.011, worksheet.lever_graphs_k3656, 0.002); end
  def test_lever_graphs_l3656; assert_in_epsilon(6221976954954.346, worksheet.lever_graphs_l3656, 0.002); end
  def test_lever_graphs_m3656; assert_in_epsilon(7219959773089.232, worksheet.lever_graphs_m3656, 0.002); end
  def test_lever_graphs_n3656; assert_in_epsilon(8374804755984.01, worksheet.lever_graphs_n3656, 0.002); end
  def test_lever_graphs_o3656; assert_in_epsilon(9720575785129.662, worksheet.lever_graphs_o3656, 0.002); end
  def test_lever_graphs_p3656; assert_in_epsilon(11301879291282.648, worksheet.lever_graphs_p3656, 0.002); end
  def test_lever_graphs_q3656; assert_in_epsilon(13170947008609.145, worksheet.lever_graphs_q3656, 0.002); end
  def test_lever_graphs_r3656; assert_in_epsilon(15388786924655.334, worksheet.lever_graphs_r3656, 0.002); end
  def test_lever_graphs_s3656; assert_in_epsilon(18030063064144.63, worksheet.lever_graphs_s3656, 0.002); end
  def test_lever_graphs_f3657; assert_equal("International", worksheet.lever_graphs_f3657); end
  def test_lever_graphs_g3657; assert_in_epsilon(3.0, worksheet.lever_graphs_g3657, 0.002); end
  def test_lever_graphs_k3657; assert_in_epsilon(5338511883663.011, worksheet.lever_graphs_k3657, 0.002); end
  def test_lever_graphs_l3657; assert_in_epsilon(6221976954954.346, worksheet.lever_graphs_l3657, 0.002); end
  def test_lever_graphs_m3657; assert_in_epsilon(6863671548880.609, worksheet.lever_graphs_m3657, 0.002); end
  def test_lever_graphs_n3657; assert_in_epsilon(7555499665590.644, worksheet.lever_graphs_n3657, 0.002); end
  def test_lever_graphs_o3657; assert_in_epsilon(8306812315095.51, worksheet.lever_graphs_o3657, 0.002); end
  def test_lever_graphs_p3657; assert_in_epsilon(9130382258512.2, worksheet.lever_graphs_p3657, 0.002); end
  def test_lever_graphs_q3657; assert_in_epsilon(10038391544090.27, worksheet.lever_graphs_q3657, 0.002); end
  def test_lever_graphs_r3657; assert_in_epsilon(11042386046980.402, worksheet.lever_graphs_r3657, 0.002); end
  def test_lever_graphs_s3657; assert_in_epsilon(12155688652622.717, worksheet.lever_graphs_s3657, 0.002); end
  def test_lever_graphs_f3658; assert_equal("International", worksheet.lever_graphs_f3658); end
  def test_lever_graphs_g3658; assert_in_epsilon(4.0, worksheet.lever_graphs_g3658, 0.002); end
  def test_lever_graphs_k3658; assert_in_epsilon(5338511883663.011, worksheet.lever_graphs_k3658, 0.002); end
  def test_lever_graphs_l3658; assert_in_epsilon(6221976954954.346, worksheet.lever_graphs_l3658, 0.002); end
  def test_lever_graphs_m3658; assert_in_epsilon(6406723604726.341, worksheet.lever_graphs_m3658, 0.002); end
  def test_lever_graphs_n3658; assert_in_epsilon(6583928892453.129, worksheet.lever_graphs_n3658, 0.002); end
  def test_lever_graphs_o3658; assert_in_epsilon(6758749685038.742, worksheet.lever_graphs_o3658, 0.002); end
  def test_lever_graphs_p3658; assert_in_epsilon(6937488993626.326, worksheet.lever_graphs_p3658, 0.002); end
  def test_lever_graphs_q3658; assert_in_epsilon(7124147970756.542, worksheet.lever_graphs_q3658, 0.002); end
  def test_lever_graphs_r3658; assert_in_epsilon(7320870142749.894, worksheet.lever_graphs_r3658, 0.002); end
  def test_lever_graphs_s3658; assert_in_epsilon(7529842745500.682, worksheet.lever_graphs_s3658, 0.002); end
  def test_lever_graphs_f3661; assert_equal("Type of travel", worksheet.lever_graphs_f3661); end
  def test_lever_graphs_g3661; assert_equal("Level", worksheet.lever_graphs_g3661); end
  def test_lever_graphs_h3661; assert_equal("Notes", worksheet.lever_graphs_h3661); end
  def test_lever_graphs_i3661; assert_equal("…", worksheet.lever_graphs_i3661); end
  def test_lever_graphs_j3661; assert_equal("…2", worksheet.lever_graphs_j3661); end
  def test_lever_graphs_k3661; assert_equal("2011", worksheet.lever_graphs_k3661); end
  def test_lever_graphs_l3661; assert_equal("2015", worksheet.lever_graphs_l3661); end
  def test_lever_graphs_m3661; assert_equal("2020", worksheet.lever_graphs_m3661); end
  def test_lever_graphs_n3661; assert_equal("2025", worksheet.lever_graphs_n3661); end
  def test_lever_graphs_o3661; assert_equal("2030", worksheet.lever_graphs_o3661); end
  def test_lever_graphs_p3661; assert_equal("2035", worksheet.lever_graphs_p3661); end
  def test_lever_graphs_q3661; assert_equal("2040", worksheet.lever_graphs_q3661); end
  def test_lever_graphs_r3661; assert_equal("2045", worksheet.lever_graphs_r3661); end
  def test_lever_graphs_s3661; assert_equal("2050", worksheet.lever_graphs_s3661); end
  def test_lever_graphs_f3662; assert_equal("Urban", worksheet.lever_graphs_f3662); end
  def test_lever_graphs_g3662; assert_in_delta(1.0, worksheet.lever_graphs_g3662, 0.002); end
  def test_lever_graphs_k3662; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3662, 0.002); end
  def test_lever_graphs_l3662; assert_in_epsilon(9994.291770817243, worksheet.lever_graphs_l3662, 0.002); end
  def test_lever_graphs_m3662; assert_in_epsilon(11046.170134527109, worksheet.lever_graphs_m3662, 0.002); end
  def test_lever_graphs_n3662; assert_in_epsilon(11809.476362077294, worksheet.lever_graphs_n3662, 0.002); end
  def test_lever_graphs_o3662; assert_in_epsilon(12345.8624313576, worksheet.lever_graphs_o3662, 0.002); end
  def test_lever_graphs_p3662; assert_in_epsilon(12696.709809149066, worksheet.lever_graphs_p3662, 0.002); end
  def test_lever_graphs_q3662; assert_in_epsilon(12910.904592845103, worksheet.lever_graphs_q3662, 0.002); end
  def test_lever_graphs_r3662; assert_in_epsilon(13125.958652274365, worksheet.lever_graphs_r3662, 0.002); end
  def test_lever_graphs_s3662; assert_in_epsilon(13291.923615394213, worksheet.lever_graphs_s3662, 0.002); end
  def test_lever_graphs_f3663; assert_equal("Urban", worksheet.lever_graphs_f3663); end
  def test_lever_graphs_g3663; assert_in_epsilon(2.0, worksheet.lever_graphs_g3663, 0.002); end
  def test_lever_graphs_k3663; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3663, 0.002); end
  def test_lever_graphs_l3663; assert_in_epsilon(9994.291770817243, worksheet.lever_graphs_l3663, 0.002); end
  def test_lever_graphs_m3663; assert_in_epsilon(10876.711687766885, worksheet.lever_graphs_m3663, 0.002); end
  def test_lever_graphs_n3663; assert_in_epsilon(11360.15182039531, worksheet.lever_graphs_n3663, 0.002); end
  def test_lever_graphs_o3663; assert_in_epsilon(11774.209368990529, worksheet.lever_graphs_o3663, 0.002); end
  def test_lever_graphs_p3663; assert_in_epsilon(12070.800914910777, worksheet.lever_graphs_p3663, 0.002); end
  def test_lever_graphs_q3663; assert_in_epsilon(12271.12544056283, worksheet.lever_graphs_q3663, 0.002); end
  def test_lever_graphs_r3663; assert_in_epsilon(12344.323431677783, worksheet.lever_graphs_r3663, 0.002); end
  def test_lever_graphs_s3663; assert_in_epsilon(12395.783530770947, worksheet.lever_graphs_s3663, 0.002); end
  def test_lever_graphs_f3664; assert_equal("Urban", worksheet.lever_graphs_f3664); end
  def test_lever_graphs_g3664; assert_in_epsilon(3.0, worksheet.lever_graphs_g3664, 0.002); end
  def test_lever_graphs_k3664; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3664, 0.002); end
  def test_lever_graphs_l3664; assert_in_epsilon(9994.291770817243, worksheet.lever_graphs_l3664, 0.002); end
  def test_lever_graphs_m3664; assert_in_epsilon(10753.536572895262, worksheet.lever_graphs_m3664, 0.002); end
  def test_lever_graphs_n3664; assert_in_epsilon(11221.828134756262, worksheet.lever_graphs_n3664, 0.002); end
  def test_lever_graphs_o3664; assert_in_epsilon(11572.502193356342, worksheet.lever_graphs_o3664, 0.002); end
  def test_lever_graphs_p3664; assert_in_epsilon(11748.94185353069, worksheet.lever_graphs_p3664, 0.002); end
  def test_lever_graphs_q3664; assert_in_epsilon(11856.548504379938, worksheet.lever_graphs_q3664, 0.002); end
  def test_lever_graphs_r3664; assert_in_epsilon(11918.596841548191, worksheet.lever_graphs_r3664, 0.002); end
  def test_lever_graphs_s3664; assert_in_epsilon(11933.354370580171, worksheet.lever_graphs_s3664, 0.002); end
  def test_lever_graphs_f3665; assert_equal("Urban", worksheet.lever_graphs_f3665); end
  def test_lever_graphs_g3665; assert_in_epsilon(4.0, worksheet.lever_graphs_g3665, 0.002); end
  def test_lever_graphs_k3665; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3665, 0.002); end
  def test_lever_graphs_l3665; assert_in_epsilon(9994.291770817243, worksheet.lever_graphs_l3665, 0.002); end
  def test_lever_graphs_m3665; assert_in_epsilon(10665.616200984294, worksheet.lever_graphs_m3665, 0.002); end
  def test_lever_graphs_n3665; assert_in_epsilon(11124.807164790815, worksheet.lever_graphs_n3665, 0.002); end
  def test_lever_graphs_o3665; assert_in_epsilon(11370.711897460687, worksheet.lever_graphs_o3665, 0.002); end
  def test_lever_graphs_p3665; assert_in_epsilon(11490.275658835888, worksheet.lever_graphs_p3665, 0.002); end
  def test_lever_graphs_q3665; assert_in_epsilon(11535.520326539108, worksheet.lever_graphs_q3665, 0.002); end
  def test_lever_graphs_r3665; assert_in_epsilon(11538.167063212353, worksheet.lever_graphs_r3665, 0.002); end
  def test_lever_graphs_s3665; assert_in_epsilon(11532.54816587386, worksheet.lever_graphs_s3665, 0.002); end
  def test_lever_graphs_f3666; assert_equal("Rural", worksheet.lever_graphs_f3666); end
  def test_lever_graphs_g3666; assert_in_delta(1.0, worksheet.lever_graphs_g3666, 0.002); end
  def test_lever_graphs_k3666; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3666, 0.002); end
  def test_lever_graphs_l3666; assert_in_epsilon(6093.117515886366, worksheet.lever_graphs_l3666, 0.002); end
  def test_lever_graphs_m3666; assert_in_epsilon(6664.1263441837, worksheet.lever_graphs_m3666, 0.002); end
  def test_lever_graphs_n3666; assert_in_epsilon(7243.056376186197, worksheet.lever_graphs_n3666, 0.002); end
  def test_lever_graphs_o3666; assert_in_epsilon(7887.2949337135715, worksheet.lever_graphs_o3666, 0.002); end
  def test_lever_graphs_p3666; assert_in_epsilon(8525.07375358166, worksheet.lever_graphs_p3666, 0.002); end
  def test_lever_graphs_q3666; assert_in_epsilon(9226.803340963846, worksheet.lever_graphs_q3666, 0.002); end
  def test_lever_graphs_r3666; assert_in_epsilon(9955.987398889049, worksheet.lever_graphs_r3666, 0.002); end
  def test_lever_graphs_s3666; assert_in_epsilon(10764.797342603037, worksheet.lever_graphs_s3666, 0.002); end
  def test_lever_graphs_f3667; assert_equal("Rural", worksheet.lever_graphs_f3667); end
  def test_lever_graphs_g3667; assert_in_epsilon(2.0, worksheet.lever_graphs_g3667, 0.002); end
  def test_lever_graphs_k3667; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3667, 0.002); end
  def test_lever_graphs_l3667; assert_in_epsilon(6093.117515886366, worksheet.lever_graphs_l3667, 0.002); end
  def test_lever_graphs_m3667; assert_in_epsilon(6646.209338998034, worksheet.lever_graphs_m3667, 0.002); end
  def test_lever_graphs_n3667; assert_in_epsilon(7143.717627075208, worksheet.lever_graphs_n3667, 0.002); end
  def test_lever_graphs_o3667; assert_in_epsilon(7691.9897306673, worksheet.lever_graphs_o3667, 0.002); end
  def test_lever_graphs_p3667; assert_in_epsilon(8143.24972040434, worksheet.lever_graphs_p3667, 0.002); end
  def test_lever_graphs_q3667; assert_in_epsilon(8579.80792307853, worksheet.lever_graphs_q3667, 0.002); end
  def test_lever_graphs_r3667; assert_in_epsilon(9054.715705951416, worksheet.lever_graphs_r3667, 0.002); end
  def test_lever_graphs_s3667; assert_in_epsilon(9571.175177699599, worksheet.lever_graphs_s3667, 0.002); end
  def test_lever_graphs_f3668; assert_equal("Rural", worksheet.lever_graphs_f3668); end
  def test_lever_graphs_g3668; assert_in_epsilon(3.0, worksheet.lever_graphs_g3668, 0.002); end
  def test_lever_graphs_k3668; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3668, 0.002); end
  def test_lever_graphs_l3668; assert_in_epsilon(6093.117515886366, worksheet.lever_graphs_l3668, 0.002); end
  def test_lever_graphs_m3668; assert_in_epsilon(6509.279246905705, worksheet.lever_graphs_m3668, 0.002); end
  def test_lever_graphs_n3668; assert_in_epsilon(6848.463439189495, worksheet.lever_graphs_n3668, 0.002); end
  def test_lever_graphs_o3668; assert_in_epsilon(7190.893448214032, worksheet.lever_graphs_o3668, 0.002); end
  def test_lever_graphs_p3668; assert_in_epsilon(7563.657694950676, worksheet.lever_graphs_p3668, 0.002); end
  def test_lever_graphs_q3668; assert_in_epsilon(7960.445136085623, worksheet.lever_graphs_q3668, 0.002); end
  def test_lever_graphs_r3668; assert_in_epsilon(8217.602966247085, worksheet.lever_graphs_r3668, 0.002); end
  def test_lever_graphs_s3668; assert_in_epsilon(8481.016349083062, worksheet.lever_graphs_s3668, 0.002); end
  def test_lever_graphs_f3669; assert_equal("Rural", worksheet.lever_graphs_f3669); end
  def test_lever_graphs_g3669; assert_in_epsilon(4.0, worksheet.lever_graphs_g3669, 0.002); end
  def test_lever_graphs_k3669; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3669, 0.002); end
  def test_lever_graphs_l3669; assert_in_epsilon(6093.117515886366, worksheet.lever_graphs_l3669, 0.002); end
  def test_lever_graphs_m3669; assert_in_epsilon(6494.473209383298, worksheet.lever_graphs_m3669, 0.002); end
  def test_lever_graphs_n3669; assert_in_epsilon(6786.290151590854, worksheet.lever_graphs_n3669, 0.002); end
  def test_lever_graphs_o3669; assert_in_epsilon(7094.192642881444, worksheet.lever_graphs_o3669, 0.002); end
  def test_lever_graphs_p3669; assert_in_epsilon(7435.312790906834, worksheet.lever_graphs_p3669, 0.002); end
  def test_lever_graphs_q3669; assert_in_epsilon(7661.242889193842, worksheet.lever_graphs_q3669, 0.002); end
  def test_lever_graphs_r3669; assert_in_epsilon(7749.223868905651, worksheet.lever_graphs_r3669, 0.002); end
  def test_lever_graphs_s3669; assert_in_epsilon(7843.266178929781, worksheet.lever_graphs_s3669, 0.002); end
  def test_lever_graphs_f3670; assert_equal("International", worksheet.lever_graphs_f3670); end
  def test_lever_graphs_g3670; assert_in_delta(1.0, worksheet.lever_graphs_g3670, 0.002); end
  def test_lever_graphs_k3670; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3670, 0.002); end
  def test_lever_graphs_l3670; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3670, 0.002); end
  def test_lever_graphs_m3670; assert_in_epsilon(971.971078424184, worksheet.lever_graphs_m3670, 0.002); end
  def test_lever_graphs_n3670; assert_in_epsilon(1120.240111020011, worksheet.lever_graphs_n3670, 0.002); end
  def test_lever_graphs_o3670; assert_in_epsilon(1301.151905754007, worksheet.lever_graphs_o3670, 0.002); end
  def test_lever_graphs_p3670; assert_in_epsilon(1523.6401820699998, worksheet.lever_graphs_p3670, 0.002); end
  def test_lever_graphs_q3670; assert_in_epsilon(1799.2824634043834, worksheet.lever_graphs_q3670, 0.002); end
  def test_lever_graphs_r3670; assert_in_epsilon(2143.099060207938, worksheet.lever_graphs_r3670, 0.002); end
  def test_lever_graphs_s3670; assert_in_epsilon(2574.5945547161623, worksheet.lever_graphs_s3670, 0.002); end
  def test_lever_graphs_f3671; assert_equal("International", worksheet.lever_graphs_f3671); end
  def test_lever_graphs_g3671; assert_in_epsilon(2.0, worksheet.lever_graphs_g3671, 0.002); end
  def test_lever_graphs_k3671; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3671, 0.002); end
  def test_lever_graphs_l3671; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3671, 0.002); end
  def test_lever_graphs_m3671; assert_in_epsilon(935.6219533756032, worksheet.lever_graphs_m3671, 0.002); end
  def test_lever_graphs_n3671; assert_in_epsilon(1036.0481093795418, worksheet.lever_graphs_n3671, 0.002); end
  def test_lever_graphs_o3671; assert_in_epsilon(1153.7861689802146, worksheet.lever_graphs_o3671, 0.002); end
  def test_lever_graphs_p3671; assert_in_epsilon(1292.6114027205344, worksheet.lever_graphs_p3671, 0.002); end
  def test_lever_graphs_q3671; assert_in_epsilon(1457.174809638739, worksheet.lever_graphs_q3671, 0.002); end
  def test_lever_graphs_r3671; assert_in_epsilon(1653.2082960272533, worksheet.lever_graphs_r3671, 0.002); end
  def test_lever_graphs_s3671; assert_in_epsilon(1887.777917697634, worksheet.lever_graphs_s3671, 0.002); end
  def test_lever_graphs_f3672; assert_equal("International", worksheet.lever_graphs_f3672); end
  def test_lever_graphs_g3672; assert_in_epsilon(3.0, worksheet.lever_graphs_g3672, 0.002); end
  def test_lever_graphs_k3672; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3672, 0.002); end
  def test_lever_graphs_l3672; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3672, 0.002); end
  def test_lever_graphs_m3672; assert_in_epsilon(889.4511858401264, worksheet.lever_graphs_m3672, 0.002); end
  def test_lever_graphs_n3672; assert_in_epsilon(934.6917775437978, worksheet.lever_graphs_n3672, 0.002); end
  def test_lever_graphs_o3672; assert_in_epsilon(985.9791610424517, worksheet.lever_graphs_o3672, 0.002); end
  def test_lever_graphs_p3672; assert_in_epsilon(1044.2543150901697, worksheet.lever_graphs_p3672, 0.002); end
  def test_lever_graphs_q3672; assert_in_epsilon(1110.6028501805924, worksheet.lever_graphs_q3672, 0.002); end
  def test_lever_graphs_r3672; assert_in_epsilon(1186.2770152178489, worksheet.lever_graphs_r3672, 0.002); end
  def test_lever_graphs_s3672; assert_in_epsilon(1272.721039920418, worksheet.lever_graphs_s3672, 0.002); end
  def test_lever_graphs_f3673; assert_equal("International", worksheet.lever_graphs_f3673); end
  def test_lever_graphs_g3673; assert_in_epsilon(4.0, worksheet.lever_graphs_g3673, 0.002); end
  def test_lever_graphs_k3673; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3673, 0.002); end
  def test_lever_graphs_l3673; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3673, 0.002); end
  def test_lever_graphs_m3673; assert_in_epsilon(830.2361013331315, worksheet.lever_graphs_m3673, 0.002); end
  def test_lever_graphs_n3673; assert_in_epsilon(814.4986396777115, worksheet.lever_graphs_n3673, 0.002); end
  def test_lever_graphs_o3673; assert_in_epsilon(802.2314807859979, worksheet.lever_graphs_o3673, 0.002); end
  def test_lever_graphs_p3673; assert_in_epsilon(793.450111109077, worksheet.lever_graphs_p3673, 0.002); end
  def test_lever_graphs_q3673; assert_in_epsilon(788.1839442782499, worksheet.lever_graphs_q3673, 0.002); end
  def test_lever_graphs_r3673; assert_in_epsilon(786.4767582649091, worksheet.lever_graphs_r3673, 0.002); end
  def test_lever_graphs_s3673; assert_in_epsilon(788.3871957697046, worksheet.lever_graphs_s3673, 0.002); end
  def test_lever_graphs_b1245; assert_equal("Level", worksheet.lever_graphs_b1245); end
  def test_lever_graphs_c1245; assert_equal("1975", worksheet.lever_graphs_c1245); end
  def test_lever_graphs_d1245; assert_equal("1980", worksheet.lever_graphs_d1245); end
  def test_lever_graphs_e1245; assert_equal("1985", worksheet.lever_graphs_e1245); end
  def test_lever_graphs_f1245; assert_equal("1990", worksheet.lever_graphs_f1245); end
  def test_lever_graphs_g1245; assert_equal("1995", worksheet.lever_graphs_g1245); end
  def test_lever_graphs_h1245; assert_equal("2000", worksheet.lever_graphs_h1245); end
  def test_lever_graphs_i1245; assert_equal("2005", worksheet.lever_graphs_i1245); end
  def test_lever_graphs_j1245; assert_equal("2010", worksheet.lever_graphs_j1245); end
  def test_lever_graphs_k1245; assert_equal("2011", worksheet.lever_graphs_k1245); end
  def test_lever_graphs_l1245; assert_equal("2015", worksheet.lever_graphs_l1245); end
  def test_lever_graphs_m1245; assert_equal("2020", worksheet.lever_graphs_m1245); end
  def test_lever_graphs_n1245; assert_equal("2025", worksheet.lever_graphs_n1245); end
  def test_lever_graphs_o1245; assert_equal("2030", worksheet.lever_graphs_o1245); end
  def test_lever_graphs_p1245; assert_equal("2035", worksheet.lever_graphs_p1245); end
  def test_lever_graphs_q1245; assert_equal("2040", worksheet.lever_graphs_q1245); end
  def test_lever_graphs_r1245; assert_equal("2045", worksheet.lever_graphs_r1245); end
  def test_lever_graphs_s1245; assert_equal("2050", worksheet.lever_graphs_s1245); end
  def test_lever_graphs_b1246; assert_equal("Historic data", worksheet.lever_graphs_b1246); end
  def test_lever_graphs_b1247; assert_in_delta(1.0, worksheet.lever_graphs_b1247, 0.002); end
  def test_lever_graphs_k1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_k1247, 0.002); end
  def test_lever_graphs_l1247; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_l1247, 0.002); end
  def test_lever_graphs_m1247; assert_in_epsilon(25126.063462143684, worksheet.lever_graphs_m1247, 0.002); end
  def test_lever_graphs_n1247; assert_in_epsilon(26316.35999020017, worksheet.lever_graphs_n1247, 0.002); end
  def test_lever_graphs_o1247; assert_in_epsilon(27563.044413114836, worksheet.lever_graphs_o1247, 0.002); end
  def test_lever_graphs_p1247; assert_in_epsilon(28868.787993561808, worksheet.lever_graphs_p1247, 0.002); end
  def test_lever_graphs_q1247; assert_in_epsilon(30236.388539891228, worksheet.lever_graphs_q1247, 0.002); end
  def test_lever_graphs_r1247; assert_in_epsilon(30999.895240592334, worksheet.lever_graphs_r1247, 0.002); end
  def test_lever_graphs_s1247; assert_in_epsilon(31782.68144225786, worksheet.lever_graphs_s1247, 0.002); end
  def test_lever_graphs_b1248; assert_in_epsilon(2.0, worksheet.lever_graphs_b1248, 0.002); end
  def test_lever_graphs_k1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_k1248, 0.002); end
  def test_lever_graphs_l1248; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_l1248, 0.002); end
  def test_lever_graphs_m1248; assert_in_epsilon(24902.81029151358, worksheet.lever_graphs_m1248, 0.002); end
  def test_lever_graphs_n1248; assert_in_epsilon(25850.778961526437, worksheet.lever_graphs_n1248, 0.002); end
  def test_lever_graphs_o1248; assert_in_epsilon(26834.833703304143, worksheet.lever_graphs_o1248, 0.002); end
  def test_lever_graphs_p1248; assert_in_epsilon(27856.34819576311, worksheet.lever_graphs_p1248, 0.002); end
  def test_lever_graphs_q1248; assert_in_epsilon(28206.297927970198, worksheet.lever_graphs_q1248, 0.002); end
  def test_lever_graphs_r1248; assert_in_epsilon(28560.64395843617, worksheet.lever_graphs_r1248, 0.002); end
  def test_lever_graphs_s1248; assert_in_epsilon(28919.441516345676, worksheet.lever_graphs_s1248, 0.002); end
  def test_lever_graphs_b1249; assert_in_epsilon(3.0, worksheet.lever_graphs_b1249, 0.002); end
  def test_lever_graphs_k1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_k1249, 0.002); end
  def test_lever_graphs_l1249; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_l1249, 0.002); end
  def test_lever_graphs_m1249; assert_in_epsilon(24595.371961101227, worksheet.lever_graphs_m1249, 0.002); end
  def test_lever_graphs_n1249; assert_in_epsilon(25216.43592427136, worksheet.lever_graphs_n1249, 0.002); end
  def test_lever_graphs_o1249; assert_in_epsilon(25533.22134556568, worksheet.lever_graphs_o1249, 0.002); end
  def test_lever_graphs_p1249; assert_in_epsilon(25853.98643327463, worksheet.lever_graphs_p1249, 0.002); end
  def test_lever_graphs_q1249; assert_in_epsilon(26048.47391944562, worksheet.lever_graphs_q1249, 0.002); end
  def test_lever_graphs_r1249; assert_in_epsilon(26048.47391944562, worksheet.lever_graphs_r1249, 0.002); end
  def test_lever_graphs_s1249; assert_in_epsilon(25853.695577236133, worksheet.lever_graphs_s1249, 0.002); end
  def test_lever_graphs_b1250; assert_in_epsilon(4.0, worksheet.lever_graphs_b1250, 0.002); end
  def test_lever_graphs_k1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_k1250, 0.002); end
  def test_lever_graphs_l1250; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_l1250, 0.002); end
  def test_lever_graphs_m1250; assert_in_epsilon(24410.882712641902, worksheet.lever_graphs_m1250, 0.002); end
  def test_lever_graphs_n1250; assert_in_epsilon(24410.882712641902, worksheet.lever_graphs_n1250, 0.002); end
  def test_lever_graphs_o1250; assert_in_epsilon(24228.349513908553, worksheet.lever_graphs_o1250, 0.002); end
  def test_lever_graphs_p1250; assert_in_epsilon(24047.18121332461, worksheet.lever_graphs_p1250, 0.002); end
  def test_lever_graphs_q1250; assert_in_epsilon(23867.367604818126, worksheet.lever_graphs_q1250, 0.002); end
  def test_lever_graphs_r1250; assert_in_epsilon(23688.89855863341, worksheet.lever_graphs_r1250, 0.002); end
  def test_lever_graphs_s1250; assert_in_epsilon(23511.764020760354, worksheet.lever_graphs_s1250, 0.002); end
  def test_lever_graphs_b1255; assert_equal("Level", worksheet.lever_graphs_b1255); end
  def test_lever_graphs_c1255; assert_equal("1975", worksheet.lever_graphs_c1255); end
  def test_lever_graphs_d1255; assert_equal("1980", worksheet.lever_graphs_d1255); end
  def test_lever_graphs_e1255; assert_equal("1985", worksheet.lever_graphs_e1255); end
  def test_lever_graphs_f1255; assert_equal("1990", worksheet.lever_graphs_f1255); end
  def test_lever_graphs_g1255; assert_equal("1995", worksheet.lever_graphs_g1255); end
  def test_lever_graphs_h1255; assert_equal("2000", worksheet.lever_graphs_h1255); end
  def test_lever_graphs_i1255; assert_equal("2005", worksheet.lever_graphs_i1255); end
  def test_lever_graphs_j1255; assert_equal("2010", worksheet.lever_graphs_j1255); end
  def test_lever_graphs_k1255; assert_equal("2011", worksheet.lever_graphs_k1255); end
  def test_lever_graphs_l1255; assert_equal("2015", worksheet.lever_graphs_l1255); end
  def test_lever_graphs_m1255; assert_equal("2020", worksheet.lever_graphs_m1255); end
  def test_lever_graphs_n1255; assert_equal("2025", worksheet.lever_graphs_n1255); end
  def test_lever_graphs_o1255; assert_equal("2030", worksheet.lever_graphs_o1255); end
  def test_lever_graphs_p1255; assert_equal("2035", worksheet.lever_graphs_p1255); end
  def test_lever_graphs_q1255; assert_equal("2040", worksheet.lever_graphs_q1255); end
  def test_lever_graphs_r1255; assert_equal("2045", worksheet.lever_graphs_r1255); end
  def test_lever_graphs_s1255; assert_equal("2050", worksheet.lever_graphs_s1255); end
  def test_lever_graphs_b1256; assert_equal("Historic data", worksheet.lever_graphs_b1256); end
  def test_lever_graphs_b1257; assert_in_delta(1.0, worksheet.lever_graphs_b1257, 0.002); end
  def test_lever_graphs_k1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_k1257, 0.002); end
  def test_lever_graphs_l1257; assert_in_epsilon(4466.28738647215, worksheet.lever_graphs_l1257, 0.002); end
  def test_lever_graphs_m1257; assert_in_epsilon(5053.194230184394, worksheet.lever_graphs_m1257, 0.002); end
  def test_lever_graphs_n1257; assert_in_epsilon(5647.842471807051, worksheet.lever_graphs_n1257, 0.002); end
  def test_lever_graphs_o1257; assert_in_epsilon(6312.467546924988, worksheet.lever_graphs_o1257, 0.002); end
  def test_lever_graphs_p1257; assert_in_epsilon(6969.474239382875, worksheet.lever_graphs_p1257, 0.002); end
  def test_lever_graphs_q1257; assert_in_epsilon(7694.862716099554, worksheet.lever_graphs_q1257, 0.002); end
  def test_lever_graphs_r1257; assert_in_epsilon(8495.75020810493, worksheet.lever_graphs_r1257, 0.002); end
  def test_lever_graphs_s1257; assert_in_epsilon(9379.994713551057, worksheet.lever_graphs_s1257, 0.002); end
  def test_lever_graphs_b1258; assert_in_epsilon(2.0, worksheet.lever_graphs_b1258, 0.002); end
  def test_lever_graphs_k1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_k1258, 0.002); end
  def test_lever_graphs_l1258; assert_in_epsilon(4466.28738647215, worksheet.lever_graphs_l1258, 0.002); end
  def test_lever_graphs_m1258; assert_in_epsilon(5053.194230184394, worksheet.lever_graphs_m1258, 0.002); end
  def test_lever_graphs_n1258; assert_in_epsilon(5579.134744387591, worksheet.lever_graphs_n1258, 0.002); end
  def test_lever_graphs_o1258; assert_in_epsilon(6159.815569744478, worksheet.lever_graphs_o1258, 0.002); end
  def test_lever_graphs_p1258; assert_in_epsilon(6635.870780163639, worksheet.lever_graphs_p1258, 0.002); end
  def test_lever_graphs_q1258; assert_in_epsilon(7148.717443314012, worksheet.lever_graphs_q1258, 0.002); end
  def test_lever_graphs_r1258; assert_in_epsilon(7701.198949971386, worksheet.lever_graphs_r1258, 0.002); end
  def test_lever_graphs_s1258; assert_in_epsilon(8296.378439535314, worksheet.lever_graphs_s1258, 0.002); end
  def test_lever_graphs_b1259; assert_in_epsilon(3.0, worksheet.lever_graphs_b1259, 0.002); end
  def test_lever_graphs_k1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_k1259, 0.002); end
  def test_lever_graphs_l1259; assert_in_epsilon(4466.28738647215, worksheet.lever_graphs_l1259, 0.002); end
  def test_lever_graphs_m1259; assert_in_epsilon(4931.1421649782, worksheet.lever_graphs_m1259, 0.002); end
  def test_lever_graphs_n1259; assert_in_epsilon(5312.240575210777, worksheet.lever_graphs_n1259, 0.002); end
  def test_lever_graphs_o1259; assert_in_epsilon(5722.791796460097, worksheet.lever_graphs_o1259, 0.002); end
  def test_lever_graphs_p1259; assert_in_epsilon(6165.072059887185, worksheet.lever_graphs_p1259, 0.002); end
  def test_lever_graphs_q1259; assert_in_epsilon(6641.5335129109535, worksheet.lever_graphs_q1259, 0.002); end
  def test_lever_graphs_r1259; assert_in_epsilon(6980.31847014537, worksheet.lever_graphs_r1259, 0.002); end
  def test_lever_graphs_s1259; assert_in_epsilon(7336.38486502144, worksheet.lever_graphs_s1259, 0.002); end
  def test_lever_graphs_b1260; assert_in_epsilon(4.0, worksheet.lever_graphs_b1260, 0.002); end
  def test_lever_graphs_k1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_k1260, 0.002); end
  def test_lever_graphs_l1260; assert_in_epsilon(4466.28738647215, worksheet.lever_graphs_l1260, 0.002); end
  def test_lever_graphs_m1260; assert_in_epsilon(4931.1421649782, worksheet.lever_graphs_m1260, 0.002); end
  def test_lever_graphs_n1260; assert_in_epsilon(5312.240575210777, worksheet.lever_graphs_n1260, 0.002); end
  def test_lever_graphs_o1260; assert_in_epsilon(5722.791796460097, worksheet.lever_graphs_o1260, 0.002); end
  def test_lever_graphs_p1260; assert_in_epsilon(6165.072059887185, worksheet.lever_graphs_p1260, 0.002); end
  def test_lever_graphs_q1260; assert_in_epsilon(6479.55269453214, worksheet.lever_graphs_q1260, 0.002); end
  def test_lever_graphs_r1260; assert_in_epsilon(6643.169519778789, worksheet.lever_graphs_r1260, 0.002); end
  def test_lever_graphs_s1260; assert_in_epsilon(6810.917874895763, worksheet.lever_graphs_s1260, 0.002); end
  def test_lever_graphs_b1275; assert_equal("Level", worksheet.lever_graphs_b1275); end
  def test_lever_graphs_c1275; assert_equal("1975", worksheet.lever_graphs_c1275); end
  def test_lever_graphs_d1275; assert_equal("1980", worksheet.lever_graphs_d1275); end
  def test_lever_graphs_e1275; assert_equal("1985", worksheet.lever_graphs_e1275); end
  def test_lever_graphs_f1275; assert_equal("1990", worksheet.lever_graphs_f1275); end
  def test_lever_graphs_g1275; assert_equal("1995", worksheet.lever_graphs_g1275); end
  def test_lever_graphs_h1275; assert_equal("2000", worksheet.lever_graphs_h1275); end
  def test_lever_graphs_i1275; assert_equal("2005", worksheet.lever_graphs_i1275); end
  def test_lever_graphs_j1275; assert_equal("2010", worksheet.lever_graphs_j1275); end
  def test_lever_graphs_k1275; assert_equal("2011", worksheet.lever_graphs_k1275); end
  def test_lever_graphs_l1275; assert_equal("2015", worksheet.lever_graphs_l1275); end
  def test_lever_graphs_m1275; assert_equal("2020", worksheet.lever_graphs_m1275); end
  def test_lever_graphs_n1275; assert_equal("2025", worksheet.lever_graphs_n1275); end
  def test_lever_graphs_o1275; assert_equal("2030", worksheet.lever_graphs_o1275); end
  def test_lever_graphs_p1275; assert_equal("2035", worksheet.lever_graphs_p1275); end
  def test_lever_graphs_q1275; assert_equal("2040", worksheet.lever_graphs_q1275); end
  def test_lever_graphs_r1275; assert_equal("2045", worksheet.lever_graphs_r1275); end
  def test_lever_graphs_s1275; assert_equal("2050", worksheet.lever_graphs_s1275); end
  def test_lever_graphs_b1276; assert_equal("Historic data", worksheet.lever_graphs_b1276); end
  def test_lever_graphs_b1277; assert_in_delta(1.0, worksheet.lever_graphs_b1277, 0.002); end
  def test_lever_graphs_k1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k1277, 0.002); end
  def test_lever_graphs_l1277; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_l1277, 0.002); end
  def test_lever_graphs_m1277; assert_in_epsilon(373.2108483170911, worksheet.lever_graphs_m1277, 0.002); end
  def test_lever_graphs_n1277; assert_in_epsilon(484.5581698391798, worksheet.lever_graphs_n1277, 0.002); end
  def test_lever_graphs_o1277; assert_in_epsilon(629.1259244383089, worksheet.lever_graphs_o1277, 0.002); end
  def test_lever_graphs_p1277; assert_in_epsilon(816.8254162997989, worksheet.lever_graphs_p1277, 0.002); end
  def test_lever_graphs_q1277; assert_in_epsilon(1060.5249836255393, worksheet.lever_graphs_q1277, 0.002); end
  def test_lever_graphs_r1277; assert_in_epsilon(1376.9322286626152, worksheet.lever_graphs_r1277, 0.002); end
  def test_lever_graphs_s1277; assert_in_epsilon(1787.7394607416759, worksheet.lever_graphs_s1277, 0.002); end
  def test_lever_graphs_b1278; assert_in_epsilon(2.0, worksheet.lever_graphs_b1278, 0.002); end
  def test_lever_graphs_k1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k1278, 0.002); end
  def test_lever_graphs_l1278; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_l1278, 0.002); end
  def test_lever_graphs_m1278; assert_in_epsilon(353.28137511784706, worksheet.lever_graphs_m1278, 0.002); end
  def test_lever_graphs_n1278; assert_in_epsilon(434.189069830633, worksheet.lever_graphs_n1278, 0.002); end
  def test_lever_graphs_o1278; assert_in_epsilon(533.6260602402377, worksheet.lever_graphs_o1278, 0.002); end
  def test_lever_graphs_p1278; assert_in_epsilon(655.8358833827733, worksheet.lever_graphs_p1278, 0.002); end
  def test_lever_graphs_q1278; assert_in_epsilon(806.0339214670718, worksheet.lever_graphs_q1278, 0.002); end
  def test_lever_graphs_r1278; assert_in_epsilon(990.6299716394122, worksheet.lever_graphs_r1278, 0.002); end
  def test_lever_graphs_s1278; assert_in_epsilon(1217.5017881680963, worksheet.lever_graphs_s1278, 0.002); end
  def test_lever_graphs_b1279; assert_in_epsilon(3.0, worksheet.lever_graphs_b1279, 0.002); end
  def test_lever_graphs_k1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k1279, 0.002); end
  def test_lever_graphs_l1279; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_l1279, 0.002); end
  def test_lever_graphs_m1279; assert_in_epsilon(329.7444385185951, worksheet.lever_graphs_m1279, 0.002); end
  def test_lever_graphs_n1279; assert_in_epsilon(378.26169211608646, worksheet.lever_graphs_n1279, 0.002); end
  def test_lever_graphs_o1279; assert_in_epsilon(433.9175767916894, worksheet.lever_graphs_o1279, 0.002); end
  def test_lever_graphs_p1279; assert_in_epsilon(497.76244164579106, worksheet.lever_graphs_p1279, 0.002); end
  def test_lever_graphs_q1279; assert_in_epsilon(571.0011798672197, worksheet.lever_graphs_q1279, 0.002); end
  def test_lever_graphs_r1279; assert_in_epsilon(655.0159677209424, worksheet.lever_graphs_r1279, 0.002); end
  def test_lever_graphs_s1279; assert_in_epsilon(751.3923492577945, worksheet.lever_graphs_s1279, 0.002); end
  def test_lever_graphs_b1280; assert_in_epsilon(4.0, worksheet.lever_graphs_b1280, 0.002); end
  def test_lever_graphs_k1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k1280, 0.002); end
  def test_lever_graphs_l1280; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_l1280, 0.002); end
  def test_lever_graphs_m1280; assert_in_epsilon(308.3096749216857, worksheet.lever_graphs_m1280, 0.002); end
  def test_lever_graphs_n1280; assert_in_epsilon(330.6828780235829, worksheet.lever_graphs_n1280, 0.002); end
  def test_lever_graphs_o1280; assert_in_epsilon(354.6796442431989, worksheet.lever_graphs_o1280, 0.002); end
  def test_lever_graphs_p1280; assert_in_epsilon(380.41779118515706, worksheet.lever_graphs_p1280, 0.002); end
  def test_lever_graphs_q1280; assert_in_epsilon(408.02368616046897, worksheet.lever_graphs_q1280, 0.002); end
  def test_lever_graphs_r1280; assert_in_epsilon(437.63286661571004, worksheet.lever_graphs_r1280, 0.002); end
  def test_lever_graphs_s1280; assert_in_epsilon(469.3907055850704, worksheet.lever_graphs_s1280, 0.002); end
  def test_lever_graphs_b3736; assert_equal("Type of travel", worksheet.lever_graphs_b3736); end
  def test_lever_graphs_c3736; assert_equal("Level", worksheet.lever_graphs_c3736); end
  def test_lever_graphs_d3736; assert_equal("Type of city", worksheet.lever_graphs_d3736); end
  def test_lever_graphs_e3736; assert_equal("1985", worksheet.lever_graphs_e3736); end
  def test_lever_graphs_f3736; assert_equal("1990", worksheet.lever_graphs_f3736); end
  def test_lever_graphs_g3736; assert_equal("1995", worksheet.lever_graphs_g3736); end
  def test_lever_graphs_h3736; assert_equal("2000", worksheet.lever_graphs_h3736); end
  def test_lever_graphs_i3736; assert_equal("2005", worksheet.lever_graphs_i3736); end
  def test_lever_graphs_j3736; assert_equal("2010", worksheet.lever_graphs_j3736); end
  def test_lever_graphs_k3736; assert_equal("2011", worksheet.lever_graphs_k3736); end
  def test_lever_graphs_l3736; assert_equal("2015", worksheet.lever_graphs_l3736); end
  def test_lever_graphs_m3736; assert_equal("2020", worksheet.lever_graphs_m3736); end
  def test_lever_graphs_n3736; assert_equal("2025", worksheet.lever_graphs_n3736); end
  def test_lever_graphs_o3736; assert_equal("2030", worksheet.lever_graphs_o3736); end
  def test_lever_graphs_p3736; assert_equal("2035", worksheet.lever_graphs_p3736); end
  def test_lever_graphs_q3736; assert_equal("2040", worksheet.lever_graphs_q3736); end
  def test_lever_graphs_r3736; assert_equal("2045", worksheet.lever_graphs_r3736); end
  def test_lever_graphs_s3736; assert_equal("2050", worksheet.lever_graphs_s3736); end
  def test_lever_graphs_b3737; assert_equal("Urban", worksheet.lever_graphs_b3737); end
  def test_lever_graphs_c3737; assert_in_delta(1.0, worksheet.lever_graphs_c3737, 0.002); end
  def test_lever_graphs_d3737; assert_equal("Automobile city", worksheet.lever_graphs_d3737); end
  def test_lever_graphs_k3737; assert_in_delta(0.7598986494851144, worksheet.lever_graphs_k3737, 0.002); end
  def test_lever_graphs_l3737; assert_in_delta(0.7527492024947663, worksheet.lever_graphs_l3737, 0.002); end
  def test_lever_graphs_m3737; assert_in_delta(0.7564256843752442, worksheet.lever_graphs_m3737, 0.002); end
  def test_lever_graphs_n3737; assert_in_delta(0.7601021662557219, worksheet.lever_graphs_n3737, 0.002); end
  def test_lever_graphs_o3737; assert_in_delta(0.7637786481361997, worksheet.lever_graphs_o3737, 0.002); end
  def test_lever_graphs_p3737; assert_in_delta(0.7674551300166776, worksheet.lever_graphs_p3737, 0.002); end
  def test_lever_graphs_q3737; assert_in_delta(0.7711316118971554, worksheet.lever_graphs_q3737, 0.002); end
  def test_lever_graphs_r3737; assert_in_delta(0.7748080937776333, worksheet.lever_graphs_r3737, 0.002); end
  def test_lever_graphs_s3737; assert_in_delta(0.7784845756581111, worksheet.lever_graphs_s3737, 0.002); end
  def test_lever_graphs_b3738; assert_equal("Urban", worksheet.lever_graphs_b3738); end
  def test_lever_graphs_c3738; assert_in_epsilon(2.0, worksheet.lever_graphs_c3738, 0.002); end
  def test_lever_graphs_d3738; assert_equal("Automobile city", worksheet.lever_graphs_d3738); end
  def test_lever_graphs_k3738; assert_in_delta(0.7598986494851144, worksheet.lever_graphs_k3738, 0.002); end
  def test_lever_graphs_l3738; assert_in_delta(0.7527492024947663, worksheet.lever_graphs_l3738, 0.002); end
  def test_lever_graphs_m3738; assert_in_delta(0.7438123937568311, worksheet.lever_graphs_m3738, 0.002); end
  def test_lever_graphs_n3738; assert_in_delta(0.7348755850188957, worksheet.lever_graphs_n3738, 0.002); end
  def test_lever_graphs_o3738; assert_in_delta(0.7259387762809606, worksheet.lever_graphs_o3738, 0.002); end
  def test_lever_graphs_p3738; assert_in_delta(0.7170019675430253, worksheet.lever_graphs_p3738, 0.002); end
  def test_lever_graphs_q3738; assert_in_delta(0.7080651588050901, worksheet.lever_graphs_q3738, 0.002); end
  def test_lever_graphs_r3738; assert_in_delta(0.6991283500671549, worksheet.lever_graphs_r3738, 0.002); end
  def test_lever_graphs_s3738; assert_in_delta(0.6901915413292197, worksheet.lever_graphs_s3738, 0.002); end
  def test_lever_graphs_b3739; assert_equal("Urban", worksheet.lever_graphs_b3739); end
  def test_lever_graphs_c3739; assert_in_epsilon(3.0, worksheet.lever_graphs_c3739, 0.002); end
  def test_lever_graphs_d3739; assert_equal("Automobile city", worksheet.lever_graphs_d3739); end
  def test_lever_graphs_k3739; assert_in_delta(0.7598986494851144, worksheet.lever_graphs_k3739, 0.002); end
  def test_lever_graphs_l3739; assert_in_delta(0.7527492024947663, worksheet.lever_graphs_l3739, 0.002); end
  def test_lever_graphs_m3739; assert_in_delta(0.7308811167931706, worksheet.lever_graphs_m3739, 0.002); end
  def test_lever_graphs_n3739; assert_in_delta(0.709013031091575, worksheet.lever_graphs_n3739, 0.002); end
  def test_lever_graphs_o3739; assert_in_delta(0.6871449453899793, worksheet.lever_graphs_o3739, 0.002); end
  def test_lever_graphs_p3739; assert_in_delta(0.6652768596883837, worksheet.lever_graphs_p3739, 0.002); end
  def test_lever_graphs_q3739; assert_in_delta(0.643408773986788, worksheet.lever_graphs_q3739, 0.002); end
  def test_lever_graphs_r3739; assert_in_delta(0.6215406882851924, worksheet.lever_graphs_r3739, 0.002); end
  def test_lever_graphs_s3739; assert_in_delta(0.5996726025835968, worksheet.lever_graphs_s3739, 0.002); end
  def test_lever_graphs_b3740; assert_equal("Urban", worksheet.lever_graphs_b3740); end
  def test_lever_graphs_c3740; assert_in_epsilon(4.0, worksheet.lever_graphs_c3740, 0.002); end
  def test_lever_graphs_d3740; assert_equal("Automobile city", worksheet.lever_graphs_d3740); end
  def test_lever_graphs_k3740; assert_in_delta(0.7598986494851144, worksheet.lever_graphs_k3740, 0.002); end
  def test_lever_graphs_l3740; assert_in_delta(0.7527492024947663, worksheet.lever_graphs_l3740, 0.002); end
  def test_lever_graphs_m3740; assert_in_delta(0.7094742748670191, worksheet.lever_graphs_m3740, 0.002); end
  def test_lever_graphs_n3740; assert_in_delta(0.666199347239272, worksheet.lever_graphs_n3740, 0.002); end
  def test_lever_graphs_o3740; assert_in_delta(0.6229244196115248, worksheet.lever_graphs_o3740, 0.002); end
  def test_lever_graphs_p3740; assert_in_delta(0.5796494919837776, worksheet.lever_graphs_p3740, 0.002); end
  def test_lever_graphs_q3740; assert_in_delta(0.5363745643560305, worksheet.lever_graphs_q3740, 0.002); end
  def test_lever_graphs_r3740; assert_in_delta(0.4930996367282833, worksheet.lever_graphs_r3740, 0.002); end
  def test_lever_graphs_s3740; assert_in_delta(0.4498247091005362, worksheet.lever_graphs_s3740, 0.002); end
  def test_lever_graphs_b3741; assert_equal("Urban", worksheet.lever_graphs_b3741); end
  def test_lever_graphs_c3741; assert_in_delta(1.0, worksheet.lever_graphs_c3741, 0.002); end
  def test_lever_graphs_d3741; assert_equal("Transit city", worksheet.lever_graphs_d3741); end
  def test_lever_graphs_k3741; assert_in_delta(0.5217689415674699, worksheet.lever_graphs_k3741, 0.002); end
  def test_lever_graphs_l3741; assert_in_delta(0.5286334049778526, worksheet.lever_graphs_l3741, 0.002); end
  def test_lever_graphs_m3741; assert_in_delta(0.5548206986906596, worksheet.lever_graphs_m3741, 0.002); end
  def test_lever_graphs_n3741; assert_in_delta(0.5810079924034668, worksheet.lever_graphs_n3741, 0.002); end
  def test_lever_graphs_o3741; assert_in_delta(0.6071952861162738, worksheet.lever_graphs_o3741, 0.002); end
  def test_lever_graphs_p3741; assert_in_delta(0.6333825798290809, worksheet.lever_graphs_p3741, 0.002); end
  def test_lever_graphs_q3741; assert_in_delta(0.659569873541888, worksheet.lever_graphs_q3741, 0.002); end
  def test_lever_graphs_r3741; assert_in_delta(0.685757167254695, worksheet.lever_graphs_r3741, 0.002); end
  def test_lever_graphs_s3741; assert_in_delta(0.7119444609675022, worksheet.lever_graphs_s3741, 0.002); end
  def test_lever_graphs_b3742; assert_equal("Urban", worksheet.lever_graphs_b3742); end
  def test_lever_graphs_c3742; assert_in_epsilon(2.0, worksheet.lever_graphs_c3742, 0.002); end
  def test_lever_graphs_d3742; assert_equal("Transit city", worksheet.lever_graphs_d3742); end
  def test_lever_graphs_k3742; assert_in_delta(0.5217689415674699, worksheet.lever_graphs_k3742, 0.002); end
  def test_lever_graphs_l3742; assert_in_delta(0.5286334049778526, worksheet.lever_graphs_l3742, 0.002); end
  def test_lever_graphs_m3742; assert_in_delta(0.537213984240831, worksheet.lever_graphs_m3742, 0.002); end
  def test_lever_graphs_n3742; assert_in_delta(0.5457945635038093, worksheet.lever_graphs_n3742, 0.002); end
  def test_lever_graphs_o3742; assert_in_delta(0.5543751427667877, worksheet.lever_graphs_o3742, 0.002); end
  def test_lever_graphs_p3742; assert_in_delta(0.5629557220297661, worksheet.lever_graphs_p3742, 0.002); end
  def test_lever_graphs_q3742; assert_in_delta(0.5715363012927444, worksheet.lever_graphs_q3742, 0.002); end
  def test_lever_graphs_r3742; assert_in_delta(0.5801168805557227, worksheet.lever_graphs_r3742, 0.002); end
  def test_lever_graphs_s3742; assert_in_delta(0.5886974598187011, worksheet.lever_graphs_s3742, 0.002); end
  def test_lever_graphs_b3743; assert_equal("Urban", worksheet.lever_graphs_b3743); end
  def test_lever_graphs_c3743; assert_in_epsilon(3.0, worksheet.lever_graphs_c3743, 0.002); end
  def test_lever_graphs_d3743; assert_equal("Transit city", worksheet.lever_graphs_d3743); end
  def test_lever_graphs_k3743; assert_in_delta(0.5217689415674699, worksheet.lever_graphs_k3743, 0.002); end
  def test_lever_graphs_l3743; assert_in_delta(0.5286334049778526, worksheet.lever_graphs_l3743, 0.002); end
  def test_lever_graphs_m3743; assert_in_delta(0.5130081744099613, worksheet.lever_graphs_m3743, 0.002); end
  def test_lever_graphs_n3743; assert_in_delta(0.49738294384207, worksheet.lever_graphs_n3743, 0.002); end
  def test_lever_graphs_o3743; assert_in_delta(0.4817577132741787, worksheet.lever_graphs_o3743, 0.002); end
  def test_lever_graphs_p3743; assert_in_delta(0.4661324827062874, worksheet.lever_graphs_p3743, 0.002); end
  def test_lever_graphs_q3743; assert_in_delta(0.45050725213839615, worksheet.lever_graphs_q3743, 0.002); end
  def test_lever_graphs_r3743; assert_in_delta(0.4348820215705048, worksheet.lever_graphs_r3743, 0.002); end
  def test_lever_graphs_s3743; assert_in_delta(0.41925679100261354, worksheet.lever_graphs_s3743, 0.002); end
  def test_lever_graphs_b3744; assert_equal("Urban", worksheet.lever_graphs_b3744); end
  def test_lever_graphs_c3744; assert_in_epsilon(4.0, worksheet.lever_graphs_c3744, 0.002); end
  def test_lever_graphs_d3744; assert_equal("Transit city", worksheet.lever_graphs_d3744); end
  def test_lever_graphs_k3744; assert_in_delta(0.5217689415674699, worksheet.lever_graphs_k3744, 0.002); end
  def test_lever_graphs_l3744; assert_in_delta(0.5286334049778526, worksheet.lever_graphs_l3744, 0.002); end
  def test_lever_graphs_m3744; assert_in_delta(0.5032816995125248, worksheet.lever_graphs_m3744, 0.002); end
  def test_lever_graphs_n3744; assert_in_delta(0.47792999404719694, worksheet.lever_graphs_n3744, 0.002); end
  def test_lever_graphs_o3744; assert_in_delta(0.4525782885818691, worksheet.lever_graphs_o3744, 0.002); end
  def test_lever_graphs_p3744; assert_in_delta(0.42722658311654127, worksheet.lever_graphs_p3744, 0.002); end
  def test_lever_graphs_q3744; assert_in_delta(0.4018748776512135, worksheet.lever_graphs_q3744, 0.002); end
  def test_lever_graphs_r3744; assert_in_delta(0.37652317218588566, worksheet.lever_graphs_r3744, 0.002); end
  def test_lever_graphs_s3744; assert_in_delta(0.3511714667205578, worksheet.lever_graphs_s3744, 0.002); end
  def test_lever_graphs_b3745; assert_equal("Urban", worksheet.lever_graphs_b3745); end
  def test_lever_graphs_c3745; assert_in_delta(1.0, worksheet.lever_graphs_c3745, 0.002); end
  def test_lever_graphs_d3745; assert_equal("Booming city", worksheet.lever_graphs_d3745); end
  def test_lever_graphs_k3745; assert_in_delta(0.2322045028959011, worksheet.lever_graphs_k3745, 0.002); end
  def test_lever_graphs_l3745; assert_in_delta(0.25903558176529734, worksheet.lever_graphs_l3745, 0.002); end
  def test_lever_graphs_m3745; assert_in_delta(0.31050995715561247, worksheet.lever_graphs_m3745, 0.002); end
  def test_lever_graphs_n3745; assert_in_delta(0.36198433254592766, worksheet.lever_graphs_n3745, 0.002); end
  def test_lever_graphs_o3745; assert_in_delta(0.41345870793624273, worksheet.lever_graphs_o3745, 0.002); end
  def test_lever_graphs_p3745; assert_in_delta(0.4649330833265579, worksheet.lever_graphs_p3745, 0.002); end
  def test_lever_graphs_q3745; assert_in_delta(0.5164074587168731, worksheet.lever_graphs_q3745, 0.002); end
  def test_lever_graphs_r3745; assert_in_delta(0.5678818341071882, worksheet.lever_graphs_r3745, 0.002); end
  def test_lever_graphs_s3745; assert_in_delta(0.6193562094975034, worksheet.lever_graphs_s3745, 0.002); end
  def test_lever_graphs_b3746; assert_equal("Urban", worksheet.lever_graphs_b3746); end
  def test_lever_graphs_c3746; assert_in_epsilon(2.0, worksheet.lever_graphs_c3746, 0.002); end
  def test_lever_graphs_d3746; assert_equal("Booming city", worksheet.lever_graphs_d3746); end
  def test_lever_graphs_k3746; assert_in_delta(0.2322045028959011, worksheet.lever_graphs_k3746, 0.002); end
  def test_lever_graphs_l3746; assert_in_delta(0.25903558176529734, worksheet.lever_graphs_l3746, 0.002); end
  def test_lever_graphs_m3746; assert_in_delta(0.2925744303520426, worksheet.lever_graphs_m3746, 0.002); end
  def test_lever_graphs_n3746; assert_in_delta(0.32611327893878794, worksheet.lever_graphs_n3746, 0.002); end
  def test_lever_graphs_o3746; assert_in_delta(0.3596521275255332, worksheet.lever_graphs_o3746, 0.002); end
  def test_lever_graphs_p3746; assert_in_delta(0.39319097611227855, worksheet.lever_graphs_p3746, 0.002); end
  def test_lever_graphs_q3746; assert_in_delta(0.4267298246990239, worksheet.lever_graphs_q3746, 0.002); end
  def test_lever_graphs_r3746; assert_in_delta(0.46026867328576915, worksheet.lever_graphs_r3746, 0.002); end
  def test_lever_graphs_s3746; assert_in_delta(0.4938075218725145, worksheet.lever_graphs_s3746, 0.002); end
  def test_lever_graphs_b3747; assert_equal("Urban", worksheet.lever_graphs_b3747); end
  def test_lever_graphs_c3747; assert_in_epsilon(3.0, worksheet.lever_graphs_c3747, 0.002); end
  def test_lever_graphs_d3747; assert_equal("Booming city", worksheet.lever_graphs_d3747); end
  def test_lever_graphs_k3747; assert_in_delta(0.2322045028959011, worksheet.lever_graphs_k3747, 0.002); end
  def test_lever_graphs_l3747; assert_in_delta(0.25903558176529734, worksheet.lever_graphs_l3747, 0.002); end
  def test_lever_graphs_m3747; assert_in_delta(0.2803334158042677, worksheet.lever_graphs_m3747, 0.002); end
  def test_lever_graphs_n3747; assert_in_delta(0.3016312498432381, worksheet.lever_graphs_n3747, 0.002); end
  def test_lever_graphs_o3747; assert_in_delta(0.3229290838822084, worksheet.lever_graphs_o3747, 0.002); end
  def test_lever_graphs_p3747; assert_in_delta(0.34422691792117877, worksheet.lever_graphs_p3747, 0.002); end
  def test_lever_graphs_q3747; assert_in_delta(0.36552475196014916, worksheet.lever_graphs_q3747, 0.002); end
  def test_lever_graphs_r3747; assert_in_delta(0.38682258599911956, worksheet.lever_graphs_r3747, 0.002); end
  def test_lever_graphs_s3747; assert_in_delta(0.4081204200380899, worksheet.lever_graphs_s3747, 0.002); end
  def test_lever_graphs_b3748; assert_equal("Urban", worksheet.lever_graphs_b3748); end
  def test_lever_graphs_c3748; assert_in_epsilon(4.0, worksheet.lever_graphs_c3748, 0.002); end
  def test_lever_graphs_d3748; assert_equal("Booming city", worksheet.lever_graphs_d3748); end
  def test_lever_graphs_k3748; assert_in_delta(0.2322045028959011, worksheet.lever_graphs_k3748, 0.002); end
  def test_lever_graphs_l3748; assert_in_delta(0.25903558176529734, worksheet.lever_graphs_l3748, 0.002); end
  def test_lever_graphs_m3748; assert_in_delta(0.2582657164254323, worksheet.lever_graphs_m3748, 0.002); end
  def test_lever_graphs_n3748; assert_in_delta(0.25749585108556716, worksheet.lever_graphs_n3748, 0.002); end
  def test_lever_graphs_o3748; assert_in_delta(0.2567259857457021, worksheet.lever_graphs_o3748, 0.002); end
  def test_lever_graphs_p3748; assert_in_delta(0.25595612040583704, worksheet.lever_graphs_p3748, 0.002); end
  def test_lever_graphs_q3748; assert_in_delta(0.255186255065972, worksheet.lever_graphs_q3748, 0.002); end
  def test_lever_graphs_r3748; assert_in_delta(0.2544163897261069, worksheet.lever_graphs_r3748, 0.002); end
  def test_lever_graphs_s3748; assert_in_delta(0.25364652438624186, worksheet.lever_graphs_s3748, 0.002); end
  def test_lever_graphs_b3749; assert_equal("Rural", worksheet.lever_graphs_b3749); end
  def test_lever_graphs_c3749; assert_in_delta(1.0, worksheet.lever_graphs_c3749, 0.002); end
  def test_lever_graphs_d3749; assert_equal("Developed", worksheet.lever_graphs_d3749); end
  def test_lever_graphs_k3749; assert_in_delta(0.8491000766064025, worksheet.lever_graphs_k3749, 0.002); end
  def test_lever_graphs_l3749; assert_in_delta(0.837, worksheet.lever_graphs_l3749, 0.002); end
  def test_lever_graphs_m3749; assert_in_delta(0.8440924080869752, worksheet.lever_graphs_m3749, 0.002); end
  def test_lever_graphs_n3749; assert_in_delta(0.8511848161739506, worksheet.lever_graphs_n3749, 0.002); end
  def test_lever_graphs_o3749; assert_in_delta(0.8582772242609258, worksheet.lever_graphs_o3749, 0.002); end
  def test_lever_graphs_p3749; assert_in_delta(0.865369632347901, worksheet.lever_graphs_p3749, 0.002); end
  def test_lever_graphs_q3749; assert_in_delta(0.8724620404348763, worksheet.lever_graphs_q3749, 0.002); end
  def test_lever_graphs_r3749; assert_in_delta(0.8795544485218515, worksheet.lever_graphs_r3749, 0.002); end
  def test_lever_graphs_s3749; assert_in_delta(0.8866468566088268, worksheet.lever_graphs_s3749, 0.002); end
  def test_lever_graphs_b3750; assert_equal("Rural", worksheet.lever_graphs_b3750); end
  def test_lever_graphs_c3750; assert_in_epsilon(2.0, worksheet.lever_graphs_c3750, 0.002); end
  def test_lever_graphs_d3750; assert_equal("Developed", worksheet.lever_graphs_d3750); end
  def test_lever_graphs_k3750; assert_in_delta(0.8491000766064025, worksheet.lever_graphs_k3750, 0.002); end
  def test_lever_graphs_l3750; assert_in_delta(0.837, worksheet.lever_graphs_l3750, 0.002); end
  def test_lever_graphs_m3750; assert_in_delta(0.8221028569712652, worksheet.lever_graphs_m3750, 0.002); end
  def test_lever_graphs_n3750; assert_in_delta(0.8072057139425305, worksheet.lever_graphs_n3750, 0.002); end
  def test_lever_graphs_o3750; assert_in_delta(0.7923085709137957, worksheet.lever_graphs_o3750, 0.002); end
  def test_lever_graphs_p3750; assert_in_delta(0.7774114278850609, worksheet.lever_graphs_p3750, 0.002); end
  def test_lever_graphs_q3750; assert_in_delta(0.7625142848563262, worksheet.lever_graphs_q3750, 0.002); end
  def test_lever_graphs_r3750; assert_in_delta(0.7476171418275914, worksheet.lever_graphs_r3750, 0.002); end
  def test_lever_graphs_s3750; assert_in_delta(0.7327199987988567, worksheet.lever_graphs_s3750, 0.002); end
  def test_lever_graphs_b3751; assert_equal("Rural", worksheet.lever_graphs_b3751); end
  def test_lever_graphs_c3751; assert_in_epsilon(3.0, worksheet.lever_graphs_c3751, 0.002); end
  def test_lever_graphs_d3751; assert_equal("Developed", worksheet.lever_graphs_d3751); end
  def test_lever_graphs_k3751; assert_in_delta(0.8491000766064025, worksheet.lever_graphs_k3751, 0.002); end
  def test_lever_graphs_l3751; assert_in_delta(0.837, worksheet.lever_graphs_l3751, 0.002); end
  def test_lever_graphs_m3751; assert_in_delta(0.8148409079778636, worksheet.lever_graphs_m3751, 0.002); end
  def test_lever_graphs_n3751; assert_in_delta(0.7926818159557275, worksheet.lever_graphs_n3751, 0.002); end
  def test_lever_graphs_o3751; assert_in_delta(0.7705227239335912, worksheet.lever_graphs_o3751, 0.002); end
  def test_lever_graphs_p3751; assert_in_delta(0.7483636319114549, worksheet.lever_graphs_p3751, 0.002); end
  def test_lever_graphs_q3751; assert_in_delta(0.7262045398893188, worksheet.lever_graphs_q3751, 0.002); end
  def test_lever_graphs_r3751; assert_in_delta(0.7040454478671825, worksheet.lever_graphs_r3751, 0.002); end
  def test_lever_graphs_s3751; assert_in_delta(0.6818863558450463, worksheet.lever_graphs_s3751, 0.002); end
  def test_lever_graphs_b3752; assert_equal("Rural", worksheet.lever_graphs_b3752); end
  def test_lever_graphs_c3752; assert_in_epsilon(4.0, worksheet.lever_graphs_c3752, 0.002); end
  def test_lever_graphs_d3752; assert_equal("Developed", worksheet.lever_graphs_d3752); end
  def test_lever_graphs_k3752; assert_in_delta(0.8491000766064025, worksheet.lever_graphs_k3752, 0.002); end
  def test_lever_graphs_l3752; assert_in_delta(0.837, worksheet.lever_graphs_l3752, 0.002); end
  def test_lever_graphs_m3752; assert_in_delta(0.8051188937340755, worksheet.lever_graphs_m3752, 0.002); end
  def test_lever_graphs_n3752; assert_in_delta(0.7732377874681513, worksheet.lever_graphs_n3752, 0.002); end
  def test_lever_graphs_o3752; assert_in_delta(0.741356681202227, worksheet.lever_graphs_o3752, 0.002); end
  def test_lever_graphs_p3752; assert_in_delta(0.7094755749363026, worksheet.lever_graphs_p3752, 0.002); end
  def test_lever_graphs_q3752; assert_in_delta(0.6775944686703783, worksheet.lever_graphs_q3752, 0.002); end
  def test_lever_graphs_r3752; assert_in_delta(0.645713362404454, worksheet.lever_graphs_r3752, 0.002); end
  def test_lever_graphs_s3752; assert_in_delta(0.6138322561385297, worksheet.lever_graphs_s3752, 0.002); end
  def test_lever_graphs_b3753; assert_equal("Rural", worksheet.lever_graphs_b3753); end
  def test_lever_graphs_c3753; assert_in_delta(1.0, worksheet.lever_graphs_c3753, 0.002); end
  def test_lever_graphs_d3753; assert_equal("Developing", worksheet.lever_graphs_d3753); end
  def test_lever_graphs_k3753; assert_in_delta(0.2354651116534186, worksheet.lever_graphs_k3753, 0.002); end
  def test_lever_graphs_l3753; assert_in_delta(0.268, worksheet.lever_graphs_l3753, 0.002); end
  def test_lever_graphs_m3753; assert_in_delta(0.31055301575875255, worksheet.lever_graphs_m3753, 0.002); end
  def test_lever_graphs_n3753; assert_in_delta(0.3531060315175051, worksheet.lever_graphs_n3753, 0.002); end
  def test_lever_graphs_o3753; assert_in_delta(0.3956590472762576, worksheet.lever_graphs_o3753, 0.002); end
  def test_lever_graphs_p3753; assert_in_delta(0.43821206303501015, worksheet.lever_graphs_p3753, 0.002); end
  def test_lever_graphs_q3753; assert_in_delta(0.48076507879376273, worksheet.lever_graphs_q3753, 0.002); end
  def test_lever_graphs_r3753; assert_in_delta(0.5233180945525152, worksheet.lever_graphs_r3753, 0.002); end
  def test_lever_graphs_s3753; assert_in_delta(0.5658711103112678, worksheet.lever_graphs_s3753, 0.002); end
  def test_lever_graphs_b3754; assert_equal("Rural", worksheet.lever_graphs_b3754); end
  def test_lever_graphs_c3754; assert_in_epsilon(2.0, worksheet.lever_graphs_c3754, 0.002); end
  def test_lever_graphs_d3754; assert_equal("Developing", worksheet.lever_graphs_d3754); end
  def test_lever_graphs_k3754; assert_in_delta(0.2354651116534186, worksheet.lever_graphs_k3754, 0.002); end
  def test_lever_graphs_l3754; assert_in_delta(0.268, worksheet.lever_graphs_l3754, 0.002); end
  def test_lever_graphs_m3754; assert_in_delta(0.30890561410088335, worksheet.lever_graphs_m3754, 0.002); end
  def test_lever_graphs_n3754; assert_in_delta(0.3498112282017667, worksheet.lever_graphs_n3754, 0.002); end
  def test_lever_graphs_o3754; assert_in_delta(0.39071684230265, worksheet.lever_graphs_o3754, 0.002); end
  def test_lever_graphs_p3754; assert_in_delta(0.43162245640353336, worksheet.lever_graphs_p3754, 0.002); end
  def test_lever_graphs_q3754; assert_in_delta(0.47252807050441675, worksheet.lever_graphs_q3754, 0.002); end
  def test_lever_graphs_r3754; assert_in_delta(0.5134336846053001, worksheet.lever_graphs_r3754, 0.002); end
  def test_lever_graphs_s3754; assert_in_delta(0.5543392987061835, worksheet.lever_graphs_s3754, 0.002); end
  def test_lever_graphs_b3755; assert_equal("Rural", worksheet.lever_graphs_b3755); end
  def test_lever_graphs_c3755; assert_in_epsilon(3.0, worksheet.lever_graphs_c3755, 0.002); end
  def test_lever_graphs_d3755; assert_equal("Developing", worksheet.lever_graphs_d3755); end
  def test_lever_graphs_k3755; assert_in_delta(0.2354651116534186, worksheet.lever_graphs_k3755, 0.002); end
  def test_lever_graphs_l3755; assert_in_delta(0.268, worksheet.lever_graphs_l3755, 0.002); end
  def test_lever_graphs_m3755; assert_in_delta(0.29418878869440607, worksheet.lever_graphs_m3755, 0.002); end
  def test_lever_graphs_n3755; assert_in_delta(0.3203775773888122, worksheet.lever_graphs_n3755, 0.002); end
  def test_lever_graphs_o3755; assert_in_delta(0.3465663660832182, worksheet.lever_graphs_o3755, 0.002); end
  def test_lever_graphs_p3755; assert_in_delta(0.37275515477762433, worksheet.lever_graphs_p3755, 0.002); end
  def test_lever_graphs_q3755; assert_in_delta(0.3989439434720304, worksheet.lever_graphs_q3755, 0.002); end
  def test_lever_graphs_r3755; assert_in_delta(0.42513273216643643, worksheet.lever_graphs_r3755, 0.002); end
  def test_lever_graphs_s3755; assert_in_delta(0.45132152086084254, worksheet.lever_graphs_s3755, 0.002); end
  def test_lever_graphs_b3756; assert_equal("Rural", worksheet.lever_graphs_b3756); end
  def test_lever_graphs_c3756; assert_in_epsilon(4.0, worksheet.lever_graphs_c3756, 0.002); end
  def test_lever_graphs_d3756; assert_equal("Developing", worksheet.lever_graphs_d3756); end
  def test_lever_graphs_k3756; assert_in_delta(0.2354651116534186, worksheet.lever_graphs_k3756, 0.002); end
  def test_lever_graphs_l3756; assert_in_delta(0.268, worksheet.lever_graphs_l3756, 0.002); end
  def test_lever_graphs_m3756; assert_in_delta(0.28422560441717665, worksheet.lever_graphs_m3756, 0.002); end
  def test_lever_graphs_n3756; assert_in_delta(0.30045120883435333, worksheet.lever_graphs_n3756, 0.002); end
  def test_lever_graphs_o3756; assert_in_delta(0.31667681325152996, worksheet.lever_graphs_o3756, 0.002); end
  def test_lever_graphs_p3756; assert_in_delta(0.33290241766870665, worksheet.lever_graphs_p3756, 0.002); end
  def test_lever_graphs_q3756; assert_in_delta(0.34912802208588334, worksheet.lever_graphs_q3756, 0.002); end
  def test_lever_graphs_r3756; assert_in_delta(0.36535362650306, worksheet.lever_graphs_r3756, 0.002); end
  def test_lever_graphs_s3756; assert_in_delta(0.38157923092023666, worksheet.lever_graphs_s3756, 0.002); end
  def test_lever_graphs_b3757; assert_equal("International", worksheet.lever_graphs_b3757); end
  def test_lever_graphs_c3757; assert_in_delta(1.0, worksheet.lever_graphs_c3757, 0.002); end
  def test_lever_graphs_d3757; assert_equal("International slow growth", worksheet.lever_graphs_d3757); end
  def test_lever_graphs_k3757; assert_in_delta(0.0, (worksheet.lever_graphs_k3757||0), 0.002); end
  def test_lever_graphs_l3757; assert_in_delta(0.0, (worksheet.lever_graphs_l3757||0), 0.002); end
  def test_lever_graphs_m3757; assert_in_delta(0.0, (worksheet.lever_graphs_m3757||0), 0.002); end
  def test_lever_graphs_n3757; assert_in_delta(0.0, (worksheet.lever_graphs_n3757||0), 0.002); end
  def test_lever_graphs_o3757; assert_in_delta(0.0, (worksheet.lever_graphs_o3757||0), 0.002); end
  def test_lever_graphs_p3757; assert_in_delta(0.0, (worksheet.lever_graphs_p3757||0), 0.002); end
  def test_lever_graphs_q3757; assert_in_delta(0.0, (worksheet.lever_graphs_q3757||0), 0.002); end
  def test_lever_graphs_r3757; assert_in_delta(0.0, (worksheet.lever_graphs_r3757||0), 0.002); end
  def test_lever_graphs_s3757; assert_in_delta(0.0, (worksheet.lever_graphs_s3757||0), 0.002); end
  def test_lever_graphs_b3758; assert_equal("International", worksheet.lever_graphs_b3758); end
  def test_lever_graphs_c3758; assert_in_epsilon(2.0, worksheet.lever_graphs_c3758, 0.002); end
  def test_lever_graphs_d3758; assert_equal("International slow growth", worksheet.lever_graphs_d3758); end
  def test_lever_graphs_k3758; assert_in_delta(0.0, (worksheet.lever_graphs_k3758||0), 0.002); end
  def test_lever_graphs_l3758; assert_in_delta(0.0, (worksheet.lever_graphs_l3758||0), 0.002); end
  def test_lever_graphs_m3758; assert_in_delta(0.0, (worksheet.lever_graphs_m3758||0), 0.002); end
  def test_lever_graphs_n3758; assert_in_delta(0.0, (worksheet.lever_graphs_n3758||0), 0.002); end
  def test_lever_graphs_o3758; assert_in_delta(0.0, (worksheet.lever_graphs_o3758||0), 0.002); end
  def test_lever_graphs_p3758; assert_in_delta(0.0, (worksheet.lever_graphs_p3758||0), 0.002); end
  def test_lever_graphs_q3758; assert_in_delta(0.0, (worksheet.lever_graphs_q3758||0), 0.002); end
  def test_lever_graphs_r3758; assert_in_delta(0.0, (worksheet.lever_graphs_r3758||0), 0.002); end
  def test_lever_graphs_s3758; assert_in_delta(0.0, (worksheet.lever_graphs_s3758||0), 0.002); end
  def test_lever_graphs_b3759; assert_equal("International", worksheet.lever_graphs_b3759); end
  def test_lever_graphs_c3759; assert_in_epsilon(3.0, worksheet.lever_graphs_c3759, 0.002); end
  def test_lever_graphs_d3759; assert_equal("International slow growth", worksheet.lever_graphs_d3759); end
  def test_lever_graphs_k3759; assert_in_delta(0.0, (worksheet.lever_graphs_k3759||0), 0.002); end
  def test_lever_graphs_l3759; assert_in_delta(0.0, (worksheet.lever_graphs_l3759||0), 0.002); end
  def test_lever_graphs_m3759; assert_in_delta(0.0, (worksheet.lever_graphs_m3759||0), 0.002); end
  def test_lever_graphs_n3759; assert_in_delta(0.0, (worksheet.lever_graphs_n3759||0), 0.002); end
  def test_lever_graphs_o3759; assert_in_delta(0.0, (worksheet.lever_graphs_o3759||0), 0.002); end
  def test_lever_graphs_p3759; assert_in_delta(0.0, (worksheet.lever_graphs_p3759||0), 0.002); end
  def test_lever_graphs_q3759; assert_in_delta(0.0, (worksheet.lever_graphs_q3759||0), 0.002); end
  def test_lever_graphs_r3759; assert_in_delta(0.0, (worksheet.lever_graphs_r3759||0), 0.002); end
  def test_lever_graphs_s3759; assert_in_delta(0.0, (worksheet.lever_graphs_s3759||0), 0.002); end
  def test_lever_graphs_b3760; assert_equal("International", worksheet.lever_graphs_b3760); end
  def test_lever_graphs_c3760; assert_in_epsilon(4.0, worksheet.lever_graphs_c3760, 0.002); end
  def test_lever_graphs_d3760; assert_equal("International slow growth", worksheet.lever_graphs_d3760); end
  def test_lever_graphs_k3760; assert_in_delta(0.0, (worksheet.lever_graphs_k3760||0), 0.002); end
  def test_lever_graphs_l3760; assert_in_delta(0.0, (worksheet.lever_graphs_l3760||0), 0.002); end
  def test_lever_graphs_m3760; assert_in_delta(0.0, (worksheet.lever_graphs_m3760||0), 0.002); end
  def test_lever_graphs_n3760; assert_in_delta(0.0, (worksheet.lever_graphs_n3760||0), 0.002); end
  def test_lever_graphs_o3760; assert_in_delta(0.0, (worksheet.lever_graphs_o3760||0), 0.002); end
  def test_lever_graphs_p3760; assert_in_delta(0.0, (worksheet.lever_graphs_p3760||0), 0.002); end
  def test_lever_graphs_q3760; assert_in_delta(0.0, (worksheet.lever_graphs_q3760||0), 0.002); end
  def test_lever_graphs_r3760; assert_in_delta(0.0, (worksheet.lever_graphs_r3760||0), 0.002); end
  def test_lever_graphs_s3760; assert_in_delta(0.0, (worksheet.lever_graphs_s3760||0), 0.002); end
  def test_lever_graphs_b3761; assert_equal("International", worksheet.lever_graphs_b3761); end
  def test_lever_graphs_c3761; assert_in_delta(1.0, worksheet.lever_graphs_c3761, 0.002); end
  def test_lever_graphs_d3761; assert_equal("International fast growth", worksheet.lever_graphs_d3761); end
  def test_lever_graphs_k3761; assert_in_delta(0.0, (worksheet.lever_graphs_k3761||0), 0.002); end
  def test_lever_graphs_l3761; assert_in_delta(0.0, (worksheet.lever_graphs_l3761||0), 0.002); end
  def test_lever_graphs_m3761; assert_in_delta(0.0, (worksheet.lever_graphs_m3761||0), 0.002); end
  def test_lever_graphs_n3761; assert_in_delta(0.0, (worksheet.lever_graphs_n3761||0), 0.002); end
  def test_lever_graphs_o3761; assert_in_delta(0.0, (worksheet.lever_graphs_o3761||0), 0.002); end
  def test_lever_graphs_p3761; assert_in_delta(0.0, (worksheet.lever_graphs_p3761||0), 0.002); end
  def test_lever_graphs_q3761; assert_in_delta(0.0, (worksheet.lever_graphs_q3761||0), 0.002); end
  def test_lever_graphs_r3761; assert_in_delta(0.0, (worksheet.lever_graphs_r3761||0), 0.002); end
  def test_lever_graphs_s3761; assert_in_delta(0.0, (worksheet.lever_graphs_s3761||0), 0.002); end
  def test_lever_graphs_b3762; assert_equal("International", worksheet.lever_graphs_b3762); end
  def test_lever_graphs_c3762; assert_in_epsilon(2.0, worksheet.lever_graphs_c3762, 0.002); end
  def test_lever_graphs_d3762; assert_equal("International fast growth", worksheet.lever_graphs_d3762); end
  def test_lever_graphs_k3762; assert_in_delta(0.0, (worksheet.lever_graphs_k3762||0), 0.002); end
  def test_lever_graphs_l3762; assert_in_delta(0.0, (worksheet.lever_graphs_l3762||0), 0.002); end
  def test_lever_graphs_m3762; assert_in_delta(0.0, (worksheet.lever_graphs_m3762||0), 0.002); end
  def test_lever_graphs_n3762; assert_in_delta(0.0, (worksheet.lever_graphs_n3762||0), 0.002); end
  def test_lever_graphs_o3762; assert_in_delta(0.0, (worksheet.lever_graphs_o3762||0), 0.002); end
  def test_lever_graphs_p3762; assert_in_delta(0.0, (worksheet.lever_graphs_p3762||0), 0.002); end
  def test_lever_graphs_q3762; assert_in_delta(0.0, (worksheet.lever_graphs_q3762||0), 0.002); end
  def test_lever_graphs_r3762; assert_in_delta(0.0, (worksheet.lever_graphs_r3762||0), 0.002); end
  def test_lever_graphs_s3762; assert_in_delta(0.0, (worksheet.lever_graphs_s3762||0), 0.002); end
  def test_lever_graphs_b3763; assert_equal("International", worksheet.lever_graphs_b3763); end
  def test_lever_graphs_c3763; assert_in_epsilon(3.0, worksheet.lever_graphs_c3763, 0.002); end
  def test_lever_graphs_d3763; assert_equal("International fast growth", worksheet.lever_graphs_d3763); end
  def test_lever_graphs_k3763; assert_in_delta(0.0, (worksheet.lever_graphs_k3763||0), 0.002); end
  def test_lever_graphs_l3763; assert_in_delta(0.0, (worksheet.lever_graphs_l3763||0), 0.002); end
  def test_lever_graphs_m3763; assert_in_delta(0.0, (worksheet.lever_graphs_m3763||0), 0.002); end
  def test_lever_graphs_n3763; assert_in_delta(0.0, (worksheet.lever_graphs_n3763||0), 0.002); end
  def test_lever_graphs_o3763; assert_in_delta(0.0, (worksheet.lever_graphs_o3763||0), 0.002); end
  def test_lever_graphs_p3763; assert_in_delta(0.0, (worksheet.lever_graphs_p3763||0), 0.002); end
  def test_lever_graphs_q3763; assert_in_delta(0.0, (worksheet.lever_graphs_q3763||0), 0.002); end
  def test_lever_graphs_r3763; assert_in_delta(0.0, (worksheet.lever_graphs_r3763||0), 0.002); end
  def test_lever_graphs_s3763; assert_in_delta(0.0, (worksheet.lever_graphs_s3763||0), 0.002); end
  def test_lever_graphs_b3764; assert_equal("International", worksheet.lever_graphs_b3764); end
  def test_lever_graphs_c3764; assert_in_epsilon(4.0, worksheet.lever_graphs_c3764, 0.002); end
  def test_lever_graphs_d3764; assert_equal("International fast growth", worksheet.lever_graphs_d3764); end
  def test_lever_graphs_k3764; assert_in_delta(0.0, (worksheet.lever_graphs_k3764||0), 0.002); end
  def test_lever_graphs_l3764; assert_in_delta(0.0, (worksheet.lever_graphs_l3764||0), 0.002); end
  def test_lever_graphs_m3764; assert_in_delta(0.0, (worksheet.lever_graphs_m3764||0), 0.002); end
  def test_lever_graphs_n3764; assert_in_delta(0.0, (worksheet.lever_graphs_n3764||0), 0.002); end
  def test_lever_graphs_o3764; assert_in_delta(0.0, (worksheet.lever_graphs_o3764||0), 0.002); end
  def test_lever_graphs_p3764; assert_in_delta(0.0, (worksheet.lever_graphs_p3764||0), 0.002); end
  def test_lever_graphs_q3764; assert_in_delta(0.0, (worksheet.lever_graphs_q3764||0), 0.002); end
  def test_lever_graphs_r3764; assert_in_delta(0.0, (worksheet.lever_graphs_r3764||0), 0.002); end
  def test_lever_graphs_s3764; assert_in_delta(0.0, (worksheet.lever_graphs_s3764||0), 0.002); end
  def test_lever_graphs_b3770; assert_equal("Type of travel", worksheet.lever_graphs_b3770); end
  def test_lever_graphs_c3770; assert_equal("Level", worksheet.lever_graphs_c3770); end
  def test_lever_graphs_d3770; assert_equal("Type of city", worksheet.lever_graphs_d3770); end
  def test_lever_graphs_e3770; assert_equal("1985", worksheet.lever_graphs_e3770); end
  def test_lever_graphs_f3770; assert_equal("1990", worksheet.lever_graphs_f3770); end
  def test_lever_graphs_g3770; assert_equal("1995", worksheet.lever_graphs_g3770); end
  def test_lever_graphs_h3770; assert_equal("2000", worksheet.lever_graphs_h3770); end
  def test_lever_graphs_i3770; assert_equal("2005", worksheet.lever_graphs_i3770); end
  def test_lever_graphs_j3770; assert_equal("2010", worksheet.lever_graphs_j3770); end
  def test_lever_graphs_k3770; assert_equal("2011", worksheet.lever_graphs_k3770); end
  def test_lever_graphs_l3770; assert_equal("2015", worksheet.lever_graphs_l3770); end
  def test_lever_graphs_m3770; assert_equal("2020", worksheet.lever_graphs_m3770); end
  def test_lever_graphs_n3770; assert_equal("2025", worksheet.lever_graphs_n3770); end
  def test_lever_graphs_o3770; assert_equal("2030", worksheet.lever_graphs_o3770); end
  def test_lever_graphs_p3770; assert_equal("2035", worksheet.lever_graphs_p3770); end
  def test_lever_graphs_q3770; assert_equal("2040", worksheet.lever_graphs_q3770); end
  def test_lever_graphs_r3770; assert_equal("2045", worksheet.lever_graphs_r3770); end
  def test_lever_graphs_s3770; assert_equal("2050", worksheet.lever_graphs_s3770); end
  def test_lever_graphs_b3771; assert_equal("Urban", worksheet.lever_graphs_b3771); end
  def test_lever_graphs_c3771; assert_in_delta(1.0, worksheet.lever_graphs_c3771, 0.002); end
  def test_lever_graphs_d3771; assert_equal("Automobile city", worksheet.lever_graphs_d3771); end
  def test_lever_graphs_k3771; assert_in_epsilon(8918.930449006788, worksheet.lever_graphs_k3771, 0.002); end
  def test_lever_graphs_l3771; assert_in_epsilon(9041.779958301404, worksheet.lever_graphs_l3771, 0.002); end
  def test_lever_graphs_m3771; assert_in_epsilon(9306.106718825675, worksheet.lever_graphs_m3771, 0.002); end
  def test_lever_graphs_n3771; assert_in_epsilon(9577.93452583689, worksheet.lever_graphs_n3771, 0.002); end
  def test_lever_graphs_o3771; assert_in_epsilon(9716.039907280776, worksheet.lever_graphs_o3771, 0.002); end
  def test_lever_graphs_p3771; assert_in_epsilon(9855.908278024184, worksheet.lever_graphs_p3771, 0.002); end
  def test_lever_graphs_q3771; assert_in_epsilon(9997.560703295736, worksheet.lever_graphs_q3771, 0.002); end
  def test_lever_graphs_r3771; assert_in_epsilon(10141.018489763575, worksheet.lever_graphs_r3771, 0.002); end
  def test_lever_graphs_s3771; assert_in_epsilon(10199.33106554591, worksheet.lever_graphs_s3771, 0.002); end
  def test_lever_graphs_b3772; assert_equal("Urban", worksheet.lever_graphs_b3772); end
  def test_lever_graphs_c3772; assert_in_epsilon(2.0, worksheet.lever_graphs_c3772, 0.002); end
  def test_lever_graphs_d3772; assert_equal("Automobile city", worksheet.lever_graphs_d3772); end
  def test_lever_graphs_k3772; assert_in_epsilon(8918.930449006788, worksheet.lever_graphs_k3772, 0.002); end
  def test_lever_graphs_l3772; assert_in_epsilon(9041.779958301404, worksheet.lever_graphs_l3772, 0.002); end
  def test_lever_graphs_m3772; assert_in_epsilon(9150.928713907104, worksheet.lever_graphs_m3772, 0.002); end
  def test_lever_graphs_n3772; assert_in_epsilon(9127.197825305117, worksheet.lever_graphs_n3772, 0.002); end
  def test_lever_graphs_o3772; assert_in_epsilon(9102.182161344705, worksheet.lever_graphs_o3772, 0.002); end
  def test_lever_graphs_p3772; assert_in_epsilon(9075.859376408569, worksheet.lever_graphs_p3772, 0.002); end
  def test_lever_graphs_q3772; assert_in_epsilon(9048.206815531837, worksheet.lever_graphs_q3772, 0.002); end
  def test_lever_graphs_r3772; assert_in_epsilon(8845.021921868583, worksheet.lever_graphs_r3772, 0.002); end
  def test_lever_graphs_s3772; assert_in_epsilon(8644.98689276609, worksheet.lever_graphs_s3772, 0.002); end
  def test_lever_graphs_b3773; assert_equal("Urban", worksheet.lever_graphs_b3773); end
  def test_lever_graphs_c3773; assert_in_epsilon(3.0, worksheet.lever_graphs_c3773, 0.002); end
  def test_lever_graphs_d3773; assert_equal("Automobile city", worksheet.lever_graphs_d3773); end
  def test_lever_graphs_k3773; assert_in_epsilon(8918.930449006788, worksheet.lever_graphs_k3773, 0.002); end
  def test_lever_graphs_l3773; assert_in_epsilon(9041.779958301404, worksheet.lever_graphs_l3773, 0.002); end
  def test_lever_graphs_m3773; assert_in_epsilon(8902.705303783388, worksheet.lever_graphs_m3773, 0.002); end
  def test_lever_graphs_n3773; assert_in_epsilon(8701.301987398034, worksheet.lever_graphs_n3773, 0.002); end
  def test_lever_graphs_o3773; assert_in_epsilon(8432.92776967324, worksheet.lever_graphs_o3773, 0.002); end
  def test_lever_graphs_p3773; assert_in_epsilon(8083.233946059662, worksheet.lever_graphs_p3773, 0.002); end
  def test_lever_graphs_q3773; assert_in_epsilon(7700.971236015493, worksheet.lever_graphs_q3773, 0.002); end
  def test_lever_graphs_r3773; assert_in_epsilon(7291.63261432435, worksheet.lever_graphs_r3773, 0.002); end
  def test_lever_graphs_s3773; assert_in_epsilon(6860.959025859904, worksheet.lever_graphs_s3773, 0.002); end
  def test_lever_graphs_b3774; assert_equal("Urban", worksheet.lever_graphs_b3774); end
  def test_lever_graphs_c3774; assert_in_epsilon(4.0, worksheet.lever_graphs_c3774, 0.002); end
  def test_lever_graphs_d3774; assert_equal("Automobile city", worksheet.lever_graphs_d3774); end
  def test_lever_graphs_k3774; assert_in_epsilon(8918.930449006788, worksheet.lever_graphs_k3774, 0.002); end
  def test_lever_graphs_l3774; assert_in_epsilon(9041.779958301404, worksheet.lever_graphs_l3774, 0.002); end
  def test_lever_graphs_m3774; assert_in_epsilon(8607.536840770963, worksheet.lever_graphs_m3774, 0.002); end
  def test_lever_graphs_n3774; assert_in_epsilon(8123.007002035949, worksheet.lever_graphs_n3774, 0.002); end
  def test_lever_graphs_o3774; assert_in_epsilon(7557.452428639823, worksheet.lever_graphs_o3774, 0.002); end
  def test_lever_graphs_p3774; assert_in_epsilon(6927.576288199299, worksheet.lever_graphs_p3774, 0.002); end
  def test_lever_graphs_q3774; assert_in_epsilon(6283.197691865801, worksheet.lever_graphs_q3774, 0.002); end
  def test_lever_graphs_r3774; assert_in_epsilon(5633.296832389788, worksheet.lever_graphs_r3774, 0.002); end
  def test_lever_graphs_s3774; assert_in_epsilon(4986.584503534419, worksheet.lever_graphs_s3774, 0.002); end
  def test_lever_graphs_b3775; assert_equal("Urban", worksheet.lever_graphs_b3775); end
  def test_lever_graphs_c3775; assert_in_delta(1.0, worksheet.lever_graphs_c3775, 0.002); end
  def test_lever_graphs_d3775; assert_equal("Transit city", worksheet.lever_graphs_d3775); end
  def test_lever_graphs_k3775; assert_in_epsilon(4297.810771691249, worksheet.lever_graphs_k3775, 0.002); end
  def test_lever_graphs_l3775; assert_in_epsilon(4713.292109407059, worksheet.lever_graphs_l3775, 0.002); end
  def test_lever_graphs_m3775; assert_in_epsilon(5329.084654198795, worksheet.lever_graphs_m3775, 0.002); end
  def test_lever_graphs_n3775; assert_in_epsilon(5923.585118875981, worksheet.lever_graphs_n3775, 0.002); end
  def test_lever_graphs_o3775; assert_in_epsilon(6426.228918727296, worksheet.lever_graphs_o3775, 0.002); end
  def test_lever_graphs_p3775; assert_in_epsilon(6958.5570081231335, worksheet.lever_graphs_p3775, 0.002); end
  def test_lever_graphs_q3775; assert_in_epsilon(7429.2366808782845, worksheet.lever_graphs_q3775, 0.002); end
  def test_lever_graphs_r3775; assert_in_epsilon(7919.249901379865, worksheet.lever_graphs_r3775, 0.002); end
  def test_lever_graphs_s3775; assert_in_epsilon(8304.211766777562, worksheet.lever_graphs_s3775, 0.002); end
  def test_lever_graphs_b3776; assert_equal("Urban", worksheet.lever_graphs_b3776); end
  def test_lever_graphs_c3776; assert_in_epsilon(2.0, worksheet.lever_graphs_c3776, 0.002); end
  def test_lever_graphs_d3776; assert_equal("Transit city", worksheet.lever_graphs_d3776); end
  def test_lever_graphs_k3776; assert_in_epsilon(4297.810771691249, worksheet.lever_graphs_k3776, 0.002); end
  def test_lever_graphs_l3776; assert_in_epsilon(4713.292109407059, worksheet.lever_graphs_l3776, 0.002); end
  def test_lever_graphs_m3776; assert_in_epsilon(5159.971151391728, worksheet.lever_graphs_m3776, 0.002); end
  def test_lever_graphs_n3776; assert_in_epsilon(5441.948704418995, worksheet.lever_graphs_n3776, 0.002); end
  def test_lever_graphs_o3776; assert_in_epsilon(5737.91699497674, worksheet.lever_graphs_o3776, 0.002); end
  def test_lever_graphs_p3776; assert_in_epsilon(5973.86025389614, worksheet.lever_graphs_p3776, 0.002); end
  def test_lever_graphs_q3776; assert_in_epsilon(6218.060594899685, worksheet.lever_graphs_q3776, 0.002); end
  def test_lever_graphs_r3776; assert_in_epsilon(6374.780575222192, worksheet.lever_graphs_r3776, 0.002); end
  def test_lever_graphs_s3776; assert_in_epsilon(6475.5423881045135, worksheet.lever_graphs_s3776, 0.002); end
  def test_lever_graphs_b3777; assert_equal("Urban", worksheet.lever_graphs_b3777); end
  def test_lever_graphs_c3777; assert_in_epsilon(3.0, worksheet.lever_graphs_c3777, 0.002); end
  def test_lever_graphs_d3777; assert_equal("Transit city", worksheet.lever_graphs_d3777); end
  def test_lever_graphs_k3777; assert_in_epsilon(4297.810771691249, worksheet.lever_graphs_k3777, 0.002); end
  def test_lever_graphs_l3777; assert_in_epsilon(4713.292109407059, worksheet.lever_graphs_l3777, 0.002); end
  def test_lever_graphs_m3777; assert_in_epsilon(4879.117366863599, worksheet.lever_graphs_m3777, 0.002); end
  def test_lever_graphs_n3777; assert_in_epsilon(4898.410992752723, worksheet.lever_graphs_n3777, 0.002); end
  def test_lever_graphs_o3777; assert_in_epsilon(4840.180675296379, worksheet.lever_graphs_o3777, 0.002); end
  def test_lever_graphs_p3777; assert_in_epsilon(4777.611470471886, worksheet.lever_graphs_p3777, 0.002); end
  def test_lever_graphs_q3777; assert_in_epsilon(4663.820798721778, worksheet.lever_graphs_q3777, 0.002); end
  def test_lever_graphs_r3777; assert_in_epsilon(4547.263593495341, worksheet.lever_graphs_r3777, 0.002); end
  def test_lever_graphs_s3777; assert_in_epsilon(4388.266889128037, worksheet.lever_graphs_s3777, 0.002); end
  def test_lever_graphs_b3778; assert_equal("Urban", worksheet.lever_graphs_b3778); end
  def test_lever_graphs_c3778; assert_in_epsilon(4.0, worksheet.lever_graphs_c3778, 0.002); end
  def test_lever_graphs_d3778; assert_equal("Transit city", worksheet.lever_graphs_d3778); end
  def test_lever_graphs_k3778; assert_in_epsilon(4297.810771691249, worksheet.lever_graphs_k3778, 0.002); end
  def test_lever_graphs_l3778; assert_in_epsilon(4713.292109407059, worksheet.lever_graphs_l3778, 0.002); end
  def test_lever_graphs_m3778; assert_in_epsilon(4786.610824165663, worksheet.lever_graphs_m3778, 0.002); end
  def test_lever_graphs_n3778; assert_in_epsilon(4706.831156137077, worksheet.lever_graphs_n3778, 0.002); end
  def test_lever_graphs_o3778; assert_in_epsilon(4547.017361828881, worksheet.lever_graphs_o3778, 0.002); end
  def test_lever_graphs_p3778; assert_in_epsilon(4335.405977503282, worksheet.lever_graphs_p3778, 0.002); end
  def test_lever_graphs_q3778; assert_in_epsilon(4098.573707836886, worksheet.lever_graphs_q3778, 0.002); end
  def test_lever_graphs_r3778; assert_in_epsilon(3849.6306682283293, worksheet.lever_graphs_r3778, 0.002); end
  def test_lever_graphs_s3778; assert_in_epsilon(3594.022810193846, worksheet.lever_graphs_s3778, 0.002); end
  def test_lever_graphs_b3779; assert_equal("Urban", worksheet.lever_graphs_b3779); end
  def test_lever_graphs_c3779; assert_in_delta(1.0, worksheet.lever_graphs_c3779, 0.002); end
  def test_lever_graphs_d3779; assert_equal("Booming city", worksheet.lever_graphs_d3779); end
  def test_lever_graphs_k3779; assert_in_epsilon(2135.8170176364983, worksheet.lever_graphs_k3779, 0.002); end
  def test_lever_graphs_l3779; assert_in_epsilon(2629.954837775782, worksheet.lever_graphs_l3779, 0.002); end
  def test_lever_graphs_m3779; assert_in_epsilon(3566.840794308878, worksheet.lever_graphs_m3779, 0.002); end
  def test_lever_graphs_n3779; assert_in_epsilon(4479.485950032117, worksheet.lever_graphs_n3779, 0.002); end
  def test_lever_graphs_o3779; assert_in_epsilon(5377.462828767544, worksheet.lever_graphs_o3779, 0.002); end
  def test_lever_graphs_p3779; assert_in_epsilon(6199.633740206733, worksheet.lever_graphs_p3779, 0.002); end
  def test_lever_graphs_q3779; assert_in_epsilon(6972.5236421235395, worksheet.lever_graphs_q3779, 0.002); end
  def test_lever_graphs_r3779; assert_in_epsilon(7763.854216370217, worksheet.lever_graphs_r3779, 0.002); end
  def test_lever_graphs_s3779; assert_in_epsilon(8573.966812864219, worksheet.lever_graphs_s3779, 0.002); end
  def test_lever_graphs_b3780; assert_equal("Urban", worksheet.lever_graphs_b3780); end
  def test_lever_graphs_c3780; assert_in_epsilon(2.0, worksheet.lever_graphs_c3780, 0.002); end
  def test_lever_graphs_d3780; assert_equal("Booming city", worksheet.lever_graphs_d3780); end
  def test_lever_graphs_k3780; assert_in_epsilon(2135.8170176364983, worksheet.lever_graphs_k3780, 0.002); end
  def test_lever_graphs_l3780; assert_in_epsilon(2629.954837775782, worksheet.lever_graphs_l3780, 0.002); end
  def test_lever_graphs_m3780; assert_in_epsilon(3279.6393891569865, worksheet.lever_graphs_m3780, 0.002); end
  def test_lever_graphs_n3780; assert_in_epsilon(3842.068270310195, worksheet.lever_graphs_n3780, 0.002); end
  def test_lever_graphs_o3780; assert_in_epsilon(4398.499048019433, worksheet.lever_graphs_o3780, 0.002); end
  def test_lever_graphs_p3780; assert_in_epsilon(4930.099897999164, worksheet.lever_graphs_p3780, 0.002); end
  def test_lever_graphs_q3780; assert_in_epsilon(5417.851300975652, worksheet.lever_graphs_q3780, 0.002); end
  def test_lever_graphs_r3780; assert_in_epsilon(5872.944385596907, worksheet.lever_graphs_r3780, 0.002); end
  def test_lever_graphs_s3780; assert_in_epsilon(6332.461522879901, worksheet.lever_graphs_s3780, 0.002); end
  def test_lever_graphs_b3781; assert_equal("Urban", worksheet.lever_graphs_b3781); end
  def test_lever_graphs_c3781; assert_in_epsilon(3.0, worksheet.lever_graphs_c3781, 0.002); end
  def test_lever_graphs_d3781; assert_equal("Booming city", worksheet.lever_graphs_d3781); end
  def test_lever_graphs_k3781; assert_in_epsilon(2135.8170176364983, worksheet.lever_graphs_k3781, 0.002); end
  def test_lever_graphs_l3781; assert_in_epsilon(2629.954837775782, worksheet.lever_graphs_l3781, 0.002); end
  def test_lever_graphs_m3781; assert_in_epsilon(3104.100867182885, worksheet.lever_graphs_m3781, 0.002); end
  def test_lever_graphs_n3781; assert_in_epsilon(3510.299392121326, worksheet.lever_graphs_n3781, 0.002); end
  def test_lever_graphs_o3781; assert_in_epsilon(3901.2183633292743, worksheet.lever_graphs_o3781, 0.002); end
  def test_lever_graphs_p3781; assert_in_epsilon(4221.264765256479, worksheet.lever_graphs_p3781, 0.002); end
  def test_lever_graphs_q3781; assert_in_epsilon(4527.444791025944, worksheet.lever_graphs_q3781, 0.002); end
  def test_lever_graphs_r3781; assert_in_epsilon(4815.2471557819745, worksheet.lever_graphs_r3781, 0.002); end
  def test_lever_graphs_s3781; assert_in_epsilon(5093.080601549461, worksheet.lever_graphs_s3781, 0.002); end
  def test_lever_graphs_b3782; assert_equal("Urban", worksheet.lever_graphs_b3782); end
  def test_lever_graphs_c3782; assert_in_epsilon(4.0, worksheet.lever_graphs_c3782, 0.002); end
  def test_lever_graphs_d3782; assert_equal("Booming city", worksheet.lever_graphs_d3782); end
  def test_lever_graphs_k3782; assert_in_epsilon(2135.8170176364983, worksheet.lever_graphs_k3782, 0.002); end
  def test_lever_graphs_l3782; assert_in_epsilon(2629.954837775782, worksheet.lever_graphs_l3782, 0.002); end
  def test_lever_graphs_m3782; assert_in_epsilon(2824.787855897616, worksheet.lever_graphs_m3782, 0.002); end
  def test_lever_graphs_n3782; assert_in_epsilon(2960.0304780355796, worksheet.lever_graphs_n3782, 0.002); end
  def test_lever_graphs_o3782; assert_in_epsilon(3025.7015367152458, worksheet.lever_graphs_o3782, 0.002); end
  def test_lever_graphs_p3782; assert_in_epsilon(3054.5249791785673, worksheet.lever_graphs_p3782, 0.002); end
  def test_lever_graphs_q3782; assert_in_epsilon(3060.5947444377657, worksheet.lever_graphs_q3782, 0.002); end
  def test_lever_graphs_r3782; assert_in_epsilon(3054.4138910884035, worksheet.lever_graphs_r3782, 0.002); end
  def test_lever_graphs_s3782; assert_in_epsilon(3048.2176080424706, worksheet.lever_graphs_s3782, 0.002); end
  def test_lever_graphs_b3783; assert_equal("Rural", worksheet.lever_graphs_b3783); end
  def test_lever_graphs_c3783; assert_in_delta(1.0, worksheet.lever_graphs_c3783, 0.002); end
  def test_lever_graphs_d3783; assert_equal("Developed", worksheet.lever_graphs_d3783); end
  def test_lever_graphs_k3783; assert_in_epsilon(19691.47987657908, worksheet.lever_graphs_k3783, 0.002); end
  def test_lever_graphs_l3783; assert_in_epsilon(20079.298872965224, worksheet.lever_graphs_l3783, 0.002); end
  def test_lever_graphs_m3783; assert_in_epsilon(21208.719413507024, worksheet.lever_graphs_m3783, 0.002); end
  def test_lever_graphs_n3783; assert_in_epsilon(22400.08604062604, worksheet.lever_graphs_n3783, 0.002); end
  def test_lever_graphs_o3783; assert_in_epsilon(23656.73325106882, worksheet.lever_graphs_o3783, 0.002); end
  def test_lever_graphs_p3783; assert_in_epsilon(24982.17245231808, worksheet.lever_graphs_p3783, 0.002); end
  def test_lever_graphs_q3783; assert_in_epsilon(26380.101240895212, worksheet.lever_graphs_q3783, 0.002); end
  def test_lever_graphs_r3783; assert_in_epsilon(27266.095762574358, worksheet.lever_graphs_r3783, 0.002); end
  def test_lever_graphs_s3783; assert_in_epsilon(28180.014595377626, worksheet.lever_graphs_s3783, 0.002); end
  def test_lever_graphs_b3784; assert_equal("Rural", worksheet.lever_graphs_b3784); end
  def test_lever_graphs_c3784; assert_in_epsilon(2.0, worksheet.lever_graphs_c3784, 0.002); end
  def test_lever_graphs_d3784; assert_equal("Developed", worksheet.lever_graphs_d3784); end
  def test_lever_graphs_k3784; assert_in_epsilon(19691.47987657908, worksheet.lever_graphs_k3784, 0.002); end
  def test_lever_graphs_l3784; assert_in_epsilon(20079.298872965224, worksheet.lever_graphs_l3784, 0.002); end
  def test_lever_graphs_m3784; assert_in_epsilon(20472.671487266736, worksheet.lever_graphs_m3784, 0.002); end
  def test_lever_graphs_n3784; assert_in_epsilon(20866.896487609494, worksheet.lever_graphs_n3784, 0.002); end
  def test_lever_graphs_o3784; assert_in_epsilon(21261.468742174264, worksheet.lever_graphs_o3784, 0.002); end
  def test_lever_graphs_p3784; assert_in_epsilon(21655.84342653164, worksheet.lever_graphs_p3784, 0.002); end
  def test_lever_graphs_q3784; assert_in_epsilon(21507.705092990673, worksheet.lever_graphs_q3784, 0.002); end
  def test_lever_graphs_r3784; assert_in_epsilon(21352.427004961515, worksheet.lever_graphs_r3784, 0.002); end
  def test_lever_graphs_s3784; assert_in_epsilon(21189.85315312041, worksheet.lever_graphs_s3784, 0.002); end
  def test_lever_graphs_b3785; assert_equal("Rural", worksheet.lever_graphs_b3785); end
  def test_lever_graphs_c3785; assert_in_epsilon(3.0, worksheet.lever_graphs_c3785, 0.002); end
  def test_lever_graphs_d3785; assert_equal("Developed", worksheet.lever_graphs_d3785); end
  def test_lever_graphs_k3785; assert_in_epsilon(19691.47987657908, worksheet.lever_graphs_k3785, 0.002); end
  def test_lever_graphs_l3785; assert_in_epsilon(20079.298872965224, worksheet.lever_graphs_l3785, 0.002); end
  def test_lever_graphs_m3785; assert_in_epsilon(20041.315220837012, worksheet.lever_graphs_m3785, 0.002); end
  def test_lever_graphs_n3785; assert_in_epsilon(19988.610220382667, worksheet.lever_graphs_n3785, 0.002); end
  def test_lever_graphs_o3785; assert_in_epsilon(19673.927261984583, worksheet.lever_graphs_o3785, 0.002); end
  def test_lever_graphs_p3785; assert_in_epsilon(19348.183186594884, worksheet.lever_graphs_p3785, 0.002); end
  def test_lever_graphs_q3785; assert_in_epsilon(18916.520017489926, worksheet.lever_graphs_q3785, 0.002); end
  def test_lever_graphs_r3785; assert_in_epsilon(18339.309486872713, worksheet.lever_graphs_r3785, 0.002); end
  def test_lever_graphs_s3785; assert_in_epsilon(17629.282262288736, worksheet.lever_graphs_s3785, 0.002); end
  def test_lever_graphs_b3786; assert_equal("Rural", worksheet.lever_graphs_b3786); end
  def test_lever_graphs_c3786; assert_in_epsilon(4.0, worksheet.lever_graphs_c3786, 0.002); end
  def test_lever_graphs_d3786; assert_equal("Developed", worksheet.lever_graphs_d3786); end
  def test_lever_graphs_k3786; assert_in_epsilon(19691.47987657908, worksheet.lever_graphs_k3786, 0.002); end
  def test_lever_graphs_l3786; assert_in_epsilon(20079.298872965224, worksheet.lever_graphs_l3786, 0.002); end
  def test_lever_graphs_m3786; assert_in_epsilon(19653.662884674515, worksheet.lever_graphs_m3786, 0.002); end
  def test_lever_graphs_n3786; assert_in_epsilon(18875.41693886777, worksheet.lever_graphs_n3786, 0.002); end
  def test_lever_graphs_o3786; assert_in_epsilon(17961.848786638835, worksheet.lever_graphs_o3786, 0.002); end
  def test_lever_graphs_p3786; assert_in_epsilon(17060.887716920934, worksheet.lever_graphs_p3786, 0.002); end
  def test_lever_graphs_q3786; assert_in_epsilon(16172.396270747338, worksheet.lever_graphs_q3786, 0.002); end
  def test_lever_graphs_r3786; assert_in_epsilon(15296.238339953203, worksheet.lever_graphs_r3786, 0.002); end
  def test_lever_graphs_s3786; assert_in_epsilon(14432.279154660037, worksheet.lever_graphs_s3786, 0.002); end
  def test_lever_graphs_b3787; assert_equal("Rural", worksheet.lever_graphs_b3787); end
  def test_lever_graphs_c3787; assert_in_delta(1.0, worksheet.lever_graphs_c3787, 0.002); end
  def test_lever_graphs_d3787; assert_equal("Developing", worksheet.lever_graphs_d3787); end
  def test_lever_graphs_k3787; assert_in_epsilon(943.5087023952483, worksheet.lever_graphs_k3787, 0.002); end
  def test_lever_graphs_l3787; assert_in_epsilon(1196.9650195745362, worksheet.lever_graphs_l3787, 0.002); end
  def test_lever_graphs_m3787; assert_in_epsilon(1569.2847073984915, worksheet.lever_graphs_m3787, 0.002); end
  def test_lever_graphs_n3787; assert_in_epsilon(1994.2872418558043, worksheet.lever_graphs_n3787, 0.002); end
  def test_lever_graphs_o3787; assert_in_epsilon(2497.5848955786355, worksheet.lever_graphs_o3787, 0.002); end
  def test_lever_graphs_p3787; assert_in_epsilon(3054.1076847093277, worksheet.lever_graphs_p3787, 0.002); end
  def test_lever_graphs_q3787; assert_in_epsilon(3699.4212800127893, worksheet.lever_graphs_q3787, 0.002); end
  def test_lever_graphs_r3787; assert_in_epsilon(4445.979810699607, worksheet.lever_graphs_r3787, 0.002); end
  def test_lever_graphs_s3787; assert_in_epsilon(5307.868023270959, worksheet.lever_graphs_s3787, 0.002); end
  def test_lever_graphs_b3788; assert_equal("Rural", worksheet.lever_graphs_b3788); end
  def test_lever_graphs_c3788; assert_in_epsilon(2.0, worksheet.lever_graphs_c3788, 0.002); end
  def test_lever_graphs_d3788; assert_equal("Developing", worksheet.lever_graphs_d3788); end
  def test_lever_graphs_k3788; assert_in_epsilon(943.5087023952483, worksheet.lever_graphs_k3788, 0.002); end
  def test_lever_graphs_l3788; assert_in_epsilon(1196.9650195745362, worksheet.lever_graphs_l3788, 0.002); end
  def test_lever_graphs_m3788; assert_in_epsilon(1560.9600668461508, worksheet.lever_graphs_m3788, 0.002); end
  def test_lever_graphs_n3788; assert_in_epsilon(1951.6439772373728, worksheet.lever_graphs_n3788, 0.002); end
  def test_lever_graphs_o3788; assert_in_epsilon(2406.7436885772618, worksheet.lever_graphs_o3788, 0.002); end
  def test_lever_graphs_p3788; assert_in_epsilon(2864.1908465106612, worksheet.lever_graphs_p3788, 0.002); end
  def test_lever_graphs_q3788; assert_in_epsilon(3377.9696600704374, worksheet.lever_graphs_q3788, 0.002); end
  def test_lever_graphs_r3788; assert_in_epsilon(3954.0549527622775, worksheet.lever_graphs_r3788, 0.002); end
  def test_lever_graphs_s3788; assert_in_epsilon(4599.008605973107, worksheet.lever_graphs_s3788, 0.002); end
  def test_lever_graphs_b3789; assert_equal("Rural", worksheet.lever_graphs_b3789); end
  def test_lever_graphs_c3789; assert_in_epsilon(3.0, worksheet.lever_graphs_c3789, 0.002); end
  def test_lever_graphs_d3789; assert_equal("Developing", worksheet.lever_graphs_d3789); end
  def test_lever_graphs_k3789; assert_in_epsilon(943.5087023952483, worksheet.lever_graphs_k3789, 0.002); end
  def test_lever_graphs_l3789; assert_in_epsilon(1196.9650195745362, worksheet.lever_graphs_l3789, 0.002); end
  def test_lever_graphs_m3789; assert_in_epsilon(1450.6867403948477, worksheet.lever_graphs_m3789, 0.002); end
  def test_lever_graphs_n3789; assert_in_epsilon(1701.922765992579, worksheet.lever_graphs_n3789, 0.002); end
  def test_lever_graphs_o3789; assert_in_epsilon(1983.3271567500283, worksheet.lever_graphs_o3789, 0.002); end
  def test_lever_graphs_p3789; assert_in_epsilon(2298.062389898455, worksheet.lever_graphs_p3789, 0.002); end
  def test_lever_graphs_q3789; assert_in_epsilon(2649.5995703423428, worksheet.lever_graphs_q3789, 0.002); end
  def test_lever_graphs_r3789; assert_in_epsilon(2967.561862604741, worksheet.lever_graphs_r3789, 0.002); end
  def test_lever_graphs_s3789; assert_in_epsilon(3311.0683749019436, worksheet.lever_graphs_s3789, 0.002); end
  def test_lever_graphs_b3790; assert_equal("Rural", worksheet.lever_graphs_b3790); end
  def test_lever_graphs_c3790; assert_in_epsilon(4.0, worksheet.lever_graphs_c3790, 0.002); end
  def test_lever_graphs_d3790; assert_equal("Developing", worksheet.lever_graphs_d3790); end
  def test_lever_graphs_k3790; assert_in_epsilon(943.5087023952483, worksheet.lever_graphs_k3790, 0.002); end
  def test_lever_graphs_l3790; assert_in_epsilon(1196.9650195745362, worksheet.lever_graphs_l3790, 0.002); end
  def test_lever_graphs_m3790; assert_in_epsilon(1401.5568623079537, worksheet.lever_graphs_m3790, 0.002); end
  def test_lever_graphs_n3790; assert_in_epsilon(1596.0691024409784, worksheet.lever_graphs_n3790, 0.002); end
  def test_lever_graphs_o3790; assert_in_epsilon(1812.275469004982, worksheet.lever_graphs_o3790, 0.002); end
  def test_lever_graphs_p3790; assert_in_epsilon(2052.367393838237, worksheet.lever_graphs_p3790, 0.002); end
  def test_lever_graphs_q3790; assert_in_epsilon(2262.1934162432617, worksheet.lever_graphs_q3790, 0.002); end
  def test_lever_graphs_r3790; assert_in_epsilon(2427.1060755257727, worksheet.lever_graphs_r3790, 0.002); end
  def test_lever_graphs_s3790; assert_in_epsilon(2598.9048045636177, worksheet.lever_graphs_s3790, 0.002); end
  def test_lever_graphs_b3791; assert_equal("International", worksheet.lever_graphs_b3791); end
  def test_lever_graphs_c3791; assert_in_delta(1.0, worksheet.lever_graphs_c3791, 0.002); end
  def test_lever_graphs_d3791; assert_equal("International slow growth", worksheet.lever_graphs_d3791); end
  def test_lever_graphs_k3791; assert_in_delta(0.0, (worksheet.lever_graphs_k3791||0), 0.002); end
  def test_lever_graphs_l3791; assert_in_delta(0.0, (worksheet.lever_graphs_l3791||0), 0.002); end
  def test_lever_graphs_m3791; assert_in_delta(0.0, (worksheet.lever_graphs_m3791||0), 0.002); end
  def test_lever_graphs_n3791; assert_in_delta(0.0, (worksheet.lever_graphs_n3791||0), 0.002); end
  def test_lever_graphs_o3791; assert_in_delta(0.0, (worksheet.lever_graphs_o3791||0), 0.002); end
  def test_lever_graphs_p3791; assert_in_delta(0.0, (worksheet.lever_graphs_p3791||0), 0.002); end
  def test_lever_graphs_q3791; assert_in_delta(0.0, (worksheet.lever_graphs_q3791||0), 0.002); end
  def test_lever_graphs_r3791; assert_in_delta(0.0, (worksheet.lever_graphs_r3791||0), 0.002); end
  def test_lever_graphs_s3791; assert_in_delta(0.0, (worksheet.lever_graphs_s3791||0), 0.002); end
  def test_lever_graphs_b3792; assert_equal("International", worksheet.lever_graphs_b3792); end
  def test_lever_graphs_c3792; assert_in_epsilon(2.0, worksheet.lever_graphs_c3792, 0.002); end
  def test_lever_graphs_d3792; assert_equal("International slow growth", worksheet.lever_graphs_d3792); end
  def test_lever_graphs_k3792; assert_in_delta(0.0, (worksheet.lever_graphs_k3792||0), 0.002); end
  def test_lever_graphs_l3792; assert_in_delta(0.0, (worksheet.lever_graphs_l3792||0), 0.002); end
  def test_lever_graphs_m3792; assert_in_delta(0.0, (worksheet.lever_graphs_m3792||0), 0.002); end
  def test_lever_graphs_n3792; assert_in_delta(0.0, (worksheet.lever_graphs_n3792||0), 0.002); end
  def test_lever_graphs_o3792; assert_in_delta(0.0, (worksheet.lever_graphs_o3792||0), 0.002); end
  def test_lever_graphs_p3792; assert_in_delta(0.0, (worksheet.lever_graphs_p3792||0), 0.002); end
  def test_lever_graphs_q3792; assert_in_delta(0.0, (worksheet.lever_graphs_q3792||0), 0.002); end
  def test_lever_graphs_r3792; assert_in_delta(0.0, (worksheet.lever_graphs_r3792||0), 0.002); end
  def test_lever_graphs_s3792; assert_in_delta(0.0, (worksheet.lever_graphs_s3792||0), 0.002); end
  def test_lever_graphs_b3793; assert_equal("International", worksheet.lever_graphs_b3793); end
  def test_lever_graphs_c3793; assert_in_epsilon(3.0, worksheet.lever_graphs_c3793, 0.002); end
  def test_lever_graphs_d3793; assert_equal("International slow growth", worksheet.lever_graphs_d3793); end
  def test_lever_graphs_k3793; assert_in_delta(0.0, (worksheet.lever_graphs_k3793||0), 0.002); end
  def test_lever_graphs_l3793; assert_in_delta(0.0, (worksheet.lever_graphs_l3793||0), 0.002); end
  def test_lever_graphs_m3793; assert_in_delta(0.0, (worksheet.lever_graphs_m3793||0), 0.002); end
  def test_lever_graphs_n3793; assert_in_delta(0.0, (worksheet.lever_graphs_n3793||0), 0.002); end
  def test_lever_graphs_o3793; assert_in_delta(0.0, (worksheet.lever_graphs_o3793||0), 0.002); end
  def test_lever_graphs_p3793; assert_in_delta(0.0, (worksheet.lever_graphs_p3793||0), 0.002); end
  def test_lever_graphs_q3793; assert_in_delta(0.0, (worksheet.lever_graphs_q3793||0), 0.002); end
  def test_lever_graphs_r3793; assert_in_delta(0.0, (worksheet.lever_graphs_r3793||0), 0.002); end
  def test_lever_graphs_s3793; assert_in_delta(0.0, (worksheet.lever_graphs_s3793||0), 0.002); end
  def test_lever_graphs_b3794; assert_equal("International", worksheet.lever_graphs_b3794); end
  def test_lever_graphs_c3794; assert_in_epsilon(4.0, worksheet.lever_graphs_c3794, 0.002); end
  def test_lever_graphs_d3794; assert_equal("International slow growth", worksheet.lever_graphs_d3794); end
  def test_lever_graphs_k3794; assert_in_delta(0.0, (worksheet.lever_graphs_k3794||0), 0.002); end
  def test_lever_graphs_l3794; assert_in_delta(0.0, (worksheet.lever_graphs_l3794||0), 0.002); end
  def test_lever_graphs_m3794; assert_in_delta(0.0, (worksheet.lever_graphs_m3794||0), 0.002); end
  def test_lever_graphs_n3794; assert_in_delta(0.0, (worksheet.lever_graphs_n3794||0), 0.002); end
  def test_lever_graphs_o3794; assert_in_delta(0.0, (worksheet.lever_graphs_o3794||0), 0.002); end
  def test_lever_graphs_p3794; assert_in_delta(0.0, (worksheet.lever_graphs_p3794||0), 0.002); end
  def test_lever_graphs_q3794; assert_in_delta(0.0, (worksheet.lever_graphs_q3794||0), 0.002); end
  def test_lever_graphs_r3794; assert_in_delta(0.0, (worksheet.lever_graphs_r3794||0), 0.002); end
  def test_lever_graphs_s3794; assert_in_delta(0.0, (worksheet.lever_graphs_s3794||0), 0.002); end
  def test_lever_graphs_b3795; assert_equal("International", worksheet.lever_graphs_b3795); end
  def test_lever_graphs_c3795; assert_in_delta(1.0, worksheet.lever_graphs_c3795, 0.002); end
  def test_lever_graphs_d3795; assert_equal("International fast growth", worksheet.lever_graphs_d3795); end
  def test_lever_graphs_k3795; assert_in_delta(0.0, (worksheet.lever_graphs_k3795||0), 0.002); end
  def test_lever_graphs_l3795; assert_in_delta(0.0, (worksheet.lever_graphs_l3795||0), 0.002); end
  def test_lever_graphs_m3795; assert_in_delta(0.0, (worksheet.lever_graphs_m3795||0), 0.002); end
  def test_lever_graphs_n3795; assert_in_delta(0.0, (worksheet.lever_graphs_n3795||0), 0.002); end
  def test_lever_graphs_o3795; assert_in_delta(0.0, (worksheet.lever_graphs_o3795||0), 0.002); end
  def test_lever_graphs_p3795; assert_in_delta(0.0, (worksheet.lever_graphs_p3795||0), 0.002); end
  def test_lever_graphs_q3795; assert_in_delta(0.0, (worksheet.lever_graphs_q3795||0), 0.002); end
  def test_lever_graphs_r3795; assert_in_delta(0.0, (worksheet.lever_graphs_r3795||0), 0.002); end
  def test_lever_graphs_s3795; assert_in_delta(0.0, (worksheet.lever_graphs_s3795||0), 0.002); end
  def test_lever_graphs_b3796; assert_equal("International", worksheet.lever_graphs_b3796); end
  def test_lever_graphs_c3796; assert_in_epsilon(2.0, worksheet.lever_graphs_c3796, 0.002); end
  def test_lever_graphs_d3796; assert_equal("International fast growth", worksheet.lever_graphs_d3796); end
  def test_lever_graphs_k3796; assert_in_delta(0.0, (worksheet.lever_graphs_k3796||0), 0.002); end
  def test_lever_graphs_l3796; assert_in_delta(0.0, (worksheet.lever_graphs_l3796||0), 0.002); end
  def test_lever_graphs_m3796; assert_in_delta(0.0, (worksheet.lever_graphs_m3796||0), 0.002); end
  def test_lever_graphs_n3796; assert_in_delta(0.0, (worksheet.lever_graphs_n3796||0), 0.002); end
  def test_lever_graphs_o3796; assert_in_delta(0.0, (worksheet.lever_graphs_o3796||0), 0.002); end
  def test_lever_graphs_p3796; assert_in_delta(0.0, (worksheet.lever_graphs_p3796||0), 0.002); end
  def test_lever_graphs_q3796; assert_in_delta(0.0, (worksheet.lever_graphs_q3796||0), 0.002); end
  def test_lever_graphs_r3796; assert_in_delta(0.0, (worksheet.lever_graphs_r3796||0), 0.002); end
  def test_lever_graphs_s3796; assert_in_delta(0.0, (worksheet.lever_graphs_s3796||0), 0.002); end
  def test_lever_graphs_b3797; assert_equal("International", worksheet.lever_graphs_b3797); end
  def test_lever_graphs_c3797; assert_in_epsilon(3.0, worksheet.lever_graphs_c3797, 0.002); end
  def test_lever_graphs_d3797; assert_equal("International fast growth", worksheet.lever_graphs_d3797); end
  def test_lever_graphs_k3797; assert_in_delta(0.0, (worksheet.lever_graphs_k3797||0), 0.002); end
  def test_lever_graphs_l3797; assert_in_delta(0.0, (worksheet.lever_graphs_l3797||0), 0.002); end
  def test_lever_graphs_m3797; assert_in_delta(0.0, (worksheet.lever_graphs_m3797||0), 0.002); end
  def test_lever_graphs_n3797; assert_in_delta(0.0, (worksheet.lever_graphs_n3797||0), 0.002); end
  def test_lever_graphs_o3797; assert_in_delta(0.0, (worksheet.lever_graphs_o3797||0), 0.002); end
  def test_lever_graphs_p3797; assert_in_delta(0.0, (worksheet.lever_graphs_p3797||0), 0.002); end
  def test_lever_graphs_q3797; assert_in_delta(0.0, (worksheet.lever_graphs_q3797||0), 0.002); end
  def test_lever_graphs_r3797; assert_in_delta(0.0, (worksheet.lever_graphs_r3797||0), 0.002); end
  def test_lever_graphs_s3797; assert_in_delta(0.0, (worksheet.lever_graphs_s3797||0), 0.002); end
  def test_lever_graphs_b3798; assert_equal("International", worksheet.lever_graphs_b3798); end
  def test_lever_graphs_c3798; assert_in_epsilon(4.0, worksheet.lever_graphs_c3798, 0.002); end
  def test_lever_graphs_d3798; assert_equal("International fast growth", worksheet.lever_graphs_d3798); end
  def test_lever_graphs_k3798; assert_in_delta(0.0, (worksheet.lever_graphs_k3798||0), 0.002); end
  def test_lever_graphs_l3798; assert_in_delta(0.0, (worksheet.lever_graphs_l3798||0), 0.002); end
  def test_lever_graphs_m3798; assert_in_delta(0.0, (worksheet.lever_graphs_m3798||0), 0.002); end
  def test_lever_graphs_n3798; assert_in_delta(0.0, (worksheet.lever_graphs_n3798||0), 0.002); end
  def test_lever_graphs_o3798; assert_in_delta(0.0, (worksheet.lever_graphs_o3798||0), 0.002); end
  def test_lever_graphs_p3798; assert_in_delta(0.0, (worksheet.lever_graphs_p3798||0), 0.002); end
  def test_lever_graphs_q3798; assert_in_delta(0.0, (worksheet.lever_graphs_q3798||0), 0.002); end
  def test_lever_graphs_r3798; assert_in_delta(0.0, (worksheet.lever_graphs_r3798||0), 0.002); end
  def test_lever_graphs_s3798; assert_in_delta(0.0, (worksheet.lever_graphs_s3798||0), 0.002); end
  def test_lever_graphs_f3582; assert_equal("Type of travel", worksheet.lever_graphs_f3582); end
  def test_lever_graphs_g3582; assert_equal("Level", worksheet.lever_graphs_g3582); end
  def test_lever_graphs_h3582; assert_equal("Notes", worksheet.lever_graphs_h3582); end
  def test_lever_graphs_i3582; assert_equal("…", worksheet.lever_graphs_i3582); end
  def test_lever_graphs_j3582; assert_equal("Type of city", worksheet.lever_graphs_j3582); end
  def test_lever_graphs_k3582; assert_equal("2011", worksheet.lever_graphs_k3582); end
  def test_lever_graphs_l3582; assert_equal("2015", worksheet.lever_graphs_l3582); end
  def test_lever_graphs_m3582; assert_equal("2020", worksheet.lever_graphs_m3582); end
  def test_lever_graphs_n3582; assert_equal("2025", worksheet.lever_graphs_n3582); end
  def test_lever_graphs_o3582; assert_equal("2030", worksheet.lever_graphs_o3582); end
  def test_lever_graphs_p3582; assert_equal("2035", worksheet.lever_graphs_p3582); end
  def test_lever_graphs_q3582; assert_equal("2040", worksheet.lever_graphs_q3582); end
  def test_lever_graphs_r3582; assert_equal("2045", worksheet.lever_graphs_r3582); end
  def test_lever_graphs_s3582; assert_equal("2050", worksheet.lever_graphs_s3582); end
  def test_lever_graphs_f3583; assert_equal("Urban", worksheet.lever_graphs_f3583); end
  def test_lever_graphs_g3583; assert_in_delta(1.0, worksheet.lever_graphs_g3583, 0.002); end
  def test_lever_graphs_j3583; assert_equal("Automobile city", worksheet.lever_graphs_j3583); end
  def test_lever_graphs_k3583; assert_in_epsilon(397068596.5145826, worksheet.lever_graphs_k3583, 0.002); end
  def test_lever_graphs_l3583; assert_in_epsilon(430514328.07781744, worksheet.lever_graphs_l3583, 0.002); end
  def test_lever_graphs_m3583; assert_in_epsilon(469001816.278086, worksheet.lever_graphs_m3583, 0.002); end
  def test_lever_graphs_n3583; assert_in_epsilon(505580995.40494, worksheet.lever_graphs_n3583, 0.002); end
  def test_lever_graphs_o3583; assert_in_epsilon(540021601.0929803, worksheet.lever_graphs_o3583, 0.002); end
  def test_lever_graphs_p3583; assert_in_epsilon(572255774.3213063, worksheet.lever_graphs_p3583, 0.002); end
  def test_lever_graphs_q3583; assert_in_epsilon(602465162.9749422, worksheet.lever_graphs_q3583, 0.002); end
  def test_lever_graphs_r3583; assert_in_epsilon(631646804.947362, worksheet.lever_graphs_r3583, 0.002); end
  def test_lever_graphs_s3583; assert_in_epsilon(659587818.223562, worksheet.lever_graphs_s3583, 0.002); end
  def test_lever_graphs_f3584; assert_equal("Urban", worksheet.lever_graphs_f3584); end
  def test_lever_graphs_g3584; assert_in_epsilon(2.0, worksheet.lever_graphs_g3584, 0.002); end
  def test_lever_graphs_j3584; assert_equal("Automobile city", worksheet.lever_graphs_j3584); end
  def test_lever_graphs_k3584; assert_in_epsilon(397068596.5145826, worksheet.lever_graphs_k3584, 0.002); end
  def test_lever_graphs_l3584; assert_in_epsilon(430514328.07781744, worksheet.lever_graphs_l3584, 0.002); end
  def test_lever_graphs_m3584; assert_in_epsilon(469001816.278086, worksheet.lever_graphs_m3584, 0.002); end
  def test_lever_graphs_n3584; assert_in_epsilon(505580995.40494, worksheet.lever_graphs_n3584, 0.002); end
  def test_lever_graphs_o3584; assert_in_epsilon(540021601.0929803, worksheet.lever_graphs_o3584, 0.002); end
  def test_lever_graphs_p3584; assert_in_epsilon(572255774.3213063, worksheet.lever_graphs_p3584, 0.002); end
  def test_lever_graphs_q3584; assert_in_epsilon(602465162.9749422, worksheet.lever_graphs_q3584, 0.002); end
  def test_lever_graphs_r3584; assert_in_epsilon(631646804.947362, worksheet.lever_graphs_r3584, 0.002); end
  def test_lever_graphs_s3584; assert_in_epsilon(659587818.223562, worksheet.lever_graphs_s3584, 0.002); end
  def test_lever_graphs_f3585; assert_equal("Urban", worksheet.lever_graphs_f3585); end
  def test_lever_graphs_g3585; assert_in_epsilon(3.0, worksheet.lever_graphs_g3585, 0.002); end
  def test_lever_graphs_j3585; assert_equal("Automobile city", worksheet.lever_graphs_j3585); end
  def test_lever_graphs_k3585; assert_in_epsilon(397068596.5145826, worksheet.lever_graphs_k3585, 0.002); end
  def test_lever_graphs_l3585; assert_in_epsilon(430514328.07781744, worksheet.lever_graphs_l3585, 0.002); end
  def test_lever_graphs_m3585; assert_in_epsilon(469001816.278086, worksheet.lever_graphs_m3585, 0.002); end
  def test_lever_graphs_n3585; assert_in_epsilon(505580995.40494, worksheet.lever_graphs_n3585, 0.002); end
  def test_lever_graphs_o3585; assert_in_epsilon(540021601.0929803, worksheet.lever_graphs_o3585, 0.002); end
  def test_lever_graphs_p3585; assert_in_epsilon(572255774.3213063, worksheet.lever_graphs_p3585, 0.002); end
  def test_lever_graphs_q3585; assert_in_epsilon(602465162.9749422, worksheet.lever_graphs_q3585, 0.002); end
  def test_lever_graphs_r3585; assert_in_epsilon(631646804.947362, worksheet.lever_graphs_r3585, 0.002); end
  def test_lever_graphs_s3585; assert_in_epsilon(659587818.223562, worksheet.lever_graphs_s3585, 0.002); end
  def test_lever_graphs_f3586; assert_equal("Urban", worksheet.lever_graphs_f3586); end
  def test_lever_graphs_g3586; assert_in_epsilon(4.0, worksheet.lever_graphs_g3586, 0.002); end
  def test_lever_graphs_j3586; assert_equal("Automobile city", worksheet.lever_graphs_j3586); end
  def test_lever_graphs_k3586; assert_in_epsilon(397068596.5145826, worksheet.lever_graphs_k3586, 0.002); end
  def test_lever_graphs_l3586; assert_in_epsilon(430514328.07781744, worksheet.lever_graphs_l3586, 0.002); end
  def test_lever_graphs_m3586; assert_in_epsilon(469001816.278086, worksheet.lever_graphs_m3586, 0.002); end
  def test_lever_graphs_n3586; assert_in_epsilon(505580995.40494, worksheet.lever_graphs_n3586, 0.002); end
  def test_lever_graphs_o3586; assert_in_epsilon(540021601.0929803, worksheet.lever_graphs_o3586, 0.002); end
  def test_lever_graphs_p3586; assert_in_epsilon(572255774.3213063, worksheet.lever_graphs_p3586, 0.002); end
  def test_lever_graphs_q3586; assert_in_epsilon(602465162.9749422, worksheet.lever_graphs_q3586, 0.002); end
  def test_lever_graphs_r3586; assert_in_epsilon(631646804.947362, worksheet.lever_graphs_r3586, 0.002); end
  def test_lever_graphs_s3586; assert_in_epsilon(659587818.223562, worksheet.lever_graphs_s3586, 0.002); end
  def test_lever_graphs_f3587; assert_equal("Urban", worksheet.lever_graphs_f3587); end
  def test_lever_graphs_g3587; assert_in_delta(1.0, worksheet.lever_graphs_g3587, 0.002); end
  def test_lever_graphs_j3587; assert_equal("Transit city", worksheet.lever_graphs_j3587); end
  def test_lever_graphs_k3587; assert_in_epsilon(1090152342.1017332, worksheet.lever_graphs_k3587, 0.002); end
  def test_lever_graphs_l3587; assert_in_epsilon(1154346954.8177166, worksheet.lever_graphs_l3587, 0.002); end
  def test_lever_graphs_m3587; assert_in_epsilon(1219494767.3751185, worksheet.lever_graphs_m3587, 0.002); end
  def test_lever_graphs_n3587; assert_in_epsilon(1273074438.2027743, worksheet.lever_graphs_n3587, 0.002); end
  def test_lever_graphs_o3587; assert_in_epsilon(1314873108.1856847, worksheet.lever_graphs_o3587, 0.002); end
  def test_lever_graphs_p3587; assert_in_epsilon(1345146131.8436923, worksheet.lever_graphs_p3587, 0.002); end
  def test_lever_graphs_q3587; assert_in_epsilon(1364747867.8388145, worksheet.lever_graphs_q3587, 0.002); end
  def test_lever_graphs_r3587; assert_in_epsilon(1376257912.4629226, worksheet.lever_graphs_r3587, 0.002); end
  def test_lever_graphs_s3587; assert_in_epsilon(1379386972.5505197, worksheet.lever_graphs_s3587, 0.002); end
  def test_lever_graphs_f3588; assert_equal("Urban", worksheet.lever_graphs_f3588); end
  def test_lever_graphs_g3588; assert_in_epsilon(2.0, worksheet.lever_graphs_g3588, 0.002); end
  def test_lever_graphs_j3588; assert_equal("Transit city", worksheet.lever_graphs_j3588); end
  def test_lever_graphs_k3588; assert_in_epsilon(1090152342.1017332, worksheet.lever_graphs_k3588, 0.002); end
  def test_lever_graphs_l3588; assert_in_epsilon(1154346954.8177166, worksheet.lever_graphs_l3588, 0.002); end
  def test_lever_graphs_m3588; assert_in_epsilon(1219494767.3751185, worksheet.lever_graphs_m3588, 0.002); end
  def test_lever_graphs_n3588; assert_in_epsilon(1273074438.2027743, worksheet.lever_graphs_n3588, 0.002); end
  def test_lever_graphs_o3588; assert_in_epsilon(1314873108.1856847, worksheet.lever_graphs_o3588, 0.002); end
  def test_lever_graphs_p3588; assert_in_epsilon(1345146131.8436923, worksheet.lever_graphs_p3588, 0.002); end
  def test_lever_graphs_q3588; assert_in_epsilon(1364747867.8388145, worksheet.lever_graphs_q3588, 0.002); end
  def test_lever_graphs_r3588; assert_in_epsilon(1376257912.4629226, worksheet.lever_graphs_r3588, 0.002); end
  def test_lever_graphs_s3588; assert_in_epsilon(1379386972.5505197, worksheet.lever_graphs_s3588, 0.002); end
  def test_lever_graphs_f3589; assert_equal("Urban", worksheet.lever_graphs_f3589); end
  def test_lever_graphs_g3589; assert_in_epsilon(3.0, worksheet.lever_graphs_g3589, 0.002); end
  def test_lever_graphs_j3589; assert_equal("Transit city", worksheet.lever_graphs_j3589); end
  def test_lever_graphs_k3589; assert_in_epsilon(1090152342.1017332, worksheet.lever_graphs_k3589, 0.002); end
  def test_lever_graphs_l3589; assert_in_epsilon(1154346954.8177166, worksheet.lever_graphs_l3589, 0.002); end
  def test_lever_graphs_m3589; assert_in_epsilon(1219494767.3751185, worksheet.lever_graphs_m3589, 0.002); end
  def test_lever_graphs_n3589; assert_in_epsilon(1273074438.2027743, worksheet.lever_graphs_n3589, 0.002); end
  def test_lever_graphs_o3589; assert_in_epsilon(1314873108.1856847, worksheet.lever_graphs_o3589, 0.002); end
  def test_lever_graphs_p3589; assert_in_epsilon(1345146131.8436923, worksheet.lever_graphs_p3589, 0.002); end
  def test_lever_graphs_q3589; assert_in_epsilon(1364747867.8388145, worksheet.lever_graphs_q3589, 0.002); end
  def test_lever_graphs_r3589; assert_in_epsilon(1376257912.4629226, worksheet.lever_graphs_r3589, 0.002); end
  def test_lever_graphs_s3589; assert_in_epsilon(1379386972.5505197, worksheet.lever_graphs_s3589, 0.002); end
  def test_lever_graphs_f3590; assert_equal("Urban", worksheet.lever_graphs_f3590); end
  def test_lever_graphs_g3590; assert_in_epsilon(4.0, worksheet.lever_graphs_g3590, 0.002); end
  def test_lever_graphs_j3590; assert_equal("Transit city", worksheet.lever_graphs_j3590); end
  def test_lever_graphs_k3590; assert_in_epsilon(1090152342.1017332, worksheet.lever_graphs_k3590, 0.002); end
  def test_lever_graphs_l3590; assert_in_epsilon(1154346954.8177166, worksheet.lever_graphs_l3590, 0.002); end
  def test_lever_graphs_m3590; assert_in_epsilon(1219494767.3751185, worksheet.lever_graphs_m3590, 0.002); end
  def test_lever_graphs_n3590; assert_in_epsilon(1273074438.2027743, worksheet.lever_graphs_n3590, 0.002); end
  def test_lever_graphs_o3590; assert_in_epsilon(1314873108.1856847, worksheet.lever_graphs_o3590, 0.002); end
  def test_lever_graphs_p3590; assert_in_epsilon(1345146131.8436923, worksheet.lever_graphs_p3590, 0.002); end
  def test_lever_graphs_q3590; assert_in_epsilon(1364747867.8388145, worksheet.lever_graphs_q3590, 0.002); end
  def test_lever_graphs_r3590; assert_in_epsilon(1376257912.4629226, worksheet.lever_graphs_r3590, 0.002); end
  def test_lever_graphs_s3590; assert_in_epsilon(1379386972.5505197, worksheet.lever_graphs_s3590, 0.002); end
  def test_lever_graphs_f3591; assert_equal("Urban", worksheet.lever_graphs_f3591); end
  def test_lever_graphs_g3591; assert_in_delta(1.0, worksheet.lever_graphs_g3591, 0.002); end
  def test_lever_graphs_j3591; assert_equal("Booming city", worksheet.lever_graphs_j3591); end
  def test_lever_graphs_k3591; assert_in_epsilon(2144578717.9360871, worksheet.lever_graphs_k3591, 0.002); end
  def test_lever_graphs_l3591; assert_in_epsilon(2372423608.546018, worksheet.lever_graphs_l3591, 0.002); end
  def test_lever_graphs_m3591; assert_in_epsilon(2649518316.736254, worksheet.lever_graphs_m3591, 0.002); end
  def test_lever_graphs_n3591; assert_in_epsilon(2927118282.6908765, worksheet.lever_graphs_n3591, 0.002); end
  def test_lever_graphs_o3591; assert_in_epsilon(3203263466.1415253, worksheet.lever_graphs_o3591, 0.002); end
  def test_lever_graphs_p3591; assert_in_epsilon(3476832835.44841, worksheet.lever_graphs_p3591, 0.002); end
  def test_lever_graphs_q3591; assert_in_epsilon(3748199902.704751, worksheet.lever_graphs_q3591, 0.002); end
  def test_lever_graphs_r3591; assert_in_epsilon(4023019232.2637615, worksheet.lever_graphs_r3591, 0.002); end
  def test_lever_graphs_s3591; assert_in_epsilon(4299636773.565211, worksheet.lever_graphs_s3591, 0.002); end
  def test_lever_graphs_f3592; assert_equal("Urban", worksheet.lever_graphs_f3592); end
  def test_lever_graphs_g3592; assert_in_epsilon(2.0, worksheet.lever_graphs_g3592, 0.002); end
  def test_lever_graphs_j3592; assert_equal("Booming city", worksheet.lever_graphs_j3592); end
  def test_lever_graphs_k3592; assert_in_epsilon(2144578717.9360871, worksheet.lever_graphs_k3592, 0.002); end
  def test_lever_graphs_l3592; assert_in_epsilon(2372423608.546018, worksheet.lever_graphs_l3592, 0.002); end
  def test_lever_graphs_m3592; assert_in_epsilon(2649518316.736254, worksheet.lever_graphs_m3592, 0.002); end
  def test_lever_graphs_n3592; assert_in_epsilon(2927118282.6908765, worksheet.lever_graphs_n3592, 0.002); end
  def test_lever_graphs_o3592; assert_in_epsilon(3203263466.1415253, worksheet.lever_graphs_o3592, 0.002); end
  def test_lever_graphs_p3592; assert_in_epsilon(3476832835.44841, worksheet.lever_graphs_p3592, 0.002); end
  def test_lever_graphs_q3592; assert_in_epsilon(3748199902.704751, worksheet.lever_graphs_q3592, 0.002); end
  def test_lever_graphs_r3592; assert_in_epsilon(4023019232.2637615, worksheet.lever_graphs_r3592, 0.002); end
  def test_lever_graphs_s3592; assert_in_epsilon(4299636773.565211, worksheet.lever_graphs_s3592, 0.002); end
  def test_lever_graphs_f3593; assert_equal("Urban", worksheet.lever_graphs_f3593); end
  def test_lever_graphs_g3593; assert_in_epsilon(3.0, worksheet.lever_graphs_g3593, 0.002); end
  def test_lever_graphs_j3593; assert_equal("Booming city", worksheet.lever_graphs_j3593); end
  def test_lever_graphs_k3593; assert_in_epsilon(2144578717.9360871, worksheet.lever_graphs_k3593, 0.002); end
  def test_lever_graphs_l3593; assert_in_epsilon(2372423608.546018, worksheet.lever_graphs_l3593, 0.002); end
  def test_lever_graphs_m3593; assert_in_epsilon(2649518316.736254, worksheet.lever_graphs_m3593, 0.002); end
  def test_lever_graphs_n3593; assert_in_epsilon(2927118282.6908765, worksheet.lever_graphs_n3593, 0.002); end
  def test_lever_graphs_o3593; assert_in_epsilon(3203263466.1415253, worksheet.lever_graphs_o3593, 0.002); end
  def test_lever_graphs_p3593; assert_in_epsilon(3476832835.44841, worksheet.lever_graphs_p3593, 0.002); end
  def test_lever_graphs_q3593; assert_in_epsilon(3748199902.704751, worksheet.lever_graphs_q3593, 0.002); end
  def test_lever_graphs_r3593; assert_in_epsilon(4023019232.2637615, worksheet.lever_graphs_r3593, 0.002); end
  def test_lever_graphs_s3593; assert_in_epsilon(4299636773.565211, worksheet.lever_graphs_s3593, 0.002); end
  def test_lever_graphs_f3594; assert_equal("Urban", worksheet.lever_graphs_f3594); end
  def test_lever_graphs_g3594; assert_in_epsilon(4.0, worksheet.lever_graphs_g3594, 0.002); end
  def test_lever_graphs_j3594; assert_equal("Booming city", worksheet.lever_graphs_j3594); end
  def test_lever_graphs_k3594; assert_in_epsilon(2144578717.9360871, worksheet.lever_graphs_k3594, 0.002); end
  def test_lever_graphs_l3594; assert_in_epsilon(2372423608.546018, worksheet.lever_graphs_l3594, 0.002); end
  def test_lever_graphs_m3594; assert_in_epsilon(2649518316.736254, worksheet.lever_graphs_m3594, 0.002); end
  def test_lever_graphs_n3594; assert_in_epsilon(2927118282.6908765, worksheet.lever_graphs_n3594, 0.002); end
  def test_lever_graphs_o3594; assert_in_epsilon(3203263466.1415253, worksheet.lever_graphs_o3594, 0.002); end
  def test_lever_graphs_p3594; assert_in_epsilon(3476832835.44841, worksheet.lever_graphs_p3594, 0.002); end
  def test_lever_graphs_q3594; assert_in_epsilon(3748199902.704751, worksheet.lever_graphs_q3594, 0.002); end
  def test_lever_graphs_r3594; assert_in_epsilon(4023019232.2637615, worksheet.lever_graphs_r3594, 0.002); end
  def test_lever_graphs_s3594; assert_in_epsilon(4299636773.565211, worksheet.lever_graphs_s3594, 0.002); end
  def test_lever_graphs_f3595; assert_equal("Rural", worksheet.lever_graphs_f3595); end
  def test_lever_graphs_g3595; assert_in_delta(1.0, worksheet.lever_graphs_g3595, 0.002); end
  def test_lever_graphs_j3595; assert_equal("Developed", worksheet.lever_graphs_j3595); end
  def test_lever_graphs_k3595; assert_in_epsilon(286066178.2474379, worksheet.lever_graphs_k3595, 0.002); end
  def test_lever_graphs_l3595; assert_in_epsilon(280605276.06140256, worksheet.lever_graphs_l3595, 0.002); end
  def test_lever_graphs_m3595; assert_in_epsilon(271157610.94388777, worksheet.lever_graphs_m3595, 0.002); end
  def test_lever_graphs_n3595; assert_in_epsilon(260689096.0874587, worksheet.lever_graphs_n3595, 0.002); end
  def test_lever_graphs_o3595; assert_in_epsilon(249503603.20071656, worksheet.lever_graphs_o3595, 0.002); end
  def test_lever_graphs_p3595; assert_in_epsilon(237908503.4616941, worksheet.lever_graphs_p3595, 0.002); end
  def test_lever_graphs_q3595; assert_in_epsilon(225852437.39922655, worksheet.lever_graphs_q3595, 0.002); end
  def test_lever_graphs_r3595; assert_in_epsilon(212669617.2058244, worksheet.lever_graphs_r3595, 0.002); end
  def test_lever_graphs_s3595; assert_in_epsilon(198567602.22399032, worksheet.lever_graphs_s3595, 0.002); end
  def test_lever_graphs_f3596; assert_equal("Rural", worksheet.lever_graphs_f3596); end
  def test_lever_graphs_g3596; assert_in_epsilon(2.0, worksheet.lever_graphs_g3596, 0.002); end
  def test_lever_graphs_j3596; assert_equal("Developed", worksheet.lever_graphs_j3596); end
  def test_lever_graphs_k3596; assert_in_epsilon(286066178.2474379, worksheet.lever_graphs_k3596, 0.002); end
  def test_lever_graphs_l3596; assert_in_epsilon(280605276.06140256, worksheet.lever_graphs_l3596, 0.002); end
  def test_lever_graphs_m3596; assert_in_epsilon(271157610.94388777, worksheet.lever_graphs_m3596, 0.002); end
  def test_lever_graphs_n3596; assert_in_epsilon(260689096.0874587, worksheet.lever_graphs_n3596, 0.002); end
  def test_lever_graphs_o3596; assert_in_epsilon(249503603.20071656, worksheet.lever_graphs_o3596, 0.002); end
  def test_lever_graphs_p3596; assert_in_epsilon(237908503.4616941, worksheet.lever_graphs_p3596, 0.002); end
  def test_lever_graphs_q3596; assert_in_epsilon(225852437.39922655, worksheet.lever_graphs_q3596, 0.002); end
  def test_lever_graphs_r3596; assert_in_epsilon(212669617.2058244, worksheet.lever_graphs_r3596, 0.002); end
  def test_lever_graphs_s3596; assert_in_epsilon(198567602.22399032, worksheet.lever_graphs_s3596, 0.002); end
  def test_lever_graphs_f3597; assert_equal("Rural", worksheet.lever_graphs_f3597); end
  def test_lever_graphs_g3597; assert_in_epsilon(3.0, worksheet.lever_graphs_g3597, 0.002); end
  def test_lever_graphs_j3597; assert_equal("Developed", worksheet.lever_graphs_j3597); end
  def test_lever_graphs_k3597; assert_in_epsilon(286066178.2474379, worksheet.lever_graphs_k3597, 0.002); end
  def test_lever_graphs_l3597; assert_in_epsilon(280605276.06140256, worksheet.lever_graphs_l3597, 0.002); end
  def test_lever_graphs_m3597; assert_in_epsilon(271157610.94388777, worksheet.lever_graphs_m3597, 0.002); end
  def test_lever_graphs_n3597; assert_in_epsilon(260689096.0874587, worksheet.lever_graphs_n3597, 0.002); end
  def test_lever_graphs_o3597; assert_in_epsilon(249503603.20071656, worksheet.lever_graphs_o3597, 0.002); end
  def test_lever_graphs_p3597; assert_in_epsilon(237908503.4616941, worksheet.lever_graphs_p3597, 0.002); end
  def test_lever_graphs_q3597; assert_in_epsilon(225852437.39922655, worksheet.lever_graphs_q3597, 0.002); end
  def test_lever_graphs_r3597; assert_in_epsilon(212669617.2058244, worksheet.lever_graphs_r3597, 0.002); end
  def test_lever_graphs_s3597; assert_in_epsilon(198567602.22399032, worksheet.lever_graphs_s3597, 0.002); end
  def test_lever_graphs_f3598; assert_equal("Rural", worksheet.lever_graphs_f3598); end
  def test_lever_graphs_g3598; assert_in_epsilon(4.0, worksheet.lever_graphs_g3598, 0.002); end
  def test_lever_graphs_j3598; assert_equal("Developed", worksheet.lever_graphs_j3598); end
  def test_lever_graphs_k3598; assert_in_epsilon(286066178.2474379, worksheet.lever_graphs_k3598, 0.002); end
  def test_lever_graphs_l3598; assert_in_epsilon(280605276.06140256, worksheet.lever_graphs_l3598, 0.002); end
  def test_lever_graphs_m3598; assert_in_epsilon(271157610.94388777, worksheet.lever_graphs_m3598, 0.002); end
  def test_lever_graphs_n3598; assert_in_epsilon(260689096.0874587, worksheet.lever_graphs_n3598, 0.002); end
  def test_lever_graphs_o3598; assert_in_epsilon(249503603.20071656, worksheet.lever_graphs_o3598, 0.002); end
  def test_lever_graphs_p3598; assert_in_epsilon(237908503.4616941, worksheet.lever_graphs_p3598, 0.002); end
  def test_lever_graphs_q3598; assert_in_epsilon(225852437.39922655, worksheet.lever_graphs_q3598, 0.002); end
  def test_lever_graphs_r3598; assert_in_epsilon(212669617.2058244, worksheet.lever_graphs_r3598, 0.002); end
  def test_lever_graphs_s3598; assert_in_epsilon(198567602.22399032, worksheet.lever_graphs_s3598, 0.002); end
  def test_lever_graphs_f3599; assert_equal("Rural", worksheet.lever_graphs_f3599); end
  def test_lever_graphs_g3599; assert_in_delta(1.0, worksheet.lever_graphs_g3599, 0.002); end
  def test_lever_graphs_j3599; assert_equal("Developing", worksheet.lever_graphs_j3599); end
  def test_lever_graphs_k3599; assert_in_epsilon(3048573877.200159, worksheet.lever_graphs_k3599, 0.002); end
  def test_lever_graphs_l3599; assert_in_epsilon(3086891832.4970455, worksheet.lever_graphs_l3599, 0.002); end
  def test_lever_graphs_m3599; assert_in_epsilon(3107576488.666654, worksheet.lever_graphs_m3599, 0.002); end
  def test_lever_graphs_n3599; assert_in_epsilon(3116950187.6139507, worksheet.lever_graphs_n3599, 0.002); end
  def test_lever_graphs_o3599; assert_in_epsilon(3117275221.3790927, worksheet.lever_graphs_o3599, 0.002); end
  def test_lever_graphs_p3599; assert_in_epsilon(3111303754.924898, worksheet.lever_graphs_p3599, 0.002); end
  def test_lever_graphs_q3599; assert_in_epsilon(3097421629.0822654, worksheet.lever_graphs_q3599, 0.002); end
  def test_lever_graphs_r3599; assert_in_epsilon(3064844433.12013, worksheet.lever_graphs_r3599, 0.002); end
  def test_lever_graphs_s3599; assert_in_epsilon(3013765833.436716, worksheet.lever_graphs_s3599, 0.002); end
  def test_lever_graphs_f3600; assert_equal("Rural", worksheet.lever_graphs_f3600); end
  def test_lever_graphs_g3600; assert_in_epsilon(2.0, worksheet.lever_graphs_g3600, 0.002); end
  def test_lever_graphs_j3600; assert_equal("Developing", worksheet.lever_graphs_j3600); end
  def test_lever_graphs_k3600; assert_in_epsilon(3048573877.200159, worksheet.lever_graphs_k3600, 0.002); end
  def test_lever_graphs_l3600; assert_in_epsilon(3086891832.4970455, worksheet.lever_graphs_l3600, 0.002); end
  def test_lever_graphs_m3600; assert_in_epsilon(3107576488.666654, worksheet.lever_graphs_m3600, 0.002); end
  def test_lever_graphs_n3600; assert_in_epsilon(3116950187.6139507, worksheet.lever_graphs_n3600, 0.002); end
  def test_lever_graphs_o3600; assert_in_epsilon(3117275221.3790927, worksheet.lever_graphs_o3600, 0.002); end
  def test_lever_graphs_p3600; assert_in_epsilon(3111303754.924898, worksheet.lever_graphs_p3600, 0.002); end
  def test_lever_graphs_q3600; assert_in_epsilon(3097421629.0822654, worksheet.lever_graphs_q3600, 0.002); end
  def test_lever_graphs_r3600; assert_in_epsilon(3064844433.12013, worksheet.lever_graphs_r3600, 0.002); end
  def test_lever_graphs_s3600; assert_in_epsilon(3013765833.436716, worksheet.lever_graphs_s3600, 0.002); end
  def test_lever_graphs_f3601; assert_equal("Rural", worksheet.lever_graphs_f3601); end
  def test_lever_graphs_g3601; assert_in_epsilon(3.0, worksheet.lever_graphs_g3601, 0.002); end
  def test_lever_graphs_j3601; assert_equal("Developing", worksheet.lever_graphs_j3601); end
  def test_lever_graphs_k3601; assert_in_epsilon(3048573877.200159, worksheet.lever_graphs_k3601, 0.002); end
  def test_lever_graphs_l3601; assert_in_epsilon(3086891832.4970455, worksheet.lever_graphs_l3601, 0.002); end
  def test_lever_graphs_m3601; assert_in_epsilon(3107576488.666654, worksheet.lever_graphs_m3601, 0.002); end
  def test_lever_graphs_n3601; assert_in_epsilon(3116950187.6139507, worksheet.lever_graphs_n3601, 0.002); end
  def test_lever_graphs_o3601; assert_in_epsilon(3117275221.3790927, worksheet.lever_graphs_o3601, 0.002); end
  def test_lever_graphs_p3601; assert_in_epsilon(3111303754.924898, worksheet.lever_graphs_p3601, 0.002); end
  def test_lever_graphs_q3601; assert_in_epsilon(3097421629.0822654, worksheet.lever_graphs_q3601, 0.002); end
  def test_lever_graphs_r3601; assert_in_epsilon(3064844433.12013, worksheet.lever_graphs_r3601, 0.002); end
  def test_lever_graphs_s3601; assert_in_epsilon(3013765833.436716, worksheet.lever_graphs_s3601, 0.002); end
  def test_lever_graphs_f3602; assert_equal("Rural", worksheet.lever_graphs_f3602); end
  def test_lever_graphs_g3602; assert_in_epsilon(4.0, worksheet.lever_graphs_g3602, 0.002); end
  def test_lever_graphs_j3602; assert_equal("Developing", worksheet.lever_graphs_j3602); end
  def test_lever_graphs_k3602; assert_in_epsilon(3048573877.200159, worksheet.lever_graphs_k3602, 0.002); end
  def test_lever_graphs_l3602; assert_in_epsilon(3086891832.4970455, worksheet.lever_graphs_l3602, 0.002); end
  def test_lever_graphs_m3602; assert_in_epsilon(3107576488.666654, worksheet.lever_graphs_m3602, 0.002); end
  def test_lever_graphs_n3602; assert_in_epsilon(3116950187.6139507, worksheet.lever_graphs_n3602, 0.002); end
  def test_lever_graphs_o3602; assert_in_epsilon(3117275221.3790927, worksheet.lever_graphs_o3602, 0.002); end
  def test_lever_graphs_p3602; assert_in_epsilon(3111303754.924898, worksheet.lever_graphs_p3602, 0.002); end
  def test_lever_graphs_q3602; assert_in_epsilon(3097421629.0822654, worksheet.lever_graphs_q3602, 0.002); end
  def test_lever_graphs_r3602; assert_in_epsilon(3064844433.12013, worksheet.lever_graphs_r3602, 0.002); end
  def test_lever_graphs_s3602; assert_in_epsilon(3013765833.436716, worksheet.lever_graphs_s3602, 0.002); end
  def test_lever_graphs_f3603; assert_equal("International", worksheet.lever_graphs_f3603); end
  def test_lever_graphs_g3603; assert_in_delta(1.0, worksheet.lever_graphs_g3603, 0.002); end
  def test_lever_graphs_j3603; assert_equal("International slow growth", worksheet.lever_graphs_j3603); end
  def test_lever_graphs_k3603; assert_in_epsilon(1244925862.2743177, worksheet.lever_graphs_k3603, 0.002); end
  def test_lever_graphs_l3603; assert_in_epsilon(1287730160.870671, worksheet.lever_graphs_l3603, 0.002); end
  def test_lever_graphs_m3603; assert_in_epsilon(1328678667.470224, worksheet.lever_graphs_m3603, 0.002); end
  def test_lever_graphs_n3603; assert_in_epsilon(1362521629.8376985, worksheet.lever_graphs_n3603, 0.002); end
  def test_lever_graphs_o3603; assert_in_epsilon(1389560983.0529628, worksheet.lever_graphs_o3603, 0.002); end
  def test_lever_graphs_p3603; assert_in_epsilon(1410412952.938605, worksheet.lever_graphs_p3603, 0.002); end
  def test_lever_graphs_q3603; assert_in_epsilon(1425287340.22343, worksheet.lever_graphs_q3603, 0.002); end
  def test_lever_graphs_r3603; assert_in_epsilon(1434095228.3867798, worksheet.lever_graphs_r3603, 0.002); end
  def test_lever_graphs_s3603; assert_in_epsilon(1436849666.8815818, worksheet.lever_graphs_s3603, 0.002); end
  def test_lever_graphs_f3604; assert_equal("International", worksheet.lever_graphs_f3604); end
  def test_lever_graphs_g3604; assert_in_epsilon(2.0, worksheet.lever_graphs_g3604, 0.002); end
  def test_lever_graphs_j3604; assert_equal("International slow growth", worksheet.lever_graphs_j3604); end
  def test_lever_graphs_k3604; assert_in_epsilon(1244925862.2743177, worksheet.lever_graphs_k3604, 0.002); end
  def test_lever_graphs_l3604; assert_in_epsilon(1287730160.870671, worksheet.lever_graphs_l3604, 0.002); end
  def test_lever_graphs_m3604; assert_in_epsilon(1328678667.470224, worksheet.lever_graphs_m3604, 0.002); end
  def test_lever_graphs_n3604; assert_in_epsilon(1362521629.8376985, worksheet.lever_graphs_n3604, 0.002); end
  def test_lever_graphs_o3604; assert_in_epsilon(1389560983.0529628, worksheet.lever_graphs_o3604, 0.002); end
  def test_lever_graphs_p3604; assert_in_epsilon(1410412952.938605, worksheet.lever_graphs_p3604, 0.002); end
  def test_lever_graphs_q3604; assert_in_epsilon(1425287340.22343, worksheet.lever_graphs_q3604, 0.002); end
  def test_lever_graphs_r3604; assert_in_epsilon(1434095228.3867798, worksheet.lever_graphs_r3604, 0.002); end
  def test_lever_graphs_s3604; assert_in_epsilon(1436849666.8815818, worksheet.lever_graphs_s3604, 0.002); end
  def test_lever_graphs_f3605; assert_equal("International", worksheet.lever_graphs_f3605); end
  def test_lever_graphs_g3605; assert_in_epsilon(3.0, worksheet.lever_graphs_g3605, 0.002); end
  def test_lever_graphs_j3605; assert_equal("International slow growth", worksheet.lever_graphs_j3605); end
  def test_lever_graphs_k3605; assert_in_epsilon(1244925862.2743177, worksheet.lever_graphs_k3605, 0.002); end
  def test_lever_graphs_l3605; assert_in_epsilon(1287730160.870671, worksheet.lever_graphs_l3605, 0.002); end
  def test_lever_graphs_m3605; assert_in_epsilon(1328678667.470224, worksheet.lever_graphs_m3605, 0.002); end
  def test_lever_graphs_n3605; assert_in_epsilon(1362521629.8376985, worksheet.lever_graphs_n3605, 0.002); end
  def test_lever_graphs_o3605; assert_in_epsilon(1389560983.0529628, worksheet.lever_graphs_o3605, 0.002); end
  def test_lever_graphs_p3605; assert_in_epsilon(1410412952.938605, worksheet.lever_graphs_p3605, 0.002); end
  def test_lever_graphs_q3605; assert_in_epsilon(1425287340.22343, worksheet.lever_graphs_q3605, 0.002); end
  def test_lever_graphs_r3605; assert_in_epsilon(1434095228.3867798, worksheet.lever_graphs_r3605, 0.002); end
  def test_lever_graphs_s3605; assert_in_epsilon(1436849666.8815818, worksheet.lever_graphs_s3605, 0.002); end
  def test_lever_graphs_f3606; assert_equal("International", worksheet.lever_graphs_f3606); end
  def test_lever_graphs_g3606; assert_in_epsilon(4.0, worksheet.lever_graphs_g3606, 0.002); end
  def test_lever_graphs_j3606; assert_equal("International slow growth", worksheet.lever_graphs_j3606); end
  def test_lever_graphs_k3606; assert_in_epsilon(1244925862.2743177, worksheet.lever_graphs_k3606, 0.002); end
  def test_lever_graphs_l3606; assert_in_epsilon(1287730160.870671, worksheet.lever_graphs_l3606, 0.002); end
  def test_lever_graphs_m3606; assert_in_epsilon(1328678667.470224, worksheet.lever_graphs_m3606, 0.002); end
  def test_lever_graphs_n3606; assert_in_epsilon(1362521629.8376985, worksheet.lever_graphs_n3606, 0.002); end
  def test_lever_graphs_o3606; assert_in_epsilon(1389560983.0529628, worksheet.lever_graphs_o3606, 0.002); end
  def test_lever_graphs_p3606; assert_in_epsilon(1410412952.938605, worksheet.lever_graphs_p3606, 0.002); end
  def test_lever_graphs_q3606; assert_in_epsilon(1425287340.22343, worksheet.lever_graphs_q3606, 0.002); end
  def test_lever_graphs_r3606; assert_in_epsilon(1434095228.3867798, worksheet.lever_graphs_r3606, 0.002); end
  def test_lever_graphs_s3606; assert_in_epsilon(1436849666.8815818, worksheet.lever_graphs_s3606, 0.002); end
  def test_lever_graphs_f3607; assert_equal("International", worksheet.lever_graphs_f3607); end
  def test_lever_graphs_g3607; assert_in_delta(1.0, worksheet.lever_graphs_g3607, 0.002); end
  def test_lever_graphs_j3607; assert_equal("International fast growth", worksheet.lever_graphs_j3607); end
  def test_lever_graphs_k3607; assert_in_epsilon(5721513849.725682, worksheet.lever_graphs_k3607, 0.002); end
  def test_lever_graphs_l3607; assert_in_epsilon(6037051839.12933, worksheet.lever_graphs_l3607, 0.002); end
  def test_lever_graphs_m3607; assert_in_epsilon(6388070332.529777, worksheet.lever_graphs_m3607, 0.002); end
  def test_lever_graphs_n3607; assert_in_epsilon(6720891370.162302, worksheet.lever_graphs_n3607, 0.002); end
  def test_lever_graphs_o3607; assert_in_epsilon(7035376016.947037, worksheet.lever_graphs_o3607, 0.002); end
  def test_lever_graphs_p3607; assert_in_epsilon(7333034047.061396, worksheet.lever_graphs_p3607, 0.002); end
  def test_lever_graphs_q3607; assert_in_epsilon(7613399659.77657, worksheet.lever_graphs_q3607, 0.002); end
  def test_lever_graphs_r3607; assert_in_epsilon(7874342771.61322, worksheet.lever_graphs_r3607, 0.002); end
  def test_lever_graphs_s3607; assert_in_epsilon(8114095333.118419, worksheet.lever_graphs_s3607, 0.002); end
  def test_lever_graphs_f3608; assert_equal("International", worksheet.lever_graphs_f3608); end
  def test_lever_graphs_g3608; assert_in_epsilon(2.0, worksheet.lever_graphs_g3608, 0.002); end
  def test_lever_graphs_j3608; assert_equal("International fast growth", worksheet.lever_graphs_j3608); end
  def test_lever_graphs_k3608; assert_in_epsilon(5721513849.725682, worksheet.lever_graphs_k3608, 0.002); end
  def test_lever_graphs_l3608; assert_in_epsilon(6037051839.12933, worksheet.lever_graphs_l3608, 0.002); end
  def test_lever_graphs_m3608; assert_in_epsilon(6388070332.529777, worksheet.lever_graphs_m3608, 0.002); end
  def test_lever_graphs_n3608; assert_in_epsilon(6720891370.162302, worksheet.lever_graphs_n3608, 0.002); end
  def test_lever_graphs_o3608; assert_in_epsilon(7035376016.947037, worksheet.lever_graphs_o3608, 0.002); end
  def test_lever_graphs_p3608; assert_in_epsilon(7333034047.061396, worksheet.lever_graphs_p3608, 0.002); end
  def test_lever_graphs_q3608; assert_in_epsilon(7613399659.77657, worksheet.lever_graphs_q3608, 0.002); end
  def test_lever_graphs_r3608; assert_in_epsilon(7874342771.61322, worksheet.lever_graphs_r3608, 0.002); end
  def test_lever_graphs_s3608; assert_in_epsilon(8114095333.118419, worksheet.lever_graphs_s3608, 0.002); end
  def test_lever_graphs_f3609; assert_equal("International", worksheet.lever_graphs_f3609); end
  def test_lever_graphs_g3609; assert_in_epsilon(3.0, worksheet.lever_graphs_g3609, 0.002); end
  def test_lever_graphs_j3609; assert_equal("International fast growth", worksheet.lever_graphs_j3609); end
  def test_lever_graphs_k3609; assert_in_epsilon(5721513849.725682, worksheet.lever_graphs_k3609, 0.002); end
  def test_lever_graphs_l3609; assert_in_epsilon(6037051839.12933, worksheet.lever_graphs_l3609, 0.002); end
  def test_lever_graphs_m3609; assert_in_epsilon(6388070332.529777, worksheet.lever_graphs_m3609, 0.002); end
  def test_lever_graphs_n3609; assert_in_epsilon(6720891370.162302, worksheet.lever_graphs_n3609, 0.002); end
  def test_lever_graphs_o3609; assert_in_epsilon(7035376016.947037, worksheet.lever_graphs_o3609, 0.002); end
  def test_lever_graphs_p3609; assert_in_epsilon(7333034047.061396, worksheet.lever_graphs_p3609, 0.002); end
  def test_lever_graphs_q3609; assert_in_epsilon(7613399659.77657, worksheet.lever_graphs_q3609, 0.002); end
  def test_lever_graphs_r3609; assert_in_epsilon(7874342771.61322, worksheet.lever_graphs_r3609, 0.002); end
  def test_lever_graphs_s3609; assert_in_epsilon(8114095333.118419, worksheet.lever_graphs_s3609, 0.002); end
  def test_lever_graphs_f3610; assert_equal("International", worksheet.lever_graphs_f3610); end
  def test_lever_graphs_g3610; assert_in_epsilon(4.0, worksheet.lever_graphs_g3610, 0.002); end
  def test_lever_graphs_j3610; assert_equal("International fast growth", worksheet.lever_graphs_j3610); end
  def test_lever_graphs_k3610; assert_in_epsilon(5721513849.725682, worksheet.lever_graphs_k3610, 0.002); end
  def test_lever_graphs_l3610; assert_in_epsilon(6037051839.12933, worksheet.lever_graphs_l3610, 0.002); end
  def test_lever_graphs_m3610; assert_in_epsilon(6388070332.529777, worksheet.lever_graphs_m3610, 0.002); end
  def test_lever_graphs_n3610; assert_in_epsilon(6720891370.162302, worksheet.lever_graphs_n3610, 0.002); end
  def test_lever_graphs_o3610; assert_in_epsilon(7035376016.947037, worksheet.lever_graphs_o3610, 0.002); end
  def test_lever_graphs_p3610; assert_in_epsilon(7333034047.061396, worksheet.lever_graphs_p3610, 0.002); end
  def test_lever_graphs_q3610; assert_in_epsilon(7613399659.77657, worksheet.lever_graphs_q3610, 0.002); end
  def test_lever_graphs_r3610; assert_in_epsilon(7874342771.61322, worksheet.lever_graphs_r3610, 0.002); end
  def test_lever_graphs_s3610; assert_in_epsilon(8114095333.118419, worksheet.lever_graphs_s3610, 0.002); end
  def test_lever_graphs_a4088; assert_equal("Technology code", worksheet.lever_graphs_a4088); end
  def test_lever_graphs_b4088; assert_equal("Level", worksheet.lever_graphs_b4088); end
  def test_lever_graphs_c4088; assert_equal("1975", worksheet.lever_graphs_c4088); end
  def test_lever_graphs_d4088; assert_equal("1980", worksheet.lever_graphs_d4088); end
  def test_lever_graphs_e4088; assert_equal("1985", worksheet.lever_graphs_e4088); end
  def test_lever_graphs_f4088; assert_equal("1990", worksheet.lever_graphs_f4088); end
  def test_lever_graphs_g4088; assert_equal("1995", worksheet.lever_graphs_g4088); end
  def test_lever_graphs_h4088; assert_equal("2000", worksheet.lever_graphs_h4088); end
  def test_lever_graphs_i4088; assert_equal("2005", worksheet.lever_graphs_i4088); end
  def test_lever_graphs_j4088; assert_equal("2010", worksheet.lever_graphs_j4088); end
  def test_lever_graphs_k4088; assert_equal("2011", worksheet.lever_graphs_k4088); end
  def test_lever_graphs_l4088; assert_equal("2015", worksheet.lever_graphs_l4088); end
  def test_lever_graphs_m4088; assert_equal("2020", worksheet.lever_graphs_m4088); end
  def test_lever_graphs_n4088; assert_equal("2025", worksheet.lever_graphs_n4088); end
  def test_lever_graphs_o4088; assert_equal("2030", worksheet.lever_graphs_o4088); end
  def test_lever_graphs_p4088; assert_equal("2035", worksheet.lever_graphs_p4088); end
  def test_lever_graphs_q4088; assert_equal("2040", worksheet.lever_graphs_q4088); end
  def test_lever_graphs_r4088; assert_equal("2045", worksheet.lever_graphs_r4088); end
  def test_lever_graphs_s4088; assert_equal("2050", worksheet.lever_graphs_s4088); end
  def test_lever_graphs_t4088; assert_equal("Column1", worksheet.lever_graphs_t4088); end
  def test_lever_graphs_u4088; assert_equal("Column2", worksheet.lever_graphs_u4088); end
  def test_lever_graphs_a4089; assert_equal("CCS.solid.ultra.elec", worksheet.lever_graphs_a4089); end
  def test_lever_graphs_b4089; assert_in_delta(1.0, worksheet.lever_graphs_b4089, 0.002); end
  def test_lever_graphs_k4089; assert_in_delta(0.0, (worksheet.lever_graphs_k4089||0), 0.002); end
  def test_lever_graphs_l4089; assert_in_epsilon(9.0, worksheet.lever_graphs_l4089, 0.002); end
  def test_lever_graphs_m4089; assert_in_epsilon(16.0, worksheet.lever_graphs_m4089, 0.002); end
  def test_lever_graphs_n4089; assert_in_epsilon(7.2, worksheet.lever_graphs_n4089, 0.002); end
  def test_lever_graphs_o4089; assert_in_epsilon(7.2, worksheet.lever_graphs_o4089, 0.002); end
  def test_lever_graphs_p4089; assert_in_epsilon(6.8, worksheet.lever_graphs_p4089, 0.002); end
  def test_lever_graphs_q4089; assert_in_epsilon(6.4, worksheet.lever_graphs_q4089, 0.002); end
  def test_lever_graphs_r4089; assert_in_epsilon(5.6, worksheet.lever_graphs_r4089, 0.002); end
  def test_lever_graphs_s4089; assert_in_epsilon(4.8, worksheet.lever_graphs_s4089, 0.002); end
  def test_lever_graphs_t4089; assert_equal("Solid fueled", worksheet.lever_graphs_t4089); end
  def test_lever_graphs_u4089; assert_equal("Solid-fuel ultrasupercritical power plant", worksheet.lever_graphs_u4089); end
  def test_lever_graphs_a4090; assert_equal("CCS.solid.ultra.elec", worksheet.lever_graphs_a4090); end
  def test_lever_graphs_b4090; assert_in_epsilon(2.0, worksheet.lever_graphs_b4090, 0.002); end
  def test_lever_graphs_k4090; assert_in_delta(0.0, (worksheet.lever_graphs_k4090||0), 0.002); end
  def test_lever_graphs_l4090; assert_in_epsilon(9.0, worksheet.lever_graphs_l4090, 0.002); end
  def test_lever_graphs_m4090; assert_in_epsilon(18.0, worksheet.lever_graphs_m4090, 0.002); end
  def test_lever_graphs_n4090; assert_in_epsilon(16.2, worksheet.lever_graphs_n4090, 0.002); end
  def test_lever_graphs_o4090; assert_in_epsilon(51.300000000000004, worksheet.lever_graphs_o4090, 0.002); end
  def test_lever_graphs_p4090; assert_in_epsilon(67.83, worksheet.lever_graphs_p4090, 0.002); end
  def test_lever_graphs_q4090; assert_in_epsilon(89.36000000000001, worksheet.lever_graphs_q4090, 0.002); end
  def test_lever_graphs_r4090; assert_in_epsilon(109.48, worksheet.lever_graphs_r4090, 0.002); end
  def test_lever_graphs_s4090; assert_in_epsilon(147.0, worksheet.lever_graphs_s4090, 0.002); end
  def test_lever_graphs_t4090; assert_equal("Solid fueled", worksheet.lever_graphs_t4090); end
  def test_lever_graphs_u4090; assert_equal("Solid-fuel ultrasupercritical power plant", worksheet.lever_graphs_u4090); end
  def test_lever_graphs_a4091; assert_equal("CCS.solid.ultra.elec", worksheet.lever_graphs_a4091); end
  def test_lever_graphs_b4091; assert_in_epsilon(3.0, worksheet.lever_graphs_b4091, 0.002); end
  def test_lever_graphs_k4091; assert_in_delta(0.0, (worksheet.lever_graphs_k4091||0), 0.002); end
  def test_lever_graphs_l4091; assert_in_epsilon(9.0, worksheet.lever_graphs_l4091, 0.002); end
  def test_lever_graphs_m4091; assert_in_epsilon(31.3, worksheet.lever_graphs_m4091, 0.002); end
  def test_lever_graphs_n4091; assert_in_epsilon(49.005, worksheet.lever_graphs_n4091, 0.002); end
  def test_lever_graphs_o4091; assert_in_epsilon(171.0, worksheet.lever_graphs_o4091, 0.002); end
  def test_lever_graphs_p4091; assert_in_epsilon(227.71499999999997, worksheet.lever_graphs_p4091, 0.002); end
  def test_lever_graphs_q4091; assert_in_epsilon(302.2, worksheet.lever_graphs_q4091, 0.002); end
  def test_lever_graphs_r4091; assert_in_epsilon(372.85499999999996, worksheet.lever_graphs_r4091, 0.002); end
  def test_lever_graphs_s4091; assert_in_epsilon(446.09999999999997, worksheet.lever_graphs_s4091, 0.002); end
  def test_lever_graphs_t4091; assert_equal("Solid fueled", worksheet.lever_graphs_t4091); end
  def test_lever_graphs_u4091; assert_equal("Solid-fuel ultrasupercritical power plant", worksheet.lever_graphs_u4091); end
  def test_lever_graphs_a4092; assert_equal("CCS.solid.ultra.elec", worksheet.lever_graphs_a4092); end
  def test_lever_graphs_b4092; assert_in_epsilon(4.0, worksheet.lever_graphs_b4092, 0.002); end
  def test_lever_graphs_k4092; assert_in_delta(0.0, (worksheet.lever_graphs_k4092||0), 0.002); end
  def test_lever_graphs_l4092; assert_in_epsilon(9.0, worksheet.lever_graphs_l4092, 0.002); end
  def test_lever_graphs_m4092; assert_in_epsilon(380.0, worksheet.lever_graphs_m4092, 0.002); end
  def test_lever_graphs_n4092; assert_in_epsilon(342.0, worksheet.lever_graphs_n4092, 0.002); end
  def test_lever_graphs_o4092; assert_in_epsilon(570.015, worksheet.lever_graphs_o4092, 0.002); end
  def test_lever_graphs_p4092; assert_in_epsilon(753.695, worksheet.lever_graphs_p4092, 0.002); end
  def test_lever_graphs_q4092; assert_in_epsilon(993.1200000000001, worksheet.lever_graphs_q4092, 0.002); end
  def test_lever_graphs_r4092; assert_in_epsilon(1050.0, worksheet.lever_graphs_r4092, 0.002); end
  def test_lever_graphs_s4092; assert_in_epsilon(1110.0, worksheet.lever_graphs_s4092, 0.002); end
  def test_lever_graphs_t4092; assert_equal("Solid fueled", worksheet.lever_graphs_t4092); end
  def test_lever_graphs_u4092; assert_equal("Solid-fuel ultrasupercritical power plant", worksheet.lever_graphs_u4092); end
  def test_lever_graphs_a4093; assert_equal("CCS.solid.super.elec", worksheet.lever_graphs_a4093); end
  def test_lever_graphs_b4093; assert_in_delta(1.0, worksheet.lever_graphs_b4093, 0.002); end
  def test_lever_graphs_k4093; assert_in_delta(0.0, (worksheet.lever_graphs_k4093||0), 0.002); end
  def test_lever_graphs_l4093; assert_in_delta(0.0, (worksheet.lever_graphs_l4093||0), 0.002); end
  def test_lever_graphs_m4093; assert_in_delta(0.0, (worksheet.lever_graphs_m4093||0), 0.002); end
  def test_lever_graphs_n4093; assert_in_epsilon(7.2, worksheet.lever_graphs_n4093, 0.002); end
  def test_lever_graphs_o4093; assert_in_epsilon(7.2, worksheet.lever_graphs_o4093, 0.002); end
  def test_lever_graphs_p4093; assert_in_epsilon(6.8, worksheet.lever_graphs_p4093, 0.002); end
  def test_lever_graphs_q4093; assert_in_epsilon(6.4, worksheet.lever_graphs_q4093, 0.002); end
  def test_lever_graphs_r4093; assert_in_epsilon(5.6, worksheet.lever_graphs_r4093, 0.002); end
  def test_lever_graphs_s4093; assert_in_epsilon(4.8, worksheet.lever_graphs_s4093, 0.002); end
  def test_lever_graphs_t4093; assert_equal("Solid fueled", worksheet.lever_graphs_t4093); end
  def test_lever_graphs_u4093; assert_equal("Solid-fuel supercritical power plant", worksheet.lever_graphs_u4093); end
  def test_lever_graphs_a4094; assert_equal("CCS.solid.super.elec", worksheet.lever_graphs_a4094); end
  def test_lever_graphs_b4094; assert_in_epsilon(2.0, worksheet.lever_graphs_b4094, 0.002); end
  def test_lever_graphs_k4094; assert_in_delta(0.0, (worksheet.lever_graphs_k4094||0), 0.002); end
  def test_lever_graphs_l4094; assert_in_delta(0.0, (worksheet.lever_graphs_l4094||0), 0.002); end
  def test_lever_graphs_m4094; assert_in_delta(0.0, (worksheet.lever_graphs_m4094||0), 0.002); end
  def test_lever_graphs_n4094; assert_in_epsilon(16.2, worksheet.lever_graphs_n4094, 0.002); end
  def test_lever_graphs_o4094; assert_in_epsilon(51.300000000000004, worksheet.lever_graphs_o4094, 0.002); end
  def test_lever_graphs_p4094; assert_in_epsilon(67.83, worksheet.lever_graphs_p4094, 0.002); end
  def test_lever_graphs_q4094; assert_in_epsilon(89.36000000000001, worksheet.lever_graphs_q4094, 0.002); end
  def test_lever_graphs_r4094; assert_in_epsilon(109.48, worksheet.lever_graphs_r4094, 0.002); end
  def test_lever_graphs_s4094; assert_in_epsilon(147.0, worksheet.lever_graphs_s4094, 0.002); end
  def test_lever_graphs_t4094; assert_equal("Solid fueled", worksheet.lever_graphs_t4094); end
  def test_lever_graphs_u4094; assert_equal("Solid-fuel supercritical power plant", worksheet.lever_graphs_u4094); end
  def test_lever_graphs_a4095; assert_equal("CCS.solid.super.elec", worksheet.lever_graphs_a4095); end
  def test_lever_graphs_b4095; assert_in_epsilon(3.0, worksheet.lever_graphs_b4095, 0.002); end
  def test_lever_graphs_k4095; assert_in_delta(0.0, (worksheet.lever_graphs_k4095||0), 0.002); end
  def test_lever_graphs_l4095; assert_in_delta(0.0, (worksheet.lever_graphs_l4095||0), 0.002); end
  def test_lever_graphs_m4095; assert_in_delta(0.0, (worksheet.lever_graphs_m4095||0), 0.002); end
  def test_lever_graphs_n4095; assert_in_epsilon(49.005, worksheet.lever_graphs_n4095, 0.002); end
  def test_lever_graphs_o4095; assert_in_epsilon(171.0, worksheet.lever_graphs_o4095, 0.002); end
  def test_lever_graphs_p4095; assert_in_epsilon(227.71499999999997, worksheet.lever_graphs_p4095, 0.002); end
  def test_lever_graphs_q4095; assert_in_epsilon(302.2, worksheet.lever_graphs_q4095, 0.002); end
  def test_lever_graphs_r4095; assert_in_epsilon(372.85499999999996, worksheet.lever_graphs_r4095, 0.002); end
  def test_lever_graphs_s4095; assert_in_epsilon(446.09999999999997, worksheet.lever_graphs_s4095, 0.002); end
  def test_lever_graphs_t4095; assert_equal("Solid fueled", worksheet.lever_graphs_t4095); end
  def test_lever_graphs_u4095; assert_equal("Solid-fuel supercritical power plant", worksheet.lever_graphs_u4095); end
  def test_lever_graphs_a4096; assert_equal("CCS.solid.super.elec", worksheet.lever_graphs_a4096); end
  def test_lever_graphs_b4096; assert_in_epsilon(4.0, worksheet.lever_graphs_b4096, 0.002); end
  def test_lever_graphs_k4096; assert_in_delta(0.0, (worksheet.lever_graphs_k4096||0), 0.002); end
  def test_lever_graphs_l4096; assert_in_delta(0.0, (worksheet.lever_graphs_l4096||0), 0.002); end
  def test_lever_graphs_m4096; assert_in_delta(0.0, (worksheet.lever_graphs_m4096||0), 0.002); end
  def test_lever_graphs_n4096; assert_in_epsilon(342.0, worksheet.lever_graphs_n4096, 0.002); end
  def test_lever_graphs_o4096; assert_in_epsilon(570.015, worksheet.lever_graphs_o4096, 0.002); end
  def test_lever_graphs_p4096; assert_in_epsilon(753.695, worksheet.lever_graphs_p4096, 0.002); end
  def test_lever_graphs_q4096; assert_in_epsilon(993.1200000000001, worksheet.lever_graphs_q4096, 0.002); end
  def test_lever_graphs_r4096; assert_in_epsilon(1050.0, worksheet.lever_graphs_r4096, 0.002); end
  def test_lever_graphs_s4096; assert_in_epsilon(1110.0, worksheet.lever_graphs_s4096, 0.002); end
  def test_lever_graphs_t4096; assert_equal("Solid fueled", worksheet.lever_graphs_t4096); end
  def test_lever_graphs_u4096; assert_equal("Solid-fuel supercritical power plant", worksheet.lever_graphs_u4096); end
  def test_lever_graphs_a4097; assert_equal("CCS.solid.sub.elec", worksheet.lever_graphs_a4097); end
  def test_lever_graphs_b4097; assert_in_delta(1.0, worksheet.lever_graphs_b4097, 0.002); end
  def test_lever_graphs_k4097; assert_in_delta(0.0, (worksheet.lever_graphs_k4097||0), 0.002); end
  def test_lever_graphs_l4097; assert_in_delta(0.0, (worksheet.lever_graphs_l4097||0), 0.002); end
  def test_lever_graphs_m4097; assert_in_delta(0.0, (worksheet.lever_graphs_m4097||0), 0.002); end
  def test_lever_graphs_n4097; assert_in_delta(0.0, (worksheet.lever_graphs_n4097||0), 0.002); end
  def test_lever_graphs_o4097; assert_in_delta(0.0, (worksheet.lever_graphs_o4097||0), 0.002); end
  def test_lever_graphs_p4097; assert_in_delta(0.0, (worksheet.lever_graphs_p4097||0), 0.002); end
  def test_lever_graphs_q4097; assert_in_delta(0.0, (worksheet.lever_graphs_q4097||0), 0.002); end
  def test_lever_graphs_r4097; assert_in_delta(0.0, (worksheet.lever_graphs_r4097||0), 0.002); end
  def test_lever_graphs_s4097; assert_in_delta(0.0, (worksheet.lever_graphs_s4097||0), 0.002); end
  def test_lever_graphs_t4097; assert_equal("Solid fueled", worksheet.lever_graphs_t4097); end
  def test_lever_graphs_u4097; assert_equal("Solid-fuel subcritical power plant", worksheet.lever_graphs_u4097); end
  def test_lever_graphs_a4098; assert_equal("CCS.solid.sub.elec", worksheet.lever_graphs_a4098); end
  def test_lever_graphs_b4098; assert_in_epsilon(2.0, worksheet.lever_graphs_b4098, 0.002); end
  def test_lever_graphs_k4098; assert_in_delta(0.0, (worksheet.lever_graphs_k4098||0), 0.002); end
  def test_lever_graphs_l4098; assert_in_delta(0.0, (worksheet.lever_graphs_l4098||0), 0.002); end
  def test_lever_graphs_m4098; assert_in_delta(0.0, (worksheet.lever_graphs_m4098||0), 0.002); end
  def test_lever_graphs_n4098; assert_in_delta(0.0, (worksheet.lever_graphs_n4098||0), 0.002); end
  def test_lever_graphs_o4098; assert_in_delta(0.0, (worksheet.lever_graphs_o4098||0), 0.002); end
  def test_lever_graphs_p4098; assert_in_delta(0.0, (worksheet.lever_graphs_p4098||0), 0.002); end
  def test_lever_graphs_q4098; assert_in_delta(0.0, (worksheet.lever_graphs_q4098||0), 0.002); end
  def test_lever_graphs_r4098; assert_in_delta(0.0, (worksheet.lever_graphs_r4098||0), 0.002); end
  def test_lever_graphs_s4098; assert_in_delta(0.0, (worksheet.lever_graphs_s4098||0), 0.002); end
  def test_lever_graphs_t4098; assert_equal("Solid fueled", worksheet.lever_graphs_t4098); end
  def test_lever_graphs_u4098; assert_equal("Solid-fuel subcritical power plant", worksheet.lever_graphs_u4098); end
  def test_lever_graphs_a4099; assert_equal("CCS.solid.sub.elec", worksheet.lever_graphs_a4099); end
  def test_lever_graphs_b4099; assert_in_epsilon(3.0, worksheet.lever_graphs_b4099, 0.002); end
  def test_lever_graphs_k4099; assert_in_delta(0.0, (worksheet.lever_graphs_k4099||0), 0.002); end
  def test_lever_graphs_l4099; assert_in_delta(0.0, (worksheet.lever_graphs_l4099||0), 0.002); end
  def test_lever_graphs_m4099; assert_in_delta(0.0, (worksheet.lever_graphs_m4099||0), 0.002); end
  def test_lever_graphs_n4099; assert_in_delta(0.0, (worksheet.lever_graphs_n4099||0), 0.002); end
  def test_lever_graphs_o4099; assert_in_delta(0.0, (worksheet.lever_graphs_o4099||0), 0.002); end
  def test_lever_graphs_p4099; assert_in_delta(0.0, (worksheet.lever_graphs_p4099||0), 0.002); end
  def test_lever_graphs_q4099; assert_in_delta(0.0, (worksheet.lever_graphs_q4099||0), 0.002); end
  def test_lever_graphs_r4099; assert_in_delta(0.0, (worksheet.lever_graphs_r4099||0), 0.002); end
  def test_lever_graphs_s4099; assert_in_delta(0.0, (worksheet.lever_graphs_s4099||0), 0.002); end
  def test_lever_graphs_t4099; assert_equal("Solid fueled", worksheet.lever_graphs_t4099); end
  def test_lever_graphs_u4099; assert_equal("Solid-fuel subcritical power plant", worksheet.lever_graphs_u4099); end
  def test_lever_graphs_a4100; assert_equal("CCS.solid.sub.elec", worksheet.lever_graphs_a4100); end
  def test_lever_graphs_b4100; assert_in_epsilon(4.0, worksheet.lever_graphs_b4100, 0.002); end
  def test_lever_graphs_k4100; assert_in_delta(0.0, (worksheet.lever_graphs_k4100||0), 0.002); end
  def test_lever_graphs_l4100; assert_in_delta(0.0, (worksheet.lever_graphs_l4100||0), 0.002); end
  def test_lever_graphs_m4100; assert_in_delta(0.0, (worksheet.lever_graphs_m4100||0), 0.002); end
  def test_lever_graphs_n4100; assert_in_delta(0.0, (worksheet.lever_graphs_n4100||0), 0.002); end
  def test_lever_graphs_o4100; assert_in_delta(0.0, (worksheet.lever_graphs_o4100||0), 0.002); end
  def test_lever_graphs_p4100; assert_in_delta(0.0, (worksheet.lever_graphs_p4100||0), 0.002); end
  def test_lever_graphs_q4100; assert_in_delta(0.0, (worksheet.lever_graphs_q4100||0), 0.002); end
  def test_lever_graphs_r4100; assert_in_delta(0.0, (worksheet.lever_graphs_r4100||0), 0.002); end
  def test_lever_graphs_s4100; assert_in_delta(0.0, (worksheet.lever_graphs_s4100||0), 0.002); end
  def test_lever_graphs_t4100; assert_equal("Solid fueled", worksheet.lever_graphs_t4100); end
  def test_lever_graphs_u4100; assert_equal("Solid-fuel subcritical power plant", worksheet.lever_graphs_u4100); end
  def test_lever_graphs_a4101; assert_equal("CCS.liquid.new.tech.elec", worksheet.lever_graphs_a4101); end
  def test_lever_graphs_b4101; assert_in_delta(1.0, worksheet.lever_graphs_b4101, 0.002); end
  def test_lever_graphs_k4101; assert_in_delta(0.0, (worksheet.lever_graphs_k4101||0), 0.002); end
  def test_lever_graphs_l4101; assert_in_delta(0.0, (worksheet.lever_graphs_l4101||0), 0.002); end
  def test_lever_graphs_m4101; assert_in_delta(0.0, (worksheet.lever_graphs_m4101||0), 0.002); end
  def test_lever_graphs_n4101; assert_in_delta(0.0, (worksheet.lever_graphs_n4101||0), 0.002); end
  def test_lever_graphs_o4101; assert_in_delta(0.0, (worksheet.lever_graphs_o4101||0), 0.002); end
  def test_lever_graphs_p4101; assert_in_delta(0.0, (worksheet.lever_graphs_p4101||0), 0.002); end
  def test_lever_graphs_q4101; assert_in_delta(0.0, (worksheet.lever_graphs_q4101||0), 0.002); end
  def test_lever_graphs_r4101; assert_in_delta(0.0, (worksheet.lever_graphs_r4101||0), 0.002); end
  def test_lever_graphs_s4101; assert_in_delta(0.0, (worksheet.lever_graphs_s4101||0), 0.002); end
  def test_lever_graphs_t4101; assert_equal("Liquid fueled", worksheet.lever_graphs_t4101); end
  def test_lever_graphs_u4101; assert_equal("Liquid-fuel efficient power plant", worksheet.lever_graphs_u4101); end
  def test_lever_graphs_a4102; assert_equal("CCS.liquid.new.tech.elec", worksheet.lever_graphs_a4102); end
  def test_lever_graphs_b4102; assert_in_epsilon(2.0, worksheet.lever_graphs_b4102, 0.002); end
  def test_lever_graphs_k4102; assert_in_delta(0.0, (worksheet.lever_graphs_k4102||0), 0.002); end
  def test_lever_graphs_l4102; assert_in_delta(0.0, (worksheet.lever_graphs_l4102||0), 0.002); end
  def test_lever_graphs_m4102; assert_in_delta(0.0, (worksheet.lever_graphs_m4102||0), 0.002); end
  def test_lever_graphs_n4102; assert_in_delta(0.0, (worksheet.lever_graphs_n4102||0), 0.002); end
  def test_lever_graphs_o4102; assert_in_delta(0.0, (worksheet.lever_graphs_o4102||0), 0.002); end
  def test_lever_graphs_p4102; assert_in_delta(0.0, (worksheet.lever_graphs_p4102||0), 0.002); end
  def test_lever_graphs_q4102; assert_in_delta(0.0, (worksheet.lever_graphs_q4102||0), 0.002); end
  def test_lever_graphs_r4102; assert_in_delta(0.0, (worksheet.lever_graphs_r4102||0), 0.002); end
  def test_lever_graphs_s4102; assert_in_delta(0.0, (worksheet.lever_graphs_s4102||0), 0.002); end
  def test_lever_graphs_t4102; assert_equal("Liquid fueled", worksheet.lever_graphs_t4102); end
  def test_lever_graphs_u4102; assert_equal("Liquid-fuel efficient power plant", worksheet.lever_graphs_u4102); end
  def test_lever_graphs_a4103; assert_equal("CCS.liquid.new.tech.elec", worksheet.lever_graphs_a4103); end
  def test_lever_graphs_b4103; assert_in_epsilon(3.0, worksheet.lever_graphs_b4103, 0.002); end
  def test_lever_graphs_k4103; assert_in_delta(0.0, (worksheet.lever_graphs_k4103||0), 0.002); end
  def test_lever_graphs_l4103; assert_in_delta(0.0, (worksheet.lever_graphs_l4103||0), 0.002); end
  def test_lever_graphs_m4103; assert_in_delta(0.0, (worksheet.lever_graphs_m4103||0), 0.002); end
  def test_lever_graphs_n4103; assert_in_delta(0.0, (worksheet.lever_graphs_n4103||0), 0.002); end
  def test_lever_graphs_o4103; assert_in_delta(0.0, (worksheet.lever_graphs_o4103||0), 0.002); end
  def test_lever_graphs_p4103; assert_in_delta(0.0, (worksheet.lever_graphs_p4103||0), 0.002); end
  def test_lever_graphs_q4103; assert_in_delta(0.0, (worksheet.lever_graphs_q4103||0), 0.002); end
  def test_lever_graphs_r4103; assert_in_delta(0.0, (worksheet.lever_graphs_r4103||0), 0.002); end
  def test_lever_graphs_s4103; assert_in_delta(0.0, (worksheet.lever_graphs_s4103||0), 0.002); end
  def test_lever_graphs_t4103; assert_equal("Liquid fueled", worksheet.lever_graphs_t4103); end
  def test_lever_graphs_u4103; assert_equal("Liquid-fuel efficient power plant", worksheet.lever_graphs_u4103); end
  def test_lever_graphs_a4104; assert_equal("CCS.liquid.new.tech.elec", worksheet.lever_graphs_a4104); end
  def test_lever_graphs_b4104; assert_in_epsilon(4.0, worksheet.lever_graphs_b4104, 0.002); end
  def test_lever_graphs_k4104; assert_in_delta(0.0, (worksheet.lever_graphs_k4104||0), 0.002); end
  def test_lever_graphs_l4104; assert_in_delta(0.0, (worksheet.lever_graphs_l4104||0), 0.002); end
  def test_lever_graphs_m4104; assert_in_delta(0.0, (worksheet.lever_graphs_m4104||0), 0.002); end
  def test_lever_graphs_n4104; assert_in_delta(0.0, (worksheet.lever_graphs_n4104||0), 0.002); end
  def test_lever_graphs_o4104; assert_in_delta(0.0, (worksheet.lever_graphs_o4104||0), 0.002); end
  def test_lever_graphs_p4104; assert_in_delta(0.0, (worksheet.lever_graphs_p4104||0), 0.002); end
  def test_lever_graphs_q4104; assert_in_delta(0.0, (worksheet.lever_graphs_q4104||0), 0.002); end
  def test_lever_graphs_r4104; assert_in_delta(0.0, (worksheet.lever_graphs_r4104||0), 0.002); end
  def test_lever_graphs_s4104; assert_in_delta(0.0, (worksheet.lever_graphs_s4104||0), 0.002); end
  def test_lever_graphs_t4104; assert_equal("Liquid fueled", worksheet.lever_graphs_t4104); end
  def test_lever_graphs_u4104; assert_equal("Liquid-fuel efficient power plant", worksheet.lever_graphs_u4104); end
  def test_lever_graphs_a4105; assert_equal("CCS.liquid.old.tech.elec", worksheet.lever_graphs_a4105); end
  def test_lever_graphs_b4105; assert_in_delta(1.0, worksheet.lever_graphs_b4105, 0.002); end
  def test_lever_graphs_k4105; assert_in_delta(0.0, (worksheet.lever_graphs_k4105||0), 0.002); end
  def test_lever_graphs_l4105; assert_in_delta(0.0, (worksheet.lever_graphs_l4105||0), 0.002); end
  def test_lever_graphs_m4105; assert_in_delta(0.0, (worksheet.lever_graphs_m4105||0), 0.002); end
  def test_lever_graphs_n4105; assert_in_delta(0.0, (worksheet.lever_graphs_n4105||0), 0.002); end
  def test_lever_graphs_o4105; assert_in_delta(0.0, (worksheet.lever_graphs_o4105||0), 0.002); end
  def test_lever_graphs_p4105; assert_in_delta(0.0, (worksheet.lever_graphs_p4105||0), 0.002); end
  def test_lever_graphs_q4105; assert_in_delta(0.0, (worksheet.lever_graphs_q4105||0), 0.002); end
  def test_lever_graphs_r4105; assert_in_delta(0.0, (worksheet.lever_graphs_r4105||0), 0.002); end
  def test_lever_graphs_s4105; assert_in_delta(0.0, (worksheet.lever_graphs_s4105||0), 0.002); end
  def test_lever_graphs_t4105; assert_equal("Liquid fueled", worksheet.lever_graphs_t4105); end
  def test_lever_graphs_u4105; assert_equal("liquid-fuel inefficient power plant", worksheet.lever_graphs_u4105); end
  def test_lever_graphs_a4106; assert_equal("CCS.liquid.old.tech.elec", worksheet.lever_graphs_a4106); end
  def test_lever_graphs_b4106; assert_in_epsilon(2.0, worksheet.lever_graphs_b4106, 0.002); end
  def test_lever_graphs_k4106; assert_in_delta(0.0, (worksheet.lever_graphs_k4106||0), 0.002); end
  def test_lever_graphs_l4106; assert_in_delta(0.0, (worksheet.lever_graphs_l4106||0), 0.002); end
  def test_lever_graphs_m4106; assert_in_delta(0.0, (worksheet.lever_graphs_m4106||0), 0.002); end
  def test_lever_graphs_n4106; assert_in_delta(0.0, (worksheet.lever_graphs_n4106||0), 0.002); end
  def test_lever_graphs_o4106; assert_in_delta(0.0, (worksheet.lever_graphs_o4106||0), 0.002); end
  def test_lever_graphs_p4106; assert_in_delta(0.0, (worksheet.lever_graphs_p4106||0), 0.002); end
  def test_lever_graphs_q4106; assert_in_delta(0.0, (worksheet.lever_graphs_q4106||0), 0.002); end
  def test_lever_graphs_r4106; assert_in_delta(0.0, (worksheet.lever_graphs_r4106||0), 0.002); end
  def test_lever_graphs_s4106; assert_in_delta(0.0, (worksheet.lever_graphs_s4106||0), 0.002); end
  def test_lever_graphs_t4106; assert_equal("Liquid fueled", worksheet.lever_graphs_t4106); end
  def test_lever_graphs_u4106; assert_equal("liquid-fuel inefficient power plant", worksheet.lever_graphs_u4106); end
  def test_lever_graphs_a4107; assert_equal("CCS.liquid.old.tech.elec", worksheet.lever_graphs_a4107); end
  def test_lever_graphs_b4107; assert_in_epsilon(3.0, worksheet.lever_graphs_b4107, 0.002); end
  def test_lever_graphs_k4107; assert_in_delta(0.0, (worksheet.lever_graphs_k4107||0), 0.002); end
  def test_lever_graphs_l4107; assert_in_delta(0.0, (worksheet.lever_graphs_l4107||0), 0.002); end
  def test_lever_graphs_m4107; assert_in_delta(0.0, (worksheet.lever_graphs_m4107||0), 0.002); end
  def test_lever_graphs_n4107; assert_in_delta(0.0, (worksheet.lever_graphs_n4107||0), 0.002); end
  def test_lever_graphs_o4107; assert_in_delta(0.0, (worksheet.lever_graphs_o4107||0), 0.002); end
  def test_lever_graphs_p4107; assert_in_delta(0.0, (worksheet.lever_graphs_p4107||0), 0.002); end
  def test_lever_graphs_q4107; assert_in_delta(0.0, (worksheet.lever_graphs_q4107||0), 0.002); end
  def test_lever_graphs_r4107; assert_in_delta(0.0, (worksheet.lever_graphs_r4107||0), 0.002); end
  def test_lever_graphs_s4107; assert_in_delta(0.0, (worksheet.lever_graphs_s4107||0), 0.002); end
  def test_lever_graphs_t4107; assert_equal("Liquid fueled", worksheet.lever_graphs_t4107); end
  def test_lever_graphs_u4107; assert_equal("liquid-fuel inefficient power plant", worksheet.lever_graphs_u4107); end
  def test_lever_graphs_a4108; assert_equal("CCS.liquid.old.tech.elec", worksheet.lever_graphs_a4108); end
  def test_lever_graphs_b4108; assert_in_epsilon(4.0, worksheet.lever_graphs_b4108, 0.002); end
  def test_lever_graphs_k4108; assert_in_delta(0.0, (worksheet.lever_graphs_k4108||0), 0.002); end
  def test_lever_graphs_l4108; assert_in_delta(0.0, (worksheet.lever_graphs_l4108||0), 0.002); end
  def test_lever_graphs_m4108; assert_in_delta(0.0, (worksheet.lever_graphs_m4108||0), 0.002); end
  def test_lever_graphs_n4108; assert_in_delta(0.0, (worksheet.lever_graphs_n4108||0), 0.002); end
  def test_lever_graphs_o4108; assert_in_delta(0.0, (worksheet.lever_graphs_o4108||0), 0.002); end
  def test_lever_graphs_p4108; assert_in_delta(0.0, (worksheet.lever_graphs_p4108||0), 0.002); end
  def test_lever_graphs_q4108; assert_in_delta(0.0, (worksheet.lever_graphs_q4108||0), 0.002); end
  def test_lever_graphs_r4108; assert_in_delta(0.0, (worksheet.lever_graphs_r4108||0), 0.002); end
  def test_lever_graphs_s4108; assert_in_delta(0.0, (worksheet.lever_graphs_s4108||0), 0.002); end
  def test_lever_graphs_t4108; assert_equal("Liquid fueled", worksheet.lever_graphs_t4108); end
  def test_lever_graphs_u4108; assert_equal("liquid-fuel inefficient power plant", worksheet.lever_graphs_u4108); end
  def test_lever_graphs_a4109; assert_equal("CCS.gas.OC.elec", worksheet.lever_graphs_a4109); end
  def test_lever_graphs_b4109; assert_in_delta(1.0, worksheet.lever_graphs_b4109, 0.002); end
  def test_lever_graphs_k4109; assert_in_delta(0.0, (worksheet.lever_graphs_k4109||0), 0.002); end
  def test_lever_graphs_l4109; assert_in_delta(0.0, (worksheet.lever_graphs_l4109||0), 0.002); end
  def test_lever_graphs_m4109; assert_in_delta(0.0, (worksheet.lever_graphs_m4109||0), 0.002); end
  def test_lever_graphs_n4109; assert_in_epsilon(1.6, worksheet.lever_graphs_n4109, 0.002); end
  def test_lever_graphs_o4109; assert_in_epsilon(1.6, worksheet.lever_graphs_o4109, 0.002); end
  def test_lever_graphs_p4109; assert_in_epsilon(2.4, worksheet.lever_graphs_p4109, 0.002); end
  def test_lever_graphs_q4109; assert_in_epsilon(3.2, worksheet.lever_graphs_q4109, 0.002); end
  def test_lever_graphs_r4109; assert_in_epsilon(4.8, worksheet.lever_graphs_r4109, 0.002); end
  def test_lever_graphs_s4109; assert_in_epsilon(6.4, worksheet.lever_graphs_s4109, 0.002); end
  def test_lever_graphs_t4109; assert_equal("Gas fueled", worksheet.lever_graphs_t4109); end
  def test_lever_graphs_u4109; assert_equal("Open-cycle gas turbine power plant", worksheet.lever_graphs_u4109); end
  def test_lever_graphs_a4110; assert_equal("CCS.gas.OC.elec", worksheet.lever_graphs_a4110); end
  def test_lever_graphs_b4110; assert_in_epsilon(2.0, worksheet.lever_graphs_b4110, 0.002); end
  def test_lever_graphs_k4110; assert_in_delta(0.0, (worksheet.lever_graphs_k4110||0), 0.002); end
  def test_lever_graphs_l4110; assert_in_delta(0.0, (worksheet.lever_graphs_l4110||0), 0.002); end
  def test_lever_graphs_m4110; assert_in_delta(0.0, (worksheet.lever_graphs_m4110||0), 0.002); end
  def test_lever_graphs_n4110; assert_in_epsilon(3.6, worksheet.lever_graphs_n4110, 0.002); end
  def test_lever_graphs_o4110; assert_in_epsilon(11.4, worksheet.lever_graphs_o4110, 0.002); end
  def test_lever_graphs_p4110; assert_in_epsilon(23.939999999999998, worksheet.lever_graphs_p4110, 0.002); end
  def test_lever_graphs_q4110; assert_in_epsilon(44.68000000000001, worksheet.lever_graphs_q4110, 0.002); end
  def test_lever_graphs_r4110; assert_in_epsilon(93.84, worksheet.lever_graphs_r4110, 0.002); end
  def test_lever_graphs_s4110; assert_in_epsilon(196.0, worksheet.lever_graphs_s4110, 0.002); end
  def test_lever_graphs_t4110; assert_equal("Gas fueled", worksheet.lever_graphs_t4110); end
  def test_lever_graphs_u4110; assert_equal("Open-cycle gas turbine power plant", worksheet.lever_graphs_u4110); end
  def test_lever_graphs_a4111; assert_equal("CCS.gas.OC.elec", worksheet.lever_graphs_a4111); end
  def test_lever_graphs_b4111; assert_in_epsilon(3.0, worksheet.lever_graphs_b4111, 0.002); end
  def test_lever_graphs_k4111; assert_in_delta(0.0, (worksheet.lever_graphs_k4111||0), 0.002); end
  def test_lever_graphs_l4111; assert_in_delta(0.0, (worksheet.lever_graphs_l4111||0), 0.002); end
  def test_lever_graphs_m4111; assert_in_delta(0.0, (worksheet.lever_graphs_m4111||0), 0.002); end
  def test_lever_graphs_n4111; assert_in_epsilon(10.89, worksheet.lever_graphs_n4111, 0.002); end
  def test_lever_graphs_o4111; assert_in_epsilon(38.0, worksheet.lever_graphs_o4111, 0.002); end
  def test_lever_graphs_p4111; assert_in_epsilon(80.36999999999999, worksheet.lever_graphs_p4111, 0.002); end
  def test_lever_graphs_q4111; assert_in_epsilon(151.1, worksheet.lever_graphs_q4111, 0.002); end
  def test_lever_graphs_r4111; assert_in_epsilon(319.59, worksheet.lever_graphs_r4111, 0.002); end
  def test_lever_graphs_s4111; assert_in_epsilon(594.8000000000001, worksheet.lever_graphs_s4111, 0.002); end
  def test_lever_graphs_t4111; assert_equal("Gas fueled", worksheet.lever_graphs_t4111); end
  def test_lever_graphs_u4111; assert_equal("Open-cycle gas turbine power plant", worksheet.lever_graphs_u4111); end
  def test_lever_graphs_a4112; assert_equal("CCS.gas.OC.elec", worksheet.lever_graphs_a4112); end
  def test_lever_graphs_b4112; assert_in_epsilon(4.0, worksheet.lever_graphs_b4112, 0.002); end
  def test_lever_graphs_k4112; assert_in_delta(0.0, (worksheet.lever_graphs_k4112||0), 0.002); end
  def test_lever_graphs_l4112; assert_in_delta(0.0, (worksheet.lever_graphs_l4112||0), 0.002); end
  def test_lever_graphs_m4112; assert_in_delta(0.0, (worksheet.lever_graphs_m4112||0), 0.002); end
  def test_lever_graphs_n4112; assert_in_epsilon(76.0, worksheet.lever_graphs_n4112, 0.002); end
  def test_lever_graphs_o4112; assert_in_epsilon(126.67000000000002, worksheet.lever_graphs_o4112, 0.002); end
  def test_lever_graphs_p4112; assert_in_epsilon(266.01, worksheet.lever_graphs_p4112, 0.002); end
  def test_lever_graphs_q4112; assert_in_epsilon(496.56000000000006, worksheet.lever_graphs_q4112, 0.002); end
  def test_lever_graphs_r4112; assert_in_epsilon(900.0, worksheet.lever_graphs_r4112, 0.002); end
  def test_lever_graphs_s4112; assert_in_epsilon(1480.0, worksheet.lever_graphs_s4112, 0.002); end
  def test_lever_graphs_t4112; assert_equal("Gas fueled", worksheet.lever_graphs_t4112); end
  def test_lever_graphs_u4112; assert_equal("Open-cycle gas turbine power plant", worksheet.lever_graphs_u4112); end
  def test_lever_graphs_a4113; assert_equal("CCS.gas.CC.elec", worksheet.lever_graphs_a4113); end
  def test_lever_graphs_b4113; assert_in_delta(1.0, worksheet.lever_graphs_b4113, 0.002); end
  def test_lever_graphs_k4113; assert_in_delta(0.0, (worksheet.lever_graphs_k4113||0), 0.002); end
  def test_lever_graphs_l4113; assert_in_delta(0.0, (worksheet.lever_graphs_l4113||0), 0.002); end
  def test_lever_graphs_m4113; assert_in_delta(0.0, (worksheet.lever_graphs_m4113||0), 0.002); end
  def test_lever_graphs_n4113; assert_in_delta(0.0, (worksheet.lever_graphs_n4113||0), 0.002); end
  def test_lever_graphs_o4113; assert_in_delta(0.0, (worksheet.lever_graphs_o4113||0), 0.002); end
  def test_lever_graphs_p4113; assert_in_delta(0.0, (worksheet.lever_graphs_p4113||0), 0.002); end
  def test_lever_graphs_q4113; assert_in_delta(0.0, (worksheet.lever_graphs_q4113||0), 0.002); end
  def test_lever_graphs_r4113; assert_in_delta(0.0, (worksheet.lever_graphs_r4113||0), 0.002); end
  def test_lever_graphs_s4113; assert_in_delta(0.0, (worksheet.lever_graphs_s4113||0), 0.002); end
  def test_lever_graphs_t4113; assert_equal("Gas fueled", worksheet.lever_graphs_t4113); end
  def test_lever_graphs_u4113; assert_equal("Combined cycle gas turbine power plant", worksheet.lever_graphs_u4113); end
  def test_lever_graphs_a4114; assert_equal("CCS.gas.CC.elec", worksheet.lever_graphs_a4114); end
  def test_lever_graphs_b4114; assert_in_epsilon(2.0, worksheet.lever_graphs_b4114, 0.002); end
  def test_lever_graphs_k4114; assert_in_delta(0.0, (worksheet.lever_graphs_k4114||0), 0.002); end
  def test_lever_graphs_l4114; assert_in_delta(0.0, (worksheet.lever_graphs_l4114||0), 0.002); end
  def test_lever_graphs_m4114; assert_in_delta(0.0, (worksheet.lever_graphs_m4114||0), 0.002); end
  def test_lever_graphs_n4114; assert_in_delta(0.0, (worksheet.lever_graphs_n4114||0), 0.002); end
  def test_lever_graphs_o4114; assert_in_delta(0.0, (worksheet.lever_graphs_o4114||0), 0.002); end
  def test_lever_graphs_p4114; assert_in_delta(0.0, (worksheet.lever_graphs_p4114||0), 0.002); end
  def test_lever_graphs_q4114; assert_in_delta(0.0, (worksheet.lever_graphs_q4114||0), 0.002); end
  def test_lever_graphs_r4114; assert_in_delta(0.0, (worksheet.lever_graphs_r4114||0), 0.002); end
  def test_lever_graphs_s4114; assert_in_delta(0.0, (worksheet.lever_graphs_s4114||0), 0.002); end
  def test_lever_graphs_t4114; assert_equal("Gas fueled", worksheet.lever_graphs_t4114); end
  def test_lever_graphs_u4114; assert_equal("Combined cycle gas turbine power plant", worksheet.lever_graphs_u4114); end
  def test_lever_graphs_a4115; assert_equal("CCS.gas.CC.elec", worksheet.lever_graphs_a4115); end
  def test_lever_graphs_b4115; assert_in_epsilon(3.0, worksheet.lever_graphs_b4115, 0.002); end
  def test_lever_graphs_k4115; assert_in_delta(0.0, (worksheet.lever_graphs_k4115||0), 0.002); end
  def test_lever_graphs_l4115; assert_in_delta(0.0, (worksheet.lever_graphs_l4115||0), 0.002); end
  def test_lever_graphs_m4115; assert_in_delta(0.0, (worksheet.lever_graphs_m4115||0), 0.002); end
  def test_lever_graphs_n4115; assert_in_delta(0.0, (worksheet.lever_graphs_n4115||0), 0.002); end
  def test_lever_graphs_o4115; assert_in_delta(0.0, (worksheet.lever_graphs_o4115||0), 0.002); end
  def test_lever_graphs_p4115; assert_in_delta(0.0, (worksheet.lever_graphs_p4115||0), 0.002); end
  def test_lever_graphs_q4115; assert_in_delta(0.0, (worksheet.lever_graphs_q4115||0), 0.002); end
  def test_lever_graphs_r4115; assert_in_delta(0.0, (worksheet.lever_graphs_r4115||0), 0.002); end
  def test_lever_graphs_s4115; assert_in_delta(0.0, (worksheet.lever_graphs_s4115||0), 0.002); end
  def test_lever_graphs_t4115; assert_equal("Gas fueled", worksheet.lever_graphs_t4115); end
  def test_lever_graphs_u4115; assert_equal("Combined cycle gas turbine power plant", worksheet.lever_graphs_u4115); end
  def test_lever_graphs_a4116; assert_equal("CCS.gas.CC.elec", worksheet.lever_graphs_a4116); end
  def test_lever_graphs_b4116; assert_in_epsilon(4.0, worksheet.lever_graphs_b4116, 0.002); end
  def test_lever_graphs_k4116; assert_in_delta(0.0, (worksheet.lever_graphs_k4116||0), 0.002); end
  def test_lever_graphs_l4116; assert_in_delta(0.0, (worksheet.lever_graphs_l4116||0), 0.002); end
  def test_lever_graphs_m4116; assert_in_delta(0.0, (worksheet.lever_graphs_m4116||0), 0.002); end
  def test_lever_graphs_n4116; assert_in_delta(0.0, (worksheet.lever_graphs_n4116||0), 0.002); end
  def test_lever_graphs_o4116; assert_in_delta(0.0, (worksheet.lever_graphs_o4116||0), 0.002); end
  def test_lever_graphs_p4116; assert_in_delta(0.0, (worksheet.lever_graphs_p4116||0), 0.002); end
  def test_lever_graphs_q4116; assert_in_delta(0.0, (worksheet.lever_graphs_q4116||0), 0.002); end
  def test_lever_graphs_r4116; assert_in_delta(0.0, (worksheet.lever_graphs_r4116||0), 0.002); end
  def test_lever_graphs_s4116; assert_in_delta(0.0, (worksheet.lever_graphs_s4116||0), 0.002); end
  def test_lever_graphs_t4116; assert_equal("Gas fueled", worksheet.lever_graphs_t4116); end
  def test_lever_graphs_u4116; assert_equal("Combined cycle gas turbine power plant", worksheet.lever_graphs_u4116); end
  def test_lever_graphs_b4172; assert_equal("Type of travel", worksheet.lever_graphs_b4172); end
  def test_lever_graphs_c4172; assert_equal("Level", worksheet.lever_graphs_c4172); end
  def test_lever_graphs_d4172; assert_equal("Type of city", worksheet.lever_graphs_d4172); end
  def test_lever_graphs_e4172; assert_equal("1985", worksheet.lever_graphs_e4172); end
  def test_lever_graphs_f4172; assert_equal("1990", worksheet.lever_graphs_f4172); end
  def test_lever_graphs_g4172; assert_equal("1995", worksheet.lever_graphs_g4172); end
  def test_lever_graphs_h4172; assert_equal("2000", worksheet.lever_graphs_h4172); end
  def test_lever_graphs_i4172; assert_equal("2005", worksheet.lever_graphs_i4172); end
  def test_lever_graphs_j4172; assert_equal("2010", worksheet.lever_graphs_j4172); end
  def test_lever_graphs_k4172; assert_equal("2011", worksheet.lever_graphs_k4172); end
  def test_lever_graphs_l4172; assert_equal("2015", worksheet.lever_graphs_l4172); end
  def test_lever_graphs_m4172; assert_equal("2020", worksheet.lever_graphs_m4172); end
  def test_lever_graphs_n4172; assert_equal("2025", worksheet.lever_graphs_n4172); end
  def test_lever_graphs_o4172; assert_equal("2030", worksheet.lever_graphs_o4172); end
  def test_lever_graphs_p4172; assert_equal("2035", worksheet.lever_graphs_p4172); end
  def test_lever_graphs_q4172; assert_equal("2040", worksheet.lever_graphs_q4172); end
  def test_lever_graphs_r4172; assert_equal("2045", worksheet.lever_graphs_r4172); end
  def test_lever_graphs_s4172; assert_equal("2050", worksheet.lever_graphs_s4172); end
  def test_lever_graphs_b4173; assert_equal("International", worksheet.lever_graphs_b4173); end
  def test_lever_graphs_c4173; assert_in_delta(1.0, worksheet.lever_graphs_c4173, 0.002); end
  def test_lever_graphs_d4173; assert_equal("International slow growth", worksheet.lever_graphs_d4173); end
  def test_lever_graphs_k4173; assert_in_delta(1.0, worksheet.lever_graphs_k4173, 0.002); end
  def test_lever_graphs_l4173; assert_in_delta(0.987, worksheet.lever_graphs_l4173, 0.002); end
  def test_lever_graphs_m4173; assert_in_delta(0.9888571428571428, worksheet.lever_graphs_m4173, 0.002); end
  def test_lever_graphs_n4173; assert_in_delta(0.9907142857142857, worksheet.lever_graphs_n4173, 0.002); end
  def test_lever_graphs_o4173; assert_in_delta(0.9925714285714284, worksheet.lever_graphs_o4173, 0.002); end
  def test_lever_graphs_p4173; assert_in_delta(0.9944285714285712, worksheet.lever_graphs_p4173, 0.002); end
  def test_lever_graphs_q4173; assert_in_delta(0.9962857142857142, worksheet.lever_graphs_q4173, 0.002); end
  def test_lever_graphs_r4173; assert_in_delta(0.998142857142857, worksheet.lever_graphs_r4173, 0.002); end
  def test_lever_graphs_s4173; assert_in_delta(1.0, worksheet.lever_graphs_s4173, 0.002); end
  def test_lever_graphs_b4174; assert_equal("International", worksheet.lever_graphs_b4174); end
  def test_lever_graphs_c4174; assert_in_epsilon(2.0, worksheet.lever_graphs_c4174, 0.002); end
  def test_lever_graphs_d4174; assert_equal("International slow growth", worksheet.lever_graphs_d4174); end
  def test_lever_graphs_k4174; assert_in_delta(1.0, worksheet.lever_graphs_k4174, 0.002); end
  def test_lever_graphs_l4174; assert_in_delta(0.987, worksheet.lever_graphs_l4174, 0.002); end
  def test_lever_graphs_m4174; assert_in_delta(0.9714583365622725, worksheet.lever_graphs_m4174, 0.002); end
  def test_lever_graphs_n4174; assert_in_delta(0.9559166731245451, worksheet.lever_graphs_n4174, 0.002); end
  def test_lever_graphs_o4174; assert_in_delta(0.9403750096868178, worksheet.lever_graphs_o4174, 0.002); end
  def test_lever_graphs_p4174; assert_in_delta(0.9248333462490902, worksheet.lever_graphs_p4174, 0.002); end
  def test_lever_graphs_q4174; assert_in_delta(0.9092916828113629, worksheet.lever_graphs_q4174, 0.002); end
  def test_lever_graphs_r4174; assert_in_delta(0.8937500193736353, worksheet.lever_graphs_r4174, 0.002); end
  def test_lever_graphs_s4174; assert_in_delta(0.878208355935908, worksheet.lever_graphs_s4174, 0.002); end
  def test_lever_graphs_b4175; assert_equal("International", worksheet.lever_graphs_b4175); end
  def test_lever_graphs_c4175; assert_in_epsilon(3.0, worksheet.lever_graphs_c4175, 0.002); end
  def test_lever_graphs_d4175; assert_equal("International slow growth", worksheet.lever_graphs_d4175); end
  def test_lever_graphs_k4175; assert_in_delta(1.0, worksheet.lever_graphs_k4175, 0.002); end
  def test_lever_graphs_l4175; assert_in_delta(0.987, worksheet.lever_graphs_l4175, 0.002); end
  def test_lever_graphs_m4175; assert_in_delta(0.9633469387755103, worksheet.lever_graphs_m4175, 0.002); end
  def test_lever_graphs_n4175; assert_in_delta(0.9396938775510204, worksheet.lever_graphs_n4175, 0.002); end
  def test_lever_graphs_o4175; assert_in_delta(0.9160408163265306, worksheet.lever_graphs_o4175, 0.002); end
  def test_lever_graphs_p4175; assert_in_delta(0.8923877551020408, worksheet.lever_graphs_p4175, 0.002); end
  def test_lever_graphs_q4175; assert_in_delta(0.8687346938775511, worksheet.lever_graphs_q4175, 0.002); end
  def test_lever_graphs_r4175; assert_in_delta(0.8450816326530612, worksheet.lever_graphs_r4175, 0.002); end
  def test_lever_graphs_s4175; assert_in_delta(0.8214285714285714, worksheet.lever_graphs_s4175, 0.002); end
  def test_lever_graphs_b4176; assert_equal("International", worksheet.lever_graphs_b4176); end
  def test_lever_graphs_c4176; assert_in_epsilon(4.0, worksheet.lever_graphs_c4176, 0.002); end
  def test_lever_graphs_d4176; assert_equal("International slow growth", worksheet.lever_graphs_d4176); end
  def test_lever_graphs_k4176; assert_in_delta(1.0, worksheet.lever_graphs_k4176, 0.002); end
  def test_lever_graphs_l4176; assert_in_delta(0.987, worksheet.lever_graphs_l4176, 0.002); end
  def test_lever_graphs_m4176; assert_in_delta(0.9443256145350909, worksheet.lever_graphs_m4176, 0.002); end
  def test_lever_graphs_n4176; assert_in_delta(0.9016512290701817, worksheet.lever_graphs_n4176, 0.002); end
  def test_lever_graphs_o4176; assert_in_delta(0.8589768436052725, worksheet.lever_graphs_o4176, 0.002); end
  def test_lever_graphs_p4176; assert_in_delta(0.8163024581403634, worksheet.lever_graphs_p4176, 0.002); end
  def test_lever_graphs_q4176; assert_in_delta(0.7736280726754543, worksheet.lever_graphs_q4176, 0.002); end
  def test_lever_graphs_r4176; assert_in_delta(0.7309536872105451, worksheet.lever_graphs_r4176, 0.002); end
  def test_lever_graphs_s4176; assert_in_delta(0.6882793017456359, worksheet.lever_graphs_s4176, 0.002); end
  def test_lever_graphs_b4177; assert_equal("International", worksheet.lever_graphs_b4177); end
  def test_lever_graphs_c4177; assert_in_delta(1.0, worksheet.lever_graphs_c4177, 0.002); end
  def test_lever_graphs_d4177; assert_equal("International fast growth", worksheet.lever_graphs_d4177); end
  def test_lever_graphs_k4177; assert_in_delta(1.0, worksheet.lever_graphs_k4177, 0.002); end
  def test_lever_graphs_l4177; assert_in_delta(0.987, worksheet.lever_graphs_l4177, 0.002); end
  def test_lever_graphs_m4177; assert_in_delta(0.9888571428571428, worksheet.lever_graphs_m4177, 0.002); end
  def test_lever_graphs_n4177; assert_in_delta(0.9907142857142857, worksheet.lever_graphs_n4177, 0.002); end
  def test_lever_graphs_o4177; assert_in_delta(0.9925714285714284, worksheet.lever_graphs_o4177, 0.002); end
  def test_lever_graphs_p4177; assert_in_delta(0.9944285714285712, worksheet.lever_graphs_p4177, 0.002); end
  def test_lever_graphs_q4177; assert_in_delta(0.9962857142857142, worksheet.lever_graphs_q4177, 0.002); end
  def test_lever_graphs_r4177; assert_in_delta(0.998142857142857, worksheet.lever_graphs_r4177, 0.002); end
  def test_lever_graphs_s4177; assert_in_delta(1.0, worksheet.lever_graphs_s4177, 0.002); end
  def test_lever_graphs_b4178; assert_equal("International", worksheet.lever_graphs_b4178); end
  def test_lever_graphs_c4178; assert_in_epsilon(2.0, worksheet.lever_graphs_c4178, 0.002); end
  def test_lever_graphs_d4178; assert_equal("International fast growth", worksheet.lever_graphs_d4178); end
  def test_lever_graphs_k4178; assert_in_delta(1.0, worksheet.lever_graphs_k4178, 0.002); end
  def test_lever_graphs_l4178; assert_in_delta(0.987, worksheet.lever_graphs_l4178, 0.002); end
  def test_lever_graphs_m4178; assert_in_delta(0.971, worksheet.lever_graphs_m4178, 0.002); end
  def test_lever_graphs_n4178; assert_in_delta(0.955, worksheet.lever_graphs_n4178, 0.002); end
  def test_lever_graphs_o4178; assert_in_delta(0.939, worksheet.lever_graphs_o4178, 0.002); end
  def test_lever_graphs_p4178; assert_in_delta(0.923, worksheet.lever_graphs_p4178, 0.002); end
  def test_lever_graphs_q4178; assert_in_delta(0.907, worksheet.lever_graphs_q4178, 0.002); end
  def test_lever_graphs_r4178; assert_in_delta(0.891, worksheet.lever_graphs_r4178, 0.002); end
  def test_lever_graphs_s4178; assert_in_delta(0.875, worksheet.lever_graphs_s4178, 0.002); end
  def test_lever_graphs_b4179; assert_equal("International", worksheet.lever_graphs_b4179); end
  def test_lever_graphs_c4179; assert_in_epsilon(3.0, worksheet.lever_graphs_c4179, 0.002); end
  def test_lever_graphs_d4179; assert_equal("International fast growth", worksheet.lever_graphs_d4179); end
  def test_lever_graphs_k4179; assert_in_delta(1.0, worksheet.lever_graphs_k4179, 0.002); end
  def test_lever_graphs_l4179; assert_in_delta(0.987, worksheet.lever_graphs_l4179, 0.002); end
  def test_lever_graphs_m4179; assert_in_delta(0.9600479535335595, worksheet.lever_graphs_m4179, 0.002); end
  def test_lever_graphs_n4179; assert_in_delta(0.9330959070671192, worksheet.lever_graphs_n4179, 0.002); end
  def test_lever_graphs_o4179; assert_in_delta(0.9061438606006785, worksheet.lever_graphs_o4179, 0.002); end
  def test_lever_graphs_p4179; assert_in_delta(0.8791918141342381, worksheet.lever_graphs_p4179, 0.002); end
  def test_lever_graphs_q4179; assert_in_delta(0.8522397676677977, worksheet.lever_graphs_q4179, 0.002); end
  def test_lever_graphs_r4179; assert_in_delta(0.8252877212013572, worksheet.lever_graphs_r4179, 0.002); end
  def test_lever_graphs_s4179; assert_in_delta(0.7983356747349168, worksheet.lever_graphs_s4179, 0.002); end
  def test_lever_graphs_b4180; assert_equal("International", worksheet.lever_graphs_b4180); end
  def test_lever_graphs_c4180; assert_in_epsilon(4.0, worksheet.lever_graphs_c4180, 0.002); end
  def test_lever_graphs_d4180; assert_equal("International fast growth", worksheet.lever_graphs_d4180); end
  def test_lever_graphs_k4180; assert_in_delta(1.0, worksheet.lever_graphs_k4180, 0.002); end
  def test_lever_graphs_l4180; assert_in_delta(0.987, worksheet.lever_graphs_l4180, 0.002); end
  def test_lever_graphs_m4180; assert_in_delta(0.9413438392387785, worksheet.lever_graphs_m4180, 0.002); end
  def test_lever_graphs_n4180; assert_in_delta(0.8956876784775574, worksheet.lever_graphs_n4180, 0.002); end
  def test_lever_graphs_o4180; assert_in_delta(0.8500315177163358, worksheet.lever_graphs_o4180, 0.002); end
  def test_lever_graphs_p4180; assert_in_delta(0.8043753569551145, worksheet.lever_graphs_p4180, 0.002); end
  def test_lever_graphs_q4180; assert_in_delta(0.7587191961938932, worksheet.lever_graphs_q4180, 0.002); end
  def test_lever_graphs_r4180; assert_in_delta(0.7130630354326717, worksheet.lever_graphs_r4180, 0.002); end
  def test_lever_graphs_s4180; assert_in_delta(0.6674068746714503, worksheet.lever_graphs_s4180, 0.002); end
  def test_lever_graphs_b4187; assert_equal("Type of travel", worksheet.lever_graphs_b4187); end
  def test_lever_graphs_c4187; assert_equal("Level", worksheet.lever_graphs_c4187); end
  def test_lever_graphs_d4187; assert_equal("Type of city", worksheet.lever_graphs_d4187); end
  def test_lever_graphs_e4187; assert_equal("1985", worksheet.lever_graphs_e4187); end
  def test_lever_graphs_f4187; assert_equal("1990", worksheet.lever_graphs_f4187); end
  def test_lever_graphs_g4187; assert_equal("1995", worksheet.lever_graphs_g4187); end
  def test_lever_graphs_h4187; assert_equal("2000", worksheet.lever_graphs_h4187); end
  def test_lever_graphs_i4187; assert_equal("2005", worksheet.lever_graphs_i4187); end
  def test_lever_graphs_j4187; assert_equal("2010", worksheet.lever_graphs_j4187); end
  def test_lever_graphs_k4187; assert_equal("2011", worksheet.lever_graphs_k4187); end
  def test_lever_graphs_l4187; assert_equal("2015", worksheet.lever_graphs_l4187); end
  def test_lever_graphs_m4187; assert_equal("2020", worksheet.lever_graphs_m4187); end
  def test_lever_graphs_n4187; assert_equal("2025", worksheet.lever_graphs_n4187); end
  def test_lever_graphs_o4187; assert_equal("2030", worksheet.lever_graphs_o4187); end
  def test_lever_graphs_p4187; assert_equal("2035", worksheet.lever_graphs_p4187); end
  def test_lever_graphs_q4187; assert_equal("2040", worksheet.lever_graphs_q4187); end
  def test_lever_graphs_r4187; assert_equal("2045", worksheet.lever_graphs_r4187); end
  def test_lever_graphs_s4187; assert_equal("2050", worksheet.lever_graphs_s4187); end
  def test_lever_graphs_b4188; assert_equal("International", worksheet.lever_graphs_b4188); end
  def test_lever_graphs_c4188; assert_in_delta(1.0, worksheet.lever_graphs_c4188, 0.002); end
  def test_lever_graphs_d4188; assert_equal("International slow growth", worksheet.lever_graphs_d4188); end
  def test_lever_graphs_k4188; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k4188, 0.002); end
  def test_lever_graphs_l4188; assert_in_epsilon(3438.8408933788496, worksheet.lever_graphs_l4188, 0.002); end
  def test_lever_graphs_m4188; assert_in_epsilon(3807.8046695484645, worksheet.lever_graphs_m4188, 0.002); end
  def test_lever_graphs_n4188; assert_in_epsilon(4216.340828075378, worksheet.lever_graphs_n4188, 0.002); end
  def test_lever_graphs_o4188; assert_in_epsilon(4668.69208170582, worksheet.lever_graphs_o4188, 0.002); end
  def test_lever_graphs_p4188; assert_in_epsilon(5169.555862952473, worksheet.lever_graphs_p4188, 0.002); end
  def test_lever_graphs_q4188; assert_in_epsilon(5724.133043087164, worksheet.lever_graphs_q4188, 0.002); end
  def test_lever_graphs_r4188; assert_in_epsilon(6338.1818692314855, worksheet.lever_graphs_r4188, 0.002); end
  def test_lever_graphs_s4188; assert_in_epsilon(7018.077678260653, worksheet.lever_graphs_s4188, 0.002); end
  def test_lever_graphs_b4189; assert_equal("International", worksheet.lever_graphs_b4189); end
  def test_lever_graphs_c4189; assert_in_epsilon(2.0, worksheet.lever_graphs_c4189, 0.002); end
  def test_lever_graphs_d4189; assert_equal("International slow growth", worksheet.lever_graphs_d4189); end
  def test_lever_graphs_k4189; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k4189, 0.002); end
  def test_lever_graphs_l4189; assert_in_epsilon(3438.8408933788496, worksheet.lever_graphs_l4189, 0.002); end
  def test_lever_graphs_m4189; assert_in_epsilon(3628.8053628317266, worksheet.lever_graphs_m4189, 0.002); end
  def test_lever_graphs_n4189; assert_in_epsilon(3828.2835488338355, worksheet.lever_graphs_n4189, 0.002); end
  def test_lever_graphs_o4189; assert_in_epsilon(4037.659624593144, worksheet.lever_graphs_o4189, 0.002); end
  def test_lever_graphs_p4189; assert_in_epsilon(4257.323691079735, worksheet.lever_graphs_p4189, 0.002); end
  def test_lever_graphs_q4189; assert_in_epsilon(4487.670633722713, worksheet.lever_graphs_q4189, 0.002); end
  def test_lever_graphs_r4189; assert_in_epsilon(4729.098783355967, worksheet.lever_graphs_r4189, 0.002); end
  def test_lever_graphs_s4189; assert_in_epsilon(4982.008359123674, worksheet.lever_graphs_s4189, 0.002); end
  def test_lever_graphs_b4190; assert_equal("International", worksheet.lever_graphs_b4190); end
  def test_lever_graphs_c4190; assert_in_epsilon(3.0, worksheet.lever_graphs_c4190, 0.002); end
  def test_lever_graphs_d4190; assert_equal("International slow growth", worksheet.lever_graphs_d4190); end
  def test_lever_graphs_k4190; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k4190, 0.002); end
  def test_lever_graphs_l4190; assert_in_epsilon(3438.8408933788496, worksheet.lever_graphs_l4190, 0.002); end
  def test_lever_graphs_m4190; assert_in_epsilon(3449.196223804128, worksheet.lever_graphs_m4190, 0.002); end
  def test_lever_graphs_n4190; assert_in_epsilon(3457.4971276129895, worksheet.lever_graphs_n4190, 0.002); end
  def test_lever_graphs_o4190; assert_in_epsilon(3463.622133252757, worksheet.lever_graphs_o4190, 0.002); end
  def test_lever_graphs_p4190; assert_in_epsilon(3467.4446239724234, worksheet.lever_graphs_p4190, 0.002); end
  def test_lever_graphs_q4190; assert_in_epsilon(3468.832646203003, worksheet.lever_graphs_q4190, 0.002); end
  def test_lever_graphs_r4190; assert_in_epsilon(3467.648711276107, worksheet.lever_graphs_r4190, 0.002); end
  def test_lever_graphs_s4190; assert_in_epsilon(3463.7495902588666, worksheet.lever_graphs_s4190, 0.002); end
  def test_lever_graphs_b4191; assert_equal("International", worksheet.lever_graphs_b4191); end
  def test_lever_graphs_c4191; assert_in_epsilon(4.0, worksheet.lever_graphs_c4191, 0.002); end
  def test_lever_graphs_d4191; assert_equal("International slow growth", worksheet.lever_graphs_d4191); end
  def test_lever_graphs_k4191; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k4191, 0.002); end
  def test_lever_graphs_l4191; assert_in_epsilon(3438.8408933788496, worksheet.lever_graphs_l4191, 0.002); end
  def test_lever_graphs_m4191; assert_in_epsilon(3153.644548370299, worksheet.lever_graphs_m4191, 0.002); end
  def test_lever_graphs_n4191; assert_in_epsilon(2886.1944875780678, worksheet.lever_graphs_n4191, 0.002); end
  def test_lever_graphs_o4191; assert_in_epsilon(2635.509051235982, worksheet.lever_graphs_o4191, 0.002); end
  def test_lever_graphs_p4191; assert_in_epsilon(2400.657489551428, worksheet.lever_graphs_p4191, 0.002); end
  def test_lever_graphs_q4191; assert_in_epsilon(2180.757428017359, worksheet.lever_graphs_q4191, 0.002); end
  def test_lever_graphs_r4191; assert_in_epsilon(1974.9724554163906, worksheet.lever_graphs_r4191, 0.002); end
  def test_lever_graphs_s4191; assert_in_epsilon(1782.5098286992093, worksheet.lever_graphs_s4191, 0.002); end
  def test_lever_graphs_b4192; assert_equal("International", worksheet.lever_graphs_b4192); end
  def test_lever_graphs_c4192; assert_in_delta(1.0, worksheet.lever_graphs_c4192, 0.002); end
  def test_lever_graphs_d4192; assert_equal("International fast growth", worksheet.lever_graphs_d4192); end
  def test_lever_graphs_k4192; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k4192, 0.002); end
  def test_lever_graphs_l4192; assert_in_epsilon(283.713336135204, worksheet.lever_graphs_l4192, 0.002); end
  def test_lever_graphs_m4192; assert_in_epsilon(369.0522131501292, worksheet.lever_graphs_m4192, 0.002); end
  def test_lever_graphs_n4192; assert_in_epsilon(480.0587011192445, worksheet.lever_graphs_n4192, 0.002); end
  def test_lever_graphs_o4192; assert_in_epsilon(624.4524175710528, worksheet.lever_graphs_o4192, 0.002); end
  def test_lever_graphs_p4192; assert_in_epsilon(812.274531837557, worksheet.lever_graphs_p4192, 0.002); end
  def test_lever_graphs_q4192; assert_in_epsilon(1056.585890829216, worksheet.lever_graphs_q4192, 0.002); end
  def test_lever_graphs_r4192; assert_in_epsilon(1374.3750688093844, worksheet.lever_graphs_r4192, 0.002); end
  def test_lever_graphs_s4192; assert_in_epsilon(1787.7394607416759, worksheet.lever_graphs_s4192, 0.002); end
  def test_lever_graphs_b4193; assert_equal("International", worksheet.lever_graphs_b4193); end
  def test_lever_graphs_c4193; assert_in_epsilon(2.0, worksheet.lever_graphs_c4193, 0.002); end
  def test_lever_graphs_d4193; assert_equal("International fast growth", worksheet.lever_graphs_d4193); end
  def test_lever_graphs_k4193; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k4193, 0.002); end
  def test_lever_graphs_l4193; assert_in_epsilon(283.713336135204, worksheet.lever_graphs_l4193, 0.002); end
  def test_lever_graphs_m4193; assert_in_epsilon(343.0362152394295, worksheet.lever_graphs_m4193, 0.002); end
  def test_lever_graphs_n4193; assert_in_epsilon(414.6505616882545, worksheet.lever_graphs_n4193, 0.002); end
  def test_lever_graphs_o4193; assert_in_epsilon(501.0748705655832, worksheet.lever_graphs_o4193, 0.002); end
  def test_lever_graphs_p4193; assert_in_epsilon(605.3365203622998, worksheet.lever_graphs_p4193, 0.002); end
  def test_lever_graphs_q4193; assert_in_epsilon(731.0727667706341, worksheet.lever_graphs_q4193, 0.002); end
  def test_lever_graphs_r4193; assert_in_epsilon(882.6513047307163, worksheet.lever_graphs_r4193, 0.002); end
  def test_lever_graphs_s4193; assert_in_epsilon(1065.3140646470843, worksheet.lever_graphs_s4193, 0.002); end
  def test_lever_graphs_b4194; assert_equal("International", worksheet.lever_graphs_b4194); end
  def test_lever_graphs_c4194; assert_in_epsilon(3.0, worksheet.lever_graphs_c4194, 0.002); end
  def test_lever_graphs_d4194; assert_equal("International fast growth", worksheet.lever_graphs_d4194); end
  def test_lever_graphs_k4194; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k4194, 0.002); end
  def test_lever_graphs_l4194; assert_in_epsilon(283.713336135204, worksheet.lever_graphs_l4194, 0.002); end
  def test_lever_graphs_m4194; assert_in_epsilon(316.57047338884985, worksheet.lever_graphs_m4194, 0.002); end
  def test_lever_graphs_n4194; assert_in_epsilon(352.9544367138031, worksheet.lever_graphs_n4194, 0.002); end
  def test_lever_graphs_o4194; assert_in_epsilon(393.1917482165128, worksheet.lever_graphs_o4194, 0.002); end
  def test_lever_graphs_p4194; assert_in_epsilon(437.62866407845087, worksheet.lever_graphs_p4194, 0.002); end
  def test_lever_graphs_q4194; assert_in_epsilon(486.62991286807767, worksheet.lever_graphs_q4194, 0.002); end
  def test_lever_graphs_r4194; assert_in_epsilon(540.5766353509183, worksheet.lever_graphs_r4194, 0.002); end
  def test_lever_graphs_s4194; assert_in_epsilon(599.8633181353757, worksheet.lever_graphs_s4194, 0.002); end
  def test_lever_graphs_b4195; assert_equal("International", worksheet.lever_graphs_b4195); end
  def test_lever_graphs_c4195; assert_in_epsilon(4.0, worksheet.lever_graphs_c4195, 0.002); end
  def test_lever_graphs_d4195; assert_equal("International fast growth", worksheet.lever_graphs_d4195); end
  def test_lever_graphs_k4195; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k4195, 0.002); end
  def test_lever_graphs_l4195; assert_in_epsilon(283.713336135204, worksheet.lever_graphs_l4195, 0.002); end
  def test_lever_graphs_m4195; assert_in_epsilon(290.22541306523937, worksheet.lever_graphs_m4195, 0.002); end
  def test_lever_graphs_n4195; assert_in_epsilon(296.1885793292202, worksheet.lever_graphs_n4195, 0.002); end
  def test_lever_graphs_o4195; assert_in_epsilon(301.4888762991364, worksheet.lever_graphs_o4195, 0.002); end
  def test_lever_graphs_p4195; assert_in_epsilon(305.9986965766369, worksheet.lever_graphs_p4195, 0.002); end
  def test_lever_graphs_q4195; assert_in_epsilon(309.57540319174035, worksheet.lever_graphs_q4195, 0.002); end
  def test_lever_graphs_r4195; assert_in_epsilon(312.0598202740997, worksheet.lever_graphs_r4195, 0.002); end
  def test_lever_graphs_s4195; assert_in_epsilon(313.2745838143587, worksheet.lever_graphs_s4195, 0.002); end
  def test_webtool_graphs_b39; assert_equal("Area", worksheet.webtool_graphs_b39); end
  def test_webtool_graphs_c39; assert_equal("Description", worksheet.webtool_graphs_c39); end
  def test_webtool_graphs_d39; assert_equal("1975", worksheet.webtool_graphs_d39); end
  def test_webtool_graphs_e39; assert_equal("1980", worksheet.webtool_graphs_e39); end
  def test_webtool_graphs_f39; assert_equal("1985", worksheet.webtool_graphs_f39); end
  def test_webtool_graphs_g39; assert_equal("1990", worksheet.webtool_graphs_g39); end
  def test_webtool_graphs_h39; assert_equal("1995", worksheet.webtool_graphs_h39); end
  def test_webtool_graphs_i39; assert_equal("2000", worksheet.webtool_graphs_i39); end
  def test_webtool_graphs_j39; assert_equal("2005", worksheet.webtool_graphs_j39); end
  def test_webtool_graphs_k39; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k39, 0.002); end
  def test_webtool_graphs_l39; assert_equal("2011", worksheet.webtool_graphs_l39); end
  def test_webtool_graphs_m39; assert_equal("2015", worksheet.webtool_graphs_m39); end
  def test_webtool_graphs_n39; assert_equal("2020", worksheet.webtool_graphs_n39); end
  def test_webtool_graphs_o39; assert_equal("2025", worksheet.webtool_graphs_o39); end
  def test_webtool_graphs_p39; assert_equal("2030", worksheet.webtool_graphs_p39); end
  def test_webtool_graphs_q39; assert_equal("2035", worksheet.webtool_graphs_q39); end
  def test_webtool_graphs_r39; assert_equal("2040", worksheet.webtool_graphs_r39); end
  def test_webtool_graphs_s39; assert_equal("2045", worksheet.webtool_graphs_s39); end
  def test_webtool_graphs_t39; assert_equal("2050", worksheet.webtool_graphs_t39); end
  def test_webtool_graphs_b40; assert_equal("Urban", worksheet.webtool_graphs_b40); end
  def test_webtool_graphs_c40; assert_equal("urban", worksheet.webtool_graphs_c40); end
  def test_webtool_graphs_l40; assert_in_epsilon(5.958364024436915, worksheet.webtool_graphs_l40, 0.002); end
  def test_webtool_graphs_m40; assert_in_epsilon(6.195, worksheet.webtool_graphs_m40, 0.002); end
  def test_webtool_graphs_n40; assert_in_epsilon(6.83524860608716, worksheet.webtool_graphs_n40, 0.002); end
  def test_webtool_graphs_o40; assert_in_epsilon(7.47549721217432, worksheet.webtool_graphs_o40, 0.002); end
  def test_webtool_graphs_p40; assert_in_epsilon(8.115745818261479, worksheet.webtool_graphs_p40, 0.002); end
  def test_webtool_graphs_q40; assert_in_epsilon(8.75599442434864, worksheet.webtool_graphs_q40, 0.002); end
  def test_webtool_graphs_r40; assert_in_epsilon(9.3962430304358, worksheet.webtool_graphs_r40, 0.002); end
  def test_webtool_graphs_s40; assert_in_epsilon(10.036491636522957, worksheet.webtool_graphs_s40, 0.002); end
  def test_webtool_graphs_t40; assert_in_epsilon(10.67674024261012, worksheet.webtool_graphs_t40, 0.002); end
  def test_webtool_graphs_b41; assert_equal("Rural", worksheet.webtool_graphs_b41); end
  def test_webtool_graphs_c41; assert_equal("rural", worksheet.webtool_graphs_c41); end
  def test_webtool_graphs_l41; assert_in_epsilon(3.4791820122184576, worksheet.webtool_graphs_l41, 0.002); end
  def test_webtool_graphs_m41; assert_in_epsilon(3.878, worksheet.webtool_graphs_m41, 0.002); end
  def test_webtool_graphs_n41; assert_in_epsilon(4.536787651414231, worksheet.webtool_graphs_n41, 0.002); end
  def test_webtool_graphs_o41; assert_in_epsilon(5.195575302828464, worksheet.webtool_graphs_o41, 0.002); end
  def test_webtool_graphs_p41; assert_in_epsilon(5.854362954242696, worksheet.webtool_graphs_p41, 0.002); end
  def test_webtool_graphs_q41; assert_in_epsilon(6.513150605656928, worksheet.webtool_graphs_q41, 0.002); end
  def test_webtool_graphs_r41; assert_in_epsilon(7.171938257071161, worksheet.webtool_graphs_r41, 0.002); end
  def test_webtool_graphs_s41; assert_in_epsilon(7.830725908485391, worksheet.webtool_graphs_s41, 0.002); end
  def test_webtool_graphs_t41; assert_in_epsilon(8.489513559899624, worksheet.webtool_graphs_t41, 0.002); end
  def test_webtool_graphs_b457; assert_equal("Type of city", worksheet.webtool_graphs_b457); end
  def test_webtool_graphs_c457; assert_equal("Energy description", worksheet.webtool_graphs_c457); end
  def test_webtool_graphs_d457; assert_equal("1975", worksheet.webtool_graphs_d457); end
  def test_webtool_graphs_e457; assert_equal("1980", worksheet.webtool_graphs_e457); end
  def test_webtool_graphs_f457; assert_equal("1985", worksheet.webtool_graphs_f457); end
  def test_webtool_graphs_g457; assert_equal("1990", worksheet.webtool_graphs_g457); end
  def test_webtool_graphs_h457; assert_equal("1995", worksheet.webtool_graphs_h457); end
  def test_webtool_graphs_i457; assert_equal("2000", worksheet.webtool_graphs_i457); end
  def test_webtool_graphs_j457; assert_equal("2005", worksheet.webtool_graphs_j457); end
  def test_webtool_graphs_k457; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k457, 0.002); end
  def test_webtool_graphs_l457; assert_equal("2011", worksheet.webtool_graphs_l457); end
  def test_webtool_graphs_m457; assert_equal("2015", worksheet.webtool_graphs_m457); end
  def test_webtool_graphs_n457; assert_equal("2020", worksheet.webtool_graphs_n457); end
  def test_webtool_graphs_o457; assert_equal("2025", worksheet.webtool_graphs_o457); end
  def test_webtool_graphs_p457; assert_equal("2030", worksheet.webtool_graphs_p457); end
  def test_webtool_graphs_q457; assert_equal("2035", worksheet.webtool_graphs_q457); end
  def test_webtool_graphs_r457; assert_equal("2040", worksheet.webtool_graphs_r457); end
  def test_webtool_graphs_s457; assert_equal("2045", worksheet.webtool_graphs_s457); end
  def test_webtool_graphs_t457; assert_equal("2050", worksheet.webtool_graphs_t457); end
  def test_webtool_graphs_b458; assert_equal("All", worksheet.webtool_graphs_b458); end
  def test_webtool_graphs_c458; assert_equal("Global Heating", worksheet.webtool_graphs_c458); end
  def test_webtool_graphs_j458; assert_equal("", worksheet.webtool_graphs_j458); end
  def test_webtool_graphs_l458; assert_in_epsilon(33.96364333779204, worksheet.webtool_graphs_l458, 0.002); end
  def test_webtool_graphs_m458; assert_in_epsilon(35.98007831980968, worksheet.webtool_graphs_m458, 0.002); end
  def test_webtool_graphs_n458; assert_in_epsilon(37.61962265884288, worksheet.webtool_graphs_n458, 0.002); end
  def test_webtool_graphs_o458; assert_in_epsilon(38.77239322361575, worksheet.webtool_graphs_o458, 0.002); end
  def test_webtool_graphs_p458; assert_in_epsilon(39.56971897583792, worksheet.webtool_graphs_p458, 0.002); end
  def test_webtool_graphs_q458; assert_in_epsilon(40.26909518130942, worksheet.webtool_graphs_q458, 0.002); end
  def test_webtool_graphs_r458; assert_in_epsilon(40.64173605384355, worksheet.webtool_graphs_r458, 0.002); end
  def test_webtool_graphs_s458; assert_in_epsilon(41.00742256977274, worksheet.webtool_graphs_s458, 0.002); end
  def test_webtool_graphs_t458; assert_in_epsilon(41.064409732302344, worksheet.webtool_graphs_t458, 0.002); end
  def test_webtool_graphs_b459; assert_equal("All", worksheet.webtool_graphs_b459); end
  def test_webtool_graphs_c459; assert_equal("Global Cooling", worksheet.webtool_graphs_c459); end
  def test_webtool_graphs_l459; assert_in_epsilon(4.628649152766226, worksheet.webtool_graphs_l459, 0.002); end
  def test_webtool_graphs_m459; assert_in_epsilon(5.508123862979256, worksheet.webtool_graphs_m459, 0.002); end
  def test_webtool_graphs_n459; assert_in_epsilon(6.667254454798308, worksheet.webtool_graphs_n459, 0.002); end
  def test_webtool_graphs_o459; assert_in_epsilon(7.919580104688159, worksheet.webtool_graphs_o459, 0.002); end
  def test_webtool_graphs_p459; assert_in_epsilon(9.239446401541512, worksheet.webtool_graphs_p459, 0.002); end
  def test_webtool_graphs_q459; assert_in_epsilon(10.5794858858279, worksheet.webtool_graphs_q459, 0.002); end
  def test_webtool_graphs_r459; assert_in_epsilon(11.942289776811243, worksheet.webtool_graphs_r459, 0.002); end
  def test_webtool_graphs_s459; assert_in_epsilon(13.26940759740812, worksheet.webtool_graphs_s459, 0.002); end
  def test_webtool_graphs_t459; assert_in_epsilon(14.569813639526295, worksheet.webtool_graphs_t459, 0.002); end
  def test_webtool_graphs_b460; assert_equal("All", worksheet.webtool_graphs_b460); end
  def test_webtool_graphs_c460; assert_equal("Global Hot water", worksheet.webtool_graphs_c460); end
  def test_webtool_graphs_l460; assert_in_epsilon(20.64814831202377, worksheet.webtool_graphs_l460, 0.002); end
  def test_webtool_graphs_m460; assert_in_epsilon(22.394160941356258, worksheet.webtool_graphs_m460, 0.002); end
  def test_webtool_graphs_n460; assert_in_epsilon(24.21434562786983, worksheet.webtool_graphs_n460, 0.002); end
  def test_webtool_graphs_o460; assert_in_epsilon(26.0561334104507, worksheet.webtool_graphs_o460, 0.002); end
  def test_webtool_graphs_p460; assert_in_epsilon(27.83623346840015, worksheet.webtool_graphs_p460, 0.002); end
  def test_webtool_graphs_q460; assert_in_epsilon(29.438674871919414, worksheet.webtool_graphs_q460, 0.002); end
  def test_webtool_graphs_r460; assert_in_epsilon(30.9697524684772, worksheet.webtool_graphs_r460, 0.002); end
  def test_webtool_graphs_s460; assert_in_epsilon(32.31285848259039, worksheet.webtool_graphs_s460, 0.002); end
  def test_webtool_graphs_t460; assert_in_epsilon(33.56120342366044, worksheet.webtool_graphs_t460, 0.002); end
  def test_webtool_graphs_b461; assert_equal("All", worksheet.webtool_graphs_b461); end
  def test_webtool_graphs_c461; assert_equal("Global Appliances", worksheet.webtool_graphs_c461); end
  def test_webtool_graphs_l461; assert_in_epsilon(21.62619307226096, worksheet.webtool_graphs_l461, 0.002); end
  def test_webtool_graphs_m461; assert_in_epsilon(23.899174139944783, worksheet.webtool_graphs_m461, 0.002); end
  def test_webtool_graphs_n461; assert_in_epsilon(27.067571793491442, worksheet.webtool_graphs_n461, 0.002); end
  def test_webtool_graphs_o461; assert_in_epsilon(30.39644301488814, worksheet.webtool_graphs_o461, 0.002); end
  def test_webtool_graphs_p461; assert_in_epsilon(33.8329169458412, worksheet.webtool_graphs_p461, 0.002); end
  def test_webtool_graphs_q461; assert_in_epsilon(37.281837369234196, worksheet.webtool_graphs_q461, 0.002); end
  def test_webtool_graphs_r461; assert_in_epsilon(40.793234088683285, worksheet.webtool_graphs_r461, 0.002); end
  def test_webtool_graphs_s461; assert_in_epsilon(44.250873216280944, worksheet.webtool_graphs_s461, 0.002); end
  def test_webtool_graphs_t461; assert_in_epsilon(47.71654121946111, worksheet.webtool_graphs_t461, 0.002); end
  def test_webtool_graphs_b462; assert_equal("All", worksheet.webtool_graphs_b462); end
  def test_webtool_graphs_c462; assert_equal("Global Cooking", worksheet.webtool_graphs_c462); end
  def test_webtool_graphs_l462; assert_in_epsilon(24.331916753204318, worksheet.webtool_graphs_l462, 0.002); end
  def test_webtool_graphs_m462; assert_in_epsilon(23.78985015284648, worksheet.webtool_graphs_m462, 0.002); end
  def test_webtool_graphs_n462; assert_in_epsilon(23.091597244588396, worksheet.webtool_graphs_n462, 0.002); end
  def test_webtool_graphs_o462; assert_in_epsilon(22.454904272297853, worksheet.webtool_graphs_o462, 0.002); end
  def test_webtool_graphs_p462; assert_in_epsilon(21.87488214421075, worksheet.webtool_graphs_p462, 0.002); end
  def test_webtool_graphs_q462; assert_in_epsilon(21.37216897178022, worksheet.webtool_graphs_q462, 0.002); end
  def test_webtool_graphs_r462; assert_in_epsilon(20.884099325371402, worksheet.webtool_graphs_r462, 0.002); end
  def test_webtool_graphs_s462; assert_in_epsilon(20.441218274116007, worksheet.webtool_graphs_s462, 0.002); end
  def test_webtool_graphs_t462; assert_in_epsilon(19.984897811369976, worksheet.webtool_graphs_t462, 0.002); end
  def test_webtool_graphs_b463; assert_equal("All", worksheet.webtool_graphs_b463); end
  def test_webtool_graphs_c463; assert_equal("Global Lighting", worksheet.webtool_graphs_c463); end
  def test_webtool_graphs_l463; assert_in_epsilon(7.473070166508138, worksheet.webtool_graphs_l463, 0.002); end
  def test_webtool_graphs_m463; assert_in_epsilon(8.566262925209225, worksheet.webtool_graphs_m463, 0.002); end
  def test_webtool_graphs_n463; assert_in_epsilon(9.811194387244015, worksheet.webtool_graphs_n463, 0.002); end
  def test_webtool_graphs_o463; assert_in_epsilon(11.12958037354394, worksheet.webtool_graphs_o463, 0.002); end
  def test_webtool_graphs_p463; assert_in_epsilon(12.50412607956317, worksheet.webtool_graphs_p463, 0.002); end
  def test_webtool_graphs_q463; assert_in_epsilon(13.90458056266454, worksheet.webtool_graphs_q463, 0.002); end
  def test_webtool_graphs_r463; assert_in_epsilon(15.34611636960499, worksheet.webtool_graphs_r463, 0.002); end
  def test_webtool_graphs_s463; assert_in_epsilon(16.79120803467979, worksheet.webtool_graphs_s463, 0.002); end
  def test_webtool_graphs_t463; assert_in_epsilon(18.25858204200655, worksheet.webtool_graphs_t463, 0.002); end
  def test_webtool_graphs_b464; assert_equal("All", worksheet.webtool_graphs_b464); end
  def test_webtool_graphs_c464; assert_equal("Global Other", worksheet.webtool_graphs_c464); end
  def test_webtool_graphs_l464; assert_in_epsilon(3.616434616787921, worksheet.webtool_graphs_l464, 0.002); end
  def test_webtool_graphs_m464; assert_in_epsilon(3.8144569151957914, worksheet.webtool_graphs_m464, 0.002); end
  def test_webtool_graphs_n464; assert_in_epsilon(4.034057217193223, worksheet.webtool_graphs_n464, 0.002); end
  def test_webtool_graphs_o464; assert_in_epsilon(4.236164285404575, worksheet.webtool_graphs_o464, 0.002); end
  def test_webtool_graphs_p464; assert_in_epsilon(4.419972571042802, worksheet.webtool_graphs_p464, 0.002); end
  def test_webtool_graphs_q464; assert_in_epsilon(4.585813855446565, worksheet.webtool_graphs_q464, 0.002); end
  def test_webtool_graphs_r464; assert_in_epsilon(4.732872642171436, worksheet.webtool_graphs_r464, 0.002); end
  def test_webtool_graphs_s464; assert_in_epsilon(4.859408605947314, worksheet.webtool_graphs_s464, 0.002); end
  def test_webtool_graphs_t464; assert_in_epsilon(4.9640425768252445, worksheet.webtool_graphs_t464, 0.002); end
  def test_webtool_graphs_b465; assert_equal("All", worksheet.webtool_graphs_b465); end
  def test_webtool_graphs_c465; assert_equal("Global Heat (delivered to end user)", worksheet.webtool_graphs_c465); end
  def test_webtool_graphs_l465; assert_in_epsilon(6.045102447345095, worksheet.webtool_graphs_l465, 0.002); end
  def test_webtool_graphs_m465; assert_in_epsilon(6.255871517445587, worksheet.webtool_graphs_m465, 0.002); end
  def test_webtool_graphs_n465; assert_in_epsilon(6.9171957698208155, worksheet.webtool_graphs_n465, 0.002); end
  def test_webtool_graphs_o465; assert_in_epsilon(7.521679874874498, worksheet.webtool_graphs_o465, 0.002); end
  def test_webtool_graphs_p465; assert_in_epsilon(8.1585115988557, worksheet.webtool_graphs_p465, 0.002); end
  def test_webtool_graphs_q465; assert_in_epsilon(8.805208507857934, worksheet.webtool_graphs_q465, 0.002); end
  def test_webtool_graphs_r465; assert_in_epsilon(9.538738074053272, worksheet.webtool_graphs_r465, 0.002); end
  def test_webtool_graphs_s465; assert_in_epsilon(10.298265936397497, worksheet.webtool_graphs_s465, 0.002); end
  def test_webtool_graphs_t465; assert_in_epsilon(11.166184388559063, worksheet.webtool_graphs_t465, 0.002); end
  def test_webtool_graphs_b466; assert_equal("All", worksheet.webtool_graphs_b466); end
  def test_webtool_graphs_c466; assert_equal("Global Distribution losses and own use", worksheet.webtool_graphs_c466); end
  def test_webtool_graphs_l466; assert_in_delta(0.7166873527496946, worksheet.webtool_graphs_l466, 0.002); end
  def test_webtool_graphs_m466; assert_in_delta(0.7474702433710707, worksheet.webtool_graphs_m466, 0.002); end
  def test_webtool_graphs_n466; assert_in_delta(0.8009045269673969, worksheet.webtool_graphs_n466, 0.002); end
  def test_webtool_graphs_o466; assert_in_delta(0.8468165940226342, worksheet.webtool_graphs_o466, 0.002); end
  def test_webtool_graphs_p466; assert_in_delta(0.8899139199509154, worksheet.webtool_graphs_p466, 0.002); end
  def test_webtool_graphs_q466; assert_in_delta(0.9275255753321616, worksheet.webtool_graphs_q466, 0.002); end
  def test_webtool_graphs_r466; assert_in_delta(0.9653229559383423, worksheet.webtool_graphs_r466, 0.002); end
  def test_webtool_graphs_s466; assert_in_delta(0.998302576590028, worksheet.webtool_graphs_s466, 0.002); end
  def test_webtool_graphs_t466; assert_in_epsilon(1.0328717759899924, worksheet.webtool_graphs_t466, 0.002); end
  def test_webtool_graphs_b467; assert_equal("All", worksheet.webtool_graphs_b467); end
  def test_webtool_graphs_c467; assert_equal("Global Conversion losses", worksheet.webtool_graphs_c467); end
  def test_webtool_graphs_l467; assert_in_delta(0.39594228845936885, worksheet.webtool_graphs_l467, 0.002); end
  def test_webtool_graphs_m467; assert_in_delta(0.4030017259280475, worksheet.webtool_graphs_m467, 0.002); end
  def test_webtool_graphs_n467; assert_in_delta(0.4188129387448516, worksheet.webtool_graphs_n467, 0.002); end
  def test_webtool_graphs_o467; assert_in_delta(0.42945487674201566, worksheet.webtool_graphs_o467, 0.002); end
  def test_webtool_graphs_p467; assert_in_delta(0.4376551451858005, worksheet.webtool_graphs_p467, 0.002); end
  def test_webtool_graphs_q467; assert_in_delta(0.44232124584483534, worksheet.webtool_graphs_q467, 0.002); end
  def test_webtool_graphs_r467; assert_in_delta(0.4463647524540467, worksheet.webtool_graphs_r467, 0.002); end
  def test_webtool_graphs_s467; assert_in_delta(0.4475775391178055, worksheet.webtool_graphs_s467, 0.002); end
  def test_webtool_graphs_t467; assert_in_delta(0.44898452132591293, worksheet.webtool_graphs_t467, 0.002); end
  def test_webtool_graphs_b468; assert_equal("TOTAL", worksheet.webtool_graphs_b468); end
  def test_webtool_graphs_c468; assert_equal("TOTAL", worksheet.webtool_graphs_c468); end
  def test_webtool_graphs_l468; assert_in_epsilon(123.44578749989753, worksheet.webtool_graphs_l468, 0.002); end
  def test_webtool_graphs_m468; assert_in_epsilon(131.35845074408618, worksheet.webtool_graphs_m468, 0.002); end
  def test_webtool_graphs_n468; assert_in_epsilon(140.64255661956116, worksheet.webtool_graphs_n468, 0.002); end
  def test_webtool_graphs_o468; assert_in_epsilon(149.7631500305283, worksheet.webtool_graphs_o468, 0.002); end
  def test_webtool_graphs_p468; assert_in_epsilon(158.76337725042993, worksheet.webtool_graphs_p468, 0.002); end
  def test_webtool_graphs_q468; assert_in_epsilon(167.60671202721718, worksheet.webtool_graphs_q468, 0.002); end
  def test_webtool_graphs_r468; assert_in_epsilon(176.2605265074088, worksheet.webtool_graphs_r468, 0.002); end
  def test_webtool_graphs_s468; assert_in_epsilon(184.67654283290065, worksheet.webtool_graphs_s468, 0.002); end
  def test_webtool_graphs_t468; assert_in_epsilon(192.7675311310269, worksheet.webtool_graphs_t468, 0.002); end
  def test_webtool_graphs_b64; assert_equal("Area", worksheet.webtool_graphs_b64); end
  def test_webtool_graphs_c64; assert_equal("calculation from table above", worksheet.webtool_graphs_c64); end
  def test_webtool_graphs_d64; assert_equal("1975", worksheet.webtool_graphs_d64); end
  def test_webtool_graphs_e64; assert_equal("1980", worksheet.webtool_graphs_e64); end
  def test_webtool_graphs_f64; assert_equal("1985", worksheet.webtool_graphs_f64); end
  def test_webtool_graphs_g64; assert_equal("1990", worksheet.webtool_graphs_g64); end
  def test_webtool_graphs_h64; assert_equal("1995", worksheet.webtool_graphs_h64); end
  def test_webtool_graphs_i64; assert_equal("2000", worksheet.webtool_graphs_i64); end
  def test_webtool_graphs_j64; assert_equal("2005", worksheet.webtool_graphs_j64); end
  def test_webtool_graphs_k64; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k64, 0.002); end
  def test_webtool_graphs_l64; assert_equal("2011", worksheet.webtool_graphs_l64); end
  def test_webtool_graphs_m64; assert_equal("2015", worksheet.webtool_graphs_m64); end
  def test_webtool_graphs_n64; assert_equal("2020", worksheet.webtool_graphs_n64); end
  def test_webtool_graphs_o64; assert_equal("2025", worksheet.webtool_graphs_o64); end
  def test_webtool_graphs_p64; assert_equal("2030", worksheet.webtool_graphs_p64); end
  def test_webtool_graphs_q64; assert_equal("2035", worksheet.webtool_graphs_q64); end
  def test_webtool_graphs_r64; assert_equal("2040", worksheet.webtool_graphs_r64); end
  def test_webtool_graphs_s64; assert_equal("2045", worksheet.webtool_graphs_s64); end
  def test_webtool_graphs_t64; assert_equal("2050", worksheet.webtool_graphs_t64); end
  def test_webtool_graphs_b65; assert_equal("Urban", worksheet.webtool_graphs_b65); end
  def test_webtool_graphs_c65; assert_equal("Urban", worksheet.webtool_graphs_c65); end
  def test_webtool_graphs_l65; assert_in_epsilon(11195.511648122409, worksheet.webtool_graphs_l65, 0.002); end
  def test_webtool_graphs_m65; assert_in_epsilon(11067.29024409641, worksheet.webtool_graphs_m65, 0.002); end
  def test_webtool_graphs_n65; assert_in_epsilon(10907.710771359301, worksheet.webtool_graphs_n65, 0.002); end
  def test_webtool_graphs_o65; assert_in_epsilon(10759.627973020988, worksheet.webtool_graphs_o65, 0.002); end
  def test_webtool_graphs_p65; assert_in_epsilon(10624.548908059305, worksheet.webtool_graphs_p65, 0.002); end
  def test_webtool_graphs_q65; assert_in_epsilon(10503.983347943025, worksheet.webtool_graphs_q65, 0.002); end
  def test_webtool_graphs_r65; assert_in_epsilon(10384.816142162628, worksheet.webtool_graphs_r65, 0.002); end
  def test_webtool_graphs_s65; assert_in_epsilon(10268.419559271455, worksheet.webtool_graphs_s65, 0.002); end
  def test_webtool_graphs_t65; assert_in_epsilon(10144.61753107451, worksheet.webtool_graphs_t65, 0.002); end
  def test_webtool_graphs_b66; assert_equal("Rural", worksheet.webtool_graphs_b66); end
  def test_webtool_graphs_c66; assert_equal("Rural", worksheet.webtool_graphs_c66); end
  def test_webtool_graphs_l66; assert_in_epsilon(9232.336409801414, worksheet.webtool_graphs_l66, 0.002); end
  def test_webtool_graphs_m66; assert_in_epsilon(9063.882271946984, worksheet.webtool_graphs_m66, 0.002); end
  def test_webtool_graphs_n66; assert_in_epsilon(8860.31605571195, worksheet.webtool_graphs_n66, 0.002); end
  def test_webtool_graphs_o66; assert_in_epsilon(8725.53786252586, worksheet.webtool_graphs_o66, 0.002); end
  def test_webtool_graphs_p66; assert_in_epsilon(8639.386963948735, worksheet.webtool_graphs_p66, 0.002); end
  def test_webtool_graphs_q66; assert_in_epsilon(8584.122564866493, worksheet.webtool_graphs_q66, 0.002); end
  def test_webtool_graphs_r66; assert_in_epsilon(8552.924833778674, worksheet.webtool_graphs_r66, 0.002); end
  def test_webtool_graphs_s66; assert_in_epsilon(8538.509895207988, worksheet.webtool_graphs_s66, 0.002); end
  def test_webtool_graphs_t66; assert_in_epsilon(8535.15619735225, worksheet.webtool_graphs_t66, 0.002); end
  def test_webtool_graphs_b55; assert_equal("Area", worksheet.webtool_graphs_b55); end
  def test_webtool_graphs_c55; assert_equal("Tech description", worksheet.webtool_graphs_c55); end
  def test_webtool_graphs_d55; assert_equal("1975", worksheet.webtool_graphs_d55); end
  def test_webtool_graphs_e55; assert_equal("1980", worksheet.webtool_graphs_e55); end
  def test_webtool_graphs_f55; assert_equal("1985", worksheet.webtool_graphs_f55); end
  def test_webtool_graphs_g55; assert_equal("1990", worksheet.webtool_graphs_g55); end
  def test_webtool_graphs_h55; assert_equal("1995", worksheet.webtool_graphs_h55); end
  def test_webtool_graphs_i55; assert_equal("2000", worksheet.webtool_graphs_i55); end
  def test_webtool_graphs_j55; assert_equal("2005", worksheet.webtool_graphs_j55); end
  def test_webtool_graphs_k55; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k55, 0.002); end
  def test_webtool_graphs_l55; assert_equal("2011", worksheet.webtool_graphs_l55); end
  def test_webtool_graphs_m55; assert_equal("2015", worksheet.webtool_graphs_m55); end
  def test_webtool_graphs_n55; assert_equal("2020", worksheet.webtool_graphs_n55); end
  def test_webtool_graphs_o55; assert_equal("2025", worksheet.webtool_graphs_o55); end
  def test_webtool_graphs_p55; assert_equal("2030", worksheet.webtool_graphs_p55); end
  def test_webtool_graphs_q55; assert_equal("2035", worksheet.webtool_graphs_q55); end
  def test_webtool_graphs_r55; assert_equal("2040", worksheet.webtool_graphs_r55); end
  def test_webtool_graphs_s55; assert_equal("2045", worksheet.webtool_graphs_s55); end
  def test_webtool_graphs_t55; assert_equal("2050", worksheet.webtool_graphs_t55); end
  def test_webtool_graphs_b56; assert_equal("Urban", worksheet.webtool_graphs_b56); end
  def test_webtool_graphs_c56; assert_equal("Urban", worksheet.webtool_graphs_c56); end
  def test_webtool_graphs_l56; assert_in_epsilon(58.55019171635433, worksheet.webtool_graphs_l56, 0.002); end
  def test_webtool_graphs_m56; assert_in_epsilon(63.852725174365865, worksheet.webtool_graphs_m56, 0.002); end
  def test_webtool_graphs_n56; assert_in_epsilon(70.07827831733599, worksheet.webtool_graphs_n56, 0.002); end
  def test_webtool_graphs_o56; assert_in_epsilon(76.19276936300206, worksheet.webtool_graphs_o56, 0.002); end
  def test_webtool_graphs_p56; assert_in_epsilon(82.19158070033811, worksheet.webtool_graphs_p56, 0.002); end
  def test_webtool_graphs_q56; assert_in_epsilon(88.09742687566708, worksheet.webtool_graphs_q56, 0.002); end
  def test_webtool_graphs_r56; assert_in_epsilon(93.84271569543222, worksheet.webtool_graphs_r56, 0.002); end
  def test_webtool_graphs_s56; assert_in_epsilon(99.59563877802695, worksheet.webtool_graphs_s56, 0.002); end
  def test_webtool_graphs_t56; assert_in_epsilon(105.22274726989309, worksheet.webtool_graphs_t56, 0.002); end
  def test_webtool_graphs_b57; assert_equal("Rural", worksheet.webtool_graphs_b57); end
  def test_webtool_graphs_c57; assert_equal("Rural", worksheet.webtool_graphs_c57); end
  def test_webtool_graphs_l57; assert_in_epsilon(27.707866917741953, worksheet.webtool_graphs_l57, 0.002); end
  def test_webtool_graphs_m57; assert_in_epsilon(27.82709524006902, worksheet.webtool_graphs_m57, 0.002); end
  def test_webtool_graphs_n57; assert_in_epsilon(27.743273528071335, worksheet.webtool_graphs_n57, 0.002); end
  def test_webtool_graphs_o57; assert_in_epsilon(27.770667191994285, worksheet.webtool_graphs_o57, 0.002); end
  def test_webtool_graphs_p57; assert_in_epsilon(27.875777981537965, worksheet.webtool_graphs_p57, 0.002); end
  def test_webtool_graphs_q57; assert_in_epsilon(28.031297308700214, worksheet.webtool_graphs_q57, 0.002); end
  def test_webtool_graphs_r57; assert_in_epsilon(28.202751563885318, worksheet.webtool_graphs_r57, 0.002); end
  def test_webtool_graphs_s57; assert_in_epsilon(28.266950327445674, worksheet.webtool_graphs_s57, 0.002); end
  def test_webtool_graphs_t57; assert_in_epsilon(28.201132420808218, worksheet.webtool_graphs_t57, 0.002); end
  def test_webtool_graphs_b58; assert_equal("Non residential", worksheet.webtool_graphs_b58); end
  def test_webtool_graphs_c58; assert_equal("Non residential", worksheet.webtool_graphs_c58); end
  def test_webtool_graphs_l58; assert_in_epsilon(30.029996777247096, worksheet.webtool_graphs_l58, 0.002); end
  def test_webtool_graphs_m58; assert_in_epsilon(32.272286842906595, worksheet.webtool_graphs_m58, 0.002); end
  def test_webtool_graphs_n58; assert_in_epsilon(34.684091538620784, worksheet.webtool_graphs_n58, 0.002); end
  def test_webtool_graphs_o58; assert_in_epsilon(37.00176212989276, worksheet.webtool_graphs_o58, 0.002); end
  def test_webtool_graphs_p58; assert_in_epsilon(39.20993790456144, worksheet.webtool_graphs_p58, 0.002); end
  def test_webtool_graphs_q58; assert_in_epsilon(41.302932513814966, worksheet.webtool_graphs_q58, 0.002); end
  def test_webtool_graphs_r58; assert_in_epsilon(43.26463346564557, worksheet.webtool_graphs_r58, 0.002); end
  def test_webtool_graphs_s58; assert_in_epsilon(45.069807675322714, worksheet.webtool_graphs_s58, 0.002); end
  def test_webtool_graphs_t58; assert_in_epsilon(46.69561075445066, worksheet.webtool_graphs_t58, 0.002); end
  def test_webtool_graphs_b442; assert_equal("Type of city", worksheet.webtool_graphs_b442); end
  def test_webtool_graphs_c442; assert_equal("Energy description", worksheet.webtool_graphs_c442); end
  def test_webtool_graphs_d442; assert_equal("1975", worksheet.webtool_graphs_d442); end
  def test_webtool_graphs_e442; assert_equal("1980", worksheet.webtool_graphs_e442); end
  def test_webtool_graphs_f442; assert_equal("1985", worksheet.webtool_graphs_f442); end
  def test_webtool_graphs_g442; assert_equal("1990", worksheet.webtool_graphs_g442); end
  def test_webtool_graphs_h442; assert_equal("1995", worksheet.webtool_graphs_h442); end
  def test_webtool_graphs_i442; assert_equal("2000", worksheet.webtool_graphs_i442); end
  def test_webtool_graphs_j442; assert_equal("2005", worksheet.webtool_graphs_j442); end
  def test_webtool_graphs_k442; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k442, 0.002); end
  def test_webtool_graphs_l442; assert_equal("2011", worksheet.webtool_graphs_l442); end
  def test_webtool_graphs_m442; assert_equal("2015", worksheet.webtool_graphs_m442); end
  def test_webtool_graphs_n442; assert_equal("2020", worksheet.webtool_graphs_n442); end
  def test_webtool_graphs_o442; assert_equal("2025", worksheet.webtool_graphs_o442); end
  def test_webtool_graphs_p442; assert_equal("2030", worksheet.webtool_graphs_p442); end
  def test_webtool_graphs_q442; assert_equal("2035", worksheet.webtool_graphs_q442); end
  def test_webtool_graphs_r442; assert_equal("2040", worksheet.webtool_graphs_r442); end
  def test_webtool_graphs_s442; assert_equal("2045", worksheet.webtool_graphs_s442); end
  def test_webtool_graphs_t442; assert_equal("2050", worksheet.webtool_graphs_t442); end
  def test_webtool_graphs_b443; assert_equal("All", worksheet.webtool_graphs_b443); end
  def test_webtool_graphs_c443; assert_equal("Global Solar", worksheet.webtool_graphs_c443); end
  def test_webtool_graphs_j443; assert_equal("", worksheet.webtool_graphs_j443); end
  def test_webtool_graphs_l443; assert_in_epsilon(1.402397457347961, worksheet.webtool_graphs_l443, 0.002); end
  def test_webtool_graphs_m443; assert_in_epsilon(1.499936061157466, worksheet.webtool_graphs_m443, 0.002); end
  def test_webtool_graphs_n443; assert_in_epsilon(1.6092318816244942, worksheet.webtool_graphs_n443, 0.002); end
  def test_webtool_graphs_o443; assert_in_epsilon(1.7290249019810442, worksheet.webtool_graphs_o443, 0.002); end
  def test_webtool_graphs_p443; assert_in_epsilon(1.8567643772149665, worksheet.webtool_graphs_p443, 0.002); end
  def test_webtool_graphs_q443; assert_in_epsilon(1.9861753862764309, worksheet.webtool_graphs_q443, 0.002); end
  def test_webtool_graphs_r443; assert_in_epsilon(2.12539371697905, worksheet.webtool_graphs_r443, 0.002); end
  def test_webtool_graphs_s443; assert_in_epsilon(2.2661251072339073, worksheet.webtool_graphs_s443, 0.002); end
  def test_webtool_graphs_t443; assert_in_epsilon(2.4148868038843307, worksheet.webtool_graphs_t443, 0.002); end
  def test_webtool_graphs_b444; assert_equal("All", worksheet.webtool_graphs_b444); end
  def test_webtool_graphs_c444; assert_equal("Global Environmental heat", worksheet.webtool_graphs_c444); end
  def test_webtool_graphs_l444; assert_in_epsilon(4.838497586627763, worksheet.webtool_graphs_l444, 0.002); end
  def test_webtool_graphs_m444; assert_in_epsilon(5.562419167294958, worksheet.webtool_graphs_m444, 0.002); end
  def test_webtool_graphs_n444; assert_in_epsilon(6.480140989923419, worksheet.webtool_graphs_n444, 0.002); end
  def test_webtool_graphs_o444; assert_in_epsilon(7.444773673480817, worksheet.webtool_graphs_o444, 0.002); end
  def test_webtool_graphs_p444; assert_in_epsilon(8.437732211728308, worksheet.webtool_graphs_p444, 0.002); end
  def test_webtool_graphs_q444; assert_in_epsilon(9.425816566120496, worksheet.webtool_graphs_q444, 0.002); end
  def test_webtool_graphs_r444; assert_in_epsilon(10.415256698254726, worksheet.webtool_graphs_r444, 0.002); end
  def test_webtool_graphs_s444; assert_in_epsilon(11.366520423435663, worksheet.webtool_graphs_s444, 0.002); end
  def test_webtool_graphs_t444; assert_in_epsilon(12.290810526138456, worksheet.webtool_graphs_t444, 0.002); end
  def test_webtool_graphs_b445; assert_equal("All", worksheet.webtool_graphs_b445); end
  def test_webtool_graphs_c445; assert_equal("Global Heat (supplied to grid)", worksheet.webtool_graphs_c445); end
  def test_webtool_graphs_l445; assert_in_epsilon(9.643214837702256, worksheet.webtool_graphs_l445, 0.002); end
  def test_webtool_graphs_m445; assert_in_epsilon(10.110305559017243, worksheet.webtool_graphs_m445, 0.002); end
  def test_webtool_graphs_n445; assert_in_epsilon(10.903909943427537, worksheet.webtool_graphs_n445, 0.002); end
  def test_webtool_graphs_o445; assert_in_epsilon(11.603891656243142, worksheet.webtool_graphs_o445, 0.002); end
  def test_webtool_graphs_p445; assert_in_epsilon(12.273177151625037, worksheet.webtool_graphs_p445, 0.002); end
  def test_webtool_graphs_q445; assert_in_epsilon(12.873947236062254, worksheet.webtool_graphs_q445, 0.002); end
  def test_webtool_graphs_r445; assert_in_epsilon(13.48396609340378, worksheet.webtool_graphs_r445, 0.002); end
  def test_webtool_graphs_s445; assert_in_epsilon(14.032949971064173, worksheet.webtool_graphs_s445, 0.002); end
  def test_webtool_graphs_t445; assert_in_epsilon(14.610253843808739, worksheet.webtool_graphs_t445, 0.002); end
  def test_webtool_graphs_b446; assert_equal("All", worksheet.webtool_graphs_b446); end
  def test_webtool_graphs_c446; assert_equal("Global Liquid hydrocarbons", worksheet.webtool_graphs_c446); end
  def test_webtool_graphs_l446; assert_in_epsilon(10.013419080141805, worksheet.webtool_graphs_l446, 0.002); end
  def test_webtool_graphs_m446; assert_in_epsilon(10.605305995842652, worksheet.webtool_graphs_m446, 0.002); end
  def test_webtool_graphs_n446; assert_in_epsilon(11.108683419173698, worksheet.webtool_graphs_n446, 0.002); end
  def test_webtool_graphs_o446; assert_in_epsilon(11.5496216719384, worksheet.webtool_graphs_o446, 0.002); end
  def test_webtool_graphs_p446; assert_in_epsilon(11.910674747246487, worksheet.webtool_graphs_p446, 0.002); end
  def test_webtool_graphs_q446; assert_in_epsilon(12.156375488758277, worksheet.webtool_graphs_q446, 0.002); end
  def test_webtool_graphs_r446; assert_in_epsilon(12.329380007401593, worksheet.webtool_graphs_r446, 0.002); end
  def test_webtool_graphs_s446; assert_in_epsilon(12.393651796723477, worksheet.webtool_graphs_s446, 0.002); end
  def test_webtool_graphs_t446; assert_in_epsilon(12.393960587198128, worksheet.webtool_graphs_t446, 0.002); end
  def test_webtool_graphs_b447; assert_equal("All", worksheet.webtool_graphs_b447); end
  def test_webtool_graphs_c447; assert_equal("Global Solid hydrocarbons", worksheet.webtool_graphs_c447); end
  def test_webtool_graphs_j447; assert_equal("", worksheet.webtool_graphs_j447); end
  def test_webtool_graphs_l447; assert_in_epsilon(16.515138578626978, worksheet.webtool_graphs_l447, 0.002); end
  def test_webtool_graphs_m447; assert_in_epsilon(17.35025833604474, worksheet.webtool_graphs_m447, 0.002); end
  def test_webtool_graphs_n447; assert_in_epsilon(17.99389850865788, worksheet.webtool_graphs_n447, 0.002); end
  def test_webtool_graphs_o447; assert_in_epsilon(18.543282678506046, worksheet.webtool_graphs_o447, 0.002); end
  def test_webtool_graphs_p447; assert_in_epsilon(18.9727962854486, worksheet.webtool_graphs_p447, 0.002); end
  def test_webtool_graphs_q447; assert_in_epsilon(19.265455529305854, worksheet.webtool_graphs_q447, 0.002); end
  def test_webtool_graphs_r447; assert_in_epsilon(19.459753174347934, worksheet.webtool_graphs_r447, 0.002); end
  def test_webtool_graphs_s447; assert_in_epsilon(19.546307442014285, worksheet.webtool_graphs_s447, 0.002); end
  def test_webtool_graphs_t447; assert_in_epsilon(19.51563374825137, worksheet.webtool_graphs_t447, 0.002); end
  def test_webtool_graphs_b448; assert_equal("All", worksheet.webtool_graphs_b448); end
  def test_webtool_graphs_c448; assert_equal("Global Traditional biomass", worksheet.webtool_graphs_c448); end
  def test_webtool_graphs_l448; assert_in_epsilon(21.54205008268555, worksheet.webtool_graphs_l448, 0.002); end
  def test_webtool_graphs_m448; assert_in_epsilon(20.13743480733188, worksheet.webtool_graphs_m448, 0.002); end
  def test_webtool_graphs_n448; assert_in_epsilon(18.56666346103665, worksheet.webtool_graphs_n448, 0.002); end
  def test_webtool_graphs_o448; assert_in_epsilon(16.802531298057502, worksheet.webtool_graphs_o448, 0.002); end
  def test_webtool_graphs_p448; assert_in_epsilon(15.053791367133272, worksheet.webtool_graphs_p448, 0.002); end
  def test_webtool_graphs_q448; assert_in_epsilon(13.706714265203015, worksheet.webtool_graphs_q448, 0.002); end
  def test_webtool_graphs_r448; assert_in_epsilon(12.38033908278944, worksheet.webtool_graphs_r448, 0.002); end
  def test_webtool_graphs_s448; assert_in_epsilon(11.519817037777669, worksheet.webtool_graphs_s448, 0.002); end
  def test_webtool_graphs_t448; assert_in_epsilon(10.674192097173995, worksheet.webtool_graphs_t448, 0.002); end
  def test_webtool_graphs_b449; assert_equal("All", worksheet.webtool_graphs_b449); end
  def test_webtool_graphs_c449; assert_equal("Global Gaseous hydrocarbons", worksheet.webtool_graphs_c449); end
  def test_webtool_graphs_l449; assert_in_epsilon(22.695227630580543, worksheet.webtool_graphs_l449, 0.002); end
  def test_webtool_graphs_m449; assert_in_epsilon(24.729977661147153, worksheet.webtool_graphs_m449, 0.002); end
  def test_webtool_graphs_n449; assert_in_epsilon(26.72211487296522, worksheet.webtool_graphs_n449, 0.002); end
  def test_webtool_graphs_o449; assert_in_epsilon(28.62884799325647, worksheet.webtool_graphs_o449, 0.002); end
  def test_webtool_graphs_p449; assert_in_epsilon(30.391082898490236, worksheet.webtool_graphs_p449, 0.002); end
  def test_webtool_graphs_q449; assert_in_epsilon(31.900814591151192, worksheet.webtool_graphs_q449, 0.002); end
  def test_webtool_graphs_r449; assert_in_epsilon(33.250349806452405, worksheet.webtool_graphs_r449, 0.002); end
  def test_webtool_graphs_s449; assert_in_epsilon(34.33095972916592, worksheet.webtool_graphs_s449, 0.002); end
  def test_webtool_graphs_t449; assert_in_epsilon(35.25704480920984, worksheet.webtool_graphs_t449, 0.002); end
  def test_webtool_graphs_b450; assert_equal("All", worksheet.webtool_graphs_b450); end
  def test_webtool_graphs_c450; assert_equal("Global Electricity (delivered to end user)", worksheet.webtool_graphs_c450); end
  def test_webtool_graphs_l450; assert_in_epsilon(36.795842246184684, worksheet.webtool_graphs_l450, 0.002); end
  def test_webtool_graphs_m450; assert_in_epsilon(41.36281315625009, worksheet.webtool_graphs_m450, 0.002); end
  def test_webtool_graphs_n450; assert_in_epsilon(47.25791354275227, worksheet.webtool_graphs_n450, 0.002); end
  def test_webtool_graphs_o450; assert_in_epsilon(53.46117615706483, worksheet.webtool_graphs_o450, 0.002); end
  def test_webtool_graphs_p450; assert_in_epsilon(59.867358211543014, worksheet.webtool_graphs_p450, 0.002); end
  def test_webtool_graphs_q450; assert_in_epsilon(66.29141296433967, worksheet.webtool_graphs_q450, 0.002); end
  def test_webtool_graphs_r450; assert_in_epsilon(72.81608792777985, worksheet.webtool_graphs_r450, 0.002); end
  def test_webtool_graphs_s450; assert_in_epsilon(79.22021132548555, worksheet.webtool_graphs_s450, 0.002); end
  def test_webtool_graphs_t450; assert_in_epsilon(85.61074871536209, worksheet.webtool_graphs_t450, 0.002); end
  def test_webtool_graphs_b451; assert_equal("TOTAL", worksheet.webtool_graphs_b451); end
  def test_webtool_graphs_c451; assert_equal("TOTAL", worksheet.webtool_graphs_c451); end
  def test_webtool_graphs_l451; assert_in_epsilon(123.44578749989753, worksheet.webtool_graphs_l451, 0.002); end
  def test_webtool_graphs_m451; assert_in_epsilon(131.35845074408618, worksheet.webtool_graphs_m451, 0.002); end
  def test_webtool_graphs_n451; assert_in_epsilon(140.64255661956116, worksheet.webtool_graphs_n451, 0.002); end
  def test_webtool_graphs_o451; assert_in_epsilon(149.76315003052827, worksheet.webtool_graphs_o451, 0.002); end
  def test_webtool_graphs_p451; assert_in_epsilon(158.76337725042993, worksheet.webtool_graphs_p451, 0.002); end
  def test_webtool_graphs_q451; assert_in_epsilon(167.60671202721718, worksheet.webtool_graphs_q451, 0.002); end
  def test_webtool_graphs_r451; assert_in_epsilon(176.26052650740877, worksheet.webtool_graphs_r451, 0.002); end
  def test_webtool_graphs_s451; assert_in_epsilon(184.67654283290062, worksheet.webtool_graphs_s451, 0.002); end
  def test_webtool_graphs_t451; assert_in_epsilon(192.76753113102694, worksheet.webtool_graphs_t451, 0.002); end
  def test_webtool_graphs_b27; assert_equal("Type of city", worksheet.webtool_graphs_b27); end
  def test_webtool_graphs_c27; assert_equal("Description", worksheet.webtool_graphs_c27); end
  def test_webtool_graphs_d27; assert_equal("1975", worksheet.webtool_graphs_d27); end
  def test_webtool_graphs_e27; assert_equal("1980", worksheet.webtool_graphs_e27); end
  def test_webtool_graphs_f27; assert_equal("1985", worksheet.webtool_graphs_f27); end
  def test_webtool_graphs_g27; assert_equal("1990", worksheet.webtool_graphs_g27); end
  def test_webtool_graphs_h27; assert_equal("1995", worksheet.webtool_graphs_h27); end
  def test_webtool_graphs_i27; assert_equal("2000", worksheet.webtool_graphs_i27); end
  def test_webtool_graphs_j27; assert_equal("2005", worksheet.webtool_graphs_j27); end
  def test_webtool_graphs_k27; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k27, 0.002); end
  def test_webtool_graphs_l27; assert_equal("2011", worksheet.webtool_graphs_l27); end
  def test_webtool_graphs_m27; assert_equal("2015", worksheet.webtool_graphs_m27); end
  def test_webtool_graphs_n27; assert_equal("2020", worksheet.webtool_graphs_n27); end
  def test_webtool_graphs_o27; assert_equal("2025", worksheet.webtool_graphs_o27); end
  def test_webtool_graphs_p27; assert_equal("2030", worksheet.webtool_graphs_p27); end
  def test_webtool_graphs_q27; assert_equal("2035", worksheet.webtool_graphs_q27); end
  def test_webtool_graphs_r27; assert_equal("2040", worksheet.webtool_graphs_r27); end
  def test_webtool_graphs_s27; assert_equal("2045", worksheet.webtool_graphs_s27); end
  def test_webtool_graphs_t27; assert_equal("2050", worksheet.webtool_graphs_t27); end
  def test_webtool_graphs_b28; assert_equal("All", worksheet.webtool_graphs_b28); end
  def test_webtool_graphs_c28; assert_equal("Global urban house size", worksheet.webtool_graphs_c28); end
  def test_webtool_graphs_j28; assert_equal("", worksheet.webtool_graphs_j28); end
  def test_webtool_graphs_l28; assert_in_epsilon(92.0, worksheet.webtool_graphs_l28, 0.002); end
  def test_webtool_graphs_m28; assert_in_epsilon(93.2, worksheet.webtool_graphs_m28, 0.002); end
  def test_webtool_graphs_n28; assert_in_epsilon(94.17142857142856, worksheet.webtool_graphs_n28, 0.002); end
  def test_webtool_graphs_o28; assert_in_epsilon(95.14285714285715, worksheet.webtool_graphs_o28, 0.002); end
  def test_webtool_graphs_p28; assert_in_epsilon(96.11428571428571, worksheet.webtool_graphs_p28, 0.002); end
  def test_webtool_graphs_q28; assert_in_epsilon(97.08571428571427, worksheet.webtool_graphs_q28, 0.002); end
  def test_webtool_graphs_r28; assert_in_epsilon(98.05714285714285, worksheet.webtool_graphs_r28, 0.002); end
  def test_webtool_graphs_s28; assert_in_epsilon(99.02857142857142, worksheet.webtool_graphs_s28, 0.002); end
  def test_webtool_graphs_t28; assert_in_epsilon(100.0, worksheet.webtool_graphs_t28, 0.002); end
  def test_webtool_graphs_b29; assert_equal("All", worksheet.webtool_graphs_b29); end
  def test_webtool_graphs_c29; assert_equal("Global rural house size", worksheet.webtool_graphs_c29); end
  def test_webtool_graphs_l29; assert_in_epsilon(78.0, worksheet.webtool_graphs_l29, 0.002); end
  def test_webtool_graphs_m29; assert_in_epsilon(79.0, worksheet.webtool_graphs_m29, 0.002); end
  def test_webtool_graphs_n29; assert_in_epsilon(80.57142857142856, worksheet.webtool_graphs_n29, 0.002); end
  def test_webtool_graphs_o29; assert_in_epsilon(82.14285714285714, worksheet.webtool_graphs_o29, 0.002); end
  def test_webtool_graphs_p29; assert_in_epsilon(83.7142857142857, worksheet.webtool_graphs_p29, 0.002); end
  def test_webtool_graphs_q29; assert_in_epsilon(85.28571428571428, worksheet.webtool_graphs_q29, 0.002); end
  def test_webtool_graphs_r29; assert_in_epsilon(86.85714285714285, worksheet.webtool_graphs_r29, 0.002); end
  def test_webtool_graphs_s29; assert_in_epsilon(88.42857142857142, worksheet.webtool_graphs_s29, 0.002); end
  def test_webtool_graphs_t29; assert_in_epsilon(89.99999999999999, worksheet.webtool_graphs_t29, 0.002); end
  def test_webtool_graphs_b30; assert_equal("Weighted average", worksheet.webtool_graphs_b30); end
  def test_webtool_graphs_c30; assert_equal("Average household size", worksheet.webtool_graphs_c30); end
  def test_webtool_graphs_l30; assert_in_epsilon(86.89531887762217, worksheet.webtool_graphs_l30, 0.002); end
  def test_webtool_graphs_m30; assert_in_epsilon(88.268159816611, worksheet.webtool_graphs_m30, 0.002); end
  def test_webtool_graphs_n30; assert_in_epsilon(89.71508560143425, worksheet.webtool_graphs_n30, 0.002); end
  def test_webtool_graphs_o30; assert_in_epsilon(91.1118006073343, worksheet.webtool_graphs_o30, 0.002); end
  def test_webtool_graphs_p30; assert_in_epsilon(92.46462715106519, worksheet.webtool_graphs_p30, 0.002); end
  def test_webtool_graphs_q30; assert_in_epsilon(93.77890600668775, worksheet.webtool_graphs_q30, 0.002); end
  def test_webtool_graphs_r30; assert_in_epsilon(95.06286611357557, worksheet.webtool_graphs_r30, 0.002); end
  def test_webtool_graphs_s30; assert_in_epsilon(96.33124180866905, worksheet.webtool_graphs_s30, 0.002); end
  def test_webtool_graphs_t30; assert_in_epsilon(97.58407378847672, worksheet.webtool_graphs_t30, 0.002); end
  def test_webtool_graphs_b8; assert_equal("Type of city", worksheet.webtool_graphs_b8); end
  def test_webtool_graphs_c8; assert_equal("Description", worksheet.webtool_graphs_c8); end
  def test_webtool_graphs_d8; assert_equal("1975", worksheet.webtool_graphs_d8); end
  def test_webtool_graphs_e8; assert_equal("1980", worksheet.webtool_graphs_e8); end
  def test_webtool_graphs_f8; assert_equal("1985", worksheet.webtool_graphs_f8); end
  def test_webtool_graphs_g8; assert_equal("1990", worksheet.webtool_graphs_g8); end
  def test_webtool_graphs_h8; assert_equal("1995", worksheet.webtool_graphs_h8); end
  def test_webtool_graphs_i8; assert_equal("2000", worksheet.webtool_graphs_i8); end
  def test_webtool_graphs_j8; assert_equal("2005", worksheet.webtool_graphs_j8); end
  def test_webtool_graphs_k8; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k8, 0.002); end
  def test_webtool_graphs_l8; assert_equal("2011", worksheet.webtool_graphs_l8); end
  def test_webtool_graphs_m8; assert_equal("2015", worksheet.webtool_graphs_m8); end
  def test_webtool_graphs_n8; assert_equal("2020", worksheet.webtool_graphs_n8); end
  def test_webtool_graphs_o8; assert_equal("2025", worksheet.webtool_graphs_o8); end
  def test_webtool_graphs_p8; assert_equal("2030", worksheet.webtool_graphs_p8); end
  def test_webtool_graphs_q8; assert_equal("2035", worksheet.webtool_graphs_q8); end
  def test_webtool_graphs_r8; assert_equal("2040", worksheet.webtool_graphs_r8); end
  def test_webtool_graphs_s8; assert_equal("2045", worksheet.webtool_graphs_s8); end
  def test_webtool_graphs_t8; assert_equal("2050", worksheet.webtool_graphs_t8); end
  def test_webtool_graphs_b9; assert_equal("All", worksheet.webtool_graphs_b9); end
  def test_webtool_graphs_c9; assert_equal("Global urban heating season temperature", worksheet.webtool_graphs_c9); end
  def test_webtool_graphs_j9; assert_equal("", worksheet.webtool_graphs_j9); end
  def test_webtool_graphs_l9; assert_in_epsilon(17.5, worksheet.webtool_graphs_l9, 0.002); end
  def test_webtool_graphs_m9; assert_in_epsilon(17.653846153846153, worksheet.webtool_graphs_m9, 0.002); end
  def test_webtool_graphs_n9; assert_in_epsilon(17.974725274725273, worksheet.webtool_graphs_n9, 0.002); end
  def test_webtool_graphs_o9; assert_in_epsilon(18.295604395604396, worksheet.webtool_graphs_o9, 0.002); end
  def test_webtool_graphs_p9; assert_in_epsilon(18.616483516483516, worksheet.webtool_graphs_p9, 0.002); end
  def test_webtool_graphs_q9; assert_in_epsilon(18.937362637362632, worksheet.webtool_graphs_q9, 0.002); end
  def test_webtool_graphs_r9; assert_in_epsilon(19.258241758241756, worksheet.webtool_graphs_r9, 0.002); end
  def test_webtool_graphs_s9; assert_in_epsilon(19.57912087912088, worksheet.webtool_graphs_s9, 0.002); end
  def test_webtool_graphs_t9; assert_in_epsilon(19.900000000000002, worksheet.webtool_graphs_t9, 0.002); end
  def test_webtool_graphs_b10; assert_equal("All", worksheet.webtool_graphs_b10); end
  def test_webtool_graphs_c10; assert_equal("Global rural heating season temperature", worksheet.webtool_graphs_c10); end
  def test_webtool_graphs_l10; assert_in_epsilon(13.0, worksheet.webtool_graphs_l10, 0.002); end
  def test_webtool_graphs_m10; assert_in_epsilon(13.410256410256412, worksheet.webtool_graphs_m10, 0.002); end
  def test_webtool_graphs_n10; assert_in_epsilon(13.908791208791211, worksheet.webtool_graphs_n10, 0.002); end
  def test_webtool_graphs_o10; assert_in_epsilon(14.40732600732601, worksheet.webtool_graphs_o10, 0.002); end
  def test_webtool_graphs_p10; assert_in_epsilon(14.905860805860806, worksheet.webtool_graphs_p10, 0.002); end
  def test_webtool_graphs_q10; assert_in_epsilon(15.404395604395605, worksheet.webtool_graphs_q10, 0.002); end
  def test_webtool_graphs_r10; assert_in_epsilon(15.902930402930403, worksheet.webtool_graphs_r10, 0.002); end
  def test_webtool_graphs_s10; assert_in_epsilon(16.401465201465204, worksheet.webtool_graphs_s10, 0.002); end
  def test_webtool_graphs_t10; assert_in_epsilon(16.9, worksheet.webtool_graphs_t10, 0.002); end
  def test_webtool_graphs_b11; assert_equal("All", worksheet.webtool_graphs_b11); end
  def test_webtool_graphs_c11; assert_equal("Global non residential heating season temperature", worksheet.webtool_graphs_c11); end
  def test_webtool_graphs_l11; assert_in_epsilon(20.0, worksheet.webtool_graphs_l11, 0.002); end
  def test_webtool_graphs_m11; assert_in_epsilon(20.102564102564102, worksheet.webtool_graphs_m11, 0.002); end
  def test_webtool_graphs_n11; assert_in_epsilon(20.487912087912086, worksheet.webtool_graphs_n11, 0.002); end
  def test_webtool_graphs_o11; assert_in_epsilon(20.87326007326007, worksheet.webtool_graphs_o11, 0.002); end
  def test_webtool_graphs_p11; assert_in_epsilon(21.258608058608058, worksheet.webtool_graphs_p11, 0.002); end
  def test_webtool_graphs_q11; assert_in_epsilon(21.643956043956045, worksheet.webtool_graphs_q11, 0.002); end
  def test_webtool_graphs_r11; assert_in_epsilon(22.029304029304033, worksheet.webtool_graphs_r11, 0.002); end
  def test_webtool_graphs_s11; assert_in_epsilon(22.414652014652013, worksheet.webtool_graphs_s11, 0.002); end
  def test_webtool_graphs_t11; assert_in_epsilon(22.8, worksheet.webtool_graphs_t11, 0.002); end
  def test_webtool_graphs_b12; assert_equal("All", worksheet.webtool_graphs_b12); end
  def test_webtool_graphs_c12; assert_equal("Global urban cooling season temperature", worksheet.webtool_graphs_c12); end
  def test_webtool_graphs_j12; assert_equal("", worksheet.webtool_graphs_j12); end
  def test_webtool_graphs_l12; assert_in_epsilon(26.5, worksheet.webtool_graphs_l12, 0.002); end
  def test_webtool_graphs_m12; assert_in_epsilon(26.346153846153847, worksheet.webtool_graphs_m12, 0.002); end
  def test_webtool_graphs_n12; assert_in_epsilon(26.02527472527472, worksheet.webtool_graphs_n12, 0.002); end
  def test_webtool_graphs_o12; assert_in_epsilon(25.704395604395607, worksheet.webtool_graphs_o12, 0.002); end
  def test_webtool_graphs_p12; assert_in_epsilon(25.383516483516484, worksheet.webtool_graphs_p12, 0.002); end
  def test_webtool_graphs_q12; assert_in_epsilon(25.06263736263736, worksheet.webtool_graphs_q12, 0.002); end
  def test_webtool_graphs_r12; assert_in_epsilon(24.74175824175824, worksheet.webtool_graphs_r12, 0.002); end
  def test_webtool_graphs_s12; assert_in_epsilon(24.420879120879118, worksheet.webtool_graphs_s12, 0.002); end
  def test_webtool_graphs_t12; assert_in_epsilon(24.1, worksheet.webtool_graphs_t12, 0.002); end
  def test_webtool_graphs_b13; assert_equal("All", worksheet.webtool_graphs_b13); end
  def test_webtool_graphs_c13; assert_equal("Global rural cooling season temperature", worksheet.webtool_graphs_c13); end
  def test_webtool_graphs_l13; assert_in_epsilon(29.0, worksheet.webtool_graphs_l13, 0.002); end
  def test_webtool_graphs_m13; assert_in_epsilon(28.58974358974359, worksheet.webtool_graphs_m13, 0.002); end
  def test_webtool_graphs_n13; assert_in_epsilon(27.948351648351647, worksheet.webtool_graphs_n13, 0.002); end
  def test_webtool_graphs_o13; assert_in_epsilon(27.30695970695971, worksheet.webtool_graphs_o13, 0.002); end
  def test_webtool_graphs_p13; assert_in_epsilon(26.665567765567765, worksheet.webtool_graphs_p13, 0.002); end
  def test_webtool_graphs_q13; assert_in_epsilon(26.02417582417582, worksheet.webtool_graphs_q13, 0.002); end
  def test_webtool_graphs_r13; assert_in_epsilon(25.382783882783883, worksheet.webtool_graphs_r13, 0.002); end
  def test_webtool_graphs_s13; assert_in_epsilon(24.74139194139194, worksheet.webtool_graphs_s13, 0.002); end
  def test_webtool_graphs_t13; assert_in_epsilon(24.1, worksheet.webtool_graphs_t13, 0.002); end
  def test_webtool_graphs_b14; assert_equal("All", worksheet.webtool_graphs_b14); end
  def test_webtool_graphs_c14; assert_equal("Global non residential cooling season temperature", worksheet.webtool_graphs_c14); end
  def test_webtool_graphs_l14; assert_in_epsilon(23.0, worksheet.webtool_graphs_l14, 0.002); end
  def test_webtool_graphs_m14; assert_in_epsilon(23.102564102564102, worksheet.webtool_graphs_m14, 0.002); end
  def test_webtool_graphs_n14; assert_in_epsilon(23.1021978021978, worksheet.webtool_graphs_n14, 0.002); end
  def test_webtool_graphs_o14; assert_in_epsilon(23.101831501831505, worksheet.webtool_graphs_o14, 0.002); end
  def test_webtool_graphs_p14; assert_in_epsilon(23.101465201465203, worksheet.webtool_graphs_p14, 0.002); end
  def test_webtool_graphs_q14; assert_in_epsilon(23.1010989010989, worksheet.webtool_graphs_q14, 0.002); end
  def test_webtool_graphs_r14; assert_in_epsilon(23.100732600732602, worksheet.webtool_graphs_r14, 0.002); end
  def test_webtool_graphs_s14; assert_in_epsilon(23.100366300366296, worksheet.webtool_graphs_s14, 0.002); end
  def test_webtool_graphs_t14; assert_in_epsilon(23.1, worksheet.webtool_graphs_t14, 0.002); end
  def test_webtool_graphs_b47; assert_equal("Area", worksheet.webtool_graphs_b47); end
  def test_webtool_graphs_c47; assert_equal("Description", worksheet.webtool_graphs_c47); end
  def test_webtool_graphs_d47; assert_equal("1975", worksheet.webtool_graphs_d47); end
  def test_webtool_graphs_e47; assert_equal("1980", worksheet.webtool_graphs_e47); end
  def test_webtool_graphs_f47; assert_equal("1985", worksheet.webtool_graphs_f47); end
  def test_webtool_graphs_g47; assert_equal("1990", worksheet.webtool_graphs_g47); end
  def test_webtool_graphs_h47; assert_equal("1995", worksheet.webtool_graphs_h47); end
  def test_webtool_graphs_i47; assert_equal("2000", worksheet.webtool_graphs_i47); end
  def test_webtool_graphs_j47; assert_equal("2005", worksheet.webtool_graphs_j47); end
  def test_webtool_graphs_k47; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k47, 0.002); end
  def test_webtool_graphs_l47; assert_equal("2011", worksheet.webtool_graphs_l47); end
  def test_webtool_graphs_m47; assert_equal("2015", worksheet.webtool_graphs_m47); end
  def test_webtool_graphs_n47; assert_equal("2020", worksheet.webtool_graphs_n47); end
  def test_webtool_graphs_o47; assert_equal("2025", worksheet.webtool_graphs_o47); end
  def test_webtool_graphs_p47; assert_equal("2030", worksheet.webtool_graphs_p47); end
  def test_webtool_graphs_q47; assert_equal("2035", worksheet.webtool_graphs_q47); end
  def test_webtool_graphs_r47; assert_equal("2040", worksheet.webtool_graphs_r47); end
  def test_webtool_graphs_s47; assert_equal("2045", worksheet.webtool_graphs_s47); end
  def test_webtool_graphs_t47; assert_equal("2050", worksheet.webtool_graphs_t47); end
  def test_webtool_graphs_b48; assert_equal("Urban", worksheet.webtool_graphs_b48); end
  def test_webtool_graphs_c48; assert_equal("Urban lighting", worksheet.webtool_graphs_c48); end
  def test_webtool_graphs_l48; assert_in_epsilon(24.0, worksheet.webtool_graphs_l48, 0.002); end
  def test_webtool_graphs_m48; assert_in_epsilon(25.641025641025642, worksheet.webtool_graphs_m48, 0.002); end
  def test_webtool_graphs_n48; assert_in_epsilon(27.406593406593405, worksheet.webtool_graphs_n48, 0.002); end
  def test_webtool_graphs_o48; assert_in_epsilon(29.172161172161175, worksheet.webtool_graphs_o48, 0.002); end
  def test_webtool_graphs_p48; assert_in_epsilon(30.937728937728938, worksheet.webtool_graphs_p48, 0.002); end
  def test_webtool_graphs_q48; assert_in_epsilon(32.7032967032967, worksheet.webtool_graphs_q48, 0.002); end
  def test_webtool_graphs_r48; assert_in_epsilon(34.46886446886447, worksheet.webtool_graphs_r48, 0.002); end
  def test_webtool_graphs_s48; assert_in_epsilon(36.234432234432234, worksheet.webtool_graphs_s48, 0.002); end
  def test_webtool_graphs_t48; assert_in_epsilon(38.0, worksheet.webtool_graphs_t48, 0.002); end
  def test_webtool_graphs_b49; assert_equal("Rural", worksheet.webtool_graphs_b49); end
  def test_webtool_graphs_c49; assert_equal("Rural lighting", worksheet.webtool_graphs_c49); end
  def test_webtool_graphs_l49; assert_in_epsilon(12.0, worksheet.webtool_graphs_l49, 0.002); end
  def test_webtool_graphs_m49; assert_in_epsilon(13.846153846153847, worksheet.webtool_graphs_m49, 0.002); end
  def test_webtool_graphs_n49; assert_in_epsilon(15.868131868131869, worksheet.webtool_graphs_n49, 0.002); end
  def test_webtool_graphs_o49; assert_in_epsilon(17.89010989010989, worksheet.webtool_graphs_o49, 0.002); end
  def test_webtool_graphs_p49; assert_in_epsilon(19.912087912087912, worksheet.webtool_graphs_p49, 0.002); end
  def test_webtool_graphs_q49; assert_in_epsilon(21.934065934065934, worksheet.webtool_graphs_q49, 0.002); end
  def test_webtool_graphs_r49; assert_in_epsilon(23.956043956043956, worksheet.webtool_graphs_r49, 0.002); end
  def test_webtool_graphs_s49; assert_in_epsilon(25.978021978021978, worksheet.webtool_graphs_s49, 0.002); end
  def test_webtool_graphs_t49; assert_in_epsilon(28.0, worksheet.webtool_graphs_t49, 0.002); end
  def test_webtool_graphs_b420; assert_equal("Area", worksheet.webtool_graphs_b420); end
  def test_webtool_graphs_c420; assert_equal("Technology code", worksheet.webtool_graphs_c420); end
  def test_webtool_graphs_d420; assert_equal("1975", worksheet.webtool_graphs_d420); end
  def test_webtool_graphs_e420; assert_equal("1980", worksheet.webtool_graphs_e420); end
  def test_webtool_graphs_f420; assert_equal("1985", worksheet.webtool_graphs_f420); end
  def test_webtool_graphs_g420; assert_equal("1990", worksheet.webtool_graphs_g420); end
  def test_webtool_graphs_h420; assert_equal("1995", worksheet.webtool_graphs_h420); end
  def test_webtool_graphs_i420; assert_equal("2000", worksheet.webtool_graphs_i420); end
  def test_webtool_graphs_j420; assert_equal("2005", worksheet.webtool_graphs_j420); end
  def test_webtool_graphs_k420; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k420, 0.002); end
  def test_webtool_graphs_l420; assert_equal("2011", worksheet.webtool_graphs_l420); end
  def test_webtool_graphs_m420; assert_equal("2015", worksheet.webtool_graphs_m420); end
  def test_webtool_graphs_n420; assert_equal("2020", worksheet.webtool_graphs_n420); end
  def test_webtool_graphs_o420; assert_equal("2025", worksheet.webtool_graphs_o420); end
  def test_webtool_graphs_p420; assert_equal("2030", worksheet.webtool_graphs_p420); end
  def test_webtool_graphs_q420; assert_equal("2035", worksheet.webtool_graphs_q420); end
  def test_webtool_graphs_r420; assert_equal("2040", worksheet.webtool_graphs_r420); end
  def test_webtool_graphs_s420; assert_equal("2045", worksheet.webtool_graphs_s420); end
  def test_webtool_graphs_t420; assert_equal("2050", worksheet.webtool_graphs_t420); end
  def test_webtool_graphs_b421; assert_equal("Rural", worksheet.webtool_graphs_b421); end
  def test_webtool_graphs_c421; assert_equal("heater.solar.rural.space", worksheet.webtool_graphs_c421); end
  def test_webtool_graphs_l421; assert_in_delta(0.0, (worksheet.webtool_graphs_l421||0), 0.002); end
  def test_webtool_graphs_m421; assert_in_delta(0.0, (worksheet.webtool_graphs_m421||0), 0.002); end
  def test_webtool_graphs_n421; assert_in_delta(0.0, (worksheet.webtool_graphs_n421||0), 0.002); end
  def test_webtool_graphs_o421; assert_in_delta(0.0, (worksheet.webtool_graphs_o421||0), 0.002); end
  def test_webtool_graphs_p421; assert_in_delta(0.0, (worksheet.webtool_graphs_p421||0), 0.002); end
  def test_webtool_graphs_q421; assert_in_delta(0.0, (worksheet.webtool_graphs_q421||0), 0.002); end
  def test_webtool_graphs_r421; assert_in_delta(0.0, (worksheet.webtool_graphs_r421||0), 0.002); end
  def test_webtool_graphs_s421; assert_in_delta(0.0, (worksheet.webtool_graphs_s421||0), 0.002); end
  def test_webtool_graphs_t421; assert_in_delta(0.0, (worksheet.webtool_graphs_t421||0), 0.002); end
  def test_webtool_graphs_b422; assert_equal("Rural", worksheet.webtool_graphs_b422); end
  def test_webtool_graphs_c422; assert_equal("heater.heatpump.rural.space", worksheet.webtool_graphs_c422); end
  def test_webtool_graphs_l422; assert_in_delta(0.005, worksheet.webtool_graphs_l422, 0.002); end
  def test_webtool_graphs_m422; assert_in_delta(0.005000000000000001, worksheet.webtool_graphs_m422, 0.002); end
  def test_webtool_graphs_n422; assert_in_delta(0.005, worksheet.webtool_graphs_n422, 0.002); end
  def test_webtool_graphs_o422; assert_in_delta(0.005000000000000001, worksheet.webtool_graphs_o422, 0.002); end
  def test_webtool_graphs_p422; assert_in_delta(0.005000000000000001, worksheet.webtool_graphs_p422, 0.002); end
  def test_webtool_graphs_q422; assert_in_delta(0.005, worksheet.webtool_graphs_q422, 0.002); end
  def test_webtool_graphs_r422; assert_in_delta(0.005000000000000001, worksheet.webtool_graphs_r422, 0.002); end
  def test_webtool_graphs_s422; assert_in_delta(0.005, worksheet.webtool_graphs_s422, 0.002); end
  def test_webtool_graphs_t422; assert_in_delta(0.005, worksheet.webtool_graphs_t422, 0.002); end
  def test_webtool_graphs_b423; assert_equal("Rural", worksheet.webtool_graphs_b423); end
  def test_webtool_graphs_c423; assert_equal("heater.electricity.rural.space", worksheet.webtool_graphs_c423); end
  def test_webtool_graphs_l423; assert_in_delta(0.01, worksheet.webtool_graphs_l423, 0.002); end
  def test_webtool_graphs_m423; assert_in_delta(0.02435897435897436, worksheet.webtool_graphs_m423, 0.002); end
  def test_webtool_graphs_n423; assert_in_delta(0.0423076923076923, worksheet.webtool_graphs_n423, 0.002); end
  def test_webtool_graphs_o423; assert_in_delta(0.06025641025641025, worksheet.webtool_graphs_o423, 0.002); end
  def test_webtool_graphs_p423; assert_in_delta(0.0782051282051282, worksheet.webtool_graphs_p423, 0.002); end
  def test_webtool_graphs_q423; assert_in_delta(0.09615384615384615, worksheet.webtool_graphs_q423, 0.002); end
  def test_webtool_graphs_r423; assert_in_delta(0.1141025641025641, worksheet.webtool_graphs_r423, 0.002); end
  def test_webtool_graphs_s423; assert_in_delta(0.13205128205128203, worksheet.webtool_graphs_s423, 0.002); end
  def test_webtool_graphs_t423; assert_in_delta(0.15, worksheet.webtool_graphs_t423, 0.002); end
  def test_webtool_graphs_c424; assert_equal("% of rural space heating that is zero-carbon", worksheet.webtool_graphs_c424); end
  def test_webtool_graphs_l424; assert_in_delta(0.005, worksheet.webtool_graphs_l424, 0.002); end
  def test_webtool_graphs_m424; assert_in_delta(0.005000000000000001, worksheet.webtool_graphs_m424, 0.002); end
  def test_webtool_graphs_n424; assert_in_delta(0.005, worksheet.webtool_graphs_n424, 0.002); end
  def test_webtool_graphs_o424; assert_in_delta(0.005000000000000001, worksheet.webtool_graphs_o424, 0.002); end
  def test_webtool_graphs_p424; assert_in_delta(0.005000000000000001, worksheet.webtool_graphs_p424, 0.002); end
  def test_webtool_graphs_q424; assert_in_delta(0.005, worksheet.webtool_graphs_q424, 0.002); end
  def test_webtool_graphs_r424; assert_in_delta(0.005000000000000001, worksheet.webtool_graphs_r424, 0.002); end
  def test_webtool_graphs_s424; assert_in_delta(0.005, worksheet.webtool_graphs_s424, 0.002); end
  def test_webtool_graphs_t424; assert_in_delta(0.005, worksheet.webtool_graphs_t424, 0.002); end
  def test_webtool_graphs_c425; assert_equal("% of rural space heating by zero carbon and electric technologies", worksheet.webtool_graphs_c425); end
  def test_webtool_graphs_l425; assert_in_delta(0.015, worksheet.webtool_graphs_l425, 0.002); end
  def test_webtool_graphs_m425; assert_in_delta(0.02935897435897436, worksheet.webtool_graphs_m425, 0.002); end
  def test_webtool_graphs_n425; assert_in_delta(0.0473076923076923, worksheet.webtool_graphs_n425, 0.002); end
  def test_webtool_graphs_o425; assert_in_delta(0.06525641025641025, worksheet.webtool_graphs_o425, 0.002); end
  def test_webtool_graphs_p425; assert_in_delta(0.08320512820512821, worksheet.webtool_graphs_p425, 0.002); end
  def test_webtool_graphs_q425; assert_in_delta(0.10115384615384615, worksheet.webtool_graphs_q425, 0.002); end
  def test_webtool_graphs_r425; assert_in_delta(0.1191025641025641, worksheet.webtool_graphs_r425, 0.002); end
  def test_webtool_graphs_s425; assert_in_delta(0.13705128205128203, worksheet.webtool_graphs_s425, 0.002); end
  def test_webtool_graphs_t425; assert_in_delta(0.155, worksheet.webtool_graphs_t425, 0.002); end
  def test_webtool_graphs_b408; assert_equal("Type of city", worksheet.webtool_graphs_b408); end
  def test_webtool_graphs_c408; assert_equal("Technology code", worksheet.webtool_graphs_c408); end
  def test_webtool_graphs_d408; assert_equal("1975", worksheet.webtool_graphs_d408); end
  def test_webtool_graphs_e408; assert_equal("1980", worksheet.webtool_graphs_e408); end
  def test_webtool_graphs_f408; assert_equal("1985", worksheet.webtool_graphs_f408); end
  def test_webtool_graphs_g408; assert_equal("1990", worksheet.webtool_graphs_g408); end
  def test_webtool_graphs_h408; assert_equal("1995", worksheet.webtool_graphs_h408); end
  def test_webtool_graphs_i408; assert_equal("2000", worksheet.webtool_graphs_i408); end
  def test_webtool_graphs_j408; assert_equal("2005", worksheet.webtool_graphs_j408); end
  def test_webtool_graphs_k408; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k408, 0.002); end
  def test_webtool_graphs_l408; assert_equal("2011", worksheet.webtool_graphs_l408); end
  def test_webtool_graphs_m408; assert_equal("2015", worksheet.webtool_graphs_m408); end
  def test_webtool_graphs_n408; assert_equal("2020", worksheet.webtool_graphs_n408); end
  def test_webtool_graphs_o408; assert_equal("2025", worksheet.webtool_graphs_o408); end
  def test_webtool_graphs_p408; assert_equal("2030", worksheet.webtool_graphs_p408); end
  def test_webtool_graphs_q408; assert_equal("2035", worksheet.webtool_graphs_q408); end
  def test_webtool_graphs_r408; assert_equal("2040", worksheet.webtool_graphs_r408); end
  def test_webtool_graphs_s408; assert_equal("2045", worksheet.webtool_graphs_s408); end
  def test_webtool_graphs_t408; assert_equal("2050", worksheet.webtool_graphs_t408); end
  def test_webtool_graphs_b409; assert_equal("Urban", worksheet.webtool_graphs_b409); end
  def test_webtool_graphs_c409; assert_equal("heater.solar.urban.space", worksheet.webtool_graphs_c409); end
  def test_webtool_graphs_l409; assert_in_delta(0.0, (worksheet.webtool_graphs_l409||0), 0.002); end
  def test_webtool_graphs_m409; assert_in_delta(0.0, (worksheet.webtool_graphs_m409||0), 0.002); end
  def test_webtool_graphs_n409; assert_in_delta(0.0, (worksheet.webtool_graphs_n409||0), 0.002); end
  def test_webtool_graphs_o409; assert_in_delta(0.0, (worksheet.webtool_graphs_o409||0), 0.002); end
  def test_webtool_graphs_p409; assert_in_delta(0.0, (worksheet.webtool_graphs_p409||0), 0.002); end
  def test_webtool_graphs_q409; assert_in_delta(0.0, (worksheet.webtool_graphs_q409||0), 0.002); end
  def test_webtool_graphs_r409; assert_in_delta(0.0, (worksheet.webtool_graphs_r409||0), 0.002); end
  def test_webtool_graphs_s409; assert_in_delta(0.0, (worksheet.webtool_graphs_s409||0), 0.002); end
  def test_webtool_graphs_t409; assert_in_delta(0.0, (worksheet.webtool_graphs_t409||0), 0.002); end
  def test_webtool_graphs_b410; assert_equal("Urban", worksheet.webtool_graphs_b410); end
  def test_webtool_graphs_c410; assert_equal("heater.heatpump.urban.space", worksheet.webtool_graphs_c410); end
  def test_webtool_graphs_l410; assert_in_delta(0.02, worksheet.webtool_graphs_l410, 0.002); end
  def test_webtool_graphs_m410; assert_in_delta(0.020000000000000004, worksheet.webtool_graphs_m410, 0.002); end
  def test_webtool_graphs_n410; assert_in_delta(0.02, worksheet.webtool_graphs_n410, 0.002); end
  def test_webtool_graphs_o410; assert_in_delta(0.020000000000000004, worksheet.webtool_graphs_o410, 0.002); end
  def test_webtool_graphs_p410; assert_in_delta(0.020000000000000004, worksheet.webtool_graphs_p410, 0.002); end
  def test_webtool_graphs_q410; assert_in_delta(0.02, worksheet.webtool_graphs_q410, 0.002); end
  def test_webtool_graphs_r410; assert_in_delta(0.020000000000000004, worksheet.webtool_graphs_r410, 0.002); end
  def test_webtool_graphs_s410; assert_in_delta(0.02, worksheet.webtool_graphs_s410, 0.002); end
  def test_webtool_graphs_t410; assert_in_delta(0.02, worksheet.webtool_graphs_t410, 0.002); end
  def test_webtool_graphs_b411; assert_equal("Urban", worksheet.webtool_graphs_b411); end
  def test_webtool_graphs_c411; assert_equal("heater.electricity.urban.space", worksheet.webtool_graphs_c411); end
  def test_webtool_graphs_l411; assert_in_delta(0.03, worksheet.webtool_graphs_l411, 0.002); end
  def test_webtool_graphs_m411; assert_in_delta(0.03512820512820513, worksheet.webtool_graphs_m411, 0.002); end
  def test_webtool_graphs_n411; assert_in_delta(0.04153846153846154, worksheet.webtool_graphs_n411, 0.002); end
  def test_webtool_graphs_o411; assert_in_delta(0.04794871794871795, worksheet.webtool_graphs_o411, 0.002); end
  def test_webtool_graphs_p411; assert_in_delta(0.05435897435897436, worksheet.webtool_graphs_p411, 0.002); end
  def test_webtool_graphs_q411; assert_in_delta(0.06076923076923077, worksheet.webtool_graphs_q411, 0.002); end
  def test_webtool_graphs_r411; assert_in_delta(0.06717948717948719, worksheet.webtool_graphs_r411, 0.002); end
  def test_webtool_graphs_s411; assert_in_delta(0.0735897435897436, worksheet.webtool_graphs_s411, 0.002); end
  def test_webtool_graphs_t411; assert_in_delta(0.08, worksheet.webtool_graphs_t411, 0.002); end
  def test_webtool_graphs_c412; assert_equal("% of urban space heating that is zero-carbon", worksheet.webtool_graphs_c412); end
  def test_webtool_graphs_l412; assert_in_delta(0.02, worksheet.webtool_graphs_l412, 0.002); end
  def test_webtool_graphs_m412; assert_in_delta(0.020000000000000004, worksheet.webtool_graphs_m412, 0.002); end
  def test_webtool_graphs_n412; assert_in_delta(0.02, worksheet.webtool_graphs_n412, 0.002); end
  def test_webtool_graphs_o412; assert_in_delta(0.020000000000000004, worksheet.webtool_graphs_o412, 0.002); end
  def test_webtool_graphs_p412; assert_in_delta(0.020000000000000004, worksheet.webtool_graphs_p412, 0.002); end
  def test_webtool_graphs_q412; assert_in_delta(0.02, worksheet.webtool_graphs_q412, 0.002); end
  def test_webtool_graphs_r412; assert_in_delta(0.020000000000000004, worksheet.webtool_graphs_r412, 0.002); end
  def test_webtool_graphs_s412; assert_in_delta(0.02, worksheet.webtool_graphs_s412, 0.002); end
  def test_webtool_graphs_t412; assert_in_delta(0.02, worksheet.webtool_graphs_t412, 0.002); end
  def test_webtool_graphs_c413; assert_equal("% of urban space heating by zero carbon and electric technologies", worksheet.webtool_graphs_c413); end
  def test_webtool_graphs_l413; assert_in_delta(0.05, worksheet.webtool_graphs_l413, 0.002); end
  def test_webtool_graphs_m413; assert_in_delta(0.055128205128205134, worksheet.webtool_graphs_m413, 0.002); end
  def test_webtool_graphs_n413; assert_in_delta(0.06153846153846154, worksheet.webtool_graphs_n413, 0.002); end
  def test_webtool_graphs_o413; assert_in_delta(0.06794871794871796, worksheet.webtool_graphs_o413, 0.002); end
  def test_webtool_graphs_p413; assert_in_delta(0.07435897435897437, worksheet.webtool_graphs_p413, 0.002); end
  def test_webtool_graphs_q413; assert_in_delta(0.08076923076923077, worksheet.webtool_graphs_q413, 0.002); end
  def test_webtool_graphs_r413; assert_in_delta(0.08717948717948719, worksheet.webtool_graphs_r413, 0.002); end
  def test_webtool_graphs_s413; assert_in_delta(0.0935897435897436, worksheet.webtool_graphs_s413, 0.002); end
  def test_webtool_graphs_t413; assert_in_delta(0.1, worksheet.webtool_graphs_t413, 0.002); end
  def test_webtool_graphs_b602; assert_equal("Type of city", worksheet.webtool_graphs_b602); end
  def test_webtool_graphs_c602; assert_equal("Tech description", worksheet.webtool_graphs_c602); end
  def test_webtool_graphs_d602; assert_equal("1975", worksheet.webtool_graphs_d602); end
  def test_webtool_graphs_e602; assert_equal("1980", worksheet.webtool_graphs_e602); end
  def test_webtool_graphs_f602; assert_equal("1985", worksheet.webtool_graphs_f602); end
  def test_webtool_graphs_g602; assert_equal("1990", worksheet.webtool_graphs_g602); end
  def test_webtool_graphs_h602; assert_equal("1995", worksheet.webtool_graphs_h602); end
  def test_webtool_graphs_i602; assert_equal("2000", worksheet.webtool_graphs_i602); end
  def test_webtool_graphs_j602; assert_equal("2005", worksheet.webtool_graphs_j602); end
  def test_webtool_graphs_k602; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k602, 0.002); end
  def test_webtool_graphs_l602; assert_equal("2011", worksheet.webtool_graphs_l602); end
  def test_webtool_graphs_m602; assert_equal("2015", worksheet.webtool_graphs_m602); end
  def test_webtool_graphs_n602; assert_equal("2020", worksheet.webtool_graphs_n602); end
  def test_webtool_graphs_o602; assert_equal("2025", worksheet.webtool_graphs_o602); end
  def test_webtool_graphs_p602; assert_equal("2030", worksheet.webtool_graphs_p602); end
  def test_webtool_graphs_q602; assert_equal("2035", worksheet.webtool_graphs_q602); end
  def test_webtool_graphs_r602; assert_equal("2040", worksheet.webtool_graphs_r602); end
  def test_webtool_graphs_s602; assert_equal("2045", worksheet.webtool_graphs_s602); end
  def test_webtool_graphs_t602; assert_equal("2050", worksheet.webtool_graphs_t602); end
  def test_webtool_graphs_b603; assert_equal("All", worksheet.webtool_graphs_b603); end
  def test_webtool_graphs_c603; assert_equal("Global urban incandescent light bulb", worksheet.webtool_graphs_c603); end
  def test_webtool_graphs_l603; assert_in_epsilon(4810296518.840451, worksheet.webtool_graphs_l603, 0.002); end
  def test_webtool_graphs_m603; assert_in_epsilon(5414549311.174678, worksheet.webtool_graphs_m603, 0.002); end
  def test_webtool_graphs_n603; assert_in_epsilon(6023576712.071993, worksheet.webtool_graphs_n603, 0.002); end
  def test_webtool_graphs_o603; assert_in_epsilon(6763007679.225589, worksheet.webtool_graphs_o603, 0.002); end
  def test_webtool_graphs_p603; assert_in_epsilon(7478599069.744308, worksheet.webtool_graphs_p603, 0.002); end
  def test_webtool_graphs_q603; assert_in_epsilon(8113084102.659965, worksheet.webtool_graphs_q603, 0.002); end
  def test_webtool_graphs_r603; assert_in_epsilon(8746232586.593508, worksheet.webtool_graphs_r603, 0.002); end
  def test_webtool_graphs_s603; assert_in_epsilon(9272664624.436121, worksheet.webtool_graphs_s603, 0.002); end
  def test_webtool_graphs_t603; assert_in_epsilon(9797972816.49067, worksheet.webtool_graphs_t603, 0.002); end
  def test_webtool_graphs_b604; assert_equal("All", worksheet.webtool_graphs_b604); end
  def test_webtool_graphs_c604; assert_equal("Global urban halogens light bulb", worksheet.webtool_graphs_c604); end
  def test_webtool_graphs_l604; assert_in_epsilon(169065325.99887288, worksheet.webtool_graphs_l604, 0.002); end
  def test_webtool_graphs_m604; assert_in_epsilon(192344055.99089646, worksheet.webtool_graphs_m604, 0.002); end
  def test_webtool_graphs_n604; assert_in_epsilon(221030168.6190537, worksheet.webtool_graphs_n604, 0.002); end
  def test_webtool_graphs_o604; assert_in_epsilon(258277957.4863769, worksheet.webtool_graphs_o604, 0.002); end
  def test_webtool_graphs_p604; assert_in_epsilon(297772998.5413836, worksheet.webtool_graphs_p604, 0.002); end
  def test_webtool_graphs_q604; assert_in_epsilon(337357550.8386952, worksheet.webtool_graphs_q604, 0.002); end
  def test_webtool_graphs_r604; assert_in_epsilon(381005336.59734666, worksheet.webtool_graphs_r604, 0.002); end
  def test_webtool_graphs_s604; assert_in_epsilon(424046352.71793413, worksheet.webtool_graphs_s604, 0.002); end
  def test_webtool_graphs_t604; assert_in_epsilon(472102313.9613253, worksheet.webtool_graphs_t604, 0.002); end
  def test_webtool_graphs_b605; assert_equal("All", worksheet.webtool_graphs_b605); end
  def test_webtool_graphs_c605; assert_equal("Global urban compact fluorescent lamp", worksheet.webtool_graphs_c605); end
  def test_webtool_graphs_l605; assert_in_epsilon(1404064225.1034694, worksheet.webtool_graphs_l605, 0.002); end
  def test_webtool_graphs_m605; assert_in_epsilon(1639002272.4386554, worksheet.webtool_graphs_m605, 0.002); end
  def test_webtool_graphs_n605; assert_in_epsilon(2036358071.8827567, worksheet.webtool_graphs_n605, 0.002); end
  def test_webtool_graphs_o605; assert_in_epsilon(2565579449.5870967, worksheet.webtool_graphs_o605, 0.002); end
  def test_webtool_graphs_p605; assert_in_epsilon(3171324873.439454, worksheet.webtool_graphs_p605, 0.002); end
  def test_webtool_graphs_q605; assert_in_epsilon(3833195007.816552, worksheet.webtool_graphs_q605, 0.002); end
  def test_webtool_graphs_r605; assert_in_epsilon(4599541801.7765875, worksheet.webtool_graphs_r605, 0.002); end
  def test_webtool_graphs_s605; assert_in_epsilon(5418116157.007651, worksheet.webtool_graphs_s605, 0.002); end
  def test_webtool_graphs_t605; assert_in_epsilon(6365083522.073921, worksheet.webtool_graphs_t605, 0.002); end
  def test_webtool_graphs_b606; assert_equal("All", worksheet.webtool_graphs_b606); end
  def test_webtool_graphs_c606; assert_equal("Global urban LEDs bulb", worksheet.webtool_graphs_c606); end
  def test_webtool_graphs_l606; assert_in_epsilon(16533880.618812757, worksheet.webtool_graphs_l606, 0.002); end
  def test_webtool_graphs_m606; assert_in_epsilon(18860593.8144567, worksheet.webtool_graphs_m606, 0.002); end
  def test_webtool_graphs_n606; assert_in_epsilon(24853867.617183782, worksheet.webtool_graphs_n606, 0.002); end
  def test_webtool_graphs_o606; assert_in_epsilon(33016487.401783314, worksheet.webtool_graphs_o606, 0.002); end
  def test_webtool_graphs_p606; assert_in_epsilon(42524247.54515673, worksheet.webtool_graphs_p606, 0.002); end
  def test_webtool_graphs_q606; assert_in_epsilon(53037435.38043165, worksheet.webtool_graphs_q606, 0.002); end
  def test_webtool_graphs_r606; assert_in_epsilon(65360462.53348884, worksheet.webtool_graphs_r606, 0.002); end
  def test_webtool_graphs_s606; assert_in_epsilon(78568551.6402959, worksheet.webtool_graphs_s606, 0.002); end
  def test_webtool_graphs_t606; assert_in_epsilon(94067657.80672786, worksheet.webtool_graphs_t606, 0.002); end
  def test_webtool_graphs_b607; assert_equal("All", worksheet.webtool_graphs_b607); end
  def test_webtool_graphs_c607; assert_equal("Global rural incandescent light bulb", worksheet.webtool_graphs_c607); end
  def test_webtool_graphs_l607; assert_in_epsilon(1072934914.0831571, worksheet.webtool_graphs_l607, 0.002); end
  def test_webtool_graphs_m607; assert_in_epsilon(1246279154.9939184, worksheet.webtool_graphs_m607, 0.002); end
  def test_webtool_graphs_n607; assert_in_epsilon(1404149758.79881, worksheet.webtool_graphs_n607, 0.002); end
  def test_webtool_graphs_o607; assert_in_epsilon(1630526617.730587, worksheet.webtool_graphs_o607, 0.002); end
  def test_webtool_graphs_p607; assert_in_epsilon(1859664705.1368847, worksheet.webtool_graphs_p607, 0.002); end
  def test_webtool_graphs_q607; assert_in_epsilon(2082022156.343681, worksheet.webtool_graphs_q607, 0.002); end
  def test_webtool_graphs_r607; assert_in_epsilon(2317005485.981898, worksheet.webtool_graphs_r607, 0.002); end
  def test_webtool_graphs_s607; assert_in_epsilon(2538629610.4576387, worksheet.webtool_graphs_s607, 0.002); end
  def test_webtool_graphs_t607; assert_in_epsilon(2749072333.7846656, worksheet.webtool_graphs_t607, 0.002); end
  def test_webtool_graphs_b608; assert_equal("All", worksheet.webtool_graphs_b608); end
  def test_webtool_graphs_c608; assert_equal("Global rural halogens light bulb", worksheet.webtool_graphs_c608); end
  def test_webtool_graphs_l608; assert_in_epsilon(36389342.08802943, worksheet.webtool_graphs_l608, 0.002); end
  def test_webtool_graphs_m608; assert_in_epsilon(41829014.91995709, worksheet.webtool_graphs_m608, 0.002); end
  def test_webtool_graphs_n608; assert_in_epsilon(46447569.25769011, worksheet.webtool_graphs_n608, 0.002); end
  def test_webtool_graphs_o608; assert_in_epsilon(53759290.23063191, worksheet.webtool_graphs_o608, 0.002); end
  def test_webtool_graphs_p608; assert_in_epsilon(61078940.2349704, worksheet.webtool_graphs_p608, 0.002); end
  def test_webtool_graphs_q608; assert_in_epsilon(68088428.3880728, worksheet.webtool_graphs_q608, 0.002); end
  def test_webtool_graphs_r608; assert_in_epsilon(75551735.18870695, worksheet.webtool_graphs_r608, 0.002); end
  def test_webtool_graphs_s608; assert_in_epsilon(82478982.9293692, worksheet.webtool_graphs_s608, 0.002); end
  def test_webtool_graphs_t608; assert_in_epsilon(89004046.1914272, worksheet.webtool_graphs_t608, 0.002); end
  def test_webtool_graphs_b609; assert_equal("All", worksheet.webtool_graphs_b609); end
  def test_webtool_graphs_c609; assert_equal("Global rural compact fluorescent lamp", worksheet.webtool_graphs_c609); end
  def test_webtool_graphs_l609; assert_in_epsilon(260727856.6932884, worksheet.webtool_graphs_l609, 0.002); end
  def test_webtool_graphs_m609; assert_in_epsilon(296992342.23947275, worksheet.webtool_graphs_m609, 0.002); end
  def test_webtool_graphs_n609; assert_in_epsilon(325545743.77084523, worksheet.webtool_graphs_n609, 0.002); end
  def test_webtool_graphs_o609; assert_in_epsilon(375676181.23466235, worksheet.webtool_graphs_o609, 0.002); end
  def test_webtool_graphs_p609; assert_in_epsilon(425334676.25632405, worksheet.webtool_graphs_p609, 0.002); end
  def test_webtool_graphs_q609; assert_in_epsilon(472276223.0661419, worksheet.webtool_graphs_q609, 0.002); end
  def test_webtool_graphs_r609; assert_in_epsilon(522627288.0149983, worksheet.webtool_graphs_r609, 0.002); end
  def test_webtool_graphs_s609; assert_in_epsilon(568625711.6263931, worksheet.webtool_graphs_s609, 0.002); end
  def test_webtool_graphs_t609; assert_in_epsilon(611600880.7843013, worksheet.webtool_graphs_t609, 0.002); end
  def test_webtool_graphs_b610; assert_equal("All", worksheet.webtool_graphs_b610); end
  def test_webtool_graphs_c610; assert_equal("Global rural LEDs bulb", worksheet.webtool_graphs_c610); end
  def test_webtool_graphs_l610; assert_in_epsilon(2108334.4233524976, worksheet.webtool_graphs_l610, 0.002); end
  def test_webtool_graphs_m610; assert_in_epsilon(2325921.336629604, worksheet.webtool_graphs_m610, 0.002); end
  def test_webtool_graphs_n610; assert_in_epsilon(2430132.9242124055, worksheet.webtool_graphs_n610, 0.002); end
  def test_webtool_graphs_o610; assert_in_epsilon(2772484.478321467, worksheet.webtool_graphs_o610, 0.002); end
  def test_webtool_graphs_p610; assert_in_epsilon(3096260.2982335854, worksheet.webtool_graphs_p610, 0.002); end
  def test_webtool_graphs_q610; assert_in_epsilon(3384258.352766549, worksheet.webtool_graphs_q610, 0.002); end
  def test_webtool_graphs_r610; assert_in_epsilon(3704235.3307985505, worksheet.webtool_graphs_r610, 0.002); end
  def test_webtool_graphs_s610; assert_in_epsilon(3974729.0326763056, worksheet.webtool_graphs_s610, 0.002); end
  def test_webtool_graphs_t610; assert_in_epsilon(4216822.4699494075, worksheet.webtool_graphs_t610, 0.002); end
  def test_webtool_graphs_b611; assert_equal("TOTAL", worksheet.webtool_graphs_b611); end
  def test_webtool_graphs_c611; assert_equal("TOTAL", worksheet.webtool_graphs_c611); end
  def test_webtool_graphs_l611; assert_in_epsilon(7772120397.849433, worksheet.webtool_graphs_l611, 0.002); end
  def test_webtool_graphs_m611; assert_in_epsilon(8852182666.908665, worksheet.webtool_graphs_m611, 0.002); end
  def test_webtool_graphs_n611; assert_in_epsilon(10084392024.942543, worksheet.webtool_graphs_n611, 0.002); end
  def test_webtool_graphs_o611; assert_in_epsilon(11682616147.37505, worksheet.webtool_graphs_o611, 0.002); end
  def test_webtool_graphs_p611; assert_in_epsilon(13339395771.196716, worksheet.webtool_graphs_p611, 0.002); end
  def test_webtool_graphs_q611; assert_in_epsilon(14962445162.846306, worksheet.webtool_graphs_q611, 0.002); end
  def test_webtool_graphs_r611; assert_in_epsilon(16711028932.017332, worksheet.webtool_graphs_r611, 0.002); end
  def test_webtool_graphs_s611; assert_in_epsilon(18387104719.84808, worksheet.webtool_graphs_s611, 0.002); end
  def test_webtool_graphs_t611; assert_in_epsilon(20183120393.562984, worksheet.webtool_graphs_t611, 0.002); end
  def test_webtool_graphs_b594; assert_equal("Type of city", worksheet.webtool_graphs_b594); end
  def test_webtool_graphs_c594; assert_equal("Technology code", worksheet.webtool_graphs_c594); end
  def test_webtool_graphs_d594; assert_equal("1975", worksheet.webtool_graphs_d594); end
  def test_webtool_graphs_e594; assert_equal("1980", worksheet.webtool_graphs_e594); end
  def test_webtool_graphs_f594; assert_equal("1985", worksheet.webtool_graphs_f594); end
  def test_webtool_graphs_g594; assert_equal("1990", worksheet.webtool_graphs_g594); end
  def test_webtool_graphs_h594; assert_equal("1995", worksheet.webtool_graphs_h594); end
  def test_webtool_graphs_i594; assert_equal("2000", worksheet.webtool_graphs_i594); end
  def test_webtool_graphs_j594; assert_equal("2005", worksheet.webtool_graphs_j594); end
  def test_webtool_graphs_k594; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k594, 0.002); end
  def test_webtool_graphs_l594; assert_equal("2011", worksheet.webtool_graphs_l594); end
  def test_webtool_graphs_m594; assert_equal("2015", worksheet.webtool_graphs_m594); end
  def test_webtool_graphs_n594; assert_equal("2020", worksheet.webtool_graphs_n594); end
  def test_webtool_graphs_o594; assert_equal("2025", worksheet.webtool_graphs_o594); end
  def test_webtool_graphs_p594; assert_equal("2030", worksheet.webtool_graphs_p594); end
  def test_webtool_graphs_q594; assert_equal("2035", worksheet.webtool_graphs_q594); end
  def test_webtool_graphs_r594; assert_equal("2040", worksheet.webtool_graphs_r594); end
  def test_webtool_graphs_s594; assert_equal("2045", worksheet.webtool_graphs_s594); end
  def test_webtool_graphs_t594; assert_equal("2050", worksheet.webtool_graphs_t594); end
  def test_webtool_graphs_b595; assert_equal("All", worksheet.webtool_graphs_b595); end
  def test_webtool_graphs_c595; assert_equal("appliances.refrigerator.urban", worksheet.webtool_graphs_c595); end
  def test_webtool_graphs_l595; assert_in_epsilon(132969809.14237256, worksheet.webtool_graphs_l595, 0.002); end
  def test_webtool_graphs_m595; assert_in_epsilon(145301691.58197936, worksheet.webtool_graphs_m595, 0.002); end
  def test_webtool_graphs_n595; assert_in_epsilon(177399445.57153547, worksheet.webtool_graphs_n595, 0.002); end
  def test_webtool_graphs_o595; assert_in_epsilon(211394436.94040447, worksheet.webtool_graphs_o595, 0.002); end
  def test_webtool_graphs_p595; assert_in_epsilon(249625213.07037458, worksheet.webtool_graphs_p595, 0.002); end
  def test_webtool_graphs_q595; assert_in_epsilon(290813394.9606138, worksheet.webtool_graphs_q595, 0.002); end
  def test_webtool_graphs_r595; assert_in_epsilon(340474316.54930025, worksheet.webtool_graphs_r595, 0.002); end
  def test_webtool_graphs_s595; assert_in_epsilon(394673358.6246705, worksheet.webtool_graphs_s595, 0.002); end
  def test_webtool_graphs_t595; assert_in_epsilon(461353296.022745, worksheet.webtool_graphs_t595, 0.002); end
  def test_webtool_graphs_b596; assert_equal("All", worksheet.webtool_graphs_b596); end
  def test_webtool_graphs_c596; assert_equal("appliances.refrigerator.rural", worksheet.webtool_graphs_c596); end
  def test_webtool_graphs_l596; assert_in_epsilon(26336578.36666131, worksheet.webtool_graphs_l596, 0.002); end
  def test_webtool_graphs_m596; assert_in_epsilon(28543951.61180577, worksheet.webtool_graphs_m596, 0.002); end
  def test_webtool_graphs_n596; assert_in_epsilon(35506247.49744678, worksheet.webtool_graphs_n596, 0.002); end
  def test_webtool_graphs_o596; assert_in_epsilon(41962784.50814545, worksheet.webtool_graphs_o596, 0.002); end
  def test_webtool_graphs_p596; assert_in_epsilon(48863828.97332072, worksheet.webtool_graphs_p596, 0.002); end
  def test_webtool_graphs_q596; assert_in_epsilon(56097335.49527286, worksheet.webtool_graphs_q596, 0.002); end
  def test_webtool_graphs_r596; assert_in_epsilon(64664997.28379363, worksheet.webtool_graphs_r596, 0.002); end
  def test_webtool_graphs_s596; assert_in_epsilon(73711133.85649246, worksheet.webtool_graphs_s596, 0.002); end
  def test_webtool_graphs_t596; assert_in_epsilon(83652138.88530344, worksheet.webtool_graphs_t596, 0.002); end
  def test_webtool_graphs_b597; assert_equal("TOTAL", worksheet.webtool_graphs_b597); end
  def test_webtool_graphs_c597; assert_equal("TOTAL", worksheet.webtool_graphs_c597); end
  def test_webtool_graphs_l597; assert_in_epsilon(159306387.50903386, worksheet.webtool_graphs_l597, 0.002); end
  def test_webtool_graphs_m597; assert_in_epsilon(173845643.19378513, worksheet.webtool_graphs_m597, 0.002); end
  def test_webtool_graphs_n597; assert_in_epsilon(212905693.06898224, worksheet.webtool_graphs_n597, 0.002); end
  def test_webtool_graphs_o597; assert_in_epsilon(253357221.44854993, worksheet.webtool_graphs_o597, 0.002); end
  def test_webtool_graphs_p597; assert_in_epsilon(298489042.04369533, worksheet.webtool_graphs_p597, 0.002); end
  def test_webtool_graphs_q597; assert_in_epsilon(346910730.45588666, worksheet.webtool_graphs_q597, 0.002); end
  def test_webtool_graphs_r597; assert_in_epsilon(405139313.8330939, worksheet.webtool_graphs_r597, 0.002); end
  def test_webtool_graphs_s597; assert_in_epsilon(468384492.48116297, worksheet.webtool_graphs_s597, 0.002); end
  def test_webtool_graphs_t597; assert_in_epsilon(545005434.9080484, worksheet.webtool_graphs_t597, 0.002); end
  def test_webtool_graphs_b586; assert_equal("Type of city", worksheet.webtool_graphs_b586); end
  def test_webtool_graphs_c586; assert_equal("Technology code", worksheet.webtool_graphs_c586); end
  def test_webtool_graphs_d586; assert_equal("1975", worksheet.webtool_graphs_d586); end
  def test_webtool_graphs_e586; assert_equal("1980", worksheet.webtool_graphs_e586); end
  def test_webtool_graphs_f586; assert_equal("1985", worksheet.webtool_graphs_f586); end
  def test_webtool_graphs_g586; assert_equal("1990", worksheet.webtool_graphs_g586); end
  def test_webtool_graphs_h586; assert_equal("1995", worksheet.webtool_graphs_h586); end
  def test_webtool_graphs_i586; assert_equal("2000", worksheet.webtool_graphs_i586); end
  def test_webtool_graphs_j586; assert_equal("2005", worksheet.webtool_graphs_j586); end
  def test_webtool_graphs_k586; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k586, 0.002); end
  def test_webtool_graphs_l586; assert_equal("2011", worksheet.webtool_graphs_l586); end
  def test_webtool_graphs_m586; assert_equal("2015", worksheet.webtool_graphs_m586); end
  def test_webtool_graphs_n586; assert_equal("2020", worksheet.webtool_graphs_n586); end
  def test_webtool_graphs_o586; assert_equal("2025", worksheet.webtool_graphs_o586); end
  def test_webtool_graphs_p586; assert_equal("2030", worksheet.webtool_graphs_p586); end
  def test_webtool_graphs_q586; assert_equal("2035", worksheet.webtool_graphs_q586); end
  def test_webtool_graphs_r586; assert_equal("2040", worksheet.webtool_graphs_r586); end
  def test_webtool_graphs_s586; assert_equal("2045", worksheet.webtool_graphs_s586); end
  def test_webtool_graphs_t586; assert_equal("2050", worksheet.webtool_graphs_t586); end
  def test_webtool_graphs_b587; assert_equal("All", worksheet.webtool_graphs_b587); end
  def test_webtool_graphs_c587; assert_equal("appliances.tv.urban", worksheet.webtool_graphs_c587); end
  def test_webtool_graphs_l587; assert_in_epsilon(391117887.95654863, worksheet.webtool_graphs_l587, 0.002); end
  def test_webtool_graphs_m587; assert_in_epsilon(433206539.8105667, worksheet.webtool_graphs_m587, 0.002); end
  def test_webtool_graphs_n587; assert_in_epsilon(537161903.3661354, worksheet.webtool_graphs_n587, 0.002); end
  def test_webtool_graphs_o587; assert_in_epsilon(646122132.118535, worksheet.webtool_graphs_o587, 0.002); end
  def test_webtool_graphs_p587; assert_in_epsilon(769714981.1058499, worksheet.webtool_graphs_p587, 0.002); end
  def test_webtool_graphs_q587; assert_in_epsilon(905025913.7370019, worksheet.webtool_graphs_q587, 0.002); end
  def test_webtool_graphs_r587; assert_in_epsilon(1063536591.9830378, worksheet.webtool_graphs_r587, 0.002); end
  def test_webtool_graphs_s587; assert_in_epsilon(1237555067.2446306, worksheet.webtool_graphs_s587, 0.002); end
  def test_webtool_graphs_t587; assert_in_epsilon(1443743392.1979032, worksheet.webtool_graphs_t587, 0.002); end
  def test_webtool_graphs_b588; assert_equal("All", worksheet.webtool_graphs_b588); end
  def test_webtool_graphs_c588; assert_equal("appliances.tv.rural", worksheet.webtool_graphs_c588); end
  def test_webtool_graphs_l588; assert_in_epsilon(81555587.42768046, worksheet.webtool_graphs_l588, 0.002); end
  def test_webtool_graphs_m588; assert_in_epsilon(90384069.77152129, worksheet.webtool_graphs_m588, 0.002); end
  def test_webtool_graphs_n588; assert_in_epsilon(115643171.97714198, worksheet.webtool_graphs_n588, 0.002); end
  def test_webtool_graphs_o588; assert_in_epsilon(139882277.8223825, worksheet.webtool_graphs_o588, 0.002); end
  def test_webtool_graphs_p588; assert_in_epsilon(166503935.87906206, worksheet.webtool_graphs_p588, 0.002); end
  def test_webtool_graphs_q588; assert_in_epsilon(195045679.56867582, worksheet.webtool_graphs_q588, 0.002); end
  def test_webtool_graphs_r588; assert_in_epsilon(227721059.2341184, worksheet.webtool_graphs_r588, 0.002); end
  def test_webtool_graphs_s588; assert_in_epsilon(262621488.3678352, worksheet.webtool_graphs_s588, 0.002); end
  def test_webtool_graphs_t588; assert_in_epsilon(300407401.3530585, worksheet.webtool_graphs_t588, 0.002); end
  def test_webtool_graphs_b589; assert_equal("TOTAL", worksheet.webtool_graphs_b589); end
  def test_webtool_graphs_c589; assert_equal("TOTAL", worksheet.webtool_graphs_c589); end
  def test_webtool_graphs_l589; assert_in_epsilon(472673475.38422906, worksheet.webtool_graphs_l589, 0.002); end
  def test_webtool_graphs_m589; assert_in_epsilon(523590609.582088, worksheet.webtool_graphs_m589, 0.002); end
  def test_webtool_graphs_n589; assert_in_epsilon(652805075.3432773, worksheet.webtool_graphs_n589, 0.002); end
  def test_webtool_graphs_o589; assert_in_epsilon(786004409.9409175, worksheet.webtool_graphs_o589, 0.002); end
  def test_webtool_graphs_p589; assert_in_epsilon(936218916.9849119, worksheet.webtool_graphs_p589, 0.002); end
  def test_webtool_graphs_q589; assert_in_epsilon(1100071593.3056777, worksheet.webtool_graphs_q589, 0.002); end
  def test_webtool_graphs_r589; assert_in_epsilon(1291257651.2171562, worksheet.webtool_graphs_r589, 0.002); end
  def test_webtool_graphs_s589; assert_in_epsilon(1500176555.6124659, worksheet.webtool_graphs_s589, 0.002); end
  def test_webtool_graphs_t589; assert_in_epsilon(1744150793.5509617, worksheet.webtool_graphs_t589, 0.002); end
  def test_webtool_graphs_c629; assert_equal("Fuel type", worksheet.webtool_graphs_c629); end
  def test_webtool_graphs_d629; assert_in_epsilon(1975.0, worksheet.webtool_graphs_d629, 0.002); end
  def test_webtool_graphs_e629; assert_equal("1980", worksheet.webtool_graphs_e629); end
  def test_webtool_graphs_f629; assert_equal("1985", worksheet.webtool_graphs_f629); end
  def test_webtool_graphs_g629; assert_equal("1990", worksheet.webtool_graphs_g629); end
  def test_webtool_graphs_h629; assert_equal("1995", worksheet.webtool_graphs_h629); end
  def test_webtool_graphs_i629; assert_equal("2000", worksheet.webtool_graphs_i629); end
  def test_webtool_graphs_j629; assert_equal("2005", worksheet.webtool_graphs_j629); end
  def test_webtool_graphs_k629; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k629, 0.002); end
  def test_webtool_graphs_l629; assert_equal("2011", worksheet.webtool_graphs_l629); end
  def test_webtool_graphs_m629; assert_equal("2015", worksheet.webtool_graphs_m629); end
  def test_webtool_graphs_n629; assert_equal("2020", worksheet.webtool_graphs_n629); end
  def test_webtool_graphs_o629; assert_equal("2025", worksheet.webtool_graphs_o629); end
  def test_webtool_graphs_p629; assert_equal("2030", worksheet.webtool_graphs_p629); end
  def test_webtool_graphs_q629; assert_equal("2035", worksheet.webtool_graphs_q629); end
  def test_webtool_graphs_r629; assert_equal("2040", worksheet.webtool_graphs_r629); end
  def test_webtool_graphs_s629; assert_equal("2045", worksheet.webtool_graphs_s629); end
  def test_webtool_graphs_t629; assert_equal("2050", worksheet.webtool_graphs_t629); end
  def test_webtool_graphs_c630; assert_equal("CO2e", worksheet.webtool_graphs_c630); end
  def test_webtool_graphs_l630; assert_in_epsilon(579.1253979381529, worksheet.webtool_graphs_l630, 0.002); end
  def test_webtool_graphs_m630; assert_in_epsilon(512.1998914488386, worksheet.webtool_graphs_m630, 0.002); end
  def test_webtool_graphs_n630; assert_in_epsilon(507.4835891619702, worksheet.webtool_graphs_n630, 0.002); end
  def test_webtool_graphs_o630; assert_in_epsilon(512.0978685031212, worksheet.webtool_graphs_o630, 0.002); end
  def test_webtool_graphs_p630; assert_in_epsilon(511.9907873499142, worksheet.webtool_graphs_p630, 0.002); end
  def test_webtool_graphs_q630; assert_in_epsilon(501.6178397095801, worksheet.webtool_graphs_q630, 0.002); end
  def test_webtool_graphs_r630; assert_in_epsilon(489.4473501801651, worksheet.webtool_graphs_r630, 0.002); end
  def test_webtool_graphs_s630; assert_in_epsilon(458.0910978796115, worksheet.webtool_graphs_s630, 0.002); end
  def test_webtool_graphs_t630; assert_in_epsilon(434.3323734444994, worksheet.webtool_graphs_t630, 0.002); end
  def test_webtool_graphs_c395; assert_equal("Description", worksheet.webtool_graphs_c395); end
  def test_webtool_graphs_d395; assert_in_epsilon(1975.0, worksheet.webtool_graphs_d395, 0.002); end
  def test_webtool_graphs_e395; assert_equal("1980", worksheet.webtool_graphs_e395); end
  def test_webtool_graphs_f395; assert_equal("1985", worksheet.webtool_graphs_f395); end
  def test_webtool_graphs_g395; assert_equal("1990", worksheet.webtool_graphs_g395); end
  def test_webtool_graphs_h395; assert_equal("1995", worksheet.webtool_graphs_h395); end
  def test_webtool_graphs_i395; assert_equal("2000", worksheet.webtool_graphs_i395); end
  def test_webtool_graphs_j395; assert_equal("2005", worksheet.webtool_graphs_j395); end
  def test_webtool_graphs_k395; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k395, 0.002); end
  def test_webtool_graphs_l395; assert_equal("2011", worksheet.webtool_graphs_l395); end
  def test_webtool_graphs_m395; assert_equal("2015", worksheet.webtool_graphs_m395); end
  def test_webtool_graphs_n395; assert_equal("2020", worksheet.webtool_graphs_n395); end
  def test_webtool_graphs_o395; assert_equal("2025", worksheet.webtool_graphs_o395); end
  def test_webtool_graphs_p395; assert_equal("2030", worksheet.webtool_graphs_p395); end
  def test_webtool_graphs_q395; assert_equal("2035", worksheet.webtool_graphs_q395); end
  def test_webtool_graphs_r395; assert_equal("2040", worksheet.webtool_graphs_r395); end
  def test_webtool_graphs_s395; assert_equal("2045", worksheet.webtool_graphs_s395); end
  def test_webtool_graphs_t395; assert_equal("2050", worksheet.webtool_graphs_t395); end
  def test_webtool_graphs_c396; assert_equal("Coal", worksheet.webtool_graphs_c396); end
  def test_webtool_graphs_l396; assert_in_delta(1.0, worksheet.webtool_graphs_l396, 0.002); end
  def test_webtool_graphs_m396; assert_in_epsilon(1.1167105786618652, worksheet.webtool_graphs_m396, 0.002); end
  def test_webtool_graphs_n396; assert_in_epsilon(1.2625988019891967, worksheet.webtool_graphs_n396, 0.002); end
  def test_webtool_graphs_o396; assert_in_epsilon(1.386524174783424, worksheet.webtool_graphs_o396, 0.002); end
  def test_webtool_graphs_p396; assert_in_epsilon(1.5276992891433738, worksheet.webtool_graphs_p396, 0.002); end
  def test_webtool_graphs_q396; assert_in_epsilon(1.6241766735938132, worksheet.webtool_graphs_q396, 0.002); end
  def test_webtool_graphs_r396; assert_in_epsilon(1.7071313121808094, worksheet.webtool_graphs_r396, 0.002); end
  def test_webtool_graphs_s396; assert_in_epsilon(1.7197193392314571, worksheet.webtool_graphs_s396, 0.002); end
  def test_webtool_graphs_t396; assert_in_epsilon(1.7341104083249244, worksheet.webtool_graphs_t396, 0.002); end
  def test_webtool_graphs_c397; assert_equal("Oil", worksheet.webtool_graphs_c397); end
  def test_webtool_graphs_l397; assert_in_delta(1.0, worksheet.webtool_graphs_l397, 0.002); end
  def test_webtool_graphs_m397; assert_in_epsilon(1.0476358479126717, worksheet.webtool_graphs_m397, 0.002); end
  def test_webtool_graphs_n397; assert_in_epsilon(1.1071806578035115, worksheet.webtool_graphs_n397, 0.002); end
  def test_webtool_graphs_o397; assert_in_epsilon(1.1229777180304104, worksheet.webtool_graphs_o397, 0.002); end
  def test_webtool_graphs_p397; assert_in_epsilon(1.1009490795273453, worksheet.webtool_graphs_p397, 0.002); end
  def test_webtool_graphs_q397; assert_in_epsilon(1.0864038089374137, worksheet.webtool_graphs_q397, 0.002); end
  def test_webtool_graphs_r397; assert_in_epsilon(1.0898408365182304, worksheet.webtool_graphs_r397, 0.002); end
  def test_webtool_graphs_s397; assert_in_epsilon(1.1538779671335613, worksheet.webtool_graphs_s397, 0.002); end
  def test_webtool_graphs_t397; assert_in_epsilon(1.2079445408147906, worksheet.webtool_graphs_t397, 0.002); end
  def test_webtool_graphs_c398; assert_equal("Iron and Steel", worksheet.webtool_graphs_c398); end
  def test_webtool_graphs_l398; assert_in_delta(1.0, worksheet.webtool_graphs_l398, 0.002); end
  def test_webtool_graphs_m398; assert_in_epsilon(1.0569681843722547, worksheet.webtool_graphs_m398, 0.002); end
  def test_webtool_graphs_n398; assert_in_epsilon(1.1580730099757204, worksheet.webtool_graphs_n398, 0.002); end
  def test_webtool_graphs_o398; assert_in_epsilon(1.2432426864967037, worksheet.webtool_graphs_o398, 0.002); end
  def test_webtool_graphs_p398; assert_in_epsilon(1.3330915586888732, worksheet.webtool_graphs_p398, 0.002); end
  def test_webtool_graphs_q398; assert_in_epsilon(1.4183559888482296, worksheet.webtool_graphs_q398, 0.002); end
  def test_webtool_graphs_r398; assert_in_epsilon(1.517880615132007, worksheet.webtool_graphs_r398, 0.002); end
  def test_webtool_graphs_s398; assert_in_epsilon(1.6235381050109436, worksheet.webtool_graphs_s398, 0.002); end
  def test_webtool_graphs_t398; assert_in_epsilon(1.7357646291453301, worksheet.webtool_graphs_t398, 0.002); end
  def test_webtool_graphs_c430; assert_equal("Description", worksheet.webtool_graphs_c430); end
  def test_webtool_graphs_d430; assert_equal("1980", worksheet.webtool_graphs_d430); end
  def test_webtool_graphs_e430; assert_equal("1985", worksheet.webtool_graphs_e430); end
  def test_webtool_graphs_f430; assert_equal("1990", worksheet.webtool_graphs_f430); end
  def test_webtool_graphs_g430; assert_equal("1995", worksheet.webtool_graphs_g430); end
  def test_webtool_graphs_h430; assert_equal("2000", worksheet.webtool_graphs_h430); end
  def test_webtool_graphs_i430; assert_equal("2005", worksheet.webtool_graphs_i430); end
  def test_webtool_graphs_j430; assert_in_epsilon(2010.0, worksheet.webtool_graphs_j430, 0.002); end
  def test_webtool_graphs_k430; assert_equal("2011", worksheet.webtool_graphs_k430); end
  def test_webtool_graphs_l430; assert_equal("2015", worksheet.webtool_graphs_l430); end
  def test_webtool_graphs_m430; assert_equal("2020", worksheet.webtool_graphs_m430); end
  def test_webtool_graphs_n430; assert_equal("2025", worksheet.webtool_graphs_n430); end
  def test_webtool_graphs_o430; assert_equal("2030", worksheet.webtool_graphs_o430); end
  def test_webtool_graphs_p430; assert_equal("2035", worksheet.webtool_graphs_p430); end
  def test_webtool_graphs_q430; assert_equal("2040", worksheet.webtool_graphs_q430); end
  def test_webtool_graphs_r430; assert_equal("2045", worksheet.webtool_graphs_r430); end
  def test_webtool_graphs_s430; assert_equal("2050", worksheet.webtool_graphs_s430); end
  def test_webtool_graphs_c431; assert_equal("Global urban insulation", worksheet.webtool_graphs_c431); end
  def test_webtool_graphs_k431; assert_in_epsilon(16.9, worksheet.webtool_graphs_k431, 0.002); end
  def test_webtool_graphs_l431; assert_in_epsilon(16.8, worksheet.webtool_graphs_l431, 0.002); end
  def test_webtool_graphs_m431; assert_in_epsilon(16.114285714285714, worksheet.webtool_graphs_m431, 0.002); end
  def test_webtool_graphs_n431; assert_in_epsilon(15.428571428571429, worksheet.webtool_graphs_n431, 0.002); end
  def test_webtool_graphs_o431; assert_in_epsilon(14.742857142857142, worksheet.webtool_graphs_o431, 0.002); end
  def test_webtool_graphs_p431; assert_in_epsilon(14.057142857142857, worksheet.webtool_graphs_p431, 0.002); end
  def test_webtool_graphs_q431; assert_in_epsilon(13.37142857142857, worksheet.webtool_graphs_q431, 0.002); end
  def test_webtool_graphs_r431; assert_in_epsilon(12.685714285714285, worksheet.webtool_graphs_r431, 0.002); end
  def test_webtool_graphs_s431; assert_in_epsilon(12.0, worksheet.webtool_graphs_s431, 0.002); end
  def test_webtool_graphs_c432; assert_equal("Global rural insulation", worksheet.webtool_graphs_c432); end
  def test_webtool_graphs_k432; assert_in_epsilon(18.700000000000003, worksheet.webtool_graphs_k432, 0.002); end
  def test_webtool_graphs_l432; assert_in_epsilon(18.5, worksheet.webtool_graphs_l432, 0.002); end
  def test_webtool_graphs_m432; assert_in_epsilon(17.57142857142857, worksheet.webtool_graphs_m432, 0.002); end
  def test_webtool_graphs_n432; assert_in_epsilon(16.642857142857142, worksheet.webtool_graphs_n432, 0.002); end
  def test_webtool_graphs_o432; assert_in_epsilon(15.714285714285714, worksheet.webtool_graphs_o432, 0.002); end
  def test_webtool_graphs_p432; assert_in_epsilon(14.785714285714285, worksheet.webtool_graphs_p432, 0.002); end
  def test_webtool_graphs_q432; assert_in_epsilon(13.857142857142858, worksheet.webtool_graphs_q432, 0.002); end
  def test_webtool_graphs_r432; assert_in_epsilon(12.928571428571427, worksheet.webtool_graphs_r432, 0.002); end
  def test_webtool_graphs_s432; assert_in_epsilon(12.0, worksheet.webtool_graphs_s432, 0.002); end
  def test_webtool_graphs_c433; assert_equal("Global non residential insulation", worksheet.webtool_graphs_c433); end
  def test_webtool_graphs_k433; assert_in_epsilon(14.8, worksheet.webtool_graphs_k433, 0.002); end
  def test_webtool_graphs_l433; assert_in_epsilon(14.700000000000001, worksheet.webtool_graphs_l433, 0.002); end
  def test_webtool_graphs_m433; assert_in_epsilon(14.314285714285713, worksheet.webtool_graphs_m433, 0.002); end
  def test_webtool_graphs_n433; assert_in_epsilon(13.92857142857143, worksheet.webtool_graphs_n433, 0.002); end
  def test_webtool_graphs_o433; assert_in_epsilon(13.542857142857143, worksheet.webtool_graphs_o433, 0.002); end
  def test_webtool_graphs_p433; assert_in_epsilon(13.157142857142857, worksheet.webtool_graphs_p433, 0.002); end
  def test_webtool_graphs_q433; assert_in_epsilon(12.771428571428572, worksheet.webtool_graphs_q433, 0.002); end
  def test_webtool_graphs_r433; assert_in_epsilon(12.385714285714284, worksheet.webtool_graphs_r433, 0.002); end
  def test_webtool_graphs_s433; assert_in_epsilon(12.0, worksheet.webtool_graphs_s433, 0.002); end
  def test_webtool_graphs_b512; assert_equal("Energy description", worksheet.webtool_graphs_b512); end
  def test_webtool_graphs_c512; assert_equal("Technology code", worksheet.webtool_graphs_c512); end
  def test_webtool_graphs_d512; assert_equal("1975", worksheet.webtool_graphs_d512); end
  def test_webtool_graphs_e512; assert_equal("1980", worksheet.webtool_graphs_e512); end
  def test_webtool_graphs_f512; assert_equal("1985", worksheet.webtool_graphs_f512); end
  def test_webtool_graphs_g512; assert_equal("1990", worksheet.webtool_graphs_g512); end
  def test_webtool_graphs_h512; assert_equal("1995", worksheet.webtool_graphs_h512); end
  def test_webtool_graphs_i512; assert_equal("2000", worksheet.webtool_graphs_i512); end
  def test_webtool_graphs_j512; assert_equal("2005", worksheet.webtool_graphs_j512); end
  def test_webtool_graphs_k512; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k512, 0.002); end
  def test_webtool_graphs_l512; assert_equal("2011", worksheet.webtool_graphs_l512); end
  def test_webtool_graphs_m512; assert_equal("2015", worksheet.webtool_graphs_m512); end
  def test_webtool_graphs_n512; assert_equal("2020", worksheet.webtool_graphs_n512); end
  def test_webtool_graphs_o512; assert_equal("2025", worksheet.webtool_graphs_o512); end
  def test_webtool_graphs_p512; assert_equal("2030", worksheet.webtool_graphs_p512); end
  def test_webtool_graphs_q512; assert_equal("2035", worksheet.webtool_graphs_q512); end
  def test_webtool_graphs_r512; assert_equal("2040", worksheet.webtool_graphs_r512); end
  def test_webtool_graphs_s512; assert_equal("2045", worksheet.webtool_graphs_s512); end
  def test_webtool_graphs_t512; assert_equal("2050", worksheet.webtool_graphs_t512); end
  def test_webtool_graphs_b513; assert_equal("Global Materials", worksheet.webtool_graphs_b513); end
  def test_webtool_graphs_c513; assert_equal("Aluminium.Alumina", worksheet.webtool_graphs_c513); end
  def test_webtool_graphs_j513; assert_equal("", worksheet.webtool_graphs_j513); end
  def test_webtool_graphs_l513; assert_in_epsilon(1.3689321930948124, worksheet.webtool_graphs_l513, 0.002); end
  def test_webtool_graphs_m513; assert_in_epsilon(1.5153920306654354, worksheet.webtool_graphs_m513, 0.002); end
  def test_webtool_graphs_n513; assert_in_epsilon(1.763638175699309, worksheet.webtool_graphs_n513, 0.002); end
  def test_webtool_graphs_o513; assert_in_epsilon(2.0321744786186535, worksheet.webtool_graphs_o513, 0.002); end
  def test_webtool_graphs_p513; assert_in_epsilon(2.324335105952678, worksheet.webtool_graphs_p513, 0.002); end
  def test_webtool_graphs_q513; assert_in_epsilon(2.627623597584573, worksheet.webtool_graphs_q513, 0.002); end
  def test_webtool_graphs_r513; assert_in_epsilon(2.974933406944359, worksheet.webtool_graphs_r513, 0.002); end
  def test_webtool_graphs_s513; assert_in_epsilon(3.348931485095681, worksheet.webtool_graphs_s513, 0.002); end
  def test_webtool_graphs_t513; assert_in_epsilon(3.779421720112677, worksheet.webtool_graphs_t513, 0.002); end
  def test_webtool_graphs_b514; assert_equal("Global Materials", worksheet.webtool_graphs_b514); end
  def test_webtool_graphs_c514; assert_equal("Aluminium.Primary", worksheet.webtool_graphs_c514); end
  def test_webtool_graphs_l514; assert_in_epsilon(2.7584780625440373, worksheet.webtool_graphs_l514, 0.002); end
  def test_webtool_graphs_m514; assert_in_epsilon(3.03795677848563, worksheet.webtool_graphs_m514, 0.002); end
  def test_webtool_graphs_n514; assert_in_epsilon(3.5128619587732857, worksheet.webtool_graphs_n514, 0.002); end
  def test_webtool_graphs_o514; assert_in_epsilon(4.021511566485439, worksheet.webtool_graphs_o514, 0.002); end
  def test_webtool_graphs_p514; assert_in_epsilon(4.569674882970696, worksheet.webtool_graphs_p514, 0.002); end
  def test_webtool_graphs_q514; assert_in_epsilon(5.132030131179142, worksheet.webtool_graphs_q514, 0.002); end
  def test_webtool_graphs_r514; assert_in_epsilon(5.771966192885802, worksheet.webtool_graphs_r514, 0.002); end
  def test_webtool_graphs_s514; assert_in_epsilon(6.454372520953258, worksheet.webtool_graphs_s514, 0.002); end
  def test_webtool_graphs_t514; assert_in_epsilon(7.23527170273438, worksheet.webtool_graphs_t514, 0.002); end
  def test_webtool_graphs_b515; assert_equal("Global Materials", worksheet.webtool_graphs_b515); end
  def test_webtool_graphs_c515; assert_equal("Aluminium.Secondary", worksheet.webtool_graphs_c515); end
  def test_webtool_graphs_l515; assert_in_delta(0.26361993307490655, worksheet.webtool_graphs_l515, 0.002); end
  def test_webtool_graphs_m515; assert_in_delta(0.26951564902884756, worksheet.webtool_graphs_m515, 0.002); end
  def test_webtool_graphs_n515; assert_in_delta(0.275773000650527, worksheet.webtool_graphs_n515, 0.002); end
  def test_webtool_graphs_o515; assert_in_delta(0.277240951491603, worksheet.webtool_graphs_o515, 0.002); end
  def test_webtool_graphs_p515; assert_in_delta(0.2740132287316814, worksheet.webtool_graphs_p515, 0.002); end
  def test_webtool_graphs_q515; assert_in_delta(0.26441698458865226, worksheet.webtool_graphs_q515, 0.002); end
  def test_webtool_graphs_r515; assert_in_delta(0.2514926780452733, worksheet.webtool_graphs_r515, 0.002); end
  def test_webtool_graphs_s515; assert_in_delta(0.23279415373661788, worksheet.webtool_graphs_s515, 0.002); end
  def test_webtool_graphs_t515; assert_in_delta(0.20964119344869514, worksheet.webtool_graphs_t515, 0.002); end
  def test_webtool_graphs_b516; assert_equal("TOTAL", worksheet.webtool_graphs_b516); end
  def test_webtool_graphs_c516; assert_equal("TOTAL", worksheet.webtool_graphs_c516); end
  def test_webtool_graphs_l516; assert_in_epsilon(4.391030188713756, worksheet.webtool_graphs_l516, 0.002); end
  def test_webtool_graphs_m516; assert_in_epsilon(4.822864458179914, worksheet.webtool_graphs_m516, 0.002); end
  def test_webtool_graphs_n516; assert_in_epsilon(5.552273135123121, worksheet.webtool_graphs_n516, 0.002); end
  def test_webtool_graphs_o516; assert_in_epsilon(6.330926996595696, worksheet.webtool_graphs_o516, 0.002); end
  def test_webtool_graphs_p516; assert_in_epsilon(7.168023217655056, worksheet.webtool_graphs_p516, 0.002); end
  def test_webtool_graphs_q516; assert_in_epsilon(8.024070713352367, worksheet.webtool_graphs_q516, 0.002); end
  def test_webtool_graphs_r516; assert_in_epsilon(8.998392277875435, worksheet.webtool_graphs_r516, 0.002); end
  def test_webtool_graphs_s516; assert_in_epsilon(10.036098159785556, worksheet.webtool_graphs_s516, 0.002); end
  def test_webtool_graphs_t516; assert_in_epsilon(11.224334616295751, worksheet.webtool_graphs_t516, 0.002); end
  def test_webtool_graphs_c503; assert_equal("Technology code", worksheet.webtool_graphs_c503); end
  def test_webtool_graphs_d503; assert_equal("1975", worksheet.webtool_graphs_d503); end
  def test_webtool_graphs_e503; assert_equal("1980", worksheet.webtool_graphs_e503); end
  def test_webtool_graphs_f503; assert_equal("1985", worksheet.webtool_graphs_f503); end
  def test_webtool_graphs_g503; assert_equal("1990", worksheet.webtool_graphs_g503); end
  def test_webtool_graphs_h503; assert_equal("1995", worksheet.webtool_graphs_h503); end
  def test_webtool_graphs_i503; assert_equal("2000", worksheet.webtool_graphs_i503); end
  def test_webtool_graphs_j503; assert_equal("2005", worksheet.webtool_graphs_j503); end
  def test_webtool_graphs_k503; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k503, 0.002); end
  def test_webtool_graphs_l503; assert_equal("2011", worksheet.webtool_graphs_l503); end
  def test_webtool_graphs_m503; assert_equal("2015", worksheet.webtool_graphs_m503); end
  def test_webtool_graphs_n503; assert_equal("2020", worksheet.webtool_graphs_n503); end
  def test_webtool_graphs_o503; assert_equal("2025", worksheet.webtool_graphs_o503); end
  def test_webtool_graphs_p503; assert_equal("2030", worksheet.webtool_graphs_p503); end
  def test_webtool_graphs_q503; assert_equal("2035", worksheet.webtool_graphs_q503); end
  def test_webtool_graphs_r503; assert_equal("2040", worksheet.webtool_graphs_r503); end
  def test_webtool_graphs_s503; assert_equal("2045", worksheet.webtool_graphs_s503); end
  def test_webtool_graphs_t503; assert_equal("2050", worksheet.webtool_graphs_t503); end
  def test_webtool_graphs_c504; assert_equal("Aluminium.Alumina", worksheet.webtool_graphs_c504); end
  def test_webtool_graphs_j504; assert_equal("", worksheet.webtool_graphs_j504); end
  def test_webtool_graphs_l504; assert_in_delta(0.073193371324196, worksheet.webtool_graphs_l504, 0.002); end
  def test_webtool_graphs_m504; assert_in_delta(0.07859871570496697, worksheet.webtool_graphs_m504, 0.002); end
  def test_webtool_graphs_n504; assert_in_delta(0.08852594959094223, worksheet.webtool_graphs_n504, 0.002); end
  def test_webtool_graphs_o504; assert_in_delta(0.09885925248547434, worksheet.webtool_graphs_o504, 0.002); end
  def test_webtool_graphs_p504; assert_in_delta(0.1097088364538661, worksheet.webtool_graphs_p504, 0.002); end
  def test_webtool_graphs_q504; assert_in_delta(0.12046427746102342, worksheet.webtool_graphs_q504, 0.002); end
  def test_webtool_graphs_r504; assert_in_delta(0.13260196469469754, worksheet.webtool_graphs_r504, 0.002); end
  def test_webtool_graphs_s504; assert_in_delta(0.1452573318176815, worksheet.webtool_graphs_s504, 0.002); end
  def test_webtool_graphs_t504; assert_in_delta(0.15968287681127138, worksheet.webtool_graphs_t504, 0.002); end
  def test_webtool_graphs_c505; assert_equal("Aluminium.Primary", worksheet.webtool_graphs_c505); end
  def test_webtool_graphs_l505; assert_in_delta(0.04738999999999999, worksheet.webtool_graphs_l505, 0.002); end
  def test_webtool_graphs_m505; assert_in_delta(0.05088976050522564, worksheet.webtool_graphs_m505, 0.002); end
  def test_webtool_graphs_n505; assert_in_delta(0.05731727716889442, worksheet.webtool_graphs_n505, 0.002); end
  def test_webtool_graphs_o505; assert_in_delta(0.06400770849228388, worksheet.webtool_graphs_o505, 0.002); end
  def test_webtool_graphs_p505; assert_in_delta(0.07103241271016592, worksheet.webtool_graphs_p505, 0.002); end
  def test_webtool_graphs_q505; assert_in_delta(0.07799616284365227, worksheet.webtool_graphs_q505, 0.002); end
  def test_webtool_graphs_r505; assert_in_delta(0.08585486626989637, worksheet.webtool_graphs_r505, 0.002); end
  def test_webtool_graphs_s505; assert_in_delta(0.09404874827188511, worksheet.webtool_graphs_s505, 0.002); end
  def test_webtool_graphs_t505; assert_in_delta(0.10338875495388684, worksheet.webtool_graphs_t505, 0.002); end
  def test_webtool_graphs_c506; assert_equal("Aluminium.Secondary", worksheet.webtool_graphs_c506); end
  def test_webtool_graphs_l506; assert_in_delta(0.020309999999999995, worksheet.webtool_graphs_l506, 0.002); end
  def test_webtool_graphs_m506; assert_in_delta(0.021809897359382414, worksheet.webtool_graphs_m506, 0.002); end
  def test_webtool_graphs_n506; assert_in_delta(0.024564547358097606, worksheet.webtool_graphs_n506, 0.002); end
  def test_webtool_graphs_o506; assert_in_delta(0.02743187506812166, worksheet.webtool_graphs_o506, 0.002); end
  def test_webtool_graphs_p506; assert_in_delta(0.0304424625900711, worksheet.webtool_graphs_p506, 0.002); end
  def test_webtool_graphs_q506; assert_in_delta(0.033426926932993824, worksheet.webtool_graphs_q506, 0.002); end
  def test_webtool_graphs_r506; assert_in_delta(0.03679494268709844, worksheet.webtool_graphs_r506, 0.002); end
  def test_webtool_graphs_s506; assert_in_delta(0.04030660640223647, worksheet.webtool_graphs_s506, 0.002); end
  def test_webtool_graphs_t506; assert_in_delta(0.04430946640880864, worksheet.webtool_graphs_t506, 0.002); end
  def test_webtool_graphs_c507; assert_equal("TOTAL - Primary and Secondary", worksheet.webtool_graphs_c507); end
  def test_webtool_graphs_l507; assert_in_delta(0.06769999999999998, worksheet.webtool_graphs_l507, 0.002); end
  def test_webtool_graphs_m507; assert_in_delta(0.07269965786460805, worksheet.webtool_graphs_m507, 0.002); end
  def test_webtool_graphs_n507; assert_in_delta(0.08188182452699203, worksheet.webtool_graphs_n507, 0.002); end
  def test_webtool_graphs_o507; assert_in_delta(0.09143958356040553, worksheet.webtool_graphs_o507, 0.002); end
  def test_webtool_graphs_p507; assert_in_delta(0.10147487530023702, worksheet.webtool_graphs_p507, 0.002); end
  def test_webtool_graphs_q507; assert_in_delta(0.11142308977664608, worksheet.webtool_graphs_q507, 0.002); end
  def test_webtool_graphs_r507; assert_in_delta(0.12264980895699482, worksheet.webtool_graphs_r507, 0.002); end
  def test_webtool_graphs_s507; assert_in_delta(0.13435535467412157, worksheet.webtool_graphs_s507, 0.002); end
  def test_webtool_graphs_t507; assert_in_delta(0.14769822136269548, worksheet.webtool_graphs_t507, 0.002); end
  def test_webtool_graphs_b577; assert_equal("Energy description", worksheet.webtool_graphs_b577); end
  def test_webtool_graphs_c577; assert_equal("Technology code", worksheet.webtool_graphs_c577); end
  def test_webtool_graphs_d577; assert_equal("1975", worksheet.webtool_graphs_d577); end
  def test_webtool_graphs_e577; assert_equal("1980", worksheet.webtool_graphs_e577); end
  def test_webtool_graphs_f577; assert_equal("1985", worksheet.webtool_graphs_f577); end
  def test_webtool_graphs_g577; assert_equal("1990", worksheet.webtool_graphs_g577); end
  def test_webtool_graphs_h577; assert_equal("1995", worksheet.webtool_graphs_h577); end
  def test_webtool_graphs_i577; assert_equal("2000", worksheet.webtool_graphs_i577); end
  def test_webtool_graphs_j577; assert_equal("2005", worksheet.webtool_graphs_j577); end
  def test_webtool_graphs_k577; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k577, 0.002); end
  def test_webtool_graphs_l577; assert_equal("2011", worksheet.webtool_graphs_l577); end
  def test_webtool_graphs_m577; assert_equal("2015", worksheet.webtool_graphs_m577); end
  def test_webtool_graphs_n577; assert_equal("2020", worksheet.webtool_graphs_n577); end
  def test_webtool_graphs_o577; assert_equal("2025", worksheet.webtool_graphs_o577); end
  def test_webtool_graphs_p577; assert_equal("2030", worksheet.webtool_graphs_p577); end
  def test_webtool_graphs_q577; assert_equal("2035", worksheet.webtool_graphs_q577); end
  def test_webtool_graphs_r577; assert_equal("2040", worksheet.webtool_graphs_r577); end
  def test_webtool_graphs_s577; assert_equal("2045", worksheet.webtool_graphs_s577); end
  def test_webtool_graphs_t577; assert_equal("2050", worksheet.webtool_graphs_t577); end
  def test_webtool_graphs_b578; assert_equal("Global Materials", worksheet.webtool_graphs_b578); end
  def test_webtool_graphs_c578; assert_equal("Cement", worksheet.webtool_graphs_c578); end
  def test_webtool_graphs_j578; assert_equal("", worksheet.webtool_graphs_j578); end
  def test_webtool_graphs_l578; assert_in_epsilon(10.600379598268718, worksheet.webtool_graphs_l578, 0.002); end
  def test_webtool_graphs_m578; assert_in_epsilon(10.895857974933485, worksheet.webtool_graphs_m578, 0.002); end
  def test_webtool_graphs_n578; assert_in_epsilon(11.446185999013144, worksheet.webtool_graphs_n578, 0.002); end
  def test_webtool_graphs_o578; assert_in_epsilon(11.633288734537036, worksheet.webtool_graphs_o578, 0.002); end
  def test_webtool_graphs_p578; assert_in_epsilon(11.783495682215477, worksheet.webtool_graphs_p578, 0.002); end
  def test_webtool_graphs_q578; assert_in_epsilon(11.927143571800197, worksheet.webtool_graphs_q578, 0.002); end
  def test_webtool_graphs_r578; assert_in_epsilon(12.035109513871804, worksheet.webtool_graphs_r578, 0.002); end
  def test_webtool_graphs_s578; assert_in_epsilon(12.086982017184825, worksheet.webtool_graphs_s578, 0.002); end
  def test_webtool_graphs_t578; assert_in_epsilon(12.200900307691672, worksheet.webtool_graphs_t578, 0.002); end
  def test_webtool_graphs_b579; assert_equal("TOTAL", worksheet.webtool_graphs_b579); end
  def test_webtool_graphs_c579; assert_equal("TOTAL", worksheet.webtool_graphs_c579); end
  def test_webtool_graphs_l579; assert_in_epsilon(10.600379598268718, worksheet.webtool_graphs_l579, 0.002); end
  def test_webtool_graphs_m579; assert_in_epsilon(10.895857974933485, worksheet.webtool_graphs_m579, 0.002); end
  def test_webtool_graphs_n579; assert_in_epsilon(11.446185999013144, worksheet.webtool_graphs_n579, 0.002); end
  def test_webtool_graphs_o579; assert_in_epsilon(11.633288734537036, worksheet.webtool_graphs_o579, 0.002); end
  def test_webtool_graphs_p579; assert_in_epsilon(11.783495682215477, worksheet.webtool_graphs_p579, 0.002); end
  def test_webtool_graphs_q579; assert_in_epsilon(11.927143571800197, worksheet.webtool_graphs_q579, 0.002); end
  def test_webtool_graphs_r579; assert_in_epsilon(12.035109513871804, worksheet.webtool_graphs_r579, 0.002); end
  def test_webtool_graphs_s579; assert_in_epsilon(12.086982017184825, worksheet.webtool_graphs_s579, 0.002); end
  def test_webtool_graphs_t579; assert_in_epsilon(12.200900307691672, worksheet.webtool_graphs_t579, 0.002); end
  def test_webtool_graphs_c570; assert_equal("Technology code", worksheet.webtool_graphs_c570); end
  def test_webtool_graphs_d570; assert_equal("1975", worksheet.webtool_graphs_d570); end
  def test_webtool_graphs_e570; assert_equal("1980", worksheet.webtool_graphs_e570); end
  def test_webtool_graphs_f570; assert_equal("1985", worksheet.webtool_graphs_f570); end
  def test_webtool_graphs_g570; assert_equal("1990", worksheet.webtool_graphs_g570); end
  def test_webtool_graphs_h570; assert_equal("1995", worksheet.webtool_graphs_h570); end
  def test_webtool_graphs_i570; assert_equal("2000", worksheet.webtool_graphs_i570); end
  def test_webtool_graphs_j570; assert_equal("2005", worksheet.webtool_graphs_j570); end
  def test_webtool_graphs_k570; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k570, 0.002); end
  def test_webtool_graphs_l570; assert_equal("2011", worksheet.webtool_graphs_l570); end
  def test_webtool_graphs_m570; assert_equal("2015", worksheet.webtool_graphs_m570); end
  def test_webtool_graphs_n570; assert_equal("2020", worksheet.webtool_graphs_n570); end
  def test_webtool_graphs_o570; assert_equal("2025", worksheet.webtool_graphs_o570); end
  def test_webtool_graphs_p570; assert_equal("2030", worksheet.webtool_graphs_p570); end
  def test_webtool_graphs_q570; assert_equal("2035", worksheet.webtool_graphs_q570); end
  def test_webtool_graphs_r570; assert_equal("2040", worksheet.webtool_graphs_r570); end
  def test_webtool_graphs_s570; assert_equal("2045", worksheet.webtool_graphs_s570); end
  def test_webtool_graphs_t570; assert_equal("2050", worksheet.webtool_graphs_t570); end
  def test_webtool_graphs_c571; assert_equal("Cement", worksheet.webtool_graphs_c571); end
  def test_webtool_graphs_j571; assert_equal("", worksheet.webtool_graphs_j571); end
  def test_webtool_graphs_l571; assert_in_epsilon(3.6351730407050002, worksheet.webtool_graphs_l571, 0.002); end
  def test_webtool_graphs_m571; assert_in_epsilon(3.807202566368162, worksheet.webtool_graphs_m571, 0.002); end
  def test_webtool_graphs_n571; assert_in_epsilon(4.059368771227328, worksheet.webtool_graphs_n571, 0.002); end
  def test_webtool_graphs_o571; assert_in_epsilon(4.18796591370365, worksheet.webtool_graphs_o571, 0.002); end
  def test_webtool_graphs_p571; assert_in_epsilon(4.30653911045561, worksheet.webtool_graphs_p571, 0.002); end
  def test_webtool_graphs_q571; assert_in_epsilon(4.4258425806135255, worksheet.webtool_graphs_q571, 0.002); end
  def test_webtool_graphs_r571; assert_in_epsilon(4.534897367243449, worksheet.webtool_graphs_r571, 0.002); end
  def test_webtool_graphs_s571; assert_in_epsilon(4.625373842456976, worksheet.webtool_graphs_s571, 0.002); end
  def test_webtool_graphs_t571; assert_in_epsilon(4.742278808155485, worksheet.webtool_graphs_t571, 0.002); end
  def test_webtool_graphs_c572; assert_equal("TOTAL", worksheet.webtool_graphs_c572); end
  def test_webtool_graphs_l572; assert_in_epsilon(3.6351730407050002, worksheet.webtool_graphs_l572, 0.002); end
  def test_webtool_graphs_m572; assert_in_epsilon(3.807202566368162, worksheet.webtool_graphs_m572, 0.002); end
  def test_webtool_graphs_n572; assert_in_epsilon(4.059368771227328, worksheet.webtool_graphs_n572, 0.002); end
  def test_webtool_graphs_o572; assert_in_epsilon(4.18796591370365, worksheet.webtool_graphs_o572, 0.002); end
  def test_webtool_graphs_p572; assert_in_epsilon(4.30653911045561, worksheet.webtool_graphs_p572, 0.002); end
  def test_webtool_graphs_q572; assert_in_epsilon(4.4258425806135255, worksheet.webtool_graphs_q572, 0.002); end
  def test_webtool_graphs_r572; assert_in_epsilon(4.534897367243449, worksheet.webtool_graphs_r572, 0.002); end
  def test_webtool_graphs_s572; assert_in_epsilon(4.625373842456976, worksheet.webtool_graphs_s572, 0.002); end
  def test_webtool_graphs_t572; assert_in_epsilon(4.742278808155485, worksheet.webtool_graphs_t572, 0.002); end
  def test_webtool_graphs_b535; assert_equal("Energy description", worksheet.webtool_graphs_b535); end
  def test_webtool_graphs_c535; assert_equal("Technology code", worksheet.webtool_graphs_c535); end
  def test_webtool_graphs_d535; assert_equal("1975", worksheet.webtool_graphs_d535); end
  def test_webtool_graphs_e535; assert_equal("1980", worksheet.webtool_graphs_e535); end
  def test_webtool_graphs_f535; assert_equal("1985", worksheet.webtool_graphs_f535); end
  def test_webtool_graphs_g535; assert_equal("1990", worksheet.webtool_graphs_g535); end
  def test_webtool_graphs_h535; assert_equal("1995", worksheet.webtool_graphs_h535); end
  def test_webtool_graphs_i535; assert_equal("2000", worksheet.webtool_graphs_i535); end
  def test_webtool_graphs_j535; assert_equal("2005", worksheet.webtool_graphs_j535); end
  def test_webtool_graphs_k535; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k535, 0.002); end
  def test_webtool_graphs_l535; assert_equal("2011", worksheet.webtool_graphs_l535); end
  def test_webtool_graphs_m535; assert_equal("2015", worksheet.webtool_graphs_m535); end
  def test_webtool_graphs_n535; assert_equal("2020", worksheet.webtool_graphs_n535); end
  def test_webtool_graphs_o535; assert_equal("2025", worksheet.webtool_graphs_o535); end
  def test_webtool_graphs_p535; assert_equal("2030", worksheet.webtool_graphs_p535); end
  def test_webtool_graphs_q535; assert_equal("2035", worksheet.webtool_graphs_q535); end
  def test_webtool_graphs_r535; assert_equal("2040", worksheet.webtool_graphs_r535); end
  def test_webtool_graphs_s535; assert_equal("2045", worksheet.webtool_graphs_s535); end
  def test_webtool_graphs_t535; assert_equal("2050", worksheet.webtool_graphs_t535); end
  def test_webtool_graphs_b536; assert_equal("Global Materials", worksheet.webtool_graphs_b536); end
  def test_webtool_graphs_c536; assert_equal("Chemicals & petrochemicals.HVC", worksheet.webtool_graphs_c536); end
  def test_webtool_graphs_j536; assert_equal("", worksheet.webtool_graphs_j536); end
  def test_webtool_graphs_l536; assert_in_epsilon(19.460745993692754, worksheet.webtool_graphs_l536, 0.002); end
  def test_webtool_graphs_m536; assert_in_epsilon(20.695930424607596, worksheet.webtool_graphs_m536, 0.002); end
  def test_webtool_graphs_n536; assert_in_epsilon(24.089645030996927, worksheet.webtool_graphs_n536, 0.002); end
  def test_webtool_graphs_o536; assert_in_epsilon(27.643962123089786, worksheet.webtool_graphs_o536, 0.002); end
  def test_webtool_graphs_p536; assert_in_epsilon(31.504890211955768, worksheet.webtool_graphs_p536, 0.002); end
  def test_webtool_graphs_q536; assert_in_epsilon(35.52653039825862, worksheet.webtool_graphs_q536, 0.002); end
  def test_webtool_graphs_r536; assert_in_epsilon(40.190017552166196, worksheet.webtool_graphs_r536, 0.002); end
  def test_webtool_graphs_s536; assert_in_epsilon(45.136387297913345, worksheet.webtool_graphs_s536, 0.002); end
  def test_webtool_graphs_t536; assert_in_epsilon(50.786199012834665, worksheet.webtool_graphs_t536, 0.002); end
  def test_webtool_graphs_b537; assert_equal("Global Materials", worksheet.webtool_graphs_b537); end
  def test_webtool_graphs_c537; assert_equal("Chemicals & petrochemicals.Ammonia", worksheet.webtool_graphs_c537); end
  def test_webtool_graphs_l537; assert_in_epsilon(5.957349170600305, worksheet.webtool_graphs_l537, 0.002); end
  def test_webtool_graphs_m537; assert_in_epsilon(6.219172136917445, worksheet.webtool_graphs_m537, 0.002); end
  def test_webtool_graphs_n537; assert_in_epsilon(6.53954154527417, worksheet.webtool_graphs_n537, 0.002); end
  def test_webtool_graphs_o537; assert_in_epsilon(6.838832205006832, worksheet.webtool_graphs_o537, 0.002); end
  def test_webtool_graphs_p537; assert_in_epsilon(7.132444171025553, worksheet.webtool_graphs_p537, 0.002); end
  def test_webtool_graphs_q537; assert_in_epsilon(7.435479463014127, worksheet.webtool_graphs_q537, 0.002); end
  def test_webtool_graphs_r537; assert_in_epsilon(7.747337635170221, worksheet.webtool_graphs_r537, 0.002); end
  def test_webtool_graphs_s537; assert_in_epsilon(8.036699249886938, worksheet.webtool_graphs_s537, 0.002); end
  def test_webtool_graphs_t537; assert_in_epsilon(8.341583760500425, worksheet.webtool_graphs_t537, 0.002); end
  def test_webtool_graphs_b538; assert_equal("Global Materials", worksheet.webtool_graphs_b538); end
  def test_webtool_graphs_c538; assert_equal("Chemicals & petrochemicals.Methanol", worksheet.webtool_graphs_c538); end
  def test_webtool_graphs_l538; assert_in_epsilon(1.6638113188620842, worksheet.webtool_graphs_l538, 0.002); end
  def test_webtool_graphs_m538; assert_in_epsilon(1.7542174279521392, worksheet.webtool_graphs_m538, 0.002); end
  def test_webtool_graphs_n538; assert_in_epsilon(2.0470740193463226, worksheet.webtool_graphs_n538, 0.002); end
  def test_webtool_graphs_o538; assert_in_epsilon(2.3502078403293556, worksheet.webtool_graphs_o538, 0.002); end
  def test_webtool_graphs_p538; assert_in_epsilon(2.6783064375936223, worksheet.webtool_graphs_p538, 0.002); end
  def test_webtool_graphs_q538; assert_in_epsilon(3.0198392079454055, worksheet.webtool_graphs_q538, 0.002); end
  def test_webtool_graphs_r538; assert_in_epsilon(3.416150115935345, worksheet.webtool_graphs_r538, 0.002); end
  def test_webtool_graphs_s538; assert_in_epsilon(3.832966696569927, worksheet.webtool_graphs_s538, 0.002); end
  def test_webtool_graphs_t538; assert_in_epsilon(4.317173953251161, worksheet.webtool_graphs_t538, 0.002); end
  def test_webtool_graphs_b539; assert_equal("Global Materials", worksheet.webtool_graphs_b539); end
  def test_webtool_graphs_c539; assert_equal("Chemicals & petrochemicals.Others", worksheet.webtool_graphs_c539); end
  def test_webtool_graphs_l539; assert_in_epsilon(12.7269993633999, worksheet.webtool_graphs_l539, 0.002); end
  def test_webtool_graphs_m539; assert_in_epsilon(13.360822027687508, worksheet.webtool_graphs_m539, 0.002); end
  def test_webtool_graphs_n539; assert_in_epsilon(15.600948934078104, worksheet.webtool_graphs_n539, 0.002); end
  def test_webtool_graphs_o539; assert_in_epsilon(17.922201911085814, worksheet.webtool_graphs_o539, 0.002); end
  def test_webtool_graphs_p539; assert_in_epsilon(20.436800302083146, worksheet.webtool_graphs_p539, 0.002); end
  def test_webtool_graphs_q539; assert_in_epsilon(23.05705902806373, worksheet.webtool_graphs_q539, 0.002); end
  def test_webtool_graphs_r539; assert_in_epsilon(26.099032562204222, worksheet.webtool_graphs_r539, 0.002); end
  def test_webtool_graphs_s539; assert_in_epsilon(29.301495983114524, worksheet.webtool_graphs_s539, 0.002); end
  def test_webtool_graphs_t539; assert_in_epsilon(33.02337803080459, worksheet.webtool_graphs_t539, 0.002); end
  def test_webtool_graphs_b540; assert_equal("TOTAL", worksheet.webtool_graphs_b540); end
  def test_webtool_graphs_c540; assert_equal("TOTAL", worksheet.webtool_graphs_c540); end
  def test_webtool_graphs_l540; assert_in_epsilon(39.80890584655504, worksheet.webtool_graphs_l540, 0.002); end
  def test_webtool_graphs_m540; assert_in_epsilon(42.030142017164685, worksheet.webtool_graphs_m540, 0.002); end
  def test_webtool_graphs_n540; assert_in_epsilon(48.277209529695526, worksheet.webtool_graphs_n540, 0.002); end
  def test_webtool_graphs_o540; assert_in_epsilon(54.755204079511785, worksheet.webtool_graphs_o540, 0.002); end
  def test_webtool_graphs_p540; assert_in_epsilon(61.752441122658084, worksheet.webtool_graphs_p540, 0.002); end
  def test_webtool_graphs_q540; assert_in_epsilon(69.03890809728188, worksheet.webtool_graphs_q540, 0.002); end
  def test_webtool_graphs_r540; assert_in_epsilon(77.45253786547599, worksheet.webtool_graphs_r540, 0.002); end
  def test_webtool_graphs_s540; assert_in_epsilon(86.30754922748473, worksheet.webtool_graphs_s540, 0.002); end
  def test_webtool_graphs_t540; assert_in_epsilon(96.46833475739083, worksheet.webtool_graphs_t540, 0.002); end
  def test_webtool_graphs_c525; assert_equal("Technology code", worksheet.webtool_graphs_c525); end
  def test_webtool_graphs_d525; assert_equal("1975", worksheet.webtool_graphs_d525); end
  def test_webtool_graphs_e525; assert_equal("1980", worksheet.webtool_graphs_e525); end
  def test_webtool_graphs_f525; assert_equal("1985", worksheet.webtool_graphs_f525); end
  def test_webtool_graphs_g525; assert_equal("1990", worksheet.webtool_graphs_g525); end
  def test_webtool_graphs_h525; assert_equal("1995", worksheet.webtool_graphs_h525); end
  def test_webtool_graphs_i525; assert_equal("2000", worksheet.webtool_graphs_i525); end
  def test_webtool_graphs_j525; assert_equal("2005", worksheet.webtool_graphs_j525); end
  def test_webtool_graphs_k525; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k525, 0.002); end
  def test_webtool_graphs_l525; assert_equal("2011", worksheet.webtool_graphs_l525); end
  def test_webtool_graphs_m525; assert_equal("2015", worksheet.webtool_graphs_m525); end
  def test_webtool_graphs_n525; assert_equal("2020", worksheet.webtool_graphs_n525); end
  def test_webtool_graphs_o525; assert_equal("2025", worksheet.webtool_graphs_o525); end
  def test_webtool_graphs_p525; assert_equal("2030", worksheet.webtool_graphs_p525); end
  def test_webtool_graphs_q525; assert_equal("2035", worksheet.webtool_graphs_q525); end
  def test_webtool_graphs_r525; assert_equal("2040", worksheet.webtool_graphs_r525); end
  def test_webtool_graphs_s525; assert_equal("2045", worksheet.webtool_graphs_s525); end
  def test_webtool_graphs_t525; assert_equal("2050", worksheet.webtool_graphs_t525); end
  def test_webtool_graphs_c526; assert_equal("Chemicals & petrochemicals.HVC", worksheet.webtool_graphs_c526); end
  def test_webtool_graphs_j526; assert_equal("", worksheet.webtool_graphs_j526); end
  def test_webtool_graphs_l526; assert_in_delta(0.31954321918044004, worksheet.webtool_graphs_l526, 0.002); end
  def test_webtool_graphs_m526; assert_in_delta(0.3438678681052506, worksheet.webtool_graphs_m526, 0.002); end
  def test_webtool_graphs_n526; assert_in_delta(0.4047840843241088, worksheet.webtool_graphs_n526, 0.002); end
  def test_webtool_graphs_o526; assert_in_delta(0.46998696205250917, worksheet.webtool_graphs_o526, 0.002); end
  def test_webtool_graphs_p526; assert_in_delta(0.5421171049250203, worksheet.webtool_graphs_p526, 0.002); end
  def test_webtool_graphs_q526; assert_in_delta(0.6188758058746404, worksheet.webtool_graphs_q526, 0.002); end
  def test_webtool_graphs_r526; assert_in_delta(0.7089981792978467, worksheet.webtool_graphs_r526, 0.002); end
  def test_webtool_graphs_s526; assert_in_delta(0.8065588807845258, worksheet.webtool_graphs_s526, 0.002); end
  def test_webtool_graphs_t526; assert_in_delta(0.9194738075733824, worksheet.webtool_graphs_t526, 0.002); end
  def test_webtool_graphs_c527; assert_equal("Chemicals & petrochemicals.Ammonia", worksheet.webtool_graphs_c527); end
  def test_webtool_graphs_l527; assert_in_delta(0.163870192214286, worksheet.webtool_graphs_l527, 0.002); end
  def test_webtool_graphs_m527; assert_in_delta(0.174195527095652, worksheet.webtool_graphs_m527, 0.002); end
  def test_webtool_graphs_n527; assert_in_delta(0.18537457213329941, worksheet.webtool_graphs_n527, 0.002); end
  def test_webtool_graphs_o527; assert_in_delta(0.19622278620738662, worksheet.webtool_graphs_o527, 0.002); end
  def test_webtool_graphs_p527; assert_in_delta(0.20717548314299716, worksheet.webtool_graphs_p527, 0.002); end
  def test_webtool_graphs_q527; assert_in_delta(0.21868099059558424, worksheet.webtool_graphs_q527, 0.002); end
  def test_webtool_graphs_r527; assert_in_delta(0.2307427111509051, worksheet.webtool_graphs_r527, 0.002); end
  def test_webtool_graphs_s527; assert_in_delta(0.2424375694531896, worksheet.webtool_graphs_s527, 0.002); end
  def test_webtool_graphs_t527; assert_in_delta(0.25491336071315757, worksheet.webtool_graphs_t527, 0.002); end
  def test_webtool_graphs_c528; assert_equal("Chemicals & petrochemicals.Methanol", worksheet.webtool_graphs_c528); end
  def test_webtool_graphs_l528; assert_in_delta(0.058019539949628204, worksheet.webtool_graphs_l528, 0.002); end
  def test_webtool_graphs_m528; assert_in_delta(0.062424407326365706, worksheet.webtool_graphs_m528, 0.002); end
  def test_webtool_graphs_n528; assert_in_delta(0.073700061322843, worksheet.webtool_graphs_n528, 0.002); end
  def test_webtool_graphs_o528; assert_in_delta(0.08561900831262724, worksheet.webtool_graphs_o528, 0.002); end
  def test_webtool_graphs_p528; assert_in_delta(0.09874651883268426, worksheet.webtool_graphs_p528, 0.002); end
  def test_webtool_graphs_q528; assert_in_delta(0.11269708124932783, worksheet.webtool_graphs_q528, 0.002); end
  def test_webtool_graphs_r528; assert_in_delta(0.12906385199078352, worksheet.webtool_graphs_r528, 0.002); end
  def test_webtool_graphs_s528; assert_in_delta(0.14662732798545694, worksheet.webtool_graphs_s528, 0.002); end
  def test_webtool_graphs_t528; assert_in_delta(0.16725030970301188, worksheet.webtool_graphs_t528, 0.002); end
  def test_webtool_graphs_c529; assert_equal("Chemicals & petrochemicals.Others", worksheet.webtool_graphs_c529); end
  def test_webtool_graphs_l529; assert_in_delta(0.20897587114113103, worksheet.webtool_graphs_l529, 0.002); end
  def test_webtool_graphs_m529; assert_in_delta(0.22484140537518463, worksheet.webtool_graphs_m529, 0.002); end
  def test_webtool_graphs_n529; assert_in_delta(0.2654542681908078, worksheet.webtool_graphs_n529, 0.002); end
  def test_webtool_graphs_o529; assert_in_delta(0.30838415581896855, worksheet.webtool_graphs_o529, 0.002); end
  def test_webtool_graphs_p529; assert_in_delta(0.35566707032027284, worksheet.webtool_graphs_p529, 0.002); end
  def test_webtool_graphs_q529; assert_in_delta(0.4059144686357001, worksheet.webtool_graphs_q529, 0.002); end
  def test_webtool_graphs_r529; assert_in_delta(0.4648646115777555, worksheet.webtool_graphs_r529, 0.002); end
  def test_webtool_graphs_s529; assert_in_delta(0.5281250700274392, worksheet.webtool_graphs_s529, 0.002); end
  def test_webtool_graphs_t529; assert_in_delta(0.602405313781445, worksheet.webtool_graphs_t529, 0.002); end
  def test_webtool_graphs_c530; assert_equal("TOTAL", worksheet.webtool_graphs_c530); end
  def test_webtool_graphs_l530; assert_in_delta(0.7504088224854852, worksheet.webtool_graphs_l530, 0.002); end
  def test_webtool_graphs_m530; assert_in_delta(0.8053292079024529, worksheet.webtool_graphs_m530, 0.002); end
  def test_webtool_graphs_n530; assert_in_delta(0.9293129859710589, worksheet.webtool_graphs_n530, 0.002); end
  def test_webtool_graphs_o530; assert_in_epsilon(1.0602129123914916, worksheet.webtool_graphs_o530, 0.002); end
  def test_webtool_graphs_p530; assert_in_epsilon(1.2037061772209745, worksheet.webtool_graphs_p530, 0.002); end
  def test_webtool_graphs_q530; assert_in_epsilon(1.3561683463552525, worksheet.webtool_graphs_q530, 0.002); end
  def test_webtool_graphs_r530; assert_in_epsilon(1.5336693540172908, worksheet.webtool_graphs_r530, 0.002); end
  def test_webtool_graphs_s530; assert_in_epsilon(1.7237488482506116, worksheet.webtool_graphs_s530, 0.002); end
  def test_webtool_graphs_t530; assert_in_epsilon(1.9440427917709968, worksheet.webtool_graphs_t530, 0.002); end
  def test_webtool_graphs_b696; assert_equal("Technology code", worksheet.webtool_graphs_b696); end
  def test_webtool_graphs_d696; assert_in_epsilon(1975.0, worksheet.webtool_graphs_d696, 0.002); end
  def test_webtool_graphs_e696; assert_equal("1980", worksheet.webtool_graphs_e696); end
  def test_webtool_graphs_f696; assert_equal("1985", worksheet.webtool_graphs_f696); end
  def test_webtool_graphs_g696; assert_equal("1990", worksheet.webtool_graphs_g696); end
  def test_webtool_graphs_h696; assert_equal("1995", worksheet.webtool_graphs_h696); end
  def test_webtool_graphs_i696; assert_equal("2000", worksheet.webtool_graphs_i696); end
  def test_webtool_graphs_j696; assert_equal("2005", worksheet.webtool_graphs_j696); end
  def test_webtool_graphs_k696; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k696, 0.002); end
  def test_webtool_graphs_l696; assert_equal("2011", worksheet.webtool_graphs_l696); end
  def test_webtool_graphs_m696; assert_equal("2015", worksheet.webtool_graphs_m696); end
  def test_webtool_graphs_n696; assert_equal("2020", worksheet.webtool_graphs_n696); end
  def test_webtool_graphs_o696; assert_equal("2025", worksheet.webtool_graphs_o696); end
  def test_webtool_graphs_p696; assert_equal("2030", worksheet.webtool_graphs_p696); end
  def test_webtool_graphs_q696; assert_equal("2035", worksheet.webtool_graphs_q696); end
  def test_webtool_graphs_r696; assert_equal("2040", worksheet.webtool_graphs_r696); end
  def test_webtool_graphs_s696; assert_equal("2045", worksheet.webtool_graphs_s696); end
  def test_webtool_graphs_t696; assert_equal("2050", worksheet.webtool_graphs_t696); end
  def test_webtool_graphs_b697; assert_equal("Totals", worksheet.webtool_graphs_b697); end
  def test_webtool_graphs_l697; assert_in_epsilon(8.95192399951468, worksheet.webtool_graphs_l697, 0.002); end
  def test_webtool_graphs_m697; assert_in_epsilon(9.42482757195512, worksheet.webtool_graphs_m697, 0.002); end
  def test_webtool_graphs_n697; assert_in_epsilon(10.229332552816762, worksheet.webtool_graphs_n697, 0.002); end
  def test_webtool_graphs_o697; assert_in_epsilon(10.89652737595425, worksheet.webtool_graphs_o697, 0.002); end
  def test_webtool_graphs_p697; assert_in_epsilon(11.58606578284537, worksheet.webtool_graphs_p697, 0.002); end
  def test_webtool_graphs_q697; assert_in_epsilon(12.284562782224945, worksheet.webtool_graphs_q697, 0.002); end
  def test_webtool_graphs_r697; assert_in_epsilon(13.052753814120386, worksheet.webtool_graphs_r697, 0.002); end
  def test_webtool_graphs_s697; assert_in_epsilon(13.839174368039359, worksheet.webtool_graphs_s697, 0.002); end
  def test_webtool_graphs_t697; assert_in_epsilon(14.732293775108651, worksheet.webtool_graphs_t697, 0.002); end
  def test_webtool_graphs_b698; assert_equal("Aluminium.Alumina", worksheet.webtool_graphs_b698); end
  def test_webtool_graphs_l698; assert_in_delta(0.073193371324196, worksheet.webtool_graphs_l698, 0.002); end
  def test_webtool_graphs_m698; assert_in_delta(0.07859871570496697, worksheet.webtool_graphs_m698, 0.002); end
  def test_webtool_graphs_n698; assert_in_delta(0.08852594959094223, worksheet.webtool_graphs_n698, 0.002); end
  def test_webtool_graphs_o698; assert_in_delta(0.09885925248547434, worksheet.webtool_graphs_o698, 0.002); end
  def test_webtool_graphs_p698; assert_in_delta(0.1097088364538661, worksheet.webtool_graphs_p698, 0.002); end
  def test_webtool_graphs_q698; assert_in_delta(0.12046427746102342, worksheet.webtool_graphs_q698, 0.002); end
  def test_webtool_graphs_r698; assert_in_delta(0.13260196469469754, worksheet.webtool_graphs_r698, 0.002); end
  def test_webtool_graphs_s698; assert_in_delta(0.1452573318176815, worksheet.webtool_graphs_s698, 0.002); end
  def test_webtool_graphs_t698; assert_in_delta(0.15968287681127138, worksheet.webtool_graphs_t698, 0.002); end
  def test_webtool_graphs_b699; assert_equal("Pulp & Paper.pulp", worksheet.webtool_graphs_b699); end
  def test_webtool_graphs_l699; assert_in_delta(0.186797304, worksheet.webtool_graphs_l699, 0.002); end
  def test_webtool_graphs_m699; assert_in_delta(0.19980550749626358, worksheet.webtool_graphs_m699, 0.002); end
  def test_webtool_graphs_n699; assert_in_delta(0.22976058878693398, worksheet.webtool_graphs_n699, 0.002); end
  def test_webtool_graphs_o699; assert_in_delta(0.26046410017062993, worksheet.webtool_graphs_o699, 0.002); end
  def test_webtool_graphs_p699; assert_in_delta(0.2937017413601345, worksheet.webtool_graphs_p699, 0.002); end
  def test_webtool_graphs_q699; assert_in_delta(0.32876875623844254, worksheet.webtool_graphs_q699, 0.002); end
  def test_webtool_graphs_r699; assert_in_delta(0.3690346773641557, worksheet.webtool_graphs_r699, 0.002); end
  def test_webtool_graphs_s699; assert_in_delta(0.41185176603113677, worksheet.webtool_graphs_s699, 0.002); end
  def test_webtool_graphs_t699; assert_in_delta(0.46126604931287885, worksheet.webtool_graphs_t699, 0.002); end
  def test_webtool_graphs_b700; assert_equal("Demand after design", worksheet.webtool_graphs_b700); end
  def test_webtool_graphs_l700; assert_in_epsilon(8.691933324190483, worksheet.webtool_graphs_l700, 0.002); end
  def test_webtool_graphs_m700; assert_in_epsilon(9.14642334875389, worksheet.webtool_graphs_m700, 0.002); end
  def test_webtool_graphs_n700; assert_in_epsilon(9.911046014438886, worksheet.webtool_graphs_n700, 0.002); end
  def test_webtool_graphs_o700; assert_in_epsilon(10.537204023298145, worksheet.webtool_graphs_o700, 0.002); end
  def test_webtool_graphs_p700; assert_in_epsilon(11.18265520503137, worksheet.webtool_graphs_p700, 0.002); end
  def test_webtool_graphs_q700; assert_in_epsilon(11.83532974852548, worksheet.webtool_graphs_q700, 0.002); end
  def test_webtool_graphs_r700; assert_in_epsilon(12.551117172061534, worksheet.webtool_graphs_r700, 0.002); end
  def test_webtool_graphs_s700; assert_in_epsilon(13.28206527019054, worksheet.webtool_graphs_s700, 0.002); end
  def test_webtool_graphs_t700; assert_in_epsilon(14.111344848984501, worksheet.webtool_graphs_t700, 0.002); end
  def test_webtool_graphs_b701; assert_equal("% reduction from design improvements", worksheet.webtool_graphs_b701); end
  def test_webtool_graphs_l701; assert_in_delta(0.0, (worksheet.webtool_graphs_l701||0), 0.002); end
  def test_webtool_graphs_m701; assert_in_delta(-0.009794397903556296, worksheet.webtool_graphs_m701, 0.002); end
  def test_webtool_graphs_n701; assert_in_delta(-0.012462397127942504, worksheet.webtool_graphs_n701, 0.002); end
  def test_webtool_graphs_o701; assert_in_delta(-0.015112293879774308, worksheet.webtool_graphs_o701, 0.002); end
  def test_webtool_graphs_p701; assert_in_delta(-0.017748631390361203, worksheet.webtool_graphs_p701, 0.002); end
  def test_webtool_graphs_q701; assert_in_delta(-0.020372158648460426, worksheet.webtool_graphs_q701, 0.002); end
  def test_webtool_graphs_r701; assert_in_delta(-0.02297868614722498, worksheet.webtool_graphs_r701, 0.002); end
  def test_webtool_graphs_s701; assert_in_delta(-0.02557251061325938, worksheet.webtool_graphs_s701, 0.002); end
  def test_webtool_graphs_t701; assert_in_delta(-0.028149888894704933, worksheet.webtool_graphs_t701, 0.002); end
  def test_webtool_graphs_b745; assert_equal("Technology code", worksheet.webtool_graphs_b745); end
  def test_webtool_graphs_d745; assert_in_epsilon(1975.0, worksheet.webtool_graphs_d745, 0.002); end
  def test_webtool_graphs_e745; assert_equal("1980", worksheet.webtool_graphs_e745); end
  def test_webtool_graphs_f745; assert_equal("1985", worksheet.webtool_graphs_f745); end
  def test_webtool_graphs_g745; assert_equal("1990", worksheet.webtool_graphs_g745); end
  def test_webtool_graphs_h745; assert_equal("1995", worksheet.webtool_graphs_h745); end
  def test_webtool_graphs_i745; assert_equal("2000", worksheet.webtool_graphs_i745); end
  def test_webtool_graphs_j745; assert_equal("2005", worksheet.webtool_graphs_j745); end
  def test_webtool_graphs_k745; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k745, 0.002); end
  def test_webtool_graphs_l745; assert_equal("2011", worksheet.webtool_graphs_l745); end
  def test_webtool_graphs_m745; assert_equal("2015", worksheet.webtool_graphs_m745); end
  def test_webtool_graphs_n745; assert_equal("2020", worksheet.webtool_graphs_n745); end
  def test_webtool_graphs_o745; assert_equal("2025", worksheet.webtool_graphs_o745); end
  def test_webtool_graphs_p745; assert_equal("2030", worksheet.webtool_graphs_p745); end
  def test_webtool_graphs_q745; assert_equal("2035", worksheet.webtool_graphs_q745); end
  def test_webtool_graphs_r745; assert_equal("2040", worksheet.webtool_graphs_r745); end
  def test_webtool_graphs_s745; assert_equal("2045", worksheet.webtool_graphs_s745); end
  def test_webtool_graphs_t745; assert_equal("2050", worksheet.webtool_graphs_t745); end
  def test_webtool_graphs_b746; assert_equal("Totals", worksheet.webtool_graphs_b746); end
  def test_webtool_graphs_l746; assert_in_epsilon(8.95192399951468, worksheet.webtool_graphs_l746, 0.002); end
  def test_webtool_graphs_m746; assert_in_epsilon(9.417099146556884, worksheet.webtool_graphs_m746, 0.002); end
  def test_webtool_graphs_n746; assert_in_epsilon(10.212925565165465, worksheet.webtool_graphs_n746, 0.002); end
  def test_webtool_graphs_o746; assert_in_epsilon(10.86884883808436, worksheet.webtool_graphs_o746, 0.002); end
  def test_webtool_graphs_p746; assert_in_epsilon(11.544130660195352, worksheet.webtool_graphs_p746, 0.002); end
  def test_webtool_graphs_q746; assert_in_epsilon(12.22506848486076, worksheet.webtool_graphs_q746, 0.002); end
  def test_webtool_graphs_r746; assert_in_epsilon(12.971184068874031, worksheet.webtool_graphs_r746, 0.002); end
  def test_webtool_graphs_s746; assert_in_epsilon(13.73113613224527, worksheet.webtool_graphs_s746, 0.002); end
  def test_webtool_graphs_t746; assert_in_epsilon(14.591507936862648, worksheet.webtool_graphs_t746, 0.002); end
  def test_webtool_graphs_b747; assert_equal("Aluminium.Alumina", worksheet.webtool_graphs_b747); end
  def test_webtool_graphs_l747; assert_in_delta(0.07319337132419597, worksheet.webtool_graphs_l747, 0.002); end
  def test_webtool_graphs_m747; assert_in_delta(0.0812325000051987, worksheet.webtool_graphs_m747, 0.002); end
  def test_webtool_graphs_n747; assert_in_delta(0.09484449011168908, worksheet.webtool_graphs_n747, 0.002); end
  def test_webtool_graphs_o747; assert_in_delta(0.10963921470688644, worksheet.webtool_graphs_o747, 0.002); end
  def test_webtool_graphs_p747; assert_in_delta(0.12580865398087646, worksheet.webtool_graphs_p747, 0.002); end
  def test_webtool_graphs_q747; assert_in_delta(0.14268763858592454, worksheet.webtool_graphs_q747, 0.002); end
  def test_webtool_graphs_r747; assert_in_delta(0.162075164409479, worksheet.webtool_graphs_r747, 0.002); end
  def test_webtool_graphs_s747; assert_in_delta(0.18304848626882647, worksheet.webtool_graphs_s747, 0.002); end
  def test_webtool_graphs_t747; assert_in_delta(0.2072576423088218, worksheet.webtool_graphs_t747, 0.002); end
  def test_webtool_graphs_b748; assert_equal("Pulp & Paper.pulp", worksheet.webtool_graphs_b748); end
  def test_webtool_graphs_l748; assert_in_delta(0.186797304, worksheet.webtool_graphs_l748, 0.002); end
  def test_webtool_graphs_m748; assert_in_delta(0.19794251908137997, worksheet.webtool_graphs_m748, 0.002); end
  def test_webtool_graphs_n748; assert_in_delta(0.22702916919995647, worksheet.webtool_graphs_n748, 0.002); end
  def test_webtool_graphs_o748; assert_in_delta(0.25669981713786094, worksheet.webtool_graphs_o748, 0.002); end
  def test_webtool_graphs_p748; assert_in_delta(0.28870401942090607, worksheet.webtool_graphs_p748, 0.002); end
  def test_webtool_graphs_q748; assert_in_delta(0.32233132604636117, worksheet.webtool_graphs_q748, 0.002); end
  def test_webtool_graphs_r748; assert_in_delta(0.3608625807791685, worksheet.webtool_graphs_r748, 0.002); end
  def test_webtool_graphs_s748; assert_in_delta(0.40167547530868913, worksheet.webtool_graphs_s748, 0.002); end
  def test_webtool_graphs_t748; assert_in_delta(0.4486860661498004, worksheet.webtool_graphs_t748, 0.002); end
  def test_webtool_graphs_b749; assert_equal("Demand after recycling", worksheet.webtool_graphs_b749); end
  def test_webtool_graphs_l749; assert_in_epsilon(8.691933324190483, worksheet.webtool_graphs_l749, 0.002); end
  def test_webtool_graphs_m749; assert_in_epsilon(9.137924127470306, worksheet.webtool_graphs_m749, 0.002); end
  def test_webtool_graphs_n749; assert_in_epsilon(9.89105190585382, worksheet.webtool_graphs_n749, 0.002); end
  def test_webtool_graphs_o749; assert_in_epsilon(10.502509806239614, worksheet.webtool_graphs_o749, 0.002); end
  def test_webtool_graphs_p749; assert_in_epsilon(11.12961798679357, worksheet.webtool_graphs_p749, 0.002); end
  def test_webtool_graphs_q749; assert_in_epsilon(11.760049520228474, worksheet.webtool_graphs_q749, 0.002); end
  def test_webtool_graphs_r749; assert_in_epsilon(12.448246323685384, worksheet.webtool_graphs_r749, 0.002); end
  def test_webtool_graphs_s749; assert_in_epsilon(13.146412170667753, worksheet.webtool_graphs_s749, 0.002); end
  def test_webtool_graphs_t749; assert_in_epsilon(13.935564228404026, worksheet.webtool_graphs_t749, 0.002); end
  def test_webtool_graphs_b668; assert_equal("Material", worksheet.webtool_graphs_b668); end
  def test_webtool_graphs_d668; assert_in_epsilon(1975.0, worksheet.webtool_graphs_d668, 0.002); end
  def test_webtool_graphs_e668; assert_equal("1980", worksheet.webtool_graphs_e668); end
  def test_webtool_graphs_f668; assert_equal("1985", worksheet.webtool_graphs_f668); end
  def test_webtool_graphs_g668; assert_equal("1990", worksheet.webtool_graphs_g668); end
  def test_webtool_graphs_h668; assert_equal("1995", worksheet.webtool_graphs_h668); end
  def test_webtool_graphs_i668; assert_equal("2000", worksheet.webtool_graphs_i668); end
  def test_webtool_graphs_j668; assert_equal("2005", worksheet.webtool_graphs_j668); end
  def test_webtool_graphs_k668; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k668, 0.002); end
  def test_webtool_graphs_l668; assert_equal("2011", worksheet.webtool_graphs_l668); end
  def test_webtool_graphs_m668; assert_equal("2015", worksheet.webtool_graphs_m668); end
  def test_webtool_graphs_n668; assert_equal("2020", worksheet.webtool_graphs_n668); end
  def test_webtool_graphs_o668; assert_equal("2025", worksheet.webtool_graphs_o668); end
  def test_webtool_graphs_p668; assert_equal("2030", worksheet.webtool_graphs_p668); end
  def test_webtool_graphs_q668; assert_equal("2035", worksheet.webtool_graphs_q668); end
  def test_webtool_graphs_r668; assert_equal("2040", worksheet.webtool_graphs_r668); end
  def test_webtool_graphs_s668; assert_equal("2045", worksheet.webtool_graphs_s668); end
  def test_webtool_graphs_t668; assert_equal("2050", worksheet.webtool_graphs_t668); end
  def test_webtool_graphs_b669; assert_equal("Iron & Steel", worksheet.webtool_graphs_b669); end
  def test_webtool_graphs_l669; assert_in_epsilon(1.8183, worksheet.webtool_graphs_l669, 0.002); end
  def test_webtool_graphs_m669; assert_in_epsilon(1.9428526810266669, worksheet.webtool_graphs_m669, 0.002); end
  def test_webtool_graphs_n669; assert_in_epsilon(2.1351015170197636, worksheet.webtool_graphs_n669, 0.002); end
  def test_webtool_graphs_o669; assert_in_epsilon(2.299042149728758, worksheet.webtool_graphs_o669, 0.002); end
  def test_webtool_graphs_p669; assert_in_epsilon(2.472653427141068, worksheet.webtool_graphs_p669, 0.002); end
  def test_webtool_graphs_q669; assert_in_epsilon(2.63878864485499, worksheet.webtool_graphs_q669, 0.002); end
  def test_webtool_graphs_r669; assert_in_epsilon(2.8325456881550957, worksheet.webtool_graphs_r669, 0.002); end
  def test_webtool_graphs_s669; assert_in_epsilon(3.0389644879065676, worksheet.webtool_graphs_s669, 0.002); end
  def test_webtool_graphs_t669; assert_in_epsilon(3.2589800730123186, worksheet.webtool_graphs_t669, 0.002); end
  def test_webtool_graphs_b670; assert_equal("Aluminium", worksheet.webtool_graphs_b670); end
  def test_webtool_graphs_l670; assert_in_delta(0.06769999999999998, worksheet.webtool_graphs_l670, 0.002); end
  def test_webtool_graphs_m670; assert_in_delta(0.07345302219481124, worksheet.webtool_graphs_m670, 0.002); end
  def test_webtool_graphs_n670; assert_in_delta(0.08296677465712364, worksheet.webtool_graphs_n670, 0.002); end
  def test_webtool_graphs_o670; assert_in_delta(0.09291672117915101, worksheet.webtool_graphs_o670, 0.002); end
  def test_webtool_graphs_p670; assert_in_delta(0.10341050788370115, worksheet.webtool_graphs_p670, 0.002); end
  def test_webtool_graphs_q670; assert_in_delta(0.11387579930003139, worksheet.webtool_graphs_q670, 0.002); end
  def test_webtool_graphs_r670; assert_in_delta(0.12571202494935077, worksheet.webtool_graphs_r670, 0.002); end
  def test_webtool_graphs_s670; assert_in_delta(0.1381090888848377, worksheet.webtool_graphs_s670, 0.002); end
  def test_webtool_graphs_t670; assert_in_delta(0.1522662075904077, worksheet.webtool_graphs_t670, 0.002); end
  def test_webtool_graphs_b671; assert_equal("Chemicals & petrochemicals", worksheet.webtool_graphs_b671); end
  def test_webtool_graphs_l671; assert_in_delta(0.7504088224854855, worksheet.webtool_graphs_l671, 0.002); end
  def test_webtool_graphs_m671; assert_in_delta(0.8127673683875366, worksheet.webtool_graphs_m671, 0.002); end
  def test_webtool_graphs_n671; assert_in_delta(0.9403903566210005, worksheet.webtool_graphs_n671, 0.002); end
  def test_webtool_graphs_o671; assert_in_epsilon(1.075742238988277, worksheet.webtool_graphs_o671, 0.002); end
  def test_webtool_graphs_p671; assert_in_epsilon(1.2246722617567372, worksheet.webtool_graphs_p671, 0.002); end
  def test_webtool_graphs_q671; assert_in_epsilon(1.3835880401712877, worksheet.webtool_graphs_q671, 0.002); end
  def test_webtool_graphs_r671; assert_in_epsilon(1.56904469524836, worksheet.webtool_graphs_r671, 0.002); end
  def test_webtool_graphs_s671; assert_in_epsilon(1.7684750379775789, worksheet.webtool_graphs_s671, 0.002); end
  def test_webtool_graphs_t671; assert_in_epsilon(2.000165837546428, worksheet.webtool_graphs_t671, 0.002); end
  def test_webtool_graphs_b672; assert_equal("paper", worksheet.webtool_graphs_b672); end
  def test_webtool_graphs_l672; assert_in_delta(0.6111514610000001, worksheet.webtool_graphs_l672, 0.002); end
  def test_webtool_graphs_m672; assert_in_delta(0.6570805121030379, worksheet.webtool_graphs_m672, 0.002); end
  def test_webtool_graphs_n672; assert_in_delta(0.7566634003202806, worksheet.webtool_graphs_n672, 0.002); end
  def test_webtool_graphs_o672; assert_in_delta(0.8589976992038056, worksheet.webtool_graphs_o672, 0.002); end
  def test_webtool_graphs_p672; assert_in_delta(0.9699926921741281, worksheet.webtool_graphs_p672, 0.002); end
  def test_webtool_graphs_q672; assert_in_epsilon(1.0873545418176993, worksheet.webtool_graphs_q672, 0.002); end
  def test_webtool_graphs_r672; assert_in_epsilon(1.2222706627258473, worksheet.webtool_graphs_r672, 0.002); end
  def test_webtool_graphs_s672; assert_in_epsilon(1.3660342983826492, worksheet.webtool_graphs_s672, 0.002); end
  def test_webtool_graphs_t672; assert_in_epsilon(1.5321225697598635, worksheet.webtool_graphs_t672, 0.002); end
  def test_webtool_graphs_b673; assert_equal("timber", worksheet.webtool_graphs_b673); end
  def test_webtool_graphs_l673; assert_in_delta(0.8091999999999999, worksheet.webtool_graphs_l673, 0.002); end
  def test_webtool_graphs_m673; assert_in_delta(0.8431519570883371, worksheet.webtool_graphs_m673, 0.002); end
  def test_webtool_graphs_n673; assert_in_delta(0.8619601150333593, worksheet.webtool_graphs_n673, 0.002); end
  def test_webtool_graphs_o673; assert_in_delta(0.9058573594561774, worksheet.webtool_graphs_o673, 0.002); end
  def test_webtool_graphs_p673; assert_in_delta(0.9487838628534355, worksheet.webtool_graphs_p673, 0.002); end
  def test_webtool_graphs_q673; assert_in_delta(0.9920812087148669, worksheet.webtool_graphs_q673, 0.002); end
  def test_webtool_graphs_r673; assert_in_epsilon(1.0353675075688387, worksheet.webtool_graphs_r673, 0.002); end
  def test_webtool_graphs_s673; assert_in_epsilon(1.0801990732065476, worksheet.webtool_graphs_s673, 0.002); end
  def test_webtool_graphs_t673; assert_in_epsilon(1.122987839182342, worksheet.webtool_graphs_t673, 0.002); end
  def test_webtool_graphs_b674; assert_equal("cement", worksheet.webtool_graphs_b674); end
  def test_webtool_graphs_l674; assert_in_epsilon(3.6351730407050002, worksheet.webtool_graphs_l674, 0.002); end
  def test_webtool_graphs_m674; assert_in_epsilon(3.8466554427035833, worksheet.webtool_graphs_m674, 0.002); end
  def test_webtool_graphs_n674; assert_in_epsilon(4.113156198437667, worksheet.webtool_graphs_n674, 0.002); end
  def test_webtool_graphs_o674; assert_in_epsilon(4.255619349516476, worksheet.webtool_graphs_o674, 0.002); end
  def test_webtool_graphs_p674; assert_in_epsilon(4.388686315854946, worksheet.webtool_graphs_p674, 0.002); end
  def test_webtool_graphs_q674; assert_in_epsilon(4.523266788362879, worksheet.webtool_graphs_q674, 0.002); end
  def test_webtool_graphs_r674; assert_in_epsilon(4.648120823193022, worksheet.webtool_graphs_r674, 0.002); end
  def test_webtool_graphs_s674; assert_in_epsilon(4.754601472214604, worksheet.webtool_graphs_s674, 0.002); end
  def test_webtool_graphs_t674; assert_in_epsilon(4.888947224902562, worksheet.webtool_graphs_t674, 0.002); end
  def test_webtool_graphs_b675; assert_equal("Other industries", worksheet.webtool_graphs_b675); end
  def test_webtool_graphs_l675; assert_in_delta(1.0, worksheet.webtool_graphs_l675, 0.002); end
  def test_webtool_graphs_m675; assert_in_epsilon(1.0609321722096106, worksheet.webtool_graphs_m675, 0.002); end
  def test_webtool_graphs_n675; assert_in_epsilon(1.1458817670224157, worksheet.webtool_graphs_n675, 0.002); end
  def test_webtool_graphs_o675; assert_in_epsilon(1.2107132565749945, worksheet.webtool_graphs_o675, 0.002); end
  def test_webtool_graphs_p675; assert_in_epsilon(1.2765193072874406, worksheet.webtool_graphs_p675, 0.002); end
  def test_webtool_graphs_q675; assert_in_epsilon(1.3425000446506674, worksheet.webtool_graphs_q675, 0.002); end
  def test_webtool_graphs_r675; assert_in_epsilon(1.4132470605282312, worksheet.webtool_graphs_r675, 0.002); end
  def test_webtool_graphs_s675; assert_in_epsilon(1.4842513653171414, worksheet.webtool_graphs_s675, 0.002); end
  def test_webtool_graphs_t675; assert_in_epsilon(1.5646138367557088, worksheet.webtool_graphs_t675, 0.002); end
  def test_webtool_graphs_b676; assert_equal("TOTAL", worksheet.webtool_graphs_b676); end
  def test_webtool_graphs_l676; assert_in_epsilon(8.691933324190487, worksheet.webtool_graphs_l676, 0.002); end
  def test_webtool_graphs_m676; assert_in_epsilon(9.236893155713584, worksheet.webtool_graphs_m676, 0.002); end
  def test_webtool_graphs_n676; assert_in_epsilon(10.036120129111612, worksheet.webtool_graphs_n676, 0.002); end
  def test_webtool_graphs_o676; assert_in_epsilon(10.698888774647639, worksheet.webtool_graphs_o676, 0.002); end
  def test_webtool_graphs_p676; assert_in_epsilon(11.384718374951456, worksheet.webtool_graphs_p676, 0.002); end
  def test_webtool_graphs_q676; assert_in_epsilon(12.081455067872422, worksheet.webtool_graphs_q676, 0.002); end
  def test_webtool_graphs_r676; assert_in_epsilon(12.846308462368746, worksheet.webtool_graphs_r676, 0.002); end
  def test_webtool_graphs_s676; assert_in_epsilon(13.630634823889928, worksheet.webtool_graphs_s676, 0.002); end
  def test_webtool_graphs_t676; assert_in_epsilon(14.520083588749632, worksheet.webtool_graphs_t676, 0.002); end
  def test_webtool_graphs_b558; assert_equal("Energy description", worksheet.webtool_graphs_b558); end
  def test_webtool_graphs_c558; assert_equal("Technology code", worksheet.webtool_graphs_c558); end
  def test_webtool_graphs_d558; assert_equal("1975", worksheet.webtool_graphs_d558); end
  def test_webtool_graphs_e558; assert_equal("1980", worksheet.webtool_graphs_e558); end
  def test_webtool_graphs_f558; assert_equal("1985", worksheet.webtool_graphs_f558); end
  def test_webtool_graphs_g558; assert_equal("1990", worksheet.webtool_graphs_g558); end
  def test_webtool_graphs_h558; assert_equal("1995", worksheet.webtool_graphs_h558); end
  def test_webtool_graphs_i558; assert_equal("2000", worksheet.webtool_graphs_i558); end
  def test_webtool_graphs_j558; assert_equal("2005", worksheet.webtool_graphs_j558); end
  def test_webtool_graphs_k558; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k558, 0.002); end
  def test_webtool_graphs_l558; assert_equal("2011", worksheet.webtool_graphs_l558); end
  def test_webtool_graphs_m558; assert_equal("2015", worksheet.webtool_graphs_m558); end
  def test_webtool_graphs_n558; assert_equal("2020", worksheet.webtool_graphs_n558); end
  def test_webtool_graphs_o558; assert_equal("2025", worksheet.webtool_graphs_o558); end
  def test_webtool_graphs_p558; assert_equal("2030", worksheet.webtool_graphs_p558); end
  def test_webtool_graphs_q558; assert_equal("2035", worksheet.webtool_graphs_q558); end
  def test_webtool_graphs_r558; assert_equal("2040", worksheet.webtool_graphs_r558); end
  def test_webtool_graphs_s558; assert_equal("2045", worksheet.webtool_graphs_s558); end
  def test_webtool_graphs_t558; assert_equal("2050", worksheet.webtool_graphs_t558); end
  def test_webtool_graphs_b559; assert_equal("Global Materials", worksheet.webtool_graphs_b559); end
  def test_webtool_graphs_c559; assert_equal("Pulp & paper.Pulp", worksheet.webtool_graphs_c559); end
  def test_webtool_graphs_j559; assert_equal("", worksheet.webtool_graphs_j559); end
  def test_webtool_graphs_l559; assert_in_epsilon(3.020565131792657, worksheet.webtool_graphs_l559, 0.002); end
  def test_webtool_graphs_m559; assert_in_epsilon(3.1191149666797946, worksheet.webtool_graphs_m559, 0.002); end
  def test_webtool_graphs_n559; assert_in_epsilon(3.5907878560431117, worksheet.webtool_graphs_n559, 0.002); end
  def test_webtool_graphs_o559; assert_in_epsilon(4.075166393037112, worksheet.webtool_graphs_o559, 0.002); end
  def test_webtool_graphs_p559; assert_in_epsilon(4.600237353516205, worksheet.webtool_graphs_p559, 0.002); end
  def test_webtool_graphs_q559; assert_in_epsilon(5.15505727372829, worksheet.webtool_graphs_q559, 0.002); end
  def test_webtool_graphs_r559; assert_in_epsilon(5.792584405801848, worksheet.webtool_graphs_r559, 0.002); end
  def test_webtool_graphs_s559; assert_in_epsilon(6.471446558875524, worksheet.webtool_graphs_s559, 0.002); end
  def test_webtool_graphs_t559; assert_in_epsilon(7.255380337466221, worksheet.webtool_graphs_t559, 0.002); end
  def test_webtool_graphs_b560; assert_equal("Global Materials", worksheet.webtool_graphs_b560); end
  def test_webtool_graphs_c560; assert_equal("Pulp & paper.Virgin", worksheet.webtool_graphs_c560); end
  def test_webtool_graphs_l560; assert_in_epsilon(3.059951650403277, worksheet.webtool_graphs_l560, 0.002); end
  def test_webtool_graphs_m560; assert_in_epsilon(3.1598043795680963, worksheet.webtool_graphs_m560, 0.002); end
  def test_webtool_graphs_n560; assert_in_epsilon(3.6376273892532605, worksheet.webtool_graphs_n560, 0.002); end
  def test_webtool_graphs_o560; assert_in_epsilon(4.1283210016455385, worksheet.webtool_graphs_o560, 0.002); end
  def test_webtool_graphs_p560; assert_in_epsilon(4.6602369852433645, worksheet.webtool_graphs_p560, 0.002); end
  def test_webtool_graphs_q560; assert_in_epsilon(5.222289052798652, worksheet.webtool_graphs_q560, 0.002); end
  def test_webtool_graphs_r560; assert_in_epsilon(5.868126016734263, worksheet.webtool_graphs_r560, 0.002); end
  def test_webtool_graphs_s560; assert_in_epsilon(6.555835978636103, worksheet.webtool_graphs_s560, 0.002); end
  def test_webtool_graphs_t560; assert_in_epsilon(7.349986532075621, worksheet.webtool_graphs_t560, 0.002); end
  def test_webtool_graphs_b561; assert_equal("Global Materials", worksheet.webtool_graphs_b561); end
  def test_webtool_graphs_c561; assert_equal("Pulp & paper.Recycled", worksheet.webtool_graphs_c561); end
  def test_webtool_graphs_l561; assert_in_delta(0.5308491227739531, worksheet.webtool_graphs_l561, 0.002); end
  def test_webtool_graphs_m561; assert_in_delta(0.5633286581251115, worksheet.webtool_graphs_m561, 0.002); end
  def test_webtool_graphs_n561; assert_in_delta(0.6533702742051388, worksheet.webtool_graphs_n561, 0.002); end
  def test_webtool_graphs_o561; assert_in_delta(0.7470450872369705, worksheet.webtool_graphs_o561, 0.002); end
  def test_webtool_graphs_p561; assert_in_delta(0.8495840462188076, worksheet.webtool_graphs_p561, 0.002); end
  def test_webtool_graphs_q561; assert_in_delta(0.9591292881889792, worksheet.webtool_graphs_q561, 0.002); end
  def test_webtool_graphs_r561; assert_in_epsilon(1.085741903425472, worksheet.webtool_graphs_r561, 0.002); end
  def test_webtool_graphs_s561; assert_in_epsilon(1.2219664978632212, worksheet.webtool_graphs_s561, 0.002); end
  def test_webtool_graphs_t561; assert_in_epsilon(1.3801142975511644, worksheet.webtool_graphs_t561, 0.002); end
  def test_webtool_graphs_b562; assert_equal("TOTAL", worksheet.webtool_graphs_b562); end
  def test_webtool_graphs_c562; assert_equal("TOTAL", worksheet.webtool_graphs_c562); end
  def test_webtool_graphs_l562; assert_in_epsilon(6.611365904969887, worksheet.webtool_graphs_l562, 0.002); end
  def test_webtool_graphs_m562; assert_in_epsilon(6.842248004373002, worksheet.webtool_graphs_m562, 0.002); end
  def test_webtool_graphs_n562; assert_in_epsilon(7.881785519501511, worksheet.webtool_graphs_n562, 0.002); end
  def test_webtool_graphs_o562; assert_in_epsilon(8.95053248191962, worksheet.webtool_graphs_o562, 0.002); end
  def test_webtool_graphs_p562; assert_in_epsilon(10.110058384978377, worksheet.webtool_graphs_p562, 0.002); end
  def test_webtool_graphs_q562; assert_in_epsilon(11.336475614715921, worksheet.webtool_graphs_q562, 0.002); end
  def test_webtool_graphs_r562; assert_in_epsilon(12.746452325961583, worksheet.webtool_graphs_r562, 0.002); end
  def test_webtool_graphs_s562; assert_in_epsilon(14.249249035374849, worksheet.webtool_graphs_s562, 0.002); end
  def test_webtool_graphs_t562; assert_in_epsilon(15.985481167093008, worksheet.webtool_graphs_t562, 0.002); end
  def test_webtool_graphs_c549; assert_equal("Technology code", worksheet.webtool_graphs_c549); end
  def test_webtool_graphs_d549; assert_equal("1975", worksheet.webtool_graphs_d549); end
  def test_webtool_graphs_e549; assert_equal("1980", worksheet.webtool_graphs_e549); end
  def test_webtool_graphs_f549; assert_equal("1985", worksheet.webtool_graphs_f549); end
  def test_webtool_graphs_g549; assert_equal("1990", worksheet.webtool_graphs_g549); end
  def test_webtool_graphs_h549; assert_equal("1995", worksheet.webtool_graphs_h549); end
  def test_webtool_graphs_i549; assert_equal("2000", worksheet.webtool_graphs_i549); end
  def test_webtool_graphs_j549; assert_equal("2005", worksheet.webtool_graphs_j549); end
  def test_webtool_graphs_k549; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k549, 0.002); end
  def test_webtool_graphs_l549; assert_equal("2011", worksheet.webtool_graphs_l549); end
  def test_webtool_graphs_m549; assert_equal("2015", worksheet.webtool_graphs_m549); end
  def test_webtool_graphs_n549; assert_equal("2020", worksheet.webtool_graphs_n549); end
  def test_webtool_graphs_o549; assert_equal("2025", worksheet.webtool_graphs_o549); end
  def test_webtool_graphs_p549; assert_equal("2030", worksheet.webtool_graphs_p549); end
  def test_webtool_graphs_q549; assert_equal("2035", worksheet.webtool_graphs_q549); end
  def test_webtool_graphs_r549; assert_equal("2040", worksheet.webtool_graphs_r549); end
  def test_webtool_graphs_s549; assert_equal("2045", worksheet.webtool_graphs_s549); end
  def test_webtool_graphs_t549; assert_equal("2050", worksheet.webtool_graphs_t549); end
  def test_webtool_graphs_c550; assert_equal("Pulp & paper.Pulp", worksheet.webtool_graphs_c550); end
  def test_webtool_graphs_j550; assert_equal("", worksheet.webtool_graphs_j550); end
  def test_webtool_graphs_l550; assert_in_delta(0.186797304, worksheet.webtool_graphs_l550, 0.002); end
  def test_webtool_graphs_m550; assert_in_delta(0.19980550749626358, worksheet.webtool_graphs_m550, 0.002); end
  def test_webtool_graphs_n550; assert_in_delta(0.22976058878693398, worksheet.webtool_graphs_n550, 0.002); end
  def test_webtool_graphs_o550; assert_in_delta(0.26046410017062993, worksheet.webtool_graphs_o550, 0.002); end
  def test_webtool_graphs_p550; assert_in_delta(0.2937017413601345, worksheet.webtool_graphs_p550, 0.002); end
  def test_webtool_graphs_q550; assert_in_delta(0.32876875623844254, worksheet.webtool_graphs_q550, 0.002); end
  def test_webtool_graphs_r550; assert_in_delta(0.3690346773641557, worksheet.webtool_graphs_r550, 0.002); end
  def test_webtool_graphs_s550; assert_in_delta(0.41185176603113677, worksheet.webtool_graphs_s550, 0.002); end
  def test_webtool_graphs_t550; assert_in_delta(0.46126604931287885, worksheet.webtool_graphs_t550, 0.002); end
  def test_webtool_graphs_c551; assert_equal("Pulp & paper.Virgin", worksheet.webtool_graphs_c551); end
  def test_webtool_graphs_l551; assert_in_delta(0.40310187100000006, worksheet.webtool_graphs_l551, 0.002); end
  def test_webtool_graphs_m551; assert_in_delta(0.4311731068016291, worksheet.webtool_graphs_m551, 0.002); end
  def test_webtool_graphs_n551; assert_in_delta(0.49581509603626145, worksheet.webtool_graphs_n551, 0.002); end
  def test_webtool_graphs_o551; assert_in_delta(0.5620721705229341, worksheet.webtool_graphs_o551, 0.002); end
  def test_webtool_graphs_p551; assert_in_delta(0.6337978060873315, worksheet.webtool_graphs_p551, 0.002); end
  def test_webtool_graphs_q551; assert_in_delta(0.7094711643485985, worksheet.webtool_graphs_q551, 0.002); end
  def test_webtool_graphs_r551; assert_in_delta(0.796363575511628, worksheet.webtool_graphs_r551, 0.002); end
  def test_webtool_graphs_s551; assert_in_delta(0.8887613145733919, worksheet.webtool_graphs_s551, 0.002); end
  def test_webtool_graphs_t551; assert_in_delta(0.995395562597626, worksheet.webtool_graphs_t551, 0.002); end
  def test_webtool_graphs_c552; assert_equal("Pulp & paper.Recycled", worksheet.webtool_graphs_c552); end
  def test_webtool_graphs_l552; assert_in_delta(0.20804958999999998, worksheet.webtool_graphs_l552, 0.002); end
  def test_webtool_graphs_m552; assert_in_delta(0.22253776164959832, worksheet.webtool_graphs_m552, 0.002); end
  def test_webtool_graphs_n552; assert_in_delta(0.2559008897434634, worksheet.webtool_graphs_n552, 0.002); end
  def test_webtool_graphs_o552; assert_in_delta(0.2900975982513029, worksheet.webtool_graphs_o552, 0.002); end
  def test_webtool_graphs_p552; assert_in_delta(0.32711674935234625, worksheet.webtool_graphs_p552, 0.002); end
  def test_webtool_graphs_q552; assert_in_delta(0.36617340548029487, worksheet.webtool_graphs_q552, 0.002); end
  def test_webtool_graphs_r552; assert_in_delta(0.4110204573476867, worksheet.webtool_graphs_r552, 0.002); end
  def test_webtool_graphs_s552; assert_in_delta(0.4587089279594418, worksheet.webtool_graphs_s552, 0.002); end
  def test_webtool_graphs_t552; assert_in_delta(0.5137451686158395, worksheet.webtool_graphs_t552, 0.002); end
  def test_webtool_graphs_c553; assert_equal("TOTAL - just virgin & recycled", worksheet.webtool_graphs_c553); end
  def test_webtool_graphs_l553; assert_in_delta(0.6111514610000001, worksheet.webtool_graphs_l553, 0.002); end
  def test_webtool_graphs_m553; assert_in_delta(0.6537108684512274, worksheet.webtool_graphs_m553, 0.002); end
  def test_webtool_graphs_n553; assert_in_delta(0.7517159857797249, worksheet.webtool_graphs_n553, 0.002); end
  def test_webtool_graphs_o553; assert_in_delta(0.852169768774237, worksheet.webtool_graphs_o553, 0.002); end
  def test_webtool_graphs_p553; assert_in_delta(0.9609145554396777, worksheet.webtool_graphs_p553, 0.002); end
  def test_webtool_graphs_q553; assert_in_epsilon(1.0756445698288934, worksheet.webtool_graphs_q553, 0.002); end
  def test_webtool_graphs_r553; assert_in_epsilon(1.2073840328593146, worksheet.webtool_graphs_r553, 0.002); end
  def test_webtool_graphs_s553; assert_in_epsilon(1.3474702425328338, worksheet.webtool_graphs_s553, 0.002); end
  def test_webtool_graphs_t553; assert_in_epsilon(1.5091407312134655, worksheet.webtool_graphs_t553, 0.002); end
  def test_webtool_graphs_b489; assert_equal("Energy description", worksheet.webtool_graphs_b489); end
  def test_webtool_graphs_c489; assert_equal("Technology code", worksheet.webtool_graphs_c489); end
  def test_webtool_graphs_d489; assert_equal("1975", worksheet.webtool_graphs_d489); end
  def test_webtool_graphs_e489; assert_equal("1980", worksheet.webtool_graphs_e489); end
  def test_webtool_graphs_f489; assert_equal("1985", worksheet.webtool_graphs_f489); end
  def test_webtool_graphs_g489; assert_equal("1990", worksheet.webtool_graphs_g489); end
  def test_webtool_graphs_h489; assert_equal("1995", worksheet.webtool_graphs_h489); end
  def test_webtool_graphs_i489; assert_equal("2000", worksheet.webtool_graphs_i489); end
  def test_webtool_graphs_j489; assert_equal("2005", worksheet.webtool_graphs_j489); end
  def test_webtool_graphs_k489; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k489, 0.002); end
  def test_webtool_graphs_l489; assert_equal("2011", worksheet.webtool_graphs_l489); end
  def test_webtool_graphs_m489; assert_equal("2015", worksheet.webtool_graphs_m489); end
  def test_webtool_graphs_n489; assert_equal("2020", worksheet.webtool_graphs_n489); end
  def test_webtool_graphs_o489; assert_equal("2025", worksheet.webtool_graphs_o489); end
  def test_webtool_graphs_p489; assert_equal("2030", worksheet.webtool_graphs_p489); end
  def test_webtool_graphs_q489; assert_equal("2035", worksheet.webtool_graphs_q489); end
  def test_webtool_graphs_r489; assert_equal("2040", worksheet.webtool_graphs_r489); end
  def test_webtool_graphs_s489; assert_equal("2045", worksheet.webtool_graphs_s489); end
  def test_webtool_graphs_t489; assert_equal("2050", worksheet.webtool_graphs_t489); end
  def test_webtool_graphs_b490; assert_equal("Global Materials", worksheet.webtool_graphs_b490); end
  def test_webtool_graphs_c490; assert_equal("Steel.Oxygen", worksheet.webtool_graphs_c490); end
  def test_webtool_graphs_j490; assert_equal("", worksheet.webtool_graphs_j490); end
  def test_webtool_graphs_l490; assert_in_epsilon(21.619770962298666, worksheet.webtool_graphs_l490, 0.002); end
  def test_webtool_graphs_m490; assert_in_epsilon(22.361070922409628, worksheet.webtool_graphs_m490, 0.002); end
  def test_webtool_graphs_n490; assert_in_epsilon(24.131437706930193, worksheet.webtool_graphs_n490, 0.002); end
  def test_webtool_graphs_o490; assert_in_epsilon(25.514724817197564, worksheet.webtool_graphs_o490, 0.002); end
  def test_webtool_graphs_p490; assert_in_epsilon(26.943473439712523, worksheet.webtool_graphs_p490, 0.002); end
  def test_webtool_graphs_q490; assert_in_epsilon(28.22982266658649, worksheet.webtool_graphs_q490, 0.002); end
  def test_webtool_graphs_r490; assert_in_epsilon(29.7481693677126, worksheet.webtool_graphs_r490, 0.002); end
  def test_webtool_graphs_s490; assert_in_epsilon(31.329612751310098, worksheet.webtool_graphs_s490, 0.002); end
  def test_webtool_graphs_t490; assert_in_epsilon(32.97791677060222, worksheet.webtool_graphs_t490, 0.002); end
  def test_webtool_graphs_b491; assert_equal("Global Materials", worksheet.webtool_graphs_b491); end
  def test_webtool_graphs_c491; assert_equal("Steel.OxygenHisarna", worksheet.webtool_graphs_c491); end
  def test_webtool_graphs_l491; assert_in_delta(0.0, (worksheet.webtool_graphs_l491||0), 0.002); end
  def test_webtool_graphs_m491; assert_in_delta(0.05344151530417085, worksheet.webtool_graphs_m491, 0.002); end
  def test_webtool_graphs_n491; assert_in_delta(0.1308071507524282, worksheet.webtool_graphs_n491, 0.002); end
  def test_webtool_graphs_o491; assert_in_delta(0.21688207688048455, worksheet.webtool_graphs_o491, 0.002); end
  def test_webtool_graphs_p491; assert_in_delta(0.31335050952498905, worksheet.webtool_graphs_p491, 0.002); end
  def test_webtool_graphs_q491; assert_in_delta(0.4181006007238949, worksheet.webtool_graphs_q491, 0.002); end
  def test_webtool_graphs_r491; assert_in_delta(0.5367569679962112, worksheet.webtool_graphs_r491, 0.002); end
  def test_webtool_graphs_s491; assert_in_delta(0.6682384897048544, worksheet.webtool_graphs_s491, 0.002); end
  def test_webtool_graphs_t491; assert_in_delta(0.8135489533131609, worksheet.webtool_graphs_t491, 0.002); end
  def test_webtool_graphs_b492; assert_equal("Global Materials", worksheet.webtool_graphs_b492); end
  def test_webtool_graphs_c492; assert_equal("Steel.Electric", worksheet.webtool_graphs_c492); end
  def test_webtool_graphs_l492; assert_in_epsilon(2.6697592633263763, worksheet.webtool_graphs_l492, 0.002); end
  def test_webtool_graphs_m492; assert_in_epsilon(2.9068157067208666, worksheet.webtool_graphs_m492, 0.002); end
  def test_webtool_graphs_n492; assert_in_epsilon(3.2121561828808005, worksheet.webtool_graphs_n492, 0.002); end
  def test_webtool_graphs_o492; assert_in_epsilon(3.477693711885978, worksheet.webtool_graphs_o492, 0.002); end
  def test_webtool_graphs_p492; assert_in_epsilon(3.760453072947189, worksheet.webtool_graphs_p492, 0.002); end
  def test_webtool_graphs_q492; assert_in_epsilon(4.0344169848846985, worksheet.webtool_graphs_q492, 0.002); end
  def test_webtool_graphs_r492; assert_in_epsilon(4.353309393114092, worksheet.webtool_graphs_r492, 0.002); end
  def test_webtool_graphs_s492; assert_in_epsilon(4.6946399949084725, worksheet.webtool_graphs_s492, 0.002); end
  def test_webtool_graphs_t492; assert_in_epsilon(5.06011622436788, worksheet.webtool_graphs_t492, 0.002); end
  def test_webtool_graphs_b493; assert_equal("Global Materials", worksheet.webtool_graphs_b493); end
  def test_webtool_graphs_c493; assert_equal("Steel.ElectricDRI", worksheet.webtool_graphs_c493); end
  def test_webtool_graphs_l493; assert_in_delta(0.48100793205535197, worksheet.webtool_graphs_l493, 0.002); end
  def test_webtool_graphs_m493; assert_in_delta(0.5194669293954937, worksheet.webtool_graphs_m493, 0.002); end
  def test_webtool_graphs_n493; assert_in_delta(0.5683094999005355, worksheet.webtool_graphs_n493, 0.002); end
  def test_webtool_graphs_o493; assert_in_delta(0.6091267376986845, worksheet.webtool_graphs_o493, 0.002); end
  def test_webtool_graphs_p493; assert_in_delta(0.6520254802877454, worksheet.webtool_graphs_p493, 0.002); end
  def test_webtool_graphs_q493; assert_in_delta(0.692457303588005, worksheet.webtool_graphs_q493, 0.002); end
  def test_webtool_graphs_r493; assert_in_delta(0.7396037466459852, worksheet.webtool_graphs_r493, 0.002); end
  def test_webtool_graphs_s493; assert_in_delta(0.7894570519153451, worksheet.webtool_graphs_s493, 0.002); end
  def test_webtool_graphs_t493; assert_in_delta(0.8421945099847223, worksheet.webtool_graphs_t493, 0.002); end
  def test_webtool_graphs_b494; assert_equal("Global Materials", worksheet.webtool_graphs_b494); end
  def test_webtool_graphs_c494; assert_equal("Steel.Others", worksheet.webtool_graphs_c494); end
  def test_webtool_graphs_j494; assert_equal("", worksheet.webtool_graphs_j494); end
  def test_webtool_graphs_l494; assert_in_epsilon(6.671485699703609, worksheet.webtool_graphs_l494, 0.002); end
  def test_webtool_graphs_m494; assert_in_epsilon(6.9196367029837775, worksheet.webtool_graphs_m494, 0.002); end
  def test_webtool_graphs_n494; assert_in_epsilon(7.49375027943394, worksheet.webtool_graphs_n494, 0.002); end
  def test_webtool_graphs_o494; assert_in_epsilon(7.951217640216778, worksheet.webtool_graphs_o494, 0.002); end
  def test_webtool_graphs_p494; assert_in_epsilon(8.426057931079674, worksheet.webtool_graphs_p494, 0.002); end
  def test_webtool_graphs_q494; assert_in_epsilon(8.859484453791437, worksheet.webtool_graphs_q494, 0.002); end
  def test_webtool_graphs_r494; assert_in_epsilon(9.368957862208488, worksheet.webtool_graphs_r494, 0.002); end
  def test_webtool_graphs_s494; assert_in_epsilon(9.901889243397243, worksheet.webtool_graphs_s494, 0.002); end
  def test_webtool_graphs_t494; assert_in_epsilon(10.459705749011256, worksheet.webtool_graphs_t494, 0.002); end
  def test_webtool_graphs_b495; assert_equal("TOTAL", worksheet.webtool_graphs_b495); end
  def test_webtool_graphs_c495; assert_equal("TOTAL", worksheet.webtool_graphs_c495); end
  def test_webtool_graphs_l495; assert_in_epsilon(31.442023857384005, worksheet.webtool_graphs_l495, 0.002); end
  def test_webtool_graphs_m495; assert_in_epsilon(32.76043177681394, worksheet.webtool_graphs_m495, 0.002); end
  def test_webtool_graphs_n495; assert_in_epsilon(35.5364608198979, worksheet.webtool_graphs_n495, 0.002); end
  def test_webtool_graphs_o495; assert_in_epsilon(37.76964498387949, worksheet.webtool_graphs_o495, 0.002); end
  def test_webtool_graphs_p495; assert_in_epsilon(40.095360433552116, worksheet.webtool_graphs_p495, 0.002); end
  def test_webtool_graphs_q495; assert_in_epsilon(42.23428200957453, worksheet.webtool_graphs_q495, 0.002); end
  def test_webtool_graphs_r495; assert_in_epsilon(44.74679733767738, worksheet.webtool_graphs_r495, 0.002); end
  def test_webtool_graphs_s495; assert_in_epsilon(47.38383753123601, worksheet.webtool_graphs_s495, 0.002); end
  def test_webtool_graphs_t495; assert_in_epsilon(50.15348220727924, worksheet.webtool_graphs_t495, 0.002); end
  def test_webtool_graphs_c477; assert_equal("Technology code", worksheet.webtool_graphs_c477); end
  def test_webtool_graphs_d477; assert_equal("1975", worksheet.webtool_graphs_d477); end
  def test_webtool_graphs_e477; assert_equal("1980", worksheet.webtool_graphs_e477); end
  def test_webtool_graphs_f477; assert_equal("1985", worksheet.webtool_graphs_f477); end
  def test_webtool_graphs_g477; assert_equal("1990", worksheet.webtool_graphs_g477); end
  def test_webtool_graphs_h477; assert_equal("1995", worksheet.webtool_graphs_h477); end
  def test_webtool_graphs_i477; assert_equal("2000", worksheet.webtool_graphs_i477); end
  def test_webtool_graphs_j477; assert_equal("2005", worksheet.webtool_graphs_j477); end
  def test_webtool_graphs_k477; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k477, 0.002); end
  def test_webtool_graphs_l477; assert_equal("2011", worksheet.webtool_graphs_l477); end
  def test_webtool_graphs_m477; assert_equal("2015", worksheet.webtool_graphs_m477); end
  def test_webtool_graphs_n477; assert_equal("2020", worksheet.webtool_graphs_n477); end
  def test_webtool_graphs_o477; assert_equal("2025", worksheet.webtool_graphs_o477); end
  def test_webtool_graphs_p477; assert_equal("2030", worksheet.webtool_graphs_p477); end
  def test_webtool_graphs_q477; assert_equal("2035", worksheet.webtool_graphs_q477); end
  def test_webtool_graphs_r477; assert_equal("2040", worksheet.webtool_graphs_r477); end
  def test_webtool_graphs_s477; assert_equal("2045", worksheet.webtool_graphs_s477); end
  def test_webtool_graphs_t477; assert_equal("2050", worksheet.webtool_graphs_t477); end
  def test_webtool_graphs_c478; assert_equal("Steel.Oxygen", worksheet.webtool_graphs_c478); end
  def test_webtool_graphs_j478; assert_equal("", worksheet.webtool_graphs_j478); end
  def test_webtool_graphs_l478; assert_in_epsilon(1.072617, worksheet.webtool_graphs_l478, 0.002); end
  def test_webtool_graphs_m478; assert_in_epsilon(1.1343359749492765, worksheet.webtool_graphs_m478, 0.002); end
  def test_webtool_graphs_n478; assert_in_epsilon(1.2430281682888766, worksheet.webtool_graphs_n478, 0.002); end
  def test_webtool_graphs_o478; assert_in_epsilon(1.3346470596955053, worksheet.webtool_graphs_o478, 0.002); end
  def test_webtool_graphs_p478; assert_in_epsilon(1.4313183569261998, worksheet.webtool_graphs_p478, 0.002); end
  def test_webtool_graphs_q478; assert_in_epsilon(1.5230967895478689, worksheet.webtool_graphs_q478, 0.002); end
  def test_webtool_graphs_r478; assert_in_epsilon(1.630219616968372, worksheet.webtool_graphs_r478, 0.002); end
  def test_webtool_graphs_s478; assert_in_epsilon(1.7439638637162902, worksheet.webtool_graphs_s478, 0.002); end
  def test_webtool_graphs_t478; assert_in_epsilon(1.864801356269607, worksheet.webtool_graphs_t478, 0.002); end
  def test_webtool_graphs_c479; assert_equal("Steel.OxygenHisarna", worksheet.webtool_graphs_c479); end
  def test_webtool_graphs_l479; assert_in_delta(0.0, (worksheet.webtool_graphs_l479||0), 0.002); end
  def test_webtool_graphs_m479; assert_in_delta(0.0, (worksheet.webtool_graphs_m479||0), 0.002); end
  def test_webtool_graphs_n479; assert_in_delta(0.0, (worksheet.webtool_graphs_n479||0), 0.002); end
  def test_webtool_graphs_o479; assert_in_delta(0.0, (worksheet.webtool_graphs_o479||0), 0.002); end
  def test_webtool_graphs_p479; assert_in_delta(0.0, (worksheet.webtool_graphs_p479||0), 0.002); end
  def test_webtool_graphs_q479; assert_in_delta(0.0, (worksheet.webtool_graphs_q479||0), 0.002); end
  def test_webtool_graphs_r479; assert_in_delta(0.0, (worksheet.webtool_graphs_r479||0), 0.002); end
  def test_webtool_graphs_s479; assert_in_delta(0.0, (worksheet.webtool_graphs_s479||0), 0.002); end
  def test_webtool_graphs_t479; assert_in_delta(0.0, (worksheet.webtool_graphs_t479||0), 0.002); end
  def test_webtool_graphs_c480; assert_equal("Steel.Electric", worksheet.webtool_graphs_c480); end
  def test_webtool_graphs_l480; assert_in_delta(0.36884110344827586, worksheet.webtool_graphs_l480, 0.002); end
  def test_webtool_graphs_m480; assert_in_delta(0.39006442437642425, worksheet.webtool_graphs_m480, 0.002); end
  def test_webtool_graphs_n480; assert_in_delta(0.4274404388602441, worksheet.webtool_graphs_n480, 0.002); end
  def test_webtool_graphs_o480; assert_in_delta(0.4589454523022543, worksheet.webtool_graphs_o480, 0.002); end
  def test_webtool_graphs_p480; assert_in_delta(0.4921878379276412, worksheet.webtool_graphs_p480, 0.002); end
  def test_webtool_graphs_q480; assert_in_delta(0.5237477128512436, worksheet.webtool_graphs_q480, 0.002); end
  def test_webtool_graphs_r480; assert_in_delta(0.5605840690438806, worksheet.webtool_graphs_r480, 0.002); end
  def test_webtool_graphs_s480; assert_in_delta(0.5996973345257767, worksheet.webtool_graphs_s480, 0.002); end
  def test_webtool_graphs_t480; assert_in_delta(0.6412497563979718, worksheet.webtool_graphs_t480, 0.002); end
  def test_webtool_graphs_c481; assert_equal("Steel.ElectricDRI", worksheet.webtool_graphs_c481); end
  def test_webtool_graphs_l481; assert_in_delta(0.07684189655172412, worksheet.webtool_graphs_l481, 0.002); end
  def test_webtool_graphs_m481; assert_in_delta(0.08126342174508837, worksheet.webtool_graphs_m481, 0.002); end
  def test_webtool_graphs_n481; assert_in_delta(0.0890500914292175, worksheet.webtool_graphs_n481, 0.002); end
  def test_webtool_graphs_o481; assert_in_delta(0.09561363589630296, worksheet.webtool_graphs_o481, 0.002); end
  def test_webtool_graphs_p481; assert_in_delta(0.1025391329015919, worksheet.webtool_graphs_p481, 0.002); end
  def test_webtool_graphs_q481; assert_in_delta(0.10911410684400907, worksheet.webtool_graphs_q481, 0.002); end
  def test_webtool_graphs_r481; assert_in_delta(0.11678834771747511, worksheet.webtool_graphs_r481, 0.002); end
  def test_webtool_graphs_s481; assert_in_delta(0.12493694469287014, worksheet.webtool_graphs_s481, 0.002); end
  def test_webtool_graphs_t481; assert_in_delta(0.13359369924957745, worksheet.webtool_graphs_t481, 0.002); end
  def test_webtool_graphs_c482; assert_equal("Steel.Others", worksheet.webtool_graphs_c482); end
  def test_webtool_graphs_l482; assert_in_delta(0.3, worksheet.webtool_graphs_l482, 0.002); end
  def test_webtool_graphs_m482; assert_in_delta(0.31726216579150146, worksheet.webtool_graphs_m482, 0.002); end
  def test_webtool_graphs_n482; assert_in_delta(0.347662260141936, worksheet.webtool_graphs_n482, 0.002); end
  def test_webtool_graphs_o482; assert_in_delta(0.3732871266338792, worksheet.webtool_graphs_o482, 0.002); end
  def test_webtool_graphs_p482; assert_in_delta(0.40032509933914895, worksheet.webtool_graphs_p482, 0.002); end
  def test_webtool_graphs_q482; assert_in_delta(0.4259945878765306, worksheet.webtool_graphs_q482, 0.002); end
  def test_webtool_graphs_r482; assert_in_delta(0.45595574663697447, worksheet.webtool_graphs_r482, 0.002); end
  def test_webtool_graphs_s482; assert_in_delta(0.48776884863365677, worksheet.webtool_graphs_s482, 0.002); end
  def test_webtool_graphs_t482; assert_in_delta(0.5215658589047928, worksheet.webtool_graphs_t482, 0.002); end
  def test_webtool_graphs_c483; assert_equal("TOTAL", worksheet.webtool_graphs_c483); end
  def test_webtool_graphs_l483; assert_in_epsilon(1.8183, worksheet.webtool_graphs_l483, 0.002); end
  def test_webtool_graphs_m483; assert_in_epsilon(1.9229259868622903, worksheet.webtool_graphs_m483, 0.002); end
  def test_webtool_graphs_n483; assert_in_epsilon(2.1071809587202743, worksheet.webtool_graphs_n483, 0.002); end
  def test_webtool_graphs_o483; assert_in_epsilon(2.262493274527942, worksheet.webtool_graphs_o483, 0.002); end
  def test_webtool_graphs_p483; assert_in_epsilon(2.426370427094582, worksheet.webtool_graphs_p483, 0.002); end
  def test_webtool_graphs_q483; assert_in_epsilon(2.5819531971196525, worksheet.webtool_graphs_q483, 0.002); end
  def test_webtool_graphs_r483; assert_in_epsilon(2.763547780366702, worksheet.webtool_graphs_r483, 0.002); end
  def test_webtool_graphs_s483; assert_in_epsilon(2.9563669915685935, worksheet.webtool_graphs_s483, 0.002); end
  def test_webtool_graphs_t483; assert_in_epsilon(3.161210670821949, worksheet.webtool_graphs_t483, 0.002); end
  def test_webtool_graphs_c174; assert_equal("Level", worksheet.webtool_graphs_c174); end
  def test_webtool_graphs_d174; assert_equal("1975", worksheet.webtool_graphs_d174); end
  def test_webtool_graphs_e174; assert_equal("1980", worksheet.webtool_graphs_e174); end
  def test_webtool_graphs_f174; assert_equal("1985", worksheet.webtool_graphs_f174); end
  def test_webtool_graphs_g174; assert_equal("1990", worksheet.webtool_graphs_g174); end
  def test_webtool_graphs_h174; assert_equal("1995", worksheet.webtool_graphs_h174); end
  def test_webtool_graphs_i174; assert_equal("2000", worksheet.webtool_graphs_i174); end
  def test_webtool_graphs_j174; assert_equal("2005", worksheet.webtool_graphs_j174); end
  def test_webtool_graphs_k174; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k174, 0.002); end
  def test_webtool_graphs_l174; assert_equal("2011", worksheet.webtool_graphs_l174); end
  def test_webtool_graphs_m174; assert_equal("2015", worksheet.webtool_graphs_m174); end
  def test_webtool_graphs_n174; assert_equal("2020", worksheet.webtool_graphs_n174); end
  def test_webtool_graphs_o174; assert_equal("2025", worksheet.webtool_graphs_o174); end
  def test_webtool_graphs_p174; assert_equal("2030", worksheet.webtool_graphs_p174); end
  def test_webtool_graphs_q174; assert_equal("2035", worksheet.webtool_graphs_q174); end
  def test_webtool_graphs_r174; assert_equal("2040", worksheet.webtool_graphs_r174); end
  def test_webtool_graphs_s174; assert_equal("2045", worksheet.webtool_graphs_s174); end
  def test_webtool_graphs_t174; assert_equal("2050", worksheet.webtool_graphs_t174); end
  def test_webtool_graphs_c175; assert_equal("Historic data", worksheet.webtool_graphs_c175); end
  def test_webtool_graphs_c176; assert_equal("Urban", worksheet.webtool_graphs_c176); end
  def test_webtool_graphs_l176; assert_in_delta(0.14693270333150854, worksheet.webtool_graphs_l176, 0.002); end
  def test_webtool_graphs_m176; assert_in_delta(0.16396718952920222, worksheet.webtool_graphs_m176, 0.002); end
  def test_webtool_graphs_n176; assert_in_delta(0.18252277289034358, worksheet.webtool_graphs_n176, 0.002); end
  def test_webtool_graphs_o176; assert_in_delta(0.19775781840667536, worksheet.webtool_graphs_o176, 0.002); end
  def test_webtool_graphs_p176; assert_in_delta(0.21255075687690944, worksheet.webtool_graphs_p176, 0.002); end
  def test_webtool_graphs_q176; assert_in_delta(0.22588284842906636, worksheet.webtool_graphs_q176, 0.002); end
  def test_webtool_graphs_r176; assert_in_delta(0.2386508539063229, worksheet.webtool_graphs_r176, 0.002); end
  def test_webtool_graphs_s176; assert_in_delta(0.2507592627156391, worksheet.webtool_graphs_s176, 0.002); end
  def test_webtool_graphs_t176; assert_in_delta(0.2626911743233262, worksheet.webtool_graphs_t176, 0.002); end
  def test_webtool_graphs_c177; assert_equal("Rural", worksheet.webtool_graphs_c177); end
  def test_webtool_graphs_l177; assert_in_delta(0.09451208719370718, worksheet.webtool_graphs_l177, 0.002); end
  def test_webtool_graphs_m177; assert_in_delta(0.10260679981829972, worksheet.webtool_graphs_m177, 0.002); end
  def test_webtool_graphs_n177; assert_in_delta(0.11235149135018437, worksheet.webtool_graphs_n177, 0.002); end
  def test_webtool_graphs_o177; assert_in_delta(0.12258707269280064, worksheet.webtool_graphs_o177, 0.002); end
  def test_webtool_graphs_p177; assert_in_delta(0.1340372141482143, worksheet.webtool_graphs_p177, 0.002); end
  def test_webtool_graphs_q177; assert_in_delta(0.14679719579772335, worksheet.webtool_graphs_q177, 0.002); end
  def test_webtool_graphs_r177; assert_in_delta(0.16098654787786662, worksheet.webtool_graphs_r177, 0.002); end
  def test_webtool_graphs_s177; assert_in_delta(0.1750455781409123, worksheet.webtool_graphs_s177, 0.002); end
  def test_webtool_graphs_t177; assert_in_delta(0.1907901731181167, worksheet.webtool_graphs_t177, 0.002); end
  def test_webtool_graphs_c178; assert_equal("Average", worksheet.webtool_graphs_c178); end
  def test_webtool_graphs_l178; assert_in_delta(0.12184041896087834, worksheet.webtool_graphs_l178, 0.002); end
  def test_webtool_graphs_m178; assert_in_delta(0.13575734861769337, worksheet.webtool_graphs_m178, 0.002); end
  def test_webtool_graphs_n178; assert_in_delta(0.15179868146879966, worksheet.webtool_graphs_n178, 0.002); end
  def test_webtool_graphs_o178; assert_in_delta(0.1663478602976053, worksheet.webtool_graphs_o178, 0.002); end
  def test_webtool_graphs_p178; assert_in_delta(0.18117512367019076, worksheet.webtool_graphs_p178, 0.002); end
  def test_webtool_graphs_q178; assert_in_delta(0.19558877364878832, worksheet.webtool_graphs_q178, 0.002); end
  def test_webtool_graphs_r178; assert_in_delta(0.21009584651247787, worksheet.webtool_graphs_r178, 0.002); end
  def test_webtool_graphs_s178; assert_in_delta(0.22410036838818967, worksheet.webtool_graphs_s178, 0.002); end
  def test_webtool_graphs_t178; assert_in_delta(0.23850822800450908, worksheet.webtool_graphs_t178, 0.002); end
  def test_webtool_graphs_l290; assert_in_epsilon(8.62705100864245, worksheet.webtool_graphs_l290, 0.002); end
  def test_webtool_graphs_t290; assert_in_epsilon(5.518875630179815, worksheet.webtool_graphs_t290, 0.002); end
  def test_webtool_graphs_b125; assert_equal("Type of city", worksheet.webtool_graphs_b125); end
  def test_webtool_graphs_c125; assert_equal(".", worksheet.webtool_graphs_c125); end
  def test_webtool_graphs_d125; assert_equal("1975", worksheet.webtool_graphs_d125); end
  def test_webtool_graphs_e125; assert_equal("1980", worksheet.webtool_graphs_e125); end
  def test_webtool_graphs_f125; assert_equal("1985", worksheet.webtool_graphs_f125); end
  def test_webtool_graphs_g125; assert_equal("1990", worksheet.webtool_graphs_g125); end
  def test_webtool_graphs_h125; assert_equal("1995", worksheet.webtool_graphs_h125); end
  def test_webtool_graphs_i125; assert_equal("2000", worksheet.webtool_graphs_i125); end
  def test_webtool_graphs_j125; assert_equal("2005", worksheet.webtool_graphs_j125); end
  def test_webtool_graphs_k125; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k125, 0.002); end
  def test_webtool_graphs_l125; assert_equal("2011", worksheet.webtool_graphs_l125); end
  def test_webtool_graphs_m125; assert_equal("2015", worksheet.webtool_graphs_m125); end
  def test_webtool_graphs_n125; assert_equal("2020", worksheet.webtool_graphs_n125); end
  def test_webtool_graphs_o125; assert_equal("2025", worksheet.webtool_graphs_o125); end
  def test_webtool_graphs_p125; assert_equal("2030", worksheet.webtool_graphs_p125); end
  def test_webtool_graphs_q125; assert_equal("2035", worksheet.webtool_graphs_q125); end
  def test_webtool_graphs_r125; assert_equal("2040", worksheet.webtool_graphs_r125); end
  def test_webtool_graphs_s125; assert_equal("2045", worksheet.webtool_graphs_s125); end
  def test_webtool_graphs_t125; assert_equal("2050", worksheet.webtool_graphs_t125); end
  def test_webtool_graphs_b126; assert_equal("Automobile city", worksheet.webtool_graphs_b126); end
  def test_webtool_graphs_l126; assert_in_epsilon(8918.930449006788, worksheet.webtool_graphs_l126, 0.002); end
  def test_webtool_graphs_m126; assert_in_epsilon(9041.779958301404, worksheet.webtool_graphs_m126, 0.002); end
  def test_webtool_graphs_n126; assert_in_epsilon(9024.161664328138, worksheet.webtool_graphs_n126, 0.002); end
  def test_webtool_graphs_o126; assert_in_epsilon(8923.716457346522, worksheet.webtool_graphs_o126, 0.002); end
  def test_webtool_graphs_p126; assert_in_epsilon(8774.904095799426, worksheet.webtool_graphs_p126, 0.002); end
  def test_webtool_graphs_q126; assert_in_epsilon(8564.996718196866, worksheet.webtool_graphs_q126, 0.002); end
  def test_webtool_graphs_r126; assert_in_epsilon(8327.446374783343, worksheet.webtool_graphs_r126, 0.002); end
  def test_webtool_graphs_s126; assert_in_epsilon(8017.518901008622, worksheet.webtool_graphs_s126, 0.002); end
  def test_webtool_graphs_t126; assert_in_epsilon(7688.624442555306, worksheet.webtool_graphs_t126, 0.002); end
  def test_webtool_graphs_b127; assert_equal("Transit city", worksheet.webtool_graphs_b127); end
  def test_webtool_graphs_l127; assert_in_epsilon(4297.810771691249, worksheet.webtool_graphs_l127, 0.002); end
  def test_webtool_graphs_m127; assert_in_epsilon(4713.292109407059, worksheet.webtool_graphs_m127, 0.002); end
  def test_webtool_graphs_n127; assert_in_epsilon(5032.123506816911, worksheet.webtool_graphs_n127, 0.002); end
  def test_webtool_graphs_o127; assert_in_epsilon(5203.72226142113, worksheet.webtool_graphs_o127, 0.002); end
  def test_webtool_graphs_p127; assert_in_epsilon(5325.2815979993065, worksheet.webtool_graphs_p127, 0.002); end
  def test_webtool_graphs_q127; assert_in_epsilon(5429.353395937232, worksheet.webtool_graphs_q127, 0.002); end
  def test_webtool_graphs_r127; assert_in_epsilon(5496.959894054885, worksheet.webtool_graphs_r127, 0.002); end
  def test_webtool_graphs_s127; assert_in_epsilon(5540.45651613991, worksheet.webtool_graphs_s127, 0.002); end
  def test_webtool_graphs_t127; assert_in_epsilon(5534.294195860223, worksheet.webtool_graphs_t127, 0.002); end
  def test_webtool_graphs_b128; assert_equal("Booming city", worksheet.webtool_graphs_b128); end
  def test_webtool_graphs_l128; assert_in_epsilon(2135.8170176364983, worksheet.webtool_graphs_l128, 0.002); end
  def test_webtool_graphs_m128; assert_in_epsilon(2629.954837775782, worksheet.webtool_graphs_m128, 0.002); end
  def test_webtool_graphs_n128; assert_in_epsilon(3197.184128590044, worksheet.webtool_graphs_n128, 0.002); end
  def test_webtool_graphs_o128; assert_in_epsilon(3694.835630912814, worksheet.webtool_graphs_o128, 0.002); end
  def test_webtool_graphs_p128; assert_in_epsilon(4182.7846581427775, worksheet.webtool_graphs_p128, 0.002); end
  def test_webtool_graphs_q128; assert_in_epsilon(4612.214074652963, worksheet.webtool_graphs_q128, 0.002); end
  def test_webtool_graphs_r128; assert_in_epsilon(5019.421812203538, worksheet.webtool_graphs_r128, 0.002); end
  def test_webtool_graphs_s128; assert_in_epsilon(5403.772585074939, worksheet.webtool_graphs_s128, 0.002); end
  def test_webtool_graphs_t128; assert_in_epsilon(5781.730040867677, worksheet.webtool_graphs_t128, 0.002); end
  def test_webtool_graphs_b129; assert_equal("Developed", worksheet.webtool_graphs_b129); end
  def test_webtool_graphs_l129; assert_in_epsilon(19691.47987657908, worksheet.webtool_graphs_l129, 0.002); end
  def test_webtool_graphs_m129; assert_in_epsilon(20079.298872965224, worksheet.webtool_graphs_m129, 0.002); end
  def test_webtool_graphs_n129; assert_in_epsilon(20223.774617731655, worksheet.webtool_graphs_n129, 0.002); end
  def test_webtool_graphs_o129; assert_in_epsilon(20359.670859985414, worksheet.webtool_graphs_o129, 0.002); end
  def test_webtool_graphs_p129; assert_in_epsilon(20308.754660922135, worksheet.webtool_graphs_p129, 0.002); end
  def test_webtool_graphs_q129; assert_in_epsilon(20247.51023752717, worksheet.webtool_graphs_q129, 0.002); end
  def test_webtool_graphs_r129; assert_in_epsilon(19955.46167487783, worksheet.webtool_graphs_r129, 0.002); end
  def test_webtool_graphs_s129; assert_in_epsilon(19553.689960242937, worksheet.webtool_graphs_s129, 0.002); end
  def test_webtool_graphs_t129; assert_in_epsilon(19048.37463536633, worksheet.webtool_graphs_t129, 0.002); end
  def test_webtool_graphs_b130; assert_equal("Developing", worksheet.webtool_graphs_b130); end
  def test_webtool_graphs_l130; assert_in_epsilon(943.5087023952483, worksheet.webtool_graphs_l130, 0.002); end
  def test_webtool_graphs_m130; assert_in_epsilon(1196.9650195745362, worksheet.webtool_graphs_m130, 0.002); end
  def test_webtool_graphs_n130; assert_in_epsilon(1505.2485369522092, worksheet.webtool_graphs_n130, 0.002); end
  def test_webtool_graphs_o130; assert_in_epsilon(1822.3872138014467, worksheet.webtool_graphs_o130, 0.002); end
  def test_webtool_graphs_p130; assert_in_epsilon(2182.665265998955, worksheet.webtool_graphs_p130, 0.002); end
  def test_webtool_graphs_q130; assert_in_epsilon(2572.0719899423584, worksheet.webtool_graphs_q130, 0.002); end
  def test_webtool_graphs_r130; assert_in_epsilon(3008.6318746517463, worksheet.webtool_graphs_r130, 0.002); end
  def test_webtool_graphs_s130; assert_in_epsilon(3437.423450557577, worksheet.webtool_graphs_s130, 0.002); end
  def test_webtool_graphs_t130; assert_in_epsilon(3906.2577879224054, worksheet.webtool_graphs_t130, 0.002); end
  def test_webtool_graphs_b131; assert_equal("International slow growth", worksheet.webtool_graphs_b131); end
  def test_webtool_graphs_l131; assert_in_delta(0.0, (worksheet.webtool_graphs_l131||0), 0.002); end
  def test_webtool_graphs_m131; assert_in_delta(0.0, (worksheet.webtool_graphs_m131||0), 0.002); end
  def test_webtool_graphs_n131; assert_in_delta(0.0, (worksheet.webtool_graphs_n131||0), 0.002); end
  def test_webtool_graphs_o131; assert_in_delta(0.0, (worksheet.webtool_graphs_o131||0), 0.002); end
  def test_webtool_graphs_p131; assert_in_delta(0.0, (worksheet.webtool_graphs_p131||0), 0.002); end
  def test_webtool_graphs_q131; assert_in_delta(0.0, (worksheet.webtool_graphs_q131||0), 0.002); end
  def test_webtool_graphs_r131; assert_in_delta(0.0, (worksheet.webtool_graphs_r131||0), 0.002); end
  def test_webtool_graphs_s131; assert_in_delta(0.0, (worksheet.webtool_graphs_s131||0), 0.002); end
  def test_webtool_graphs_t131; assert_in_delta(0.0, (worksheet.webtool_graphs_t131||0), 0.002); end
  def test_webtool_graphs_b132; assert_equal("International fast growth", worksheet.webtool_graphs_b132); end
  def test_webtool_graphs_l132; assert_in_delta(0.0, (worksheet.webtool_graphs_l132||0), 0.002); end
  def test_webtool_graphs_m132; assert_in_delta(0.0, (worksheet.webtool_graphs_m132||0), 0.002); end
  def test_webtool_graphs_n132; assert_in_delta(0.0, (worksheet.webtool_graphs_n132||0), 0.002); end
  def test_webtool_graphs_o132; assert_in_delta(0.0, (worksheet.webtool_graphs_o132||0), 0.002); end
  def test_webtool_graphs_p132; assert_in_delta(0.0, (worksheet.webtool_graphs_p132||0), 0.002); end
  def test_webtool_graphs_q132; assert_in_delta(0.0, (worksheet.webtool_graphs_q132||0), 0.002); end
  def test_webtool_graphs_r132; assert_in_delta(0.0, (worksheet.webtool_graphs_r132||0), 0.002); end
  def test_webtool_graphs_s132; assert_in_delta(0.0, (worksheet.webtool_graphs_s132||0), 0.002); end
  def test_webtool_graphs_t132; assert_in_delta(0.0, (worksheet.webtool_graphs_t132||0), 0.002); end
  def test_webtool_graphs_b148; assert_equal("Type of city", worksheet.webtool_graphs_b148); end
  def test_webtool_graphs_c148; assert_equal(".", worksheet.webtool_graphs_c148); end
  def test_webtool_graphs_d148; assert_equal("1975", worksheet.webtool_graphs_d148); end
  def test_webtool_graphs_e148; assert_equal("1980", worksheet.webtool_graphs_e148); end
  def test_webtool_graphs_f148; assert_equal("1985", worksheet.webtool_graphs_f148); end
  def test_webtool_graphs_g148; assert_equal("1990", worksheet.webtool_graphs_g148); end
  def test_webtool_graphs_h148; assert_equal("1995", worksheet.webtool_graphs_h148); end
  def test_webtool_graphs_i148; assert_equal("2000", worksheet.webtool_graphs_i148); end
  def test_webtool_graphs_j148; assert_equal("2005", worksheet.webtool_graphs_j148); end
  def test_webtool_graphs_k148; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k148, 0.002); end
  def test_webtool_graphs_l148; assert_equal("2011", worksheet.webtool_graphs_l148); end
  def test_webtool_graphs_m148; assert_equal("2015", worksheet.webtool_graphs_m148); end
  def test_webtool_graphs_n148; assert_equal("2020", worksheet.webtool_graphs_n148); end
  def test_webtool_graphs_o148; assert_equal("2025", worksheet.webtool_graphs_o148); end
  def test_webtool_graphs_p148; assert_equal("2030", worksheet.webtool_graphs_p148); end
  def test_webtool_graphs_q148; assert_equal("2035", worksheet.webtool_graphs_q148); end
  def test_webtool_graphs_r148; assert_equal("2040", worksheet.webtool_graphs_r148); end
  def test_webtool_graphs_s148; assert_equal("2045", worksheet.webtool_graphs_s148); end
  def test_webtool_graphs_t148; assert_equal("2050", worksheet.webtool_graphs_t148); end
  def test_webtool_graphs_b149; assert_equal("Urban", worksheet.webtool_graphs_b149); end
  def test_webtool_graphs_l149; assert_in_epsilon(3526.3848799562056, worksheet.webtool_graphs_l149, 0.002); end
  def test_webtool_graphs_m149; assert_in_epsilon(3935.2125487008543, worksheet.webtool_graphs_m149, 0.002); end
  def test_webtool_graphs_n149; assert_in_epsilon(4342.999007516519, worksheet.webtool_graphs_n149, 0.002); end
  def test_webtool_graphs_o149; assert_in_epsilon(4664.824425044321, worksheet.webtool_graphs_o149, 0.002); end
  def test_webtool_graphs_p149; assert_in_epsilon(4970.043983658932, worksheet.webtool_graphs_p149, 0.002); end
  def test_webtool_graphs_q149; assert_in_epsilon(5235.319047018817, worksheet.webtool_graphs_q149, 0.002); end
  def test_webtool_graphs_r149; assert_in_epsilon(5482.1510440195325, worksheet.webtool_graphs_r149, 0.002); end
  def test_webtool_graphs_s149; assert_in_epsilon(5708.713729480607, worksheet.webtool_graphs_s149, 0.002); end
  def test_webtool_graphs_t149; assert_in_epsilon(5926.312892734242, worksheet.webtool_graphs_t149, 0.002); end
  def test_webtool_graphs_b150; assert_equal("Rural", worksheet.webtool_graphs_b150); end
  def test_webtool_graphs_l150; assert_in_epsilon(2551.826354230094, worksheet.webtool_graphs_l150, 0.002); end
  def test_webtool_graphs_m150; assert_in_epsilon(2770.383595094094, worksheet.webtool_graphs_m150, 0.002); end
  def test_webtool_graphs_n150; assert_in_epsilon(3007.4889213139345, worksheet.webtool_graphs_n150, 0.002); end
  def test_webtool_graphs_o150; assert_in_epsilon(3253.1106604878073, worksheet.webtool_graphs_o150, 0.002); end
  def test_webtool_graphs_p150; assert_in_epsilon(3525.944659036026, worksheet.webtool_graphs_p150, 0.002); end
  def test_webtool_graphs_q150; assert_in_epsilon(3827.63202528578, worksheet.webtool_graphs_q150, 0.002); end
  def test_webtool_graphs_r150; assert_in_epsilon(4160.352358729439, worksheet.webtool_graphs_r150, 0.002); end
  def test_webtool_graphs_s150; assert_in_epsilon(4483.167321300393, worksheet.webtool_graphs_s150, 0.002); end
  def test_webtool_graphs_t150; assert_in_epsilon(4842.254593737804, worksheet.webtool_graphs_t150, 0.002); end
  def test_webtool_graphs_b151; assert_equal("Average", worksheet.webtool_graphs_b151); end
  def test_webtool_graphs_l151; assert_in_epsilon(3059.8909417877144, worksheet.webtool_graphs_l151, 0.002); end
  def test_webtool_graphs_m151; assert_in_epsilon(3399.6937942538375, worksheet.webtool_graphs_m151, 0.002); end
  def test_webtool_graphs_n151; assert_in_epsilon(3758.2536090817007, worksheet.webtool_graphs_n151, 0.002); end
  def test_webtool_graphs_o151; assert_in_epsilon(4074.9424199422574, worksheet.webtool_graphs_o151, 0.002); end
  def test_webtool_graphs_p151; assert_in_epsilon(4392.952068700945, worksheet.webtool_graphs_p151, 0.002); end
  def test_webtool_graphs_q151; assert_in_epsilon(4696.098916884786, worksheet.webtool_graphs_q151, 0.002); end
  def test_webtool_graphs_r151; assert_in_epsilon(4996.1623941267, worksheet.webtool_graphs_r151, 0.002); end
  def test_webtool_graphs_s151; assert_in_epsilon(5277.197123564861, worksheet.webtool_graphs_s151, 0.002); end
  def test_webtool_graphs_t151; assert_in_epsilon(5561.704289075469, worksheet.webtool_graphs_t151, 0.002); end
  def test_webtool_graphs_b103; assert_equal("Automobile city", worksheet.webtool_graphs_b103); end
  def test_webtool_graphs_l103; assert_in_epsilon(11737.0, worksheet.webtool_graphs_l103, 0.002); end
  def test_webtool_graphs_m103; assert_in_epsilon(12011.67656948035, worksheet.webtool_graphs_m103, 0.002); end
  def test_webtool_graphs_n103; assert_in_epsilon(12217.268350073584, worksheet.webtool_graphs_n103, 0.002); end
  def test_webtool_graphs_o103; assert_in_epsilon(12316.549373541207, worksheet.webtool_graphs_o103, 0.002); end
  def test_webtool_graphs_p103; assert_in_epsilon(12351.691578540602, worksheet.webtool_graphs_p103, 0.002); end
  def test_webtool_graphs_q103; assert_in_epsilon(12300.517078696881, worksheet.webtool_graphs_q103, 0.002); end
  def test_webtool_graphs_r103; assert_in_epsilon(12206.70562563357, worksheet.webtool_graphs_r103, 0.002); end
  def test_webtool_graphs_s103; assert_in_epsilon(12000.597935595133, worksheet.webtool_graphs_s103, 0.002); end
  def test_webtool_graphs_t103; assert_in_epsilon(11756.594724437811, worksheet.webtool_graphs_t103, 0.002); end
  def test_webtool_graphs_b104; assert_equal("Transit city", worksheet.webtool_graphs_b104); end
  def test_webtool_graphs_l104; assert_in_epsilon(8237.0, worksheet.webtool_graphs_l104, 0.002); end
  def test_webtool_graphs_m104; assert_in_epsilon(8915.99370192, worksheet.webtool_graphs_m104, 0.002); end
  def test_webtool_graphs_n104; assert_in_epsilon(9538.99810273812, worksheet.webtool_graphs_n104, 0.002); end
  def test_webtool_graphs_o104; assert_in_epsilon(9884.928851551944, worksheet.webtool_graphs_o104, 0.002); end
  def test_webtool_graphs_p104; assert_in_epsilon(10137.056971776241, worksheet.webtool_graphs_p104, 0.002); end
  def test_webtool_graphs_q104; assert_in_epsilon(10356.88611551659, worksheet.webtool_graphs_q104, 0.002); end
  def test_webtool_graphs_r104; assert_in_epsilon(10507.934507919585, worksheet.webtool_graphs_r104, 0.002); end
  def test_webtool_graphs_s104; assert_in_epsilon(10613.435011854828, worksheet.webtool_graphs_s104, 0.002); end
  def test_webtool_graphs_t104; assert_in_epsilon(10624.052693089847, worksheet.webtool_graphs_t104, 0.002); end
  def test_webtool_graphs_b105; assert_equal("Booming city", worksheet.webtool_graphs_b105); end
  def test_webtool_graphs_l105; assert_in_epsilon(9198.0, worksheet.webtool_graphs_l105, 0.002); end
  def test_webtool_graphs_m105; assert_in_epsilon(10152.870967968747, worksheet.webtool_graphs_m105, 0.002); end
  def test_webtool_graphs_n105; assert_in_epsilon(11113.758632696808, worksheet.webtool_graphs_n105, 0.002); end
  def test_webtool_graphs_o105; assert_in_epsilon(11680.67201734998, worksheet.webtool_graphs_o105, 0.002); end
  def test_webtool_graphs_p105; assert_in_epsilon(12125.31705891451, worksheet.webtool_graphs_p105, 0.002); end
  def test_webtool_graphs_q105; assert_in_epsilon(12345.14987444401, worksheet.webtool_graphs_q105, 0.002); end
  def test_webtool_graphs_r105; assert_in_epsilon(12478.43211837402, worksheet.webtool_graphs_r105, 0.002); end
  def test_webtool_graphs_s105; assert_in_epsilon(12540.94918813379, worksheet.webtool_graphs_s105, 0.002); end
  def test_webtool_graphs_t105; assert_in_epsilon(12581.760292957326, worksheet.webtool_graphs_t105, 0.002); end
  def test_webtool_graphs_b106; assert_equal("Developed", worksheet.webtool_graphs_b106); end
  def test_webtool_graphs_l106; assert_in_epsilon(23191.0, worksheet.webtool_graphs_l106, 0.002); end
  def test_webtool_graphs_m106; assert_in_epsilon(23989.60438824997, worksheet.webtool_graphs_m106, 0.002); end
  def test_webtool_graphs_n106; assert_in_epsilon(24687.28281511941, worksheet.webtool_graphs_n106, 0.002); end
  def test_webtool_graphs_o106; assert_in_epsilon(25405.25149686098, worksheet.webtool_graphs_o106, 0.002); end
  def test_webtool_graphs_p106; assert_in_epsilon(25917.437658943392, worksheet.webtool_graphs_p106, 0.002); end
  def test_webtool_graphs_q106; assert_in_epsilon(26439.949822508654, worksheet.webtool_graphs_q106, 0.002); end
  def test_webtool_graphs_r106; assert_in_epsilon(26678.76756865164, worksheet.webtool_graphs_r106, 0.002); end
  def test_webtool_graphs_s106; assert_in_epsilon(26778.963127694922, worksheet.webtool_graphs_s106, 0.002); end
  def test_webtool_graphs_t106; assert_in_epsilon(26738.818776840963, worksheet.webtool_graphs_t106, 0.002); end
  def test_webtool_graphs_b107; assert_equal("Developing", worksheet.webtool_graphs_b107); end
  def test_webtool_graphs_l107; assert_in_epsilon(4007.0, worksheet.webtool_graphs_l107, 0.002); end
  def test_webtool_graphs_m107; assert_in_epsilon(4466.28738647215, worksheet.webtool_graphs_m107, 0.002); end
  def test_webtool_graphs_n107; assert_in_epsilon(4967.507362540289, worksheet.webtool_graphs_n107, 0.002); end
  def test_webtool_graphs_o107; assert_in_epsilon(5391.075752419436, worksheet.webtool_graphs_o107, 0.002); end
  def test_webtool_graphs_p107; assert_in_epsilon(5850.760884119186, worksheet.webtool_graphs_p107, 0.002); end
  def test_webtool_graphs_q107; assert_in_epsilon(6302.931111013998, worksheet.webtool_graphs_q107, 0.002); end
  def test_webtool_graphs_r107; assert_in_epsilon(6790.0468634805475, worksheet.webtool_graphs_r107, 0.002); end
  def test_webtool_graphs_s107; assert_in_epsilon(7189.558258390311, worksheet.webtool_graphs_s107, 0.002); end
  def test_webtool_graphs_t107; assert_in_epsilon(7612.576023413833, worksheet.webtool_graphs_t107, 0.002); end
  def test_webtool_graphs_b108; assert_equal("International slow growth", worksheet.webtool_graphs_b108); end
  def test_webtool_graphs_l108; assert_in_epsilon(3216.16253150423, worksheet.webtool_graphs_l108, 0.002); end
  def test_webtool_graphs_m108; assert_in_epsilon(3484.134643747568, worksheet.webtool_graphs_m108, 0.002); end
  def test_webtool_graphs_n108; assert_in_epsilon(3626.3763334098608, worksheet.webtool_graphs_n108, 0.002); end
  def test_webtool_graphs_o108; assert_in_epsilon(3774.4251173284824, worksheet.webtool_graphs_o108, 0.002); end
  def test_webtool_graphs_p108; assert_in_epsilon(3928.5180732812773, worksheet.webtool_graphs_p108, 0.002); end
  def test_webtool_graphs_q108; assert_in_epsilon(4088.901957875167, worksheet.webtool_graphs_q108, 0.002); end
  def test_webtool_graphs_r108; assert_in_epsilon(4255.833601689607, worksheet.webtool_graphs_r108, 0.002); end
  def test_webtool_graphs_s108; assert_in_epsilon(4429.580320551989, worksheet.webtool_graphs_s108, 0.002); end
  def test_webtool_graphs_t108; assert_in_epsilon(4610.42034360358, worksheet.webtool_graphs_t108, 0.002); end
  def test_webtool_graphs_b109; assert_equal("International fast growth", worksheet.webtool_graphs_b109); end
  def test_webtool_graphs_l109; assert_in_epsilon(233.26483269454, worksheet.webtool_graphs_l109, 0.002); end
  def test_webtool_graphs_m109; assert_in_epsilon(287.4501885868328, worksheet.webtool_graphs_m109, 0.002); end
  def test_webtool_graphs_n109; assert_in_epsilon(336.6695916324483, worksheet.webtool_graphs_n109, 0.002); end
  def test_webtool_graphs_o109; assert_in_epsilon(394.31671444431805, worksheet.webtool_graphs_o109, 0.002); end
  def test_webtool_graphs_p109; assert_in_epsilon(461.8346151674724, worksheet.webtool_graphs_p109, 0.002); end
  def test_webtool_graphs_q109; assert_in_epsilon(540.9134433153897, worksheet.webtool_graphs_q109, 0.002); end
  def test_webtool_graphs_r109; assert_in_epsilon(633.5327486295328, worksheet.webtool_graphs_r109, 0.002); end
  def test_webtool_graphs_s109; assert_in_epsilon(742.0110343829413, worksheet.webtool_graphs_s109, 0.002); end
  def test_webtool_graphs_t109; assert_in_epsilon(869.0637955765758, worksheet.webtool_graphs_t109, 0.002); end
  def test_webtool_graphs_b113; assert_equal("Type of city", worksheet.webtool_graphs_b113); end
  def test_webtool_graphs_c113; assert_equal(".", worksheet.webtool_graphs_c113); end
  def test_webtool_graphs_d113; assert_equal("1975", worksheet.webtool_graphs_d113); end
  def test_webtool_graphs_e113; assert_equal("1980", worksheet.webtool_graphs_e113); end
  def test_webtool_graphs_f113; assert_equal("1985", worksheet.webtool_graphs_f113); end
  def test_webtool_graphs_g113; assert_equal("1990", worksheet.webtool_graphs_g113); end
  def test_webtool_graphs_h113; assert_equal("1995", worksheet.webtool_graphs_h113); end
  def test_webtool_graphs_i113; assert_equal("2000", worksheet.webtool_graphs_i113); end
  def test_webtool_graphs_j113; assert_equal("2005", worksheet.webtool_graphs_j113); end
  def test_webtool_graphs_k113; assert_equal("2010", worksheet.webtool_graphs_k113); end
  def test_webtool_graphs_l113; assert_equal("2011", worksheet.webtool_graphs_l113); end
  def test_webtool_graphs_m113; assert_equal("2015", worksheet.webtool_graphs_m113); end
  def test_webtool_graphs_n113; assert_equal("2020", worksheet.webtool_graphs_n113); end
  def test_webtool_graphs_o113; assert_equal("2025", worksheet.webtool_graphs_o113); end
  def test_webtool_graphs_p113; assert_equal("2030", worksheet.webtool_graphs_p113); end
  def test_webtool_graphs_q113; assert_equal("2035", worksheet.webtool_graphs_q113); end
  def test_webtool_graphs_r113; assert_equal("2040", worksheet.webtool_graphs_r113); end
  def test_webtool_graphs_s113; assert_equal("2045", worksheet.webtool_graphs_s113); end
  def test_webtool_graphs_t113; assert_equal("2050", worksheet.webtool_graphs_t113); end
  def test_webtool_graphs_b114; assert_equal("Urban", worksheet.webtool_graphs_b114); end
  def test_webtool_graphs_l114; assert_in_epsilon(9187.12956717257, worksheet.webtool_graphs_l114, 0.002); end
  def test_webtool_graphs_m114; assert_in_epsilon(9994.291770817243, worksheet.webtool_graphs_m114, 0.002); end
  def test_webtool_graphs_n114; assert_in_epsilon(10790.370125133748, worksheet.webtool_graphs_n114, 0.002); end
  def test_webtool_graphs_o114; assert_in_epsilon(11263.179096164322, worksheet.webtool_graphs_o114, 0.002); end
  def test_webtool_graphs_p114; assert_in_epsilon(11632.635236066042, worksheet.webtool_graphs_p114, 0.002); end
  def test_webtool_graphs_q114; assert_in_epsilon(11844.606830095696, worksheet.webtool_graphs_q114, 0.002); end
  def test_webtool_graphs_r114; assert_in_epsilon(11979.266407800184, worksheet.webtool_graphs_r114, 0.002); end
  def test_webtool_graphs_s114; assert_in_epsilon(12044.496604137015, worksheet.webtool_graphs_s114, 0.002); end
  def test_webtool_graphs_t114; assert_in_epsilon(12069.864985381157, worksheet.webtool_graphs_t114, 0.002); end
  def test_webtool_graphs_b115; assert_equal("Rural", worksheet.webtool_graphs_b115); end
  def test_webtool_graphs_l115; assert_in_epsilon(5652.722918290269, worksheet.webtool_graphs_l115, 0.002); end
  def test_webtool_graphs_m115; assert_in_epsilon(6093.117515886366, worksheet.webtool_graphs_m115, 0.002); end
  def test_webtool_graphs_n115; assert_in_epsilon(6550.102216834278, worksheet.webtool_graphs_n115, 0.002); end
  def test_webtool_graphs_o115; assert_in_epsilon(6935.786997616821, worksheet.webtool_graphs_o115, 0.002); end
  def test_webtool_graphs_p115; assert_in_epsilon(7337.852380308465, worksheet.webtool_graphs_p115, 0.002); end
  def test_webtool_graphs_q115; assert_in_epsilon(7733.347464541759, worksheet.webtool_graphs_q115, 0.002); end
  def test_webtool_graphs_r115; assert_in_epsilon(8141.700671789881, worksheet.webtool_graphs_r115, 0.002); end
  def test_webtool_graphs_s115; assert_in_epsilon(8460.66531418786, worksheet.webtool_graphs_s115, 0.002); end
  def test_webtool_graphs_t115; assert_in_epsilon(8794.848112899108, worksheet.webtool_graphs_t115, 0.002); end
  def test_webtool_graphs_b116; assert_equal("International", worksheet.webtool_graphs_b116); end
  def test_webtool_graphs_l116; assert_in_epsilon(766.3185363489457, worksheet.webtool_graphs_l116, 0.002); end
  def test_webtool_graphs_m116; assert_in_epsilon(849.4419294600638, worksheet.webtool_graphs_m116, 0.002); end
  def test_webtool_graphs_n116; assert_in_epsilon(903.0950604448491, worksheet.webtool_graphs_n116, 0.002); end
  def test_webtool_graphs_o116; assert_in_epsilon(964.060065442941, worksheet.webtool_graphs_o116, 0.002); end
  def test_webtool_graphs_p116; assert_in_epsilon(1033.6095820295468, worksheet.webtool_graphs_p116, 0.002); end
  def test_webtool_graphs_q116; assert_in_epsilon(1113.2425210592717, worksheet.webtool_graphs_q116, 0.002); end
  def test_webtool_graphs_r116; assert_in_epsilon(1204.7240674955424, worksheet.webtool_graphs_r116, 0.002); end
  def test_webtool_graphs_s116; assert_in_epsilon(1310.1327232893589, worksheet.webtool_graphs_s116, 0.002); end
  def test_webtool_graphs_t116; assert_in_epsilon(1431.9156295802086, worksheet.webtool_graphs_t116, 0.002); end
  def test_webtool_graphs_b117; assert_equal("Average global distance travelled per person (urban and rural - excluding international)", worksheet.webtool_graphs_b117); end
  def test_webtool_graphs_l117; assert_in_epsilon(7495.307851798881, worksheet.webtool_graphs_l117, 0.002); end
  def test_webtool_graphs_m117; assert_in_epsilon(8200.76494319802, worksheet.webtool_graphs_m117, 0.002); end
  def test_webtool_graphs_n117; assert_in_epsilon(8933.793246288047, worksheet.webtool_graphs_n117, 0.002); end
  def test_webtool_graphs_o117; assert_in_epsilon(9454.986251380427, worksheet.webtool_graphs_o117, 0.002); end
  def test_webtool_graphs_p117; assert_in_epsilon(9916.351307185267, worksheet.webtool_graphs_p117, 0.002); end
  def test_webtool_graphs_q117; assert_in_epsilon(10269.772526814631, worksheet.webtool_graphs_q117, 0.002); end
  def test_webtool_graphs_r117; assert_in_epsilon(10568.30011491926, worksheet.webtool_graphs_r117, 0.002); end
  def test_webtool_graphs_s117; assert_in_epsilon(10782.624590077714, worksheet.webtool_graphs_s117, 0.002); end
  def test_webtool_graphs_t117; assert_in_epsilon(10968.35657947713, worksheet.webtool_graphs_t117, 0.002); end
  def test_webtool_graphs_b118; assert_equal("Average global distance travelled per person (including domestic&international)", worksheet.webtool_graphs_b118); end
  def test_webtool_graphs_l118; assert_in_epsilon(8261.626388147826, worksheet.webtool_graphs_l118, 0.002); end
  def test_webtool_graphs_m118; assert_in_epsilon(9050.206872658084, worksheet.webtool_graphs_m118, 0.002); end
  def test_webtool_graphs_n118; assert_in_epsilon(9836.888306732897, worksheet.webtool_graphs_n118, 0.002); end
  def test_webtool_graphs_o118; assert_in_epsilon(10419.04631682337, worksheet.webtool_graphs_o118, 0.002); end
  def test_webtool_graphs_p118; assert_in_epsilon(10949.960889214814, worksheet.webtool_graphs_p118, 0.002); end
  def test_webtool_graphs_q118; assert_in_epsilon(11383.015047873903, worksheet.webtool_graphs_q118, 0.002); end
  def test_webtool_graphs_r118; assert_in_epsilon(11773.024182414803, worksheet.webtool_graphs_r118, 0.002); end
  def test_webtool_graphs_s118; assert_in_epsilon(12092.757313367072, worksheet.webtool_graphs_s118, 0.002); end
  def test_webtool_graphs_t118; assert_in_epsilon(12400.272209057337, worksheet.webtool_graphs_t118, 0.002); end
  def test_webtool_graphs_c288; assert_equal("Technology code", worksheet.webtool_graphs_c288); end
  def test_webtool_graphs_d288; assert_equal("1975", worksheet.webtool_graphs_d288); end
  def test_webtool_graphs_e288; assert_equal("1980", worksheet.webtool_graphs_e288); end
  def test_webtool_graphs_f288; assert_equal("1985", worksheet.webtool_graphs_f288); end
  def test_webtool_graphs_g288; assert_equal("1990", worksheet.webtool_graphs_g288); end
  def test_webtool_graphs_h288; assert_equal("1995", worksheet.webtool_graphs_h288); end
  def test_webtool_graphs_i288; assert_equal("2000", worksheet.webtool_graphs_i288); end
  def test_webtool_graphs_j288; assert_equal("2005", worksheet.webtool_graphs_j288); end
  def test_webtool_graphs_k288; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k288, 0.002); end
  def test_webtool_graphs_l288; assert_equal("2011", worksheet.webtool_graphs_l288); end
  def test_webtool_graphs_m288; assert_equal("2015", worksheet.webtool_graphs_m288); end
  def test_webtool_graphs_n288; assert_equal("2020", worksheet.webtool_graphs_n288); end
  def test_webtool_graphs_o288; assert_equal("2025", worksheet.webtool_graphs_o288); end
  def test_webtool_graphs_p288; assert_equal("2030", worksheet.webtool_graphs_p288); end
  def test_webtool_graphs_q288; assert_equal("2035", worksheet.webtool_graphs_q288); end
  def test_webtool_graphs_r288; assert_equal("2040", worksheet.webtool_graphs_r288); end
  def test_webtool_graphs_s288; assert_equal("2045", worksheet.webtool_graphs_s288); end
  def test_webtool_graphs_t288; assert_equal("2050", worksheet.webtool_graphs_t288); end
  def test_webtool_graphs_c289; assert_equal("Historic data", worksheet.webtool_graphs_c289); end
  def test_webtool_graphs_c290; assert_equal("All cars", worksheet.webtool_graphs_c290); end
  def test_webtool_graphs_m290; assert_in_epsilon(7.931342605195457, worksheet.webtool_graphs_m290, 0.002); end
  def test_webtool_graphs_n290; assert_in_epsilon(7.427979260369896, worksheet.webtool_graphs_n290, 0.002); end
  def test_webtool_graphs_o290; assert_in_epsilon(6.8940178617823245, worksheet.webtool_graphs_o290, 0.002); end
  def test_webtool_graphs_p290; assert_in_epsilon(6.437595580728663, worksheet.webtool_graphs_p290, 0.002); end
  def test_webtool_graphs_q290; assert_in_epsilon(6.097194269664791, worksheet.webtool_graphs_q290, 0.002); end
  def test_webtool_graphs_r290; assert_in_epsilon(5.862534648136119, worksheet.webtool_graphs_r290, 0.002); end
  def test_webtool_graphs_s290; assert_in_epsilon(5.671048889825377, worksheet.webtool_graphs_s290, 0.002); end
  def test_webtool_graphs_b75; assert_equal("Type of city", worksheet.webtool_graphs_b75); end
  def test_webtool_graphs_c75; assert_equal(".", worksheet.webtool_graphs_c75); end
  def test_webtool_graphs_d75; assert_equal("1975", worksheet.webtool_graphs_d75); end
  def test_webtool_graphs_e75; assert_equal("1980", worksheet.webtool_graphs_e75); end
  def test_webtool_graphs_f75; assert_equal("1985", worksheet.webtool_graphs_f75); end
  def test_webtool_graphs_g75; assert_equal("1990", worksheet.webtool_graphs_g75); end
  def test_webtool_graphs_h75; assert_equal("1995", worksheet.webtool_graphs_h75); end
  def test_webtool_graphs_i75; assert_equal("2000", worksheet.webtool_graphs_i75); end
  def test_webtool_graphs_j75; assert_equal("2005", worksheet.webtool_graphs_j75); end
  def test_webtool_graphs_k75; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k75, 0.002); end
  def test_webtool_graphs_l75; assert_equal("2011", worksheet.webtool_graphs_l75); end
  def test_webtool_graphs_m75; assert_equal("2015", worksheet.webtool_graphs_m75); end
  def test_webtool_graphs_n75; assert_equal("2020", worksheet.webtool_graphs_n75); end
  def test_webtool_graphs_o75; assert_equal("2025", worksheet.webtool_graphs_o75); end
  def test_webtool_graphs_p75; assert_equal("2030", worksheet.webtool_graphs_p75); end
  def test_webtool_graphs_q75; assert_equal("2035", worksheet.webtool_graphs_q75); end
  def test_webtool_graphs_r75; assert_equal("2040", worksheet.webtool_graphs_r75); end
  def test_webtool_graphs_s75; assert_equal("2045", worksheet.webtool_graphs_s75); end
  def test_webtool_graphs_t75; assert_equal("2050", worksheet.webtool_graphs_t75); end
  def test_webtool_graphs_b76; assert_equal("Automobile city", worksheet.webtool_graphs_b76); end
  def test_webtool_graphs_l76; assert_in_delta(0.7598986494851144, worksheet.webtool_graphs_l76, 0.002); end
  def test_webtool_graphs_m76; assert_in_delta(0.7527492024947663, worksheet.webtool_graphs_m76, 0.002); end
  def test_webtool_graphs_n76; assert_in_delta(0.738639882971367, worksheet.webtool_graphs_n76, 0.002); end
  def test_webtool_graphs_o76; assert_in_delta(0.7245305634479675, worksheet.webtool_graphs_o76, 0.002); end
  def test_webtool_graphs_p76; assert_in_delta(0.7104212439245681, worksheet.webtool_graphs_p76, 0.002); end
  def test_webtool_graphs_q76; assert_in_delta(0.6963119244011686, worksheet.webtool_graphs_q76, 0.002); end
  def test_webtool_graphs_r76; assert_in_delta(0.6822026048777693, worksheet.webtool_graphs_r76, 0.002); end
  def test_webtool_graphs_s76; assert_in_delta(0.66809328535437, worksheet.webtool_graphs_s76, 0.002); end
  def test_webtool_graphs_t76; assert_in_delta(0.6539839658309705, worksheet.webtool_graphs_t76, 0.002); end
  def test_webtool_graphs_b77; assert_equal("Transit city", worksheet.webtool_graphs_b77); end
  def test_webtool_graphs_l77; assert_in_delta(0.5217689415674699, worksheet.webtool_graphs_l77, 0.002); end
  def test_webtool_graphs_m77; assert_in_delta(0.5286334049778526, worksheet.webtool_graphs_m77, 0.002); end
  def test_webtool_graphs_n77; assert_in_delta(0.5275316603084831, worksheet.webtool_graphs_n77, 0.002); end
  def test_webtool_graphs_o77; assert_in_delta(0.5264299156391136, worksheet.webtool_graphs_o77, 0.002); end
  def test_webtool_graphs_p77; assert_in_delta(0.5253281709697442, worksheet.webtool_graphs_p77, 0.002); end
  def test_webtool_graphs_q77; assert_in_delta(0.5242264263003746, worksheet.webtool_graphs_q77, 0.002); end
  def test_webtool_graphs_r77; assert_in_delta(0.5231246816310051, worksheet.webtool_graphs_r77, 0.002); end
  def test_webtool_graphs_s77; assert_in_delta(0.5220229369616356, worksheet.webtool_graphs_s77, 0.002); end
  def test_webtool_graphs_t77; assert_in_delta(0.5209211922922661, worksheet.webtool_graphs_t77, 0.002); end
  def test_webtool_graphs_b78; assert_equal("Booming city", worksheet.webtool_graphs_b78); end
  def test_webtool_graphs_l78; assert_in_delta(0.2322045028959011, worksheet.webtool_graphs_l78, 0.002); end
  def test_webtool_graphs_m78; assert_in_delta(0.25903558176529734, worksheet.webtool_graphs_m78, 0.002); end
  def test_webtool_graphs_n78; assert_in_delta(0.2876780245329326, worksheet.webtool_graphs_n78, 0.002); end
  def test_webtool_graphs_o78; assert_in_delta(0.316320467300568, worksheet.webtool_graphs_o78, 0.002); end
  def test_webtool_graphs_p78; assert_in_delta(0.3449629100682033, worksheet.webtool_graphs_p78, 0.002); end
  def test_webtool_graphs_q78; assert_in_delta(0.3736053528358386, worksheet.webtool_graphs_q78, 0.002); end
  def test_webtool_graphs_r78; assert_in_delta(0.402247795603474, worksheet.webtool_graphs_r78, 0.002); end
  def test_webtool_graphs_s78; assert_in_delta(0.43089023837110935, worksheet.webtool_graphs_s78, 0.002); end
  def test_webtool_graphs_t78; assert_in_delta(0.4595326811387447, worksheet.webtool_graphs_t78, 0.002); end
  def test_webtool_graphs_b79; assert_equal("Developed", worksheet.webtool_graphs_b79); end
  def test_webtool_graphs_l79; assert_in_delta(0.8491000766064025, worksheet.webtool_graphs_l79, 0.002); end
  def test_webtool_graphs_m79; assert_in_delta(0.837, worksheet.webtool_graphs_m79, 0.002); end
  def test_webtool_graphs_n79; assert_in_delta(0.8191980773739045, worksheet.webtool_graphs_n79, 0.002); end
  def test_webtool_graphs_o79; assert_in_delta(0.8013961547478092, worksheet.webtool_graphs_o79, 0.002); end
  def test_webtool_graphs_p79; assert_in_delta(0.7835942321217139, worksheet.webtool_graphs_p79, 0.002); end
  def test_webtool_graphs_q79; assert_in_delta(0.7657923094956185, worksheet.webtool_graphs_q79, 0.002); end
  def test_webtool_graphs_r79; assert_in_delta(0.7479903868695232, worksheet.webtool_graphs_r79, 0.002); end
  def test_webtool_graphs_s79; assert_in_delta(0.7301884642434279, worksheet.webtool_graphs_s79, 0.002); end
  def test_webtool_graphs_t79; assert_in_delta(0.7123865416173326, worksheet.webtool_graphs_t79, 0.002); end
  def test_webtool_graphs_b80; assert_equal("Developing", worksheet.webtool_graphs_b80); end
  def test_webtool_graphs_l80; assert_in_delta(0.2354651116534186, worksheet.webtool_graphs_l80, 0.002); end
  def test_webtool_graphs_m80; assert_in_delta(0.268, worksheet.webtool_graphs_m80, 0.002); end
  def test_webtool_graphs_n80; assert_in_delta(0.30301888393829246, worksheet.webtool_graphs_n80, 0.002); end
  def test_webtool_graphs_o80; assert_in_delta(0.3380377678765849, worksheet.webtool_graphs_o80, 0.002); end
  def test_webtool_graphs_p80; assert_in_delta(0.3730566518148773, worksheet.webtool_graphs_p80, 0.002); end
  def test_webtool_graphs_q80; assert_in_delta(0.40807553575316974, worksheet.webtool_graphs_q80, 0.002); end
  def test_webtool_graphs_r80; assert_in_delta(0.44309441969146224, worksheet.webtool_graphs_r80, 0.002); end
  def test_webtool_graphs_s80; assert_in_delta(0.4781133036297547, worksheet.webtool_graphs_s80, 0.002); end
  def test_webtool_graphs_t80; assert_in_delta(0.5131321875680471, worksheet.webtool_graphs_t80, 0.002); end
  def test_webtool_graphs_b81; assert_equal("International slow growth", worksheet.webtool_graphs_b81); end
  def test_webtool_graphs_l81; assert_in_delta(0.0, (worksheet.webtool_graphs_l81||0), 0.002); end
  def test_webtool_graphs_m81; assert_in_delta(0.0, (worksheet.webtool_graphs_m81||0), 0.002); end
  def test_webtool_graphs_n81; assert_in_delta(0.0, (worksheet.webtool_graphs_n81||0), 0.002); end
  def test_webtool_graphs_o81; assert_in_delta(0.0, (worksheet.webtool_graphs_o81||0), 0.002); end
  def test_webtool_graphs_p81; assert_in_delta(0.0, (worksheet.webtool_graphs_p81||0), 0.002); end
  def test_webtool_graphs_q81; assert_in_delta(0.0, (worksheet.webtool_graphs_q81||0), 0.002); end
  def test_webtool_graphs_r81; assert_in_delta(0.0, (worksheet.webtool_graphs_r81||0), 0.002); end
  def test_webtool_graphs_s81; assert_in_delta(0.0, (worksheet.webtool_graphs_s81||0), 0.002); end
  def test_webtool_graphs_t81; assert_in_delta(0.0, (worksheet.webtool_graphs_t81||0), 0.002); end
  def test_webtool_graphs_b82; assert_equal("International fast growth", worksheet.webtool_graphs_b82); end
  def test_webtool_graphs_l82; assert_in_delta(0.0, (worksheet.webtool_graphs_l82||0), 0.002); end
  def test_webtool_graphs_m82; assert_in_delta(0.0, (worksheet.webtool_graphs_m82||0), 0.002); end
  def test_webtool_graphs_n82; assert_in_delta(0.0, (worksheet.webtool_graphs_n82||0), 0.002); end
  def test_webtool_graphs_o82; assert_in_delta(0.0, (worksheet.webtool_graphs_o82||0), 0.002); end
  def test_webtool_graphs_p82; assert_in_delta(0.0, (worksheet.webtool_graphs_p82||0), 0.002); end
  def test_webtool_graphs_q82; assert_in_delta(0.0, (worksheet.webtool_graphs_q82||0), 0.002); end
  def test_webtool_graphs_r82; assert_in_delta(0.0, (worksheet.webtool_graphs_r82||0), 0.002); end
  def test_webtool_graphs_s82; assert_in_delta(0.0, (worksheet.webtool_graphs_s82||0), 0.002); end
  def test_webtool_graphs_t82; assert_in_delta(0.0, (worksheet.webtool_graphs_t82||0), 0.002); end
  def test_webtool_graphs_b136; assert_equal("Type of city", worksheet.webtool_graphs_b136); end
  def test_webtool_graphs_c136; assert_equal(".", worksheet.webtool_graphs_c136); end
  def test_webtool_graphs_d136; assert_equal("1975", worksheet.webtool_graphs_d136); end
  def test_webtool_graphs_e136; assert_equal("1980", worksheet.webtool_graphs_e136); end
  def test_webtool_graphs_f136; assert_equal("1985", worksheet.webtool_graphs_f136); end
  def test_webtool_graphs_g136; assert_equal("1990", worksheet.webtool_graphs_g136); end
  def test_webtool_graphs_h136; assert_equal("1995", worksheet.webtool_graphs_h136); end
  def test_webtool_graphs_i136; assert_equal("2000", worksheet.webtool_graphs_i136); end
  def test_webtool_graphs_j136; assert_equal("2005", worksheet.webtool_graphs_j136); end
  def test_webtool_graphs_k136; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k136, 0.002); end
  def test_webtool_graphs_l136; assert_equal("2011", worksheet.webtool_graphs_l136); end
  def test_webtool_graphs_m136; assert_equal("2015", worksheet.webtool_graphs_m136); end
  def test_webtool_graphs_n136; assert_equal("2020", worksheet.webtool_graphs_n136); end
  def test_webtool_graphs_o136; assert_equal("2025", worksheet.webtool_graphs_o136); end
  def test_webtool_graphs_p136; assert_equal("2030", worksheet.webtool_graphs_p136); end
  def test_webtool_graphs_q136; assert_equal("2035", worksheet.webtool_graphs_q136); end
  def test_webtool_graphs_r136; assert_equal("2040", worksheet.webtool_graphs_r136); end
  def test_webtool_graphs_s136; assert_equal("2045", worksheet.webtool_graphs_s136); end
  def test_webtool_graphs_t136; assert_equal("2050", worksheet.webtool_graphs_t136); end
  def test_webtool_graphs_b137; assert_equal("Urban", worksheet.webtool_graphs_b137); end
  def test_webtool_graphs_l137; assert_in_delta(0.383839680737352, worksheet.webtool_graphs_l137, 0.002); end
  def test_webtool_graphs_m137; assert_in_delta(0.39374601411892424, worksheet.webtool_graphs_m137, 0.002); end
  def test_webtool_graphs_n137; assert_in_delta(0.4024884185761595, worksheet.webtool_graphs_n137, 0.002); end
  def test_webtool_graphs_o137; assert_in_delta(0.4141658749467038, worksheet.webtool_graphs_o137, 0.002); end
  def test_webtool_graphs_p137; assert_in_delta(0.4272500497780343, worksheet.webtool_graphs_p137, 0.002); end
  def test_webtool_graphs_q137; assert_in_delta(0.4420002387682901, worksheet.webtool_graphs_q137, 0.002); end
  def test_webtool_graphs_r137; assert_in_delta(0.45763662459746973, worksheet.webtool_graphs_r137, 0.002); end
  def test_webtool_graphs_s137; assert_in_delta(0.47396864452764187, worksheet.webtool_graphs_s137, 0.002); end
  def test_webtool_graphs_t137; assert_in_delta(0.49100076097885975, worksheet.webtool_graphs_t137, 0.002); end
  def test_webtool_graphs_b138; assert_equal("Rural", worksheet.webtool_graphs_b138); end
  def test_webtool_graphs_l138; assert_in_delta(0.451433121898344, worksheet.webtool_graphs_l138, 0.002); end
  def test_webtool_graphs_m138; assert_in_delta(0.45467424317206623, worksheet.webtool_graphs_m138, 0.002); end
  def test_webtool_graphs_n138; assert_in_delta(0.45915144859639767, worksheet.webtool_graphs_n138, 0.002); end
  def test_webtool_graphs_o138; assert_in_delta(0.4690326651619486, worksheet.webtool_graphs_o138, 0.002); end
  def test_webtool_graphs_p138; assert_in_delta(0.4805145260891449, worksheet.webtool_graphs_p138, 0.002); end
  def test_webtool_graphs_q138; assert_in_delta(0.4949515126322579, worksheet.webtool_graphs_q138, 0.002); end
  def test_webtool_graphs_r138; assert_in_delta(0.5109930377500383, worksheet.webtool_graphs_r138, 0.002); end
  def test_webtool_graphs_s138; assert_in_delta(0.5298835440024415, worksheet.webtool_graphs_s138, 0.002); end
  def test_webtool_graphs_t138; assert_in_delta(0.5505785354764492, worksheet.webtool_graphs_t138, 0.002); end
  def test_webtool_graphs_b139; assert_equal("Average", worksheet.webtool_graphs_b139); end
  def test_webtool_graphs_l139; assert_in_delta(0.4082408624554811, worksheet.webtool_graphs_l139, 0.002); end
  def test_webtool_graphs_m139; assert_in_delta(0.41455813180862516, worksheet.webtool_graphs_m139, 0.002); end
  def test_webtool_graphs_n139; assert_in_delta(0.4206783731695648, worksheet.webtool_graphs_n139, 0.002); end
  def test_webtool_graphs_o139; assert_in_delta(0.43098343155679536, worksheet.webtool_graphs_o139, 0.002); end
  def test_webtool_graphs_p139; assert_in_delta(0.44300085108096826, worksheet.webtool_graphs_p139, 0.002); end
  def test_webtool_graphs_q139; assert_in_delta(0.4572738981923071, worksheet.webtool_graphs_q139, 0.002); end
  def test_webtool_graphs_r139; assert_in_delta(0.4727498594663887, worksheet.webtool_graphs_r139, 0.002); end
  def test_webtool_graphs_s139; assert_in_delta(0.48941675372997717, worksheet.webtool_graphs_s139, 0.002); end
  def test_webtool_graphs_t139; assert_in_delta(0.5070681508916262, worksheet.webtool_graphs_t139, 0.002); end
  def test_webtool_graphs_c261; assert_equal("Technology code", worksheet.webtool_graphs_c261); end
  def test_webtool_graphs_d261; assert_equal("1975", worksheet.webtool_graphs_d261); end
  def test_webtool_graphs_e261; assert_equal("1980", worksheet.webtool_graphs_e261); end
  def test_webtool_graphs_f261; assert_equal("1985", worksheet.webtool_graphs_f261); end
  def test_webtool_graphs_g261; assert_equal("1990", worksheet.webtool_graphs_g261); end
  def test_webtool_graphs_h261; assert_equal("1995", worksheet.webtool_graphs_h261); end
  def test_webtool_graphs_i261; assert_equal("2000", worksheet.webtool_graphs_i261); end
  def test_webtool_graphs_j261; assert_equal("2005", worksheet.webtool_graphs_j261); end
  def test_webtool_graphs_k261; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k261, 0.002); end
  def test_webtool_graphs_l261; assert_equal("2011", worksheet.webtool_graphs_l261); end
  def test_webtool_graphs_m261; assert_equal("2015", worksheet.webtool_graphs_m261); end
  def test_webtool_graphs_n261; assert_equal("2020", worksheet.webtool_graphs_n261); end
  def test_webtool_graphs_o261; assert_equal("2025", worksheet.webtool_graphs_o261); end
  def test_webtool_graphs_p261; assert_equal("2030", worksheet.webtool_graphs_p261); end
  def test_webtool_graphs_q261; assert_equal("2035", worksheet.webtool_graphs_q261); end
  def test_webtool_graphs_r261; assert_equal("2040", worksheet.webtool_graphs_r261); end
  def test_webtool_graphs_s261; assert_equal("2045", worksheet.webtool_graphs_s261); end
  def test_webtool_graphs_t261; assert_equal("2050", worksheet.webtool_graphs_t261); end
  def test_webtool_graphs_c262; assert_equal("Historic data", worksheet.webtool_graphs_c262); end
  def test_webtool_graphs_c263; assert_equal("Hydrogen", worksheet.webtool_graphs_c263); end
  def test_webtool_graphs_l263; assert_in_delta(0.0, (worksheet.webtool_graphs_l263||0), 0.002); end
  def test_webtool_graphs_m263; assert_in_delta(0.0, (worksheet.webtool_graphs_m263||0), 0.002); end
  def test_webtool_graphs_n263; assert_in_delta(0.0, (worksheet.webtool_graphs_n263||0), 0.002); end
  def test_webtool_graphs_o263; assert_in_delta(0.0, (worksheet.webtool_graphs_o263||0), 0.002); end
  def test_webtool_graphs_p263; assert_in_delta(0.0, (worksheet.webtool_graphs_p263||0), 0.002); end
  def test_webtool_graphs_q263; assert_in_delta(0.0, (worksheet.webtool_graphs_q263||0), 0.002); end
  def test_webtool_graphs_r263; assert_in_delta(0.0, (worksheet.webtool_graphs_r263||0), 0.002); end
  def test_webtool_graphs_s263; assert_in_delta(0.0, (worksheet.webtool_graphs_s263||0), 0.002); end
  def test_webtool_graphs_t263; assert_in_delta(0.0, (worksheet.webtool_graphs_t263||0), 0.002); end
  def test_webtool_graphs_c264; assert_equal("Electric", worksheet.webtool_graphs_c264); end
  def test_webtool_graphs_l264; assert_in_epsilon(1843862.7539329836, worksheet.webtool_graphs_l264, 0.002); end
  def test_webtool_graphs_m264; assert_in_epsilon(10706143.935685486, worksheet.webtool_graphs_m264, 0.002); end
  def test_webtool_graphs_n264; assert_in_epsilon(14105101.532391306, worksheet.webtool_graphs_n264, 0.002); end
  def test_webtool_graphs_o264; assert_in_epsilon(17940880.226857774, worksheet.webtool_graphs_o264, 0.002); end
  def test_webtool_graphs_p264; assert_in_epsilon(22374404.267387293, worksheet.webtool_graphs_p264, 0.002); end
  def test_webtool_graphs_q264; assert_in_epsilon(27338127.396487735, worksheet.webtool_graphs_q264, 0.002); end
  def test_webtool_graphs_r264; assert_in_epsilon(32891319.653436534, worksheet.webtool_graphs_r264, 0.002); end
  def test_webtool_graphs_s264; assert_in_epsilon(38921249.884079024, worksheet.webtool_graphs_s264, 0.002); end
  def test_webtool_graphs_t264; assert_in_epsilon(45559579.35437053, worksheet.webtool_graphs_t264, 0.002); end
  def test_webtool_graphs_c265; assert_equal("ICEs", worksheet.webtool_graphs_c265); end
  def test_webtool_graphs_l265; assert_in_epsilon(846950046.366128, worksheet.webtool_graphs_l265, 0.002); end
  def test_webtool_graphs_m265; assert_in_epsilon(973654304.0142782, worksheet.webtool_graphs_m265, 0.002); end
  def test_webtool_graphs_n265; assert_in_epsilon(1138796190.1142955, worksheet.webtool_graphs_n265, 0.002); end
  def test_webtool_graphs_o265; assert_in_epsilon(1297827624.6885583, worksheet.webtool_graphs_o265, 0.002); end
  def test_webtool_graphs_p265; assert_in_epsilon(1462517912.7306416, worksheet.webtool_graphs_p265, 0.002); end
  def test_webtool_graphs_q265; assert_in_epsilon(1626538255.7726781, worksheet.webtool_graphs_q265, 0.002); end
  def test_webtool_graphs_r265; assert_in_epsilon(1792813298.6130207, worksheet.webtool_graphs_r265, 0.002); end
  def test_webtool_graphs_s265; assert_in_epsilon(1954701037.8690765, worksheet.webtool_graphs_s265, 0.002); end
  def test_webtool_graphs_t265; assert_in_epsilon(2118520439.978229, worksheet.webtool_graphs_t265, 0.002); end
  def test_webtool_graphs_c266; assert_equal("PHs", worksheet.webtool_graphs_c266); end
  def test_webtool_graphs_l266; assert_in_epsilon(24.055719645422165, worksheet.webtool_graphs_l266, 0.002); end
  def test_webtool_graphs_m266; assert_in_epsilon(10032535.572641613, worksheet.webtool_graphs_m266, 0.002); end
  def test_webtool_graphs_n266; assert_in_epsilon(18491031.77899162, worksheet.webtool_graphs_n266, 0.002); end
  def test_webtool_graphs_o266; assert_in_epsilon(28889951.536430378, worksheet.webtool_graphs_o266, 0.002); end
  def test_webtool_graphs_p266; assert_in_epsilon(41496685.89053691, worksheet.webtool_graphs_p266, 0.002); end
  def test_webtool_graphs_q266; assert_in_epsilon(56243693.02401124, worksheet.webtool_graphs_q266, 0.002); end
  def test_webtool_graphs_r266; assert_in_epsilon(73285978.35987192, worksheet.webtool_graphs_r266, 0.002); end
  def test_webtool_graphs_s266; assert_in_epsilon(92402097.16546792, worksheet.webtool_graphs_s266, 0.002); end
  def test_webtool_graphs_t266; assert_in_epsilon(113898948.3859263, worksheet.webtool_graphs_t266, 0.002); end
  def test_webtool_graphs_c267; assert_equal("Total cars", worksheet.webtool_graphs_c267); end
  def test_webtool_graphs_l267; assert_in_epsilon(848793933.1757805, worksheet.webtool_graphs_l267, 0.002); end
  def test_webtool_graphs_m267; assert_in_epsilon(994392983.5226053, worksheet.webtool_graphs_m267, 0.002); end
  def test_webtool_graphs_n267; assert_in_epsilon(1171392323.4256785, worksheet.webtool_graphs_n267, 0.002); end
  def test_webtool_graphs_o267; assert_in_epsilon(1344658456.4518464, worksheet.webtool_graphs_o267, 0.002); end
  def test_webtool_graphs_p267; assert_in_epsilon(1526389002.888566, worksheet.webtool_graphs_p267, 0.002); end
  def test_webtool_graphs_q267; assert_in_epsilon(1710120076.193177, worksheet.webtool_graphs_q267, 0.002); end
  def test_webtool_graphs_r267; assert_in_epsilon(1898990596.626329, worksheet.webtool_graphs_r267, 0.002); end
  def test_webtool_graphs_s267; assert_in_epsilon(2086024384.9186234, worksheet.webtool_graphs_s267, 0.002); end
  def test_webtool_graphs_t267; assert_in_epsilon(2277978967.718526, worksheet.webtool_graphs_t267, 0.002); end
  def test_webtool_graphs_b300; assert_equal("Type of city", worksheet.webtool_graphs_b300); end
  def test_webtool_graphs_c300; assert_equal("Notes", worksheet.webtool_graphs_c300); end
  def test_webtool_graphs_d300; assert_equal("1975", worksheet.webtool_graphs_d300); end
  def test_webtool_graphs_e300; assert_equal("1980", worksheet.webtool_graphs_e300); end
  def test_webtool_graphs_f300; assert_equal("1985", worksheet.webtool_graphs_f300); end
  def test_webtool_graphs_g300; assert_equal("1990", worksheet.webtool_graphs_g300); end
  def test_webtool_graphs_h300; assert_equal("1995", worksheet.webtool_graphs_h300); end
  def test_webtool_graphs_i300; assert_equal("2000", worksheet.webtool_graphs_i300); end
  def test_webtool_graphs_j300; assert_equal("2005", worksheet.webtool_graphs_j300); end
  def test_webtool_graphs_k300; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k300, 0.002); end
  def test_webtool_graphs_l300; assert_equal("2011", worksheet.webtool_graphs_l300); end
  def test_webtool_graphs_m300; assert_equal("2015", worksheet.webtool_graphs_m300); end
  def test_webtool_graphs_n300; assert_equal("2020", worksheet.webtool_graphs_n300); end
  def test_webtool_graphs_o300; assert_equal("2025", worksheet.webtool_graphs_o300); end
  def test_webtool_graphs_p300; assert_equal("2030", worksheet.webtool_graphs_p300); end
  def test_webtool_graphs_q300; assert_equal("2035", worksheet.webtool_graphs_q300); end
  def test_webtool_graphs_r300; assert_equal("2040", worksheet.webtool_graphs_r300); end
  def test_webtool_graphs_s300; assert_equal("2045", worksheet.webtool_graphs_s300); end
  def test_webtool_graphs_t300; assert_equal("2050", worksheet.webtool_graphs_t300); end
  def test_webtool_graphs_b301; assert_equal("Passenger", worksheet.webtool_graphs_b301); end
  def test_webtool_graphs_c301; assert_equal("Light road", worksheet.webtool_graphs_c301); end
  def test_webtool_graphs_j301; assert_equal("", worksheet.webtool_graphs_j301); end
  def test_webtool_graphs_l301; assert_in_epsilon(43.16580477080003, worksheet.webtool_graphs_l301, 0.002); end
  def test_webtool_graphs_m301; assert_in_epsilon(46.1655394086679, worksheet.webtool_graphs_m301, 0.002); end
  def test_webtool_graphs_n301; assert_in_epsilon(50.60999448022709, worksheet.webtool_graphs_n301, 0.002); end
  def test_webtool_graphs_o301; assert_in_epsilon(53.47503234911026, worksheet.webtool_graphs_o301, 0.002); end
  def test_webtool_graphs_p301; assert_in_epsilon(56.21436252111022, worksheet.webtool_graphs_p301, 0.002); end
  def test_webtool_graphs_q301; assert_in_epsilon(59.12185111158099, worksheet.webtool_graphs_q301, 0.002); end
  def test_webtool_graphs_r301; assert_in_epsilon(62.565728936997544, worksheet.webtool_graphs_r301, 0.002); end
  def test_webtool_graphs_s301; assert_in_epsilon(65.87961321914902, worksheet.webtool_graphs_s301, 0.002); end
  def test_webtool_graphs_t301; assert_in_epsilon(69.38853672338773, worksheet.webtool_graphs_t301, 0.002); end
  def test_webtool_graphs_b302; assert_equal("Passenger", worksheet.webtool_graphs_b302); end
  def test_webtool_graphs_c302; assert_equal("Heavy road", worksheet.webtool_graphs_c302); end
  def test_webtool_graphs_l302; assert_in_epsilon(4.7790467678844175, worksheet.webtool_graphs_l302, 0.002); end
  def test_webtool_graphs_m302; assert_in_epsilon(5.116073090005208, worksheet.webtool_graphs_m302, 0.002); end
  def test_webtool_graphs_n302; assert_in_epsilon(5.6910151507505375, worksheet.webtool_graphs_n302, 0.002); end
  def test_webtool_graphs_o302; assert_in_epsilon(6.009243462376842, worksheet.webtool_graphs_o302, 0.002); end
  def test_webtool_graphs_p302; assert_in_epsilon(6.264495441283331, worksheet.webtool_graphs_p302, 0.002); end
  def test_webtool_graphs_q302; assert_in_epsilon(6.480381728835587, worksheet.webtool_graphs_q302, 0.002); end
  def test_webtool_graphs_r302; assert_in_epsilon(6.718770275483231, worksheet.webtool_graphs_r302, 0.002); end
  def test_webtool_graphs_s302; assert_in_epsilon(6.922565341432749, worksheet.webtool_graphs_s302, 0.002); end
  def test_webtool_graphs_t302; assert_in_epsilon(7.1185300438775485, worksheet.webtool_graphs_t302, 0.002); end
  def test_webtool_graphs_b303; assert_equal("Passenger", worksheet.webtool_graphs_b303); end
  def test_webtool_graphs_c303; assert_equal("Rail", worksheet.webtool_graphs_c303); end
  def test_webtool_graphs_l303; assert_in_delta(0.7509191366126841, worksheet.webtool_graphs_l303, 0.002); end
  def test_webtool_graphs_m303; assert_in_delta(0.7962808121738449, worksheet.webtool_graphs_m303, 0.002); end
  def test_webtool_graphs_n303; assert_in_delta(0.860202717304894, worksheet.webtool_graphs_n303, 0.002); end
  def test_webtool_graphs_o303; assert_in_delta(0.9019069160171596, worksheet.webtool_graphs_o303, 0.002); end
  def test_webtool_graphs_p303; assert_in_delta(0.9384404029290897, worksheet.webtool_graphs_p303, 0.002); end
  def test_webtool_graphs_q303; assert_in_delta(0.975095776138968, worksheet.webtool_graphs_q303, 0.002); end
  def test_webtool_graphs_r303; assert_in_epsilon(1.0130549625996137, worksheet.webtool_graphs_r303, 0.002); end
  def test_webtool_graphs_s303; assert_in_epsilon(1.0437902212794794, worksheet.webtool_graphs_s303, 0.002); end
  def test_webtool_graphs_t303; assert_in_epsilon(1.0759475352226329, worksheet.webtool_graphs_t303, 0.002); end
  def test_webtool_graphs_b304; assert_equal("Passenger", worksheet.webtool_graphs_b304); end
  def test_webtool_graphs_c304; assert_equal("Plane", worksheet.webtool_graphs_c304); end
  def test_webtool_graphs_l304; assert_in_epsilon(11.200783672219371, worksheet.webtool_graphs_l304, 0.002); end
  def test_webtool_graphs_m304; assert_in_epsilon(11.800577234949882, worksheet.webtool_graphs_m304, 0.002); end
  def test_webtool_graphs_n304; assert_in_epsilon(12.067176721836331, worksheet.webtool_graphs_n304, 0.002); end
  def test_webtool_graphs_o304; assert_in_epsilon(12.199772354479945, worksheet.webtool_graphs_o304, 0.002); end
  def test_webtool_graphs_p304; assert_in_epsilon(12.391614033581842, worksheet.webtool_graphs_p304, 0.002); end
  def test_webtool_graphs_q304; assert_in_epsilon(12.76014862584421, worksheet.webtool_graphs_q304, 0.002); end
  def test_webtool_graphs_r304; assert_in_epsilon(13.340754552781153, worksheet.webtool_graphs_r304, 0.002); end
  def test_webtool_graphs_s304; assert_in_epsilon(14.035828347204971, worksheet.webtool_graphs_s304, 0.002); end
  def test_webtool_graphs_t304; assert_in_epsilon(14.862664292632665, worksheet.webtool_graphs_t304, 0.002); end
  def test_webtool_graphs_b305; assert_equal("Passenger", worksheet.webtool_graphs_b305); end
  def test_webtool_graphs_c305; assert_equal("Ship", worksheet.webtool_graphs_c305); end
  def test_webtool_graphs_l305; assert_in_delta(0.0, (worksheet.webtool_graphs_l305||0), 0.002); end
  def test_webtool_graphs_m305; assert_in_delta(0.0, (worksheet.webtool_graphs_m305||0), 0.002); end
  def test_webtool_graphs_n305; assert_in_delta(0.0, (worksheet.webtool_graphs_n305||0), 0.002); end
  def test_webtool_graphs_o305; assert_in_delta(0.0, (worksheet.webtool_graphs_o305||0), 0.002); end
  def test_webtool_graphs_p305; assert_in_delta(0.0, (worksheet.webtool_graphs_p305||0), 0.002); end
  def test_webtool_graphs_q305; assert_in_delta(0.0, (worksheet.webtool_graphs_q305||0), 0.002); end
  def test_webtool_graphs_r305; assert_in_delta(0.0, (worksheet.webtool_graphs_r305||0), 0.002); end
  def test_webtool_graphs_s305; assert_in_delta(0.0, (worksheet.webtool_graphs_s305||0), 0.002); end
  def test_webtool_graphs_t305; assert_in_delta(0.0, (worksheet.webtool_graphs_t305||0), 0.002); end
  def test_webtool_graphs_b306; assert_equal("Freight", worksheet.webtool_graphs_b306); end
  def test_webtool_graphs_c306; assert_equal("Light road", worksheet.webtool_graphs_c306); end
  def test_webtool_graphs_l306; assert_in_epsilon(8.268555700992671, worksheet.webtool_graphs_l306, 0.002); end
  def test_webtool_graphs_m306; assert_in_epsilon(9.570799926109524, worksheet.webtool_graphs_m306, 0.002); end
  def test_webtool_graphs_n306; assert_in_epsilon(11.803109884868242, worksheet.webtool_graphs_n306, 0.002); end
  def test_webtool_graphs_o306; assert_in_epsilon(13.695084047872102, worksheet.webtool_graphs_o306, 0.002); end
  def test_webtool_graphs_p306; assert_in_epsilon(14.938980998634946, worksheet.webtool_graphs_p306, 0.002); end
  def test_webtool_graphs_q306; assert_in_epsilon(15.694803202354256, worksheet.webtool_graphs_q306, 0.002); end
  def test_webtool_graphs_r306; assert_in_epsilon(16.074793275930375, worksheet.webtool_graphs_r306, 0.002); end
  def test_webtool_graphs_s306; assert_in_epsilon(16.16916447244142, worksheet.webtool_graphs_s306, 0.002); end
  def test_webtool_graphs_t306; assert_in_epsilon(16.17254401510443, worksheet.webtool_graphs_t306, 0.002); end
  def test_webtool_graphs_b307; assert_equal("Freight", worksheet.webtool_graphs_b307); end
  def test_webtool_graphs_c307; assert_equal("Heavy road", worksheet.webtool_graphs_c307); end
  def test_webtool_graphs_l307; assert_in_epsilon(20.117802797248675, worksheet.webtool_graphs_l307, 0.002); end
  def test_webtool_graphs_m307; assert_in_epsilon(23.24824412764745, worksheet.webtool_graphs_m307, 0.002); end
  def test_webtool_graphs_n307; assert_in_epsilon(28.3457721363821, worksheet.webtool_graphs_n307, 0.002); end
  def test_webtool_graphs_o307; assert_in_epsilon(32.53269947614873, worksheet.webtool_graphs_o307, 0.002); end
  def test_webtool_graphs_p307; assert_in_epsilon(35.47974183815664, worksheet.webtool_graphs_p307, 0.002); end
  def test_webtool_graphs_q307; assert_in_epsilon(36.89843177420304, worksheet.webtool_graphs_q307, 0.002); end
  def test_webtool_graphs_r307; assert_in_epsilon(37.42558204393258, worksheet.webtool_graphs_r307, 0.002); end
  def test_webtool_graphs_s307; assert_in_epsilon(37.34551015294056, worksheet.webtool_graphs_s307, 0.002); end
  def test_webtool_graphs_t307; assert_in_epsilon(37.019068639666024, worksheet.webtool_graphs_t307, 0.002); end
  def test_webtool_graphs_b308; assert_equal("Freight", worksheet.webtool_graphs_b308); end
  def test_webtool_graphs_c308; assert_equal("Rail", worksheet.webtool_graphs_c308); end
  def test_webtool_graphs_l308; assert_in_epsilon(1.8915190729369553, worksheet.webtool_graphs_l308, 0.002); end
  def test_webtool_graphs_m308; assert_in_epsilon(2.106139742527313, worksheet.webtool_graphs_m308, 0.002); end
  def test_webtool_graphs_n308; assert_in_epsilon(2.550392900549433, worksheet.webtool_graphs_n308, 0.002); end
  def test_webtool_graphs_o308; assert_in_epsilon(2.9077900162868366, worksheet.webtool_graphs_o308, 0.002); end
  def test_webtool_graphs_p308; assert_in_epsilon(3.1277988954001943, worksheet.webtool_graphs_p308, 0.002); end
  def test_webtool_graphs_q308; assert_in_epsilon(3.233180111017533, worksheet.webtool_graphs_q308, 0.002); end
  def test_webtool_graphs_r308; assert_in_epsilon(3.2601388640608984, worksheet.webtool_graphs_r308, 0.002); end
  def test_webtool_graphs_s308; assert_in_epsilon(3.2315218822743725, worksheet.webtool_graphs_s308, 0.002); end
  def test_webtool_graphs_t308; assert_in_epsilon(3.1857927282718523, worksheet.webtool_graphs_t308, 0.002); end
  def test_webtool_graphs_b309; assert_equal("Freight", worksheet.webtool_graphs_b309); end
  def test_webtool_graphs_c309; assert_equal("Plane", worksheet.webtool_graphs_c309); end
  def test_webtool_graphs_l309; assert_in_delta(0.6868555598518657, worksheet.webtool_graphs_l309, 0.002); end
  def test_webtool_graphs_m309; assert_in_delta(0.8157262544359397, worksheet.webtool_graphs_m309, 0.002); end
  def test_webtool_graphs_n309; assert_in_delta(0.9960031715780724, worksheet.webtool_graphs_n309, 0.002); end
  def test_webtool_graphs_o309; assert_in_epsilon(1.1448753443706428, worksheet.webtool_graphs_o309, 0.002); end
  def test_webtool_graphs_p309; assert_in_epsilon(1.2841901203590942, worksheet.webtool_graphs_p309, 0.002); end
  def test_webtool_graphs_q309; assert_in_epsilon(1.338084624261211, worksheet.webtool_graphs_q309, 0.002); end
  def test_webtool_graphs_r309; assert_in_epsilon(1.3599010882067633, worksheet.webtool_graphs_r309, 0.002); end
  def test_webtool_graphs_s309; assert_in_epsilon(1.3647641969298185, worksheet.webtool_graphs_s309, 0.002); end
  def test_webtool_graphs_t309; assert_in_epsilon(1.3558319642167536, worksheet.webtool_graphs_t309, 0.002); end
  def test_webtool_graphs_b310; assert_equal("Freight", worksheet.webtool_graphs_b310); end
  def test_webtool_graphs_c310; assert_equal("Ship", worksheet.webtool_graphs_c310); end
  def test_webtool_graphs_l310; assert_in_epsilon(9.498632856887696, worksheet.webtool_graphs_l310, 0.002); end
  def test_webtool_graphs_m310; assert_in_epsilon(11.016341109448472, worksheet.webtool_graphs_m310, 0.002); end
  def test_webtool_graphs_n310; assert_in_epsilon(13.465574663415595, worksheet.webtool_graphs_n310, 0.002); end
  def test_webtool_graphs_o310; assert_in_epsilon(15.498165193520148, worksheet.webtool_graphs_o310, 0.002); end
  def test_webtool_graphs_p310; assert_in_epsilon(17.38820351699711, worksheet.webtool_graphs_p310, 0.002); end
  def test_webtool_graphs_q310; assert_in_epsilon(18.149199002711395, worksheet.webtool_graphs_q310, 0.002); end
  def test_webtool_graphs_r310; assert_in_epsilon(18.480316945731655, worksheet.webtool_graphs_r310, 0.002); end
  def test_webtool_graphs_s310; assert_in_epsilon(18.58247399650571, worksheet.webtool_graphs_s310, 0.002); end
  def test_webtool_graphs_t310; assert_in_epsilon(18.50275237789595, worksheet.webtool_graphs_t310, 0.002); end
  def test_webtool_graphs_c311; assert_equal("TOTAL", worksheet.webtool_graphs_c311); end
  def test_webtool_graphs_l311; assert_in_epsilon(100.35992033543437, worksheet.webtool_graphs_l311, 0.002); end
  def test_webtool_graphs_m311; assert_in_epsilon(110.63572170596555, worksheet.webtool_graphs_m311, 0.002); end
  def test_webtool_graphs_n311; assert_in_epsilon(126.38924182691228, worksheet.webtool_graphs_n311, 0.002); end
  def test_webtool_graphs_o311; assert_in_epsilon(138.36456916018267, worksheet.webtool_graphs_o311, 0.002); end
  def test_webtool_graphs_p311; assert_in_epsilon(148.02782776845248, worksheet.webtool_graphs_p311, 0.002); end
  def test_webtool_graphs_q311; assert_in_epsilon(154.65117595694716, worksheet.webtool_graphs_q311, 0.002); end
  def test_webtool_graphs_r311; assert_in_epsilon(160.23904094572381, worksheet.webtool_graphs_r311, 0.002); end
  def test_webtool_graphs_s311; assert_in_epsilon(164.57523183015812, worksheet.webtool_graphs_s311, 0.002); end
  def test_webtool_graphs_t311; assert_in_epsilon(168.6816683202756, worksheet.webtool_graphs_t311, 0.002); end
  def test_webtool_graphs_b320; assert_equal("Energy description", worksheet.webtool_graphs_b320); end
  def test_webtool_graphs_c320; assert_equal(".", worksheet.webtool_graphs_c320); end
  def test_webtool_graphs_d320; assert_equal("1975", worksheet.webtool_graphs_d320); end
  def test_webtool_graphs_e320; assert_equal("1980", worksheet.webtool_graphs_e320); end
  def test_webtool_graphs_f320; assert_equal("1985", worksheet.webtool_graphs_f320); end
  def test_webtool_graphs_g320; assert_equal("1990", worksheet.webtool_graphs_g320); end
  def test_webtool_graphs_h320; assert_equal("1995", worksheet.webtool_graphs_h320); end
  def test_webtool_graphs_i320; assert_equal("2000", worksheet.webtool_graphs_i320); end
  def test_webtool_graphs_j320; assert_equal("2005", worksheet.webtool_graphs_j320); end
  def test_webtool_graphs_k320; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k320, 0.002); end
  def test_webtool_graphs_l320; assert_equal("2011", worksheet.webtool_graphs_l320); end
  def test_webtool_graphs_m320; assert_equal("2015", worksheet.webtool_graphs_m320); end
  def test_webtool_graphs_n320; assert_equal("2020", worksheet.webtool_graphs_n320); end
  def test_webtool_graphs_o320; assert_equal("2025", worksheet.webtool_graphs_o320); end
  def test_webtool_graphs_p320; assert_equal("2030", worksheet.webtool_graphs_p320); end
  def test_webtool_graphs_q320; assert_equal("2035", worksheet.webtool_graphs_q320); end
  def test_webtool_graphs_r320; assert_equal("2040", worksheet.webtool_graphs_r320); end
  def test_webtool_graphs_s320; assert_equal("2045", worksheet.webtool_graphs_s320); end
  def test_webtool_graphs_t320; assert_equal("2050", worksheet.webtool_graphs_t320); end
  def test_webtool_graphs_b321; assert_equal("Global Liquid hydrocarbons", worksheet.webtool_graphs_b321); end
  def test_webtool_graphs_j321; assert_equal("", worksheet.webtool_graphs_j321); end
  def test_webtool_graphs_l321; assert_in_epsilon(98.39054841752518, worksheet.webtool_graphs_l321, 0.002); end
  def test_webtool_graphs_m321; assert_in_epsilon(107.23759468001926, worksheet.webtool_graphs_m321, 0.002); end
  def test_webtool_graphs_n321; assert_in_epsilon(121.78234591790738, worksheet.webtool_graphs_n321, 0.002); end
  def test_webtool_graphs_o321; assert_in_epsilon(132.51591420991218, worksheet.webtool_graphs_o321, 0.002); end
  def test_webtool_graphs_p321; assert_in_epsilon(140.97085375715739, worksheet.webtool_graphs_p321, 0.002); end
  def test_webtool_graphs_q321; assert_in_epsilon(146.4398286888978, worksheet.webtool_graphs_q321, 0.002); end
  def test_webtool_graphs_r321; assert_in_epsilon(150.89962263018552, worksheet.webtool_graphs_r321, 0.002); end
  def test_webtool_graphs_s321; assert_in_epsilon(154.1529003198502, worksheet.webtool_graphs_s321, 0.002); end
  def test_webtool_graphs_t321; assert_in_epsilon(157.1611365110109, worksheet.webtool_graphs_t321, 0.002); end
  def test_webtool_graphs_b322; assert_equal("Global Electricity (delivered to end user)", worksheet.webtool_graphs_b322); end
  def test_webtool_graphs_l322; assert_in_epsilon(1.6221723137825572, worksheet.webtool_graphs_l322, 0.002); end
  def test_webtool_graphs_m322; assert_in_epsilon(2.44713112913332, worksheet.webtool_graphs_m322, 0.002); end
  def test_webtool_graphs_n322; assert_in_epsilon(3.222024724248463, worksheet.webtool_graphs_n322, 0.002); end
  def test_webtool_graphs_o322; assert_in_epsilon(3.9930561031885503, worksheet.webtool_graphs_o322, 0.002); end
  def test_webtool_graphs_p322; assert_in_epsilon(4.722069880751547, worksheet.webtool_graphs_p322, 0.002); end
  def test_webtool_graphs_q322; assert_in_epsilon(5.412240583663379, worksheet.webtool_graphs_q322, 0.002); end
  def test_webtool_graphs_r322; assert_in_epsilon(6.085485477323127, worksheet.webtool_graphs_r322, 0.002); end
  def test_webtool_graphs_s322; assert_in_epsilon(6.735366035048617, worksheet.webtool_graphs_s322, 0.002); end
  def test_webtool_graphs_t322; assert_in_epsilon(7.40303947024717, worksheet.webtool_graphs_t322, 0.002); end
  def test_webtool_graphs_b323; assert_equal("Global Gaseous hydrocarbons", worksheet.webtool_graphs_b323); end
  def test_webtool_graphs_l323; assert_in_delta(0.34719953575088347, worksheet.webtool_graphs_l323, 0.002); end
  def test_webtool_graphs_m323; assert_in_delta(0.800253954955591, worksheet.webtool_graphs_m323, 0.002); end
  def test_webtool_graphs_n323; assert_in_epsilon(1.2254590310670934, worksheet.webtool_graphs_n323, 0.002); end
  def test_webtool_graphs_o323; assert_in_epsilon(1.7013069950787496, worksheet.webtool_graphs_o323, 0.002); end
  def test_webtool_graphs_p323; assert_in_epsilon(2.2017729838059026, worksheet.webtool_graphs_p323, 0.002); end
  def test_webtool_graphs_q323; assert_in_epsilon(2.6948398274862457, worksheet.webtool_graphs_q323, 0.002); end
  def test_webtool_graphs_r323; assert_in_epsilon(3.182586863324238, worksheet.webtool_graphs_r323, 0.002); end
  def test_webtool_graphs_s323; assert_in_epsilon(3.6506160562313346, worksheet.webtool_graphs_s323, 0.002); end
  def test_webtool_graphs_t323; assert_in_epsilon(4.117492339017559, worksheet.webtool_graphs_t323, 0.002); end
  def test_webtool_graphs_b324; assert_equal("Global H2", worksheet.webtool_graphs_b324); end
  def test_webtool_graphs_l324; assert_in_delta(6.837572495941478e-08, worksheet.webtool_graphs_l324, 0.002); end
  def test_webtool_graphs_m324; assert_in_delta(0.15074194185736464, worksheet.webtool_graphs_m324, 0.002); end
  def test_webtool_graphs_n324; assert_in_delta(0.15941215368934422, worksheet.webtool_graphs_n324, 0.002); end
  def test_webtool_graphs_o324; assert_in_delta(0.15429185200316717, worksheet.webtool_graphs_o324, 0.002); end
  def test_webtool_graphs_p324; assert_in_delta(0.13313114673762763, worksheet.webtool_graphs_p324, 0.002); end
  def test_webtool_graphs_q324; assert_in_delta(0.1042668568997512, worksheet.webtool_graphs_q324, 0.002); end
  def test_webtool_graphs_r324; assert_in_delta(0.0713459748909307, worksheet.webtool_graphs_r324, 0.002); end
  def test_webtool_graphs_s324; assert_in_delta(0.036349419027900946, worksheet.webtool_graphs_s324, 0.002); end
  def test_webtool_graphs_t324; assert_in_delta(0.0, (worksheet.webtool_graphs_t324||0), 0.002); end
  def test_webtool_graphs_b325; assert_equal("TOTAL", worksheet.webtool_graphs_b325); end
  def test_webtool_graphs_l325; assert_in_epsilon(100.35992033543435, worksheet.webtool_graphs_l325, 0.002); end
  def test_webtool_graphs_m325; assert_in_epsilon(110.63572170596554, worksheet.webtool_graphs_m325, 0.002); end
  def test_webtool_graphs_n325; assert_in_epsilon(126.38924182691227, worksheet.webtool_graphs_n325, 0.002); end
  def test_webtool_graphs_o325; assert_in_epsilon(138.36456916018264, worksheet.webtool_graphs_o325, 0.002); end
  def test_webtool_graphs_p325; assert_in_epsilon(148.02782776845248, worksheet.webtool_graphs_p325, 0.002); end
  def test_webtool_graphs_q325; assert_in_epsilon(154.65117595694718, worksheet.webtool_graphs_q325, 0.002); end
  def test_webtool_graphs_r325; assert_in_epsilon(160.23904094572381, worksheet.webtool_graphs_r325, 0.002); end
  def test_webtool_graphs_s325; assert_in_epsilon(164.5752318301581, worksheet.webtool_graphs_s325, 0.002); end
  def test_webtool_graphs_t325; assert_in_epsilon(168.68166832027563, worksheet.webtool_graphs_t325, 0.002); end
  def test_webtool_graphs_b363; assert_equal("Description", worksheet.webtool_graphs_b363); end
  def test_webtool_graphs_c363; assert_equal(".", worksheet.webtool_graphs_c363); end
  def test_webtool_graphs_d363; assert_equal("1975", worksheet.webtool_graphs_d363); end
  def test_webtool_graphs_e363; assert_equal("1980", worksheet.webtool_graphs_e363); end
  def test_webtool_graphs_f363; assert_equal("1985", worksheet.webtool_graphs_f363); end
  def test_webtool_graphs_g363; assert_equal("1990", worksheet.webtool_graphs_g363); end
  def test_webtool_graphs_h363; assert_equal("1995", worksheet.webtool_graphs_h363); end
  def test_webtool_graphs_i363; assert_equal("2000", worksheet.webtool_graphs_i363); end
  def test_webtool_graphs_j363; assert_equal("2005", worksheet.webtool_graphs_j363); end
  def test_webtool_graphs_k363; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k363, 0.002); end
  def test_webtool_graphs_l363; assert_equal("2011", worksheet.webtool_graphs_l363); end
  def test_webtool_graphs_b364; assert_equal("Oil (crude & oil products)", worksheet.webtool_graphs_b364); end
  def test_webtool_graphs_l364; assert_in_epsilon(39.6, worksheet.webtool_graphs_l364, 0.002); end
  def test_webtool_graphs_b365; assert_equal("Coal", worksheet.webtool_graphs_b365); end
  def test_webtool_graphs_l365; assert_in_epsilon(11.0, worksheet.webtool_graphs_l365, 0.002); end
  def test_webtool_graphs_b366; assert_equal("Iron/steel", worksheet.webtool_graphs_b366); end
  def test_webtool_graphs_l366; assert_in_epsilon(13.0, worksheet.webtool_graphs_l366, 0.002); end
  def test_webtool_graphs_b367; assert_equal("Other", worksheet.webtool_graphs_b367); end
  def test_webtool_graphs_l367; assert_in_epsilon(36.7, worksheet.webtool_graphs_l367, 0.002); end
  def test_webtool_graphs_b368; assert_equal("TOTAL", worksheet.webtool_graphs_b368); end
  def test_webtool_graphs_l368; assert_in_epsilon(100.30000000000001, worksheet.webtool_graphs_l368, 0.002); end
  def test_webtool_graphs_b346; assert_equal("Description", worksheet.webtool_graphs_b346); end
  def test_webtool_graphs_c346; assert_equal(".", worksheet.webtool_graphs_c346); end
  def test_webtool_graphs_d346; assert_equal("1975", worksheet.webtool_graphs_d346); end
  def test_webtool_graphs_e346; assert_equal("1980", worksheet.webtool_graphs_e346); end
  def test_webtool_graphs_f346; assert_equal("1985", worksheet.webtool_graphs_f346); end
  def test_webtool_graphs_g346; assert_equal("1990", worksheet.webtool_graphs_g346); end
  def test_webtool_graphs_h346; assert_equal("1995", worksheet.webtool_graphs_h346); end
  def test_webtool_graphs_i346; assert_equal("2000", worksheet.webtool_graphs_i346); end
  def test_webtool_graphs_j346; assert_equal("2005", worksheet.webtool_graphs_j346); end
  def test_webtool_graphs_k346; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k346, 0.002); end
  def test_webtool_graphs_l346; assert_equal("2011", worksheet.webtool_graphs_l346); end
  def test_webtool_graphs_m346; assert_equal("2015", worksheet.webtool_graphs_m346); end
  def test_webtool_graphs_n346; assert_equal("2020", worksheet.webtool_graphs_n346); end
  def test_webtool_graphs_o346; assert_equal("2025", worksheet.webtool_graphs_o346); end
  def test_webtool_graphs_p346; assert_equal("2030", worksheet.webtool_graphs_p346); end
  def test_webtool_graphs_q346; assert_equal("2035", worksheet.webtool_graphs_q346); end
  def test_webtool_graphs_r346; assert_equal("2040", worksheet.webtool_graphs_r346); end
  def test_webtool_graphs_s346; assert_equal("2045", worksheet.webtool_graphs_s346); end
  def test_webtool_graphs_t346; assert_equal("2050", worksheet.webtool_graphs_t346); end
  def test_webtool_graphs_b347; assert_equal("International ship", worksheet.webtool_graphs_b347); end
  def test_webtool_graphs_l347; assert_in_delta(0.9473, worksheet.webtool_graphs_l347, 0.002); end
  def test_webtool_graphs_m347; assert_in_delta(0.9469520689529212, worksheet.webtool_graphs_m347, 0.002); end
  def test_webtool_graphs_n347; assert_in_delta(0.9470612884621349, worksheet.webtool_graphs_n347, 0.002); end
  def test_webtool_graphs_o347; assert_in_delta(0.9471705079713487, worksheet.webtool_graphs_o347, 0.002); end
  def test_webtool_graphs_p347; assert_in_delta(0.9472797274805626, worksheet.webtool_graphs_p347, 0.002); end
  def test_webtool_graphs_q347; assert_in_delta(0.9473889469897763, worksheet.webtool_graphs_q347, 0.002); end
  def test_webtool_graphs_r347; assert_in_delta(0.9474981664989903, worksheet.webtool_graphs_r347, 0.002); end
  def test_webtool_graphs_s347; assert_in_delta(0.9476073860082039, worksheet.webtool_graphs_s347, 0.002); end
  def test_webtool_graphs_t347; assert_in_delta(0.9477166055174179, worksheet.webtool_graphs_t347, 0.002); end
  def test_webtool_graphs_b354; assert_equal("Description", worksheet.webtool_graphs_b354); end
  def test_webtool_graphs_c354; assert_equal("Unit", worksheet.webtool_graphs_c354); end
  def test_webtool_graphs_d354; assert_equal("1975", worksheet.webtool_graphs_d354); end
  def test_webtool_graphs_e354; assert_equal("1980", worksheet.webtool_graphs_e354); end
  def test_webtool_graphs_f354; assert_equal("1985", worksheet.webtool_graphs_f354); end
  def test_webtool_graphs_g354; assert_equal("1990", worksheet.webtool_graphs_g354); end
  def test_webtool_graphs_h354; assert_equal("1995", worksheet.webtool_graphs_h354); end
  def test_webtool_graphs_i354; assert_equal("2000", worksheet.webtool_graphs_i354); end
  def test_webtool_graphs_j354; assert_equal("2005", worksheet.webtool_graphs_j354); end
  def test_webtool_graphs_k354; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k354, 0.002); end
  def test_webtool_graphs_l354; assert_equal("2011", worksheet.webtool_graphs_l354); end
  def test_webtool_graphs_m354; assert_equal("2015", worksheet.webtool_graphs_m354); end
  def test_webtool_graphs_n354; assert_equal("2020", worksheet.webtool_graphs_n354); end
  def test_webtool_graphs_o354; assert_equal("2025", worksheet.webtool_graphs_o354); end
  def test_webtool_graphs_p354; assert_equal("2030", worksheet.webtool_graphs_p354); end
  def test_webtool_graphs_q354; assert_equal("2035", worksheet.webtool_graphs_q354); end
  def test_webtool_graphs_r354; assert_equal("2040", worksheet.webtool_graphs_r354); end
  def test_webtool_graphs_s354; assert_equal("2045", worksheet.webtool_graphs_s354); end
  def test_webtool_graphs_t354; assert_equal("2050", worksheet.webtool_graphs_t354); end
  def test_webtool_graphs_b355; assert_equal("International ship", worksheet.webtool_graphs_b355); end
  def test_webtool_graphs_c355; assert_equal("Gt.km per year", worksheet.webtool_graphs_c355); end
  def test_webtool_graphs_l355; assert_in_epsilon(63203.61134501158, worksheet.webtool_graphs_l355, 0.002); end
  def test_webtool_graphs_m355; assert_in_epsilon(76868.61396324214, worksheet.webtool_graphs_m355, 0.002); end
  def test_webtool_graphs_n355; assert_in_epsilon(95803.32677830919, worksheet.webtool_graphs_n355, 0.002); end
  def test_webtool_graphs_o355; assert_in_epsilon(112429.67981810737, worksheet.webtool_graphs_o355, 0.002); end
  def test_webtool_graphs_p355; assert_in_epsilon(128777.56317796305, worksheet.webtool_graphs_p355, 0.002); end
  def test_webtool_graphs_q355; assert_in_epsilon(137045.7060466451, worksheet.webtool_graphs_q355, 0.002); end
  def test_webtool_graphs_r355; assert_in_epsilon(142278.98927463117, worksheet.webtool_graphs_r355, 0.002); end
  def test_webtool_graphs_s355; assert_in_epsilon(145888.52689471937, worksheet.webtool_graphs_s355, 0.002); end
  def test_webtool_graphs_t355; assert_in_epsilon(148107.0928022736, worksheet.webtool_graphs_t355, 0.002); end
  def test_webtool_graphs_b356; assert_equal("International ship: Index vs 2011 figure", worksheet.webtool_graphs_b356); end
  def test_webtool_graphs_l356; assert_in_delta(1.0, worksheet.webtool_graphs_l356, 0.002); end
  def test_webtool_graphs_m356; assert_in_epsilon(1.2162060415129916, worksheet.webtool_graphs_m356, 0.002); end
  def test_webtool_graphs_n356; assert_in_epsilon(1.51578880920814, worksheet.webtool_graphs_n356, 0.002); end
  def test_webtool_graphs_o356; assert_in_epsilon(1.7788489838718846, worksheet.webtool_graphs_o356, 0.002); end
  def test_webtool_graphs_p356; assert_in_epsilon(2.037503244474447, worksheet.webtool_graphs_p356, 0.002); end
  def test_webtool_graphs_q356; assert_in_epsilon(2.168320814748216, worksheet.webtool_graphs_q356, 0.002); end
  def test_webtool_graphs_r356; assert_in_epsilon(2.2511211977741, worksheet.webtool_graphs_r356, 0.002); end
  def test_webtool_graphs_s356; assert_in_epsilon(2.308230871466394, worksheet.webtool_graphs_s356, 0.002); end
  def test_webtool_graphs_t356; assert_in_epsilon(2.343332756633109, worksheet.webtool_graphs_t356, 0.002); end
  def test_webtool_graphs_b784; assert_equal("Description", worksheet.webtool_graphs_b784); end
  def test_webtool_graphs_c784; assert_equal("Column1", worksheet.webtool_graphs_c784); end
  def test_webtool_graphs_d784; assert_equal("1975", worksheet.webtool_graphs_d784); end
  def test_webtool_graphs_e784; assert_equal("1980", worksheet.webtool_graphs_e784); end
  def test_webtool_graphs_f784; assert_equal("1985", worksheet.webtool_graphs_f784); end
  def test_webtool_graphs_g784; assert_equal("1990", worksheet.webtool_graphs_g784); end
  def test_webtool_graphs_h784; assert_equal("1995", worksheet.webtool_graphs_h784); end
  def test_webtool_graphs_i784; assert_equal("2000", worksheet.webtool_graphs_i784); end
  def test_webtool_graphs_j784; assert_equal("2005", worksheet.webtool_graphs_j784); end
  def test_webtool_graphs_k784; assert_equal("2010", worksheet.webtool_graphs_k784); end
  def test_webtool_graphs_l784; assert_equal("2011", worksheet.webtool_graphs_l784); end
  def test_webtool_graphs_m784; assert_equal("2015", worksheet.webtool_graphs_m784); end
  def test_webtool_graphs_n784; assert_equal("2020", worksheet.webtool_graphs_n784); end
  def test_webtool_graphs_o784; assert_equal("2025", worksheet.webtool_graphs_o784); end
  def test_webtool_graphs_p784; assert_equal("2030", worksheet.webtool_graphs_p784); end
  def test_webtool_graphs_q784; assert_equal("2035", worksheet.webtool_graphs_q784); end
  def test_webtool_graphs_r784; assert_equal("2040", worksheet.webtool_graphs_r784); end
  def test_webtool_graphs_s784; assert_equal("2045", worksheet.webtool_graphs_s784); end
  def test_webtool_graphs_t784; assert_equal("2050", worksheet.webtool_graphs_t784); end
  def test_webtool_graphs_b785; assert_equal("Historic data", worksheet.webtool_graphs_b785); end
  def test_webtool_graphs_l785; assert_in_epsilon(1277.1170839854813, worksheet.webtool_graphs_l785, 0.002); end
  def test_webtool_graphs_b786; assert_equal("Cows and other bovines ", worksheet.webtool_graphs_b786); end
  def test_webtool_graphs_l786; assert_in_delta(0.6347500417422869, worksheet.webtool_graphs_l786, 0.002); end
  def test_webtool_graphs_m786; assert_in_delta(0.6605208934370237, worksheet.webtool_graphs_m786, 0.002); end
  def test_webtool_graphs_n786; assert_in_delta(0.7046321351133672, worksheet.webtool_graphs_n786, 0.002); end
  def test_webtool_graphs_o786; assert_in_delta(0.750948161628579, worksheet.webtool_graphs_o786, 0.002); end
  def test_webtool_graphs_p786; assert_in_delta(0.7994689729826588, worksheet.webtool_graphs_p786, 0.002); end
  def test_webtool_graphs_q786; assert_in_delta(0.8501945691756067, worksheet.webtool_graphs_q786, 0.002); end
  def test_webtool_graphs_r786; assert_in_delta(0.9031249502074227, worksheet.webtool_graphs_r786, 0.002); end
  def test_webtool_graphs_s786; assert_in_delta(0.9582601160781068, worksheet.webtool_graphs_s786, 0.002); end
  def test_webtool_graphs_t786; assert_in_epsilon(1.015600066787659, worksheet.webtool_graphs_t786, 0.002); end
  def test_webtool_graphs_b792; assert_equal("Description", worksheet.webtool_graphs_b792); end
  def test_webtool_graphs_c792; assert_equal("Column1", worksheet.webtool_graphs_c792); end
  def test_webtool_graphs_d792; assert_equal("1975", worksheet.webtool_graphs_d792); end
  def test_webtool_graphs_e792; assert_equal("1980", worksheet.webtool_graphs_e792); end
  def test_webtool_graphs_f792; assert_equal("1985", worksheet.webtool_graphs_f792); end
  def test_webtool_graphs_g792; assert_equal("1990", worksheet.webtool_graphs_g792); end
  def test_webtool_graphs_h792; assert_equal("1995", worksheet.webtool_graphs_h792); end
  def test_webtool_graphs_i792; assert_equal("2000", worksheet.webtool_graphs_i792); end
  def test_webtool_graphs_j792; assert_equal("2005", worksheet.webtool_graphs_j792); end
  def test_webtool_graphs_k792; assert_equal("2010", worksheet.webtool_graphs_k792); end
  def test_webtool_graphs_l792; assert_equal("2011", worksheet.webtool_graphs_l792); end
  def test_webtool_graphs_m792; assert_equal("2015", worksheet.webtool_graphs_m792); end
  def test_webtool_graphs_n792; assert_equal("2020", worksheet.webtool_graphs_n792); end
  def test_webtool_graphs_o792; assert_equal("2025", worksheet.webtool_graphs_o792); end
  def test_webtool_graphs_p792; assert_equal("2030", worksheet.webtool_graphs_p792); end
  def test_webtool_graphs_q792; assert_equal("2035", worksheet.webtool_graphs_q792); end
  def test_webtool_graphs_r792; assert_equal("2040", worksheet.webtool_graphs_r792); end
  def test_webtool_graphs_s792; assert_equal("2045", worksheet.webtool_graphs_s792); end
  def test_webtool_graphs_t792; assert_equal("2050", worksheet.webtool_graphs_t792); end
  def test_webtool_graphs_b793; assert_equal("Historic data", worksheet.webtool_graphs_b793); end
  def test_webtool_graphs_b794; assert_equal("Developed Countries", worksheet.webtool_graphs_b794); end
  def test_webtool_graphs_l794; assert_in_delta(0.124, worksheet.webtool_graphs_l794, 0.002); end
  def test_webtool_graphs_b795; assert_equal("Developing Countries", worksheet.webtool_graphs_b795); end
  def test_webtool_graphs_l795; assert_in_delta(0.006, worksheet.webtool_graphs_l795, 0.002); end
  def test_webtool_graphs_b796; assert_equal("Cows and other bovines ", worksheet.webtool_graphs_b796); end
  def test_webtool_graphs_l796; assert_in_delta(0.06, worksheet.webtool_graphs_l796, 0.002); end
  def test_webtool_graphs_m796; assert_in_delta(0.06, worksheet.webtool_graphs_m796, 0.002); end
  def test_webtool_graphs_n796; assert_in_delta(0.06, worksheet.webtool_graphs_n796, 0.002); end
  def test_webtool_graphs_o796; assert_in_delta(0.06, worksheet.webtool_graphs_o796, 0.002); end
  def test_webtool_graphs_p796; assert_in_delta(0.06, worksheet.webtool_graphs_p796, 0.002); end
  def test_webtool_graphs_q796; assert_in_delta(0.06, worksheet.webtool_graphs_q796, 0.002); end
  def test_webtool_graphs_r796; assert_in_delta(0.06, worksheet.webtool_graphs_r796, 0.002); end
  def test_webtool_graphs_s796; assert_in_delta(0.06, worksheet.webtool_graphs_s796, 0.002); end
  def test_webtool_graphs_t796; assert_in_delta(0.06, worksheet.webtool_graphs_t796, 0.002); end
  def test_webtool_graphs_b808; assert_equal("Description", worksheet.webtool_graphs_b808); end
  def test_webtool_graphs_c808; assert_equal("Column1", worksheet.webtool_graphs_c808); end
  def test_webtool_graphs_d808; assert_equal("1975", worksheet.webtool_graphs_d808); end
  def test_webtool_graphs_e808; assert_equal("1980", worksheet.webtool_graphs_e808); end
  def test_webtool_graphs_f808; assert_equal("1985", worksheet.webtool_graphs_f808); end
  def test_webtool_graphs_g808; assert_equal("1990", worksheet.webtool_graphs_g808); end
  def test_webtool_graphs_h808; assert_equal("1995", worksheet.webtool_graphs_h808); end
  def test_webtool_graphs_i808; assert_equal("2000", worksheet.webtool_graphs_i808); end
  def test_webtool_graphs_j808; assert_equal("2005", worksheet.webtool_graphs_j808); end
  def test_webtool_graphs_k808; assert_equal("2010", worksheet.webtool_graphs_k808); end
  def test_webtool_graphs_l808; assert_equal("2011", worksheet.webtool_graphs_l808); end
  def test_webtool_graphs_m808; assert_equal("2015", worksheet.webtool_graphs_m808); end
  def test_webtool_graphs_n808; assert_equal("2020", worksheet.webtool_graphs_n808); end
  def test_webtool_graphs_o808; assert_equal("2025", worksheet.webtool_graphs_o808); end
  def test_webtool_graphs_p808; assert_equal("2030", worksheet.webtool_graphs_p808); end
  def test_webtool_graphs_q808; assert_equal("2035", worksheet.webtool_graphs_q808); end
  def test_webtool_graphs_r808; assert_equal("2040", worksheet.webtool_graphs_r808); end
  def test_webtool_graphs_s808; assert_equal("2045", worksheet.webtool_graphs_s808); end
  def test_webtool_graphs_t808; assert_equal("2050", worksheet.webtool_graphs_t808); end
  def test_webtool_graphs_b809; assert_equal("Historic data", worksheet.webtool_graphs_b809); end
  def test_webtool_graphs_b810; assert_equal("Crop yields", worksheet.webtool_graphs_b810); end
  def test_webtool_graphs_l810; assert_in_delta(0.10041822124385165, worksheet.webtool_graphs_l810, 0.002); end
  def test_webtool_graphs_m810; assert_in_delta(0.10532575337972867, worksheet.webtool_graphs_m810, 0.002); end
  def test_webtool_graphs_n810; assert_in_delta(0.10864140621007173, worksheet.webtool_graphs_n810, 0.002); end
  def test_webtool_graphs_o810; assert_in_delta(0.11195705904041482, worksheet.webtool_graphs_o810, 0.002); end
  def test_webtool_graphs_p810; assert_in_delta(0.11527271187075785, worksheet.webtool_graphs_p810, 0.002); end
  def test_webtool_graphs_q810; assert_in_delta(0.1185883647011009, worksheet.webtool_graphs_q810, 0.002); end
  def test_webtool_graphs_r810; assert_in_delta(0.12190401753144398, worksheet.webtool_graphs_r810, 0.002); end
  def test_webtool_graphs_s810; assert_in_delta(0.12521967036178702, worksheet.webtool_graphs_s810, 0.002); end
  def test_webtool_graphs_t810; assert_in_delta(0.1285353231921301, worksheet.webtool_graphs_t810, 0.002); end
  def test_outputs_summary_table_d207; assert_equal("Unit", worksheet.outputs_summary_table_d207); end
  def test_outputs_summary_table_e207; assert_equal("2011", worksheet.outputs_summary_table_e207); end
  def test_outputs_summary_table_f207; assert_equal("2050", worksheet.outputs_summary_table_f207); end
  def test_outputs_summary_table_g207; assert_equal("% increase", worksheet.outputs_summary_table_g207); end
  def test_outputs_summary_table_c209; assert_equal("ICE gas&liquid fueled cars", worksheet.outputs_summary_table_c209); end
  def test_outputs_summary_table_d209; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d209); end
  def test_outputs_summary_table_e209; assert_equal("846,950,046", worksheet.outputs_summary_table_e209); end
  def test_outputs_summary_table_f209; assert_equal("2,118,520,440", worksheet.outputs_summary_table_f209); end
  def test_outputs_summary_table_g209; assert_equal("150%", worksheet.outputs_summary_table_g209); end
  def test_outputs_summary_table_c210; assert_equal("Hybrid cars", worksheet.outputs_summary_table_c210); end
  def test_outputs_summary_table_d210; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d210); end
  def test_outputs_summary_table_e210; assert_equal("24", worksheet.outputs_summary_table_e210); end
  def test_outputs_summary_table_f210; assert_equal("113,898,948", worksheet.outputs_summary_table_f210); end
  def test_outputs_summary_table_g210; assert_equal("473479597%", worksheet.outputs_summary_table_g210); end
  def test_outputs_summary_table_c211; assert_equal("Electric-powered cars", worksheet.outputs_summary_table_c211); end
  def test_outputs_summary_table_d211; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d211); end
  def test_outputs_summary_table_e211; assert_equal("1,843,863", worksheet.outputs_summary_table_e211); end
  def test_outputs_summary_table_f211; assert_equal("45,559,579", worksheet.outputs_summary_table_f211); end
  def test_outputs_summary_table_g211; assert_equal("2371%", worksheet.outputs_summary_table_g211); end
  def test_outputs_summary_table_c212; assert_equal("Hydrogen-powered cars", worksheet.outputs_summary_table_c212); end
  def test_outputs_summary_table_d212; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d212); end
  def test_outputs_summary_table_e212; assert_equal("0", worksheet.outputs_summary_table_e212); end
  def test_outputs_summary_table_f212; assert_equal("0", worksheet.outputs_summary_table_f212); end
  def test_outputs_summary_table_g212; assert_equal("", worksheet.outputs_summary_table_g212); end
  def test_outputs_summary_table_c5; assert_equal("Supertable", worksheet.outputs_summary_table_c5); end
  def test_outputs_summary_table_d5; assert_equal("webtool.supertable", worksheet.outputs_summary_table_d5); end
  def test_outputs_summary_table_e5; assert_equal("Formatted numbers", worksheet.outputs_summary_table_e5); end
  def test_outputs_summary_table_f6; assert_equal("User’s pathway", worksheet.outputs_summary_table_f6); end
  def test_outputs_summary_table_g6; assert_equal("% increase 2011 to 2050", worksheet.outputs_summary_table_g6); end
  def test_outputs_summary_table_c7; assert_equal("Name", worksheet.outputs_summary_table_c7); end
  def test_outputs_summary_table_d7; assert_equal("Unit", worksheet.outputs_summary_table_d7); end
  def test_outputs_summary_table_e7; assert_equal("2011", worksheet.outputs_summary_table_e7); end
  def test_outputs_summary_table_f7; assert_equal("2050", worksheet.outputs_summary_table_f7); end
  def test_outputs_summary_table_g7; assert_equal("% increase 2011 to 2050", worksheet.outputs_summary_table_g7); end
  def test_outputs_summary_table_b8; assert_equal("Emissions and temperature", worksheet.outputs_summary_table_b8); end
  def test_outputs_summary_table_c8; assert_equal("GHG emissions (t CO2e) per capita", worksheet.outputs_summary_table_c8); end
  def test_outputs_summary_table_d8; assert_equal("t CO2e / capita", worksheet.outputs_summary_table_d8); end
  def test_outputs_summary_table_e8; assert_equal("7.2", worksheet.outputs_summary_table_e8); end
  def test_outputs_summary_table_f8; assert_equal("9.1", worksheet.outputs_summary_table_f8); end
  def test_outputs_summary_table_g8; assert_equal("27%", worksheet.outputs_summary_table_g8); end
  def test_outputs_summary_table_c9; assert_equal("Cumulative emissions by 2100 (Gt CO2e)", worksheet.outputs_summary_table_c9); end
  def test_outputs_summary_table_d9; assert_equal("Gt CO2e", worksheet.outputs_summary_table_d9); end
  def test_outputs_summary_table_e9; assert_equal("7,726", worksheet.outputs_summary_table_e9); end
  def test_outputs_summary_table_c10; assert_equal("Temperature change in 2100 (⁰C)", worksheet.outputs_summary_table_c10); end
  def test_outputs_summary_table_d10; assert_equal("⁰C", worksheet.outputs_summary_table_d10); end
  def test_outputs_summary_table_e10; assert_equal("2.3⁰C to 6.6⁰C higher", worksheet.outputs_summary_table_e10); end
  def test_outputs_summary_table_b12; assert_equal("Demographics and long term", worksheet.outputs_summary_table_b12); end
  def test_outputs_summary_table_c12; assert_equal("Population (billions of people)", worksheet.outputs_summary_table_c12); end
  def test_outputs_summary_table_d12; assert_equal("billions of people", worksheet.outputs_summary_table_d12); end
  def test_outputs_summary_table_e12; assert_equal("7.0", worksheet.outputs_summary_table_e12); end
  def test_outputs_summary_table_f12; assert_equal("9.6", worksheet.outputs_summary_table_f12); end
  def test_outputs_summary_table_g12; assert_equal("37%", worksheet.outputs_summary_table_g12); end
  def test_outputs_summary_table_c13; assert_equal("% population in urban areas", worksheet.outputs_summary_table_c13); end
  def test_outputs_summary_table_d13; assert_equal("%", worksheet.outputs_summary_table_d13); end
  def test_outputs_summary_table_e13; assert_equal("52.1%", worksheet.outputs_summary_table_e13); end
  def test_outputs_summary_table_f13; assert_equal("66.4%", worksheet.outputs_summary_table_f13); end
  def test_outputs_summary_table_g13; assert_equal("27%", worksheet.outputs_summary_table_g13); end
  def test_outputs_summary_table_b15; assert_equal("Energy", worksheet.outputs_summary_table_b15); end
  def test_outputs_summary_table_c15; assert_equal("Total energy supply (EJ / year)", worksheet.outputs_summary_table_c15); end
  def test_outputs_summary_table_d15; assert_equal("EJ / year", worksheet.outputs_summary_table_d15); end
  def test_outputs_summary_table_e15; assert_equal("563", worksheet.outputs_summary_table_e15); end
  def test_outputs_summary_table_f15; assert_equal("934", worksheet.outputs_summary_table_f15); end
  def test_outputs_summary_table_g15; assert_equal("66%", worksheet.outputs_summary_table_g15); end
  def test_outputs_summary_table_c16; assert_equal("Total energy demand (EJ / year)", worksheet.outputs_summary_table_c16); end
  def test_outputs_summary_table_d16; assert_equal("EJ / year", worksheet.outputs_summary_table_d16); end
  def test_outputs_summary_table_e16; assert_equal("372", worksheet.outputs_summary_table_e16); end
  def test_outputs_summary_table_f16; assert_equal("628", worksheet.outputs_summary_table_f16); end
  def test_outputs_summary_table_g16; assert_equal("69%", worksheet.outputs_summary_table_g16); end
  def test_outputs_summary_table_c17; assert_equal("Energy demand (kWh / capita / year)", worksheet.outputs_summary_table_c17); end
  def test_outputs_summary_table_d17; assert_equal("kWh / capita / year", worksheet.outputs_summary_table_d17); end
  def test_outputs_summary_table_e17; assert_equal("14,849", worksheet.outputs_summary_table_e17); end
  def test_outputs_summary_table_f17; assert_equal("18,251", worksheet.outputs_summary_table_f17); end
  def test_outputs_summary_table_g17; assert_equal("23%", worksheet.outputs_summary_table_g17); end
  def test_outputs_summary_table_c18; assert_equal("Proportion of primary energy from fossil fuels ", worksheet.outputs_summary_table_c18); end
  def test_outputs_summary_table_d18; assert_equal("%", worksheet.outputs_summary_table_d18); end
  def test_outputs_summary_table_e18; assert_equal("81.6%", worksheet.outputs_summary_table_e18); end
  def test_outputs_summary_table_f18; assert_equal("81.5%", worksheet.outputs_summary_table_f18); end
  def test_outputs_summary_table_g18; assert_equal("0%", worksheet.outputs_summary_table_g18); end
  def test_outputs_summary_table_c19; assert_equal("Bioenergy supply (EJ / year)", worksheet.outputs_summary_table_c19); end
  def test_outputs_summary_table_d19; assert_equal("EJ / year", worksheet.outputs_summary_table_d19); end
  def test_outputs_summary_table_e19; assert_equal("53.5", worksheet.outputs_summary_table_e19); end
  def test_outputs_summary_table_f19; assert_equal("63.6", worksheet.outputs_summary_table_f19); end
  def test_outputs_summary_table_g19; assert_equal("19%", worksheet.outputs_summary_table_g19); end
  def test_outputs_summary_table_c20; assert_equal("% of oil reserves (as of 2011) left in the ground ", worksheet.outputs_summary_table_c20); end
  def test_outputs_summary_table_d20; assert_equal("% of 2011 reserves", worksheet.outputs_summary_table_d20); end
  def test_outputs_summary_table_e20; assert_equal("100%", worksheet.outputs_summary_table_e20); end
  def test_outputs_summary_table_f20; assert_equal("10% to 21%", worksheet.outputs_summary_table_f20); end
  def test_outputs_summary_table_c21; assert_equal("% of gas reserves (as of 2011) left in the ground ", worksheet.outputs_summary_table_c21); end
  def test_outputs_summary_table_d21; assert_equal("% of 2011 reserves", worksheet.outputs_summary_table_d21); end
  def test_outputs_summary_table_e21; assert_equal("100%", worksheet.outputs_summary_table_e21); end
  def test_outputs_summary_table_f21; assert_equal("31% to 33%", worksheet.outputs_summary_table_f21); end
  def test_outputs_summary_table_c22; assert_equal("% of coal reserves (as of 2011) left in the ground ", worksheet.outputs_summary_table_c22); end
  def test_outputs_summary_table_d22; assert_equal("% of 2011 reserves", worksheet.outputs_summary_table_d22); end
  def test_outputs_summary_table_e22; assert_equal("100%", worksheet.outputs_summary_table_e22); end
  def test_outputs_summary_table_f22; assert_equal("71% to 73%", worksheet.outputs_summary_table_f22); end
  def test_outputs_summary_table_b24; assert_equal("Electricity", worksheet.outputs_summary_table_b24); end
  def test_outputs_summary_table_c24; assert_equal("Electricity demand (kWh / capita /year)", worksheet.outputs_summary_table_c24); end
  def test_outputs_summary_table_d24; assert_equal("kWh / capita /year", worksheet.outputs_summary_table_d24); end
  def test_outputs_summary_table_e24; assert_equal("2,857", worksheet.outputs_summary_table_e24); end
  def test_outputs_summary_table_f24; assert_equal("4,421", worksheet.outputs_summary_table_f24); end
  def test_outputs_summary_table_g24; assert_equal("55%", worksheet.outputs_summary_table_g24); end
  def test_outputs_summary_table_c25; assert_equal("Wind capacity (GW)", worksheet.outputs_summary_table_c25); end
  def test_outputs_summary_table_d25; assert_equal("GW", worksheet.outputs_summary_table_d25); end
  def test_outputs_summary_table_e25; assert_equal("238", worksheet.outputs_summary_table_e25); end
  def test_outputs_summary_table_f25; assert_equal("1,159", worksheet.outputs_summary_table_f25); end
  def test_outputs_summary_table_g25; assert_equal("387%", worksheet.outputs_summary_table_g25); end
  def test_outputs_summary_table_c26; assert_equal("Solar capacity (GW)", worksheet.outputs_summary_table_c26); end
  def test_outputs_summary_table_d26; assert_equal("GW", worksheet.outputs_summary_table_d26); end
  def test_outputs_summary_table_e26; assert_equal("71", worksheet.outputs_summary_table_e26); end
  def test_outputs_summary_table_f26; assert_equal("441", worksheet.outputs_summary_table_f26); end
  def test_outputs_summary_table_g26; assert_equal("518%", worksheet.outputs_summary_table_g26); end
  def test_outputs_summary_table_c27; assert_equal("Nuclear capacity (GW)", worksheet.outputs_summary_table_c27); end
  def test_outputs_summary_table_d27; assert_equal("GW", worksheet.outputs_summary_table_d27); end
  def test_outputs_summary_table_e27; assert_equal("364", worksheet.outputs_summary_table_e27); end
  def test_outputs_summary_table_f27; assert_equal("480", worksheet.outputs_summary_table_f27); end
  def test_outputs_summary_table_g27; assert_equal("32%", worksheet.outputs_summary_table_g27); end
  def test_outputs_summary_table_c28; assert_equal("Hydro-electric capacity (GW)", worksheet.outputs_summary_table_c28); end
  def test_outputs_summary_table_d28; assert_equal("GW", worksheet.outputs_summary_table_d28); end
  def test_outputs_summary_table_e28; assert_equal("970", worksheet.outputs_summary_table_e28); end
  def test_outputs_summary_table_f28; assert_equal("1,694", worksheet.outputs_summary_table_f28); end
  def test_outputs_summary_table_g28; assert_equal("75%", worksheet.outputs_summary_table_g28); end
  def test_outputs_summary_table_c29; assert_equal("CCS for power (GW)", worksheet.outputs_summary_table_c29); end
  def test_outputs_summary_table_d29; assert_equal("GW", worksheet.outputs_summary_table_d29); end
  def test_outputs_summary_table_e29; assert_equal("0", worksheet.outputs_summary_table_e29); end
  def test_outputs_summary_table_f29; assert_equal("16", worksheet.outputs_summary_table_f29); end
  def test_outputs_summary_table_g29; assert_equal("", worksheet.outputs_summary_table_g29); end
  def test_outputs_summary_table_c30; assert_equal("Unabated fossil fuel capacity (GW)", worksheet.outputs_summary_table_c30); end
  def test_outputs_summary_table_d30; assert_equal("GW", worksheet.outputs_summary_table_d30); end
  def test_outputs_summary_table_e30; assert_equal("3,709", worksheet.outputs_summary_table_e30); end
  def test_outputs_summary_table_f30; assert_equal("13,138", worksheet.outputs_summary_table_f30); end
  def test_outputs_summary_table_g30; assert_equal("254%", worksheet.outputs_summary_table_g30); end
  def test_outputs_summary_table_c31; assert_equal("Storage capacity (GW)", worksheet.outputs_summary_table_c31); end
  def test_outputs_summary_table_d31; assert_equal("GW", worksheet.outputs_summary_table_d31); end
  def test_outputs_summary_table_e31; assert_equal("120", worksheet.outputs_summary_table_e31); end
  def test_outputs_summary_table_f31; assert_equal("278", worksheet.outputs_summary_table_f31); end
  def test_outputs_summary_table_g31; assert_equal("131%", worksheet.outputs_summary_table_g31); end
  def test_outputs_summary_table_c32; assert_equal("Efficiency of unabated fossil fuel power generation", worksheet.outputs_summary_table_c32); end
  def test_outputs_summary_table_d32; assert_equal("% efficiency", worksheet.outputs_summary_table_d32); end
  def test_outputs_summary_table_e32; assert_equal("39%", worksheet.outputs_summary_table_e32); end
  def test_outputs_summary_table_f32; assert_equal("44%", worksheet.outputs_summary_table_f32); end
  def test_outputs_summary_table_g32; assert_equal("12%", worksheet.outputs_summary_table_g32); end
  def test_outputs_summary_table_c33; assert_equal("Efficiency of CCS fossil fuel power generation", worksheet.outputs_summary_table_c33); end
  def test_outputs_summary_table_d33; assert_equal("% efficiency", worksheet.outputs_summary_table_d33); end
  def test_outputs_summary_table_e33; assert_equal("n / a", worksheet.outputs_summary_table_e33); end
  def test_outputs_summary_table_f33; assert_equal("46%", worksheet.outputs_summary_table_f33); end
  def test_outputs_summary_table_g33; assert_equal("", worksheet.outputs_summary_table_g33); end
  def test_outputs_summary_table_c34; assert_equal("Emissions intensity (global average g CO2e / kWh)", worksheet.outputs_summary_table_c34); end
  def test_outputs_summary_table_d34; assert_equal("g CO2e / kWh", worksheet.outputs_summary_table_d34); end
  def test_outputs_summary_table_e34; assert_equal("579", worksheet.outputs_summary_table_e34); end
  def test_outputs_summary_table_f34; assert_equal("434", worksheet.outputs_summary_table_f34); end
  def test_outputs_summary_table_g34; assert_equal("-25%", worksheet.outputs_summary_table_g34); end
  def test_outputs_summary_table_b37; assert_equal("Transport", worksheet.outputs_summary_table_b37); end
  def test_outputs_summary_table_c37; assert_equal("Number of passenger vehicles on the road (thousands)", worksheet.outputs_summary_table_c37); end
  def test_outputs_summary_table_d37; assert_equal("000's", worksheet.outputs_summary_table_d37); end
  def test_outputs_summary_table_e37; assert_equal("1,471,639", worksheet.outputs_summary_table_e37); end
  def test_outputs_summary_table_f37; assert_equal("3,712,039", worksheet.outputs_summary_table_f37); end
  def test_outputs_summary_table_g37; assert_equal("152%", worksheet.outputs_summary_table_g37); end
  def test_outputs_summary_table_c38; assert_equal("% urban cars that are zero emission (electric/hydrogen)", worksheet.outputs_summary_table_c38); end
  def test_outputs_summary_table_d38; assert_equal("% of urban cars", worksheet.outputs_summary_table_d38); end
  def test_outputs_summary_table_e38; assert_equal("0.2%", worksheet.outputs_summary_table_e38); end
  def test_outputs_summary_table_f38; assert_equal("2.0%", worksheet.outputs_summary_table_f38); end
  def test_outputs_summary_table_g38; assert_equal("821%", worksheet.outputs_summary_table_g38); end
  def test_outputs_summary_table_c39; assert_equal("Efficiency of average global car (litres gasoline equivalent per 100km)", worksheet.outputs_summary_table_c39); end
  def test_outputs_summary_table_d39; assert_equal("litres gasoline equivalent per 100km", worksheet.outputs_summary_table_d39); end
  def test_outputs_summary_table_e39; assert_equal("8.6", worksheet.outputs_summary_table_e39); end
  def test_outputs_summary_table_f39; assert_equal("5.5", worksheet.outputs_summary_table_f39); end
  def test_outputs_summary_table_g39; assert_equal("-36%", worksheet.outputs_summary_table_g39); end
  def test_outputs_summary_table_c40; assert_equal("Total domestic passenger km travelled each year per capita (including walking, cycles, motorcycles, cars and public transport, but not international/plane travel)", worksheet.outputs_summary_table_c40); end
  def test_outputs_summary_table_d40; assert_equal("Passenger km / capita / year", worksheet.outputs_summary_table_d40); end
  def test_outputs_summary_table_e40; assert_equal("7,495", worksheet.outputs_summary_table_e40); end
  def test_outputs_summary_table_f40; assert_equal("10,968", worksheet.outputs_summary_table_f40); end
  def test_outputs_summary_table_g40; assert_equal("46%", worksheet.outputs_summary_table_g40); end
  def test_outputs_summary_table_c41; assert_equal("Total passenger km travelled each year per capita (includes domestic, international and plane travel)", worksheet.outputs_summary_table_c41); end
  def test_outputs_summary_table_d41; assert_equal("Passenger km / capita / year", worksheet.outputs_summary_table_d41); end
  def test_outputs_summary_table_e41; assert_equal("8,262", worksheet.outputs_summary_table_e41); end
  def test_outputs_summary_table_f41; assert_equal("12,400", worksheet.outputs_summary_table_f41); end
  def test_outputs_summary_table_g41; assert_equal("50%", worksheet.outputs_summary_table_g41); end
  def test_outputs_summary_table_c42; assert_equal("% of passenger km travelled using cars (out of total domestic&international km travelled)", worksheet.outputs_summary_table_c42); end
  def test_outputs_summary_table_d42; assert_equal("% of global annual passenger km (both domestic&international)", worksheet.outputs_summary_table_d42); end
  def test_outputs_summary_table_e42; assert_equal("37.0%", worksheet.outputs_summary_table_e42); end
  def test_outputs_summary_table_f42; assert_equal("44.9%", worksheet.outputs_summary_table_f42); end
  def test_outputs_summary_table_g42; assert_equal("21%", worksheet.outputs_summary_table_g42); end
  def test_outputs_summary_table_c43; assert_equal("Distance travelled per person by air (global average)", worksheet.outputs_summary_table_c43); end
  def test_outputs_summary_table_d43; assert_equal("average km / capita / year", worksheet.outputs_summary_table_d43); end
  def test_outputs_summary_table_e43; assert_equal("766", worksheet.outputs_summary_table_e43); end
  def test_outputs_summary_table_f43; assert_equal("1,217", worksheet.outputs_summary_table_f43); end
  def test_outputs_summary_table_g43; assert_equal("59%", worksheet.outputs_summary_table_g43); end
  def test_outputs_summary_table_c44; assert_equal("Domestic freight (Tonne km / capita / year)", worksheet.outputs_summary_table_c44); end
  def test_outputs_summary_table_d44; assert_equal("Tonne km / capita / year", worksheet.outputs_summary_table_d44); end
  def test_outputs_summary_table_e44; assert_equal("2,647", worksheet.outputs_summary_table_e44); end
  def test_outputs_summary_table_f44; assert_equal("4,235", worksheet.outputs_summary_table_f44); end
  def test_outputs_summary_table_g44; assert_equal("60%", worksheet.outputs_summary_table_g44); end
  def test_outputs_summary_table_c45; assert_equal("International freight (Tonne km / capita / year)", worksheet.outputs_summary_table_c45); end
  def test_outputs_summary_table_d45; assert_equal("Tonne km / capita / year", worksheet.outputs_summary_table_d45); end
  def test_outputs_summary_table_e45; assert_equal("9,577", worksheet.outputs_summary_table_e45); end
  def test_outputs_summary_table_f45; assert_equal("16,363", worksheet.outputs_summary_table_f45); end
  def test_outputs_summary_table_g45; assert_equal("71%", worksheet.outputs_summary_table_g45); end
  def test_outputs_summary_table_c46; assert_equal("Proportion of international freight by air", worksheet.outputs_summary_table_c46); end
  def test_outputs_summary_table_d46; assert_equal("% of annual international freight tonne-km", worksheet.outputs_summary_table_d46); end
  def test_outputs_summary_table_e46; assert_equal("0.27%", worksheet.outputs_summary_table_e46); end
  def test_outputs_summary_table_f46; assert_equal("0.30%", worksheet.outputs_summary_table_f46); end
  def test_outputs_summary_table_g46; assert_equal("12%", worksheet.outputs_summary_table_g46); end
  def test_outputs_summary_table_b48; assert_equal("Buildings", worksheet.outputs_summary_table_b48); end
  def test_outputs_summary_table_c48; assert_equal("Number of appliances per household", worksheet.outputs_summary_table_c48); end
  def test_outputs_summary_table_d48; assert_equal("No. of appliances", worksheet.outputs_summary_table_d48); end
  def test_outputs_summary_table_e48; assert_equal("5.1", worksheet.outputs_summary_table_e48); end
  def test_outputs_summary_table_f48; assert_equal("10.1", worksheet.outputs_summary_table_f48); end
  def test_outputs_summary_table_g48; assert_equal("101%", worksheet.outputs_summary_table_g48); end
  def test_outputs_summary_table_c49; assert_equal("Number of washing machines in an average urban household", worksheet.outputs_summary_table_c49); end
  def test_outputs_summary_table_d49; assert_equal("products per urban household", worksheet.outputs_summary_table_d49); end
  def test_outputs_summary_table_e49; assert_equal("0.8", worksheet.outputs_summary_table_e49); end
  def test_outputs_summary_table_f49; assert_equal("1.0", worksheet.outputs_summary_table_f49); end
  def test_outputs_summary_table_g49; assert_equal("24%", worksheet.outputs_summary_table_g49); end
  def test_outputs_summary_table_c50; assert_equal("Refrigerator average power (W) in urban areas", worksheet.outputs_summary_table_c50); end
  def test_outputs_summary_table_d50; assert_equal("Average power (W)", worksheet.outputs_summary_table_d50); end
  def test_outputs_summary_table_e50; assert_equal("66", worksheet.outputs_summary_table_e50); end
  def test_outputs_summary_table_f50; assert_equal("54", worksheet.outputs_summary_table_f50); end
  def test_outputs_summary_table_g50; assert_equal("-18%", worksheet.outputs_summary_table_g50); end
  def test_outputs_summary_table_c51; assert_equal("Building temperature in warm months (⁰C)", worksheet.outputs_summary_table_c51); end
  def test_outputs_summary_table_d51; assert_equal("⁰C", worksheet.outputs_summary_table_d51); end
  def test_outputs_summary_table_e51; assert_equal("27.4", worksheet.outputs_summary_table_e51); end
  def test_outputs_summary_table_f51; assert_equal("24.1", worksheet.outputs_summary_table_f51); end
  def test_outputs_summary_table_g51; assert_equal("-12%", worksheet.outputs_summary_table_g51); end
  def test_outputs_summary_table_c52; assert_equal("Building temperature in cold months (⁰C)", worksheet.outputs_summary_table_c52); end
  def test_outputs_summary_table_d52; assert_equal("⁰C", worksheet.outputs_summary_table_d52); end
  def test_outputs_summary_table_e52; assert_equal("15.9", worksheet.outputs_summary_table_e52); end
  def test_outputs_summary_table_f52; assert_equal("19.2", worksheet.outputs_summary_table_f52); end
  def test_outputs_summary_table_g52; assert_equal("21%", worksheet.outputs_summary_table_g52); end
  def test_outputs_summary_table_c53; assert_equal("Home/building insulation  (rate of heat loss in GW / M ha*℃)", worksheet.outputs_summary_table_c53); end
  def test_outputs_summary_table_d53; assert_equal("GW / M ha*℃", worksheet.outputs_summary_table_d53); end
  def test_outputs_summary_table_e53; assert_equal("17.6", worksheet.outputs_summary_table_e53); end
  def test_outputs_summary_table_f53; assert_equal("12.0", worksheet.outputs_summary_table_f53); end
  def test_outputs_summary_table_g53; assert_equal("-32%", worksheet.outputs_summary_table_g53); end
  def test_outputs_summary_table_c54; assert_equal("% urban heating provided from zero carbon technologies (solar, heat pumps) or electric for heating", worksheet.outputs_summary_table_c54); end
  def test_outputs_summary_table_d54; assert_equal("% of energy for heating (from urban households with electricity access)", worksheet.outputs_summary_table_d54); end
  def test_outputs_summary_table_e54; assert_equal("5%", worksheet.outputs_summary_table_e54); end
  def test_outputs_summary_table_f54; assert_equal("10%", worksheet.outputs_summary_table_f54); end
  def test_outputs_summary_table_g54; assert_equal("100%", worksheet.outputs_summary_table_g54); end
  def test_outputs_summary_table_c55; assert_equal("Global % of households that have access to electricity", worksheet.outputs_summary_table_c55); end
  def test_outputs_summary_table_d55; assert_equal("% of global households", worksheet.outputs_summary_table_d55); end
  def test_outputs_summary_table_e55; assert_equal("84.3%", worksheet.outputs_summary_table_e55); end
  def test_outputs_summary_table_f55; assert_equal("93.9%", worksheet.outputs_summary_table_f55); end
  def test_outputs_summary_table_g55; assert_equal("11%", worksheet.outputs_summary_table_g55); end
  def test_outputs_summary_table_b57; assert_equal("Manufacturing", worksheet.outputs_summary_table_b57); end
  def test_outputs_summary_table_c57; assert_equal("Iron, steel and aluminium output (Gt / year)", worksheet.outputs_summary_table_c57); end
  def test_outputs_summary_table_d57; assert_equal("Gt / year", worksheet.outputs_summary_table_d57); end
  def test_outputs_summary_table_e57; assert_equal("1.8", worksheet.outputs_summary_table_e57); end
  def test_outputs_summary_table_f57; assert_equal("3.1", worksheet.outputs_summary_table_f57); end
  def test_outputs_summary_table_g57; assert_equal("73%", worksheet.outputs_summary_table_g57); end
  def test_outputs_summary_table_c58; assert_equal("Paper and other output (Gt / year)", worksheet.outputs_summary_table_c58); end
  def test_outputs_summary_table_d58; assert_equal("Gt / year", worksheet.outputs_summary_table_d58); end
  def test_outputs_summary_table_e58; assert_equal("0.6", worksheet.outputs_summary_table_e58); end
  def test_outputs_summary_table_f58; assert_equal("1.5", worksheet.outputs_summary_table_f58); end
  def test_outputs_summary_table_g58; assert_equal("147%", worksheet.outputs_summary_table_g58); end
  def test_outputs_summary_table_c59; assert_equal("Chemicals output (Gt / year)", worksheet.outputs_summary_table_c59); end
  def test_outputs_summary_table_d59; assert_equal("Gt / year", worksheet.outputs_summary_table_d59); end
  def test_outputs_summary_table_e59; assert_equal("0.8", worksheet.outputs_summary_table_e59); end
  def test_outputs_summary_table_f59; assert_equal("1.8", worksheet.outputs_summary_table_f59); end
  def test_outputs_summary_table_g59; assert_equal("134%", worksheet.outputs_summary_table_g59); end
  def test_outputs_summary_table_c60; assert_equal("Cement output (Gt / year)", worksheet.outputs_summary_table_c60); end
  def test_outputs_summary_table_d60; assert_equal("Gt / year", worksheet.outputs_summary_table_d60); end
  def test_outputs_summary_table_e60; assert_equal("3.6", worksheet.outputs_summary_table_e60); end
  def test_outputs_summary_table_f60; assert_equal("4.7", worksheet.outputs_summary_table_f60); end
  def test_outputs_summary_table_g60; assert_equal("28%", worksheet.outputs_summary_table_g60); end
  def test_outputs_summary_table_c61; assert_equal("Timber output (Gt / year)", worksheet.outputs_summary_table_c61); end
  def test_outputs_summary_table_d61; assert_equal("Gt / year", worksheet.outputs_summary_table_d61); end
  def test_outputs_summary_table_e61; assert_equal("0.8", worksheet.outputs_summary_table_e61); end
  def test_outputs_summary_table_f61; assert_equal("1.2", worksheet.outputs_summary_table_f61); end
  def test_outputs_summary_table_g61; assert_equal("48%", worksheet.outputs_summary_table_g61); end
  def test_outputs_summary_table_c62; assert_equal("Global Oxygen steel technology (% decrease in energy demand from 2011)", worksheet.outputs_summary_table_c62); end
  def test_outputs_summary_table_d62; assert_equal("% decrease in energy demand from 2011", worksheet.outputs_summary_table_d62); end
  def test_outputs_summary_table_e62; assert_equal("0.0%", worksheet.outputs_summary_table_e62); end
  def test_outputs_summary_table_f62; assert_equal("5.0%", worksheet.outputs_summary_table_f62); end
  def test_outputs_summary_table_g62; assert_equal("", worksheet.outputs_summary_table_g62); end
  def test_outputs_summary_table_c63; assert_equal("Global Pulp & paper: Pulp technology (% decrease in energy demand from 2011)", worksheet.outputs_summary_table_c63); end
  def test_outputs_summary_table_d63; assert_equal("% decrease in energy demand from 2011", worksheet.outputs_summary_table_d63); end
  def test_outputs_summary_table_e63; assert_equal("0.0%", worksheet.outputs_summary_table_e63); end
  def test_outputs_summary_table_f63; assert_equal("0.0%", worksheet.outputs_summary_table_f63); end
  def test_outputs_summary_table_g63; assert_equal("", worksheet.outputs_summary_table_g63); end
  def test_outputs_summary_table_c64; assert_equal("Global Chemicals: High Value Chemicals  technology (% decrease in energy demand from 2011)", worksheet.outputs_summary_table_c64); end
  def test_outputs_summary_table_d64; assert_equal("% decrease in energy demand from 2011", worksheet.outputs_summary_table_d64); end
  def test_outputs_summary_table_e64; assert_equal("0.0%", worksheet.outputs_summary_table_e64); end
  def test_outputs_summary_table_f64; assert_equal("0.0%", worksheet.outputs_summary_table_f64); end
  def test_outputs_summary_table_g64; assert_equal("", worksheet.outputs_summary_table_g64); end
  def test_outputs_summary_table_c65; assert_equal("Global Cement technology (% decrease in energy demand from 2011)", worksheet.outputs_summary_table_c65); end
  def test_outputs_summary_table_d65; assert_equal("% decrease in energy demand from 2011", worksheet.outputs_summary_table_d65); end
  def test_outputs_summary_table_e65; assert_equal("0.0%", worksheet.outputs_summary_table_e65); end
  def test_outputs_summary_table_f65; assert_equal("7.8%", worksheet.outputs_summary_table_f65); end
  def test_outputs_summary_table_g65; assert_equal("", worksheet.outputs_summary_table_g65); end
  def test_outputs_summary_table_c66; assert_equal("% of manufacturing emissions captured by CCS", worksheet.outputs_summary_table_c66); end
  def test_outputs_summary_table_d66; assert_equal("%", worksheet.outputs_summary_table_d66); end
  def test_outputs_summary_table_e66; assert_equal("0.0%", worksheet.outputs_summary_table_e66); end
  def test_outputs_summary_table_f66; assert_equal("0.0%", worksheet.outputs_summary_table_f66); end
  def test_outputs_summary_table_g66; assert_equal("", worksheet.outputs_summary_table_g66); end
  def test_outputs_summary_table_c67; assert_equal("Demand for consumer packaging (% of 2011 tonne demand)", worksheet.outputs_summary_table_c67); end
  def test_outputs_summary_table_d67; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d67); end
  def test_outputs_summary_table_e67; assert_equal("100.0%", worksheet.outputs_summary_table_e67); end
  def test_outputs_summary_table_f67; assert_equal("346.1%", worksheet.outputs_summary_table_f67); end
  def test_outputs_summary_table_g67; assert_equal("246%", worksheet.outputs_summary_table_g67); end
  def test_outputs_summary_table_c68; assert_equal("Demand for electrical equipment (% of 2011 tonne demand)", worksheet.outputs_summary_table_c68); end
  def test_outputs_summary_table_d68; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d68); end
  def test_outputs_summary_table_e68; assert_equal("100.0%", worksheet.outputs_summary_table_e68); end
  def test_outputs_summary_table_f68; assert_equal("239.9%", worksheet.outputs_summary_table_f68); end
  def test_outputs_summary_table_g68; assert_equal("140%", worksheet.outputs_summary_table_g68); end
  def test_outputs_summary_table_c69; assert_equal("Lifespan of refrigerator (years) in urban areas", worksheet.outputs_summary_table_c69); end
  def test_outputs_summary_table_d69; assert_equal("Refrigerator lifespan (years)", worksheet.outputs_summary_table_d69); end
  def test_outputs_summary_table_e69; assert_equal("15", worksheet.outputs_summary_table_e69); end
  def test_outputs_summary_table_f69; assert_equal("10", worksheet.outputs_summary_table_f69); end
  def test_outputs_summary_table_g69; assert_equal("-33%", worksheet.outputs_summary_table_g69); end
  def test_outputs_summary_table_b71; assert_equal("Land", worksheet.outputs_summary_table_b71); end
  def test_outputs_summary_table_c71; assert_equal("Crop yield growth from 2011", worksheet.outputs_summary_table_c71); end
  def test_outputs_summary_table_d71; assert_equal("% increase from 2011", worksheet.outputs_summary_table_d71); end
  def test_outputs_summary_table_e71; assert_equal("0%", worksheet.outputs_summary_table_e71); end
  def test_outputs_summary_table_f71; assert_equal("28%", worksheet.outputs_summary_table_f71); end
  def test_outputs_summary_table_g71; assert_equal("", worksheet.outputs_summary_table_g71); end
  def test_outputs_summary_table_c72; assert_equal("Average number of cows per hectare (pasture fed only)", worksheet.outputs_summary_table_c72); end
  def test_outputs_summary_table_d72; assert_equal("Cows per hectare", worksheet.outputs_summary_table_d72); end
  def test_outputs_summary_table_e72; assert_equal("0.6", worksheet.outputs_summary_table_e72); end
  def test_outputs_summary_table_f72; assert_equal("1.0", worksheet.outputs_summary_table_f72); end
  def test_outputs_summary_table_g72; assert_equal("60%", worksheet.outputs_summary_table_g72); end
  def test_outputs_summary_table_c73; assert_equal("Proportion of cows fed from gains/residues and farmed in confined systems", worksheet.outputs_summary_table_c73); end
  def test_outputs_summary_table_d73; assert_equal("% of beef produced intensively", worksheet.outputs_summary_table_d73); end
  def test_outputs_summary_table_e73; assert_equal("6.0%", worksheet.outputs_summary_table_e73); end
  def test_outputs_summary_table_f73; assert_equal("6.0%", worksheet.outputs_summary_table_f73); end
  def test_outputs_summary_table_g73; assert_equal("0%", worksheet.outputs_summary_table_g73); end
  def test_outputs_summary_table_c74; assert_equal("Forest area (native and commercial, millions of hectares", worksheet.outputs_summary_table_c74); end
  def test_outputs_summary_table_d74; assert_equal("M ha", worksheet.outputs_summary_table_d74); end
  def test_outputs_summary_table_e74; assert_equal("4,027", worksheet.outputs_summary_table_e74); end
  def test_outputs_summary_table_f74; assert_equal("3,665", worksheet.outputs_summary_table_f74); end
  def test_outputs_summary_table_g74; assert_equal("-9%", worksheet.outputs_summary_table_g74); end
  def test_outputs_summary_table_c75; assert_equal("Bioenergy area (millions of hectares).", worksheet.outputs_summary_table_c75); end
  def test_outputs_summary_table_d75; assert_equal("M ha", worksheet.outputs_summary_table_d75); end
  def test_outputs_summary_table_e75; assert_equal("98", worksheet.outputs_summary_table_e75); end
  def test_outputs_summary_table_f75; assert_equal("98", worksheet.outputs_summary_table_f75); end
  def test_outputs_summary_table_g75; assert_equal("0%", worksheet.outputs_summary_table_g75); end
  def test_outputs_summary_table_b77; assert_equal("Food", worksheet.outputs_summary_table_b77); end
  def test_outputs_summary_table_c77; assert_equal("Calories consumed per head (kcal / person / day)", worksheet.outputs_summary_table_c77); end
  def test_outputs_summary_table_d77; assert_equal("kcal / person / day", worksheet.outputs_summary_table_d77); end
  def test_outputs_summary_table_e77; assert_equal("2,180", worksheet.outputs_summary_table_e77); end
  def test_outputs_summary_table_f77; assert_equal("2,330", worksheet.outputs_summary_table_f77); end
  def test_outputs_summary_table_g77; assert_equal("7%", worksheet.outputs_summary_table_g77); end
  def test_outputs_summary_table_c78; assert_equal("Calories from meat (kcal / person / day)", worksheet.outputs_summary_table_c78); end
  def test_outputs_summary_table_d78; assert_equal("kcal / person / day", worksheet.outputs_summary_table_d78); end
  def test_outputs_summary_table_e78; assert_equal("187", worksheet.outputs_summary_table_e78); end
  def test_outputs_summary_table_f78; assert_equal("220", worksheet.outputs_summary_table_f78); end
  def test_outputs_summary_table_g78; assert_equal("18%", worksheet.outputs_summary_table_g78); end
  def test_outputs_summary_table_b80; assert_equal("Cost", worksheet.outputs_summary_table_b80); end
  def test_outputs_summary_table_c80; assert_equal("Increase in total energy system cost from 2011 to 2050 - point estimate", worksheet.outputs_summary_table_c80); end
  def test_outputs_summary_table_d80; assert_equal("% increase from 2011", worksheet.outputs_summary_table_d80); end
  def test_outputs_summary_table_e80; assert_equal("n / a", worksheet.outputs_summary_table_e80); end
  def test_outputs_summary_table_f80; assert_equal("242%", worksheet.outputs_summary_table_f80); end
  def test_outputs_summary_table_g80; assert_equal("", worksheet.outputs_summary_table_g80); end
  def test_outputs_summary_table_c81; assert_equal("Increase in total energy system cost from 2011 to 2050 - high estimate", worksheet.outputs_summary_table_c81); end
  def test_outputs_summary_table_d81; assert_equal("% increase from 2011", worksheet.outputs_summary_table_d81); end
  def test_outputs_summary_table_e81; assert_equal("n / a", worksheet.outputs_summary_table_e81); end
  def test_outputs_summary_table_f81; assert_equal("357%", worksheet.outputs_summary_table_f81); end
  def test_outputs_summary_table_g81; assert_equal("", worksheet.outputs_summary_table_g81); end
  def test_outputs_summary_table_c82; assert_equal("Increase in total energy system cost from 2011 to 2050 - low estimate", worksheet.outputs_summary_table_c82); end
  def test_outputs_summary_table_d82; assert_equal("% increase from 2011", worksheet.outputs_summary_table_d82); end
  def test_outputs_summary_table_e82; assert_equal("n / a", worksheet.outputs_summary_table_e82); end
  def test_outputs_summary_table_f82; assert_equal("177%", worksheet.outputs_summary_table_f82); end
  def test_outputs_summary_table_g82; assert_equal("", worksheet.outputs_summary_table_g82); end
  def test_outputs_summary_table_c83; assert_equal("Fuel costs as % of total costs", worksheet.outputs_summary_table_c83); end
  def test_outputs_summary_table_d83; assert_equal("% (% increase from 2011)", worksheet.outputs_summary_table_d83); end
  def test_outputs_summary_table_e83; assert_equal("n / a", worksheet.outputs_summary_table_e83); end
  def test_outputs_summary_table_f83; assert_equal("183087.3%", worksheet.outputs_summary_table_f83); end
  def test_outputs_summary_table_g83; assert_equal("", worksheet.outputs_summary_table_g83); end
  def test_outputs_summary_table_c84; assert_equal("Tax levied by fossil fuel exporters in 2050 (% increase from 2011)", worksheet.outputs_summary_table_c84); end
  def test_outputs_summary_table_d84; assert_equal("$bn / year", worksheet.outputs_summary_table_d84); end
  def test_outputs_summary_table_e84; assert_equal("n / a", worksheet.outputs_summary_table_e84); end
  def test_outputs_summary_table_f84; assert_equal("6696.9", worksheet.outputs_summary_table_f84); end
  def test_outputs_summary_table_g84; assert_equal("", worksheet.outputs_summary_table_g84); end
  def test_outputs_summary_table_b86; assert_equal("Emissions saved", worksheet.outputs_summary_table_b86); end
  def test_outputs_summary_table_c86; assert_equal("Emissions saved by speculative GHG removal technologies (Gt CO2e / year)", worksheet.outputs_summary_table_c86); end
  def test_outputs_summary_table_d86; assert_equal("Gt CO2e / year", worksheet.outputs_summary_table_d86); end
  def test_outputs_summary_table_e86; assert_equal("0.000", worksheet.outputs_summary_table_e86); end
  def test_outputs_summary_table_f86; assert_equal("0.000", worksheet.outputs_summary_table_f86); end
  def test_outputs_summary_table_g86; assert_equal("", worksheet.outputs_summary_table_g86); end
  def test_outputs_summary_table_d91; assert_equal("Unit", worksheet.outputs_summary_table_d91); end
  def test_outputs_summary_table_e91; assert_equal("2011", worksheet.outputs_summary_table_e91); end
  def test_outputs_summary_table_f91; assert_equal("2050", worksheet.outputs_summary_table_f91); end
  def test_outputs_summary_table_g91; assert_equal("% increase", worksheet.outputs_summary_table_g91); end
  def test_outputs_summary_table_b92; assert_equal("Emissions and temperature", worksheet.outputs_summary_table_b92); end
  def test_outputs_summary_table_c92; assert_equal("Cumulative emissions by each year (Gt CO2e)", worksheet.outputs_summary_table_c92); end
  def test_outputs_summary_table_d92; assert_equal("Gt CO2e", worksheet.outputs_summary_table_d92); end
  def test_outputs_summary_table_e92; assert_equal("1,890", worksheet.outputs_summary_table_e92); end
  def test_outputs_summary_table_f92; assert_equal("4,054", worksheet.outputs_summary_table_f92); end
  def test_outputs_summary_table_g92; assert_equal("", worksheet.outputs_summary_table_g92); end
  def test_outputs_summary_table_c93; assert_equal("Post-2050 emissions trajectory", worksheet.outputs_summary_table_c93); end
  def test_outputs_summary_table_d93; assert_equal("% emissions increase every year: a proportion of average yearly change for the previous 15 year period", worksheet.outputs_summary_table_d93); end
  def test_outputs_summary_table_e93; assert_equal("16.5%", worksheet.outputs_summary_table_e93); end
  def test_outputs_summary_table_g93; assert_equal("", worksheet.outputs_summary_table_g93); end
  def test_outputs_summary_table_b95; assert_equal("Demographics and long term", worksheet.outputs_summary_table_b95); end
  def test_outputs_summary_table_c95; assert_equal("Urban population (billions of people)", worksheet.outputs_summary_table_c95); end
  def test_outputs_summary_table_d95; assert_equal("billions of people", worksheet.outputs_summary_table_d95); end
  def test_outputs_summary_table_e95; assert_equal("3.6", worksheet.outputs_summary_table_e95); end
  def test_outputs_summary_table_f95; assert_equal("6.3", worksheet.outputs_summary_table_f95); end
  def test_outputs_summary_table_g95; assert_equal("75%", worksheet.outputs_summary_table_g95); end
  def test_outputs_summary_table_c96; assert_equal("Rural population (billions of people)", worksheet.outputs_summary_table_c96); end
  def test_outputs_summary_table_d96; assert_equal("billions of people", worksheet.outputs_summary_table_d96); end
  def test_outputs_summary_table_e96; assert_equal("3.3", worksheet.outputs_summary_table_e96); end
  def test_outputs_summary_table_f96; assert_equal("3.2", worksheet.outputs_summary_table_f96); end
  def test_outputs_summary_table_g96; assert_equal("-4%", worksheet.outputs_summary_table_g96); end
  def test_outputs_summary_table_b98; assert_equal("Electricity", worksheet.outputs_summary_table_b98); end
  def test_outputs_summary_table_c98; assert_equal("Electricity demand (kWh per capita)", worksheet.outputs_summary_table_c98); end
  def test_outputs_summary_table_d98; assert_equal("kWh per capita", worksheet.outputs_summary_table_d98); end
  def test_outputs_summary_table_e98; assert_equal("2,857", worksheet.outputs_summary_table_e98); end
  def test_outputs_summary_table_f98; assert_equal("4,421", worksheet.outputs_summary_table_f98); end
  def test_outputs_summary_table_g98; assert_equal("55%", worksheet.outputs_summary_table_g98); end
  def test_outputs_summary_table_c99; assert_equal("Offshore wind capacity (GW)", worksheet.outputs_summary_table_c99); end
  def test_outputs_summary_table_d99; assert_equal("GW", worksheet.outputs_summary_table_d99); end
  def test_outputs_summary_table_e99; assert_equal("4", worksheet.outputs_summary_table_e99); end
  def test_outputs_summary_table_f99; assert_equal("228", worksheet.outputs_summary_table_f99); end
  def test_outputs_summary_table_g99; assert_equal("5449%", worksheet.outputs_summary_table_g99); end
  def test_outputs_summary_table_c100; assert_equal("Onshore wind capacity (GW)", worksheet.outputs_summary_table_c100); end
  def test_outputs_summary_table_d100; assert_equal("GW", worksheet.outputs_summary_table_d100); end
  def test_outputs_summary_table_e100; assert_equal("234", worksheet.outputs_summary_table_e100); end
  def test_outputs_summary_table_f100; assert_equal("931", worksheet.outputs_summary_table_f100); end
  def test_outputs_summary_table_g100; assert_equal("299%", worksheet.outputs_summary_table_g100); end
  def test_outputs_summary_table_c101; assert_equal("Solar PV capacity (GW)", worksheet.outputs_summary_table_c101); end
  def test_outputs_summary_table_d101; assert_equal("GW", worksheet.outputs_summary_table_d101); end
  def test_outputs_summary_table_e101; assert_equal("70", worksheet.outputs_summary_table_e101); end
  def test_outputs_summary_table_f101; assert_equal("363", worksheet.outputs_summary_table_f101); end
  def test_outputs_summary_table_g101; assert_equal("421%", worksheet.outputs_summary_table_g101); end
  def test_outputs_summary_table_c102; assert_equal("CSP capacity (GW)", worksheet.outputs_summary_table_c102); end
  def test_outputs_summary_table_d102; assert_equal("GW", worksheet.outputs_summary_table_d102); end
  def test_outputs_summary_table_e102; assert_equal("2", worksheet.outputs_summary_table_e102); end
  def test_outputs_summary_table_f102; assert_equal("78", worksheet.outputs_summary_table_f102); end
  def test_outputs_summary_table_g102; assert_equal("4750%", worksheet.outputs_summary_table_g102); end
  def test_outputs_summary_table_c103; assert_equal("Unabated (GW)", worksheet.outputs_summary_table_c103); end
  def test_outputs_summary_table_d103; assert_equal("GW", worksheet.outputs_summary_table_d103); end
  def test_outputs_summary_table_e103; assert_equal("3,709", worksheet.outputs_summary_table_e103); end
  def test_outputs_summary_table_f103; assert_equal("13,138", worksheet.outputs_summary_table_f103); end
  def test_outputs_summary_table_g103; assert_equal("254%", worksheet.outputs_summary_table_g103); end
  def test_outputs_summary_table_c104; assert_equal("Emissions intensity", worksheet.outputs_summary_table_c104); end
  def test_outputs_summary_table_d104; assert_equal("g CO2e / kWh", worksheet.outputs_summary_table_d104); end
  def test_outputs_summary_table_e104; assert_equal("579", worksheet.outputs_summary_table_e104); end
  def test_outputs_summary_table_f104; assert_equal("434", worksheet.outputs_summary_table_f104); end
  def test_outputs_summary_table_g104; assert_equal("-25%", worksheet.outputs_summary_table_g104); end
  def test_outputs_summary_table_b106; assert_equal("Transport", worksheet.outputs_summary_table_b106); end
  def test_outputs_summary_table_c106; assert_equal("Light road (number of vehicles)", worksheet.outputs_summary_table_c106); end
  def test_outputs_summary_table_d106; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d106); end
  def test_outputs_summary_table_e106; assert_equal("1,456,126,459", worksheet.outputs_summary_table_e106); end
  def test_outputs_summary_table_f106; assert_equal("3,676,375,079", worksheet.outputs_summary_table_f106); end
  def test_outputs_summary_table_g106; assert_equal("152%", worksheet.outputs_summary_table_g106); end
  def test_outputs_summary_table_c107; assert_equal("Heavy road (number of vehicles)", worksheet.outputs_summary_table_c107); end
  def test_outputs_summary_table_d107; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d107); end
  def test_outputs_summary_table_e107; assert_equal("15,512,285", worksheet.outputs_summary_table_e107); end
  def test_outputs_summary_table_f107; assert_equal("35,664,111", worksheet.outputs_summary_table_f107); end
  def test_outputs_summary_table_g107; assert_equal("130%", worksheet.outputs_summary_table_g107); end
  def test_outputs_summary_table_c108; assert_equal("Rail (number of vehicles)", worksheet.outputs_summary_table_c108); end
  def test_outputs_summary_table_d108; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d108); end
  def test_outputs_summary_table_e108; assert_equal("81,412", worksheet.outputs_summary_table_e108); end
  def test_outputs_summary_table_f108; assert_equal("141,698", worksheet.outputs_summary_table_f108); end
  def test_outputs_summary_table_g108; assert_equal("74%", worksheet.outputs_summary_table_g108); end
  def test_outputs_summary_table_c109; assert_equal("Plane (number of vehicles)", worksheet.outputs_summary_table_c109); end
  def test_outputs_summary_table_d109; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d109); end
  def test_outputs_summary_table_e109; assert_equal("24,997", worksheet.outputs_summary_table_e109); end
  def test_outputs_summary_table_f109; assert_equal("52,321", worksheet.outputs_summary_table_f109); end
  def test_outputs_summary_table_g109; assert_equal("109%", worksheet.outputs_summary_table_g109); end
  def test_outputs_summary_table_c110; assert_equal("Air freight (as % of international freight tonne-km)", worksheet.outputs_summary_table_c110); end
  def test_outputs_summary_table_d110; assert_equal("% of international freight tonne-km", worksheet.outputs_summary_table_d110); end
  def test_outputs_summary_table_e110; assert_equal("0.3%", worksheet.outputs_summary_table_e110); end
  def test_outputs_summary_table_f110; assert_equal("0.3%", worksheet.outputs_summary_table_f110); end
  def test_outputs_summary_table_g110; assert_equal("12%", worksheet.outputs_summary_table_g110); end
  def test_outputs_summary_table_c111; assert_equal("car.passenger.urban.ICE.liquid", worksheet.outputs_summary_table_c111); end
  def test_outputs_summary_table_d111; assert_equal("% of urban cars", worksheet.outputs_summary_table_d111); end
  def test_outputs_summary_table_e111; assert_equal("98.8%", worksheet.outputs_summary_table_e111); end
  def test_outputs_summary_table_f111; assert_equal("91.0%", worksheet.outputs_summary_table_f111); end
  def test_outputs_summary_table_g111; assert_equal("", worksheet.outputs_summary_table_g111); end
  def test_outputs_summary_table_c112; assert_equal("car.passenger.urban.ICE.gas", worksheet.outputs_summary_table_c112); end
  def test_outputs_summary_table_d112; assert_equal("% of urban cars", worksheet.outputs_summary_table_d112); end
  def test_outputs_summary_table_e112; assert_equal("1.0%", worksheet.outputs_summary_table_e112); end
  def test_outputs_summary_table_f112; assert_equal("2.0%", worksheet.outputs_summary_table_f112); end
  def test_outputs_summary_table_g112; assert_equal("", worksheet.outputs_summary_table_g112); end
  def test_outputs_summary_table_c113; assert_equal("car.passenger.urban.PH", worksheet.outputs_summary_table_c113); end
  def test_outputs_summary_table_d113; assert_equal("% of urban cars", worksheet.outputs_summary_table_d113); end
  def test_outputs_summary_table_e113; assert_equal("0.0%", worksheet.outputs_summary_table_e113); end
  def test_outputs_summary_table_f113; assert_equal("5.0%", worksheet.outputs_summary_table_f113); end
  def test_outputs_summary_table_g113; assert_equal("", worksheet.outputs_summary_table_g113); end
  def test_outputs_summary_table_c114; assert_equal("car.passenger.urban.EV", worksheet.outputs_summary_table_c114); end
  def test_outputs_summary_table_d114; assert_equal("% of urban cars", worksheet.outputs_summary_table_d114); end
  def test_outputs_summary_table_e114; assert_equal("0.2%", worksheet.outputs_summary_table_e114); end
  def test_outputs_summary_table_f114; assert_equal("2.0%", worksheet.outputs_summary_table_f114); end
  def test_outputs_summary_table_g114; assert_equal("", worksheet.outputs_summary_table_g114); end
  def test_outputs_summary_table_c115; assert_equal("car.passenger.urban.H2", worksheet.outputs_summary_table_c115); end
  def test_outputs_summary_table_d115; assert_equal("% of urban cars", worksheet.outputs_summary_table_d115); end
  def test_outputs_summary_table_e115; assert_equal("0.0%", worksheet.outputs_summary_table_e115); end
  def test_outputs_summary_table_f115; assert_equal("0.0%", worksheet.outputs_summary_table_f115); end
  def test_outputs_summary_table_g115; assert_equal("", worksheet.outputs_summary_table_g115); end
  def test_outputs_summary_table_c116; assert_equal("Efficiency of urban ICE cars (lge (litres gasoline equivalent) per 100km)", worksheet.outputs_summary_table_c116); end
  def test_outputs_summary_table_d116; assert_equal("lge (litres gasoline equivalent) per 100km", worksheet.outputs_summary_table_d116); end
  def test_outputs_summary_table_e116; assert_equal("8.6", worksheet.outputs_summary_table_e116); end
  def test_outputs_summary_table_f116; assert_equal("5.7", worksheet.outputs_summary_table_f116); end
  def test_outputs_summary_table_g116; assert_equal("-35%", worksheet.outputs_summary_table_g116); end
  def test_outputs_summary_table_c117; assert_equal("Annual distance travelled per person by air (global average)", worksheet.outputs_summary_table_c117); end
  def test_outputs_summary_table_d117; assert_equal("average km per year per capital per year", worksheet.outputs_summary_table_d117); end
  def test_outputs_summary_table_e117; assert_equal("766", worksheet.outputs_summary_table_e117); end
  def test_outputs_summary_table_f117; assert_equal("1,217", worksheet.outputs_summary_table_f117); end
  def test_outputs_summary_table_g117; assert_equal("59%", worksheet.outputs_summary_table_g117); end
  def test_outputs_summary_table_c118; assert_equal("Annual distance travelled: Plane short haul - traditional", worksheet.outputs_summary_table_c118); end
  def test_outputs_summary_table_d118; assert_equal("Million passenger-km travelled per year", worksheet.outputs_summary_table_d118); end
  def test_outputs_summary_table_e118; assert_equal("1,913,806", worksheet.outputs_summary_table_e118); end
  def test_outputs_summary_table_f118; assert_equal("3,087,568", worksheet.outputs_summary_table_f118); end
  def test_outputs_summary_table_g118; assert_equal("61%", worksheet.outputs_summary_table_g118); end
  def test_outputs_summary_table_c119; assert_equal("Annual distance travelled: Plane short haul - hydrogen", worksheet.outputs_summary_table_c119); end
  def test_outputs_summary_table_d119; assert_equal("Million passenger-km travelled per year", worksheet.outputs_summary_table_d119); end
  def test_outputs_summary_table_e119; assert_equal("0", worksheet.outputs_summary_table_e119); end
  def test_outputs_summary_table_f119; assert_equal("0", worksheet.outputs_summary_table_f119); end
  def test_outputs_summary_table_g119; assert_equal("", worksheet.outputs_summary_table_g119); end
  def test_outputs_summary_table_c120; assert_equal("Annual distance travelled: Plane long haul - traditional", worksheet.outputs_summary_table_c120); end
  def test_outputs_summary_table_d120; assert_equal("Million passenger-km travelled per year", worksheet.outputs_summary_table_d120); end
  def test_outputs_summary_table_e120; assert_equal("3,424,706", worksheet.outputs_summary_table_e120); end
  def test_outputs_summary_table_f120; assert_equal("8,533,616", worksheet.outputs_summary_table_f120); end
  def test_outputs_summary_table_g120; assert_equal("149%", worksheet.outputs_summary_table_g120); end
  def test_outputs_summary_table_c121; assert_equal("Annual distance travelled: Plane long haul - hydrogen", worksheet.outputs_summary_table_c121); end
  def test_outputs_summary_table_d121; assert_equal("Million passenger-km travelled per year", worksheet.outputs_summary_table_d121); end
  def test_outputs_summary_table_e121; assert_equal("0", worksheet.outputs_summary_table_e121); end
  def test_outputs_summary_table_f121; assert_equal("0", worksheet.outputs_summary_table_f121); end
  def test_outputs_summary_table_g121; assert_equal("", worksheet.outputs_summary_table_g121); end
  def test_outputs_summary_table_b124; assert_equal("Buildings", worksheet.outputs_summary_table_b124); end
  def test_outputs_summary_table_c124; assert_equal("Global Urban solid boiler used by people with access to electricity for space heating", worksheet.outputs_summary_table_c124); end
  def test_outputs_summary_table_d124; assert_equal("% of energy for heating (from urban households with electricity access)", worksheet.outputs_summary_table_d124); end
  def test_outputs_summary_table_e124; assert_equal("7%", worksheet.outputs_summary_table_e124); end
  def test_outputs_summary_table_f124; assert_equal("2%", worksheet.outputs_summary_table_f124); end
  def test_outputs_summary_table_g124; assert_equal("-71%", worksheet.outputs_summary_table_g124); end
  def test_outputs_summary_table_c125; assert_equal("Global urban liquid boiler used by people with access to electricity for space heating", worksheet.outputs_summary_table_c125); end
  def test_outputs_summary_table_d125; assert_equal("% of energy for heating (from urban households with electricity access)", worksheet.outputs_summary_table_d125); end
  def test_outputs_summary_table_e125; assert_equal("14%", worksheet.outputs_summary_table_e125); end
  def test_outputs_summary_table_f125; assert_equal("14%", worksheet.outputs_summary_table_f125); end
  def test_outputs_summary_table_g125; assert_equal("0%", worksheet.outputs_summary_table_g125); end
  def test_outputs_summary_table_c126; assert_equal("Global urban gas boiler used by people with access to electricity for space heating", worksheet.outputs_summary_table_c126); end
  def test_outputs_summary_table_d126; assert_equal("% of energy for heating (from urban households with electricity access)", worksheet.outputs_summary_table_d126); end
  def test_outputs_summary_table_e126; assert_equal("55%", worksheet.outputs_summary_table_e126); end
  def test_outputs_summary_table_f126; assert_equal("55%", worksheet.outputs_summary_table_f126); end
  def test_outputs_summary_table_g126; assert_equal("0%", worksheet.outputs_summary_table_g126); end
  def test_outputs_summary_table_c127; assert_equal("Global urban heat pump used by people with access to electricity for space heating", worksheet.outputs_summary_table_c127); end
  def test_outputs_summary_table_d127; assert_equal("% of energy for heating (from urban households with electricity access)", worksheet.outputs_summary_table_d127); end
  def test_outputs_summary_table_e127; assert_equal("2%", worksheet.outputs_summary_table_e127); end
  def test_outputs_summary_table_f127; assert_equal("2%", worksheet.outputs_summary_table_f127); end
  def test_outputs_summary_table_g127; assert_equal("0%", worksheet.outputs_summary_table_g127); end
  def test_outputs_summary_table_c128; assert_equal("Global urban electricity heater used by people with access to electricity for space heating", worksheet.outputs_summary_table_c128); end
  def test_outputs_summary_table_d128; assert_equal("% of energy for heating (from urban households with electricity access)", worksheet.outputs_summary_table_d128); end
  def test_outputs_summary_table_e128; assert_equal("3%", worksheet.outputs_summary_table_e128); end
  def test_outputs_summary_table_f128; assert_equal("8%", worksheet.outputs_summary_table_f128); end
  def test_outputs_summary_table_g128; assert_equal("167%", worksheet.outputs_summary_table_g128); end
  def test_outputs_summary_table_c129; assert_equal("Global urban solar heater used by people with access to electricity for space heating", worksheet.outputs_summary_table_c129); end
  def test_outputs_summary_table_d129; assert_equal("% of energy for heating (from urban households with electricity access)", worksheet.outputs_summary_table_d129); end
  def test_outputs_summary_table_e129; assert_equal("0%", worksheet.outputs_summary_table_e129); end
  def test_outputs_summary_table_f129; assert_equal("0%", worksheet.outputs_summary_table_f129); end
  def test_outputs_summary_table_g129; assert_equal("", worksheet.outputs_summary_table_g129); end
  def test_outputs_summary_table_c130; assert_equal("Global urban chp used by people with access to electricity for space heating", worksheet.outputs_summary_table_c130); end
  def test_outputs_summary_table_d130; assert_equal("% of energy for heating (from urban households with electricity access)", worksheet.outputs_summary_table_d130); end
  def test_outputs_summary_table_e130; assert_equal("2%", worksheet.outputs_summary_table_e130); end
  def test_outputs_summary_table_f130; assert_equal("2%", worksheet.outputs_summary_table_f130); end
  def test_outputs_summary_table_g130; assert_equal("0%", worksheet.outputs_summary_table_g130); end
  def test_outputs_summary_table_c131; assert_equal("Global urban district heating used by people with access to electricity for space heating", worksheet.outputs_summary_table_c131); end
  def test_outputs_summary_table_d131; assert_equal("% of energy for heating (from urban households with electricity access)", worksheet.outputs_summary_table_d131); end
  def test_outputs_summary_table_e131; assert_equal("17%", worksheet.outputs_summary_table_e131); end
  def test_outputs_summary_table_f131; assert_equal("17%", worksheet.outputs_summary_table_f131); end
  def test_outputs_summary_table_g131; assert_equal("0%", worksheet.outputs_summary_table_g131); end
  def test_outputs_summary_table_c132; assert_equal("Number of refrigerators in an average urban household", worksheet.outputs_summary_table_c132); end
  def test_outputs_summary_table_d132; assert_equal("products per urban household", worksheet.outputs_summary_table_d132); end
  def test_outputs_summary_table_e132; assert_equal("1.0", worksheet.outputs_summary_table_e132); end
  def test_outputs_summary_table_f132; assert_equal("1.4", worksheet.outputs_summary_table_f132); end
  def test_outputs_summary_table_g132; assert_equal("42%", worksheet.outputs_summary_table_g132); end
  def test_outputs_summary_table_c133; assert_equal("Number of TVs in an average urban household", worksheet.outputs_summary_table_c133); end
  def test_outputs_summary_table_d133; assert_equal("products per urban household", worksheet.outputs_summary_table_d133); end
  def test_outputs_summary_table_e133; assert_equal("1.6", worksheet.outputs_summary_table_e133); end
  def test_outputs_summary_table_f133; assert_equal("2.3", worksheet.outputs_summary_table_f133); end
  def test_outputs_summary_table_g133; assert_equal("42%", worksheet.outputs_summary_table_g133); end
  def test_outputs_summary_table_c134; assert_equal("% heating provided from zero-carbon space heating (heat-pumps & solar)", worksheet.outputs_summary_table_c134); end
  def test_outputs_summary_table_d134; assert_equal("% of energy for heating (from urban households with electricity access)", worksheet.outputs_summary_table_d134); end
  def test_outputs_summary_table_e134; assert_equal("2.0%", worksheet.outputs_summary_table_e134); end
  def test_outputs_summary_table_f134; assert_equal("2.0%", worksheet.outputs_summary_table_f134); end
  def test_outputs_summary_table_g134; assert_equal("0%", worksheet.outputs_summary_table_g134); end
  def test_outputs_summary_table_c135; assert_equal("% urban heating provided from heat-pumps for space heating", worksheet.outputs_summary_table_c135); end
  def test_outputs_summary_table_d135; assert_equal("% of energy for heating (from urban households with electricity access)", worksheet.outputs_summary_table_d135); end
  def test_outputs_summary_table_e135; assert_equal("2.0%", worksheet.outputs_summary_table_e135); end
  def test_outputs_summary_table_f135; assert_equal("2.0%", worksheet.outputs_summary_table_f135); end
  def test_outputs_summary_table_g135; assert_equal("0%", worksheet.outputs_summary_table_g135); end
  def test_outputs_summary_table_c136; assert_equal("% urban heating provided from solar-powered space heating", worksheet.outputs_summary_table_c136); end
  def test_outputs_summary_table_d136; assert_equal("% of energy for heating (from urban households with electricity access)", worksheet.outputs_summary_table_d136); end
  def test_outputs_summary_table_e136; assert_equal("0.0%", worksheet.outputs_summary_table_e136); end
  def test_outputs_summary_table_f136; assert_equal("0.0%", worksheet.outputs_summary_table_f136); end
  def test_outputs_summary_table_g136; assert_equal("", worksheet.outputs_summary_table_g136); end
  def test_outputs_summary_table_c137; assert_equal("% urban heating provided from electric-powered space heating", worksheet.outputs_summary_table_c137); end
  def test_outputs_summary_table_d137; assert_equal("% of energy for heating (from urban households with electricity access)", worksheet.outputs_summary_table_d137); end
  def test_outputs_summary_table_e137; assert_equal("3.0%", worksheet.outputs_summary_table_e137); end
  def test_outputs_summary_table_f137; assert_equal("8.0%", worksheet.outputs_summary_table_f137); end
  def test_outputs_summary_table_g137; assert_equal("167%", worksheet.outputs_summary_table_g137); end
  def test_outputs_summary_table_c138; assert_equal("% urban households using hydrocarbons (and all district heating) for space heating", worksheet.outputs_summary_table_c138); end
  def test_outputs_summary_table_d138; assert_equal("% of energy for heating (from urban households with electricity access)", worksheet.outputs_summary_table_d138); end
  def test_outputs_summary_table_e138; assert_equal("95%", worksheet.outputs_summary_table_e138); end
  def test_outputs_summary_table_f138; assert_equal("90%", worksheet.outputs_summary_table_f138); end
  def test_outputs_summary_table_g138; assert_equal("-5%", worksheet.outputs_summary_table_g138); end
  def test_outputs_summary_table_c139; assert_equal("Total urban households", worksheet.outputs_summary_table_c139); end
  def test_outputs_summary_table_d139; assert_equal("households", worksheet.outputs_summary_table_d139); end
  def test_outputs_summary_table_e139; assert_equal("145271986262%", worksheet.outputs_summary_table_e139); end
  def test_outputs_summary_table_f139; assert_equal("288118707470%", worksheet.outputs_summary_table_f139); end
  def test_outputs_summary_table_g139; assert_equal("98%", worksheet.outputs_summary_table_g139); end
  def test_outputs_summary_table_c140; assert_equal("Total rural households", worksheet.outputs_summary_table_c140); end
  def test_outputs_summary_table_d140; assert_equal("households", worksheet.outputs_summary_table_d140); end
  def test_outputs_summary_table_e140; assert_equal("83366001386%", worksheet.outputs_summary_table_e140); end
  def test_outputs_summary_table_f140; assert_equal("91780955305%", worksheet.outputs_summary_table_f140); end
  def test_outputs_summary_table_g140; assert_equal("10%", worksheet.outputs_summary_table_g140); end
  def test_outputs_summary_table_c141; assert_equal("% urban households that have access to electricity", worksheet.outputs_summary_table_c141); end
  def test_outputs_summary_table_d141; assert_equal("% of urban households", worksheet.outputs_summary_table_d141); end
  def test_outputs_summary_table_e141; assert_equal("93.7%", worksheet.outputs_summary_table_e141); end
  def test_outputs_summary_table_f141; assert_equal("98.0%", worksheet.outputs_summary_table_f141); end
  def test_outputs_summary_table_g141; assert_equal("5%", worksheet.outputs_summary_table_g141); end
  def test_outputs_summary_table_c142; assert_equal("% rural households that have access to electricity", worksheet.outputs_summary_table_c142); end
  def test_outputs_summary_table_d142; assert_equal("% of rural households", worksheet.outputs_summary_table_d142); end
  def test_outputs_summary_table_e142; assert_equal("68.0%", worksheet.outputs_summary_table_e142); end
  def test_outputs_summary_table_f142; assert_equal("81.0%", worksheet.outputs_summary_table_f142); end
  def test_outputs_summary_table_g142; assert_equal("19%", worksheet.outputs_summary_table_g142); end
  def test_outputs_summary_table_c143; assert_equal("Global Urban households with access to electricity", worksheet.outputs_summary_table_c143); end
  def test_outputs_summary_table_d143; assert_equal("% of urban households", worksheet.outputs_summary_table_d143); end
  def test_outputs_summary_table_e143; assert_equal("94%", worksheet.outputs_summary_table_e143); end
  def test_outputs_summary_table_f143; assert_equal("98%", worksheet.outputs_summary_table_f143); end
  def test_outputs_summary_table_g143; assert_equal("5%", worksheet.outputs_summary_table_g143); end
  def test_outputs_summary_table_c144; assert_equal("Global Rural households with access to electricity", worksheet.outputs_summary_table_c144); end
  def test_outputs_summary_table_d144; assert_equal("% of rural households", worksheet.outputs_summary_table_d144); end
  def test_outputs_summary_table_e144; assert_equal("68%", worksheet.outputs_summary_table_e144); end
  def test_outputs_summary_table_f144; assert_equal("81%", worksheet.outputs_summary_table_f144); end
  def test_outputs_summary_table_g144; assert_equal("19%", worksheet.outputs_summary_table_g144); end
  def test_outputs_summary_table_c145; assert_equal("Global Urban households with no access to electricity", worksheet.outputs_summary_table_c145); end
  def test_outputs_summary_table_d145; assert_equal("% of urban households", worksheet.outputs_summary_table_d145); end
  def test_outputs_summary_table_e145; assert_equal("6%", worksheet.outputs_summary_table_e145); end
  def test_outputs_summary_table_f145; assert_equal("2%", worksheet.outputs_summary_table_f145); end
  def test_outputs_summary_table_g145; assert_equal("-68%", worksheet.outputs_summary_table_g145); end
  def test_outputs_summary_table_c146; assert_equal("Global Rural households with no access to electricity", worksheet.outputs_summary_table_c146); end
  def test_outputs_summary_table_d146; assert_equal("% of rural households", worksheet.outputs_summary_table_d146); end
  def test_outputs_summary_table_e146; assert_equal("32%", worksheet.outputs_summary_table_e146); end
  def test_outputs_summary_table_f146; assert_equal("19%", worksheet.outputs_summary_table_f146); end
  def test_outputs_summary_table_g146; assert_equal("-41%", worksheet.outputs_summary_table_g146); end
  def test_outputs_summary_table_c147; assert_equal("% urban space heating from heat pumps", worksheet.outputs_summary_table_c147); end
  def test_outputs_summary_table_d147; assert_equal("% of urban space heating ", worksheet.outputs_summary_table_d147); end
  def test_outputs_summary_table_e147; assert_equal("2.0%", worksheet.outputs_summary_table_e147); end
  def test_outputs_summary_table_f147; assert_equal("2.0%", worksheet.outputs_summary_table_f147); end
  def test_outputs_summary_table_g147; assert_equal("0%", worksheet.outputs_summary_table_g147); end
  def test_outputs_summary_table_c148; assert_equal("% urban space heating from solar", worksheet.outputs_summary_table_c148); end
  def test_outputs_summary_table_d148; assert_equal("% of urban space heating ", worksheet.outputs_summary_table_d148); end
  def test_outputs_summary_table_e148; assert_equal("0.0%", worksheet.outputs_summary_table_e148); end
  def test_outputs_summary_table_f148; assert_equal("0.0%", worksheet.outputs_summary_table_f148); end
  def test_outputs_summary_table_g148; assert_equal("", worksheet.outputs_summary_table_g148); end
  def test_outputs_summary_table_c149; assert_equal("% urban space heating from district heating", worksheet.outputs_summary_table_c149); end
  def test_outputs_summary_table_d149; assert_equal("% of urban space heating ", worksheet.outputs_summary_table_d149); end
  def test_outputs_summary_table_e149; assert_equal("17.0%", worksheet.outputs_summary_table_e149); end
  def test_outputs_summary_table_f149; assert_equal("17.0%", worksheet.outputs_summary_table_f149); end
  def test_outputs_summary_table_g149; assert_equal("0%", worksheet.outputs_summary_table_g149); end
  def test_outputs_summary_table_b151; assert_equal("Manufacturing", worksheet.outputs_summary_table_b151); end
  def test_outputs_summary_table_c151; assert_equal("Electrical equipment (% of 2011 demand (tonnes))", worksheet.outputs_summary_table_c151); end
  def test_outputs_summary_table_d151; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d151); end
  def test_outputs_summary_table_e151; assert_equal("100%", worksheet.outputs_summary_table_e151); end
  def test_outputs_summary_table_f151; assert_equal("240%", worksheet.outputs_summary_table_f151); end
  def test_outputs_summary_table_g151; assert_equal("140%", worksheet.outputs_summary_table_g151); end
  def test_outputs_summary_table_c152; assert_equal("Consumer packaging (% of 2011 demand (tonnes))", worksheet.outputs_summary_table_c152); end
  def test_outputs_summary_table_d152; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d152); end
  def test_outputs_summary_table_e152; assert_equal("100%", worksheet.outputs_summary_table_e152); end
  def test_outputs_summary_table_f152; assert_equal("346%", worksheet.outputs_summary_table_f152); end
  def test_outputs_summary_table_g152; assert_equal("246%", worksheet.outputs_summary_table_g152); end
  def test_outputs_summary_table_c153; assert_equal("Metal goods (% of 2011 demand (tonnes))", worksheet.outputs_summary_table_c153); end
  def test_outputs_summary_table_d153; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d153); end
  def test_outputs_summary_table_e153; assert_equal("100%", worksheet.outputs_summary_table_e153); end
  def test_outputs_summary_table_f153; assert_equal("346%", worksheet.outputs_summary_table_f153); end
  def test_outputs_summary_table_g153; assert_equal("246%", worksheet.outputs_summary_table_g153); end
  def test_outputs_summary_table_c154; assert_equal("IPCC emissions sector G.X2.A (Gt CO2)", worksheet.outputs_summary_table_c154); end
  def test_outputs_summary_table_d154; assert_equal("Gt CO2", worksheet.outputs_summary_table_d154); end
  def test_outputs_summary_table_e154; assert_equal("0.0", worksheet.outputs_summary_table_e154); end
  def test_outputs_summary_table_f154; assert_equal("0.0", worksheet.outputs_summary_table_f154); end
  def test_outputs_summary_table_g154; assert_equal("", worksheet.outputs_summary_table_g154); end
  def test_outputs_summary_table_c155; assert_equal("IPCC emissions sector G.X2.B (Gt CO2)", worksheet.outputs_summary_table_c155); end
  def test_outputs_summary_table_d155; assert_equal("Gt CO2", worksheet.outputs_summary_table_d155); end
  def test_outputs_summary_table_e155; assert_equal("0.0", worksheet.outputs_summary_table_e155); end
  def test_outputs_summary_table_f155; assert_equal("0.0", worksheet.outputs_summary_table_f155); end
  def test_outputs_summary_table_g155; assert_equal("", worksheet.outputs_summary_table_g155); end
  def test_outputs_summary_table_c156; assert_equal("IPCC emissions sector G.1A (Gt CO2)", worksheet.outputs_summary_table_c156); end
  def test_outputs_summary_table_d156; assert_equal("Gt CO2", worksheet.outputs_summary_table_d156); end
  def test_outputs_summary_table_e156; assert_equal("6.8", worksheet.outputs_summary_table_e156); end
  def test_outputs_summary_table_f156; assert_equal("11.1", worksheet.outputs_summary_table_f156); end
  def test_outputs_summary_table_g156; assert_equal("64%", worksheet.outputs_summary_table_g156); end
  def test_outputs_summary_table_c157; assert_equal("IPCC emissions sector G.2 (Gt CO2)", worksheet.outputs_summary_table_c157); end
  def test_outputs_summary_table_d157; assert_equal("Gt CO2", worksheet.outputs_summary_table_d157); end
  def test_outputs_summary_table_e157; assert_equal("2.4", worksheet.outputs_summary_table_e157); end
  def test_outputs_summary_table_f157; assert_equal("3.9", worksheet.outputs_summary_table_f157); end
  def test_outputs_summary_table_g157; assert_equal("65%", worksheet.outputs_summary_table_g157); end
  def test_outputs_summary_table_b159; assert_equal("Land", worksheet.outputs_summary_table_b159); end
  def test_outputs_summary_table_c159; assert_equal("Productive land for forest", worksheet.outputs_summary_table_c159); end
  def test_outputs_summary_table_d159; assert_equal("% of unallocated land", worksheet.outputs_summary_table_d159); end
  def test_outputs_summary_table_e159; assert_equal("48%", worksheet.outputs_summary_table_e159); end
  def test_outputs_summary_table_f159; assert_equal("48%", worksheet.outputs_summary_table_f159); end
  def test_outputs_summary_table_g159; assert_equal("0%", worksheet.outputs_summary_table_g159); end
  def test_outputs_summary_table_c160; assert_equal("Productive land for bioenergy", worksheet.outputs_summary_table_c160); end
  def test_outputs_summary_table_d160; assert_equal("% of unallocated land", worksheet.outputs_summary_table_d160); end
  def test_outputs_summary_table_e160; assert_equal("40%", worksheet.outputs_summary_table_e160); end
  def test_outputs_summary_table_f160; assert_equal("40%", worksheet.outputs_summary_table_f160); end
  def test_outputs_summary_table_g160; assert_equal("0%", worksheet.outputs_summary_table_g160); end
  def test_outputs_summary_table_c161; assert_equal("Land for animals (M ha)", worksheet.outputs_summary_table_c161); end
  def test_outputs_summary_table_d161; assert_equal("M ha", worksheet.outputs_summary_table_d161); end
  def test_outputs_summary_table_e161; assert_equal("3,363", worksheet.outputs_summary_table_e161); end
  def test_outputs_summary_table_f161; assert_equal("3,489", worksheet.outputs_summary_table_f161); end
  def test_outputs_summary_table_g161; assert_equal("4%", worksheet.outputs_summary_table_g161); end
  def test_outputs_summary_table_c162; assert_equal("Land for food crops (M ha)", worksheet.outputs_summary_table_c162); end
  def test_outputs_summary_table_d162; assert_equal("M ha", worksheet.outputs_summary_table_d162); end
  def test_outputs_summary_table_e162; assert_equal("1,443", worksheet.outputs_summary_table_e162); end
  def test_outputs_summary_table_f162; assert_equal("1,560", worksheet.outputs_summary_table_f162); end
  def test_outputs_summary_table_g162; assert_equal("8%", worksheet.outputs_summary_table_g162); end
  def test_outputs_summary_table_c163; assert_equal("Land for non-food crops  (M ha)", worksheet.outputs_summary_table_c163); end
  def test_outputs_summary_table_d163; assert_equal("M ha", worksheet.outputs_summary_table_d163); end
  def test_outputs_summary_table_e163; assert_equal("60", worksheet.outputs_summary_table_e163); end
  def test_outputs_summary_table_f163; assert_equal("57", worksheet.outputs_summary_table_f163); end
  def test_outputs_summary_table_g163; assert_equal("-5%", worksheet.outputs_summary_table_g163); end
  def test_outputs_summary_table_c164; assert_equal("Forest (M ha)", worksheet.outputs_summary_table_c164); end
  def test_outputs_summary_table_d164; assert_equal("M ha", worksheet.outputs_summary_table_d164); end
  def test_outputs_summary_table_e164; assert_equal("3,753", worksheet.outputs_summary_table_e164); end
  def test_outputs_summary_table_f164; assert_equal("3,165", worksheet.outputs_summary_table_f164); end
  def test_outputs_summary_table_g164; assert_equal("-16%", worksheet.outputs_summary_table_g164); end
  def test_outputs_summary_table_c165; assert_equal("Commercial forest (M ha)", worksheet.outputs_summary_table_c165); end
  def test_outputs_summary_table_d165; assert_equal("M ha", worksheet.outputs_summary_table_d165); end
  def test_outputs_summary_table_e165; assert_equal("274", worksheet.outputs_summary_table_e165); end
  def test_outputs_summary_table_f165; assert_equal("500", worksheet.outputs_summary_table_f165); end
  def test_outputs_summary_table_g165; assert_equal("82%", worksheet.outputs_summary_table_g165); end
  def test_outputs_summary_table_c166; assert_equal("Land for energy crops (M ha)", worksheet.outputs_summary_table_c166); end
  def test_outputs_summary_table_d166; assert_equal("M ha", worksheet.outputs_summary_table_d166); end
  def test_outputs_summary_table_e166; assert_equal("98", worksheet.outputs_summary_table_e166); end
  def test_outputs_summary_table_f166; assert_equal("98", worksheet.outputs_summary_table_f166); end
  def test_outputs_summary_table_g166; assert_equal("0%", worksheet.outputs_summary_table_g166); end
  def test_outputs_summary_table_c167; assert_equal("Natural grassland (M ha)", worksheet.outputs_summary_table_c167); end
  def test_outputs_summary_table_d167; assert_equal("M ha", worksheet.outputs_summary_table_d167); end
  def test_outputs_summary_table_e167; assert_equal("0", worksheet.outputs_summary_table_e167); end
  def test_outputs_summary_table_f167; assert_equal("0", worksheet.outputs_summary_table_f167); end
  def test_outputs_summary_table_g167; assert_equal("", worksheet.outputs_summary_table_g167); end
  def test_outputs_summary_table_c168; assert_equal("Settlements and infrastructure (M ha)", worksheet.outputs_summary_table_c168); end
  def test_outputs_summary_table_d168; assert_equal("M ha", worksheet.outputs_summary_table_d168); end
  def test_outputs_summary_table_e168; assert_equal("245", worksheet.outputs_summary_table_e168); end
  def test_outputs_summary_table_f168; assert_equal("368", worksheet.outputs_summary_table_f168); end
  def test_outputs_summary_table_g168; assert_equal("50%", worksheet.outputs_summary_table_g168); end
  def test_outputs_summary_table_c169; assert_equal("Desert, ice etc (M ha)", worksheet.outputs_summary_table_c169); end
  def test_outputs_summary_table_d169; assert_equal("M ha", worksheet.outputs_summary_table_d169); end
  def test_outputs_summary_table_e169; assert_equal("3,836", worksheet.outputs_summary_table_e169); end
  def test_outputs_summary_table_f169; assert_equal("3,836", worksheet.outputs_summary_table_f169); end
  def test_outputs_summary_table_g169; assert_equal("0%", worksheet.outputs_summary_table_g169); end
  def test_outputs_summary_table_c170; assert_equal("% of productive land used for bioenergy", worksheet.outputs_summary_table_c170); end
  def test_outputs_summary_table_d170; assert_equal("% of all productive land (M ha)", worksheet.outputs_summary_table_d170); end
  def test_outputs_summary_table_e170; assert_equal("1.1%", worksheet.outputs_summary_table_e170); end
  def test_outputs_summary_table_f170; assert_equal("1.1%", worksheet.outputs_summary_table_f170); end
  def test_outputs_summary_table_g170; assert_equal("0%", worksheet.outputs_summary_table_g170); end
  def test_outputs_summary_table_c171; assert_equal("% of productive land used for food (livestock and food crops)", worksheet.outputs_summary_table_c171); end
  def test_outputs_summary_table_d171; assert_equal("% of all productive land (M ha)", worksheet.outputs_summary_table_d171); end
  def test_outputs_summary_table_e171; assert_equal("52.0%", worksheet.outputs_summary_table_e171); end
  def test_outputs_summary_table_f171; assert_equal("54.7%", worksheet.outputs_summary_table_f171); end
  def test_outputs_summary_table_g171; assert_equal("5%", worksheet.outputs_summary_table_g171); end
  def test_outputs_summary_table_c172; assert_equal("% of productive land used for commercial forestry", worksheet.outputs_summary_table_c172); end
  def test_outputs_summary_table_d172; assert_equal("% of all productive land (M ha)", worksheet.outputs_summary_table_d172); end
  def test_outputs_summary_table_e172; assert_equal("3.0%", worksheet.outputs_summary_table_e172); end
  def test_outputs_summary_table_f172; assert_equal("5.4%", worksheet.outputs_summary_table_f172); end
  def test_outputs_summary_table_g172; assert_equal("82%", worksheet.outputs_summary_table_g172); end
  def test_outputs_summary_table_c173; assert_equal("% of productive land used for native forest", worksheet.outputs_summary_table_c173); end
  def test_outputs_summary_table_d173; assert_equal("% of all productive land (M ha)", worksheet.outputs_summary_table_d173); end
  def test_outputs_summary_table_e173; assert_equal("40.6%", worksheet.outputs_summary_table_e173); end
  def test_outputs_summary_table_f173; assert_equal("34.3%", worksheet.outputs_summary_table_f173); end
  def test_outputs_summary_table_g173; assert_equal("-16%", worksheet.outputs_summary_table_g173); end
  def test_outputs_summary_table_c174; assert_equal("Total productive land (all excluding desert, ice) (M ha)", worksheet.outputs_summary_table_c174); end
  def test_outputs_summary_table_d174; assert_equal("M ha", worksheet.outputs_summary_table_d174); end
  def test_outputs_summary_table_e174; assert_equal("9,236", worksheet.outputs_summary_table_e174); end
  def test_outputs_summary_table_f174; assert_equal("9,236", worksheet.outputs_summary_table_f174); end
  def test_outputs_summary_table_g174; assert_equal("0%", worksheet.outputs_summary_table_g174); end
  def test_outputs_summary_table_c175; assert_equal("% of land used for food (livestock)", worksheet.outputs_summary_table_c175); end
  def test_outputs_summary_table_d175; assert_equal("% of all productive land ()", worksheet.outputs_summary_table_d175); end
  def test_outputs_summary_table_e175; assert_equal("36.4%", worksheet.outputs_summary_table_e175); end
  def test_outputs_summary_table_f175; assert_equal("37.8%", worksheet.outputs_summary_table_f175); end
  def test_outputs_summary_table_g175; assert_equal("4%", worksheet.outputs_summary_table_g175); end
  def test_outputs_summary_table_b176; assert_equal("Land", worksheet.outputs_summary_table_b176); end
  def test_outputs_summary_table_c176; assert_equal("Crop yields (EJ / M ha / year)", worksheet.outputs_summary_table_c176); end
  def test_outputs_summary_table_d176; assert_equal("EJ / M ha / year", worksheet.outputs_summary_table_d176); end
  def test_outputs_summary_table_e176; assert_equal("0.03", worksheet.outputs_summary_table_e176); end
  def test_outputs_summary_table_f176; assert_equal("0.04", worksheet.outputs_summary_table_f176); end
  def test_outputs_summary_table_g176; assert_equal("28%", worksheet.outputs_summary_table_g176); end
  def test_outputs_summary_table_c177; assert_equal("Crop yields (W/m2)", worksheet.outputs_summary_table_c177); end
  def test_outputs_summary_table_d177; assert_equal("W/m2", worksheet.outputs_summary_table_d177); end
  def test_outputs_summary_table_e177; assert_equal("0.10", worksheet.outputs_summary_table_e177); end
  def test_outputs_summary_table_f177; assert_equal("0.13", worksheet.outputs_summary_table_f177); end
  def test_outputs_summary_table_g177; assert_equal("28%", worksheet.outputs_summary_table_g177); end
  def test_outputs_summary_table_c178; assert_equal("Livestock yields for cows and other bovines (% increase from 2011 in non-intensive animal yields and carrying capacity of pasture)", worksheet.outputs_summary_table_c178); end
  def test_outputs_summary_table_d178; assert_equal("% increase from 2011 in non-intensive animal yields (animals per area) and carrying capacity of pasture", worksheet.outputs_summary_table_d178); end
  def test_outputs_summary_table_e178; assert_equal("0.0%", worksheet.outputs_summary_table_e178); end
  def test_outputs_summary_table_f178; assert_equal("60.0%", worksheet.outputs_summary_table_f178); end
  def test_outputs_summary_table_g178; assert_equal("", worksheet.outputs_summary_table_g178); end
  def test_outputs_summary_table_c179; assert_equal("Intensification of animals (feedlot systems)", worksheet.outputs_summary_table_c179); end
  def test_outputs_summary_table_d179; assert_equal("Increase in energy crop yields (NPP) and change in crop mix from base year", worksheet.outputs_summary_table_d179); end
  def test_outputs_summary_table_e179; assert_equal("12.1%", worksheet.outputs_summary_table_e179); end
  def test_outputs_summary_table_f179; assert_equal("26.7%", worksheet.outputs_summary_table_f179); end
  def test_outputs_summary_table_g179; assert_equal("120%", worksheet.outputs_summary_table_g179); end
  def test_outputs_summary_table_c180; assert_equal("Emissions saved by speculative GHG removal technologies (Gt CO2)", worksheet.outputs_summary_table_c180); end
  def test_outputs_summary_table_d180; assert_equal("Gt CO2", worksheet.outputs_summary_table_d180); end
  def test_outputs_summary_table_e180; assert_equal("0.0", worksheet.outputs_summary_table_e180); end
  def test_outputs_summary_table_f180; assert_equal("0.0", worksheet.outputs_summary_table_f180); end
  def test_outputs_summary_table_g180; assert_equal("", worksheet.outputs_summary_table_g180); end
  def test_outputs_summary_table_b183; assert_equal("Cost", worksheet.outputs_summary_table_b183); end
  def test_outputs_summary_table_c183; assert_equal("Cost in 2050 - point estimate ($bn)", worksheet.outputs_summary_table_c183); end
  def test_outputs_summary_table_d183; assert_equal("$bn", worksheet.outputs_summary_table_d183); end
  def test_outputs_summary_table_e183; assert_equal("n / a", worksheet.outputs_summary_table_e183); end
  def test_outputs_summary_table_f183; assert_equal("4424.8", worksheet.outputs_summary_table_f183); end
  def test_outputs_summary_table_g183; assert_equal("", worksheet.outputs_summary_table_g183); end
  def test_outputs_summary_table_c184; assert_equal("Cost in 2050 - point estimate ($bn / year)", worksheet.outputs_summary_table_c184); end
  def test_outputs_summary_table_d184; assert_equal("$bn / year", worksheet.outputs_summary_table_d184); end
  def test_outputs_summary_table_e184; assert_equal("n / a", worksheet.outputs_summary_table_e184); end
  def test_outputs_summary_table_f184; assert_equal("68484.4", worksheet.outputs_summary_table_f184); end
  def test_outputs_summary_table_g184; assert_equal("", worksheet.outputs_summary_table_g184); end
  def test_outputs_summary_table_c185; assert_equal("Cost in 2050 - high estimate ($bn / year)", worksheet.outputs_summary_table_c185); end
  def test_outputs_summary_table_d185; assert_equal("$bn / year", worksheet.outputs_summary_table_d185); end
  def test_outputs_summary_table_e185; assert_equal("n / a", worksheet.outputs_summary_table_e185); end
  def test_outputs_summary_table_f185; assert_equal("101100.7", worksheet.outputs_summary_table_f185); end
  def test_outputs_summary_table_g185; assert_equal("", worksheet.outputs_summary_table_g185); end
  def test_outputs_summary_table_c186; assert_equal("Cost in 2050 - low estimate ($bn / year)", worksheet.outputs_summary_table_c186); end
  def test_outputs_summary_table_d186; assert_equal("$bn / year", worksheet.outputs_summary_table_d186); end
  def test_outputs_summary_table_e186; assert_equal("n / a", worksheet.outputs_summary_table_e186); end
  def test_outputs_summary_table_f186; assert_equal("50103.5", worksheet.outputs_summary_table_f186); end
  def test_outputs_summary_table_g186; assert_equal("", worksheet.outputs_summary_table_g186); end
  def test_outputs_summary_table_c187; assert_equal("Fuel tax rate - coal", worksheet.outputs_summary_table_c187); end
  def test_outputs_summary_table_d187; assert_equal("%", worksheet.outputs_summary_table_d187); end
  def test_outputs_summary_table_e187; assert_equal("n / a", worksheet.outputs_summary_table_e187); end
  def test_outputs_summary_table_f187; assert_equal("39.0%", worksheet.outputs_summary_table_f187); end
  def test_outputs_summary_table_g187; assert_equal("", worksheet.outputs_summary_table_g187); end
  def test_outputs_summary_table_c188; assert_equal("Fuel tax rate - oil", worksheet.outputs_summary_table_c188); end
  def test_outputs_summary_table_d188; assert_equal("%", worksheet.outputs_summary_table_d188); end
  def test_outputs_summary_table_e188; assert_equal("n / a", worksheet.outputs_summary_table_e188); end
  def test_outputs_summary_table_f188; assert_equal("67.0%", worksheet.outputs_summary_table_f188); end
  def test_outputs_summary_table_g188; assert_equal("", worksheet.outputs_summary_table_g188); end
  def test_outputs_summary_table_c189; assert_equal("Fuel tax rate - gas", worksheet.outputs_summary_table_c189); end
  def test_outputs_summary_table_d189; assert_equal("%", worksheet.outputs_summary_table_d189); end
  def test_outputs_summary_table_e189; assert_equal("n / a", worksheet.outputs_summary_table_e189); end
  def test_outputs_summary_table_f189; assert_equal("60.0%", worksheet.outputs_summary_table_f189); end
  def test_outputs_summary_table_g189; assert_equal("", worksheet.outputs_summary_table_g189); end
  def test_outputs_summary_table_c190; assert_equal("Fuel cost (excluding tax) - coal", worksheet.outputs_summary_table_c190); end
  def test_outputs_summary_table_d190; assert_equal("$bn", worksheet.outputs_summary_table_d190); end
  def test_outputs_summary_table_e190; assert_equal("n / a", worksheet.outputs_summary_table_e190); end
  def test_outputs_summary_table_f190; assert_equal("658.2", worksheet.outputs_summary_table_f190); end
  def test_outputs_summary_table_g190; assert_equal("", worksheet.outputs_summary_table_g190); end
  def test_outputs_summary_table_c191; assert_equal("Fuel cost (excluding tax) - oil", worksheet.outputs_summary_table_c191); end
  def test_outputs_summary_table_d191; assert_equal("$bn", worksheet.outputs_summary_table_d191); end
  def test_outputs_summary_table_e191; assert_equal("n / a", worksheet.outputs_summary_table_e191); end
  def test_outputs_summary_table_f191; assert_equal("2447.7", worksheet.outputs_summary_table_f191); end
  def test_outputs_summary_table_g191; assert_equal("", worksheet.outputs_summary_table_g191); end
  def test_outputs_summary_table_c192; assert_equal("Fuel cost (excluding tax) - gas", worksheet.outputs_summary_table_c192); end
  def test_outputs_summary_table_d192; assert_equal("$bn", worksheet.outputs_summary_table_d192); end
  def test_outputs_summary_table_e192; assert_equal("n / a", worksheet.outputs_summary_table_e192); end
  def test_outputs_summary_table_f192; assert_equal("871.0", worksheet.outputs_summary_table_f192); end
  def test_outputs_summary_table_g192; assert_equal("", worksheet.outputs_summary_table_g192); end
  def test_outputs_summary_table_c193; assert_equal("Tax amount paid to exporters - coal", worksheet.outputs_summary_table_c193); end
  def test_outputs_summary_table_d193; assert_equal("$bn", worksheet.outputs_summary_table_d193); end
  def test_outputs_summary_table_e193; assert_equal("n / a", worksheet.outputs_summary_table_e193); end
  def test_outputs_summary_table_f193; assert_equal("420.8", worksheet.outputs_summary_table_f193); end
  def test_outputs_summary_table_g193; assert_equal("", worksheet.outputs_summary_table_g193); end
  def test_outputs_summary_table_c194; assert_equal("Tax amount paid to exporters - oil", worksheet.outputs_summary_table_c194); end
  def test_outputs_summary_table_d194; assert_equal("$bn", worksheet.outputs_summary_table_d194); end
  def test_outputs_summary_table_e194; assert_equal("n / a", worksheet.outputs_summary_table_e194); end
  def test_outputs_summary_table_f194; assert_equal("4969.6", worksheet.outputs_summary_table_f194); end
  def test_outputs_summary_table_g194; assert_equal("", worksheet.outputs_summary_table_g194); end
  def test_outputs_summary_table_c195; assert_equal("Tax amount paid to exporters - gas", worksheet.outputs_summary_table_c195); end
  def test_outputs_summary_table_d195; assert_equal("$bn", worksheet.outputs_summary_table_d195); end
  def test_outputs_summary_table_e195; assert_equal("n / a", worksheet.outputs_summary_table_e195); end
  def test_outputs_summary_table_f195; assert_equal("1306.5", worksheet.outputs_summary_table_f195); end
  def test_outputs_summary_table_g195; assert_equal("", worksheet.outputs_summary_table_g195); end
  def test_outputs_summary_table_c196; assert_equal("Checking calculations below", worksheet.outputs_summary_table_c196); end
  def test_outputs_summary_table_c197; assert_equal("Fuel amount paid (if tax added back in) - coal", worksheet.outputs_summary_table_c197); end
  def test_outputs_summary_table_d197; assert_equal("$bn", worksheet.outputs_summary_table_d197); end
  def test_outputs_summary_table_f197; assert_equal("1079.0", worksheet.outputs_summary_table_f197); end
  def test_outputs_summary_table_c198; assert_equal("Fuel amount paid (if tax added back in) - oil", worksheet.outputs_summary_table_c198); end
  def test_outputs_summary_table_d198; assert_equal("$bn", worksheet.outputs_summary_table_d198); end
  def test_outputs_summary_table_f198; assert_equal("7417.4", worksheet.outputs_summary_table_f198); end
  def test_outputs_summary_table_c199; assert_equal("Fuel amount paid (if tax added back in) - gas", worksheet.outputs_summary_table_c199); end
  def test_outputs_summary_table_d199; assert_equal("$bn", worksheet.outputs_summary_table_d199); end
  def test_outputs_summary_table_f199; assert_equal("2177.4", worksheet.outputs_summary_table_f199); end
  def test_outputs_summary_table_c200; assert_equal("Checking - coal", worksheet.outputs_summary_table_c200); end
  def test_outputs_summary_table_d200; assert_equal("%", worksheet.outputs_summary_table_d200); end
  def test_outputs_summary_table_f200; assert_equal("0.4", worksheet.outputs_summary_table_f200); end
  def test_outputs_summary_table_c201; assert_equal("Checking - oil", worksheet.outputs_summary_table_c201); end
  def test_outputs_summary_table_d201; assert_equal("%", worksheet.outputs_summary_table_d201); end
  def test_outputs_summary_table_f201; assert_equal("0.7", worksheet.outputs_summary_table_f201); end
  def test_outputs_summary_table_c202; assert_equal("Checking - gas", worksheet.outputs_summary_table_c202); end
  def test_outputs_summary_table_d202; assert_equal("%", worksheet.outputs_summary_table_d202); end
  def test_outputs_summary_table_f202; assert_equal("0.6", worksheet.outputs_summary_table_f202); end
  def test_outputs_energy_d62; assert_equal("Transport", worksheet.outputs_energy_d62); end
  def test_outputs_energy_f62; assert_equal("Excludes pipeline transport", worksheet.outputs_energy_f62); end
  def test_outputs_energy_h62; assert_in_epsilon(45.51369989, worksheet.outputs_energy_h62, 0.002); end
  def test_outputs_energy_i62; assert_in_epsilon(51.52193813, worksheet.outputs_energy_i62, 0.002); end
  def test_outputs_energy_j62; assert_in_epsilon(54.43186451, worksheet.outputs_energy_j62, 0.002); end
  def test_outputs_energy_k62; assert_in_epsilon(63.75351718, worksheet.outputs_energy_k62, 0.002); end
  def test_outputs_energy_l62; assert_in_epsilon(69.78995546, worksheet.outputs_energy_l62, 0.002); end
  def test_outputs_energy_m62; assert_in_epsilon(79.59210571, worksheet.outputs_energy_m62, 0.002); end
  def test_outputs_energy_n62; assert_in_epsilon(89.33971209, worksheet.outputs_energy_n62, 0.002); end
  def test_outputs_energy_o62; assert_in_epsilon(98.25619647, worksheet.outputs_energy_o62, 0.002); end
  def test_outputs_energy_p62; assert_in_epsilon(99.72109669, worksheet.outputs_energy_p62, 0.002); end
  def test_outputs_energy_r62; assert_in_epsilon(100.3599203354344, worksheet.outputs_energy_r62, 0.002); end
  def test_outputs_energy_s62; assert_in_epsilon(110.63572170596552, worksheet.outputs_energy_s62, 0.002); end
  def test_outputs_energy_t62; assert_in_epsilon(126.3892418269123, worksheet.outputs_energy_t62, 0.002); end
  def test_outputs_energy_u62; assert_in_epsilon(138.36456916018267, worksheet.outputs_energy_u62, 0.002); end
  def test_outputs_energy_v62; assert_in_epsilon(148.02782776845245, worksheet.outputs_energy_v62, 0.002); end
  def test_outputs_energy_w62; assert_in_epsilon(154.6511759569472, worksheet.outputs_energy_w62, 0.002); end
  def test_outputs_energy_x62; assert_in_epsilon(160.23904094572381, worksheet.outputs_energy_x62, 0.002); end
  def test_outputs_energy_y62; assert_in_epsilon(164.5752318301581, worksheet.outputs_energy_y62, 0.002); end
  def test_outputs_energy_z62; assert_in_epsilon(168.68166832027558, worksheet.outputs_energy_z62, 0.002); end
  def test_outputs_energy_d64; assert_equal("Residential, public and commercial", worksheet.outputs_energy_d64); end
  def test_outputs_energy_h64; assert_in_epsilon(64.751263, worksheet.outputs_energy_h64, 0.002); end
  def test_outputs_energy_i64; assert_in_epsilon(71.065102, worksheet.outputs_energy_i64, 0.002); end
  def test_outputs_energy_j64; assert_in_epsilon(78.65053599999999, worksheet.outputs_energy_j64, 0.002); end
  def test_outputs_energy_k64; assert_in_epsilon(83.372944, worksheet.outputs_energy_k64, 0.002); end
  def test_outputs_energy_l64; assert_in_epsilon(93.688429, worksheet.outputs_energy_l64, 0.002); end
  def test_outputs_energy_m64; assert_in_epsilon(99.817678, worksheet.outputs_energy_m64, 0.002); end
  def test_outputs_energy_n64; assert_in_epsilon(108.462211, worksheet.outputs_energy_n64, 0.002); end
  def test_outputs_energy_o64; assert_in_epsilon(116.897329, worksheet.outputs_energy_o64, 0.002); end
  def test_outputs_energy_p64; assert_in_epsilon(116.729656, worksheet.outputs_energy_p64, 0.002); end
  def test_outputs_energy_r64; assert_in_epsilon(116.28805541134336, worksheet.outputs_energy_r64, 0.002); end
  def test_outputs_energy_s64; assert_in_epsilon(123.95210725734147, worksheet.outputs_energy_s64, 0.002); end
  def test_outputs_energy_t64; assert_in_epsilon(132.5056433840281, worksheet.outputs_energy_t64, 0.002); end
  def test_outputs_energy_u64; assert_in_epsilon(140.96519868488912, worksheet.outputs_energy_u64, 0.002); end
  def test_outputs_energy_v64; assert_in_epsilon(149.2772965864375, worksheet.outputs_energy_v64, 0.002); end
  def test_outputs_energy_w64; assert_in_epsilon(157.43165669818228, worksheet.outputs_energy_w64, 0.002); end
  def test_outputs_energy_x64; assert_in_epsilon(165.3101007249631, worksheet.outputs_energy_x64, 0.002); end
  def test_outputs_energy_y64; assert_in_epsilon(172.93239678079533, worksheet.outputs_energy_y64, 0.002); end
  def test_outputs_energy_z64; assert_in_epsilon(180.11949044515197, worksheet.outputs_energy_z64, 0.002); end
  def test_outputs_energy_d66; assert_equal("Manufacturing", worksheet.outputs_energy_d66); end
  def test_outputs_energy_h66; assert_in_epsilon(77.74494084, worksheet.outputs_energy_h66, 0.002); end
  def test_outputs_energy_i66; assert_in_epsilon(90.57849988, worksheet.outputs_energy_i66, 0.002); end
  def test_outputs_energy_j66; assert_in_epsilon(89.51563572, worksheet.outputs_energy_j66, 0.002); end
  def test_outputs_energy_k66; assert_in_epsilon(96.13700115, worksheet.outputs_energy_k66, 0.002); end
  def test_outputs_energy_l66; assert_in_epsilon(97.93670919, worksheet.outputs_energy_l66, 0.002); end
  def test_outputs_energy_m66; assert_in_epsilon(105.12064196, worksheet.outputs_energy_m66, 0.002); end
  def test_outputs_energy_n66; assert_in_epsilon(120.32151098, worksheet.outputs_energy_n66, 0.002); end
  def test_outputs_energy_o66; assert_in_epsilon(137.98756298, worksheet.outputs_energy_o66, 0.002); end
  def test_outputs_energy_p66; assert_in_epsilon(143.27425753, worksheet.outputs_energy_p66, 0.002); end
  def test_outputs_energy_r66; assert_in_epsilon(143.34762076351507, worksheet.outputs_energy_r66, 0.002); end
  def test_outputs_energy_s66; assert_in_epsilon(149.37408954479702, worksheet.outputs_energy_s66, 0.002); end
  def test_outputs_energy_t66; assert_in_epsilon(164.58973312009505, worksheet.outputs_energy_t66, 0.002); end
  def test_outputs_energy_u66; assert_in_epsilon(178.52791407842312, worksheet.outputs_energy_u66, 0.002); end
  def test_outputs_energy_v66; assert_in_epsilon(193.2297890975425, worksheet.outputs_energy_v66, 0.002); end
  def test_outputs_energy_w66; assert_in_epsilon(208.12818236656892, worksheet.outputs_energy_w66, 0.002); end
  def test_outputs_energy_x66; assert_in_epsilon(225.00378378999082, worksheet.outputs_energy_x66, 0.002); end
  def test_outputs_energy_y66; assert_in_epsilon(242.57140049480012, worksheet.outputs_energy_y66, 0.002); end
  def test_outputs_energy_z66; assert_in_epsilon(262.41941667813273, worksheet.outputs_energy_z66, 0.002); end
  def test_outputs_energy_d68; assert_equal("Other end uses", worksheet.outputs_energy_d68); end
  def test_outputs_energy_h68; assert_in_epsilon(11.382796, worksheet.outputs_energy_h68, 0.002); end
  def test_outputs_energy_i68; assert_in_epsilon(12.904924, worksheet.outputs_energy_i68, 0.002); end
  def test_outputs_energy_j68; assert_in_epsilon(13.314676, worksheet.outputs_energy_j68, 0.002); end
  def test_outputs_energy_k68; assert_in_epsilon(18.042997, worksheet.outputs_energy_k68, 0.002); end
  def test_outputs_energy_l68; assert_in_epsilon(11.223171, worksheet.outputs_energy_l68, 0.002); end
  def test_outputs_energy_m68; assert_in_epsilon(9.567384, worksheet.outputs_energy_m68, 0.002); end
  def test_outputs_energy_n68; assert_in_epsilon(11.61567, worksheet.outputs_energy_n68, 0.002); end
  def test_outputs_energy_o68; assert_in_epsilon(12.64839, worksheet.outputs_energy_o68, 0.002); end
  def test_outputs_energy_p68; assert_in_epsilon(12.784689, worksheet.outputs_energy_p68, 0.002); end
  def test_outputs_energy_r68; assert_in_epsilon(12.417000000000002, worksheet.outputs_energy_r68, 0.002); end
  def test_outputs_energy_s68; assert_in_epsilon(12.678428173976634, worksheet.outputs_energy_s68, 0.002); end
  def test_outputs_energy_t68; assert_in_epsilon(13.323623780649374, worksheet.outputs_energy_t68, 0.002); end
  def test_outputs_energy_u68; assert_in_epsilon(13.869947455517448, worksheet.outputs_energy_u68, 0.002); end
  def test_outputs_energy_v68; assert_in_epsilon(14.382601796954212, worksheet.outputs_energy_v68, 0.002); end
  def test_outputs_energy_w68; assert_in_epsilon(14.862415732717556, worksheet.outputs_energy_w68, 0.002); end
  def test_outputs_energy_x68; assert_in_epsilon(15.355929751881188, worksheet.outputs_energy_x68, 0.002); end
  def test_outputs_energy_y68; assert_in_epsilon(15.8114050658046, worksheet.outputs_energy_y68, 0.002); end
  def test_outputs_energy_z68; assert_in_epsilon(16.300950034647663, worksheet.outputs_energy_z68, 0.002); end
  def test_outputs_energy_d70; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_d70); end
  def test_outputs_energy_h70; assert_in_delta(0.0, (worksheet.outputs_energy_h70||0), 0.002); end
  def test_outputs_energy_i70; assert_in_delta(0.0, (worksheet.outputs_energy_i70||0), 0.002); end
  def test_outputs_energy_j70; assert_in_delta(0.0, (worksheet.outputs_energy_j70||0), 0.002); end
  def test_outputs_energy_k70; assert_in_delta(0.0, (worksheet.outputs_energy_k70||0), 0.002); end
  def test_outputs_energy_l70; assert_in_delta(0.0, (worksheet.outputs_energy_l70||0), 0.002); end
  def test_outputs_energy_m70; assert_in_delta(0.0, (worksheet.outputs_energy_m70||0), 0.002); end
  def test_outputs_energy_n70; assert_in_delta(0.0, (worksheet.outputs_energy_n70||0), 0.002); end
  def test_outputs_energy_o70; assert_in_delta(0.0, (worksheet.outputs_energy_o70||0), 0.002); end
  def test_outputs_energy_p70; assert_in_delta(0.0, (worksheet.outputs_energy_p70||0), 0.002); end
  def test_outputs_energy_r70; assert_in_delta(0.0, (worksheet.outputs_energy_r70||0), 0.002); end
  def test_outputs_energy_s70; assert_in_delta(0.0, (worksheet.outputs_energy_s70||0), 0.002); end
  def test_outputs_energy_t70; assert_in_delta(0.0, (worksheet.outputs_energy_t70||0), 0.002); end
  def test_outputs_energy_u70; assert_in_delta(0.0, (worksheet.outputs_energy_u70||0), 0.002); end
  def test_outputs_energy_v70; assert_in_delta(0.0, (worksheet.outputs_energy_v70||0), 0.002); end
  def test_outputs_energy_w70; assert_in_delta(0.0, (worksheet.outputs_energy_w70||0), 0.002); end
  def test_outputs_energy_x70; assert_in_delta(0.0, (worksheet.outputs_energy_x70||0), 0.002); end
  def test_outputs_energy_y70; assert_in_delta(0.0, (worksheet.outputs_energy_y70||0), 0.002); end
  def test_outputs_energy_z70; assert_in_delta(0.0, (worksheet.outputs_energy_z70||0), 0.002); end
  def test_outputs_energy_d110; assert_equal("Description", worksheet.outputs_energy_d110); end
  def test_outputs_energy_f110; assert_equal("Notes", worksheet.outputs_energy_f110); end
  def test_outputs_energy_h110; assert_equal("1975", worksheet.outputs_energy_h110); end
  def test_outputs_energy_i110; assert_equal("1980", worksheet.outputs_energy_i110); end
  def test_outputs_energy_j110; assert_equal("1985", worksheet.outputs_energy_j110); end
  def test_outputs_energy_k110; assert_equal("1990", worksheet.outputs_energy_k110); end
  def test_outputs_energy_l110; assert_equal("1995", worksheet.outputs_energy_l110); end
  def test_outputs_energy_m110; assert_equal("2000", worksheet.outputs_energy_m110); end
  def test_outputs_energy_n110; assert_equal("2005", worksheet.outputs_energy_n110); end
  def test_outputs_energy_o110; assert_in_epsilon(2010.0, worksheet.outputs_energy_o110, 0.002); end
  def test_outputs_energy_p110; assert_in_epsilon(2011.0, worksheet.outputs_energy_p110, 0.002); end
  def test_outputs_energy_r110; assert_in_epsilon(2011.0, worksheet.outputs_energy_r110, 0.002); end
  def test_outputs_energy_s110; assert_equal("2015", worksheet.outputs_energy_s110); end
  def test_outputs_energy_t110; assert_equal("2020", worksheet.outputs_energy_t110); end
  def test_outputs_energy_u110; assert_equal("2025", worksheet.outputs_energy_u110); end
  def test_outputs_energy_v110; assert_equal("2030", worksheet.outputs_energy_v110); end
  def test_outputs_energy_w110; assert_equal("2035", worksheet.outputs_energy_w110); end
  def test_outputs_energy_x110; assert_equal("2040", worksheet.outputs_energy_x110); end
  def test_outputs_energy_y110; assert_equal("2045", worksheet.outputs_energy_y110); end
  def test_outputs_energy_z110; assert_equal("2050", worksheet.outputs_energy_z110); end
  def test_outputs_energy_d111; assert_equal("Global nuclear fission", worksheet.outputs_energy_d111); end
  def test_outputs_energy_h111; assert_in_epsilon(4.19362582, worksheet.outputs_energy_h111, 0.002); end
  def test_outputs_energy_i111; assert_in_epsilon(7.8046283700000005, worksheet.outputs_energy_i111, 0.002); end
  def test_outputs_energy_j111; assert_in_epsilon(16.30822419, worksheet.outputs_energy_j111, 0.002); end
  def test_outputs_energy_k111; assert_in_epsilon(22.00642022, worksheet.outputs_energy_k111, 0.002); end
  def test_outputs_energy_l111; assert_in_epsilon(25.464435710000004, worksheet.outputs_energy_l111, 0.002); end
  def test_outputs_energy_m111; assert_in_epsilon(28.28553115, worksheet.outputs_energy_m111, 0.002); end
  def test_outputs_energy_n111; assert_in_epsilon(30.221805240000002, worksheet.outputs_energy_n111, 0.002); end
  def test_outputs_energy_o111; assert_in_epsilon(30.10136047, worksheet.outputs_energy_o111, 0.002); end
  def test_outputs_energy_p111; assert_in_epsilon(28.219279020000002, worksheet.outputs_energy_p111, 0.002); end
  def test_outputs_energy_r111; assert_in_epsilon(26.462850754774173, worksheet.outputs_energy_r111, 0.002); end
  def test_outputs_energy_s111; assert_in_epsilon(29.87001951581473, worksheet.outputs_energy_s111, 0.002); end
  def test_outputs_energy_t111; assert_in_epsilon(32.16856624518809, worksheet.outputs_energy_t111, 0.002); end
  def test_outputs_energy_u111; assert_in_epsilon(32.42272765606359, worksheet.outputs_energy_u111, 0.002); end
  def test_outputs_energy_v111; assert_in_epsilon(31.478476338411802, worksheet.outputs_energy_v111, 0.002); end
  def test_outputs_energy_w111; assert_in_epsilon(34.76682054691498, worksheet.outputs_energy_w111, 0.002); end
  def test_outputs_energy_x111; assert_in_epsilon(34.154679001157994, worksheet.outputs_energy_x111, 0.002); end
  def test_outputs_energy_y111; assert_in_epsilon(34.83757015518318, worksheet.outputs_energy_y111, 0.002); end
  def test_outputs_energy_z111; assert_in_epsilon(35.50481852710455, worksheet.outputs_energy_z111, 0.002); end
  def test_outputs_energy_d113; assert_equal("Global solar, wind, wave and tidal", worksheet.outputs_energy_d113); end
  def test_outputs_energy_h113; assert_in_delta(0.0020015000000000002, worksheet.outputs_energy_h113, 0.002); end
  def test_outputs_energy_i113; assert_in_delta(0.00299071, worksheet.outputs_energy_i113, 0.002); end
  def test_outputs_energy_j113; assert_in_delta(0.01511665, worksheet.outputs_energy_j113, 0.002); end
  def test_outputs_energy_k113; assert_in_delta(0.09888171, worksheet.outputs_energy_k113, 0.002); end
  def test_outputs_energy_l113; assert_in_delta(0.13671401, worksheet.outputs_energy_l113, 0.002); end
  def test_outputs_energy_m113; assert_in_delta(0.33011757999999997, worksheet.outputs_energy_m113, 0.002); end
  def test_outputs_energy_n113; assert_in_delta(0.6894200899999999, worksheet.outputs_energy_n113, 0.002); end
  def test_outputs_energy_o113; assert_in_epsilon(1.98106908, worksheet.outputs_energy_o113, 0.002); end
  def test_outputs_energy_p113; assert_in_epsilon(2.55947734, worksheet.outputs_energy_p113, 0.002); end
  def test_outputs_energy_r113; assert_in_epsilon(1.835384616144, worksheet.outputs_energy_r113, 0.002); end
  def test_outputs_energy_s113; assert_in_epsilon(3.446450807984755, worksheet.outputs_energy_s113, 0.002); end
  def test_outputs_energy_t113; assert_in_epsilon(4.853522560676694, worksheet.outputs_energy_t113, 0.002); end
  def test_outputs_energy_u113; assert_in_epsilon(5.809402501358291, worksheet.outputs_energy_u113, 0.002); end
  def test_outputs_energy_v113; assert_in_epsilon(7.117860722097449, worksheet.outputs_energy_v113, 0.002); end
  def test_outputs_energy_w113; assert_in_epsilon(7.674559948571148, worksheet.outputs_energy_w113, 0.002); end
  def test_outputs_energy_x113; assert_in_epsilon(9.592006823183443, worksheet.outputs_energy_x113, 0.002); end
  def test_outputs_energy_y113; assert_in_epsilon(14.625522668911524, worksheet.outputs_energy_y113, 0.002); end
  def test_outputs_energy_z113; assert_in_epsilon(18.46869501790979, worksheet.outputs_energy_z113, 0.002); end
  def test_outputs_energy_d115; assert_equal("Global geothermal", worksheet.outputs_energy_d115); end
  def test_outputs_energy_h115; assert_in_delta(0.30633308, worksheet.outputs_energy_h115, 0.002); end
  def test_outputs_energy_i115; assert_in_delta(0.51899125, worksheet.outputs_energy_i115, 0.002); end
  def test_outputs_energy_j115; assert_in_delta(0.87833525, worksheet.outputs_energy_j115, 0.002); end
  def test_outputs_energy_k115; assert_in_epsilon(1.42030705, worksheet.outputs_energy_k115, 0.002); end
  def test_outputs_energy_l115; assert_in_epsilon(1.64006674, worksheet.outputs_energy_l115, 0.002); end
  def test_outputs_energy_m115; assert_in_epsilon(2.1821505699999997, worksheet.outputs_energy_m115, 0.002); end
  def test_outputs_energy_n115; assert_in_epsilon(2.25915872, worksheet.outputs_energy_n115, 0.002); end
  def test_outputs_energy_o115; assert_in_epsilon(2.70416419, worksheet.outputs_energy_o115, 0.002); end
  def test_outputs_energy_p115; assert_in_epsilon(2.75792299, worksheet.outputs_energy_p115, 0.002); end
  def test_outputs_energy_r115; assert_in_epsilon(2.6331345863999998, worksheet.outputs_energy_r115, 0.002); end
  def test_outputs_energy_s115; assert_in_epsilon(3.333192775560331, worksheet.outputs_energy_s115, 0.002); end
  def test_outputs_energy_t115; assert_in_epsilon(4.05129719053816, worksheet.outputs_energy_t115, 0.002); end
  def test_outputs_energy_u115; assert_in_epsilon(4.604258176820889, worksheet.outputs_energy_u115, 0.002); end
  def test_outputs_energy_v115; assert_in_epsilon(5.397928321023374, worksheet.outputs_energy_v115, 0.002); end
  def test_outputs_energy_w115; assert_in_epsilon(8.324611130012148, worksheet.outputs_energy_w115, 0.002); end
  def test_outputs_energy_x115; assert_in_epsilon(10.340892269938646, worksheet.outputs_energy_x115, 0.002); end
  def test_outputs_energy_y115; assert_in_epsilon(14.435253893337357, worksheet.outputs_energy_y115, 0.002); end
  def test_outputs_energy_z115; assert_in_epsilon(18.07530311459353, worksheet.outputs_energy_z115, 0.002); end
  def test_outputs_energy_d117; assert_equal("Global hydro", worksheet.outputs_energy_d117); end
  def test_outputs_energy_h117; assert_in_epsilon(5.19828432, worksheet.outputs_energy_h117, 0.002); end
  def test_outputs_energy_i117; assert_in_epsilon(6.1818085300000005, worksheet.outputs_energy_i117, 0.002); end
  def test_outputs_energy_j117; assert_in_epsilon(7.10472662, worksheet.outputs_energy_j117, 0.002); end
  def test_outputs_energy_k117; assert_in_epsilon(7.721542830000001, worksheet.outputs_energy_k117, 0.002); end
  def test_outputs_energy_l117; assert_in_epsilon(8.93036678, worksheet.outputs_energy_l117, 0.002); end
  def test_outputs_energy_m117; assert_in_epsilon(9.43535406, worksheet.outputs_energy_m117, 0.002); end
  def test_outputs_energy_n117; assert_in_epsilon(10.548209940000001, worksheet.outputs_energy_n117, 0.002); end
  def test_outputs_energy_o117; assert_in_epsilon(12.39218819, worksheet.outputs_energy_o117, 0.002); end
  def test_outputs_energy_p117; assert_in_epsilon(12.56761896, worksheet.outputs_energy_p117, 0.002); end
  def test_outputs_energy_r117; assert_in_epsilon(13.16267496, worksheet.outputs_energy_r117, 0.002); end
  def test_outputs_energy_s117; assert_in_epsilon(18.319186799999997, worksheet.outputs_energy_s117, 0.002); end
  def test_outputs_energy_t117; assert_in_epsilon(19.092663576, worksheet.outputs_energy_t117, 0.002); end
  def test_outputs_energy_u117; assert_in_epsilon(19.757582208000002, worksheet.outputs_energy_u117, 0.002); end
  def test_outputs_energy_v117; assert_in_epsilon(20.429285724, worksheet.outputs_energy_v117, 0.002); end
  def test_outputs_energy_w117; assert_in_epsilon(21.100989239999997, worksheet.outputs_energy_w117, 0.002); end
  def test_outputs_energy_x117; assert_in_epsilon(21.4578741384, worksheet.outputs_energy_x117, 0.002); end
  def test_outputs_energy_y117; assert_in_epsilon(22.1906416104, worksheet.outputs_energy_y117, 0.002); end
  def test_outputs_energy_z117; assert_in_epsilon(22.984473038399997, worksheet.outputs_energy_z117, 0.002); end
  def test_outputs_energy_d119; assert_equal("Global bioenergy and waste", worksheet.outputs_energy_d119); end
  def test_outputs_energy_f119; assert_equal("Includes non-renewable waste", worksheet.outputs_energy_f119); end
  def test_outputs_energy_h119; assert_in_epsilon(27.98767366, worksheet.outputs_energy_h119, 0.002); end
  def test_outputs_energy_i119; assert_in_epsilon(31.29700324, worksheet.outputs_energy_i119, 0.002); end
  def test_outputs_energy_j119; assert_in_epsilon(34.98284341, worksheet.outputs_energy_j119, 0.002); end
  def test_outputs_energy_k119; assert_in_epsilon(37.95396458, worksheet.outputs_energy_k119, 0.002); end
  def test_outputs_energy_l119; assert_in_epsilon(40.54645287, worksheet.outputs_energy_l119, 0.002); end
  def test_outputs_energy_m119; assert_in_epsilon(43.24484074, worksheet.outputs_energy_m119, 0.002); end
  def test_outputs_energy_n119; assert_in_epsilon(47.20029634, worksheet.outputs_energy_n119, 0.002); end
  def test_outputs_energy_o119; assert_in_epsilon(54.22172151, worksheet.outputs_energy_o119, 0.002); end
  def test_outputs_energy_p119; assert_in_epsilon(54.93713229, worksheet.outputs_energy_p119, 0.002); end
  def test_outputs_energy_r119; assert_in_epsilon(54.95978748959785, worksheet.outputs_energy_r119, 0.002); end
  def test_outputs_energy_s119; assert_in_epsilon(55.385583047668646, worksheet.outputs_energy_s119, 0.002); end
  def test_outputs_energy_t119; assert_in_epsilon(56.51011658521453, worksheet.outputs_energy_t119, 0.002); end
  def test_outputs_energy_u119; assert_in_epsilon(57.52873223737874, worksheet.outputs_energy_u119, 0.002); end
  def test_outputs_energy_v119; assert_in_epsilon(58.572572928767954, worksheet.outputs_energy_v119, 0.002); end
  def test_outputs_energy_w119; assert_in_epsilon(59.958959456045314, worksheet.outputs_energy_w119, 0.002); end
  def test_outputs_energy_x119; assert_in_epsilon(61.312665582777974, worksheet.outputs_energy_x119, 0.002); end
  def test_outputs_energy_y119; assert_in_epsilon(63.235185284673236, worksheet.outputs_energy_y119, 0.002); end
  def test_outputs_energy_z119; assert_in_epsilon(65.0851904879884, worksheet.outputs_energy_z119, 0.002); end
  def test_outputs_energy_d121; assert_equal("Global heat", worksheet.outputs_energy_d121); end
  def test_outputs_energy_h121; assert_in_delta(0.0, (worksheet.outputs_energy_h121||0), 0.002); end
  def test_outputs_energy_i121; assert_in_delta(0.0, (worksheet.outputs_energy_i121||0), 0.002); end
  def test_outputs_energy_j121; assert_in_delta(0.0, (worksheet.outputs_energy_j121||0), 0.002); end
  def test_outputs_energy_k121; assert_in_delta(0.00596866, worksheet.outputs_energy_k121, 0.002); end
  def test_outputs_energy_l121; assert_in_delta(0.01832307, worksheet.outputs_energy_l121, 0.002); end
  def test_outputs_energy_m121; assert_in_delta(0.0302848, worksheet.outputs_energy_m121, 0.002); end
  def test_outputs_energy_n121; assert_in_delta(0.03805726, worksheet.outputs_energy_n121, 0.002); end
  def test_outputs_energy_o121; assert_in_delta(0.04253198, worksheet.outputs_energy_o121, 0.002); end
  def test_outputs_energy_p121; assert_in_delta(0.04491708, worksheet.outputs_energy_p121, 0.002); end
  def test_outputs_energy_r121; assert_in_epsilon(4.838497586627763, worksheet.outputs_energy_r121, 0.002); end
  def test_outputs_energy_s121; assert_in_epsilon(5.5624191672949586, worksheet.outputs_energy_s121, 0.002); end
  def test_outputs_energy_t121; assert_in_epsilon(6.480140989923419, worksheet.outputs_energy_t121, 0.002); end
  def test_outputs_energy_u121; assert_in_epsilon(7.444773673480817, worksheet.outputs_energy_u121, 0.002); end
  def test_outputs_energy_v121; assert_in_epsilon(8.437732211728308, worksheet.outputs_energy_v121, 0.002); end
  def test_outputs_energy_w121; assert_in_epsilon(9.425816566120496, worksheet.outputs_energy_w121, 0.002); end
  def test_outputs_energy_x121; assert_in_epsilon(10.415256698254726, worksheet.outputs_energy_x121, 0.002); end
  def test_outputs_energy_y121; assert_in_epsilon(11.366520423435665, worksheet.outputs_energy_y121, 0.002); end
  def test_outputs_energy_z121; assert_in_epsilon(12.290810526138456, worksheet.outputs_energy_z121, 0.002); end
  def test_outputs_energy_d123; assert_equal("Global coal and peat", worksheet.outputs_energy_d123); end
  def test_outputs_energy_h123; assert_in_epsilon(64.46762364, worksheet.outputs_energy_h123, 0.002); end
  def test_outputs_energy_i123; assert_in_epsilon(74.84613603, worksheet.outputs_energy_i123, 0.002); end
  def test_outputs_energy_j123; assert_in_epsilon(84.35058561, worksheet.outputs_energy_j123, 0.002); end
  def test_outputs_energy_k123; assert_in_epsilon(93.38481894, worksheet.outputs_energy_k123, 0.002); end
  def test_outputs_energy_l123; assert_in_epsilon(93.03324736, worksheet.outputs_energy_l123, 0.002); end
  def test_outputs_energy_m123; assert_in_epsilon(98.72034811, worksheet.outputs_energy_m123, 0.002); end
  def test_outputs_energy_n123; assert_in_epsilon(124.50467193, worksheet.outputs_energy_n123, 0.002); end
  def test_outputs_energy_o123; assert_in_epsilon(150.53606094, worksheet.outputs_energy_o123, 0.002); end
  def test_outputs_energy_p123; assert_in_epsilon(158.09611592, worksheet.outputs_energy_p123, 0.002); end
  def test_outputs_energy_r123; assert_in_epsilon(161.29270123067866, worksheet.outputs_energy_r123, 0.002); end
  def test_outputs_energy_s123; assert_in_epsilon(160.86062793405003, worksheet.outputs_energy_s123, 0.002); end
  def test_outputs_energy_t123; assert_in_epsilon(176.54132289338514, worksheet.outputs_energy_t123, 0.002); end
  def test_outputs_energy_u123; assert_in_epsilon(193.93380036709044, worksheet.outputs_energy_u123, 0.002); end
  def test_outputs_energy_v123; assert_in_epsilon(214.02974787025832, worksheet.outputs_energy_v123, 0.002); end
  def test_outputs_energy_w123; assert_in_epsilon(222.8369961455869, worksheet.outputs_energy_w123, 0.002); end
  def test_outputs_energy_x123; assert_in_epsilon(235.49294836909036, worksheet.outputs_energy_x123, 0.002); end
  def test_outputs_energy_y123; assert_in_epsilon(230.6217443493042, worksheet.outputs_energy_y123, 0.002); end
  def test_outputs_energy_z123; assert_in_epsilon(236.65677149014473, worksheet.outputs_energy_z123, 0.002); end
  def test_outputs_energy_d125; assert_equal("Global oil ", worksheet.outputs_energy_d125); end
  def test_outputs_energy_h125; assert_in_epsilon(116.5233284, worksheet.outputs_energy_h125, 0.002); end
  def test_outputs_energy_i125; assert_in_epsilon(131.85643926000003, worksheet.outputs_energy_i125, 0.002); end
  def test_outputs_energy_j125; assert_in_epsilon(122.84000791, worksheet.outputs_energy_j125, 0.002); end
  def test_outputs_energy_k125; assert_in_epsilon(137.87919456, worksheet.outputs_energy_k125, 0.002); end
  def test_outputs_energy_l125; assert_in_epsilon(143.51359745, worksheet.outputs_energy_l125, 0.002); end
  def test_outputs_energy_m125; assert_in_epsilon(156.74377747, worksheet.outputs_energy_m125, 0.002); end
  def test_outputs_energy_n125; assert_in_epsilon(171.78327319000002, worksheet.outputs_energy_n125, 0.002); end
  def test_outputs_energy_o125; assert_in_epsilon(175.91941010000002, worksheet.outputs_energy_o125, 0.002); end
  def test_outputs_energy_p125; assert_in_epsilon(176.66494085000002, worksheet.outputs_energy_p125, 0.002); end
  def test_outputs_energy_r125; assert_in_epsilon(178.0749522991361, worksheet.outputs_energy_r125, 0.002); end
  def test_outputs_energy_s125; assert_in_epsilon(189.57145026419084, worksheet.outputs_energy_s125, 0.002); end
  def test_outputs_energy_t125; assert_in_epsilon(219.1679486504405, worksheet.outputs_energy_t125, 0.002); end
  def test_outputs_energy_u125; assert_in_epsilon(239.30171166149483, worksheet.outputs_energy_u125, 0.002); end
  def test_outputs_energy_v125; assert_in_epsilon(256.9619811257309, worksheet.outputs_energy_v125, 0.002); end
  def test_outputs_energy_w125; assert_in_epsilon(266.03495055936895, worksheet.outputs_energy_w125, 0.002); end
  def test_outputs_energy_x125; assert_in_epsilon(283.4507699810932, worksheet.outputs_energy_x125, 0.002); end
  def test_outputs_energy_y125; assert_in_epsilon(302.494482330854, worksheet.outputs_energy_y125, 0.002); end
  def test_outputs_energy_z125; assert_in_epsilon(317.35079465395825, worksheet.outputs_energy_z125, 0.002); end
  def test_outputs_energy_d127; assert_equal("Global gas ", worksheet.outputs_energy_d127); end
  def test_outputs_energy_h127; assert_in_epsilon(41.88575614, worksheet.outputs_energy_h127, 0.002); end
  def test_outputs_energy_i127; assert_in_epsilon(51.657453589999996, worksheet.outputs_energy_i127, 0.002); end
  def test_outputs_energy_j127; assert_in_epsilon(59.13014466, worksheet.outputs_energy_j127, 0.002); end
  def test_outputs_energy_k127; assert_in_epsilon(69.82757047999999, worksheet.outputs_energy_k127, 0.002); end
  def test_outputs_energy_l127; assert_in_epsilon(75.88166314, worksheet.outputs_energy_l127, 0.002); end
  def test_outputs_energy_m127; assert_in_epsilon(86.75456712, worksheet.outputs_energy_m127, 0.002); end
  def test_outputs_energy_n127; assert_in_epsilon(99.02950624, worksheet.outputs_energy_n127, 0.002); end
  def test_outputs_energy_o127; assert_in_epsilon(114.72290836, worksheet.outputs_energy_o127, 0.002); end
  def test_outputs_energy_p127; assert_in_epsilon(116.68415746000001, worksheet.outputs_energy_p127, 0.002); end
  def test_outputs_energy_r127; assert_in_epsilon(119.87031216500877, worksheet.outputs_energy_r127, 0.002); end
  def test_outputs_energy_s127; assert_in_epsilon(122.15271558199606, worksheet.outputs_energy_s127, 0.002); end
  def test_outputs_energy_t127; assert_in_epsilon(135.56127692846337, worksheet.outputs_energy_t127, 0.002); end
  def test_outputs_energy_u127; assert_in_epsilon(146.97254749558903, worksheet.outputs_energy_u127, 0.002); end
  def test_outputs_energy_v127; assert_in_epsilon(157.82934078034538, worksheet.outputs_energy_v127, 0.002); end
  def test_outputs_energy_w127; assert_in_epsilon(171.42042971908458, worksheet.outputs_energy_w127, 0.002); end
  def test_outputs_energy_x127; assert_in_epsilon(181.1044577553035, worksheet.outputs_energy_x127, 0.002); end
  def test_outputs_energy_y127; assert_in_epsilon(193.14595304788216, worksheet.outputs_energy_y127, 0.002); end
  def test_outputs_energy_z127; assert_in_epsilon(207.7159843134508, worksheet.outputs_energy_z127, 0.002); end
  def test_outputs_energy_c467; assert_equal("Description", worksheet.outputs_energy_c467); end
  def test_outputs_energy_r467; assert_in_epsilon(2011.0, worksheet.outputs_energy_r467, 0.002); end
  def test_outputs_energy_s467; assert_equal("2015", worksheet.outputs_energy_s467); end
  def test_outputs_energy_t467; assert_equal("2020", worksheet.outputs_energy_t467); end
  def test_outputs_energy_u467; assert_equal("2025", worksheet.outputs_energy_u467); end
  def test_outputs_energy_v467; assert_equal("2030", worksheet.outputs_energy_v467); end
  def test_outputs_energy_w467; assert_equal("2035", worksheet.outputs_energy_w467); end
  def test_outputs_energy_x467; assert_equal("2040", worksheet.outputs_energy_x467); end
  def test_outputs_energy_y467; assert_equal("2045", worksheet.outputs_energy_y467); end
  def test_outputs_energy_z467; assert_equal("2050", worksheet.outputs_energy_z467); end
  def test_outputs_energy_c468; assert_equal("Aluminium.Alumina", worksheet.outputs_energy_c468); end
  def test_outputs_energy_i468; assert_equal("G.M.02", worksheet.outputs_energy_i468); end
  def test_outputs_energy_r468; assert_in_epsilon(1.3689321930948124, worksheet.outputs_energy_r468, 0.002); end
  def test_outputs_energy_s468; assert_in_epsilon(1.5153920306654354, worksheet.outputs_energy_s468, 0.002); end
  def test_outputs_energy_t468; assert_in_epsilon(1.763638175699309, worksheet.outputs_energy_t468, 0.002); end
  def test_outputs_energy_u468; assert_in_epsilon(2.0321744786186535, worksheet.outputs_energy_u468, 0.002); end
  def test_outputs_energy_v468; assert_in_epsilon(2.324335105952678, worksheet.outputs_energy_v468, 0.002); end
  def test_outputs_energy_w468; assert_in_epsilon(2.627623597584573, worksheet.outputs_energy_w468, 0.002); end
  def test_outputs_energy_x468; assert_in_epsilon(2.974933406944359, worksheet.outputs_energy_x468, 0.002); end
  def test_outputs_energy_y468; assert_in_epsilon(3.348931485095681, worksheet.outputs_energy_y468, 0.002); end
  def test_outputs_energy_z468; assert_in_epsilon(3.779421720112677, worksheet.outputs_energy_z468, 0.002); end
  def test_outputs_energy_c469; assert_equal("Aluminium.Primary", worksheet.outputs_energy_c469); end
  def test_outputs_energy_i469; assert_equal("G.M.02", worksheet.outputs_energy_i469); end
  def test_outputs_energy_r469; assert_in_epsilon(2.7584780625440373, worksheet.outputs_energy_r469, 0.002); end
  def test_outputs_energy_s469; assert_in_epsilon(3.03795677848563, worksheet.outputs_energy_s469, 0.002); end
  def test_outputs_energy_t469; assert_in_epsilon(3.5128619587732857, worksheet.outputs_energy_t469, 0.002); end
  def test_outputs_energy_u469; assert_in_epsilon(4.021511566485439, worksheet.outputs_energy_u469, 0.002); end
  def test_outputs_energy_v469; assert_in_epsilon(4.569674882970696, worksheet.outputs_energy_v469, 0.002); end
  def test_outputs_energy_w469; assert_in_epsilon(5.132030131179142, worksheet.outputs_energy_w469, 0.002); end
  def test_outputs_energy_x469; assert_in_epsilon(5.771966192885802, worksheet.outputs_energy_x469, 0.002); end
  def test_outputs_energy_y469; assert_in_epsilon(6.454372520953258, worksheet.outputs_energy_y469, 0.002); end
  def test_outputs_energy_z469; assert_in_epsilon(7.23527170273438, worksheet.outputs_energy_z469, 0.002); end
  def test_outputs_energy_c470; assert_equal("Aluminium.Secondary", worksheet.outputs_energy_c470); end
  def test_outputs_energy_i470; assert_equal("G.M.02", worksheet.outputs_energy_i470); end
  def test_outputs_energy_r470; assert_in_delta(0.26361993307490655, worksheet.outputs_energy_r470, 0.002); end
  def test_outputs_energy_s470; assert_in_delta(0.26951564902884756, worksheet.outputs_energy_s470, 0.002); end
  def test_outputs_energy_t470; assert_in_delta(0.275773000650527, worksheet.outputs_energy_t470, 0.002); end
  def test_outputs_energy_u470; assert_in_delta(0.277240951491603, worksheet.outputs_energy_u470, 0.002); end
  def test_outputs_energy_v470; assert_in_delta(0.2740132287316814, worksheet.outputs_energy_v470, 0.002); end
  def test_outputs_energy_w470; assert_in_delta(0.26441698458865226, worksheet.outputs_energy_w470, 0.002); end
  def test_outputs_energy_x470; assert_in_delta(0.2514926780452733, worksheet.outputs_energy_x470, 0.002); end
  def test_outputs_energy_y470; assert_in_delta(0.23279415373661788, worksheet.outputs_energy_y470, 0.002); end
  def test_outputs_energy_z470; assert_in_delta(0.20964119344869514, worksheet.outputs_energy_z470, 0.002); end
  def test_outputs_energy_c471; assert_equal("Total", worksheet.outputs_energy_c471); end
  def test_outputs_energy_r471; assert_in_epsilon(4.391030188713756, worksheet.outputs_energy_r471, 0.002); end
  def test_outputs_energy_s471; assert_in_epsilon(4.822864458179914, worksheet.outputs_energy_s471, 0.002); end
  def test_outputs_energy_t471; assert_in_epsilon(5.552273135123121, worksheet.outputs_energy_t471, 0.002); end
  def test_outputs_energy_u471; assert_in_epsilon(6.330926996595696, worksheet.outputs_energy_u471, 0.002); end
  def test_outputs_energy_v471; assert_in_epsilon(7.168023217655056, worksheet.outputs_energy_v471, 0.002); end
  def test_outputs_energy_w471; assert_in_epsilon(8.024070713352367, worksheet.outputs_energy_w471, 0.002); end
  def test_outputs_energy_x471; assert_in_epsilon(8.998392277875435, worksheet.outputs_energy_x471, 0.002); end
  def test_outputs_energy_y471; assert_in_epsilon(10.036098159785556, worksheet.outputs_energy_y471, 0.002); end
  def test_outputs_energy_z471; assert_in_epsilon(11.224334616295751, worksheet.outputs_energy_z471, 0.002); end
  def test_outputs_energy_r138; assert_in_epsilon(4.636459473060736, worksheet.outputs_energy_r138, 0.002); end
  def test_outputs_energy_r140; assert_in_epsilon(15.40635993385157, worksheet.outputs_energy_r140, 0.002); end
  def test_outputs_energy_r142; assert_in_epsilon(11.875, worksheet.outputs_energy_r142, 0.002); end
  def test_outputs_energy_r144; assert_in_epsilon(21.54205008268554, worksheet.outputs_energy_r144, 0.002); end
  def test_outputs_energy_z138; assert_in_epsilon(10.79677638726928, worksheet.outputs_energy_z138, 0.002); end
  def test_outputs_energy_z140; assert_in_epsilon(14.61430400354512, worksheet.outputs_energy_z140, 0.002); end
  def test_outputs_energy_z142; assert_in_epsilon(27.5, worksheet.outputs_energy_z142, 0.002); end
  def test_outputs_energy_z144; assert_in_epsilon(10.674192097173995, worksheet.outputs_energy_z144, 0.002); end
  def test_outputs_energy_d154; assert_equal("Losses", worksheet.outputs_energy_d154); end
  def test_outputs_energy_r154; assert_in_epsilon(3.9977608155712576, worksheet.outputs_energy_r154, 0.002); end
  def test_outputs_energy_s154; assert_in_epsilon(4.364687489972087, worksheet.outputs_energy_s154, 0.002); end
  def test_outputs_energy_t154; assert_in_epsilon(4.745771837461513, worksheet.outputs_energy_t154, 0.002); end
  def test_outputs_energy_u154; assert_in_epsilon(5.074561759089355, worksheet.outputs_energy_u154, 0.002); end
  def test_outputs_energy_v154; assert_in_epsilon(5.354389152419692, worksheet.outputs_energy_v154, 0.002); end
  def test_outputs_energy_w154; assert_in_epsilon(5.589146662646851, worksheet.outputs_energy_w154, 0.002); end
  def test_outputs_energy_x154; assert_in_epsilon(5.777527631913693, worksheet.outputs_energy_x154, 0.002); end
  def test_outputs_energy_y154; assert_in_epsilon(5.906613727364224, worksheet.outputs_energy_y154, 0.002); end
  def test_outputs_energy_z154; assert_in_epsilon(5.9890329161807845, worksheet.outputs_energy_z154, 0.002); end
  def test_outputs_energy_d155; assert_equal("Oversupply", worksheet.outputs_energy_d155); end
  def test_outputs_energy_r155; assert_in_delta(0.0, (worksheet.outputs_energy_r155||0), 0.002); end
  def test_outputs_energy_s155; assert_in_delta(0.0, (worksheet.outputs_energy_s155||0), 0.002); end
  def test_outputs_energy_t155; assert_in_delta(0.0, (worksheet.outputs_energy_t155||0), 0.002); end
  def test_outputs_energy_u155; assert_in_delta(0.0, (worksheet.outputs_energy_u155||0), 0.002); end
  def test_outputs_energy_v155; assert_in_delta(0.0, (worksheet.outputs_energy_v155||0), 0.002); end
  def test_outputs_energy_w155; assert_in_delta(0.0, (worksheet.outputs_energy_w155||0), 0.002); end
  def test_outputs_energy_x155; assert_in_delta(0.0, (worksheet.outputs_energy_x155||0), 0.002); end
  def test_outputs_energy_y155; assert_in_delta(0.0, (worksheet.outputs_energy_y155||0), 0.002); end
  def test_outputs_energy_z155; assert_in_delta(0.0, (worksheet.outputs_energy_z155||0), 0.002); end
  def test_outputs_energy_d156; assert_equal("Transport", worksheet.outputs_energy_d156); end
  def test_outputs_energy_r156; assert_in_epsilon(3.8000000000000003, worksheet.outputs_energy_r156, 0.002); end
  def test_outputs_energy_s156; assert_in_epsilon(4.088016474026838, worksheet.outputs_energy_s156, 0.002); end
  def test_outputs_energy_t156; assert_in_epsilon(4.656175106300735, worksheet.outputs_energy_t156, 0.002); end
  def test_outputs_energy_u156; assert_in_epsilon(5.198383876201173, worksheet.outputs_energy_u156, 0.002); end
  def test_outputs_energy_v156; assert_in_epsilon(5.7119868536033085, worksheet.outputs_energy_v156, 0.002); end
  def test_outputs_energy_w156; assert_in_epsilon(6.194265734265732, worksheet.outputs_energy_w156, 0.002); end
  def test_outputs_energy_x156; assert_in_epsilon(6.642437997958098, worksheet.outputs_energy_x156, 0.002); end
  def test_outputs_energy_y156; assert_in_epsilon(7.0536550009336505, worksheet.outputs_energy_y156, 0.002); end
  def test_outputs_energy_z156; assert_in_epsilon(7.425000000000001, worksheet.outputs_energy_z156, 0.002); end
  def test_outputs_energy_d157; assert_equal("Electricity (unabated thermal)", worksheet.outputs_energy_d157); end
  def test_outputs_energy_r157; assert_in_epsilon(4.8310407981897665, worksheet.outputs_energy_r157, 0.002); end
  def test_outputs_energy_s157; assert_in_epsilon(5.0848880842363355, worksheet.outputs_energy_s157, 0.002); end
  def test_outputs_energy_t157; assert_in_epsilon(5.434638320527093, worksheet.outputs_energy_t157, 0.002); end
  def test_outputs_energy_u157; assert_in_epsilon(5.8344756272889295, worksheet.outputs_energy_u157, 0.002); end
  def test_outputs_energy_v157; assert_in_epsilon(6.249929540216504, worksheet.outputs_energy_v157, 0.002); end
  def test_outputs_energy_w157; assert_in_epsilon(6.671457156980418, worksheet.outputs_energy_w157, 0.002); end
  def test_outputs_energy_x157; assert_in_epsilon(7.10270934043646, worksheet.outputs_energy_x157, 0.002); end
  def test_outputs_energy_y157; assert_in_epsilon(7.574448411094246, worksheet.outputs_energy_y157, 0.002); end
  def test_outputs_energy_z157; assert_in_epsilon(8.047651962856229, worksheet.outputs_energy_z157, 0.002); end
  def test_outputs_energy_d158; assert_equal("Electricity (carbon capture and storage)", worksheet.outputs_energy_d158); end
  def test_outputs_energy_r158; assert_in_delta(0.0, (worksheet.outputs_energy_r158||0), 0.002); end
  def test_outputs_energy_s158; assert_in_delta(0.014782622777694755, worksheet.outputs_energy_s158, 0.002); end
  def test_outputs_energy_t158; assert_in_delta(0.02844752994666863, worksheet.outputs_energy_t158, 0.002); end
  def test_outputs_energy_u158; assert_in_delta(0.025029064369466565, worksheet.outputs_energy_u158, 0.002); end
  def test_outputs_energy_v158; assert_in_delta(0.024412400712828047, worksheet.outputs_energy_v158, 0.002); end
  def test_outputs_energy_w158; assert_in_delta(0.02326474322024894, worksheet.outputs_energy_w158, 0.002); end
  def test_outputs_energy_x158; assert_in_delta(0.01993600813491897, worksheet.outputs_energy_x158, 0.002); end
  def test_outputs_energy_y158; assert_in_delta(0.015533540070479992, worksheet.outputs_energy_y158, 0.002); end
  def test_outputs_energy_z158; assert_in_delta(0.012256772616495406, worksheet.outputs_energy_z158, 0.002); end
  def test_outputs_energy_d159; assert_equal("Buildings", worksheet.outputs_energy_d159); end
  def test_outputs_energy_r159; assert_in_epsilon(35.10494060924812, worksheet.outputs_energy_r159, 0.002); end
  def test_outputs_energy_s159; assert_in_epsilon(34.31969266662135, worksheet.outputs_energy_s159, 0.002); end
  def test_outputs_energy_t159; assert_in_epsilon(33.71358033898363, worksheet.outputs_energy_t159, 0.002); end
  def test_outputs_energy_u159; assert_in_epsilon(33.00750253322035, worksheet.outputs_energy_u159, 0.002); end
  def test_outputs_energy_v159; assert_in_epsilon(32.36481922719172, worksheet.outputs_energy_v159, 0.002); end
  def test_outputs_energy_w159; assert_in_epsilon(32.130903685820584, worksheet.outputs_energy_w159, 0.002); end
  def test_outputs_energy_x159; assert_in_epsilon(31.930277478016116, worksheet.outputs_energy_x159, 0.002); end
  def test_outputs_energy_y159; assert_in_epsilon(32.30813246319558, worksheet.outputs_energy_y159, 0.002); end
  def test_outputs_energy_z159; assert_in_epsilon(32.69692805673275, worksheet.outputs_energy_z159, 0.002); end
  def test_outputs_energy_d160; assert_equal("Manufacturing", worksheet.outputs_energy_d160); end
  def test_outputs_energy_r160; assert_in_epsilon(5.726127266588708, worksheet.outputs_energy_r160, 0.002); end
  def test_outputs_energy_s160; assert_in_epsilon(6.013597710034355, worksheet.outputs_energy_s160, 0.002); end
  def test_outputs_energy_t160; assert_in_epsilon(6.431585451994884, worksheet.outputs_energy_t160, 0.002); end
  def test_outputs_energy_u160; assert_in_epsilon(6.888861377209474, worksheet.outputs_energy_u160, 0.002); end
  def test_outputs_energy_v160; assert_in_epsilon(7.3671177546239015, worksheet.outputs_energy_v160, 0.002); end
  def test_outputs_energy_w160; assert_in_epsilon(7.850003473111476, worksheet.outputs_energy_w160, 0.002); end
  def test_outputs_energy_x160; assert_in_epsilon(8.339859126318682, worksheet.outputs_energy_x160, 0.002); end
  def test_outputs_energy_y160; assert_in_epsilon(8.876884142015054, worksheet.outputs_energy_y160, 0.002); end
  def test_outputs_energy_z160; assert_in_epsilon(9.414402779602126, worksheet.outputs_energy_z160, 0.002); end
  def test_outputs_energy_d137; assert_equal("Bioenergy", worksheet.outputs_energy_d137); end
  def test_outputs_energy_r137; assert_in_epsilon(2011.0, worksheet.outputs_energy_r137, 0.002); end
  def test_outputs_energy_s137; assert_equal("2015", worksheet.outputs_energy_s137); end
  def test_outputs_energy_t137; assert_equal("2020", worksheet.outputs_energy_t137); end
  def test_outputs_energy_u137; assert_equal("2025", worksheet.outputs_energy_u137); end
  def test_outputs_energy_v137; assert_equal("2030", worksheet.outputs_energy_v137); end
  def test_outputs_energy_w137; assert_equal("2035", worksheet.outputs_energy_w137); end
  def test_outputs_energy_x137; assert_equal("2040", worksheet.outputs_energy_x137); end
  def test_outputs_energy_y137; assert_equal("2045", worksheet.outputs_energy_y137); end
  def test_outputs_energy_z137; assert_equal("2050", worksheet.outputs_energy_z137); end
  def test_outputs_energy_d138; assert_equal("Waste", worksheet.outputs_energy_d138); end
  def test_outputs_energy_s138; assert_in_epsilon(5.716288590257487, worksheet.outputs_energy_s138, 0.002); end
  def test_outputs_energy_t138; assert_in_epsilon(6.355077875693675, worksheet.outputs_energy_t138, 0.002); end
  def test_outputs_energy_u138; assert_in_epsilon(7.0078022021911, worksheet.outputs_energy_u138, 0.002); end
  def test_outputs_energy_v138; assert_in_epsilon(7.688136800483016, worksheet.outputs_energy_v138, 0.002); end
  def test_outputs_energy_w138; assert_in_epsilon(8.412674649693313, worksheet.outputs_energy_w138, 0.002); end
  def test_outputs_energy_x138; assert_in_epsilon(9.182814041967152, worksheet.outputs_energy_x138, 0.002); end
  def test_outputs_energy_y138; assert_in_epsilon(9.962243773902618, worksheet.outputs_energy_y138, 0.002); end
  def test_outputs_energy_d140; assert_equal("Forest residues", worksheet.outputs_energy_d140); end
  def test_outputs_energy_s140; assert_in_epsilon(15.418599681167375, worksheet.outputs_energy_s140, 0.002); end
  def test_outputs_energy_t140; assert_in_epsilon(15.422069755463541, worksheet.outputs_energy_t140, 0.002); end
  def test_outputs_energy_u140; assert_in_epsilon(15.475219786175442, worksheet.outputs_energy_u140, 0.002); end
  def test_outputs_energy_v140; assert_in_epsilon(15.486347171620517, worksheet.outputs_energy_v140, 0.002); end
  def test_outputs_energy_w140; assert_in_epsilon(15.369482086603531, worksheet.outputs_energy_w140, 0.002); end
  def test_outputs_energy_x140; assert_in_epsilon(15.128523777891827, worksheet.outputs_energy_x140, 0.002); end
  def test_outputs_energy_y140; assert_in_epsilon(14.955678684568271, worksheet.outputs_energy_y140, 0.002); end
  def test_outputs_energy_d142; assert_equal("Bioenergy crops", worksheet.outputs_energy_d142); end
  def test_outputs_energy_s142; assert_in_epsilon(12.613341968911918, worksheet.outputs_energy_s142, 0.002); end
  def test_outputs_energy_t142; assert_in_epsilon(14.666387493020657, worksheet.outputs_energy_t142, 0.002); end
  def test_outputs_energy_u142; assert_in_epsilon(16.7432609509547, worksheet.outputs_energy_u142, 0.002); end
  def test_outputs_energy_v142; assert_in_epsilon(18.84437958953115, worksheet.outputs_energy_v142, 0.002); end
  def test_outputs_energy_w142; assert_in_epsilon(20.970170454545453, worksheet.outputs_energy_w142, 0.002); end
  def test_outputs_energy_x142; assert_in_epsilon(23.12107068012955, worksheet.outputs_energy_x142, 0.002); end
  def test_outputs_energy_y142; assert_in_epsilon(25.297527788424677, worksheet.outputs_energy_y142, 0.002); end
  def test_outputs_energy_d144; assert_equal("Traditional biomass", worksheet.outputs_energy_d144); end
  def test_outputs_energy_s144; assert_in_epsilon(20.13743480733188, worksheet.outputs_energy_s144, 0.002); end
  def test_outputs_energy_t144; assert_in_epsilon(18.56666346103665, worksheet.outputs_energy_t144, 0.002); end
  def test_outputs_energy_u144; assert_in_epsilon(16.802531298057502, worksheet.outputs_energy_u144, 0.002); end
  def test_outputs_energy_v144; assert_in_epsilon(15.053791367133272, worksheet.outputs_energy_v144, 0.002); end
  def test_outputs_energy_w144; assert_in_epsilon(13.706714265203015, worksheet.outputs_energy_w144, 0.002); end
  def test_outputs_energy_x144; assert_in_epsilon(12.380339082789442, worksheet.outputs_energy_x144, 0.002); end
  def test_outputs_energy_y144; assert_in_epsilon(11.519817037777669, worksheet.outputs_energy_y144, 0.002); end
  def test_outputs_energy_d145; assert_equal("Total", worksheet.outputs_energy_d145); end
  def test_outputs_energy_r145; assert_in_epsilon(53.45986948959785, worksheet.outputs_energy_r145, 0.002); end
  def test_outputs_energy_s145; assert_in_epsilon(53.88566504766866, worksheet.outputs_energy_s145, 0.002); end
  def test_outputs_energy_t145; assert_in_epsilon(55.010198585214525, worksheet.outputs_energy_t145, 0.002); end
  def test_outputs_energy_u145; assert_in_epsilon(56.02881423737874, worksheet.outputs_energy_u145, 0.002); end
  def test_outputs_energy_v145; assert_in_epsilon(57.07265492876796, worksheet.outputs_energy_v145, 0.002); end
  def test_outputs_energy_w145; assert_in_epsilon(58.45904145604531, worksheet.outputs_energy_w145, 0.002); end
  def test_outputs_energy_x145; assert_in_epsilon(59.812747582777966, worksheet.outputs_energy_x145, 0.002); end
  def test_outputs_energy_y145; assert_in_epsilon(61.73526728467324, worksheet.outputs_energy_y145, 0.002); end
  def test_outputs_energy_z145; assert_in_epsilon(63.58527248798839, worksheet.outputs_energy_z145, 0.002); end
  def test_outputs_energy_d146; assert_equal("Biocrops unused", worksheet.outputs_energy_d146); end
  def test_outputs_energy_r146; assert_in_delta(0.0, (worksheet.outputs_energy_r146||0), 0.002); end
  def test_outputs_energy_s146; assert_in_delta(0.0, (worksheet.outputs_energy_s146||0), 0.002); end
  def test_outputs_energy_t146; assert_in_delta(0.0, (worksheet.outputs_energy_t146||0), 0.002); end
  def test_outputs_energy_u146; assert_in_delta(0.0, (worksheet.outputs_energy_u146||0), 0.002); end
  def test_outputs_energy_v146; assert_in_delta(0.0, (worksheet.outputs_energy_v146||0), 0.002); end
  def test_outputs_energy_w146; assert_in_delta(0.0, (worksheet.outputs_energy_w146||0), 0.002); end
  def test_outputs_energy_x146; assert_in_delta(0.0, (worksheet.outputs_energy_x146||0), 0.002); end
  def test_outputs_energy_y146; assert_in_delta(0.0, (worksheet.outputs_energy_y146||0), 0.002); end
  def test_outputs_energy_z146; assert_in_delta(0.0, (worksheet.outputs_energy_z146||0), 0.002); end
  def test_outputs_energy_c437; assert_equal("Description", worksheet.outputs_energy_c437); end
  def test_outputs_energy_d437; assert_equal(".", worksheet.outputs_energy_d437); end
  def test_outputs_energy_e437; assert_equal("Notes", worksheet.outputs_energy_e437); end
  def test_outputs_energy_g437; assert_equal("..", worksheet.outputs_energy_g437); end
  def test_outputs_energy_h437; assert_equal("…", worksheet.outputs_energy_h437); end
  def test_outputs_energy_i437; assert_equal("….", worksheet.outputs_energy_i437); end
  def test_outputs_energy_j437; assert_equal("…..", worksheet.outputs_energy_j437); end
  def test_outputs_energy_k437; assert_equal("……", worksheet.outputs_energy_k437); end
  def test_outputs_energy_l437; assert_equal("…….", worksheet.outputs_energy_l437); end
  def test_outputs_energy_m437; assert_equal("……..", worksheet.outputs_energy_m437); end
  def test_outputs_energy_n437; assert_equal("……….", worksheet.outputs_energy_n437); end
  def test_outputs_energy_o437; assert_equal("………..", worksheet.outputs_energy_o437); end
  def test_outputs_energy_r437; assert_equal("2011", worksheet.outputs_energy_r437); end
  def test_outputs_energy_s437; assert_equal("2015", worksheet.outputs_energy_s437); end
  def test_outputs_energy_t437; assert_equal("2020", worksheet.outputs_energy_t437); end
  def test_outputs_energy_u437; assert_equal("2025", worksheet.outputs_energy_u437); end
  def test_outputs_energy_v437; assert_equal("2030", worksheet.outputs_energy_v437); end
  def test_outputs_energy_w437; assert_equal("2035", worksheet.outputs_energy_w437); end
  def test_outputs_energy_x437; assert_equal("2040", worksheet.outputs_energy_x437); end
  def test_outputs_energy_y437; assert_equal("2045", worksheet.outputs_energy_y437); end
  def test_outputs_energy_z437; assert_equal("2050", worksheet.outputs_energy_z437); end
  def test_outputs_energy_c438; assert_equal("Solid", worksheet.outputs_energy_c438); end
  def test_outputs_energy_r438; assert_in_epsilon(42.64841001653711, worksheet.outputs_energy_r438, 0.002); end
  def test_outputs_energy_s438; assert_in_epsilon(41.6880591995395, worksheet.outputs_energy_s438, 0.002); end
  def test_outputs_energy_t438; assert_in_epsilon(41.40412320060877, worksheet.outputs_energy_t438, 0.002); end
  def test_outputs_energy_u438; assert_in_epsilon(41.07501610549647, worksheet.outputs_energy_u438, 0.002); end
  def test_outputs_energy_v438; assert_in_epsilon(40.82171487523974, worksheet.outputs_energy_v438, 0.002); end
  def test_outputs_energy_w438; assert_in_epsilon(40.9485390091492, worksheet.outputs_energy_w438, 0.002); end
  def test_outputs_energy_x438; assert_in_epsilon(41.0825405086826, worksheet.outputs_energy_x438, 0.002); end
  def test_outputs_energy_y438; assert_in_epsilon(41.86528845165572, worksheet.outputs_energy_y438, 0.002); end
  def test_outputs_energy_z438; assert_in_epsilon(42.61349610071912, worksheet.outputs_energy_z438, 0.002); end
  def test_outputs_energy_c439; assert_equal("Liquid bioenergy", worksheet.outputs_energy_c439); end
  def test_outputs_energy_r439; assert_in_epsilon(3.8000000000000003, worksheet.outputs_energy_r439, 0.002); end
  def test_outputs_energy_s439; assert_in_epsilon(4.088016474026838, worksheet.outputs_energy_s439, 0.002); end
  def test_outputs_energy_t439; assert_in_epsilon(4.656175106300735, worksheet.outputs_energy_t439, 0.002); end
  def test_outputs_energy_u439; assert_in_epsilon(5.198383876201173, worksheet.outputs_energy_u439, 0.002); end
  def test_outputs_energy_v439; assert_in_epsilon(5.7119868536033085, worksheet.outputs_energy_v439, 0.002); end
  def test_outputs_energy_w439; assert_in_epsilon(6.194265734265732, worksheet.outputs_energy_w439, 0.002); end
  def test_outputs_energy_x439; assert_in_epsilon(6.642437997958098, worksheet.outputs_energy_x439, 0.002); end
  def test_outputs_energy_y439; assert_in_epsilon(7.0536550009336505, worksheet.outputs_energy_y439, 0.002); end
  def test_outputs_energy_z439; assert_in_epsilon(7.425000000000001, worksheet.outputs_energy_z439, 0.002); end
  def test_outputs_energy_c440; assert_equal("Gas", worksheet.outputs_energy_c440); end
  def test_outputs_energy_r440; assert_in_epsilon(3.013698657489478, worksheet.outputs_energy_r440, 0.002); end
  def test_outputs_energy_s440; assert_in_epsilon(3.7449018841302255, worksheet.outputs_energy_s440, 0.002); end
  def test_outputs_energy_t440; assert_in_epsilon(4.204128440843508, worksheet.outputs_energy_t440, 0.002); end
  def test_outputs_energy_u440; assert_in_epsilon(4.680852496591747, worksheet.outputs_energy_u440, 0.002); end
  def test_outputs_energy_v440; assert_in_epsilon(5.184564047505213, worksheet.outputs_energy_v440, 0.002); end
  def test_outputs_energy_w440; assert_in_epsilon(5.727090049983525, worksheet.outputs_energy_w440, 0.002); end
  def test_outputs_energy_x440; assert_in_epsilon(6.310241444223581, worksheet.outputs_energy_x440, 0.002); end
  def test_outputs_energy_y440; assert_in_epsilon(6.909710104719636, worksheet.outputs_energy_y440, 0.002); end
  def test_outputs_energy_z440; assert_in_epsilon(7.557743471088495, worksheet.outputs_energy_z440, 0.002); end
  def test_outputs_energy_c441; assert_equal("Losses", worksheet.outputs_energy_c441); end
  def test_outputs_energy_r441; assert_in_epsilon(3.9977608155712616, worksheet.outputs_energy_r441, 0.002); end
  def test_outputs_energy_s441; assert_in_epsilon(4.364687489972091, worksheet.outputs_energy_s441, 0.002); end
  def test_outputs_energy_t441; assert_in_epsilon(4.745771837461504, worksheet.outputs_energy_t441, 0.002); end
  def test_outputs_energy_u441; assert_in_epsilon(5.074561759089349, worksheet.outputs_energy_u441, 0.002); end
  def test_outputs_energy_v441; assert_in_epsilon(5.354389152419699, worksheet.outputs_energy_v441, 0.002); end
  def test_outputs_energy_w441; assert_in_epsilon(5.589146662646854, worksheet.outputs_energy_w441, 0.002); end
  def test_outputs_energy_x441; assert_in_epsilon(5.777527631913692, worksheet.outputs_energy_x441, 0.002); end
  def test_outputs_energy_y441; assert_in_epsilon(5.906613727364231, worksheet.outputs_energy_y441, 0.002); end
  def test_outputs_energy_z441; assert_in_epsilon(5.989032916180783, worksheet.outputs_energy_z441, 0.002); end
  def test_outputs_energy_c442; assert_equal("Solid oversupply", worksheet.outputs_energy_c442); end
  def test_outputs_energy_e442; assert_equal("solid global oversupply", worksheet.outputs_energy_e442); end
  def test_outputs_energy_r442; assert_in_delta(0.0, (worksheet.outputs_energy_r442||0), 0.002); end
  def test_outputs_energy_s442; assert_in_delta(0.0, (worksheet.outputs_energy_s442||0), 0.002); end
  def test_outputs_energy_t442; assert_in_delta(0.0, (worksheet.outputs_energy_t442||0), 0.002); end
  def test_outputs_energy_u442; assert_in_delta(0.0, (worksheet.outputs_energy_u442||0), 0.002); end
  def test_outputs_energy_v442; assert_in_delta(0.0, (worksheet.outputs_energy_v442||0), 0.002); end
  def test_outputs_energy_w442; assert_in_delta(0.0, (worksheet.outputs_energy_w442||0), 0.002); end
  def test_outputs_energy_x442; assert_in_delta(0.0, (worksheet.outputs_energy_x442||0), 0.002); end
  def test_outputs_energy_y442; assert_in_delta(0.0, (worksheet.outputs_energy_y442||0), 0.002); end
  def test_outputs_energy_z442; assert_in_delta(0.0, (worksheet.outputs_energy_z442||0), 0.002); end
  def test_outputs_energy_c443; assert_equal("Liquid oversupply", worksheet.outputs_energy_c443); end
  def test_outputs_energy_e443; assert_equal("liquid global oversupply", worksheet.outputs_energy_e443); end
  def test_outputs_energy_r443; assert_in_delta(0.0, (worksheet.outputs_energy_r443||0), 0.002); end
  def test_outputs_energy_s443; assert_in_delta(0.0, (worksheet.outputs_energy_s443||0), 0.002); end
  def test_outputs_energy_t443; assert_in_delta(0.0, (worksheet.outputs_energy_t443||0), 0.002); end
  def test_outputs_energy_u443; assert_in_delta(0.0, (worksheet.outputs_energy_u443||0), 0.002); end
  def test_outputs_energy_v443; assert_in_delta(0.0, (worksheet.outputs_energy_v443||0), 0.002); end
  def test_outputs_energy_w443; assert_in_delta(0.0, (worksheet.outputs_energy_w443||0), 0.002); end
  def test_outputs_energy_x443; assert_in_delta(0.0, (worksheet.outputs_energy_x443||0), 0.002); end
  def test_outputs_energy_y443; assert_in_delta(0.0, (worksheet.outputs_energy_y443||0), 0.002); end
  def test_outputs_energy_z443; assert_in_delta(0.0, (worksheet.outputs_energy_z443||0), 0.002); end
  def test_outputs_energy_d34; assert_equal("RESIDENTIAL", worksheet.outputs_energy_d34); end
  def test_outputs_energy_d35; assert_equal("Global Heating", worksheet.outputs_energy_d35); end
  def test_outputs_energy_p35; assert_in_epsilon(25.25, worksheet.outputs_energy_p35, 0.002); end
  def test_outputs_energy_r35; assert_in_epsilon(25.292160061938944, worksheet.outputs_energy_r35, 0.002); end
  def test_outputs_energy_s35; assert_in_epsilon(26.85317139395041, worksheet.outputs_energy_s35, 0.002); end
  def test_outputs_energy_t35; assert_in_epsilon(27.996095549666364, worksheet.outputs_energy_t35, 0.002); end
  def test_outputs_energy_u35; assert_in_epsilon(28.713806728241195, worksheet.outputs_energy_u35, 0.002); end
  def test_outputs_energy_v35; assert_in_epsilon(29.14341032834128, worksheet.outputs_energy_v35, 0.002); end
  def test_outputs_energy_w35; assert_in_epsilon(29.545538243900776, worksheet.outputs_energy_w35, 0.002); end
  def test_outputs_energy_x35; assert_in_epsilon(29.697270499502743, worksheet.outputs_energy_x35, 0.002); end
  def test_outputs_energy_y35; assert_in_epsilon(29.926288763097805, worksheet.outputs_energy_y35, 0.002); end
  def test_outputs_energy_z35; assert_in_epsilon(29.937642919185908, worksheet.outputs_energy_z35, 0.002); end
  def test_outputs_energy_d36; assert_equal("Global Cooling", worksheet.outputs_energy_d36); end
  def test_outputs_energy_p36; assert_in_epsilon(2.44, worksheet.outputs_energy_p36, 0.002); end
  def test_outputs_energy_r36; assert_in_epsilon(2.6984428076468663, worksheet.outputs_energy_r36, 0.002); end
  def test_outputs_energy_s36; assert_in_epsilon(3.4171458121997906, worksheet.outputs_energy_s36, 0.002); end
  def test_outputs_energy_t36; assert_in_epsilon(4.38144096346217, worksheet.outputs_energy_t36, 0.002); end
  def test_outputs_energy_u36; assert_in_epsilon(5.4417228035179805, worksheet.outputs_energy_u36, 0.002); end
  def test_outputs_energy_v36; assert_in_epsilon(6.573927577519392, worksheet.outputs_energy_v36, 0.002); end
  def test_outputs_energy_w36; assert_in_epsilon(7.731626620172429, worksheet.outputs_energy_w36, 0.002); end
  def test_outputs_energy_x36; assert_in_epsilon(8.919054603806245, worksheet.outputs_energy_x36, 0.002); end
  def test_outputs_energy_y36; assert_in_epsilon(10.080064082399797, worksheet.outputs_energy_y36, 0.002); end
  def test_outputs_energy_z36; assert_in_epsilon(11.225803447222471, worksheet.outputs_energy_z36, 0.002); end
  def test_outputs_energy_d37; assert_equal("Global Hot water", worksheet.outputs_energy_d37); end
  def test_outputs_energy_p37; assert_in_epsilon(22.61, worksheet.outputs_energy_p37, 0.002); end
  def test_outputs_energy_r37; assert_in_epsilon(20.64814831202377, worksheet.outputs_energy_r37, 0.002); end
  def test_outputs_energy_s37; assert_in_epsilon(22.39416094135626, worksheet.outputs_energy_s37, 0.002); end
  def test_outputs_energy_t37; assert_in_epsilon(24.21434562786983, worksheet.outputs_energy_t37, 0.002); end
  def test_outputs_energy_u37; assert_in_epsilon(26.056133410450695, worksheet.outputs_energy_u37, 0.002); end
  def test_outputs_energy_v37; assert_in_epsilon(27.836233468400145, worksheet.outputs_energy_v37, 0.002); end
  def test_outputs_energy_w37; assert_in_epsilon(29.438674871919417, worksheet.outputs_energy_w37, 0.002); end
  def test_outputs_energy_x37; assert_in_epsilon(30.969752468477196, worksheet.outputs_energy_x37, 0.002); end
  def test_outputs_energy_y37; assert_in_epsilon(32.3128584825904, worksheet.outputs_energy_y37, 0.002); end
  def test_outputs_energy_z37; assert_in_epsilon(33.561203423660444, worksheet.outputs_energy_z37, 0.002); end
  def test_outputs_energy_d38; assert_equal("Global Appliances", worksheet.outputs_energy_d38); end
  def test_outputs_energy_p38; assert_in_epsilon(10.0, worksheet.outputs_energy_p38, 0.002); end
  def test_outputs_energy_r38; assert_in_epsilon(10.049316153808604, worksheet.outputs_energy_r38, 0.002); end
  def test_outputs_energy_s38; assert_in_epsilon(11.423703702312537, worksheet.outputs_energy_s38, 0.002); end
  def test_outputs_energy_t38; assert_in_epsilon(13.67396067566869, worksheet.outputs_energy_t38, 0.002); end
  def test_outputs_energy_u38; assert_in_epsilon(16.122369214452416, worksheet.outputs_energy_u38, 0.002); end
  def test_outputs_energy_v38; assert_in_epsilon(18.72150792600017, worksheet.outputs_energy_v38, 0.002); end
  def test_outputs_energy_w38; assert_in_epsilon(21.377879648263878, worksheet.outputs_energy_w38, 0.002); end
  def test_outputs_energy_x38; assert_in_epsilon(24.14713788380903, worksheet.outputs_energy_x38, 0.002); end
  def test_outputs_energy_y38; assert_in_epsilon(26.92212455159974, worksheet.outputs_energy_y38, 0.002); end
  def test_outputs_energy_z38; assert_in_epsilon(29.77272930864252, worksheet.outputs_energy_z38, 0.002); end
  def test_outputs_energy_d39; assert_equal("Global Cooking", worksheet.outputs_energy_d39); end
  def test_outputs_energy_p39; assert_in_epsilon(24.16, worksheet.outputs_energy_p39, 0.002); end
  def test_outputs_energy_r39; assert_in_epsilon(24.331916753204318, worksheet.outputs_energy_r39, 0.002); end
  def test_outputs_energy_s39; assert_in_epsilon(23.78985015284648, worksheet.outputs_energy_s39, 0.002); end
  def test_outputs_energy_t39; assert_in_epsilon(23.091597244588396, worksheet.outputs_energy_t39, 0.002); end
  def test_outputs_energy_u39; assert_in_epsilon(22.454904272297853, worksheet.outputs_energy_u39, 0.002); end
  def test_outputs_energy_v39; assert_in_epsilon(21.87488214421075, worksheet.outputs_energy_v39, 0.002); end
  def test_outputs_energy_w39; assert_in_epsilon(21.372168971780223, worksheet.outputs_energy_w39, 0.002); end
  def test_outputs_energy_x39; assert_in_epsilon(20.884099325371405, worksheet.outputs_energy_x39, 0.002); end
  def test_outputs_energy_y39; assert_in_epsilon(20.441218274116007, worksheet.outputs_energy_y39, 0.002); end
  def test_outputs_energy_z39; assert_in_epsilon(19.98489781136998, worksheet.outputs_energy_z39, 0.002); end
  def test_outputs_energy_d40; assert_equal("Global Lighting", worksheet.outputs_energy_d40); end
  def test_outputs_energy_p40; assert_in_epsilon(3.24, worksheet.outputs_energy_p40, 0.002); end
  def test_outputs_energy_r40; assert_in_epsilon(3.238074545473781, worksheet.outputs_energy_r40, 0.002); end
  def test_outputs_energy_s40; assert_in_epsilon(3.8017884117693965, worksheet.outputs_energy_s40, 0.002); end
  def test_outputs_energy_t40; assert_in_epsilon(4.464111784151871, worksheet.outputs_energy_t40, 0.002); end
  def test_outputs_energy_u40; assert_in_epsilon(5.174500126036201, worksheet.outputs_energy_u40, 0.002); end
  def test_outputs_energy_v40; assert_in_epsilon(5.91739723740433, worksheet.outputs_energy_v40, 0.002); end
  def test_outputs_energy_w40; assert_in_epsilon(6.662835828330579, worksheet.outputs_energy_w40, 0.002); end
  def test_outputs_energy_x40; assert_in_epsilon(7.428152478350901, worksheet.outputs_energy_x40, 0.002); end
  def test_outputs_energy_y40; assert_in_epsilon(8.180034951668853, worksheet.outputs_energy_y40, 0.002); end
  def test_outputs_energy_z40; assert_in_epsilon(8.941602780619975, worksheet.outputs_energy_z40, 0.002); end
  def test_outputs_energy_d42; assert_equal("NON-RESIDENTIAL", worksheet.outputs_energy_d42); end
  def test_outputs_energy_d43; assert_equal("Global Heating", worksheet.outputs_energy_d43); end
  def test_outputs_energy_f43; assert_equal("Non-residential", worksheet.outputs_energy_f43); end
  def test_outputs_energy_p43; assert_in_epsilon(8.27, worksheet.outputs_energy_p43, 0.002); end
  def test_outputs_energy_r43; assert_in_epsilon(8.671483275853106, worksheet.outputs_energy_r43, 0.002); end
  def test_outputs_energy_s43; assert_in_epsilon(9.126906925859267, worksheet.outputs_energy_s43, 0.002); end
  def test_outputs_energy_t43; assert_in_epsilon(9.623527109176523, worksheet.outputs_energy_t43, 0.002); end
  def test_outputs_energy_u43; assert_in_epsilon(10.058586495374543, worksheet.outputs_energy_u43, 0.002); end
  def test_outputs_energy_v43; assert_in_epsilon(10.42630864749665, worksheet.outputs_energy_v43, 0.002); end
  def test_outputs_energy_w43; assert_in_epsilon(10.723556937408649, worksheet.outputs_energy_w43, 0.002); end
  def test_outputs_energy_x43; assert_in_epsilon(10.944465554340804, worksheet.outputs_energy_x43, 0.002); end
  def test_outputs_energy_y43; assert_in_epsilon(11.081133806674938, worksheet.outputs_energy_y43, 0.002); end
  def test_outputs_energy_z43; assert_in_epsilon(11.12676681311643, worksheet.outputs_energy_z43, 0.002); end
  def test_outputs_energy_d44; assert_equal("Global Cooling", worksheet.outputs_energy_d44); end
  def test_outputs_energy_f44; assert_equal("Non-residential", worksheet.outputs_energy_f44); end
  def test_outputs_energy_p44; assert_in_epsilon(1.96, worksheet.outputs_energy_p44, 0.002); end
  def test_outputs_energy_r44; assert_in_epsilon(1.9302063451193594, worksheet.outputs_energy_r44, 0.002); end
  def test_outputs_energy_s44; assert_in_epsilon(2.090978050779465, worksheet.outputs_energy_s44, 0.002); end
  def test_outputs_energy_t44; assert_in_epsilon(2.2858134913361385, worksheet.outputs_energy_t44, 0.002); end
  def test_outputs_energy_u44; assert_in_epsilon(2.4778573011701788, worksheet.outputs_energy_u44, 0.002); end
  def test_outputs_energy_v44; assert_in_epsilon(2.6655188240221186, worksheet.outputs_energy_v44, 0.002); end
  def test_outputs_energy_w44; assert_in_epsilon(2.8478592656554707, worksheet.outputs_energy_w44, 0.002); end
  def test_outputs_energy_x44; assert_in_epsilon(3.0232351730049998, worksheet.outputs_energy_x44, 0.002); end
  def test_outputs_energy_y44; assert_in_epsilon(3.1893435150083245, worksheet.outputs_energy_y44, 0.002); end
  def test_outputs_energy_z44; assert_in_epsilon(3.3440101923038243, worksheet.outputs_energy_z44, 0.002); end
  def test_outputs_energy_d45; assert_equal("Global Appliances", worksheet.outputs_energy_d45); end
  def test_outputs_energy_f45; assert_equal("Non-residential", worksheet.outputs_energy_f45); end
  def test_outputs_energy_p45; assert_in_epsilon(12.36, worksheet.outputs_energy_p45, 0.002); end
  def test_outputs_energy_r45; assert_in_epsilon(11.576876918452356, worksheet.outputs_energy_r45, 0.002); end
  def test_outputs_energy_s45; assert_in_epsilon(12.475470437632243, worksheet.outputs_energy_s45, 0.002); end
  def test_outputs_energy_t45; assert_in_epsilon(13.393611117822756, worksheet.outputs_energy_t45, 0.002); end
  def test_outputs_energy_u45; assert_in_epsilon(14.274073800435723, worksheet.outputs_energy_u45, 0.002); end
  def test_outputs_energy_v45; assert_in_epsilon(15.111409019841028, worksheet.outputs_energy_v45, 0.002); end
  def test_outputs_energy_w45; assert_in_epsilon(15.903957720970316, worksheet.outputs_energy_w45, 0.002); end
  def test_outputs_energy_x45; assert_in_epsilon(16.646096204874247, worksheet.outputs_energy_x45, 0.002); end
  def test_outputs_energy_y45; assert_in_epsilon(17.328748664681196, worksheet.outputs_energy_y45, 0.002); end
  def test_outputs_energy_z45; assert_in_epsilon(17.943811910818585, worksheet.outputs_energy_z45, 0.002); end
  def test_outputs_energy_d46; assert_equal("Global Lighting", worksheet.outputs_energy_d46); end
  def test_outputs_energy_f46; assert_equal("Non-residential", worksheet.outputs_energy_f46); end
  def test_outputs_energy_p46; assert_in_epsilon(4.21, worksheet.outputs_energy_p46, 0.002); end
  def test_outputs_energy_r46; assert_in_epsilon(4.234995621034355, worksheet.outputs_energy_r46, 0.002); end
  def test_outputs_energy_s46; assert_in_epsilon(4.76447451343983, worksheet.outputs_energy_s46, 0.002); end
  def test_outputs_energy_t46; assert_in_epsilon(5.347082603092144, worksheet.outputs_energy_t46, 0.002); end
  def test_outputs_energy_u46; assert_in_epsilon(5.95508024750774, worksheet.outputs_energy_u46, 0.002); end
  def test_outputs_energy_v46; assert_in_epsilon(6.586728842158841, worksheet.outputs_energy_v46, 0.002); end
  def test_outputs_energy_w46; assert_in_epsilon(7.241744734333961, worksheet.outputs_energy_w46, 0.002); end
  def test_outputs_energy_x46; assert_in_epsilon(7.917963891254088, worksheet.outputs_energy_x46, 0.002); end
  def test_outputs_energy_y46; assert_in_epsilon(8.611173083010938, worksheet.outputs_energy_y46, 0.002); end
  def test_outputs_energy_z46; assert_in_epsilon(9.316979261386576, worksheet.outputs_energy_z46, 0.002); end
  def test_outputs_energy_d47; assert_equal("Global Other", worksheet.outputs_energy_d47); end
  def test_outputs_energy_f47; assert_equal("Non-residential", worksheet.outputs_energy_f47); end
  def test_outputs_energy_p47; assert_in_epsilon(3.57, worksheet.outputs_energy_p47, 0.002); end
  def test_outputs_energy_r47; assert_in_epsilon(3.616434616787921, worksheet.outputs_energy_r47, 0.002); end
  def test_outputs_energy_s47; assert_in_epsilon(3.8144569151957914, worksheet.outputs_energy_s47, 0.002); end
  def test_outputs_energy_t47; assert_in_epsilon(4.034057217193223, worksheet.outputs_energy_t47, 0.002); end
  def test_outputs_energy_u47; assert_in_epsilon(4.236164285404575, worksheet.outputs_energy_u47, 0.002); end
  def test_outputs_energy_v47; assert_in_epsilon(4.419972571042802, worksheet.outputs_energy_v47, 0.002); end
  def test_outputs_energy_w47; assert_in_epsilon(4.585813855446565, worksheet.outputs_energy_w47, 0.002); end
  def test_outputs_energy_x47; assert_in_epsilon(4.732872642171436, worksheet.outputs_energy_x47, 0.002); end
  def test_outputs_energy_y47; assert_in_epsilon(4.859408605947314, worksheet.outputs_energy_y47, 0.002); end
  def test_outputs_energy_z47; assert_in_epsilon(4.9640425768252445, worksheet.outputs_energy_z47, 0.002); end
  def test_outputs_energy_p368; assert_in_epsilon(2011.0, worksheet.outputs_energy_p368, 0.002); end
  def test_outputs_energy_r368; assert_in_epsilon(2011.0, worksheet.outputs_energy_r368, 0.002); end
  def test_outputs_energy_s368; assert_equal("2015", worksheet.outputs_energy_s368); end
  def test_outputs_energy_t368; assert_equal("2020", worksheet.outputs_energy_t368); end
  def test_outputs_energy_u368; assert_equal("2025", worksheet.outputs_energy_u368); end
  def test_outputs_energy_v368; assert_equal("2030", worksheet.outputs_energy_v368); end
  def test_outputs_energy_w368; assert_equal("2035", worksheet.outputs_energy_w368); end
  def test_outputs_energy_x368; assert_equal("2040", worksheet.outputs_energy_x368); end
  def test_outputs_energy_y368; assert_equal("2045", worksheet.outputs_energy_y368); end
  def test_outputs_energy_z368; assert_equal("2050", worksheet.outputs_energy_z368); end
  def test_outputs_energy_c369; assert_equal("Coal + solid modern bioenergy", worksheet.outputs_energy_c369); end
  def test_outputs_energy_d369; assert_equal("G.C.01", worksheet.outputs_energy_d369); end
  def test_outputs_energy_e369; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_e369); end
  def test_outputs_energy_i369; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i369); end
  def test_outputs_energy_j369; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j369); end
  def test_outputs_energy_k369; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k369); end
  def test_outputs_energy_l369; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l369); end
  def test_outputs_energy_m369; assert_equal("non-residential", worksheet.outputs_energy_m369); end
  def test_outputs_energy_p369; assert_in_epsilon(16.66424835831506, worksheet.outputs_energy_p369, 0.002); end
  def test_outputs_energy_r369; assert_in_epsilon(15.060656702653787, worksheet.outputs_energy_r369, 0.002); end
  def test_outputs_energy_s369; assert_in_epsilon(15.833304091433988, worksheet.outputs_energy_s369, 0.002); end
  def test_outputs_energy_t369; assert_in_epsilon(16.368502002929663, worksheet.outputs_energy_t369, 0.002); end
  def test_outputs_energy_u369; assert_in_epsilon(16.82470988165995, worksheet.outputs_energy_u369, 0.002); end
  def test_outputs_energy_v369; assert_in_epsilon(17.16675957672364, worksheet.outputs_energy_v369, 0.002); end
  def test_outputs_energy_w369; assert_in_epsilon(17.383087808365474, worksheet.outputs_energy_w369, 0.002); end
  def test_outputs_energy_x369; assert_in_epsilon(17.500677520945757, worksheet.outputs_energy_x369, 0.002); end
  def test_outputs_energy_y369; assert_in_epsilon(17.520301263983328, worksheet.outputs_energy_y369, 0.002); end
  def test_outputs_energy_z369; assert_in_epsilon(17.419471073386415, worksheet.outputs_energy_z369, 0.002); end
  def test_outputs_energy_c370; assert_equal("Traditional biomass", worksheet.outputs_energy_c370); end
  def test_outputs_energy_d370; assert_equal("G.BM.13", worksheet.outputs_energy_d370); end
  def test_outputs_energy_e370; assert_equal("Global Traditional biomass", worksheet.outputs_energy_e370); end
  def test_outputs_energy_i370; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i370); end
  def test_outputs_energy_j370; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j370); end
  def test_outputs_energy_k370; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k370); end
  def test_outputs_energy_l370; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l370); end
  def test_outputs_energy_m370; assert_equal("non-residential", worksheet.outputs_energy_m370); end
  def test_outputs_energy_p370; assert_in_epsilon(23.83575164168494, worksheet.outputs_energy_p370, 0.002); end
  def test_outputs_energy_r370; assert_in_epsilon(21.54205008268554, worksheet.outputs_energy_r370, 0.002); end
  def test_outputs_energy_s370; assert_in_epsilon(20.13743480733188, worksheet.outputs_energy_s370, 0.002); end
  def test_outputs_energy_t370; assert_in_epsilon(18.56666346103665, worksheet.outputs_energy_t370, 0.002); end
  def test_outputs_energy_u370; assert_in_epsilon(16.802531298057502, worksheet.outputs_energy_u370, 0.002); end
  def test_outputs_energy_v370; assert_in_epsilon(15.053791367133272, worksheet.outputs_energy_v370, 0.002); end
  def test_outputs_energy_w370; assert_in_epsilon(13.706714265203015, worksheet.outputs_energy_w370, 0.002); end
  def test_outputs_energy_x370; assert_in_epsilon(12.380339082789442, worksheet.outputs_energy_x370, 0.002); end
  def test_outputs_energy_y370; assert_in_epsilon(11.519817037777669, worksheet.outputs_energy_y370, 0.002); end
  def test_outputs_energy_z370; assert_in_epsilon(10.674192097173995, worksheet.outputs_energy_z370, 0.002); end
  def test_outputs_energy_c371; assert_equal("Liquid hydrocarbons", worksheet.outputs_energy_c371); end
  def test_outputs_energy_d371; assert_equal("G.C.02", worksheet.outputs_energy_d371); end
  def test_outputs_energy_e371; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_e371); end
  def test_outputs_energy_i371; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i371); end
  def test_outputs_energy_j371; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j371); end
  def test_outputs_energy_k371; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k371); end
  def test_outputs_energy_l371; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l371); end
  def test_outputs_energy_m371; assert_equal("non-residential", worksheet.outputs_energy_m371); end
  def test_outputs_energy_p371; assert_in_epsilon(12.95, worksheet.outputs_energy_p371, 0.002); end
  def test_outputs_energy_r371; assert_in_epsilon(9.286178142155208, worksheet.outputs_energy_r371, 0.002); end
  def test_outputs_energy_s371; assert_in_epsilon(9.87794588368314, worksheet.outputs_energy_s371, 0.002); end
  def test_outputs_energy_t371; assert_in_epsilon(10.371003466573965, worksheet.outputs_energy_t371, 0.002); end
  def test_outputs_energy_u371; assert_in_epsilon(10.813719987135071, worksheet.outputs_energy_u371, 0.002); end
  def test_outputs_energy_v371; assert_in_epsilon(11.183629200400798, worksheet.outputs_energy_v371, 0.002); end
  def test_outputs_energy_w371; assert_in_epsilon(11.44686765548075, worksheet.outputs_energy_w371, 0.002); end
  def test_outputs_energy_x371; assert_in_epsilon(11.641191893257751, worksheet.outputs_energy_x371, 0.002); end
  def test_outputs_energy_y371; assert_in_epsilon(11.733901066954418, worksheet.outputs_energy_y371, 0.002); end
  def test_outputs_energy_z371; assert_in_epsilon(11.765111784738641, worksheet.outputs_energy_z371, 0.002); end
  def test_outputs_energy_c372; assert_equal("Gaseous hydrocarbons", worksheet.outputs_energy_c372); end
  def test_outputs_energy_d372; assert_equal("G.C.03", worksheet.outputs_energy_d372); end
  def test_outputs_energy_e372; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_e372); end
  def test_outputs_energy_i372; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i372); end
  def test_outputs_energy_j372; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j372); end
  def test_outputs_energy_k372; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k372); end
  def test_outputs_energy_l372; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l372); end
  def test_outputs_energy_m372; assert_equal("non-residential", worksheet.outputs_energy_m372); end
  def test_outputs_energy_p372; assert_in_epsilon(24.88, worksheet.outputs_energy_p372, 0.002); end
  def test_outputs_energy_r372; assert_in_epsilon(22.00838896692654, worksheet.outputs_energy_r372, 0.002); end
  def test_outputs_energy_s372; assert_in_epsilon(24.045366993399064, worksheet.outputs_energy_s372, 0.002); end
  def test_outputs_energy_t372; assert_in_epsilon(26.030735443259793, worksheet.outputs_energy_t372, 0.002); end
  def test_outputs_energy_u372; assert_in_epsilon(27.942047856679043, worksheet.outputs_energy_u372, 0.002); end
  def test_outputs_energy_v372; assert_in_epsilon(29.715401376821198, worksheet.outputs_energy_v372, 0.002); end
  def test_outputs_energy_w372; assert_in_epsilon(31.24419302015314, worksheet.outputs_energy_w372, 0.002); end
  def test_outputs_energy_x372; assert_in_epsilon(32.616114722107994, worksheet.outputs_energy_x372, 0.002); end
  def test_outputs_energy_y372; assert_in_epsilon(33.72545760591442, worksheet.outputs_energy_y372, 0.002); end
  def test_outputs_energy_z372; assert_in_epsilon(34.68229052739203, worksheet.outputs_energy_z372, 0.002); end
  def test_outputs_energy_c373; assert_equal("Electricity grid", worksheet.outputs_energy_c373); end
  def test_outputs_energy_d373; assert_equal("G.E.01", worksheet.outputs_energy_d373); end
  def test_outputs_energy_e373; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_e373); end
  def test_outputs_energy_i373; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i373); end
  def test_outputs_energy_j373; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j373); end
  def test_outputs_energy_k373; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k373); end
  def test_outputs_energy_l373; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l373); end
  def test_outputs_energy_m373; assert_equal("non-residential", worksheet.outputs_energy_m373); end
  def test_outputs_energy_p373; assert_in_epsilon(34.28, worksheet.outputs_energy_p373, 0.002); end
  def test_outputs_energy_r373; assert_in_epsilon(36.79584224618469, worksheet.outputs_energy_r373, 0.002); end
  def test_outputs_energy_s373; assert_in_epsilon(41.362813156250084, worksheet.outputs_energy_s373, 0.002); end
  def test_outputs_energy_t373; assert_in_epsilon(47.25791354275226, worksheet.outputs_energy_t373, 0.002); end
  def test_outputs_energy_u373; assert_in_epsilon(53.461176157064834, worksheet.outputs_energy_u373, 0.002); end
  def test_outputs_energy_v373; assert_in_epsilon(59.86735821154301, worksheet.outputs_energy_v373, 0.002); end
  def test_outputs_energy_w373; assert_in_epsilon(66.29141296433967, worksheet.outputs_energy_w373, 0.002); end
  def test_outputs_energy_x373; assert_in_epsilon(72.81608792777982, worksheet.outputs_energy_x373, 0.002); end
  def test_outputs_energy_y373; assert_in_epsilon(79.22021132548555, worksheet.outputs_energy_y373, 0.002); end
  def test_outputs_energy_z373; assert_in_epsilon(85.61074871536206, worksheet.outputs_energy_z373, 0.002); end
  def test_outputs_energy_c374; assert_equal("Heat network", worksheet.outputs_energy_c374); end
  def test_outputs_energy_d374; assert_equal("G.H.01", worksheet.outputs_energy_d374); end
  def test_outputs_energy_e374; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_e374); end
  def test_outputs_energy_i374; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i374); end
  def test_outputs_energy_j374; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j374); end
  def test_outputs_energy_k374; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k374); end
  def test_outputs_energy_l374; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l374); end
  def test_outputs_energy_m374; assert_equal("non-residential", worksheet.outputs_energy_m374); end
  def test_outputs_energy_p374; assert_in_epsilon(5.46, worksheet.outputs_energy_p374, 0.002); end
  def test_outputs_energy_r374; assert_in_epsilon(5.601306145677334, worksheet.outputs_energy_r374, 0.002); end
  def test_outputs_energy_s374; assert_in_epsilon(5.890769318374725, worksheet.outputs_energy_s374, 0.002); end
  def test_outputs_energy_t374; assert_in_epsilon(6.097770001901651, worksheet.outputs_energy_t374, 0.002); end
  def test_outputs_energy_u374; assert_in_epsilon(6.239372304294689, worksheet.outputs_energy_u374, 0.002); end
  def test_outputs_energy_v374; assert_in_epsilon(6.302886505355551, worksheet.outputs_energy_v374, 0.002); end
  def test_outputs_energy_w374; assert_in_epsilon(6.267391544803143, worksheet.outputs_energy_w374, 0.002); end
  def test_outputs_energy_x374; assert_in_epsilon(6.148082023926924, worksheet.outputs_energy_x374, 0.002); end
  def test_outputs_energy_y374; assert_in_epsilon(5.9244840002756245, worksheet.outputs_energy_y374, 0.002); end
  def test_outputs_energy_z374; assert_in_epsilon(5.618326571803069, worksheet.outputs_energy_z374, 0.002); end
  def test_outputs_energy_c375; assert_equal("Solar", worksheet.outputs_energy_c375); end
  def test_outputs_energy_d375; assert_equal("G.R.01", worksheet.outputs_energy_d375); end
  def test_outputs_energy_e375; assert_equal("Global Solar", worksheet.outputs_energy_e375); end
  def test_outputs_energy_f375; assert_equal("G.R.07", worksheet.outputs_energy_f375); end
  def test_outputs_energy_g375; assert_equal("Global Environmental heat", worksheet.outputs_energy_g375); end
  def test_outputs_energy_i375; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i375); end
  def test_outputs_energy_j375; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j375); end
  def test_outputs_energy_k375; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k375); end
  def test_outputs_energy_l375; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l375); end
  def test_outputs_energy_m375; assert_equal("non-residential", worksheet.outputs_energy_m375); end
  def test_outputs_energy_r375; assert_in_epsilon(5.993633125060281, worksheet.outputs_energy_r375, 0.002); end
  def test_outputs_energy_s375; assert_in_epsilon(6.804473006868597, worksheet.outputs_energy_s375, 0.002); end
  def test_outputs_energy_t375; assert_in_epsilon(7.813055465574116, worksheet.outputs_energy_t375, 0.002); end
  def test_outputs_energy_u375; assert_in_epsilon(8.881641199998025, worksheet.outputs_energy_u375, 0.002); end
  def test_outputs_energy_v375; assert_in_epsilon(9.98747034846003, worksheet.outputs_energy_v375, 0.002); end
  def test_outputs_energy_w375; assert_in_epsilon(11.09198943983706, worksheet.outputs_energy_w375, 0.002); end
  def test_outputs_energy_x375; assert_in_epsilon(12.207607554155405, worksheet.outputs_energy_x375, 0.002); end
  def test_outputs_energy_y375; assert_in_epsilon(13.288224480404306, worksheet.outputs_energy_y375, 0.002); end
  def test_outputs_energy_z375; assert_in_epsilon(14.349349675295745, worksheet.outputs_energy_z375, 0.002); end
  def test_outputs_energy_c480; assert_equal("Description", worksheet.outputs_energy_c480); end
  def test_outputs_energy_r480; assert_in_epsilon(2011.0, worksheet.outputs_energy_r480, 0.002); end
  def test_outputs_energy_s480; assert_equal("2015", worksheet.outputs_energy_s480); end
  def test_outputs_energy_t480; assert_equal("2020", worksheet.outputs_energy_t480); end
  def test_outputs_energy_u480; assert_equal("2025", worksheet.outputs_energy_u480); end
  def test_outputs_energy_v480; assert_equal("2030", worksheet.outputs_energy_v480); end
  def test_outputs_energy_w480; assert_equal("2035", worksheet.outputs_energy_w480); end
  def test_outputs_energy_x480; assert_equal("2040", worksheet.outputs_energy_x480); end
  def test_outputs_energy_y480; assert_equal("2045", worksheet.outputs_energy_y480); end
  def test_outputs_energy_z480; assert_equal("2050", worksheet.outputs_energy_z480); end
  def test_outputs_energy_c481; assert_equal("Chemicals & petrochemicals.HVC", worksheet.outputs_energy_c481); end
  def test_outputs_energy_i481; assert_equal("G.M.02", worksheet.outputs_energy_i481); end
  def test_outputs_energy_r481; assert_in_epsilon(19.460745993692754, worksheet.outputs_energy_r481, 0.002); end
  def test_outputs_energy_s481; assert_in_epsilon(20.695930424607596, worksheet.outputs_energy_s481, 0.002); end
  def test_outputs_energy_t481; assert_in_epsilon(24.089645030996927, worksheet.outputs_energy_t481, 0.002); end
  def test_outputs_energy_u481; assert_in_epsilon(27.643962123089786, worksheet.outputs_energy_u481, 0.002); end
  def test_outputs_energy_v481; assert_in_epsilon(31.504890211955768, worksheet.outputs_energy_v481, 0.002); end
  def test_outputs_energy_w481; assert_in_epsilon(35.52653039825862, worksheet.outputs_energy_w481, 0.002); end
  def test_outputs_energy_x481; assert_in_epsilon(40.190017552166196, worksheet.outputs_energy_x481, 0.002); end
  def test_outputs_energy_y481; assert_in_epsilon(45.136387297913345, worksheet.outputs_energy_y481, 0.002); end
  def test_outputs_energy_z481; assert_in_epsilon(50.786199012834665, worksheet.outputs_energy_z481, 0.002); end
  def test_outputs_energy_c482; assert_equal("Chemicals & petrochemicals.Ammonia", worksheet.outputs_energy_c482); end
  def test_outputs_energy_i482; assert_equal("G.M.02", worksheet.outputs_energy_i482); end
  def test_outputs_energy_r482; assert_in_epsilon(5.957349170600305, worksheet.outputs_energy_r482, 0.002); end
  def test_outputs_energy_s482; assert_in_epsilon(6.219172136917445, worksheet.outputs_energy_s482, 0.002); end
  def test_outputs_energy_t482; assert_in_epsilon(6.53954154527417, worksheet.outputs_energy_t482, 0.002); end
  def test_outputs_energy_u482; assert_in_epsilon(6.838832205006832, worksheet.outputs_energy_u482, 0.002); end
  def test_outputs_energy_v482; assert_in_epsilon(7.132444171025553, worksheet.outputs_energy_v482, 0.002); end
  def test_outputs_energy_w482; assert_in_epsilon(7.435479463014127, worksheet.outputs_energy_w482, 0.002); end
  def test_outputs_energy_x482; assert_in_epsilon(7.747337635170221, worksheet.outputs_energy_x482, 0.002); end
  def test_outputs_energy_y482; assert_in_epsilon(8.036699249886938, worksheet.outputs_energy_y482, 0.002); end
  def test_outputs_energy_z482; assert_in_epsilon(8.341583760500425, worksheet.outputs_energy_z482, 0.002); end
  def test_outputs_energy_c483; assert_equal("Chemicals & petrochemicals.Methanol", worksheet.outputs_energy_c483); end
  def test_outputs_energy_i483; assert_equal("G.M.02", worksheet.outputs_energy_i483); end
  def test_outputs_energy_r483; assert_in_epsilon(1.6638113188620842, worksheet.outputs_energy_r483, 0.002); end
  def test_outputs_energy_s483; assert_in_epsilon(1.7542174279521392, worksheet.outputs_energy_s483, 0.002); end
  def test_outputs_energy_t483; assert_in_epsilon(2.0470740193463226, worksheet.outputs_energy_t483, 0.002); end
  def test_outputs_energy_u483; assert_in_epsilon(2.3502078403293556, worksheet.outputs_energy_u483, 0.002); end
  def test_outputs_energy_v483; assert_in_epsilon(2.6783064375936223, worksheet.outputs_energy_v483, 0.002); end
  def test_outputs_energy_w483; assert_in_epsilon(3.0198392079454055, worksheet.outputs_energy_w483, 0.002); end
  def test_outputs_energy_x483; assert_in_epsilon(3.416150115935345, worksheet.outputs_energy_x483, 0.002); end
  def test_outputs_energy_y483; assert_in_epsilon(3.832966696569927, worksheet.outputs_energy_y483, 0.002); end
  def test_outputs_energy_z483; assert_in_epsilon(4.317173953251161, worksheet.outputs_energy_z483, 0.002); end
  def test_outputs_energy_c484; assert_equal("Chemicals & petrochemicals.Others", worksheet.outputs_energy_c484); end
  def test_outputs_energy_i484; assert_equal("G.M.02", worksheet.outputs_energy_i484); end
  def test_outputs_energy_r484; assert_in_epsilon(12.7269993633999, worksheet.outputs_energy_r484, 0.002); end
  def test_outputs_energy_s484; assert_in_epsilon(13.360822027687508, worksheet.outputs_energy_s484, 0.002); end
  def test_outputs_energy_t484; assert_in_epsilon(15.600948934078104, worksheet.outputs_energy_t484, 0.002); end
  def test_outputs_energy_u484; assert_in_epsilon(17.922201911085814, worksheet.outputs_energy_u484, 0.002); end
  def test_outputs_energy_v484; assert_in_epsilon(20.436800302083146, worksheet.outputs_energy_v484, 0.002); end
  def test_outputs_energy_w484; assert_in_epsilon(23.05705902806373, worksheet.outputs_energy_w484, 0.002); end
  def test_outputs_energy_x484; assert_in_epsilon(26.099032562204222, worksheet.outputs_energy_x484, 0.002); end
  def test_outputs_energy_y484; assert_in_epsilon(29.301495983114524, worksheet.outputs_energy_y484, 0.002); end
  def test_outputs_energy_z484; assert_in_epsilon(33.02337803080459, worksheet.outputs_energy_z484, 0.002); end
  def test_outputs_energy_c485; assert_equal("Total", worksheet.outputs_energy_c485); end
  def test_outputs_energy_r485; assert_in_epsilon(39.80890584655504, worksheet.outputs_energy_r485, 0.002); end
  def test_outputs_energy_s485; assert_in_epsilon(42.030142017164685, worksheet.outputs_energy_s485, 0.002); end
  def test_outputs_energy_t485; assert_in_epsilon(48.277209529695526, worksheet.outputs_energy_t485, 0.002); end
  def test_outputs_energy_u485; assert_in_epsilon(54.755204079511785, worksheet.outputs_energy_u485, 0.002); end
  def test_outputs_energy_v485; assert_in_epsilon(61.752441122658084, worksheet.outputs_energy_v485, 0.002); end
  def test_outputs_energy_w485; assert_in_epsilon(69.03890809728188, worksheet.outputs_energy_w485, 0.002); end
  def test_outputs_energy_x485; assert_in_epsilon(77.45253786547599, worksheet.outputs_energy_x485, 0.002); end
  def test_outputs_energy_y485; assert_in_epsilon(86.30754922748473, worksheet.outputs_energy_y485, 0.002); end
  def test_outputs_energy_z485; assert_in_epsilon(96.46833475739083, worksheet.outputs_energy_z485, 0.002); end
  def test_outputs_energy_d208; assert_in_epsilon(946.0, worksheet.outputs_energy_d208, 0.002); end
  def test_outputs_energy_d209; assert_in_epsilon(861.0, worksheet.outputs_energy_d209, 0.002); end
  def test_outputs_energy_d238; assert_in_epsilon(14500.0, worksheet.outputs_energy_d238, 0.002); end
  def test_outputs_energy_d239; assert_in_epsilon(10800.0, worksheet.outputs_energy_d239, 0.002); end
  def test_outputs_energy_d240; assert_in_epsilon(12650.0, worksheet.outputs_energy_d240, 0.002); end
  def test_outputs_energy_h208; assert_in_epsilon(251.76497198983733, worksheet.outputs_energy_h208, 0.002); end
  def test_outputs_energy_h221; assert_in_epsilon(129.36370396489366, worksheet.outputs_energy_h221, 0.002); end
  def test_outputs_energy_h214; assert_in_epsilon(210662709898534.9, worksheet.outputs_energy_h214, 0.002); end
  def test_outputs_energy_h228; assert_in_delta(0.0026304746169559024, worksheet.outputs_energy_h228, 0.002); end
  def test_outputs_energy_d305; assert_equal("Technology description", worksheet.outputs_energy_d305); end
  def test_outputs_energy_h305; assert_equal("1975", worksheet.outputs_energy_h305); end
  def test_outputs_energy_i305; assert_equal("1980", worksheet.outputs_energy_i305); end
  def test_outputs_energy_j305; assert_equal("1985", worksheet.outputs_energy_j305); end
  def test_outputs_energy_k305; assert_equal("1990", worksheet.outputs_energy_k305); end
  def test_outputs_energy_l305; assert_equal("1995", worksheet.outputs_energy_l305); end
  def test_outputs_energy_m305; assert_equal("2000", worksheet.outputs_energy_m305); end
  def test_outputs_energy_n305; assert_equal("2005", worksheet.outputs_energy_n305); end
  def test_outputs_energy_o305; assert_in_epsilon(2010.0, worksheet.outputs_energy_o305, 0.002); end
  def test_outputs_energy_p305; assert_in_epsilon(2011.0, worksheet.outputs_energy_p305, 0.002); end
  def test_outputs_energy_r305; assert_in_epsilon(2011.0, worksheet.outputs_energy_r305, 0.002); end
  def test_outputs_energy_s305; assert_equal("2015", worksheet.outputs_energy_s305); end
  def test_outputs_energy_t305; assert_equal("2020", worksheet.outputs_energy_t305); end
  def test_outputs_energy_u305; assert_equal("2025", worksheet.outputs_energy_u305); end
  def test_outputs_energy_v305; assert_equal("2030", worksheet.outputs_energy_v305); end
  def test_outputs_energy_w305; assert_equal("2035", worksheet.outputs_energy_w305); end
  def test_outputs_energy_x305; assert_equal("2040", worksheet.outputs_energy_x305); end
  def test_outputs_energy_y305; assert_equal("2045", worksheet.outputs_energy_y305); end
  def test_outputs_energy_z305; assert_equal("2050", worksheet.outputs_energy_z305); end
  def test_outputs_energy_d306; assert_equal("Unabated solid fuel power plants", worksheet.outputs_energy_d306); end
  def test_outputs_energy_h306; assert_in_epsilon(8.6961132, worksheet.outputs_energy_h306, 0.002); end
  def test_outputs_energy_i306; assert_in_epsilon(11.4665868, worksheet.outputs_energy_i306, 0.002); end
  def test_outputs_energy_j306; assert_in_epsilon(13.906404, worksheet.outputs_energy_j306, 0.002); end
  def test_outputs_energy_k306; assert_in_epsilon(16.4052396, worksheet.outputs_energy_k306, 0.002); end
  def test_outputs_energy_l306; assert_in_epsilon(18.456966, worksheet.outputs_energy_l306, 0.002); end
  def test_outputs_energy_m306; assert_in_epsilon(22.2185448, worksheet.outputs_energy_m306, 0.002); end
  def test_outputs_energy_n306; assert_in_epsilon(27.2447424, worksheet.outputs_energy_n306, 0.002); end
  def test_outputs_energy_o306; assert_in_epsilon(32.5517508, worksheet.outputs_energy_o306, 0.002); end
  def test_outputs_energy_p306; assert_in_epsilon(34.4380896, worksheet.outputs_energy_p306, 0.002); end
  def test_outputs_energy_r306; assert_in_epsilon(35.51115935359075, worksheet.outputs_energy_r306, 0.002); end
  def test_outputs_energy_s306; assert_in_epsilon(34.94461714913772, worksheet.outputs_energy_s306, 0.002); end
  def test_outputs_energy_t306; assert_in_epsilon(38.07559574239153, worksheet.outputs_energy_t306, 0.002); end
  def test_outputs_energy_u306; assert_in_epsilon(43.59954600858679, worksheet.outputs_energy_u306, 0.002); end
  def test_outputs_energy_v306; assert_in_epsilon(48.739081132075675, worksheet.outputs_energy_v306, 0.002); end
  def test_outputs_energy_w306; assert_in_epsilon(51.801671537727465, worksheet.outputs_energy_w306, 0.002); end
  def test_outputs_energy_x306; assert_in_epsilon(54.470247651739605, worksheet.outputs_energy_x306, 0.002); end
  def test_outputs_energy_y306; assert_in_epsilon(52.98028257552173, worksheet.outputs_energy_y306, 0.002); end
  def test_outputs_energy_z306; assert_in_epsilon(53.290856626205866, worksheet.outputs_energy_z306, 0.002); end
  def test_outputs_energy_d307; assert_equal("Unabated liquid fuel power plants", worksheet.outputs_energy_d307); end
  def test_outputs_energy_h307; assert_in_epsilon(5.200236, worksheet.outputs_energy_h307, 0.002); end
  def test_outputs_energy_i307; assert_in_epsilon(5.9519628, worksheet.outputs_energy_i307, 0.002); end
  def test_outputs_energy_j307; assert_in_epsilon(4.2661512, worksheet.outputs_energy_j307, 0.002); end
  def test_outputs_energy_k307; assert_in_epsilon(4.7950164, worksheet.outputs_energy_k307, 0.002); end
  def test_outputs_energy_l307; assert_in_epsilon(4.4350452, worksheet.outputs_energy_l307, 0.002); end
  def test_outputs_energy_m307; assert_in_epsilon(4.320846, worksheet.outputs_energy_m307, 0.002); end
  def test_outputs_energy_n307; assert_in_epsilon(4.1088132, worksheet.outputs_energy_n307, 0.002); end
  def test_outputs_energy_o307; assert_in_epsilon(3.4785432, worksheet.outputs_energy_o307, 0.002); end
  def test_outputs_energy_p307; assert_in_epsilon(3.808314, worksheet.outputs_energy_p307, 0.002); end
  def test_outputs_energy_r307; assert_in_epsilon(4.075051073362873, worksheet.outputs_energy_r307, 0.002); end
  def test_outputs_energy_s307; assert_in_epsilon(4.010038033507607, worksheet.outputs_energy_s307, 0.002); end
  def test_outputs_energy_t307; assert_in_epsilon(6.400923374370847, worksheet.outputs_energy_t307, 0.002); end
  def test_outputs_energy_u307; assert_in_epsilon(7.3678675310678035, worksheet.outputs_energy_u307, 0.002); end
  def test_outputs_energy_v307; assert_in_epsilon(8.36759445984308, worksheet.outputs_energy_v307, 0.002); end
  def test_outputs_energy_w307; assert_in_epsilon(10.608829410863004, worksheet.outputs_energy_w307, 0.002); end
  def test_outputs_energy_x307; assert_in_epsilon(13.195311931138468, worksheet.outputs_energy_x307, 0.002); end
  def test_outputs_energy_y307; assert_in_epsilon(16.801358110630574, worksheet.outputs_energy_y307, 0.002); end
  def test_outputs_energy_z307; assert_in_epsilon(18.963863394010193, worksheet.outputs_energy_z307, 0.002); end
  def test_outputs_energy_d308; assert_equal("Unabated gas fuel power plants", worksheet.outputs_energy_d308); end
  def test_outputs_energy_h308; assert_in_epsilon(2.9048472, worksheet.outputs_energy_h308, 0.002); end
  def test_outputs_energy_i308; assert_in_epsilon(3.597156, worksheet.outputs_energy_i308, 0.002); end
  def test_outputs_energy_j308; assert_in_epsilon(4.4971236, worksheet.outputs_energy_j308, 0.002); end
  def test_outputs_energy_k308; assert_in_epsilon(6.229368, worksheet.outputs_energy_k308, 0.002); end
  def test_outputs_energy_l308; assert_in_epsilon(7.2358848, worksheet.outputs_energy_l308, 0.002); end
  def test_outputs_energy_m308; assert_in_epsilon(9.8646876, worksheet.outputs_energy_m308, 0.002); end
  def test_outputs_energy_n308; assert_in_epsilon(13.20507, worksheet.outputs_energy_n308, 0.002); end
  def test_outputs_energy_o308; assert_in_epsilon(17.210952, worksheet.outputs_energy_o308, 0.002); end
  def test_outputs_energy_p308; assert_in_epsilon(17.4675924, worksheet.outputs_energy_p308, 0.002); end
  def test_outputs_energy_r308; assert_in_epsilon(18.628804906801708, worksheet.outputs_energy_r308, 0.002); end
  def test_outputs_energy_s308; assert_in_epsilon(18.33160243889192, worksheet.outputs_energy_s308, 0.002); end
  def test_outputs_energy_t308; assert_in_epsilon(21.512381649947383, worksheet.outputs_energy_t308, 0.002); end
  def test_outputs_energy_u308; assert_in_epsilon(24.98998368784852, worksheet.outputs_energy_u308, 0.002); end
  def test_outputs_energy_v308; assert_in_epsilon(29.157184818834644, worksheet.outputs_energy_v308, 0.002); end
  def test_outputs_energy_w308; assert_in_epsilon(33.16453878891407, worksheet.outputs_energy_w308, 0.002); end
  def test_outputs_energy_x308; assert_in_epsilon(37.896935866229676, worksheet.outputs_energy_x308, 0.002); end
  def test_outputs_energy_y308; assert_in_epsilon(42.22741338471817, worksheet.outputs_energy_y308, 0.002); end
  def test_outputs_energy_z308; assert_in_epsilon(47.769731840607946, worksheet.outputs_energy_z308, 0.002); end
  def test_outputs_energy_d309; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_d309); end
  def test_outputs_energy_h309; assert_in_delta(0.0, (worksheet.outputs_energy_h309||0), 0.002); end
  def test_outputs_energy_i309; assert_in_delta(0.0, (worksheet.outputs_energy_i309||0), 0.002); end
  def test_outputs_energy_j309; assert_in_delta(0.0, (worksheet.outputs_energy_j309||0), 0.002); end
  def test_outputs_energy_k309; assert_in_delta(0.0, (worksheet.outputs_energy_k309||0), 0.002); end
  def test_outputs_energy_l309; assert_in_delta(0.0, (worksheet.outputs_energy_l309||0), 0.002); end
  def test_outputs_energy_m309; assert_in_delta(0.0, (worksheet.outputs_energy_m309||0), 0.002); end
  def test_outputs_energy_n309; assert_in_delta(0.0, (worksheet.outputs_energy_n309||0), 0.002); end
  def test_outputs_energy_o309; assert_in_delta(0.0, (worksheet.outputs_energy_o309||0), 0.002); end
  def test_outputs_energy_p309; assert_in_delta(0.0, (worksheet.outputs_energy_p309||0), 0.002); end
  def test_outputs_energy_r309; assert_in_delta(0.0, (worksheet.outputs_energy_r309||0), 0.002); end
  def test_outputs_energy_s309; assert_in_delta(0.17041103999999999, worksheet.outputs_energy_s309, 0.002); end
  def test_outputs_energy_t309; assert_in_delta(0.35344512, worksheet.outputs_energy_t309, 0.002); end
  def test_outputs_energy_u309; assert_in_delta(0.3332482559999999, worksheet.outputs_energy_u309, 0.002); end
  def test_outputs_energy_v309; assert_in_delta(0.34460899199999995, worksheet.outputs_energy_v309, 0.002); end
  def test_outputs_energy_w309; assert_in_delta(0.34082208, worksheet.outputs_energy_w309, 0.002); end
  def test_outputs_energy_x309; assert_in_delta(0.30295296000000005, worksheet.outputs_energy_x309, 0.002); end
  def test_outputs_energy_y309; assert_in_delta(0.234788544, worksheet.outputs_energy_y309, 0.002); end
  def test_outputs_energy_z309; assert_in_delta(0.186820992, worksheet.outputs_energy_z309, 0.002); end
  def test_outputs_energy_d310; assert_equal("Nuclear", worksheet.outputs_energy_d310); end
  def test_outputs_energy_h310; assert_in_epsilon(1.3810068, worksheet.outputs_energy_h310, 0.002); end
  def test_outputs_energy_i310; assert_in_epsilon(2.56815, worksheet.outputs_energy_i310, 0.002); end
  def test_outputs_energy_j310; assert_in_epsilon(5.3715528, worksheet.outputs_energy_j310, 0.002); end
  def test_outputs_energy_k310; assert_in_epsilon(7.2464472, worksheet.outputs_energy_k310, 0.002); end
  def test_outputs_energy_l310; assert_in_epsilon(8.3950236, worksheet.outputs_energy_l310, 0.002); end
  def test_outputs_energy_m310; assert_in_epsilon(9.3262428, worksheet.outputs_energy_m310, 0.002); end
  def test_outputs_energy_n310; assert_in_epsilon(9.9646272, worksheet.outputs_energy_n310, 0.002); end
  def test_outputs_energy_o310; assert_in_epsilon(9.9226368, worksheet.outputs_energy_o310, 0.002); end
  def test_outputs_energy_p310; assert_in_epsilon(9.3012444, worksheet.outputs_energy_p310, 0.002); end
  def test_outputs_energy_r310; assert_in_epsilon(8.730094464, worksheet.outputs_energy_r310, 0.002); end
  def test_outputs_energy_s310; assert_in_epsilon(9.95326704, worksheet.outputs_energy_s310, 0.002); end
  def test_outputs_energy_t310; assert_in_epsilon(10.85265864, worksheet.outputs_energy_t310, 0.002); end
  def test_outputs_energy_u310; assert_in_epsilon(11.072930688, worksheet.outputs_energy_u310, 0.002); end
  def test_outputs_energy_v310; assert_in_epsilon(10.881060480000002, worksheet.outputs_energy_v310, 0.002); end
  def test_outputs_energy_w310; assert_in_epsilon(12.161983463999999, worksheet.outputs_energy_w310, 0.002); end
  def test_outputs_energy_x310; assert_in_epsilon(12.089558772, worksheet.outputs_energy_x310, 0.002); end
  def test_outputs_energy_y310; assert_in_epsilon(12.475823796, worksheet.outputs_energy_y310, 0.002); end
  def test_outputs_energy_z310; assert_in_epsilon(12.862088819999997, worksheet.outputs_energy_z310, 0.002); end
  def test_outputs_energy_d311; assert_equal("Wind, solar, marine", worksheet.outputs_energy_d311); end
  def test_outputs_energy_h311; assert_in_delta(0.0018612, worksheet.outputs_energy_h311, 0.002); end
  def test_outputs_energy_i311; assert_in_delta(0.0018216, worksheet.outputs_energy_i311, 0.002); end
  def test_outputs_energy_j311; assert_in_delta(0.0025236, worksheet.outputs_energy_j311, 0.002); end
  def test_outputs_energy_k311; assert_in_delta(0.0188136, worksheet.outputs_energy_k311, 0.002); end
  def test_outputs_energy_l311; assert_in_delta(0.0368568, worksheet.outputs_energy_l311, 0.002); end
  def test_outputs_energy_m311; assert_in_delta(0.1244772, worksheet.outputs_energy_m311, 0.002); end
  def test_outputs_energy_n311; assert_in_delta(0.4177584, worksheet.outputs_energy_n311, 0.002); end
  def test_outputs_energy_o311; assert_in_epsilon(1.370574, worksheet.outputs_energy_o311, 0.002); end
  def test_outputs_energy_p311; assert_in_epsilon(1.8177696, worksheet.outputs_energy_p311, 0.002); end
  def test_outputs_energy_r311; assert_in_epsilon(1.8149072401439998, worksheet.outputs_energy_r311, 0.002); end
  def test_outputs_energy_s311; assert_in_epsilon(3.3442219871999996, worksheet.outputs_energy_s311, 0.002); end
  def test_outputs_energy_t311; assert_in_epsilon(4.203920437919999, worksheet.outputs_energy_t311, 0.002); end
  def test_outputs_energy_u311; assert_in_epsilon(4.87166978664, worksheet.outputs_energy_u311, 0.002); end
  def test_outputs_energy_v311; assert_in_epsilon(5.877861772320001, worksheet.outputs_energy_v311, 0.002); end
  def test_outputs_energy_w311; assert_in_epsilon(6.2594184024, worksheet.outputs_energy_w311, 0.002); end
  def test_outputs_energy_x311; assert_in_epsilon(8.24033313504, worksheet.outputs_energy_x311, 0.002); end
  def test_outputs_energy_y311; assert_in_epsilon(12.523586223599999, worksheet.outputs_energy_y311, 0.002); end
  def test_outputs_energy_z311; assert_in_epsilon(15.8597610228, worksheet.outputs_energy_z311, 0.002); end
  def test_outputs_energy_d312; assert_equal("Hydro", worksheet.outputs_energy_d312); end
  def test_outputs_energy_h312; assert_in_epsilon(5.1973488, worksheet.outputs_energy_h312, 0.002); end
  def test_outputs_energy_i312; assert_in_epsilon(6.180696, worksheet.outputs_energy_i312, 0.002); end
  def test_outputs_energy_j312; assert_in_epsilon(7.103448, worksheet.outputs_energy_j312, 0.002); end
  def test_outputs_energy_k312; assert_in_epsilon(7.7201532, worksheet.outputs_energy_k312, 0.002); end
  def test_outputs_energy_l312; assert_in_epsilon(8.9287596, worksheet.outputs_energy_l312, 0.002); end
  def test_outputs_energy_m312; assert_in_epsilon(9.433656, worksheet.outputs_energy_m312, 0.002); end
  def test_outputs_energy_n312; assert_in_epsilon(10.5463116, worksheet.outputs_energy_n312, 0.002); end
  def test_outputs_energy_o312; assert_in_epsilon(12.389958, worksheet.outputs_energy_o312, 0.002); end
  def test_outputs_energy_p312; assert_in_epsilon(12.5653572, worksheet.outputs_energy_p312, 0.002); end
  def test_outputs_energy_r312; assert_in_epsilon(13.16267496, worksheet.outputs_energy_r312, 0.002); end
  def test_outputs_energy_s312; assert_in_epsilon(18.319186799999997, worksheet.outputs_energy_s312, 0.002); end
  def test_outputs_energy_t312; assert_in_epsilon(19.092663576, worksheet.outputs_energy_t312, 0.002); end
  def test_outputs_energy_u312; assert_in_epsilon(19.757582208000002, worksheet.outputs_energy_u312, 0.002); end
  def test_outputs_energy_v312; assert_in_epsilon(20.429285724, worksheet.outputs_energy_v312, 0.002); end
  def test_outputs_energy_w312; assert_in_epsilon(21.100989239999997, worksheet.outputs_energy_w312, 0.002); end
  def test_outputs_energy_x312; assert_in_epsilon(21.4578741384, worksheet.outputs_energy_x312, 0.002); end
  def test_outputs_energy_y312; assert_in_epsilon(22.1906416104, worksheet.outputs_energy_y312, 0.002); end
  def test_outputs_energy_z312; assert_in_epsilon(22.984473038399997, worksheet.outputs_energy_z312, 0.002); end
  def test_outputs_energy_d313; assert_equal("Geothermal", worksheet.outputs_energy_d313); end
  def test_outputs_energy_h313; assert_in_delta(0.0288324, worksheet.outputs_energy_h313, 0.002); end
  def test_outputs_energy_i313; assert_in_delta(0.0491184, worksheet.outputs_energy_i313, 0.002); end
  def test_outputs_energy_j313; assert_in_delta(0.0825156, worksheet.outputs_energy_j313, 0.002); end
  def test_outputs_energy_k313; assert_in_delta(0.1309248, worksheet.outputs_energy_k313, 0.002); end
  def test_outputs_energy_l313; assert_in_delta(0.143226, worksheet.outputs_energy_l313, 0.002); end
  def test_outputs_energy_m313; assert_in_delta(0.1867716, worksheet.outputs_energy_m313, 0.002); end
  def test_outputs_energy_n313; assert_in_delta(0.2097468, worksheet.outputs_energy_n313, 0.002); end
  def test_outputs_energy_o313; assert_in_delta(0.2452896, worksheet.outputs_energy_o313, 0.002); end
  def test_outputs_energy_p313; assert_in_delta(0.2491632, worksheet.outputs_energy_p313, 0.002); end
  def test_outputs_energy_r313; assert_in_delta(0.26331345864, worksheet.outputs_energy_r313, 0.002); end
  def test_outputs_energy_s313; assert_in_delta(0.334037196, worksheet.outputs_energy_s313, 0.002); end
  def test_outputs_energy_t313; assert_in_delta(0.4070930399999999, worksheet.outputs_energy_t313, 0.002); end
  def test_outputs_energy_u313; assert_in_delta(0.46389672000000004, worksheet.outputs_energy_u313, 0.002); end
  def test_outputs_energy_v313; assert_in_delta(0.5453153279999999, worksheet.outputs_energy_v313, 0.002); end
  def test_outputs_energy_w313; assert_in_delta(0.8432190719999999, worksheet.outputs_energy_w313, 0.002); end
  def test_outputs_energy_x313; assert_in_epsilon(1.0502369279999997, worksheet.outputs_energy_x313, 0.002); end
  def test_outputs_energy_y313; assert_in_epsilon(1.4699530079999996, worksheet.outputs_energy_y313, 0.002); end
  def test_outputs_energy_z313; assert_in_epsilon(1.8454884479999996, worksheet.outputs_energy_z313, 0.002); end
  def test_outputs_energy_d314; assert_equal("Total", worksheet.outputs_energy_d314); end
  def test_outputs_energy_h314; assert_in_epsilon(23.4102456, worksheet.outputs_energy_h314, 0.002); end
  def test_outputs_energy_i314; assert_in_epsilon(29.815491599999998, worksheet.outputs_energy_i314, 0.002); end
  def test_outputs_energy_j314; assert_in_epsilon(35.2297188, worksheet.outputs_energy_j314, 0.002); end
  def test_outputs_energy_k314; assert_in_epsilon(42.545962800000005, worksheet.outputs_energy_k314, 0.002); end
  def test_outputs_energy_l314; assert_in_epsilon(47.631762, worksheet.outputs_energy_l314, 0.002); end
  def test_outputs_energy_m314; assert_in_epsilon(55.475226000000006, worksheet.outputs_energy_m314, 0.002); end
  def test_outputs_energy_n314; assert_in_epsilon(65.6970696, worksheet.outputs_energy_n314, 0.002); end
  def test_outputs_energy_o314; assert_in_epsilon(77.1697044, worksheet.outputs_energy_o314, 0.002); end
  def test_outputs_energy_p314; assert_in_epsilon(79.6475304, worksheet.outputs_energy_p314, 0.002); end
  def test_outputs_energy_r314; assert_in_epsilon(82.18600545653933, worksheet.outputs_energy_r314, 0.002); end
  def test_outputs_energy_s314; assert_in_epsilon(89.40738168473725, worksheet.outputs_energy_s314, 0.002); end
  def test_outputs_energy_t314; assert_in_epsilon(100.89868158062978, worksheet.outputs_energy_t314, 0.002); end
  def test_outputs_energy_u314; assert_in_epsilon(112.45672488614312, worksheet.outputs_energy_u314, 0.002); end
  def test_outputs_energy_v314; assert_in_epsilon(124.34199270707342, worksheet.outputs_energy_v314, 0.002); end
  def test_outputs_energy_w314; assert_in_epsilon(136.28147199590455, worksheet.outputs_energy_w314, 0.002); end
  def test_outputs_energy_x314; assert_in_epsilon(148.70345138254777, worksheet.outputs_energy_x314, 0.002); end
  def test_outputs_energy_y314; assert_in_epsilon(160.90384725287046, worksheet.outputs_energy_y314, 0.002); end
  def test_outputs_energy_z314; assert_in_epsilon(173.76308418202396, worksheet.outputs_energy_z314, 0.002); end
  def test_outputs_energy_d315; assert_equal("Demand for electricity to grid", worksheet.outputs_energy_d315); end
  def test_outputs_energy_f315; assert_equal("Net balance", worksheet.outputs_energy_f315); end
  def test_outputs_energy_g315; assert_equal("G.E.02", worksheet.outputs_energy_g315); end
  def test_outputs_energy_r315; assert_in_epsilon(82.18600545653933, worksheet.outputs_energy_r315, 0.002); end
  def test_outputs_energy_s315; assert_in_epsilon(89.40738168473726, worksheet.outputs_energy_s315, 0.002); end
  def test_outputs_energy_t315; assert_in_epsilon(100.89868158062977, worksheet.outputs_energy_t315, 0.002); end
  def test_outputs_energy_u315; assert_in_epsilon(112.45672488614312, worksheet.outputs_energy_u315, 0.002); end
  def test_outputs_energy_v315; assert_in_epsilon(124.34199270707343, worksheet.outputs_energy_v315, 0.002); end
  def test_outputs_energy_w315; assert_in_epsilon(136.28147199590452, worksheet.outputs_energy_w315, 0.002); end
  def test_outputs_energy_x315; assert_in_epsilon(148.7034513825478, worksheet.outputs_energy_x315, 0.002); end
  def test_outputs_energy_y315; assert_in_epsilon(160.90384725287043, worksheet.outputs_energy_y315, 0.002); end
  def test_outputs_energy_z315; assert_in_epsilon(173.76308418202393, worksheet.outputs_energy_z315, 0.002); end
  def test_outputs_energy_d221; assert_in_epsilon(193.88275276125742, worksheet.outputs_energy_d221, 0.002); end
  def test_outputs_energy_d222; assert_in_epsilon(187.29999999999998, worksheet.outputs_energy_d222, 0.002); end
  def test_outputs_energy_d223; assert_in_epsilon(191.07196261682242, worksheet.outputs_energy_d223, 0.002); end
  def test_outputs_energy_d252; assert_in_epsilon(511000.0, worksheet.outputs_energy_d252, 0.002); end
  def test_outputs_energy_d253; assert_in_epsilon(1300.0, worksheet.outputs_energy_d253, 0.002); end
  def test_outputs_energy_d254; assert_in_epsilon(400.0, worksheet.outputs_energy_d254, 0.002); end
  def test_outputs_energy_d255; assert_in_epsilon(346.99999999999994, worksheet.outputs_energy_d255, 0.002); end
  def test_outputs_energy_c324; assert_equal("Description", worksheet.outputs_energy_c324); end
  def test_outputs_energy_d324; assert_equal("Note for lookups", worksheet.outputs_energy_d324); end
  def test_outputs_energy_e324; assert_equal("Note for lookups 2", worksheet.outputs_energy_e324); end
  def test_outputs_energy_f324; assert_equal("Note for lookups 3", worksheet.outputs_energy_f324); end
  def test_outputs_energy_g324; assert_equal("Note for lookups 4", worksheet.outputs_energy_g324); end
  def test_outputs_energy_j324; assert_equal("1985", worksheet.outputs_energy_j324); end
  def test_outputs_energy_k324; assert_equal("1990", worksheet.outputs_energy_k324); end
  def test_outputs_energy_l324; assert_equal("1995", worksheet.outputs_energy_l324); end
  def test_outputs_energy_m324; assert_equal("2000", worksheet.outputs_energy_m324); end
  def test_outputs_energy_n324; assert_equal("2005", worksheet.outputs_energy_n324); end
  def test_outputs_energy_o324; assert_in_epsilon(2010.0, worksheet.outputs_energy_o324, 0.002); end
  def test_outputs_energy_p324; assert_in_epsilon(2011.0, worksheet.outputs_energy_p324, 0.002); end
  def test_outputs_energy_r324; assert_in_epsilon(2011.0, worksheet.outputs_energy_r324, 0.002); end
  def test_outputs_energy_s324; assert_equal("2015", worksheet.outputs_energy_s324); end
  def test_outputs_energy_t324; assert_equal("2020", worksheet.outputs_energy_t324); end
  def test_outputs_energy_u324; assert_equal("2025", worksheet.outputs_energy_u324); end
  def test_outputs_energy_v324; assert_equal("2030", worksheet.outputs_energy_v324); end
  def test_outputs_energy_w324; assert_equal("2035", worksheet.outputs_energy_w324); end
  def test_outputs_energy_x324; assert_equal("2040", worksheet.outputs_energy_x324); end
  def test_outputs_energy_y324; assert_equal("2045", worksheet.outputs_energy_y324); end
  def test_outputs_energy_z324; assert_equal("2050", worksheet.outputs_energy_z324); end
  def test_outputs_energy_c325; assert_equal("Iron and steel", worksheet.outputs_energy_c325); end
  def test_outputs_energy_d325; assert_equal("Steel.Oxygen", worksheet.outputs_energy_d325); end
  def test_outputs_energy_e325; assert_equal("Steel.OxygenHisarna", worksheet.outputs_energy_e325); end
  def test_outputs_energy_f325; assert_equal("Steel.Electric", worksheet.outputs_energy_f325); end
  def test_outputs_energy_g325; assert_equal("Steel.ElectricDRI", worksheet.outputs_energy_g325); end
  def test_outputs_energy_h325; assert_equal("Steel.others", worksheet.outputs_energy_h325); end
  def test_outputs_energy_i325; assert_equal("G.M.02", worksheet.outputs_energy_i325); end
  def test_outputs_energy_r325; assert_in_epsilon(31.442023857384005, worksheet.outputs_energy_r325, 0.002); end
  def test_outputs_energy_s325; assert_in_epsilon(32.76043177681394, worksheet.outputs_energy_s325, 0.002); end
  def test_outputs_energy_t325; assert_in_epsilon(35.5364608198979, worksheet.outputs_energy_t325, 0.002); end
  def test_outputs_energy_u325; assert_in_epsilon(37.76964498387949, worksheet.outputs_energy_u325, 0.002); end
  def test_outputs_energy_v325; assert_in_epsilon(40.095360433552116, worksheet.outputs_energy_v325, 0.002); end
  def test_outputs_energy_w325; assert_in_epsilon(42.23428200957453, worksheet.outputs_energy_w325, 0.002); end
  def test_outputs_energy_x325; assert_in_epsilon(44.74679733767738, worksheet.outputs_energy_x325, 0.002); end
  def test_outputs_energy_y325; assert_in_epsilon(47.38383753123601, worksheet.outputs_energy_y325, 0.002); end
  def test_outputs_energy_z325; assert_in_epsilon(50.15348220727924, worksheet.outputs_energy_z325, 0.002); end
  def test_outputs_energy_c326; assert_equal("Aluminium", worksheet.outputs_energy_c326); end
  def test_outputs_energy_d326; assert_equal("Aluminium.Alumina", worksheet.outputs_energy_d326); end
  def test_outputs_energy_e326; assert_equal("Aluminium.Primary", worksheet.outputs_energy_e326); end
  def test_outputs_energy_f326; assert_equal("Aluminium.Secondary", worksheet.outputs_energy_f326); end
  def test_outputs_energy_i326; assert_equal("G.M.02", worksheet.outputs_energy_i326); end
  def test_outputs_energy_r326; assert_in_epsilon(4.391030188713756, worksheet.outputs_energy_r326, 0.002); end
  def test_outputs_energy_s326; assert_in_epsilon(4.822864458179914, worksheet.outputs_energy_s326, 0.002); end
  def test_outputs_energy_t326; assert_in_epsilon(5.552273135123121, worksheet.outputs_energy_t326, 0.002); end
  def test_outputs_energy_u326; assert_in_epsilon(6.330926996595696, worksheet.outputs_energy_u326, 0.002); end
  def test_outputs_energy_v326; assert_in_epsilon(7.168023217655056, worksheet.outputs_energy_v326, 0.002); end
  def test_outputs_energy_w326; assert_in_epsilon(8.024070713352367, worksheet.outputs_energy_w326, 0.002); end
  def test_outputs_energy_x326; assert_in_epsilon(8.998392277875435, worksheet.outputs_energy_x326, 0.002); end
  def test_outputs_energy_y326; assert_in_epsilon(10.036098159785556, worksheet.outputs_energy_y326, 0.002); end
  def test_outputs_energy_z326; assert_in_epsilon(11.224334616295751, worksheet.outputs_energy_z326, 0.002); end
  def test_outputs_energy_c327; assert_equal("Chemicals", worksheet.outputs_energy_c327); end
  def test_outputs_energy_d327; assert_equal("Chemicals & petrochemicals.HVC", worksheet.outputs_energy_d327); end
  def test_outputs_energy_e327; assert_equal("Chemicals & petrochemicals.Ammonia", worksheet.outputs_energy_e327); end
  def test_outputs_energy_f327; assert_equal("Chemicals & petrochemicals.Methanol", worksheet.outputs_energy_f327); end
  def test_outputs_energy_g327; assert_equal("Chemicals & petrochemicals.Others", worksheet.outputs_energy_g327); end
  def test_outputs_energy_i327; assert_equal("G.M.02", worksheet.outputs_energy_i327); end
  def test_outputs_energy_r327; assert_in_epsilon(39.80890584655504, worksheet.outputs_energy_r327, 0.002); end
  def test_outputs_energy_s327; assert_in_epsilon(42.030142017164685, worksheet.outputs_energy_s327, 0.002); end
  def test_outputs_energy_t327; assert_in_epsilon(48.277209529695526, worksheet.outputs_energy_t327, 0.002); end
  def test_outputs_energy_u327; assert_in_epsilon(54.755204079511785, worksheet.outputs_energy_u327, 0.002); end
  def test_outputs_energy_v327; assert_in_epsilon(61.752441122658084, worksheet.outputs_energy_v327, 0.002); end
  def test_outputs_energy_w327; assert_in_epsilon(69.03890809728188, worksheet.outputs_energy_w327, 0.002); end
  def test_outputs_energy_x327; assert_in_epsilon(77.45253786547599, worksheet.outputs_energy_x327, 0.002); end
  def test_outputs_energy_y327; assert_in_epsilon(86.30754922748473, worksheet.outputs_energy_y327, 0.002); end
  def test_outputs_energy_z327; assert_in_epsilon(96.46833475739083, worksheet.outputs_energy_z327, 0.002); end
  def test_outputs_energy_c328; assert_equal("Pulp and paper", worksheet.outputs_energy_c328); end
  def test_outputs_energy_d328; assert_equal("Pulp & paper.Pulp", worksheet.outputs_energy_d328); end
  def test_outputs_energy_e328; assert_equal("Pulp & paper.Virgin", worksheet.outputs_energy_e328); end
  def test_outputs_energy_f328; assert_equal("Pulp & paper.Recycled", worksheet.outputs_energy_f328); end
  def test_outputs_energy_i328; assert_equal("G.M.02", worksheet.outputs_energy_i328); end
  def test_outputs_energy_r328; assert_in_epsilon(6.611365904969887, worksheet.outputs_energy_r328, 0.002); end
  def test_outputs_energy_s328; assert_in_epsilon(6.842248004373002, worksheet.outputs_energy_s328, 0.002); end
  def test_outputs_energy_t328; assert_in_epsilon(7.881785519501511, worksheet.outputs_energy_t328, 0.002); end
  def test_outputs_energy_u328; assert_in_epsilon(8.95053248191962, worksheet.outputs_energy_u328, 0.002); end
  def test_outputs_energy_v328; assert_in_epsilon(10.110058384978377, worksheet.outputs_energy_v328, 0.002); end
  def test_outputs_energy_w328; assert_in_epsilon(11.336475614715921, worksheet.outputs_energy_w328, 0.002); end
  def test_outputs_energy_x328; assert_in_epsilon(12.746452325961583, worksheet.outputs_energy_x328, 0.002); end
  def test_outputs_energy_y328; assert_in_epsilon(14.249249035374849, worksheet.outputs_energy_y328, 0.002); end
  def test_outputs_energy_z328; assert_in_epsilon(15.985481167093008, worksheet.outputs_energy_z328, 0.002); end
  def test_outputs_energy_c329; assert_equal("Cement", worksheet.outputs_energy_c329); end
  def test_outputs_energy_d329; assert_equal("Cement", worksheet.outputs_energy_d329); end
  def test_outputs_energy_i329; assert_equal("G.M.02", worksheet.outputs_energy_i329); end
  def test_outputs_energy_r329; assert_in_epsilon(10.600379598268718, worksheet.outputs_energy_r329, 0.002); end
  def test_outputs_energy_s329; assert_in_epsilon(10.895857974933485, worksheet.outputs_energy_s329, 0.002); end
  def test_outputs_energy_t329; assert_in_epsilon(11.446185999013144, worksheet.outputs_energy_t329, 0.002); end
  def test_outputs_energy_u329; assert_in_epsilon(11.633288734537036, worksheet.outputs_energy_u329, 0.002); end
  def test_outputs_energy_v329; assert_in_epsilon(11.783495682215477, worksheet.outputs_energy_v329, 0.002); end
  def test_outputs_energy_w329; assert_in_epsilon(11.927143571800197, worksheet.outputs_energy_w329, 0.002); end
  def test_outputs_energy_x329; assert_in_epsilon(12.035109513871804, worksheet.outputs_energy_x329, 0.002); end
  def test_outputs_energy_y329; assert_in_epsilon(12.086982017184825, worksheet.outputs_energy_y329, 0.002); end
  def test_outputs_energy_z329; assert_in_epsilon(12.200900307691672, worksheet.outputs_energy_z329, 0.002); end
  def test_outputs_energy_c330; assert_equal("Other", worksheet.outputs_energy_c330); end
  def test_outputs_energy_d330; assert_equal("Other industries", worksheet.outputs_energy_d330); end
  def test_outputs_energy_i330; assert_equal("G.M.02", worksheet.outputs_energy_i330); end
  def test_outputs_energy_r330; assert_in_epsilon(44.35126743259007, worksheet.outputs_energy_r330, 0.002); end
  def test_outputs_energy_s330; assert_in_epsilon(45.616371373795545, worksheet.outputs_energy_s330, 0.002); end
  def test_outputs_energy_t330; assert_in_epsilon(49.275393201650445, worksheet.outputs_energy_t330, 0.002); end
  def test_outputs_energy_u330; assert_in_epsilon(52.06925320910357, worksheet.outputs_energy_u330, 0.002); end
  def test_outputs_energy_v330; assert_in_epsilon(54.90473406542673, worksheet.outputs_energy_v330, 0.002); end
  def test_outputs_energy_w330; assert_in_epsilon(57.747296899687946, worksheet.outputs_energy_w330, 0.002); end
  def test_outputs_energy_x330; assert_in_epsilon(60.79431708509819, worksheet.outputs_energy_x330, 0.002); end
  def test_outputs_energy_y330; assert_in_epsilon(63.85170369499053, worksheet.outputs_energy_y330, 0.002); end
  def test_outputs_energy_z330; assert_in_epsilon(67.31082850160276, worksheet.outputs_energy_z330, 0.002); end
  def test_outputs_energy_c331; assert_equal("Timber", worksheet.outputs_energy_c331); end
  def test_outputs_energy_d331; assert_equal("Timber", worksheet.outputs_energy_d331); end
  def test_outputs_energy_i331; assert_equal("G.M.02", worksheet.outputs_energy_i331); end
  def test_outputs_energy_r331; assert_in_epsilon(6.142647935033603, worksheet.outputs_energy_r331, 0.002); end
  def test_outputs_energy_s331; assert_in_epsilon(6.4061739395364405, worksheet.outputs_energy_s331, 0.002); end
  def test_outputs_energy_t331; assert_in_epsilon(6.620424915213416, worksheet.outputs_energy_t331, 0.002); end
  def test_outputs_energy_u331; assert_in_epsilon(7.0190635928759475, worksheet.outputs_energy_u331, 0.002); end
  def test_outputs_energy_v331; assert_in_epsilon(7.41567619105663, worksheet.outputs_energy_v331, 0.002); end
  def test_outputs_energy_w331; assert_in_epsilon(7.8200054601560725, worksheet.outputs_energy_w331, 0.002); end
  def test_outputs_energy_x331; assert_in_epsilon(8.230177384030435, worksheet.outputs_energy_x331, 0.002); end
  def test_outputs_energy_y331; assert_in_epsilon(8.655980828743617, worksheet.outputs_energy_y331, 0.002); end
  def test_outputs_energy_z331; assert_in_epsilon(9.076055120779431, worksheet.outputs_energy_z331, 0.002); end
  def test_outputs_energy_c332; assert_equal("Total", worksheet.outputs_energy_c332); end
  def test_outputs_energy_j332; assert_in_epsilon(89.51563572, worksheet.outputs_energy_j332, 0.002); end
  def test_outputs_energy_k332; assert_in_epsilon(96.13700115, worksheet.outputs_energy_k332, 0.002); end
  def test_outputs_energy_l332; assert_in_epsilon(97.93670919, worksheet.outputs_energy_l332, 0.002); end
  def test_outputs_energy_m332; assert_in_epsilon(105.12064196, worksheet.outputs_energy_m332, 0.002); end
  def test_outputs_energy_n332; assert_in_epsilon(120.32151098, worksheet.outputs_energy_n332, 0.002); end
  def test_outputs_energy_o332; assert_in_epsilon(137.98756298, worksheet.outputs_energy_o332, 0.002); end
  def test_outputs_energy_p332; assert_in_epsilon(143.27425753, worksheet.outputs_energy_p332, 0.002); end
  def test_outputs_energy_r332; assert_in_epsilon(143.3476207635151, worksheet.outputs_energy_r332, 0.002); end
  def test_outputs_energy_s332; assert_in_epsilon(149.37408954479702, worksheet.outputs_energy_s332, 0.002); end
  def test_outputs_energy_t332; assert_in_epsilon(164.58973312009508, worksheet.outputs_energy_t332, 0.002); end
  def test_outputs_energy_u332; assert_in_epsilon(178.52791407842312, worksheet.outputs_energy_u332, 0.002); end
  def test_outputs_energy_v332; assert_in_epsilon(193.2297890975425, worksheet.outputs_energy_v332, 0.002); end
  def test_outputs_energy_w332; assert_in_epsilon(208.1281823665689, worksheet.outputs_energy_w332, 0.002); end
  def test_outputs_energy_x332; assert_in_epsilon(225.00378378999082, worksheet.outputs_energy_x332, 0.002); end
  def test_outputs_energy_y332; assert_in_epsilon(242.57140049480012, worksheet.outputs_energy_y332, 0.002); end
  def test_outputs_energy_z332; assert_in_epsilon(262.4194166781327, worksheet.outputs_energy_z332, 0.002); end
  def test_outputs_energy_c354; assert_equal("Description", worksheet.outputs_energy_c354); end
  def test_outputs_energy_p354; assert_in_epsilon(2011.0, worksheet.outputs_energy_p354, 0.002); end
  def test_outputs_energy_r354; assert_in_epsilon(2011.0, worksheet.outputs_energy_r354, 0.002); end
  def test_outputs_energy_s354; assert_equal("2015", worksheet.outputs_energy_s354); end
  def test_outputs_energy_t354; assert_equal("2020", worksheet.outputs_energy_t354); end
  def test_outputs_energy_u354; assert_equal("2025", worksheet.outputs_energy_u354); end
  def test_outputs_energy_v354; assert_equal("2030", worksheet.outputs_energy_v354); end
  def test_outputs_energy_w354; assert_equal("2035", worksheet.outputs_energy_w354); end
  def test_outputs_energy_x354; assert_equal("2040", worksheet.outputs_energy_x354); end
  def test_outputs_energy_y354; assert_equal("2045", worksheet.outputs_energy_y354); end
  def test_outputs_energy_z354; assert_equal("2050", worksheet.outputs_energy_z354); end
  def test_outputs_energy_c355; assert_equal("Coal + solid modern bioenergy", worksheet.outputs_energy_c355); end
  def test_outputs_energy_d355; assert_equal("G.C.01", worksheet.outputs_energy_d355); end
  def test_outputs_energy_e355; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_e355); end
  def test_outputs_energy_f355; assert_equal("G.FF.01", worksheet.outputs_energy_f355); end
  def test_outputs_energy_g355; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_g355); end
  def test_outputs_energy_k355; assert_equal("Global manufacturing", worksheet.outputs_energy_k355); end
  def test_outputs_energy_p355; assert_in_epsilon(50.46, worksheet.outputs_energy_p355, 0.002); end
  def test_outputs_energy_r355; assert_in_epsilon(50.709351809629126, worksheet.outputs_energy_r355, 0.002); end
  def test_outputs_energy_s355; assert_in_epsilon(52.48892947643998, worksheet.outputs_energy_s355, 0.002); end
  def test_outputs_energy_t355; assert_in_epsilon(56.75355699961376, worksheet.outputs_energy_t355, 0.002); end
  def test_outputs_energy_u355; assert_in_epsilon(60.27541639084451, worksheet.outputs_energy_u355, 0.002); end
  def test_outputs_energy_v355; assert_in_epsilon(63.895814833519715, worksheet.outputs_energy_v355, 0.002); end
  def test_outputs_energy_w355; assert_in_epsilon(67.4169487112742, worksheet.outputs_energy_w355, 0.002); end
  def test_outputs_energy_x355; assert_in_epsilon(71.38832519595387, worksheet.outputs_energy_x355, 0.002); end
  def test_outputs_energy_y355; assert_in_epsilon(75.4791592112768, worksheet.outputs_energy_y355, 0.002); end
  def test_outputs_energy_z355; assert_in_epsilon(79.98703973328934, worksheet.outputs_energy_z355, 0.002); end
  def test_outputs_energy_c356; assert_equal("Liquid hydrocarbons", worksheet.outputs_energy_c356); end
  def test_outputs_energy_d356; assert_equal("G.C.02", worksheet.outputs_energy_d356); end
  def test_outputs_energy_e356; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_e356); end
  def test_outputs_energy_f356; assert_equal("G.FF.02", worksheet.outputs_energy_f356); end
  def test_outputs_energy_g356; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_g356); end
  def test_outputs_energy_k356; assert_equal("Global manufacturing", worksheet.outputs_energy_k356); end
  def test_outputs_energy_p356; assert_in_epsilon(30.59, worksheet.outputs_energy_p356, 0.002); end
  def test_outputs_energy_r356; assert_in_epsilon(30.80950689932375, worksheet.outputs_energy_r356, 0.002); end
  def test_outputs_energy_s356; assert_in_epsilon(32.39255087607285, worksheet.outputs_energy_s356, 0.002); end
  def test_outputs_energy_t356; assert_in_epsilon(36.73011650734025, worksheet.outputs_energy_t356, 0.002); end
  def test_outputs_energy_u356; assert_in_epsilon(41.03073142639957, worksheet.outputs_energy_u356, 0.002); end
  def test_outputs_energy_v356; assert_in_epsilon(45.65455274197766, worksheet.outputs_energy_v356, 0.002); end
  def test_outputs_energy_w356; assert_in_epsilon(50.44322301507104, worksheet.outputs_energy_w356, 0.002); end
  def test_outputs_energy_x356; assert_in_epsilon(55.93696106805981, worksheet.outputs_energy_x356, 0.002); end
  def test_outputs_energy_y356; assert_in_epsilon(61.725543802088175, worksheet.outputs_energy_y356, 0.002); end
  def test_outputs_energy_z356; assert_in_epsilon(68.3313589772648, worksheet.outputs_energy_z356, 0.002); end
  def test_outputs_energy_c357; assert_equal("Gaseous hydrocarbons", worksheet.outputs_energy_c357); end
  def test_outputs_energy_d357; assert_equal("G.C.03", worksheet.outputs_energy_d357); end
  def test_outputs_energy_e357; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_e357); end
  def test_outputs_energy_f357; assert_equal("G.FF.03", worksheet.outputs_energy_f357); end
  def test_outputs_energy_g357; assert_equal("Global Natural gas", worksheet.outputs_energy_g357); end
  def test_outputs_energy_k357; assert_equal("Global manufacturing", worksheet.outputs_energy_k357); end
  def test_outputs_energy_p357; assert_in_epsilon(27.89, worksheet.outputs_energy_p357, 0.002); end
  def test_outputs_energy_r357; assert_in_epsilon(27.233246077496677, worksheet.outputs_energy_r357, 0.002); end
  def test_outputs_energy_s357; assert_in_epsilon(28.565282930945383, worksheet.outputs_energy_s357, 0.002); end
  def test_outputs_energy_t357; assert_in_epsilon(31.441618093544154, worksheet.outputs_energy_t357, 0.002); end
  def test_outputs_energy_u357; assert_in_epsilon(34.11248401104295, worksheet.outputs_energy_u357, 0.002); end
  def test_outputs_energy_v357; assert_in_epsilon(36.91738725719273, worksheet.outputs_energy_v357, 0.002); end
  def test_outputs_energy_w357; assert_in_epsilon(39.78401510084182, worksheet.outputs_energy_w357, 0.002); end
  def test_outputs_energy_x357; assert_in_epsilon(43.00133673715809, worksheet.outputs_energy_x357, 0.002); end
  def test_outputs_energy_y357; assert_in_epsilon(46.319316339555066, worksheet.outputs_energy_y357, 0.002); end
  def test_outputs_energy_z357; assert_in_epsilon(50.086493159761616, worksheet.outputs_energy_z357, 0.002); end
  def test_outputs_energy_c358; assert_equal("Electricity grid", worksheet.outputs_energy_c358); end
  def test_outputs_energy_d358; assert_equal("G.E.01", worksheet.outputs_energy_d358); end
  def test_outputs_energy_e358; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_e358); end
  def test_outputs_energy_k358; assert_equal("Global manufacturing", worksheet.outputs_energy_k358); end
  def test_outputs_energy_p358; assert_in_epsilon(28.68, worksheet.outputs_energy_p358, 0.002); end
  def test_outputs_energy_r358; assert_in_epsilon(29.285413529720426, worksheet.outputs_energy_r358, 0.002); end
  def test_outputs_energy_s358; assert_in_epsilon(30.421929472722468, worksheet.outputs_energy_s358, 0.002); end
  def test_outputs_energy_t358; assert_in_epsilon(33.53591156911871, worksheet.outputs_energy_t358, 0.002); end
  def test_outputs_energy_u358; assert_in_epsilon(36.40860675472568, worksheet.outputs_energy_u358, 0.002); end
  def test_outputs_energy_v358; assert_in_epsilon(39.43514774911173, worksheet.outputs_energy_v358, 0.002); end
  def test_outputs_energy_w358; assert_in_epsilon(42.516707137213885, worksheet.outputs_energy_w358, 0.002); end
  def test_outputs_energy_x358; assert_in_epsilon(45.98046359058456, worksheet.outputs_energy_x358, 0.002); end
  def test_outputs_energy_y358; assert_in_epsilon(49.58992120490407, worksheet.outputs_energy_y358, 0.002); end
  def test_outputs_energy_z358; assert_in_epsilon(53.68655690107344, worksheet.outputs_energy_z358, 0.002); end
  def test_outputs_energy_c359; assert_equal("Heat network", worksheet.outputs_energy_c359); end
  def test_outputs_energy_d359; assert_equal("G.H.01", worksheet.outputs_energy_d359); end
  def test_outputs_energy_e359; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_e359); end
  def test_outputs_energy_k359; assert_equal("Global manufacturing", worksheet.outputs_energy_k359); end
  def test_outputs_energy_p359; assert_in_epsilon(5.31, worksheet.outputs_energy_p359, 0.002); end
  def test_outputs_energy_r359; assert_in_epsilon(5.310102447345097, worksheet.outputs_energy_r359, 0.002); end
  def test_outputs_energy_s359; assert_in_epsilon(5.505396788616336, worksheet.outputs_energy_s359, 0.002); end
  def test_outputs_energy_t359; assert_in_epsilon(6.128529950478196, worksheet.outputs_energy_t359, 0.002); end
  def test_outputs_energy_u359; assert_in_epsilon(6.7006754954104295, worksheet.outputs_energy_u359, 0.002); end
  def test_outputs_energy_v359; assert_in_epsilon(7.3071616495312774, worksheet.outputs_energy_v359, 0.002); end
  def test_outputs_energy_w359; assert_in_epsilon(7.9254569121788325, worksheet.outputs_energy_w359, 0.002); end
  def test_outputs_energy_x359; assert_in_epsilon(8.629773882410149, worksheet.outputs_energy_x359, 0.002); end
  def test_outputs_energy_y359; assert_in_epsilon(9.36234077545956, worksheet.outputs_energy_y359, 0.002); end
  def test_outputs_energy_z359; assert_in_epsilon(10.201281571818622, worksheet.outputs_energy_z359, 0.002); end
  def test_outputs_energy_d214; assert_in_epsilon(242607775716314.97, worksheet.outputs_energy_d214, 0.002); end
  def test_outputs_energy_d215; assert_in_epsilon(265349795354999.97, worksheet.outputs_energy_d215, 0.002); end
  def test_outputs_energy_d216; assert_in_epsilon(234824234714999.97, worksheet.outputs_energy_d216, 0.002); end
  def test_outputs_energy_d245; assert_in_epsilon(636000000000000.0, worksheet.outputs_energy_d245, 0.002); end
  def test_outputs_energy_d246; assert_in_epsilon(477000000000000.0, worksheet.outputs_energy_d246, 0.002); end
  def test_outputs_energy_d247; assert_in_epsilon(365700000000000.0, worksheet.outputs_energy_d247, 0.002); end
  def test_outputs_energy_c494; assert_equal("Description", worksheet.outputs_energy_c494); end
  def test_outputs_energy_r494; assert_in_epsilon(2011.0, worksheet.outputs_energy_r494, 0.002); end
  def test_outputs_energy_s494; assert_equal("2015", worksheet.outputs_energy_s494); end
  def test_outputs_energy_t494; assert_equal("2020", worksheet.outputs_energy_t494); end
  def test_outputs_energy_u494; assert_equal("2025", worksheet.outputs_energy_u494); end
  def test_outputs_energy_v494; assert_equal("2030", worksheet.outputs_energy_v494); end
  def test_outputs_energy_w494; assert_equal("2035", worksheet.outputs_energy_w494); end
  def test_outputs_energy_x494; assert_equal("2040", worksheet.outputs_energy_x494); end
  def test_outputs_energy_y494; assert_equal("2045", worksheet.outputs_energy_y494); end
  def test_outputs_energy_z494; assert_equal("2050", worksheet.outputs_energy_z494); end
  def test_outputs_energy_c495; assert_equal("Pulp & paper.Pulp", worksheet.outputs_energy_c495); end
  def test_outputs_energy_i495; assert_equal("G.M.02", worksheet.outputs_energy_i495); end
  def test_outputs_energy_r495; assert_in_epsilon(3.020565131792657, worksheet.outputs_energy_r495, 0.002); end
  def test_outputs_energy_s495; assert_in_epsilon(3.1191149666797946, worksheet.outputs_energy_s495, 0.002); end
  def test_outputs_energy_t495; assert_in_epsilon(3.5907878560431117, worksheet.outputs_energy_t495, 0.002); end
  def test_outputs_energy_u495; assert_in_epsilon(4.075166393037112, worksheet.outputs_energy_u495, 0.002); end
  def test_outputs_energy_v495; assert_in_epsilon(4.600237353516205, worksheet.outputs_energy_v495, 0.002); end
  def test_outputs_energy_w495; assert_in_epsilon(5.15505727372829, worksheet.outputs_energy_w495, 0.002); end
  def test_outputs_energy_x495; assert_in_epsilon(5.792584405801848, worksheet.outputs_energy_x495, 0.002); end
  def test_outputs_energy_y495; assert_in_epsilon(6.471446558875524, worksheet.outputs_energy_y495, 0.002); end
  def test_outputs_energy_z495; assert_in_epsilon(7.255380337466221, worksheet.outputs_energy_z495, 0.002); end
  def test_outputs_energy_c496; assert_equal("Pulp & paper.Virgin", worksheet.outputs_energy_c496); end
  def test_outputs_energy_i496; assert_equal("G.M.02", worksheet.outputs_energy_i496); end
  def test_outputs_energy_r496; assert_in_epsilon(3.059951650403277, worksheet.outputs_energy_r496, 0.002); end
  def test_outputs_energy_s496; assert_in_epsilon(3.1598043795680963, worksheet.outputs_energy_s496, 0.002); end
  def test_outputs_energy_t496; assert_in_epsilon(3.6376273892532605, worksheet.outputs_energy_t496, 0.002); end
  def test_outputs_energy_u496; assert_in_epsilon(4.1283210016455385, worksheet.outputs_energy_u496, 0.002); end
  def test_outputs_energy_v496; assert_in_epsilon(4.6602369852433645, worksheet.outputs_energy_v496, 0.002); end
  def test_outputs_energy_w496; assert_in_epsilon(5.222289052798652, worksheet.outputs_energy_w496, 0.002); end
  def test_outputs_energy_x496; assert_in_epsilon(5.868126016734263, worksheet.outputs_energy_x496, 0.002); end
  def test_outputs_energy_y496; assert_in_epsilon(6.555835978636103, worksheet.outputs_energy_y496, 0.002); end
  def test_outputs_energy_z496; assert_in_epsilon(7.349986532075621, worksheet.outputs_energy_z496, 0.002); end
  def test_outputs_energy_c497; assert_equal("Pulp & paper.Recycled", worksheet.outputs_energy_c497); end
  def test_outputs_energy_i497; assert_equal("G.M.02", worksheet.outputs_energy_i497); end
  def test_outputs_energy_r497; assert_in_delta(0.5308491227739531, worksheet.outputs_energy_r497, 0.002); end
  def test_outputs_energy_s497; assert_in_delta(0.5633286581251115, worksheet.outputs_energy_s497, 0.002); end
  def test_outputs_energy_t497; assert_in_delta(0.6533702742051388, worksheet.outputs_energy_t497, 0.002); end
  def test_outputs_energy_u497; assert_in_delta(0.7470450872369705, worksheet.outputs_energy_u497, 0.002); end
  def test_outputs_energy_v497; assert_in_delta(0.8495840462188076, worksheet.outputs_energy_v497, 0.002); end
  def test_outputs_energy_w497; assert_in_delta(0.9591292881889792, worksheet.outputs_energy_w497, 0.002); end
  def test_outputs_energy_x497; assert_in_epsilon(1.085741903425472, worksheet.outputs_energy_x497, 0.002); end
  def test_outputs_energy_y497; assert_in_epsilon(1.2219664978632212, worksheet.outputs_energy_y497, 0.002); end
  def test_outputs_energy_z497; assert_in_epsilon(1.3801142975511644, worksheet.outputs_energy_z497, 0.002); end
  def test_outputs_energy_c498; assert_equal("Total", worksheet.outputs_energy_c498); end
  def test_outputs_energy_r498; assert_in_epsilon(6.611365904969887, worksheet.outputs_energy_r498, 0.002); end
  def test_outputs_energy_s498; assert_in_epsilon(6.842248004373002, worksheet.outputs_energy_s498, 0.002); end
  def test_outputs_energy_t498; assert_in_epsilon(7.881785519501511, worksheet.outputs_energy_t498, 0.002); end
  def test_outputs_energy_u498; assert_in_epsilon(8.95053248191962, worksheet.outputs_energy_u498, 0.002); end
  def test_outputs_energy_v498; assert_in_epsilon(10.110058384978377, worksheet.outputs_energy_v498, 0.002); end
  def test_outputs_energy_w498; assert_in_epsilon(11.336475614715921, worksheet.outputs_energy_w498, 0.002); end
  def test_outputs_energy_x498; assert_in_epsilon(12.746452325961583, worksheet.outputs_energy_x498, 0.002); end
  def test_outputs_energy_y498; assert_in_epsilon(14.249249035374849, worksheet.outputs_energy_y498, 0.002); end
  def test_outputs_energy_z498; assert_in_epsilon(15.985481167093008, worksheet.outputs_energy_z498, 0.002); end
  def test_outputs_energy_c398; assert_equal("Description", worksheet.outputs_energy_c398); end
  def test_outputs_energy_r398; assert_in_epsilon(2011.0, worksheet.outputs_energy_r398, 0.002); end
  def test_outputs_energy_s398; assert_equal("2015", worksheet.outputs_energy_s398); end
  def test_outputs_energy_t398; assert_equal("2020", worksheet.outputs_energy_t398); end
  def test_outputs_energy_u398; assert_equal("2025", worksheet.outputs_energy_u398); end
  def test_outputs_energy_v398; assert_equal("2030", worksheet.outputs_energy_v398); end
  def test_outputs_energy_w398; assert_equal("2035", worksheet.outputs_energy_w398); end
  def test_outputs_energy_x398; assert_equal("2040", worksheet.outputs_energy_x398); end
  def test_outputs_energy_y398; assert_equal("2045", worksheet.outputs_energy_y398); end
  def test_outputs_energy_z398; assert_equal("2050", worksheet.outputs_energy_z398); end
  def test_outputs_energy_c399; assert_equal("Coal + solid modern bioenergy", worksheet.outputs_energy_c399); end
  def test_outputs_energy_e399; assert_equal("G.C.01", worksheet.outputs_energy_e399); end
  def test_outputs_energy_f399; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_f399); end
  def test_outputs_energy_k399; assert_equal("Global Electricity Generation", worksheet.outputs_energy_k399); end
  def test_outputs_energy_r399; assert_in_epsilon(99.6448281799327, worksheet.outputs_energy_r399, 0.002); end
  def test_outputs_energy_s399; assert_in_epsilon(97.09227095270234, worksheet.outputs_energy_s399, 0.002); end
  def test_outputs_energy_t399; assert_in_epsilon(104.19636313973417, worksheet.outputs_energy_t399, 0.002); end
  def test_outputs_energy_u399; assert_in_epsilon(116.87776852462349, worksheet.outputs_energy_u399, 0.002); end
  def test_outputs_energy_v399; assert_in_epsilon(128.02705808381492, worksheet.outputs_energy_v399, 0.002); end
  def test_outputs_energy_w399; assert_in_epsilon(133.27368061771654, worksheet.outputs_energy_w399, 0.002); end
  def test_outputs_energy_x399; assert_in_epsilon(137.13899607638763, worksheet.outputs_energy_x399, 0.002); end
  def test_outputs_energy_y399; assert_in_epsilon(130.46223885399428, worksheet.outputs_energy_y399, 0.002); end
  def test_outputs_energy_z399; assert_in_epsilon(128.32926343004425, worksheet.outputs_energy_z399, 0.002); end
  def test_outputs_energy_c400; assert_equal("Liquid hydrocarbons", worksheet.outputs_energy_c400); end
  def test_outputs_energy_e400; assert_equal("G.C.02", worksheet.outputs_energy_e400); end
  def test_outputs_energy_f400; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_f400); end
  def test_outputs_energy_k400; assert_equal("Global Electricity Generation", worksheet.outputs_energy_k400); end
  def test_outputs_energy_r400; assert_in_epsilon(11.970462528003441, worksheet.outputs_energy_r400, 0.002); end
  def test_outputs_energy_s400; assert_in_epsilon(11.543412664176957, worksheet.outputs_energy_s400, 0.002); end
  def test_outputs_energy_t400; assert_in_epsilon(17.989586405542518, worksheet.outputs_energy_t400, 0.002); end
  def test_outputs_energy_u400; assert_in_epsilon(20.199501499100293, worksheet.outputs_energy_u400, 0.002); end
  def test_outputs_energy_v400; assert_in_epsilon(22.297946953557545, worksheet.outputs_energy_v400, 0.002); end
  def test_outputs_energy_w400; assert_in_epsilon(27.366849993383525, worksheet.outputs_energy_w400, 0.002); end
  def test_outputs_energy_x400; assert_in_epsilon(33.00257904504785, worksheet.outputs_energy_x400, 0.002); end
  def test_outputs_energy_y400; assert_in_epsilon(41.09270942982202, worksheet.outputs_energy_y400, 0.002); end
  def test_outputs_energy_z400; assert_in_epsilon(44.885533149017185, worksheet.outputs_energy_z400, 0.002); end
  def test_outputs_energy_c401; assert_equal("Gaseous hydrocarbons", worksheet.outputs_energy_c401); end
  def test_outputs_energy_e401; assert_equal("G.C.03", worksheet.outputs_energy_e401); end
  def test_outputs_energy_f401; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_f401); end
  def test_outputs_energy_k401; assert_equal("Global Electricity Generation", worksheet.outputs_energy_k401); end
  def test_outputs_energy_r401; assert_in_epsilon(41.90572230296944, worksheet.outputs_energy_r401, 0.002); end
  def test_outputs_energy_s401; assert_in_epsilon(40.31692167710107, worksheet.outputs_energy_s401, 0.002); end
  def test_outputs_energy_t401; assert_in_epsilon(45.523084732185836, worksheet.outputs_energy_t401, 0.002); end
  def test_outputs_energy_u401; assert_in_epsilon(50.90664539104541, worksheet.outputs_energy_u401, 0.002); end
  def test_outputs_energy_v401; assert_in_epsilon(57.64269322279493, worksheet.outputs_energy_v401, 0.002); end
  def test_outputs_energy_w401; assert_in_epsilon(63.87589725947901, worksheet.outputs_energy_w401, 0.002); end
  def test_outputs_energy_x401; assert_in_epsilon(70.45472828363876, worksheet.outputs_energy_x401, 0.002); end
  def test_outputs_energy_y401; assert_in_epsilon(75.77945929572175, worksheet.outputs_energy_y401, 0.002); end
  def test_outputs_energy_z401; assert_in_epsilon(82.87914678178754, worksheet.outputs_energy_z401, 0.002); end
  def test_outputs_energy_n208; assert_in_epsilon(694.2350280101626, worksheet.outputs_energy_n208, 0.002); end
  def test_outputs_energy_n209; assert_in_epsilon(609.2350280101626, worksheet.outputs_energy_n209, 0.002); end
  def test_outputs_energy_n221; assert_in_epsilon(64.51904879636376, worksheet.outputs_energy_n221, 0.002); end
  def test_outputs_energy_n222; assert_in_epsilon(57.936296035106324, worksheet.outputs_energy_n222, 0.002); end
  def test_outputs_energy_n223; assert_in_epsilon(61.70825865192876, worksheet.outputs_energy_n223, 0.002); end
  def test_outputs_energy_n214; assert_in_epsilon(31945065817780.062, worksheet.outputs_energy_n214, 0.002); end
  def test_outputs_energy_n215; assert_in_epsilon(54687085456465.06, worksheet.outputs_energy_n215, 0.002); end
  def test_outputs_energy_n216; assert_in_epsilon(24161524816465.062, worksheet.outputs_energy_n216, 0.002); end
  def test_outputs_energy_c452; assert_equal("Description", worksheet.outputs_energy_c452); end
  def test_outputs_energy_r452; assert_in_epsilon(2011.0, worksheet.outputs_energy_r452, 0.002); end
  def test_outputs_energy_s452; assert_equal("2015", worksheet.outputs_energy_s452); end
  def test_outputs_energy_t452; assert_equal("2020", worksheet.outputs_energy_t452); end
  def test_outputs_energy_u452; assert_equal("2025", worksheet.outputs_energy_u452); end
  def test_outputs_energy_v452; assert_equal("2030", worksheet.outputs_energy_v452); end
  def test_outputs_energy_w452; assert_equal("2035", worksheet.outputs_energy_w452); end
  def test_outputs_energy_x452; assert_equal("2040", worksheet.outputs_energy_x452); end
  def test_outputs_energy_y452; assert_equal("2045", worksheet.outputs_energy_y452); end
  def test_outputs_energy_z452; assert_equal("2050", worksheet.outputs_energy_z452); end
  def test_outputs_energy_c453; assert_equal("Steel.Oxygen", worksheet.outputs_energy_c453); end
  def test_outputs_energy_i453; assert_equal("G.M.02", worksheet.outputs_energy_i453); end
  def test_outputs_energy_r453; assert_in_epsilon(21.619770962298666, worksheet.outputs_energy_r453, 0.002); end
  def test_outputs_energy_s453; assert_in_epsilon(22.361070922409628, worksheet.outputs_energy_s453, 0.002); end
  def test_outputs_energy_t453; assert_in_epsilon(24.131437706930193, worksheet.outputs_energy_t453, 0.002); end
  def test_outputs_energy_u453; assert_in_epsilon(25.514724817197564, worksheet.outputs_energy_u453, 0.002); end
  def test_outputs_energy_v453; assert_in_epsilon(26.943473439712523, worksheet.outputs_energy_v453, 0.002); end
  def test_outputs_energy_w453; assert_in_epsilon(28.22982266658649, worksheet.outputs_energy_w453, 0.002); end
  def test_outputs_energy_x453; assert_in_epsilon(29.7481693677126, worksheet.outputs_energy_x453, 0.002); end
  def test_outputs_energy_y453; assert_in_epsilon(31.329612751310098, worksheet.outputs_energy_y453, 0.002); end
  def test_outputs_energy_z453; assert_in_epsilon(32.97791677060222, worksheet.outputs_energy_z453, 0.002); end
  def test_outputs_energy_c454; assert_equal("Steel.OxygenHisarna", worksheet.outputs_energy_c454); end
  def test_outputs_energy_i454; assert_equal("G.M.02", worksheet.outputs_energy_i454); end
  def test_outputs_energy_r454; assert_in_delta(0.0, (worksheet.outputs_energy_r454||0), 0.002); end
  def test_outputs_energy_s454; assert_in_delta(0.05344151530417085, worksheet.outputs_energy_s454, 0.002); end
  def test_outputs_energy_t454; assert_in_delta(0.1308071507524282, worksheet.outputs_energy_t454, 0.002); end
  def test_outputs_energy_u454; assert_in_delta(0.21688207688048455, worksheet.outputs_energy_u454, 0.002); end
  def test_outputs_energy_v454; assert_in_delta(0.31335050952498905, worksheet.outputs_energy_v454, 0.002); end
  def test_outputs_energy_w454; assert_in_delta(0.4181006007238949, worksheet.outputs_energy_w454, 0.002); end
  def test_outputs_energy_x454; assert_in_delta(0.5367569679962112, worksheet.outputs_energy_x454, 0.002); end
  def test_outputs_energy_y454; assert_in_delta(0.6682384897048544, worksheet.outputs_energy_y454, 0.002); end
  def test_outputs_energy_z454; assert_in_delta(0.8135489533131609, worksheet.outputs_energy_z454, 0.002); end
  def test_outputs_energy_c455; assert_equal("Steel.Electric", worksheet.outputs_energy_c455); end
  def test_outputs_energy_i455; assert_equal("G.M.02", worksheet.outputs_energy_i455); end
  def test_outputs_energy_r455; assert_in_epsilon(2.6697592633263763, worksheet.outputs_energy_r455, 0.002); end
  def test_outputs_energy_s455; assert_in_epsilon(2.9068157067208666, worksheet.outputs_energy_s455, 0.002); end
  def test_outputs_energy_t455; assert_in_epsilon(3.2121561828808005, worksheet.outputs_energy_t455, 0.002); end
  def test_outputs_energy_u455; assert_in_epsilon(3.477693711885978, worksheet.outputs_energy_u455, 0.002); end
  def test_outputs_energy_v455; assert_in_epsilon(3.760453072947189, worksheet.outputs_energy_v455, 0.002); end
  def test_outputs_energy_w455; assert_in_epsilon(4.0344169848846985, worksheet.outputs_energy_w455, 0.002); end
  def test_outputs_energy_x455; assert_in_epsilon(4.353309393114092, worksheet.outputs_energy_x455, 0.002); end
  def test_outputs_energy_y455; assert_in_epsilon(4.6946399949084725, worksheet.outputs_energy_y455, 0.002); end
  def test_outputs_energy_z455; assert_in_epsilon(5.06011622436788, worksheet.outputs_energy_z455, 0.002); end
  def test_outputs_energy_c456; assert_equal("Steel.ElectricDRI", worksheet.outputs_energy_c456); end
  def test_outputs_energy_i456; assert_equal("G.M.02", worksheet.outputs_energy_i456); end
  def test_outputs_energy_r456; assert_in_delta(0.48100793205535197, worksheet.outputs_energy_r456, 0.002); end
  def test_outputs_energy_s456; assert_in_delta(0.5194669293954937, worksheet.outputs_energy_s456, 0.002); end
  def test_outputs_energy_t456; assert_in_delta(0.5683094999005355, worksheet.outputs_energy_t456, 0.002); end
  def test_outputs_energy_u456; assert_in_delta(0.6091267376986845, worksheet.outputs_energy_u456, 0.002); end
  def test_outputs_energy_v456; assert_in_delta(0.6520254802877454, worksheet.outputs_energy_v456, 0.002); end
  def test_outputs_energy_w456; assert_in_delta(0.692457303588005, worksheet.outputs_energy_w456, 0.002); end
  def test_outputs_energy_x456; assert_in_delta(0.7396037466459852, worksheet.outputs_energy_x456, 0.002); end
  def test_outputs_energy_y456; assert_in_delta(0.7894570519153451, worksheet.outputs_energy_y456, 0.002); end
  def test_outputs_energy_z456; assert_in_delta(0.8421945099847223, worksheet.outputs_energy_z456, 0.002); end
  def test_outputs_energy_c457; assert_equal("Steel.others", worksheet.outputs_energy_c457); end
  def test_outputs_energy_i457; assert_equal("G.M.02", worksheet.outputs_energy_i457); end
  def test_outputs_energy_r457; assert_in_epsilon(6.671485699703609, worksheet.outputs_energy_r457, 0.002); end
  def test_outputs_energy_s457; assert_in_epsilon(6.9196367029837775, worksheet.outputs_energy_s457, 0.002); end
  def test_outputs_energy_t457; assert_in_epsilon(7.49375027943394, worksheet.outputs_energy_t457, 0.002); end
  def test_outputs_energy_u457; assert_in_epsilon(7.951217640216778, worksheet.outputs_energy_u457, 0.002); end
  def test_outputs_energy_v457; assert_in_epsilon(8.426057931079674, worksheet.outputs_energy_v457, 0.002); end
  def test_outputs_energy_w457; assert_in_epsilon(8.859484453791437, worksheet.outputs_energy_w457, 0.002); end
  def test_outputs_energy_x457; assert_in_epsilon(9.368957862208488, worksheet.outputs_energy_x457, 0.002); end
  def test_outputs_energy_y457; assert_in_epsilon(9.901889243397243, worksheet.outputs_energy_y457, 0.002); end
  def test_outputs_energy_z457; assert_in_epsilon(10.459705749011256, worksheet.outputs_energy_z457, 0.002); end
  def test_outputs_energy_c458; assert_equal("Total", worksheet.outputs_energy_c458); end
  def test_outputs_energy_r458; assert_in_epsilon(31.442023857384005, worksheet.outputs_energy_r458, 0.002); end
  def test_outputs_energy_s458; assert_in_epsilon(32.76043177681394, worksheet.outputs_energy_s458, 0.002); end
  def test_outputs_energy_t458; assert_in_epsilon(35.5364608198979, worksheet.outputs_energy_t458, 0.002); end
  def test_outputs_energy_u458; assert_in_epsilon(37.76964498387949, worksheet.outputs_energy_u458, 0.002); end
  def test_outputs_energy_v458; assert_in_epsilon(40.095360433552116, worksheet.outputs_energy_v458, 0.002); end
  def test_outputs_energy_w458; assert_in_epsilon(42.23428200957453, worksheet.outputs_energy_w458, 0.002); end
  def test_outputs_energy_x458; assert_in_epsilon(44.74679733767738, worksheet.outputs_energy_x458, 0.002); end
  def test_outputs_energy_y458; assert_in_epsilon(47.38383753123601, worksheet.outputs_energy_y458, 0.002); end
  def test_outputs_energy_z458; assert_in_epsilon(50.15348220727924, worksheet.outputs_energy_z458, 0.002); end
  def test_outputs_energy_c341; assert_equal("Description", worksheet.outputs_energy_c341); end
  def test_outputs_energy_r341; assert_in_epsilon(2011.0, worksheet.outputs_energy_r341, 0.002); end
  def test_outputs_energy_s341; assert_equal("2015", worksheet.outputs_energy_s341); end
  def test_outputs_energy_t341; assert_equal("2020", worksheet.outputs_energy_t341); end
  def test_outputs_energy_u341; assert_equal("2025", worksheet.outputs_energy_u341); end
  def test_outputs_energy_v341; assert_equal("2030", worksheet.outputs_energy_v341); end
  def test_outputs_energy_w341; assert_equal("2035", worksheet.outputs_energy_w341); end
  def test_outputs_energy_x341; assert_equal("2040", worksheet.outputs_energy_x341); end
  def test_outputs_energy_y341; assert_equal("2045", worksheet.outputs_energy_y341); end
  def test_outputs_energy_z341; assert_equal("2050", worksheet.outputs_energy_z341); end
  def test_outputs_energy_c342; assert_equal("G.T.01", worksheet.outputs_energy_c342); end
  def test_outputs_energy_d342; assert_equal("Global Road transport", worksheet.outputs_energy_d342); end
  def test_outputs_energy_r342; assert_in_epsilon(76.33121003692581, worksheet.outputs_energy_r342, 0.002); end
  def test_outputs_energy_s342; assert_in_epsilon(84.10065655243007, worksheet.outputs_energy_s342, 0.002); end
  def test_outputs_energy_t342; assert_in_epsilon(96.44989165222798, worksheet.outputs_energy_t342, 0.002); end
  def test_outputs_energy_u342; assert_in_epsilon(105.71205933550793, worksheet.outputs_energy_u342, 0.002); end
  def test_outputs_energy_v342; assert_in_epsilon(112.89758079918512, worksheet.outputs_energy_v342, 0.002); end
  def test_outputs_energy_w342; assert_in_epsilon(118.19546781697389, worksheet.outputs_energy_w342, 0.002); end
  def test_outputs_energy_x342; assert_in_epsilon(122.78487453234374, worksheet.outputs_energy_x342, 0.002); end
  def test_outputs_energy_y342; assert_in_epsilon(126.31685318596375, worksheet.outputs_energy_y342, 0.002); end
  def test_outputs_energy_z342; assert_in_epsilon(129.69867942203572, worksheet.outputs_energy_z342, 0.002); end
  def test_outputs_energy_c343; assert_equal("G.T.02", worksheet.outputs_energy_c343); end
  def test_outputs_energy_d343; assert_equal("Global Rail transport", worksheet.outputs_energy_d343); end
  def test_outputs_energy_r343; assert_in_epsilon(2.6424382095496393, worksheet.outputs_energy_r343, 0.002); end
  def test_outputs_energy_s343; assert_in_epsilon(2.9024205547011577, worksheet.outputs_energy_s343, 0.002); end
  def test_outputs_energy_t343; assert_in_epsilon(3.4105956178543266, worksheet.outputs_energy_t343, 0.002); end
  def test_outputs_energy_u343; assert_in_epsilon(3.8096969323039964, worksheet.outputs_energy_u343, 0.002); end
  def test_outputs_energy_v343; assert_in_epsilon(4.066239298329283, worksheet.outputs_energy_v343, 0.002); end
  def test_outputs_energy_w343; assert_in_epsilon(4.208275887156502, worksheet.outputs_energy_w343, 0.002); end
  def test_outputs_energy_x343; assert_in_epsilon(4.273193826660512, worksheet.outputs_energy_x343, 0.002); end
  def test_outputs_energy_y343; assert_in_epsilon(4.275312103553851, worksheet.outputs_energy_y343, 0.002); end
  def test_outputs_energy_z343; assert_in_epsilon(4.261740263494485, worksheet.outputs_energy_z343, 0.002); end
  def test_outputs_energy_c344; assert_equal("G.T.03", worksheet.outputs_energy_c344); end
  def test_outputs_energy_d344; assert_equal("Global Aviation transport", worksheet.outputs_energy_d344); end
  def test_outputs_energy_r344; assert_in_epsilon(11.887639232071237, worksheet.outputs_energy_r344, 0.002); end
  def test_outputs_energy_s344; assert_in_epsilon(12.616303489385823, worksheet.outputs_energy_s344, 0.002); end
  def test_outputs_energy_t344; assert_in_epsilon(13.063179893414404, worksheet.outputs_energy_t344, 0.002); end
  def test_outputs_energy_u344; assert_in_epsilon(13.344647698850588, worksheet.outputs_energy_u344, 0.002); end
  def test_outputs_energy_v344; assert_in_epsilon(13.675804153940936, worksheet.outputs_energy_v344, 0.002); end
  def test_outputs_energy_w344; assert_in_epsilon(14.09823325010542, worksheet.outputs_energy_w344, 0.002); end
  def test_outputs_energy_x344; assert_in_epsilon(14.700655640987916, worksheet.outputs_energy_x344, 0.002); end
  def test_outputs_energy_y344; assert_in_epsilon(15.40059254413479, worksheet.outputs_energy_y344, 0.002); end
  def test_outputs_energy_z344; assert_in_epsilon(16.21849625684942, worksheet.outputs_energy_z344, 0.002); end
  def test_outputs_energy_c345; assert_equal("G.T.04", worksheet.outputs_energy_c345); end
  def test_outputs_energy_d345; assert_equal("Global Water transport", worksheet.outputs_energy_d345); end
  def test_outputs_energy_r345; assert_in_epsilon(9.498632856887696, worksheet.outputs_energy_r345, 0.002); end
  def test_outputs_energy_s345; assert_in_epsilon(11.016341109448472, worksheet.outputs_energy_s345, 0.002); end
  def test_outputs_energy_t345; assert_in_epsilon(13.465574663415595, worksheet.outputs_energy_t345, 0.002); end
  def test_outputs_energy_u345; assert_in_epsilon(15.498165193520148, worksheet.outputs_energy_u345, 0.002); end
  def test_outputs_energy_v345; assert_in_epsilon(17.38820351699711, worksheet.outputs_energy_v345, 0.002); end
  def test_outputs_energy_w345; assert_in_epsilon(18.149199002711395, worksheet.outputs_energy_w345, 0.002); end
  def test_outputs_energy_x345; assert_in_epsilon(18.480316945731655, worksheet.outputs_energy_x345, 0.002); end
  def test_outputs_energy_y345; assert_in_epsilon(18.58247399650571, worksheet.outputs_energy_y345, 0.002); end
  def test_outputs_energy_z345; assert_in_epsilon(18.50275237789595, worksheet.outputs_energy_z345, 0.002); end
  def test_outputs_energy_c384; assert_equal("Description", worksheet.outputs_energy_c384); end
  def test_outputs_energy_p384; assert_in_epsilon(2011.0, worksheet.outputs_energy_p384, 0.002); end
  def test_outputs_energy_r384; assert_in_epsilon(2011.0, worksheet.outputs_energy_r384, 0.002); end
  def test_outputs_energy_s384; assert_equal("2015", worksheet.outputs_energy_s384); end
  def test_outputs_energy_t384; assert_equal("2020", worksheet.outputs_energy_t384); end
  def test_outputs_energy_u384; assert_equal("2025", worksheet.outputs_energy_u384); end
  def test_outputs_energy_v384; assert_equal("2030", worksheet.outputs_energy_v384); end
  def test_outputs_energy_w384; assert_equal("2035", worksheet.outputs_energy_w384); end
  def test_outputs_energy_x384; assert_equal("2040", worksheet.outputs_energy_x384); end
  def test_outputs_energy_y384; assert_equal("2045", worksheet.outputs_energy_y384); end
  def test_outputs_energy_z384; assert_equal("2050", worksheet.outputs_energy_z384); end
  def test_outputs_energy_c385; assert_equal("Coal + solid modern bioenergy", worksheet.outputs_energy_c385); end
  def test_outputs_energy_e385; assert_equal("G.C.01", worksheet.outputs_energy_e385); end
  def test_outputs_energy_f385; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_f385); end
  def test_outputs_energy_k385; assert_equal("Global transport", worksheet.outputs_energy_k385); end
  def test_outputs_energy_p385; assert_in_delta(0.01, worksheet.outputs_energy_p385, 0.002); end
  def test_outputs_energy_r385; assert_in_delta(0.0, (worksheet.outputs_energy_r385||0), 0.002); end
  def test_outputs_energy_s385; assert_in_delta(0.0, (worksheet.outputs_energy_s385||0), 0.002); end
  def test_outputs_energy_t385; assert_in_delta(0.0, (worksheet.outputs_energy_t385||0), 0.002); end
  def test_outputs_energy_u385; assert_in_delta(0.0, (worksheet.outputs_energy_u385||0), 0.002); end
  def test_outputs_energy_v385; assert_in_delta(0.0, (worksheet.outputs_energy_v385||0), 0.002); end
  def test_outputs_energy_w385; assert_in_delta(0.0, (worksheet.outputs_energy_w385||0), 0.002); end
  def test_outputs_energy_x385; assert_in_delta(0.0, (worksheet.outputs_energy_x385||0), 0.002); end
  def test_outputs_energy_y385; assert_in_delta(0.0, (worksheet.outputs_energy_y385||0), 0.002); end
  def test_outputs_energy_z385; assert_in_delta(0.0, (worksheet.outputs_energy_z385||0), 0.002); end
  def test_outputs_energy_c386; assert_equal("Liquid hydrocarbons", worksheet.outputs_energy_c386); end
  def test_outputs_energy_e386; assert_equal("G.C.02", worksheet.outputs_energy_e386); end
  def test_outputs_energy_f386; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_f386); end
  def test_outputs_energy_k386; assert_equal("Global transport", worksheet.outputs_energy_k386); end
  def test_outputs_energy_p386; assert_in_epsilon(97.66, worksheet.outputs_energy_p386, 0.002); end
  def test_outputs_energy_r386; assert_in_epsilon(98.39054841752521, worksheet.outputs_energy_r386, 0.002); end
  def test_outputs_energy_s386; assert_in_epsilon(107.23759468001926, worksheet.outputs_energy_s386, 0.002); end
  def test_outputs_energy_t386; assert_in_epsilon(121.78234591790738, worksheet.outputs_energy_t386, 0.002); end
  def test_outputs_energy_u386; assert_in_epsilon(132.51591420991218, worksheet.outputs_energy_u386, 0.002); end
  def test_outputs_energy_v386; assert_in_epsilon(140.97085375715739, worksheet.outputs_energy_v386, 0.002); end
  def test_outputs_energy_w386; assert_in_epsilon(146.43982868889782, worksheet.outputs_energy_w386, 0.002); end
  def test_outputs_energy_x386; assert_in_epsilon(150.89962263018552, worksheet.outputs_energy_x386, 0.002); end
  def test_outputs_energy_y386; assert_in_epsilon(154.15290031985023, worksheet.outputs_energy_y386, 0.002); end
  def test_outputs_energy_z386; assert_in_epsilon(157.16113651101088, worksheet.outputs_energy_z386, 0.002); end
  def test_outputs_energy_c387; assert_equal("Gaseous hydrocarbons", worksheet.outputs_energy_c387); end
  def test_outputs_energy_e387; assert_equal("G.C.03", worksheet.outputs_energy_e387); end
  def test_outputs_energy_f387; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_f387); end
  def test_outputs_energy_k387; assert_equal("Global transport", worksheet.outputs_energy_k387); end
  def test_outputs_energy_p387; assert_in_delta(0.8, worksheet.outputs_energy_p387, 0.002); end
  def test_outputs_energy_r387; assert_in_delta(0.3471995357508835, worksheet.outputs_energy_r387, 0.002); end
  def test_outputs_energy_s387; assert_in_delta(0.8002539549555909, worksheet.outputs_energy_s387, 0.002); end
  def test_outputs_energy_t387; assert_in_epsilon(1.2254590310670934, worksheet.outputs_energy_t387, 0.002); end
  def test_outputs_energy_u387; assert_in_epsilon(1.7013069950787496, worksheet.outputs_energy_u387, 0.002); end
  def test_outputs_energy_v387; assert_in_epsilon(2.2017729838059026, worksheet.outputs_energy_v387, 0.002); end
  def test_outputs_energy_w387; assert_in_epsilon(2.6948398274862457, worksheet.outputs_energy_w387, 0.002); end
  def test_outputs_energy_x387; assert_in_epsilon(3.182586863324238, worksheet.outputs_energy_x387, 0.002); end
  def test_outputs_energy_y387; assert_in_epsilon(3.6506160562313346, worksheet.outputs_energy_y387, 0.002); end
  def test_outputs_energy_z387; assert_in_epsilon(4.117492339017559, worksheet.outputs_energy_z387, 0.002); end
  def test_outputs_energy_c388; assert_equal("Electricity grid", worksheet.outputs_energy_c388); end
  def test_outputs_energy_e388; assert_equal("G.E.01", worksheet.outputs_energy_e388); end
  def test_outputs_energy_f388; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_f388); end
  def test_outputs_energy_k388; assert_equal("Global transport", worksheet.outputs_energy_k388); end
  def test_outputs_energy_p388; assert_in_delta(0.75, worksheet.outputs_energy_p388, 0.002); end
  def test_outputs_energy_r388; assert_in_epsilon(1.6221723137825572, worksheet.outputs_energy_r388, 0.002); end
  def test_outputs_energy_s388; assert_in_epsilon(2.44713112913332, worksheet.outputs_energy_s388, 0.002); end
  def test_outputs_energy_t388; assert_in_epsilon(3.2220247242484628, worksheet.outputs_energy_t388, 0.002); end
  def test_outputs_energy_u388; assert_in_epsilon(3.9930561031885503, worksheet.outputs_energy_u388, 0.002); end
  def test_outputs_energy_v388; assert_in_epsilon(4.722069880751547, worksheet.outputs_energy_v388, 0.002); end
  def test_outputs_energy_w388; assert_in_epsilon(5.412240583663378, worksheet.outputs_energy_w388, 0.002); end
  def test_outputs_energy_x388; assert_in_epsilon(6.085485477323126, worksheet.outputs_energy_x388, 0.002); end
  def test_outputs_energy_y388; assert_in_epsilon(6.735366035048618, worksheet.outputs_energy_y388, 0.002); end
  def test_outputs_energy_z388; assert_in_epsilon(7.403039470247169, worksheet.outputs_energy_z388, 0.002); end
  def test_outputs_energy_c389; assert_equal("Hydrogen", worksheet.outputs_energy_c389); end
  def test_outputs_energy_e389; assert_equal("G.HY.01", worksheet.outputs_energy_e389); end
  def test_outputs_energy_f389; assert_equal("Global H2", worksheet.outputs_energy_f389); end
  def test_outputs_energy_k389; assert_equal("Global transport", worksheet.outputs_energy_k389); end
  def test_outputs_energy_p389; assert_in_delta(0.0, (worksheet.outputs_energy_p389||0), 0.002); end
  def test_outputs_energy_r389; assert_in_delta(6.837572495941478e-08, worksheet.outputs_energy_r389, 0.002); end
  def test_outputs_energy_s389; assert_in_delta(0.15074194185736464, worksheet.outputs_energy_s389, 0.002); end
  def test_outputs_energy_t389; assert_in_delta(0.15941215368934422, worksheet.outputs_energy_t389, 0.002); end
  def test_outputs_energy_u389; assert_in_delta(0.15429185200316717, worksheet.outputs_energy_u389, 0.002); end
  def test_outputs_energy_v389; assert_in_delta(0.13313114673762763, worksheet.outputs_energy_v389, 0.002); end
  def test_outputs_energy_w389; assert_in_delta(0.1042668568997512, worksheet.outputs_energy_w389, 0.002); end
  def test_outputs_energy_x389; assert_in_delta(0.0713459748909307, worksheet.outputs_energy_x389, 0.002); end
  def test_outputs_energy_y389; assert_in_delta(0.036349419027900946, worksheet.outputs_energy_y389, 0.002); end
  def test_outputs_energy_z389; assert_in_delta(0.0, (worksheet.outputs_energy_z389||0), 0.002); end
  def test_outputs_energy_d228; assert_in_delta(0.0063, worksheet.outputs_energy_d228, 0.002); end
  def test_outputs_energy_d229; assert_in_delta(0.016, worksheet.outputs_energy_d229, 0.002); end
  def test_outputs_energy_d230; assert_in_delta(0.038, worksheet.outputs_energy_d230, 0.002); end
  def test_outputs_energy_d260; assert_in_epsilon(4.0, worksheet.outputs_energy_d260, 0.002); end
  def test_outputs_energy_c180; assert_equal("Column1", worksheet.outputs_energy_c180); end
  def test_outputs_energy_d180; assert_equal("Description", worksheet.outputs_energy_d180); end
  def test_outputs_energy_e180; assert_equal("Column2", worksheet.outputs_energy_e180); end
  def test_outputs_energy_f180; assert_equal("Column3", worksheet.outputs_energy_f180); end
  def test_outputs_energy_g180; assert_equal("Notes", worksheet.outputs_energy_g180); end
  def test_outputs_energy_h180; assert_equal("Column4", worksheet.outputs_energy_h180); end
  def test_outputs_energy_i180; assert_equal("Column5", worksheet.outputs_energy_i180); end
  def test_outputs_energy_j180; assert_equal("Column6", worksheet.outputs_energy_j180); end
  def test_outputs_energy_k180; assert_equal("Column7", worksheet.outputs_energy_k180); end
  def test_outputs_energy_l180; assert_equal("Column8", worksheet.outputs_energy_l180); end
  def test_outputs_energy_m180; assert_equal("Column9", worksheet.outputs_energy_m180); end
  def test_outputs_energy_n180; assert_equal("Column10", worksheet.outputs_energy_n180); end
  def test_outputs_energy_o180; assert_equal("Column11", worksheet.outputs_energy_o180); end
  def test_outputs_energy_p180; assert_equal("Column12", worksheet.outputs_energy_p180); end
  def test_outputs_energy_q180; assert_equal("Column13", worksheet.outputs_energy_q180); end
  def test_outputs_energy_r180; assert_equal("2011", worksheet.outputs_energy_r180); end
  def test_outputs_energy_s180; assert_equal("2015", worksheet.outputs_energy_s180); end
  def test_outputs_energy_t180; assert_equal("2020", worksheet.outputs_energy_t180); end
  def test_outputs_energy_u180; assert_equal("2025", worksheet.outputs_energy_u180); end
  def test_outputs_energy_v180; assert_equal("2030", worksheet.outputs_energy_v180); end
  def test_outputs_energy_w180; assert_equal("2035", worksheet.outputs_energy_w180); end
  def test_outputs_energy_x180; assert_equal("2040", worksheet.outputs_energy_x180); end
  def test_outputs_energy_y180; assert_equal("2045", worksheet.outputs_energy_y180); end
  def test_outputs_energy_z180; assert_equal("2050", worksheet.outputs_energy_z180); end
  def test_outputs_energy_c181; assert_equal("G.Q.01", worksheet.outputs_energy_c181); end
  def test_outputs_energy_d181; assert_equal("Global Coal reserves ", worksheet.outputs_energy_d181); end
  def test_outputs_energy_g181; assert_equal("Gt", worksheet.outputs_energy_g181); end
  def test_outputs_energy_r181; assert_in_epsilon(6.179796982018339, worksheet.outputs_energy_r181, 0.002); end
  def test_outputs_energy_s181; assert_in_epsilon(24.6860788631976, worksheet.outputs_energy_s181, 0.002); end
  def test_outputs_energy_t181; assert_in_epsilon(50.84103093731782, worksheet.outputs_energy_t181, 0.002); end
  def test_outputs_energy_u181; assert_in_epsilon(79.56311849508808, worksheet.outputs_energy_u181, 0.002); end
  def test_outputs_energy_v181; assert_in_epsilon(111.20967290988813, worksheet.outputs_energy_v181, 0.002); end
  def test_outputs_energy_w181; assert_in_epsilon(144.85477299300516, worksheet.outputs_energy_w181, 0.002); end
  def test_outputs_energy_x181; assert_in_epsilon(180.21829273021228, worksheet.outputs_energy_x181, 0.002); end
  def test_outputs_energy_y181; assert_in_epsilon(215.84257562013167, worksheet.outputs_energy_y181, 0.002); end
  def test_outputs_energy_z181; assert_in_epsilon(251.76497198983733, worksheet.outputs_energy_z181, 0.002); end
  def test_outputs_energy_c182; assert_equal("G.Q.02", worksheet.outputs_energy_c182); end
  def test_outputs_energy_d182; assert_equal("Global Oil reserves ", worksheet.outputs_energy_d182); end
  def test_outputs_energy_g182; assert_equal("l", worksheet.outputs_energy_g182); end
  def test_outputs_energy_r182; assert_in_epsilon(4641254913654.701, worksheet.outputs_energy_r182, 0.002); end
  def test_outputs_energy_s182; assert_in_epsilon(19164297396729.32, worksheet.outputs_energy_s182, 0.002); end
  def test_outputs_energy_t182; assert_in_epsilon(40856342707660.01, worksheet.outputs_energy_t182, 0.002); end
  def test_outputs_energy_u182; assert_in_epsilon(65017360498606.92, worksheet.outputs_energy_u182, 0.002); end
  def test_outputs_energy_v182; assert_in_epsilon(91116233200483.81, worksheet.outputs_energy_v182, 0.002); end
  def test_outputs_energy_w182; assert_in_epsilon(118496721455854.88, worksheet.outputs_energy_w182, 0.002); end
  def test_outputs_energy_x182; assert_in_epsilon(147366712227943.75, worksheet.outputs_energy_x182, 0.002); end
  def test_outputs_energy_y182; assert_in_epsilon(178158442641543.94, worksheet.outputs_energy_y182, 0.002); end
  def test_outputs_energy_z182; assert_in_epsilon(210662709898534.9, worksheet.outputs_energy_z182, 0.002); end
  def test_outputs_energy_c183; assert_equal("G.Q.03", worksheet.outputs_energy_c183); end
  def test_outputs_energy_d183; assert_equal("Global Gas reserves ", worksheet.outputs_energy_d183); end
  def test_outputs_energy_g183; assert_equal("T.m3", worksheet.outputs_energy_g183); end
  def test_outputs_energy_r183; assert_in_epsilon(3.0223681397345077, worksheet.outputs_energy_r183, 0.002); end
  def test_outputs_energy_s183; assert_in_epsilon(12.204568002420778, worksheet.outputs_energy_s183, 0.002); end
  def test_outputs_energy_t183; assert_in_epsilon(25.369428392448643, worksheet.outputs_energy_t183, 0.002); end
  def test_outputs_energy_u183; assert_in_epsilon(39.760706414620614, worksheet.outputs_energy_u183, 0.002); end
  def test_outputs_energy_v183; assert_in_epsilon(55.2679125910352, worksheet.outputs_energy_v183, 0.002); end
  def test_outputs_energy_w183; assert_in_epsilon(72.04243026371115, worksheet.outputs_energy_w183, 0.002); end
  def test_outputs_energy_x183; assert_in_epsilon(89.94139362570826, worksheet.outputs_energy_x183, 0.002); end
  def test_outputs_energy_y183; assert_in_epsilon(108.96563666357204, worksheet.outputs_energy_y183, 0.002); end
  def test_outputs_energy_z183; assert_in_epsilon(129.36370396489366, worksheet.outputs_energy_z183, 0.002); end
  def test_outputs_climate_impacts_c533; assert_equal("In order to avoid the most dangerous impacts of global climate change the international community agreed limiting global average temperature increase to no more than 2°C above pre-industrial levels (UNFCCC Cancun 2010).", worksheet.outputs_climate_impacts_c533); end
  def test_outputs_climate_impacts_h55; assert_in_epsilon(3300000.0, worksheet.outputs_climate_impacts_h55, 0.002); end
  def test_outputs_climate_impacts_i55; assert_in_epsilon(8400000.0, worksheet.outputs_climate_impacts_i55, 0.002); end
  def test_outputs_climate_impacts_i60; assert_in_epsilon(670000.0, worksheet.outputs_climate_impacts_i60, 0.002); end
  def test_outputs_climate_impacts_i65; assert_in_epsilon(1.9, worksheet.outputs_climate_impacts_i65, 0.002); end
  def test_outputs_climate_impacts_i70; assert_in_delta(0.4, worksheet.outputs_climate_impacts_i70, 0.002); end
  def test_outputs_climate_impacts_d11; assert_in_epsilon(3.9565743386172336, worksheet.outputs_climate_impacts_d11, 0.002); end
  def test_outputs_climate_impacts_d12; assert_in_delta(0.9167000964702188, worksheet.outputs_climate_impacts_d12, 0.002); end
  def test_outputs_climate_impacts_e11; assert_in_epsilon(6.568393443991275, worksheet.outputs_climate_impacts_e11, 0.002); end
  def test_outputs_climate_impacts_e12; assert_in_epsilon(2.2653204186324443, worksheet.outputs_climate_impacts_e12, 0.002); end
  def test_outputs_climate_impacts_d26; assert_in_epsilon(1870.0, worksheet.outputs_climate_impacts_d26, 0.002); end
  def test_outputs_climate_impacts_e26; assert_in_epsilon(1880.0, worksheet.outputs_climate_impacts_e26, 0.002); end
  def test_outputs_climate_impacts_f26; assert_in_epsilon(1890.0, worksheet.outputs_climate_impacts_f26, 0.002); end
  def test_outputs_climate_impacts_g26; assert_in_epsilon(1900.0, worksheet.outputs_climate_impacts_g26, 0.002); end
  def test_outputs_climate_impacts_h26; assert_in_epsilon(1910.0, worksheet.outputs_climate_impacts_h26, 0.002); end
  def test_outputs_climate_impacts_i26; assert_in_epsilon(1920.0, worksheet.outputs_climate_impacts_i26, 0.002); end
  def test_outputs_climate_impacts_j26; assert_in_epsilon(1930.0, worksheet.outputs_climate_impacts_j26, 0.002); end
  def test_outputs_climate_impacts_k26; assert_in_epsilon(1940.0, worksheet.outputs_climate_impacts_k26, 0.002); end
  def test_outputs_climate_impacts_l26; assert_in_epsilon(1950.0, worksheet.outputs_climate_impacts_l26, 0.002); end
  def test_outputs_climate_impacts_m26; assert_in_epsilon(1960.0, worksheet.outputs_climate_impacts_m26, 0.002); end
  def test_outputs_climate_impacts_n26; assert_in_epsilon(1970.0, worksheet.outputs_climate_impacts_n26, 0.002); end
  def test_outputs_climate_impacts_o26; assert_in_epsilon(1980.0, worksheet.outputs_climate_impacts_o26, 0.002); end
  def test_outputs_climate_impacts_p26; assert_in_epsilon(1990.0, worksheet.outputs_climate_impacts_p26, 0.002); end
  def test_outputs_climate_impacts_q26; assert_in_epsilon(2000.0, worksheet.outputs_climate_impacts_q26, 0.002); end
  def test_outputs_climate_impacts_r26; assert_in_epsilon(2005.0, worksheet.outputs_climate_impacts_r26, 0.002); end
  def test_outputs_climate_impacts_s26; assert_in_epsilon(2010.0, worksheet.outputs_climate_impacts_s26, 0.002); end
  def test_outputs_climate_impacts_t26; assert_in_epsilon(2011.0, worksheet.outputs_climate_impacts_t26, 0.002); end
  def test_outputs_climate_impacts_u26; assert_in_epsilon(2013.0, worksheet.outputs_climate_impacts_u26, 0.002); end
  def test_outputs_climate_impacts_v26; assert_in_epsilon(2015.0, worksheet.outputs_climate_impacts_v26, 0.002); end
  def test_outputs_climate_impacts_w26; assert_in_epsilon(2020.0, worksheet.outputs_climate_impacts_w26, 0.002); end
  def test_outputs_climate_impacts_x26; assert_in_epsilon(2025.0, worksheet.outputs_climate_impacts_x26, 0.002); end
  def test_outputs_climate_impacts_y26; assert_in_epsilon(2030.0, worksheet.outputs_climate_impacts_y26, 0.002); end
  def test_outputs_climate_impacts_z26; assert_in_epsilon(2035.0, worksheet.outputs_climate_impacts_z26, 0.002); end
  def test_outputs_climate_impacts_aa26; assert_in_epsilon(2040.0, worksheet.outputs_climate_impacts_aa26, 0.002); end
  def test_outputs_climate_impacts_ab26; assert_in_epsilon(2045.0, worksheet.outputs_climate_impacts_ab26, 0.002); end
  def test_outputs_climate_impacts_ac26; assert_in_epsilon(2050.0, worksheet.outputs_climate_impacts_ac26, 0.002); end
  def test_outputs_climate_impacts_ad26; assert_in_epsilon(2055.0, worksheet.outputs_climate_impacts_ad26, 0.002); end
  def test_outputs_climate_impacts_ae26; assert_in_epsilon(2060.0, worksheet.outputs_climate_impacts_ae26, 0.002); end
  def test_outputs_climate_impacts_af26; assert_in_epsilon(2065.0, worksheet.outputs_climate_impacts_af26, 0.002); end
  def test_outputs_climate_impacts_ag26; assert_in_epsilon(2070.0, worksheet.outputs_climate_impacts_ag26, 0.002); end
  def test_outputs_climate_impacts_ah26; assert_in_epsilon(2075.0, worksheet.outputs_climate_impacts_ah26, 0.002); end
  def test_outputs_climate_impacts_ai26; assert_in_epsilon(2080.0, worksheet.outputs_climate_impacts_ai26, 0.002); end
  def test_outputs_climate_impacts_aj26; assert_in_epsilon(2085.0, worksheet.outputs_climate_impacts_aj26, 0.002); end
  def test_outputs_climate_impacts_ak26; assert_in_epsilon(2090.0, worksheet.outputs_climate_impacts_ak26, 0.002); end
  def test_outputs_climate_impacts_al26; assert_in_epsilon(2095.0, worksheet.outputs_climate_impacts_al26, 0.002); end
  def test_outputs_climate_impacts_am26; assert_in_epsilon(2100.0, worksheet.outputs_climate_impacts_am26, 0.002); end
  def test_outputs_climate_impacts_c27; assert_equal("High estimate", worksheet.outputs_climate_impacts_c27); end
  def test_outputs_climate_impacts_w27; assert_in_epsilon(2.269004690870681, worksheet.outputs_climate_impacts_w27, 0.002); end
  def test_outputs_climate_impacts_x27; assert_in_epsilon(2.4993258303008856, worksheet.outputs_climate_impacts_x27, 0.002); end
  def test_outputs_climate_impacts_y27; assert_in_epsilon(2.7472426255973925, worksheet.outputs_climate_impacts_y27, 0.002); end
  def test_outputs_climate_impacts_z27; assert_in_epsilon(3.023526001969499, worksheet.outputs_climate_impacts_z27, 0.002); end
  def test_outputs_climate_impacts_aa27; assert_in_epsilon(3.3302862800025297, worksheet.outputs_climate_impacts_aa27, 0.002); end
  def test_outputs_climate_impacts_ab27; assert_in_epsilon(3.6488914240989114, worksheet.outputs_climate_impacts_ab27, 0.002); end
  def test_outputs_climate_impacts_ac27; assert_in_epsilon(3.9565743386172336, worksheet.outputs_climate_impacts_ac27, 0.002); end
  def test_outputs_climate_impacts_ad27; assert_in_epsilon(4.214341277738797, worksheet.outputs_climate_impacts_ad27, 0.002); end
  def test_outputs_climate_impacts_ae27; assert_in_epsilon(4.4738070669555485, worksheet.outputs_climate_impacts_ae27, 0.002); end
  def test_outputs_climate_impacts_af27; assert_in_epsilon(4.734583319994889, worksheet.outputs_climate_impacts_af27, 0.002); end
  def test_outputs_climate_impacts_ag27; assert_in_epsilon(4.996227386716909, worksheet.outputs_climate_impacts_ag27, 0.002); end
  def test_outputs_climate_impacts_ah27; assert_in_epsilon(5.2580846954569544, worksheet.outputs_climate_impacts_ah27, 0.002); end
  def test_outputs_climate_impacts_ai27; assert_in_epsilon(5.520073537770781, worksheet.outputs_climate_impacts_ai27, 0.002); end
  def test_outputs_climate_impacts_aj27; assert_in_epsilon(5.782129072494704, worksheet.outputs_climate_impacts_aj27, 0.002); end
  def test_outputs_climate_impacts_ak27; assert_in_epsilon(6.044207237958731, worksheet.outputs_climate_impacts_ak27, 0.002); end
  def test_outputs_climate_impacts_al27; assert_in_epsilon(6.306297550542578, worksheet.outputs_climate_impacts_al27, 0.002); end
  def test_outputs_climate_impacts_am27; assert_in_epsilon(6.568393443991275, worksheet.outputs_climate_impacts_am27, 0.002); end
  def test_outputs_climate_impacts_c28; assert_equal("Actual (NASA)", worksheet.outputs_climate_impacts_c28); end
  def test_outputs_climate_impacts_f28; assert_in_delta(-0.031, worksheet.outputs_climate_impacts_f28, 0.002); end
  def test_outputs_climate_impacts_g28; assert_in_delta(-0.031, worksheet.outputs_climate_impacts_g28, 0.002); end
  def test_outputs_climate_impacts_h28; assert_in_delta(-0.231, worksheet.outputs_climate_impacts_h28, 0.002); end
  def test_outputs_climate_impacts_i28; assert_in_delta(-0.061000000000000026, worksheet.outputs_climate_impacts_i28, 0.002); end
  def test_outputs_climate_impacts_j28; assert_in_delta(0.059, worksheet.outputs_climate_impacts_j28, 0.002); end
  def test_outputs_climate_impacts_k28; assert_in_delta(0.259, worksheet.outputs_climate_impacts_k28, 0.002); end
  def test_outputs_climate_impacts_l28; assert_in_delta(0.119, worksheet.outputs_climate_impacts_l28, 0.002); end
  def test_outputs_climate_impacts_m28; assert_in_delta(0.22899999999999998, worksheet.outputs_climate_impacts_m28, 0.002); end
  def test_outputs_climate_impacts_n28; assert_in_delta(0.209, worksheet.outputs_climate_impacts_n28, 0.002); end
  def test_outputs_climate_impacts_o28; assert_in_delta(0.359, worksheet.outputs_climate_impacts_o28, 0.002); end
  def test_outputs_climate_impacts_p28; assert_in_delta(0.519, worksheet.outputs_climate_impacts_p28, 0.002); end
  def test_outputs_climate_impacts_q28; assert_in_delta(0.719, worksheet.outputs_climate_impacts_q28, 0.002); end
  def test_outputs_climate_impacts_r28; assert_in_delta(0.7989999999999999, worksheet.outputs_climate_impacts_r28, 0.002); end
  def test_outputs_climate_impacts_s28; assert_in_delta(0.7789999999999999, worksheet.outputs_climate_impacts_s28, 0.002); end
  def test_outputs_climate_impacts_t28; assert_in_delta(0.7989999999999999, worksheet.outputs_climate_impacts_t28, 0.002); end
  def test_outputs_climate_impacts_u28; assert_in_delta(0.7989999999999999, worksheet.outputs_climate_impacts_u28, 0.002); end
  def test_outputs_climate_impacts_c29; assert_equal("Actual (HadCRUT3)", worksheet.outputs_climate_impacts_c29); end
  def test_outputs_climate_impacts_d29; assert_in_delta(-0.0020333333333333314, worksheet.outputs_climate_impacts_d29, 0.002); end
  def test_outputs_climate_impacts_e29; assert_in_delta(0.08556666666666674, worksheet.outputs_climate_impacts_e29, 0.002); end
  def test_outputs_climate_impacts_f29; assert_in_delta(-0.08383333333333326, worksheet.outputs_climate_impacts_f29, 0.002); end
  def test_outputs_climate_impacts_g29; assert_in_delta(-0.06043333333333328, worksheet.outputs_climate_impacts_g29, 0.002); end
  def test_outputs_climate_impacts_h29; assert_in_delta(-0.2668333333333333, worksheet.outputs_climate_impacts_h29, 0.002); end
  def test_outputs_climate_impacts_i29; assert_in_delta(-0.052633333333333254, worksheet.outputs_climate_impacts_i29, 0.002); end
  def test_outputs_climate_impacts_j29; assert_in_delta(0.06776666666666673, worksheet.outputs_climate_impacts_j29, 0.002); end
  def test_outputs_climate_impacts_k29; assert_in_delta(0.29756666666666676, worksheet.outputs_climate_impacts_k29, 0.002); end
  def test_outputs_climate_impacts_l29; assert_in_delta(0.08816666666666673, worksheet.outputs_climate_impacts_l29, 0.002); end
  def test_outputs_climate_impacts_m29; assert_in_delta(0.23116666666666674, worksheet.outputs_climate_impacts_m29, 0.002); end
  def test_outputs_climate_impacts_n29; assert_in_delta(0.18496666666666672, worksheet.outputs_climate_impacts_n29, 0.002); end
  def test_outputs_climate_impacts_o29; assert_in_delta(0.3201666666666667, worksheet.outputs_climate_impacts_o29, 0.002); end
  def test_outputs_climate_impacts_p29; assert_in_delta(0.44456666666666667, worksheet.outputs_climate_impacts_p29, 0.002); end
  def test_outputs_climate_impacts_q29; assert_in_delta(0.6799666666666668, worksheet.outputs_climate_impacts_q29, 0.002); end
  def test_outputs_climate_impacts_r29; assert_in_delta(0.7283666666666667, worksheet.outputs_climate_impacts_r29, 0.002); end
  def test_outputs_climate_impacts_s29; assert_in_delta(0.6799666666666668, worksheet.outputs_climate_impacts_s29, 0.002); end
  def test_outputs_climate_impacts_t29; assert_in_delta(0.7063666666666668, worksheet.outputs_climate_impacts_t29, 0.002); end
  def test_outputs_climate_impacts_u29; assert_in_delta(0.7391666666666667, worksheet.outputs_climate_impacts_u29, 0.002); end
  def test_outputs_climate_impacts_c30; assert_equal("Actual (HadCRUT4)", worksheet.outputs_climate_impacts_c30); end
  def test_outputs_climate_impacts_d30; assert_in_delta(0.024, worksheet.outputs_climate_impacts_d30, 0.002); end
  def test_outputs_climate_impacts_e30; assert_in_delta(0.117, worksheet.outputs_climate_impacts_e30, 0.002); end
  def test_outputs_climate_impacts_f30; assert_in_delta(-0.052, worksheet.outputs_climate_impacts_f30, 0.002); end
  def test_outputs_climate_impacts_g30; assert_in_delta(-0.027, worksheet.outputs_climate_impacts_g30, 0.002); end
  def test_outputs_climate_impacts_h30; assert_in_delta(-0.224, worksheet.outputs_climate_impacts_h30, 0.002); end
  def test_outputs_climate_impacts_i30; assert_in_delta(0.012, worksheet.outputs_climate_impacts_i30, 0.002); end
  def test_outputs_climate_impacts_j30; assert_in_delta(0.103, worksheet.outputs_climate_impacts_j30, 0.002); end
  def test_outputs_climate_impacts_k30; assert_in_delta(0.278, worksheet.outputs_climate_impacts_k30, 0.002); end
  def test_outputs_climate_impacts_l30; assert_in_delta(0.227, worksheet.outputs_climate_impacts_l30, 0.002); end
  def test_outputs_climate_impacts_m30; assert_in_delta(0.302, worksheet.outputs_climate_impacts_m30, 0.002); end
  def test_outputs_climate_impacts_n30; assert_in_delta(0.214, worksheet.outputs_climate_impacts_n30, 0.002); end
  def test_outputs_climate_impacts_o30; assert_in_delta(0.336, worksheet.outputs_climate_impacts_o30, 0.002); end
  def test_outputs_climate_impacts_p30; assert_in_delta(0.481, worksheet.outputs_climate_impacts_p30, 0.002); end
  def test_outputs_climate_impacts_q30; assert_in_delta(0.698, worksheet.outputs_climate_impacts_q30, 0.002); end
  def test_outputs_climate_impacts_r30; assert_in_delta(0.78, worksheet.outputs_climate_impacts_r30, 0.002); end
  def test_outputs_climate_impacts_s30; assert_in_delta(0.744, worksheet.outputs_climate_impacts_s30, 0.002); end
  def test_outputs_climate_impacts_t30; assert_in_delta(0.764, worksheet.outputs_climate_impacts_t30, 0.002); end
  def test_outputs_climate_impacts_u30; assert_in_delta(0.774, worksheet.outputs_climate_impacts_u30, 0.002); end
  def test_outputs_climate_impacts_c31; assert_equal("Low estimate", worksheet.outputs_climate_impacts_c31); end
  def test_outputs_climate_impacts_w31; assert_in_delta(0.3661366286687796, worksheet.outputs_climate_impacts_w31, 0.002); end
  def test_outputs_climate_impacts_x31; assert_in_delta(0.4394689360812971, worksheet.outputs_climate_impacts_x31, 0.002); end
  def test_outputs_climate_impacts_y31; assert_in_delta(0.5184035518546741, worksheet.outputs_climate_impacts_y31, 0.002); end
  def test_outputs_climate_impacts_z31; assert_in_delta(0.6063698476936508, worksheet.outputs_climate_impacts_z31, 0.002); end
  def test_outputs_climate_impacts_aa31; assert_in_delta(0.7040397318663292, worksheet.outputs_climate_impacts_aa31, 0.002); end
  def test_outputs_climate_impacts_ab31; assert_in_delta(0.805480921450082, worksheet.outputs_climate_impacts_ab31, 0.002); end
  def test_outputs_climate_impacts_ac31; assert_in_delta(0.9167000964702188, worksheet.outputs_climate_impacts_ac31, 0.002); end
  def test_outputs_climate_impacts_ad31; assert_in_epsilon(1.0497987983541337, worksheet.outputs_climate_impacts_ad31, 0.002); end
  def test_outputs_climate_impacts_ae31; assert_in_epsilon(1.1837747063806807, worksheet.outputs_climate_impacts_ae31, 0.002); end
  def test_outputs_climate_impacts_af31; assert_in_epsilon(1.3184272761786986, worksheet.outputs_climate_impacts_af31, 0.002); end
  def test_outputs_climate_impacts_ag31; assert_in_epsilon(1.4535279440727529, worksheet.outputs_climate_impacts_ag31, 0.002); end
  def test_outputs_climate_impacts_ah31; assert_in_epsilon(1.5887387200973653, worksheet.outputs_climate_impacts_ah31, 0.002); end
  def test_outputs_climate_impacts_ai31; assert_in_epsilon(1.7240174138618714, worksheet.outputs_climate_impacts_ai31, 0.002); end
  def test_outputs_climate_impacts_aj31; assert_in_epsilon(1.859330544444534, worksheet.outputs_climate_impacts_aj31, 0.002); end
  def test_outputs_climate_impacts_ak31; assert_in_epsilon(1.99465536047507, worksheet.outputs_climate_impacts_ak31, 0.002); end
  def test_outputs_climate_impacts_al31; assert_in_epsilon(2.129986448705932, worksheet.outputs_climate_impacts_al31, 0.002); end
  def test_outputs_climate_impacts_am31; assert_in_epsilon(2.2653204186324443, worksheet.outputs_climate_impacts_am31, 0.002); end
  def test_outputs_climate_impacts_f3; assert_equal("no warning", worksheet.outputs_climate_impacts_f3); end
  def test_conversions_b66; assert_equal("Unit", worksheet.conversions_b66); end
  def test_conversions_c66; assert_equal("Name", worksheet.conversions_c66); end
  def test_conversions_d66; assert_equal("Name in formulae", worksheet.conversions_d66); end
  def test_conversions_e66; assert_equal("m^2", worksheet.conversions_e66); end
  def test_conversions_f66; assert_equal("M ha", worksheet.conversions_f66); end
  def test_conversions_b67; assert_equal("ha", worksheet.conversions_b67); end
  def test_conversions_c67; assert_equal("Hectares", worksheet.conversions_c67); end
  def test_conversions_d67; assert_equal("Unit.ha", worksheet.conversions_d67); end
  def test_conversions_e67; assert_in_epsilon(10000.0, worksheet.conversions_e67, 0.002); end
  def test_conversions_f67; assert_in_delta(1.0e-06, worksheet.conversions_f67, 0.002); end
  def test_conversions_b68; assert_equal("M ha", worksheet.conversions_b68); end
  def test_conversions_c68; assert_equal("Million hectares", worksheet.conversions_c68); end
  def test_conversions_d68; assert_equal("Unit.Mha", worksheet.conversions_d68); end
  def test_conversions_e68; assert_in_epsilon(10000000000.0, worksheet.conversions_e68, 0.002); end
  def test_conversions_f68; assert_in_delta(1.0, worksheet.conversions_f68, 0.002); end
  def test_conversions_b69; assert_equal("acres", worksheet.conversions_b69); end
  def test_conversions_c69; assert_equal("Acres", worksheet.conversions_c69); end
  def test_conversions_d69; assert_equal("Unit.acre", worksheet.conversions_d69); end
  def test_conversions_e69; assert_in_epsilon(4046.8564224, worksheet.conversions_e69, 0.002); end
  def test_conversions_f69; assert_in_delta(4.0468564224000004e-07, worksheet.conversions_f69, 0.002); end
  def test_conversions_b70; assert_equal("km^2", worksheet.conversions_b70); end
  def test_conversions_c70; assert_equal("Square kilometres", worksheet.conversions_c70); end
  def test_conversions_d70; assert_equal("Unit.km2", worksheet.conversions_d70); end
  def test_conversions_e70; assert_in_epsilon(1000000.0, worksheet.conversions_e70, 0.002); end
  def test_conversions_f70; assert_in_delta(0.0001, worksheet.conversions_f70, 0.002); end
  def test_conversions_b71; assert_equal("m^2", worksheet.conversions_b71); end
  def test_conversions_c71; assert_equal("Square metres", worksheet.conversions_c71); end
  def test_conversions_d71; assert_equal("Unit.m2", worksheet.conversions_d71); end
  def test_conversions_e71; assert_in_delta(1.0, worksheet.conversions_e71, 0.002); end
  def test_conversions_f71; assert_in_delta(1.0e-10, worksheet.conversions_f71, 0.002); end
  def test_conversions_b72; assert_equal("Football pitch", worksheet.conversions_b72); end
  def test_conversions_c72; assert_equal("Football pitch", worksheet.conversions_c72); end
  def test_conversions_d72; assert_equal("unit.footballpitch", worksheet.conversions_d72); end
  def test_conversions_e72; assert_in_epsilon(7140.0, worksheet.conversions_e72, 0.002); end
  def test_conversions_f72; assert_in_delta(7.14e-07, worksheet.conversions_f72, 0.002); end
  def test_conversions_b73; assert_equal("Australia", worksheet.conversions_b73); end
  def test_conversions_c73; assert_equal("Australia", worksheet.conversions_c73); end
  def test_conversions_d73; assert_equal("Unit.Australia", worksheet.conversions_d73); end
  def test_conversions_e73; assert_in_epsilon(7686850000000.0, worksheet.conversions_e73, 0.002); end
  def test_conversions_f73; assert_in_epsilon(768.685, worksheet.conversions_f73, 0.002); end
  def test_conversions_b74; assert_equal("India", worksheet.conversions_b74); end
  def test_conversions_c74; assert_equal("India", worksheet.conversions_c74); end
  def test_conversions_d74; assert_equal("Unit.India", worksheet.conversions_d74); end
  def test_conversions_e74; assert_in_epsilon(3287263000000.0, worksheet.conversions_e74, 0.002); end
  def test_conversions_f74; assert_in_epsilon(328.7263, worksheet.conversions_f74, 0.002); end
  def test_conversions_b75; assert_equal("Brazil", worksheet.conversions_b75); end
  def test_conversions_c75; assert_equal("Brazil", worksheet.conversions_c75); end
  def test_conversions_d75; assert_equal("Unit.Brazil", worksheet.conversions_d75); end
  def test_conversions_e75; assert_in_epsilon(8515767000000.0, worksheet.conversions_e75, 0.002); end
  def test_conversions_f75; assert_in_epsilon(851.5767, worksheet.conversions_f75, 0.002); end
  def test_conversions_b76; assert_equal("China", worksheet.conversions_b76); end
  def test_conversions_c76; assert_equal("China", worksheet.conversions_c76); end
  def test_conversions_d76; assert_equal("Unit.China", worksheet.conversions_d76); end
  def test_conversions_e76; assert_in_epsilon(9706961000000.0, worksheet.conversions_e76, 0.002); end
  def test_conversions_f76; assert_in_epsilon(970.6961, worksheet.conversions_f76, 0.002); end
  def test_conversions_b77; assert_equal("South Africa", worksheet.conversions_b77); end
  def test_conversions_c77; assert_equal("South Africa", worksheet.conversions_c77); end
  def test_conversions_d77; assert_equal("Unit.SouthAfrica", worksheet.conversions_d77); end
  def test_conversions_e77; assert_in_epsilon(1221037000000.0, worksheet.conversions_e77, 0.002); end
  def test_conversions_f77; assert_in_epsilon(122.1037, worksheet.conversions_f77, 0.002); end
  def test_conversions_b6; assert_equal("Unit", worksheet.conversions_b6); end
  def test_conversions_c6; assert_equal("Name", worksheet.conversions_c6); end
  def test_conversions_d6; assert_equal("Name in formulae", worksheet.conversions_d6); end
  def test_conversions_e6; assert_equal("Joules", worksheet.conversions_e6); end
  def test_conversions_f6; assert_equal("EJ", worksheet.conversions_f6); end
  def test_conversions_b7; assert_equal("EJ", worksheet.conversions_b7); end
  def test_conversions_c7; assert_equal("Exajoules", worksheet.conversions_c7); end
  def test_conversions_d7; assert_equal("Unit.EJ", worksheet.conversions_d7); end
  def test_conversions_e7; assert_in_epsilon(1.0e+18, worksheet.conversions_e7, 0.002); end
  def test_conversions_f7; assert_in_delta(1.0, worksheet.conversions_f7, 0.002); end
  def test_conversions_b8; assert_equal("PJ", worksheet.conversions_b8); end
  def test_conversions_c8; assert_equal("Petajoules", worksheet.conversions_c8); end
  def test_conversions_d8; assert_equal("Unit.PJ", worksheet.conversions_d8); end
  def test_conversions_e8; assert_in_epsilon(1.0e+15, worksheet.conversions_e8, 0.002); end
  def test_conversions_f8; assert_in_delta(0.001, worksheet.conversions_f8, 0.002); end
  def test_conversions_b9; assert_equal("TJ", worksheet.conversions_b9); end
  def test_conversions_c9; assert_equal("Terajoules", worksheet.conversions_c9); end
  def test_conversions_d9; assert_equal("Unit.TJ", worksheet.conversions_d9); end
  def test_conversions_e9; assert_in_epsilon(1000000000000.0, worksheet.conversions_e9, 0.002); end
  def test_conversions_f9; assert_in_delta(1.0e-06, worksheet.conversions_f9, 0.002); end
  def test_conversions_b10; assert_equal("GJ", worksheet.conversions_b10); end
  def test_conversions_c10; assert_equal("Gigajoules", worksheet.conversions_c10); end
  def test_conversions_d10; assert_equal("Unit.GJ", worksheet.conversions_d10); end
  def test_conversions_e10; assert_in_epsilon(1000000000.0, worksheet.conversions_e10, 0.002); end
  def test_conversions_f10; assert_in_delta(1.0e-09, worksheet.conversions_f10, 0.002); end
  def test_conversions_b11; assert_equal("MJ", worksheet.conversions_b11); end
  def test_conversions_c11; assert_equal("Megajoules", worksheet.conversions_c11); end
  def test_conversions_d11; assert_equal("Unit.MJ", worksheet.conversions_d11); end
  def test_conversions_e11; assert_in_epsilon(1000000.0, worksheet.conversions_e11, 0.002); end
  def test_conversions_f11; assert_in_delta(1.0e-12, worksheet.conversions_f11, 0.002); end
  def test_conversions_b12; assert_equal("J", worksheet.conversions_b12); end
  def test_conversions_c12; assert_equal("Joules", worksheet.conversions_c12); end
  def test_conversions_d12; assert_equal("Unit.J", worksheet.conversions_d12); end
  def test_conversions_e12; assert_in_delta(1.0, worksheet.conversions_e12, 0.002); end
  def test_conversions_f12; assert_in_delta(1.0e-18, worksheet.conversions_f12, 0.002); end
  def test_conversions_b13; assert_equal("TWh", worksheet.conversions_b13); end
  def test_conversions_c13; assert_equal("Terawatt-hours", worksheet.conversions_c13); end
  def test_conversions_d13; assert_equal("Unit.TWh", worksheet.conversions_d13); end
  def test_conversions_e13; assert_in_epsilon(3.6e+15, worksheet.conversions_e13, 0.002); end
  def test_conversions_f13; assert_in_delta(0.0036, worksheet.conversions_f13, 0.002); end
  def test_conversions_b14; assert_equal("GWh", worksheet.conversions_b14); end
  def test_conversions_c14; assert_equal("Gigawatt-hours", worksheet.conversions_c14); end
  def test_conversions_d14; assert_equal("Unit.GWh", worksheet.conversions_d14); end
  def test_conversions_e14; assert_in_epsilon(3600000000000.0, worksheet.conversions_e14, 0.002); end
  def test_conversions_f14; assert_in_delta(3.6e-06, worksheet.conversions_f14, 0.002); end
  def test_conversions_b15; assert_equal("MWh", worksheet.conversions_b15); end
  def test_conversions_c15; assert_equal("Megawatt-hours", worksheet.conversions_c15); end
  def test_conversions_d15; assert_equal("Unit.MWh", worksheet.conversions_d15); end
  def test_conversions_e15; assert_in_epsilon(3600000000.0, worksheet.conversions_e15, 0.002); end
  def test_conversions_f15; assert_in_delta(3.6e-09, worksheet.conversions_f15, 0.002); end
  def test_conversions_b16; assert_equal("kWh", worksheet.conversions_b16); end
  def test_conversions_c16; assert_equal("Kilowatt-hours", worksheet.conversions_c16); end
  def test_conversions_d16; assert_equal("Unit.kWh", worksheet.conversions_d16); end
  def test_conversions_e16; assert_in_epsilon(3600000.0, worksheet.conversions_e16, 0.002); end
  def test_conversions_f16; assert_in_delta(3.6e-12, worksheet.conversions_f16, 0.002); end
  def test_conversions_b17; assert_equal("boe", worksheet.conversions_b17); end
  def test_conversions_c17; assert_equal("Barrel of oil equivalent", worksheet.conversions_c17); end
  def test_conversions_d17; assert_equal("Unit.boe", worksheet.conversions_d17); end
  def test_conversions_e17; assert_in_epsilon(5861520000.0, worksheet.conversions_e17, 0.002); end
  def test_conversions_f17; assert_in_delta(5.86152e-09, worksheet.conversions_f17, 0.002); end
  def test_conversions_b18; assert_equal("Mboe", worksheet.conversions_b18); end
  def test_conversions_c18; assert_equal("Million barrels of oil equivalent", worksheet.conversions_c18); end
  def test_conversions_d18; assert_equal("Unit.Mboe", worksheet.conversions_d18); end
  def test_conversions_e18; assert_in_epsilon(5.86152e+15, worksheet.conversions_e18, 0.002); end
  def test_conversions_f18; assert_in_delta(0.00586152, worksheet.conversions_f18, 0.002); end
  def test_conversions_b19; assert_equal("toe", worksheet.conversions_b19); end
  def test_conversions_c19; assert_equal("Tonnes of oil equivalent", worksheet.conversions_c19); end
  def test_conversions_d19; assert_equal("Unit.toe", worksheet.conversions_d19); end
  def test_conversions_e19; assert_in_epsilon(41868000000.0, worksheet.conversions_e19, 0.002); end
  def test_conversions_f19; assert_in_delta(4.1868e-08, worksheet.conversions_f19, 0.002); end
  def test_conversions_b20; assert_equal("ktoe", worksheet.conversions_b20); end
  def test_conversions_c20; assert_equal("Kilotonnes of oil equivalent", worksheet.conversions_c20); end
  def test_conversions_d20; assert_equal("Unit.ktoe", worksheet.conversions_d20); end
  def test_conversions_e20; assert_in_epsilon(41868000000000.0, worksheet.conversions_e20, 0.002); end
  def test_conversions_f20; assert_in_delta(4.1868e-05, worksheet.conversions_f20, 0.002); end
  def test_conversions_b21; assert_equal("Mtoe", worksheet.conversions_b21); end
  def test_conversions_c21; assert_equal("Megatonnes of oil equivalent", worksheet.conversions_c21); end
  def test_conversions_d21; assert_equal("Unit.Mtoe", worksheet.conversions_d21); end
  def test_conversions_e21; assert_in_epsilon(4.1868e+16, worksheet.conversions_e21, 0.002); end
  def test_conversions_f21; assert_in_delta(0.041868, worksheet.conversions_f21, 0.002); end
  def test_conversions_b22; assert_equal("tce", worksheet.conversions_b22); end
  def test_conversions_c22; assert_equal("Tonnes of coal equivalent", worksheet.conversions_c22); end
  def test_conversions_d22; assert_equal("unit.tce", worksheet.conversions_d22); end
  def test_conversions_e22; assert_in_epsilon(29307600000.0, worksheet.conversions_e22, 0.002); end
  def test_conversions_f22; assert_in_delta(0.0293076, worksheet.conversions_f22, 0.002); end
  def test_conversions_b23; assert_equal("Mtce", worksheet.conversions_b23); end
  def test_conversions_c23; assert_equal("Million tonnes of coal equivalent", worksheet.conversions_c23); end
  def test_conversions_d23; assert_equal("unit.Mtce", worksheet.conversions_d23); end
  def test_conversions_e23; assert_in_epsilon(2.93076e+16, worksheet.conversions_e23, 0.002); end
  def test_conversions_f23; assert_in_delta(0.0293076, worksheet.conversions_f23, 0.002); end
  def test_conversions_b24; assert_equal("therm", worksheet.conversions_b24); end
  def test_conversions_c24; assert_equal("Therms", worksheet.conversions_c24); end
  def test_conversions_d24; assert_equal("Unit.therm", worksheet.conversions_d24); end
  def test_conversions_e24; assert_in_epsilon(105506136.12882091, worksheet.conversions_e24, 0.002); end
  def test_conversions_f24; assert_in_delta(1.055061361288209e-10, worksheet.conversions_f24, 0.002); end
  def test_conversions_b25; assert_equal("Btu", worksheet.conversions_b25); end
  def test_conversions_c25; assert_equal("British Thermal Unit", worksheet.conversions_c25); end
  def test_conversions_d25; assert_equal("Unit.Btu", worksheet.conversions_d25); end
  def test_conversions_e25; assert_in_epsilon(1055.0613612882091, worksheet.conversions_e25, 0.002); end
  def test_conversions_f25; assert_in_delta(1.055061361288209e-15, worksheet.conversions_f25, 0.002); end
  def test_conversions_b26; assert_equal("Mbtu", worksheet.conversions_b26); end
  def test_conversions_c26; assert_equal("Million British Thermal Units", worksheet.conversions_c26); end
  def test_conversions_d26; assert_equal("Unit.Mbtu", worksheet.conversions_d26); end
  def test_conversions_e26; assert_in_epsilon(1055061361.2882091, worksheet.conversions_e26, 0.002); end
  def test_conversions_f26; assert_in_delta(1.055061361288209e-09, worksheet.conversions_f26, 0.002); end
  def test_conversions_b27; assert_equal("calorie", worksheet.conversions_b27); end
  def test_conversions_c27; assert_equal("Calorie (NOT food calorie)", worksheet.conversions_c27); end
  def test_conversions_d27; assert_equal("Unit.calorie.not.food", worksheet.conversions_d27); end
  def test_conversions_e27; assert_in_epsilon(4.184, worksheet.conversions_e27, 0.002); end
  def test_conversions_f27; assert_in_delta(4.184e-18, worksheet.conversions_f27, 0.002); end
  def test_conversions_b28; assert_equal("kcal", worksheet.conversions_b28); end
  def test_conversions_c28; assert_equal("Food calories", worksheet.conversions_c28); end
  def test_conversions_d28; assert_equal("unit.kcal.food", worksheet.conversions_d28); end
  def test_conversions_e28; assert_in_epsilon(4184.0, worksheet.conversions_e28, 0.002); end
  def test_conversions_f28; assert_in_delta(4.184e-15, worksheet.conversions_f28, 0.002); end
  def test_conversions_b29; assert_equal("GW y", worksheet.conversions_b29); end
  def test_conversions_c29; assert_equal("Gigawatt-years", worksheet.conversions_c29); end
  def test_conversions_d29; assert_equal("Unit.GWyear", worksheet.conversions_d29); end
  def test_conversions_e29; assert_in_epsilon(3.15576e+16, worksheet.conversions_e29, 0.002); end
  def test_conversions_f29; assert_in_delta(0.0315576, worksheet.conversions_f29, 0.002); end
  def test_conversions_b33; assert_equal("Unit", worksheet.conversions_b33); end
  def test_conversions_c33; assert_equal("Name", worksheet.conversions_c33); end
  def test_conversions_d33; assert_equal("Name in formulae", worksheet.conversions_d33); end
  def test_conversions_e33; assert_equal("Watts", worksheet.conversions_e33); end
  def test_conversions_f33; assert_equal("GW", worksheet.conversions_f33); end
  def test_conversions_b34; assert_equal("GW", worksheet.conversions_b34); end
  def test_conversions_c34; assert_equal("Gigawatts", worksheet.conversions_c34); end
  def test_conversions_d34; assert_equal("Unit.GW", worksheet.conversions_d34); end
  def test_conversions_e34; assert_in_epsilon(1000000000.0, worksheet.conversions_e34, 0.002); end
  def test_conversions_f34; assert_in_delta(1.0, worksheet.conversions_f34, 0.002); end
  def test_conversions_b35; assert_equal("MW", worksheet.conversions_b35); end
  def test_conversions_c35; assert_equal("Megawatts", worksheet.conversions_c35); end
  def test_conversions_d35; assert_equal("Unit.MW", worksheet.conversions_d35); end
  def test_conversions_e35; assert_in_epsilon(1000000.0, worksheet.conversions_e35, 0.002); end
  def test_conversions_f35; assert_in_delta(0.001, worksheet.conversions_f35, 0.002); end
  def test_conversions_b36; assert_equal("kW", worksheet.conversions_b36); end
  def test_conversions_c36; assert_equal("Kilowatts", worksheet.conversions_c36); end
  def test_conversions_d36; assert_equal("Unit.kW", worksheet.conversions_d36); end
  def test_conversions_e36; assert_in_epsilon(1000.0, worksheet.conversions_e36, 0.002); end
  def test_conversions_f36; assert_in_delta(1.0e-06, worksheet.conversions_f36, 0.002); end
  def test_conversions_b37; assert_equal("W", worksheet.conversions_b37); end
  def test_conversions_c37; assert_equal("Watts", worksheet.conversions_c37); end
  def test_conversions_d37; assert_equal("Unit.W", worksheet.conversions_d37); end
  def test_conversions_e37; assert_in_delta(1.0, worksheet.conversions_e37, 0.002); end
  def test_conversions_f37; assert_in_delta(1.0e-09, worksheet.conversions_f37, 0.002); end
  def test_conversions_b38; assert_equal("mcm/d", worksheet.conversions_b38); end
  def test_conversions_c38; assert_equal("mcm/d natural gas", worksheet.conversions_c38); end
  def test_conversions_d38; assert_equal("Unit.mcm.d", worksheet.conversions_d38); end
  def test_conversions_e38; assert_in_epsilon(335648148.1481481, worksheet.conversions_e38, 0.002); end
  def test_conversions_f38; assert_in_delta(0.33564814814814814, worksheet.conversions_f38, 0.002); end
  def test_conversions_b39; assert_equal("Mtoe/y", worksheet.conversions_b39); end
  def test_conversions_c39; assert_equal("Mtoe per year", worksheet.conversions_c39); end
  def test_conversions_d39; assert_equal("Unit.Mtoe.y", worksheet.conversions_d39); end
  def test_conversions_e39; assert_in_epsilon(1326716860.597764, worksheet.conversions_e39, 0.002); end
  def test_conversions_f39; assert_in_epsilon(1.326716860597764, worksheet.conversions_f39, 0.002); end
  def test_outputs_physical_implications_q117; assert_in_epsilon(1875.4678932909321, worksheet.outputs_physical_implications_q117, 0.002); end
  def test_outputs_physical_implications_q118; assert_in_epsilon(383.2069415845361, worksheet.outputs_physical_implications_q118, 0.002); end
  def test_outputs_physical_implications_q119; assert_in_epsilon(1450.7333843560282, worksheet.outputs_physical_implications_q119, 0.002); end
  def test_outputs_physical_implications_q120; assert_in_delta(0.0, (worksheet.outputs_physical_implications_q120||0), 0.002); end
  def test_outputs_physical_implications_q121; assert_in_epsilon(364.0, worksheet.outputs_physical_implications_q121, 0.002); end
  def test_outputs_physical_implications_q122; assert_in_epsilon(237.67, worksheet.outputs_physical_implications_q122, 0.002); end
  def test_outputs_physical_implications_q123; assert_in_epsilon(970.0, worksheet.outputs_physical_implications_q123, 0.002); end
  def test_outputs_physical_implications_q124; assert_in_delta(0.527, worksheet.outputs_physical_implications_q124, 0.002); end
  def test_outputs_physical_implications_q125; assert_in_epsilon(71.28999999999999, worksheet.outputs_physical_implications_q125, 0.002); end
  def test_outputs_physical_implications_q126; assert_in_epsilon(11.43, worksheet.outputs_physical_implications_q126, 0.002); end
  def test_outputs_physical_implications_q127; assert_in_epsilon(120.0, worksheet.outputs_physical_implications_q127, 0.002); end
  def test_outputs_physical_implications_y117; assert_in_epsilon(5976.1368136481715, worksheet.outputs_physical_implications_y117, 0.002); end
  def test_outputs_physical_implications_y118; assert_in_epsilon(2591.5044517539022, worksheet.outputs_physical_implications_y118, 0.002); end
  def test_outputs_physical_implications_y119; assert_in_epsilon(4570.304592588355, worksheet.outputs_physical_implications_y119, 0.002); end
  def test_outputs_physical_implications_y120; assert_in_epsilon(16.0, worksheet.outputs_physical_implications_y120, 0.002); end
  def test_outputs_physical_implications_y121; assert_in_epsilon(479.49999999999994, worksheet.outputs_physical_implications_y121, 0.002); end
  def test_outputs_physical_implications_y122; assert_in_epsilon(1158.5, worksheet.outputs_physical_implications_y122, 0.002); end
  def test_outputs_physical_implications_y123; assert_in_epsilon(1693.8, worksheet.outputs_physical_implications_y123, 0.002); end
  def test_outputs_physical_implications_y124; assert_in_epsilon(34.7, worksheet.outputs_physical_implications_y124, 0.002); end
  def test_outputs_physical_implications_y125; assert_in_epsilon(440.86199999999985, worksheet.outputs_physical_implications_y125, 0.002); end
  def test_outputs_physical_implications_y126; assert_in_epsilon(68.79999999999998, worksheet.outputs_physical_implications_y126, 0.002); end
  def test_outputs_physical_implications_y127; assert_in_epsilon(277.5, worksheet.outputs_physical_implications_y127, 0.002); end
  def test_outputs_physical_implications_m85; assert_in_epsilon(1995.0, worksheet.outputs_physical_implications_m85, 0.002); end
  def test_outputs_physical_implications_n85; assert_in_epsilon(2000.0, worksheet.outputs_physical_implications_n85, 0.002); end
  def test_outputs_physical_implications_o85; assert_in_epsilon(2005.0, worksheet.outputs_physical_implications_o85, 0.002); end
  def test_outputs_physical_implications_p85; assert_in_epsilon(2010.0, worksheet.outputs_physical_implications_p85, 0.002); end
  def test_outputs_physical_implications_r85; assert_equal("2015", worksheet.outputs_physical_implications_r85); end
  def test_outputs_physical_implications_s85; assert_equal("2020", worksheet.outputs_physical_implications_s85); end
  def test_outputs_physical_implications_t85; assert_equal("2025", worksheet.outputs_physical_implications_t85); end
  def test_outputs_physical_implications_u85; assert_equal("2030", worksheet.outputs_physical_implications_u85); end
  def test_outputs_physical_implications_v85; assert_equal("2035", worksheet.outputs_physical_implications_v85); end
  def test_outputs_physical_implications_w85; assert_equal("2040", worksheet.outputs_physical_implications_w85); end
  def test_outputs_physical_implications_x85; assert_equal("2045", worksheet.outputs_physical_implications_x85); end
  def test_outputs_physical_implications_y85; assert_equal("2050", worksheet.outputs_physical_implications_y85); end
  def test_outputs_physical_implications_c86; assert_equal("Deforestation in year (average for 5 year period)", worksheet.outputs_physical_implications_c86); end
  def test_outputs_physical_implications_m86; assert_in_epsilon(8.323076000000402, worksheet.outputs_physical_implications_m86, 0.002); end
  def test_outputs_physical_implications_n86; assert_in_epsilon(8.323112000000128, worksheet.outputs_physical_implications_n86, 0.002); end
  def test_outputs_physical_implications_o86; assert_in_epsilon(4.840760000000046, worksheet.outputs_physical_implications_o86, 0.002); end
  def test_outputs_physical_implications_p86; assert_in_epsilon(5.581056000000262, worksheet.outputs_physical_implications_p86, 0.002); end
  def test_outputs_physical_implications_r86; assert_in_epsilon(7.069110333473532, worksheet.outputs_physical_implications_r86, 0.002); end
  def test_outputs_physical_implications_s86; assert_in_epsilon(7.0022299759957605, worksheet.outputs_physical_implications_s86, 0.002); end
  def test_outputs_physical_implications_t86; assert_in_epsilon(3.3551718189263737, worksheet.outputs_physical_implications_t86, 0.002); end
  def test_outputs_physical_implications_u86; assert_in_epsilon(4.769087686375405, worksheet.outputs_physical_implications_u86, 0.002); end
  def test_outputs_physical_implications_v86; assert_in_epsilon(10.03333977790653, worksheet.outputs_physical_implications_v86, 0.002); end
  def test_outputs_physical_implications_w86; assert_in_epsilon(14.507108467104171, worksheet.outputs_physical_implications_w86, 0.002); end
  def test_outputs_physical_implications_x86; assert_in_epsilon(10.575708365693846, worksheet.outputs_physical_implications_x86, 0.002); end
  def test_outputs_physical_implications_y86; assert_in_epsilon(16.693464636753653, worksheet.outputs_physical_implications_y86, 0.002); end
  def test_outputs_physical_implications_q95; assert_in_epsilon(32.351, worksheet.outputs_physical_implications_q95, 0.002); end
  def test_outputs_physical_implications_q96; assert_in_epsilon(43.757999999999996, worksheet.outputs_physical_implications_q96, 0.002); end
  def test_outputs_physical_implications_q97; assert_in_epsilon(99.48399999999998, worksheet.outputs_physical_implications_q97, 0.002); end
  def test_outputs_physical_implications_q98; assert_in_epsilon(8.975999999999999, worksheet.outputs_physical_implications_q98, 0.002); end
  def test_outputs_physical_implications_q99; assert_in_epsilon(2.430999999999989, worksheet.outputs_physical_implications_q99, 0.002); end
  def test_outputs_physical_implications_q100; assert_in_epsilon(60.0, worksheet.outputs_physical_implications_q100, 0.002); end
  def test_outputs_physical_implications_q101; assert_in_epsilon(7.0, worksheet.outputs_physical_implications_q101, 0.002); end
  def test_outputs_physical_implications_q102; assert_in_epsilon(26.964000000000002, worksheet.outputs_physical_implications_q102, 0.002); end
  def test_outputs_physical_implications_q103; assert_in_epsilon(26.964000000000002, worksheet.outputs_physical_implications_q103, 0.002); end
  def test_outputs_physical_implications_q104; assert_in_epsilon(100.15199999999999, worksheet.outputs_physical_implications_q104, 0.002); end
  def test_outputs_physical_implications_q105; assert_in_epsilon(1771.9200000000003, worksheet.outputs_physical_implications_q105, 0.002); end
  def test_outputs_physical_implications_y95; assert_in_epsilon(40.92, worksheet.outputs_physical_implications_y95, 0.002); end
  def test_outputs_physical_implications_y96; assert_in_epsilon(65.56, worksheet.outputs_physical_implications_y96, 0.002); end
  def test_outputs_physical_implications_y97; assert_in_epsilon(96.58, worksheet.outputs_physical_implications_y97, 0.002); end
  def test_outputs_physical_implications_y98; assert_in_epsilon(13.200000000000003, worksheet.outputs_physical_implications_y98, 0.002); end
  def test_outputs_physical_implications_y99; assert_in_epsilon(3.7400000000000033, worksheet.outputs_physical_implications_y99, 0.002); end
  def test_outputs_physical_implications_y100; assert_in_epsilon(70.58823529411767, worksheet.outputs_physical_implications_y100, 0.002); end
  def test_outputs_physical_implications_y101; assert_in_epsilon(8.23529411764706, worksheet.outputs_physical_implications_y101, 0.002); end
  def test_outputs_physical_implications_y102; assert_in_epsilon(42.65470588235294, worksheet.outputs_physical_implications_y102, 0.002); end
  def test_outputs_physical_implications_y103; assert_in_epsilon(38.592352941176465, worksheet.outputs_physical_implications_y103, 0.002); end
  def test_outputs_physical_implications_y104; assert_in_epsilon(134.05764705882353, worksheet.outputs_physical_implications_y104, 0.002); end
  def test_outputs_physical_implications_y105; assert_in_epsilon(1815.8717647058822, worksheet.outputs_physical_implications_y105, 0.002); end
  def test_outputs_physical_implications_c328; assert_equal("Technology category", worksheet.outputs_physical_implications_c328); end
  def test_outputs_physical_implications_q328; assert_in_epsilon(2011.0, worksheet.outputs_physical_implications_q328, 0.002); end
  def test_outputs_physical_implications_r328; assert_equal("2015", worksheet.outputs_physical_implications_r328); end
  def test_outputs_physical_implications_s328; assert_equal("2020", worksheet.outputs_physical_implications_s328); end
  def test_outputs_physical_implications_t328; assert_equal("2025", worksheet.outputs_physical_implications_t328); end
  def test_outputs_physical_implications_u328; assert_equal("2030", worksheet.outputs_physical_implications_u328); end
  def test_outputs_physical_implications_v328; assert_equal("2035", worksheet.outputs_physical_implications_v328); end
  def test_outputs_physical_implications_w328; assert_equal("2040", worksheet.outputs_physical_implications_w328); end
  def test_outputs_physical_implications_x328; assert_equal("2045", worksheet.outputs_physical_implications_x328); end
  def test_outputs_physical_implications_y328; assert_equal("2050", worksheet.outputs_physical_implications_y328); end
  def test_outputs_physical_implications_c329; assert_equal("Light road", worksheet.outputs_physical_implications_c329); end
  def test_outputs_physical_implications_q329; assert_in_epsilon(104512.00105377422, worksheet.outputs_physical_implications_q329, 0.002); end
  def test_outputs_physical_implications_r329; assert_in_epsilon(127861.4042385642, worksheet.outputs_physical_implications_r329, 0.002); end
  def test_outputs_physical_implications_s329; assert_in_epsilon(163265.08228081145, worksheet.outputs_physical_implications_s329, 0.002); end
  def test_outputs_physical_implications_t329; assert_in_epsilon(196146.08568036044, worksheet.outputs_physical_implications_t329, 0.002); end
  def test_outputs_physical_implications_u329; assert_in_epsilon(221563.7430596157, worksheet.outputs_physical_implications_u329, 0.002); end
  def test_outputs_physical_implications_v329; assert_in_epsilon(241041.18121565136, worksheet.outputs_physical_implications_v329, 0.002); end
  def test_outputs_physical_implications_w329; assert_in_epsilon(255651.7997780544, worksheet.outputs_physical_implications_w329, 0.002); end
  def test_outputs_physical_implications_x329; assert_in_epsilon(266304.9522797589, worksheet.outputs_physical_implications_x329, 0.002); end
  def test_outputs_physical_implications_y329; assert_in_epsilon(275859.9838853153, worksheet.outputs_physical_implications_y329, 0.002); end
  def test_outputs_physical_implications_c330; assert_equal("Heavy road", worksheet.outputs_physical_implications_c330); end
  def test_outputs_physical_implications_q330; assert_in_epsilon(52118.56449426207, worksheet.outputs_physical_implications_q330, 0.002); end
  def test_outputs_physical_implications_r330; assert_in_epsilon(63525.74710934682, worksheet.outputs_physical_implications_r330, 0.002); end
  def test_outputs_physical_implications_s330; assert_in_epsilon(80231.5412071261, worksheet.outputs_physical_implications_s330, 0.002); end
  def test_outputs_physical_implications_t330; assert_in_epsilon(95386.07727359435, worksheet.outputs_physical_implications_t330, 0.002); end
  def test_outputs_physical_implications_u330; assert_in_epsilon(107766.87533347405, worksheet.outputs_physical_implications_u330, 0.002); end
  def test_outputs_physical_implications_v330; assert_in_epsilon(116105.16534235822, worksheet.outputs_physical_implications_v330, 0.002); end
  def test_outputs_physical_implications_w330; assert_in_epsilon(121999.54166351161, worksheet.outputs_physical_implications_w330, 0.002); end
  def test_outputs_physical_implications_x330; assert_in_epsilon(126121.21377842454, worksheet.outputs_physical_implications_x330, 0.002); end
  def test_outputs_physical_implications_y330; assert_in_epsilon(129526.27127478526, worksheet.outputs_physical_implications_y330, 0.002); end
  def test_outputs_physical_implications_c331; assert_equal("Rail", worksheet.outputs_physical_implications_c331); end
  def test_outputs_physical_implications_q331; assert_in_epsilon(84.0451023254668, worksheet.outputs_physical_implications_q331, 0.002); end
  def test_outputs_physical_implications_r331; assert_in_epsilon(97.40500678925144, worksheet.outputs_physical_implications_r331, 0.002); end
  def test_outputs_physical_implications_s331; assert_in_epsilon(119.83445571219453, worksheet.outputs_physical_implications_s331, 0.002); end
  def test_outputs_physical_implications_t331; assert_in_epsilon(138.81161136423069, worksheet.outputs_physical_implications_t331, 0.002); end
  def test_outputs_physical_implications_u331; assert_in_epsilon(151.70408287582663, worksheet.outputs_physical_implications_u331, 0.002); end
  def test_outputs_physical_implications_v331; assert_in_epsilon(159.3277896285952, worksheet.outputs_physical_implications_v331, 0.002); end
  def test_outputs_physical_implications_w331; assert_in_epsilon(163.23314472227761, worksheet.outputs_physical_implications_w331, 0.002); end
  def test_outputs_physical_implications_x331; assert_in_epsilon(164.39830477500607, worksheet.outputs_physical_implications_x331, 0.002); end
  def test_outputs_physical_implications_y331; assert_in_epsilon(164.6770372873262, worksheet.outputs_physical_implications_y331, 0.002); end
  def test_outputs_physical_implications_c332; assert_equal("Ship", worksheet.outputs_physical_implications_c332); end
  def test_outputs_physical_implications_q332; assert_in_epsilon(84.8437433279107, worksheet.outputs_physical_implications_q332, 0.002); end
  def test_outputs_physical_implications_r332; assert_in_epsilon(100.39521989428533, worksheet.outputs_physical_implications_r332, 0.002); end
  def test_outputs_physical_implications_s332; assert_in_epsilon(123.62673495202584, worksheet.outputs_physical_implications_s332, 0.002); end
  def test_outputs_physical_implications_t332; assert_in_epsilon(143.33744769924004, worksheet.outputs_physical_implications_t332, 0.002); end
  def test_outputs_physical_implications_u332; assert_in_epsilon(160.92963302037404, worksheet.outputs_physical_implications_u332, 0.002); end
  def test_outputs_physical_implications_v332; assert_in_epsilon(169.23834220746312, worksheet.outputs_physical_implications_v332, 0.002); end
  def test_outputs_physical_implications_w332; assert_in_epsilon(173.61656941584837, worksheet.outputs_physical_implications_w332, 0.002); end
  def test_outputs_physical_implications_x332; assert_in_epsilon(175.73848808671593, worksheet.outputs_physical_implications_x332, 0.002); end
  def test_outputs_physical_implications_y332; assert_in_epsilon(176.2849014633356, worksheet.outputs_physical_implications_y332, 0.002); end
  def test_outputs_physical_implications_c333; assert_equal("Plane", worksheet.outputs_physical_implications_c333); end
  def test_outputs_physical_implications_q333; assert_in_epsilon(1.8014330268291616, worksheet.outputs_physical_implications_q333, 0.002); end
  def test_outputs_physical_implications_r333; assert_in_epsilon(2.2145125589010726, worksheet.outputs_physical_implications_r333, 0.002); end
  def test_outputs_physical_implications_s333; assert_in_epsilon(2.7956016442340754, worksheet.outputs_physical_implications_s333, 0.002); end
  def test_outputs_physical_implications_t333; assert_in_epsilon(3.322419365244304, worksheet.outputs_physical_implications_t333, 0.002); end
  def test_outputs_physical_implications_u333; assert_in_epsilon(3.8530804072146534, worksheet.outputs_physical_implications_u333, 0.002); end
  def test_outputs_physical_implications_v333; assert_in_epsilon(4.1509322638088895, worksheet.outputs_physical_implications_v333, 0.002); end
  def test_outputs_physical_implications_w333; assert_in_epsilon(4.361677203685508, worksheet.outputs_physical_implications_w333, 0.002); end
  def test_outputs_physical_implications_x333; assert_in_epsilon(4.525731325154479, worksheet.outputs_physical_implications_x333, 0.002); end
  def test_outputs_physical_implications_y333; assert_in_epsilon(4.648606378417158, worksheet.outputs_physical_implications_y333, 0.002); end
  def test_outputs_physical_implications_c334; assert_equal("Total", worksheet.outputs_physical_implications_c334); end
  def test_outputs_physical_implications_q334; assert_in_epsilon(156801.25582671652, worksheet.outputs_physical_implications_q334, 0.002); end
  def test_outputs_physical_implications_r334; assert_in_epsilon(191587.16608715343, worksheet.outputs_physical_implications_r334, 0.002); end
  def test_outputs_physical_implications_s334; assert_in_epsilon(243742.88028024603, worksheet.outputs_physical_implications_s334, 0.002); end
  def test_outputs_physical_implications_t334; assert_in_epsilon(291817.63443238346, worksheet.outputs_physical_implications_t334, 0.002); end
  def test_outputs_physical_implications_u334; assert_in_epsilon(329647.1051893931, worksheet.outputs_physical_implications_u334, 0.002); end
  def test_outputs_physical_implications_v334; assert_in_epsilon(357479.0636221094, worksheet.outputs_physical_implications_v334, 0.002); end
  def test_outputs_physical_implications_w334; assert_in_epsilon(377992.5528329078, worksheet.outputs_physical_implications_w334, 0.002); end
  def test_outputs_physical_implications_x334; assert_in_epsilon(392770.8285823703, worksheet.outputs_physical_implications_x334, 0.002); end
  def test_outputs_physical_implications_y334; assert_in_epsilon(405731.86570522963, worksheet.outputs_physical_implications_y334, 0.002); end
  def test_outputs_physical_implications_c56; assert_equal("Type of land", worksheet.outputs_physical_implications_c56); end
  def test_outputs_physical_implications_l56; assert_in_epsilon(1990.0, worksheet.outputs_physical_implications_l56, 0.002); end
  def test_outputs_physical_implications_m56; assert_in_epsilon(1995.0, worksheet.outputs_physical_implications_m56, 0.002); end
  def test_outputs_physical_implications_n56; assert_in_epsilon(2000.0, worksheet.outputs_physical_implications_n56, 0.002); end
  def test_outputs_physical_implications_o56; assert_in_epsilon(2005.0, worksheet.outputs_physical_implications_o56, 0.002); end
  def test_outputs_physical_implications_p56; assert_in_epsilon(2010.0, worksheet.outputs_physical_implications_p56, 0.002); end
  def test_outputs_physical_implications_q56; assert_in_epsilon(2011.0, worksheet.outputs_physical_implications_q56, 0.002); end
  def test_outputs_physical_implications_r56; assert_equal("2015", worksheet.outputs_physical_implications_r56); end
  def test_outputs_physical_implications_s56; assert_equal("2020", worksheet.outputs_physical_implications_s56); end
  def test_outputs_physical_implications_t56; assert_equal("2025", worksheet.outputs_physical_implications_t56); end
  def test_outputs_physical_implications_u56; assert_equal("2030", worksheet.outputs_physical_implications_u56); end
  def test_outputs_physical_implications_v56; assert_equal("2035", worksheet.outputs_physical_implications_v56); end
  def test_outputs_physical_implications_w56; assert_equal("2040", worksheet.outputs_physical_implications_w56); end
  def test_outputs_physical_implications_x56; assert_equal("2045", worksheet.outputs_physical_implications_x56); end
  def test_outputs_physical_implications_y56; assert_equal("2050", worksheet.outputs_physical_implications_y56); end
  def test_outputs_physical_implications_c57; assert_equal("Land for animals", worksheet.outputs_physical_implications_c57); end
  def test_outputs_physical_implications_l57; assert_in_epsilon(3305.27405, worksheet.outputs_physical_implications_l57, 0.002); end
  def test_outputs_physical_implications_m57; assert_in_epsilon(3394.7165, worksheet.outputs_physical_implications_m57, 0.002); end
  def test_outputs_physical_implications_n57; assert_in_epsilon(3417.6424, worksheet.outputs_physical_implications_n57, 0.002); end
  def test_outputs_physical_implications_o57; assert_in_epsilon(3388.2637000000004, worksheet.outputs_physical_implications_o57, 0.002); end
  def test_outputs_physical_implications_p57; assert_in_epsilon(3358.24029, worksheet.outputs_physical_implications_p57, 0.002); end
  def test_outputs_physical_implications_q57; assert_in_epsilon(3362.6790000000005, worksheet.outputs_physical_implications_q57, 0.002); end
  def test_outputs_physical_implications_r57; assert_in_epsilon(3383.696452262766, worksheet.outputs_physical_implications_r57, 0.002); end
  def test_outputs_physical_implications_s57; assert_in_epsilon(3375.657415360506, worksheet.outputs_physical_implications_s57, 0.002); end
  def test_outputs_physical_implications_t57; assert_in_epsilon(3356.5704629362895, worksheet.outputs_physical_implications_t57, 0.002); end
  def test_outputs_physical_implications_u57; assert_in_epsilon(3347.9231087456833, worksheet.outputs_physical_implications_u57, 0.002); end
  def test_outputs_physical_implications_v57; assert_in_epsilon(3365.5662995635203, worksheet.outputs_physical_implications_v57, 0.002); end
  def test_outputs_physical_implications_w57; assert_in_epsilon(3405.736488229519, worksheet.outputs_physical_implications_w57, 0.002); end
  def test_outputs_physical_implications_x57; assert_in_epsilon(3432.5701335178865, worksheet.outputs_physical_implications_x57, 0.002); end
  def test_outputs_physical_implications_y57; assert_in_epsilon(3488.8372017243228, worksheet.outputs_physical_implications_y57, 0.002); end
  def test_outputs_physical_implications_c58; assert_equal("Land for food crops", worksheet.outputs_physical_implications_c58); end
  def test_outputs_physical_implications_l58; assert_in_epsilon(1435.159, worksheet.outputs_physical_implications_l58, 0.002); end
  def test_outputs_physical_implications_m58; assert_in_epsilon(1435.5399510204102, worksheet.outputs_physical_implications_m58, 0.002); end
  def test_outputs_physical_implications_n58; assert_in_epsilon(1428.67608979592, worksheet.outputs_physical_implications_n58, 0.002); end
  def test_outputs_physical_implications_o58; assert_in_epsilon(1446.4106385714301, worksheet.outputs_physical_implications_o58, 0.002); end
  def test_outputs_physical_implications_p58; assert_in_epsilon(1438.53226734694, worksheet.outputs_physical_implications_p58, 0.002); end
  def test_outputs_physical_implications_q58; assert_in_epsilon(1443.03019, worksheet.outputs_physical_implications_q58, 0.002); end
  def test_outputs_physical_implications_r58; assert_in_epsilon(1433.9199088344578, worksheet.outputs_physical_implications_r58, 0.002); end
  def test_outputs_physical_implications_s58; assert_in_epsilon(1458.7323609711077, worksheet.outputs_physical_implications_s58, 0.002); end
  def test_outputs_physical_implications_t58; assert_in_epsilon(1477.5567457020059, worksheet.outputs_physical_implications_t58, 0.002); end
  def test_outputs_physical_implications_u58; assert_in_epsilon(1494.202693544242, worksheet.outputs_physical_implications_u58, 0.002); end
  def test_outputs_physical_implications_v58; assert_in_epsilon(1511.9701710093354, worksheet.outputs_physical_implications_v58, 0.002); end
  def test_outputs_physical_implications_w58; assert_in_epsilon(1530.6824420960913, worksheet.outputs_physical_implications_w58, 0.002); end
  def test_outputs_physical_implications_x58; assert_in_epsilon(1544.2823799115974, worksheet.outputs_physical_implications_x58, 0.002); end
  def test_outputs_physical_implications_y58; assert_in_epsilon(1560.3289832533508, worksheet.outputs_physical_implications_y58, 0.002); end
  def test_outputs_physical_implications_c59; assert_equal("Land for non-food crops ", worksheet.outputs_physical_implications_c59); end
  def test_outputs_physical_implications_l59; assert_in_epsilon(48.0, worksheet.outputs_physical_implications_l59, 0.002); end
  def test_outputs_physical_implications_m59; assert_in_epsilon(50.8571428571429, worksheet.outputs_physical_implications_m59, 0.002); end
  def test_outputs_physical_implications_n59; assert_in_epsilon(53.7142857142857, worksheet.outputs_physical_implications_n59, 0.002); end
  def test_outputs_physical_implications_o59; assert_in_epsilon(56.571428571428605, worksheet.outputs_physical_implications_o59, 0.002); end
  def test_outputs_physical_implications_p59; assert_in_epsilon(59.4285714285714, worksheet.outputs_physical_implications_p59, 0.002); end
  def test_outputs_physical_implications_q59; assert_in_epsilon(60.0, worksheet.outputs_physical_implications_q59, 0.002); end
  def test_outputs_physical_implications_r59; assert_in_epsilon(59.38461538461539, worksheet.outputs_physical_implications_r59, 0.002); end
  def test_outputs_physical_implications_s59; assert_in_epsilon(59.043956043956044, worksheet.outputs_physical_implications_s59, 0.002); end
  def test_outputs_physical_implications_t59; assert_in_epsilon(58.70329670329671, worksheet.outputs_physical_implications_t59, 0.002); end
  def test_outputs_physical_implications_u59; assert_in_epsilon(58.36263736263737, worksheet.outputs_physical_implications_u59, 0.002); end
  def test_outputs_physical_implications_v59; assert_in_epsilon(58.02197802197802, worksheet.outputs_physical_implications_v59, 0.002); end
  def test_outputs_physical_implications_w59; assert_in_epsilon(57.681318681318686, worksheet.outputs_physical_implications_w59, 0.002); end
  def test_outputs_physical_implications_x59; assert_in_epsilon(57.34065934065934, worksheet.outputs_physical_implications_x59, 0.002); end
  def test_outputs_physical_implications_y59; assert_in_epsilon(57.0, worksheet.outputs_physical_implications_y59, 0.002); end
  def test_outputs_physical_implications_c60; assert_equal("Forest", worksheet.outputs_physical_implications_c60); end
  def test_outputs_physical_implications_l60; assert_in_epsilon(3949.19954, worksheet.outputs_physical_implications_l60, 0.002); end
  def test_outputs_physical_implications_m60; assert_in_epsilon(3894.5365409523797, worksheet.outputs_physical_implications_m60, 0.002); end
  def test_outputs_physical_implications_n60; assert_in_epsilon(3839.87336190476, worksheet.outputs_physical_implications_n60, 0.002); end
  def test_outputs_physical_implications_o60; assert_in_epsilon(3802.6219428571403, worksheet.outputs_physical_implications_o60, 0.002); end
  def test_outputs_physical_implications_p60; assert_in_epsilon(3761.66904380952, worksheet.outputs_physical_implications_p60, 0.002); end
  def test_outputs_physical_implications_q60; assert_in_epsilon(3753.47833, worksheet.outputs_physical_implications_q60, 0.002); end
  def test_outputs_physical_implications_r60; assert_in_epsilon(3708.910190331939, worksheet.outputs_physical_implications_r60, 0.002); end
  def test_outputs_physical_implications_s60; assert_in_epsilon(3651.960720445608, worksheet.outputs_physical_implications_s60, 0.002); end
  def test_outputs_physical_implications_t60; assert_in_epsilon(3608.3419940854546, worksheet.outputs_physical_implications_t60, 0.002); end
  def test_outputs_physical_implications_u60; assert_in_epsilon(3556.3906863391367, worksheet.outputs_physical_implications_u60, 0.002); end
  def test_outputs_physical_implications_v60; assert_in_epsilon(3477.0298789408353, worksheet.outputs_physical_implications_v60, 0.002); end
  def test_outputs_physical_implications_w60; assert_in_epsilon(3372.3344585315645, worksheet.outputs_physical_implications_w60, 0.002); end
  def test_outputs_physical_implications_x60; assert_in_epsilon(3285.628781257992, worksheet.outputs_physical_implications_x60, 0.002); end
  def test_outputs_physical_implications_y60; assert_in_epsilon(3164.8963225208227, worksheet.outputs_physical_implications_y60, 0.002); end
  def test_outputs_physical_implications_c61; assert_equal("Commercial forest", worksheet.outputs_physical_implications_c61); end
  def test_outputs_physical_implications_l61; assert_in_epsilon(219.20000000000002, worksheet.outputs_physical_implications_l61, 0.002); end
  def test_outputs_physical_implications_m61; assert_in_epsilon(232.247619047619, worksheet.outputs_physical_implications_m61, 0.002); end
  def test_outputs_physical_implications_n61; assert_in_epsilon(245.295238095238, worksheet.outputs_physical_implications_n61, 0.002); end
  def test_outputs_physical_implications_o61; assert_in_epsilon(258.34285714285704, worksheet.outputs_physical_implications_o61, 0.002); end
  def test_outputs_physical_implications_p61; assert_in_epsilon(271.39047619047597, worksheet.outputs_physical_implications_p61, 0.002); end
  def test_outputs_physical_implications_q61; assert_in_epsilon(274.0, worksheet.outputs_physical_implications_q61, 0.002); end
  def test_outputs_physical_implications_r61; assert_in_epsilon(290.29169833416694, worksheet.outputs_physical_implications_r61, 0.002); end
  def test_outputs_physical_implications_s61; assert_in_epsilon(312.23001834051905, worksheet.outputs_physical_implications_s61, 0.002); end
  def test_outputs_physical_implications_t61; assert_in_epsilon(339.0728856060407, worksheet.outputs_physical_implications_t61, 0.002); end
  def test_outputs_physical_implications_u61; assert_in_epsilon(367.17875492048154, worksheet.outputs_physical_implications_u61, 0.002); end
  def test_outputs_physical_implications_v61; assert_in_epsilon(396.37286342925, worksheet.outputs_physical_implications_v61, 0.002); end
  def test_outputs_physical_implications_w61; assert_in_epsilon(428.53274150300007, worksheet.outputs_physical_implications_w61, 0.002); end
  def test_outputs_physical_implications_x61; assert_in_epsilon(462.35987694810314, worksheet.outputs_physical_implications_x61, 0.002); end
  def test_outputs_physical_implications_y61; assert_in_epsilon(499.6250125015046, worksheet.outputs_physical_implications_y61, 0.002); end
  def test_outputs_physical_implications_c62; assert_equal("Land for energy crops", worksheet.outputs_physical_implications_c62); end
  def test_outputs_physical_implications_l62; assert_in_epsilon(78.4, worksheet.outputs_physical_implications_l62, 0.002); end
  def test_outputs_physical_implications_m62; assert_in_epsilon(83.06700000000001, worksheet.outputs_physical_implications_m62, 0.002); end
  def test_outputs_physical_implications_n62; assert_in_epsilon(86.8, worksheet.outputs_physical_implications_n62, 0.002); end
  def test_outputs_physical_implications_o62; assert_in_epsilon(92.4, worksheet.outputs_physical_implications_o62, 0.002); end
  def test_outputs_physical_implications_p62; assert_in_epsilon(97.06700000000001, worksheet.outputs_physical_implications_p62, 0.002); end
  def test_outputs_physical_implications_q62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_q62, 0.002); end
  def test_outputs_physical_implications_r62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_r62, 0.002); end
  def test_outputs_physical_implications_s62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_s62, 0.002); end
  def test_outputs_physical_implications_t62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_t62, 0.002); end
  def test_outputs_physical_implications_u62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_u62, 0.002); end
  def test_outputs_physical_implications_v62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_v62, 0.002); end
  def test_outputs_physical_implications_w62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_w62, 0.002); end
  def test_outputs_physical_implications_x62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_x62, 0.002); end
  def test_outputs_physical_implications_y62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_y62, 0.002); end
  def test_outputs_physical_implications_c63; assert_equal("Natural grassland", worksheet.outputs_physical_implications_c63); end
  def test_outputs_physical_implications_l63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_l63||0), 0.002); end
  def test_outputs_physical_implications_m63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_m63||0), 0.002); end
  def test_outputs_physical_implications_n63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_n63||0), 0.002); end
  def test_outputs_physical_implications_o63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_o63||0), 0.002); end
  def test_outputs_physical_implications_p63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_p63||0), 0.002); end
  def test_outputs_physical_implications_q63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_q63||0), 0.002); end
  def test_outputs_physical_implications_r63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_r63||0), 0.002); end
  def test_outputs_physical_implications_s63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_s63||0), 0.002); end
  def test_outputs_physical_implications_t63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_t63||0), 0.002); end
  def test_outputs_physical_implications_u63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_u63||0), 0.002); end
  def test_outputs_physical_implications_v63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_v63||0), 0.002); end
  def test_outputs_physical_implications_w63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_w63||0), 0.002); end
  def test_outputs_physical_implications_x63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_x63||0), 0.002); end
  def test_outputs_physical_implications_y63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_y63||0), 0.002); end
  def test_outputs_physical_implications_c64; assert_equal("Settlements and infrastructure", worksheet.outputs_physical_implications_c64); end
  def test_outputs_physical_implications_l64; assert_in_epsilon(196.0, worksheet.outputs_physical_implications_l64, 0.002); end
  def test_outputs_physical_implications_m64; assert_in_epsilon(207.666666666667, worksheet.outputs_physical_implications_m64, 0.002); end
  def test_outputs_physical_implications_n64; assert_in_epsilon(219.333333333333, worksheet.outputs_physical_implications_n64, 0.002); end
  def test_outputs_physical_implications_o64; assert_in_epsilon(231.0, worksheet.outputs_physical_implications_o64, 0.002); end
  def test_outputs_physical_implications_p64; assert_in_epsilon(242.666666666667, worksheet.outputs_physical_implications_p64, 0.002); end
  def test_outputs_physical_implications_q64; assert_in_epsilon(245.0, worksheet.outputs_physical_implications_q64, 0.002); end
  def test_outputs_physical_implications_r64; assert_in_epsilon(261.98465485205844, worksheet.outputs_physical_implications_r64, 0.002); end
  def test_outputs_physical_implications_s64; assert_in_epsilon(280.56304883830444, worksheet.outputs_physical_implications_s64, 0.002); end
  def test_outputs_physical_implications_t64; assert_in_epsilon(297.94213496691447, worksheet.outputs_physical_implications_t64, 0.002); end
  def test_outputs_physical_implications_u64; assert_in_epsilon(314.1296390878191, worksheet.outputs_physical_implications_u64, 0.002); end
  def test_outputs_physical_implications_v64; assert_in_epsilon(329.22632903508304, worksheet.outputs_physical_implications_v64, 0.002); end
  def test_outputs_physical_implications_w64; assert_in_epsilon(343.22007095850836, worksheet.outputs_physical_implications_w64, 0.002); end
  def test_outputs_physical_implications_x64; assert_in_epsilon(356.0056890237634, worksheet.outputs_physical_implications_x64, 0.002); end
  def test_outputs_physical_implications_y64; assert_in_epsilon(367.5, worksheet.outputs_physical_implications_y64, 0.002); end
  def test_outputs_physical_implications_c65; assert_equal("Desert, ice etc", worksheet.outputs_physical_implications_c65); end
  def test_outputs_physical_implications_l65; assert_in_epsilon(3878.6295800000003, worksheet.outputs_physical_implications_l65, 0.002); end
  def test_outputs_physical_implications_m65; assert_in_epsilon(3768.11670333333, worksheet.outputs_physical_implications_m65, 0.002); end
  def test_outputs_physical_implications_n65; assert_in_epsilon(3781.4923166666704, worksheet.outputs_physical_implications_n65, 0.002); end
  def test_outputs_physical_implications_o65; assert_in_epsilon(3802.21538, worksheet.outputs_physical_implications_o65, 0.002); end
  def test_outputs_physical_implications_p65; assert_in_epsilon(3850.9266033333297, worksheet.outputs_physical_implications_p65, 0.002); end
  def test_outputs_physical_implications_q65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_q65, 0.002); end
  def test_outputs_physical_implications_r65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_r65, 0.002); end
  def test_outputs_physical_implications_s65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_s65, 0.002); end
  def test_outputs_physical_implications_t65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_t65, 0.002); end
  def test_outputs_physical_implications_u65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_u65, 0.002); end
  def test_outputs_physical_implications_v65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_v65, 0.002); end
  def test_outputs_physical_implications_w65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_w65, 0.002); end
  def test_outputs_physical_implications_x65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_x65, 0.002); end
  def test_outputs_physical_implications_y65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_y65, 0.002); end
  def test_outputs_physical_implications_c319; assert_equal("Technology category", worksheet.outputs_physical_implications_c319); end
  def test_outputs_physical_implications_q319; assert_in_epsilon(2011.0, worksheet.outputs_physical_implications_q319, 0.002); end
  def test_outputs_physical_implications_r319; assert_equal("2015", worksheet.outputs_physical_implications_r319); end
  def test_outputs_physical_implications_s319; assert_equal("2020", worksheet.outputs_physical_implications_s319); end
  def test_outputs_physical_implications_t319; assert_equal("2025", worksheet.outputs_physical_implications_t319); end
  def test_outputs_physical_implications_u319; assert_equal("2030", worksheet.outputs_physical_implications_u319); end
  def test_outputs_physical_implications_v319; assert_equal("2035", worksheet.outputs_physical_implications_v319); end
  def test_outputs_physical_implications_w319; assert_equal("2040", worksheet.outputs_physical_implications_w319); end
  def test_outputs_physical_implications_x319; assert_equal("2045", worksheet.outputs_physical_implications_x319); end
  def test_outputs_physical_implications_y319; assert_equal("2050", worksheet.outputs_physical_implications_y319); end
  def test_outputs_physical_implications_c320; assert_equal("Light road", worksheet.outputs_physical_implications_c320); end
  def test_outputs_physical_implications_q320; assert_in_epsilon(1456126.4593140536, worksheet.outputs_physical_implications_q320, 0.002); end
  def test_outputs_physical_implications_r320; assert_in_epsilon(1703618.8495258745, worksheet.outputs_physical_implications_r320, 0.002); end
  def test_outputs_physical_implications_s320; assert_in_epsilon(2004505.305102773, worksheet.outputs_physical_implications_s320, 0.002); end
  def test_outputs_physical_implications_t320; assert_in_epsilon(2285737.269821753, worksheet.outputs_physical_implications_t320, 0.002); end
  def test_outputs_physical_implications_u320; assert_in_epsilon(2574878.2479463597, worksheet.outputs_physical_implications_u320, 0.002); end
  def test_outputs_physical_implications_v320; assert_in_epsilon(2856074.409006286, worksheet.outputs_physical_implications_v320, 0.002); end
  def test_outputs_physical_implications_w320; assert_in_epsilon(3138566.140268655, worksheet.outputs_physical_implications_w320, 0.002); end
  def test_outputs_physical_implications_x320; assert_in_epsilon(3407143.942576407, worksheet.outputs_physical_implications_x320, 0.002); end
  def test_outputs_physical_implications_y320; assert_in_epsilon(3676375.0792540256, worksheet.outputs_physical_implications_y320, 0.002); end
  def test_outputs_physical_implications_c321; assert_equal("Heavy road", worksheet.outputs_physical_implications_c321); end
  def test_outputs_physical_implications_q321; assert_in_epsilon(15512.285452212032, worksheet.outputs_physical_implications_q321, 0.002); end
  def test_outputs_physical_implications_r321; assert_in_epsilon(18134.24983861904, worksheet.outputs_physical_implications_r321, 0.002); end
  def test_outputs_physical_implications_s321; assert_in_epsilon(21486.00332228423, worksheet.outputs_physical_implications_s321, 0.002); end
  def test_outputs_physical_implications_t321; assert_in_epsilon(24384.96191057204, worksheet.outputs_physical_implications_t321, 0.002); end
  def test_outputs_physical_implications_u321; assert_in_epsilon(27158.00153490388, worksheet.outputs_physical_implications_u321, 0.002); end
  def test_outputs_physical_implications_v321; assert_in_epsilon(29592.80701714401, worksheet.outputs_physical_implications_v321, 0.002); end
  def test_outputs_physical_implications_w321; assert_in_epsilon(31835.024705690623, worksheet.outputs_physical_implications_w321, 0.002); end
  def test_outputs_physical_implications_x321; assert_in_epsilon(33829.78637846108, worksheet.outputs_physical_implications_x321, 0.002); end
  def test_outputs_physical_implications_y321; assert_in_epsilon(35664.110979352954, worksheet.outputs_physical_implications_y321, 0.002); end
  def test_outputs_physical_implications_c322; assert_equal("Rail", worksheet.outputs_physical_implications_c322); end
  def test_outputs_physical_implications_q322; assert_in_epsilon(81.4115591866842, worksheet.outputs_physical_implications_q322, 0.002); end
  def test_outputs_physical_implications_r322; assert_in_epsilon(90.40318246310463, worksheet.outputs_physical_implications_r322, 0.002); end
  def test_outputs_physical_implications_s322; assert_in_epsilon(101.57851090004172, worksheet.outputs_physical_implications_s322, 0.002); end
  def test_outputs_physical_implications_t322; assert_in_epsilon(110.32870282307984, worksheet.outputs_physical_implications_t322, 0.002); end
  def test_outputs_physical_implications_u322; assert_in_epsilon(118.40477595246918, worksheet.outputs_physical_implications_u322, 0.002); end
  def test_outputs_physical_implications_v322; assert_in_epsilon(125.45920661784348, worksheet.outputs_physical_implications_v322, 0.002); end
  def test_outputs_physical_implications_w322; assert_in_epsilon(131.950613652934, worksheet.outputs_physical_implications_w322, 0.002); end
  def test_outputs_physical_implications_x322; assert_in_epsilon(136.98580391338197, worksheet.outputs_physical_implications_x322, 0.002); end
  def test_outputs_physical_implications_y322; assert_in_epsilon(141.6982661192662, worksheet.outputs_physical_implications_y322, 0.002); end
  def test_outputs_physical_implications_c323; assert_equal("Plane", worksheet.outputs_physical_implications_c323); end
  def test_outputs_physical_implications_q323; assert_in_epsilon(24.99654391376603, worksheet.outputs_physical_implications_q323, 0.002); end
  def test_outputs_physical_implications_r323; assert_in_epsilon(28.469768089299162, worksheet.outputs_physical_implications_r323, 0.002); end
  def test_outputs_physical_implications_s323; assert_in_epsilon(31.13276925770144, worksheet.outputs_physical_implications_s323, 0.002); end
  def test_outputs_physical_implications_t323; assert_in_epsilon(33.972895598998804, worksheet.outputs_physical_implications_t323, 0.002); end
  def test_outputs_physical_implications_u323; assert_in_epsilon(37.02683025578633, worksheet.outputs_physical_implications_u323, 0.002); end
  def test_outputs_physical_implications_v323; assert_in_epsilon(40.344791360712755, worksheet.outputs_physical_implications_v323, 0.002); end
  def test_outputs_physical_implications_w323; assert_in_epsilon(43.97214694453961, worksheet.outputs_physical_implications_w323, 0.002); end
  def test_outputs_physical_implications_x323; assert_in_epsilon(47.949131687059406, worksheet.outputs_physical_implications_x323, 0.002); end
  def test_outputs_physical_implications_y323; assert_in_epsilon(52.32108886272373, worksheet.outputs_physical_implications_y323, 0.002); end
  def test_outputs_physical_implications_c324; assert_equal("Total", worksheet.outputs_physical_implications_c324); end
  def test_outputs_physical_implications_q324; assert_in_epsilon(1471745.152869366, worksheet.outputs_physical_implications_q324, 0.002); end
  def test_outputs_physical_implications_r324; assert_in_epsilon(1721871.9723150458, worksheet.outputs_physical_implications_r324, 0.002); end
  def test_outputs_physical_implications_s324; assert_in_epsilon(2026124.019705215, worksheet.outputs_physical_implications_s324, 0.002); end
  def test_outputs_physical_implications_t324; assert_in_epsilon(2310266.533330747, worksheet.outputs_physical_implications_t324, 0.002); end
  def test_outputs_physical_implications_u324; assert_in_epsilon(2602191.681087472, worksheet.outputs_physical_implications_u324, 0.002); end
  def test_outputs_physical_implications_v324; assert_in_epsilon(2885833.0200214083, worksheet.outputs_physical_implications_v324, 0.002); end
  def test_outputs_physical_implications_w324; assert_in_epsilon(3170577.0877349433, worksheet.outputs_physical_implications_w324, 0.002); end
  def test_outputs_physical_implications_x324; assert_in_epsilon(3441158.6638904684, worksheet.outputs_physical_implications_x324, 0.002); end
  def test_outputs_physical_implications_y324; assert_in_epsilon(3712233.2095883605, worksheet.outputs_physical_implications_y324, 0.002); end
  def test_outputs_physical_implications_q48; assert_in_delta(0.8432926393963501, worksheet.outputs_physical_implications_q48, 0.002); end
  def test_outputs_physical_implications_y48; assert_in_delta(0.9389292544041041, worksheet.outputs_physical_implications_y48, 0.002); end
  def test_outputs_physical_implications_q9; assert_in_epsilon(6966439712.0, worksheet.outputs_physical_implications_q9, 0.002); end
  def test_outputs_physical_implications_y9; assert_in_epsilon(9550945000.0, worksheet.outputs_physical_implications_y9, 0.002); end
  def test_outputs_physical_implications_c200; assert_equal("Description", worksheet.outputs_physical_implications_c200); end
  def test_outputs_physical_implications_q200; assert_in_epsilon(2011.0, worksheet.outputs_physical_implications_q200, 0.002); end
  def test_outputs_physical_implications_r200; assert_equal("2015", worksheet.outputs_physical_implications_r200); end
  def test_outputs_physical_implications_s200; assert_equal("2020", worksheet.outputs_physical_implications_s200); end
  def test_outputs_physical_implications_t200; assert_equal("2025", worksheet.outputs_physical_implications_t200); end
  def test_outputs_physical_implications_u200; assert_equal("2030", worksheet.outputs_physical_implications_u200); end
  def test_outputs_physical_implications_v200; assert_equal("2035", worksheet.outputs_physical_implications_v200); end
  def test_outputs_physical_implications_w200; assert_equal("2040", worksheet.outputs_physical_implications_w200); end
  def test_outputs_physical_implications_x200; assert_equal("2045", worksheet.outputs_physical_implications_x200); end
  def test_outputs_physical_implications_y200; assert_equal("2050", worksheet.outputs_physical_implications_y200); end
  def test_outputs_physical_implications_c201; assert_equal("Weighted index of oil, coal and iron products shipped by sea", worksheet.outputs_physical_implications_c201); end
  def test_outputs_physical_implications_q201; assert_in_epsilon(100.0, worksheet.outputs_physical_implications_q201, 0.002); end
  def test_outputs_physical_implications_r201; assert_in_epsilon(105.13787857320207, worksheet.outputs_physical_implications_r201, 0.002); end
  def test_outputs_physical_implications_s201; assert_in_epsilon(119.23440136646846, worksheet.outputs_physical_implications_s201, 0.002); end
  def test_outputs_physical_implications_t201; assert_in_epsilon(129.8801036819241, worksheet.outputs_physical_implications_t201, 0.002); end
  def test_outputs_physical_implications_u201; assert_in_epsilon(140.0464856552329, worksheet.outputs_physical_implications_u201, 0.002); end
  def test_outputs_physical_implications_v201; assert_in_epsilon(145.90609936876257, worksheet.outputs_physical_implications_v201, 0.002); end
  def test_outputs_physical_implications_w201; assert_in_epsilon(155.3869848487844, worksheet.outputs_physical_implications_w201, 0.002); end
  def test_outputs_physical_implications_x201; assert_in_epsilon(163.6829659483007, worksheet.outputs_physical_implications_x201, 0.002); end
  def test_outputs_physical_implications_y201; assert_in_epsilon(171.81857702168452, worksheet.outputs_physical_implications_y201, 0.002); end
  def test_outputs_physical_implications_q35; assert_in_epsilon(833660013.8618993, worksheet.outputs_physical_implications_q35, 0.002); end
  def test_outputs_physical_implications_y35; assert_in_epsilon(917809553.0459162, worksheet.outputs_physical_implications_y35, 0.002); end
  def test_outputs_physical_implications_q30; assert_in_epsilon(1452719862.6209612, worksheet.outputs_physical_implications_q30, 0.002); end
  def test_outputs_physical_implications_y30; assert_in_epsilon(2881187074.6996784, worksheet.outputs_physical_implications_y30, 0.002); end
  def test_outputs_physical_implications_q21; assert_in_delta(0.5213279389034929, worksheet.outputs_physical_implications_q21, 0.002); end
  def test_outputs_physical_implications_y21; assert_in_delta(0.663663288223238, worksheet.outputs_physical_implications_y21, 0.002); end
  def test_outputs_physical_implications_c157; assert_equal("Description", worksheet.outputs_physical_implications_c157); end
  def test_outputs_physical_implications_d157; assert_equal("Column1", worksheet.outputs_physical_implications_d157); end
  def test_outputs_physical_implications_e157; assert_equal("Column2", worksheet.outputs_physical_implications_e157); end
  def test_outputs_physical_implications_f157; assert_equal("Column3", worksheet.outputs_physical_implications_f157); end
  def test_outputs_physical_implications_g157; assert_equal("Column4", worksheet.outputs_physical_implications_g157); end
  def test_outputs_physical_implications_h157; assert_equal("Column5", worksheet.outputs_physical_implications_h157); end
  def test_outputs_physical_implications_i157; assert_equal("Column6", worksheet.outputs_physical_implications_i157); end
  def test_outputs_physical_implications_j157; assert_equal("Column7", worksheet.outputs_physical_implications_j157); end
  def test_outputs_physical_implications_k157; assert_equal("Column8", worksheet.outputs_physical_implications_k157); end
  def test_outputs_physical_implications_l157; assert_equal("Column9", worksheet.outputs_physical_implications_l157); end
  def test_outputs_physical_implications_m157; assert_equal("Column10", worksheet.outputs_physical_implications_m157); end
  def test_outputs_physical_implications_n157; assert_equal("Column11", worksheet.outputs_physical_implications_n157); end
  def test_outputs_physical_implications_o157; assert_equal("Column12", worksheet.outputs_physical_implications_o157); end
  def test_outputs_physical_implications_p157; assert_equal("Column13", worksheet.outputs_physical_implications_p157); end
  def test_outputs_physical_implications_q157; assert_equal("2011", worksheet.outputs_physical_implications_q157); end
  def test_outputs_physical_implications_r157; assert_equal("2015", worksheet.outputs_physical_implications_r157); end
  def test_outputs_physical_implications_s157; assert_equal("2020", worksheet.outputs_physical_implications_s157); end
  def test_outputs_physical_implications_t157; assert_equal("2025", worksheet.outputs_physical_implications_t157); end
  def test_outputs_physical_implications_u157; assert_equal("2030", worksheet.outputs_physical_implications_u157); end
  def test_outputs_physical_implications_v157; assert_equal("2035", worksheet.outputs_physical_implications_v157); end
  def test_outputs_physical_implications_w157; assert_equal("2040", worksheet.outputs_physical_implications_w157); end
  def test_outputs_physical_implications_x157; assert_equal("2045", worksheet.outputs_physical_implications_x157); end
  def test_outputs_physical_implications_y157; assert_equal("2050", worksheet.outputs_physical_implications_y157); end
  def test_outputs_physical_implications_c158; assert_equal("Iron and steel", worksheet.outputs_physical_implications_c158); end
  def test_outputs_physical_implications_e158; assert_equal("Steel.Oxygen", worksheet.outputs_physical_implications_e158); end
  def test_outputs_physical_implications_f158; assert_equal("Steel.OxygenHisarna", worksheet.outputs_physical_implications_f158); end
  def test_outputs_physical_implications_g158; assert_equal("Steel.Electric", worksheet.outputs_physical_implications_g158); end
  def test_outputs_physical_implications_h158; assert_equal("Steel.ElectricDRI", worksheet.outputs_physical_implications_h158); end
  def test_outputs_physical_implications_q158; assert_in_epsilon(1.5183, worksheet.outputs_physical_implications_q158, 0.002); end
  def test_outputs_physical_implications_r158; assert_in_epsilon(1.6047947943323941, worksheet.outputs_physical_implications_r158, 0.002); end
  def test_outputs_physical_implications_s158; assert_in_epsilon(1.7583022510461364, worksheet.outputs_physical_implications_s158, 0.002); end
  def test_outputs_physical_implications_t158; assert_in_epsilon(1.8876153709079453, worksheet.outputs_physical_implications_t158, 0.002); end
  def test_outputs_physical_implications_u158; assert_in_epsilon(2.024032913557316, worksheet.outputs_physical_implications_u158, 0.002); end
  def test_outputs_physical_implications_v158; assert_in_epsilon(2.153489897868267, worksheet.outputs_physical_implications_v158, 0.002); end
  def test_outputs_physical_implications_w158; assert_in_epsilon(2.304598137954926, worksheet.outputs_physical_implications_w158, 0.002); end
  def test_outputs_physical_implications_x158; assert_in_epsilon(2.4650179048381156, worksheet.outputs_physical_implications_x158, 0.002); end
  def test_outputs_physical_implications_y158; assert_in_epsilon(2.6354114364313546, worksheet.outputs_physical_implications_y158, 0.002); end
  def test_outputs_physical_implications_c159; assert_equal("Aluminium", worksheet.outputs_physical_implications_c159); end
  def test_outputs_physical_implications_f159; assert_equal("Aluminium.Primary", worksheet.outputs_physical_implications_f159); end
  def test_outputs_physical_implications_g159; assert_equal("Aluminium.Secondary", worksheet.outputs_physical_implications_g159); end
  def test_outputs_physical_implications_q159; assert_in_delta(0.06769999999999998, worksheet.outputs_physical_implications_q159, 0.002); end
  def test_outputs_physical_implications_r159; assert_in_delta(0.07351994614719204, worksheet.outputs_physical_implications_r159, 0.002); end
  def test_outputs_physical_implications_s159; assert_in_delta(0.08302734051591514, worksheet.outputs_physical_implications_s159, 0.002); end
  def test_outputs_physical_implications_t159; assert_in_delta(0.0929340742862303, worksheet.outputs_physical_implications_t159, 0.002); end
  def test_outputs_physical_implications_u159; assert_in_delta(0.10336103815415032, worksheet.outputs_physical_implications_u159, 0.002); end
  def test_outputs_physical_implications_v159; assert_in_delta(0.11373149343533784, worksheet.outputs_physical_implications_v159, 0.002); end
  def test_outputs_physical_implications_w159; assert_in_delta(0.1254427351413859, worksheet.outputs_physical_implications_w159, 0.002); end
  def test_outputs_physical_implications_x159; assert_in_delta(0.1376874525535289, worksheet.outputs_physical_implications_x159, 0.002); end
  def test_outputs_physical_implications_y159; assert_in_delta(0.15162898925619653, worksheet.outputs_physical_implications_y159, 0.002); end
  def test_outputs_physical_implications_c160; assert_equal("Chemicals", worksheet.outputs_physical_implications_c160); end
  def test_outputs_physical_implications_e160; assert_equal("Chemicals & petrochemicals.HVC", worksheet.outputs_physical_implications_e160); end
  def test_outputs_physical_implications_f160; assert_equal("Chemicals & petrochemicals.Ammonia", worksheet.outputs_physical_implications_f160); end
  def test_outputs_physical_implications_g160; assert_equal("Chemicals & petrochemicals.Methanol", worksheet.outputs_physical_implications_g160); end
  def test_outputs_physical_implications_h160; assert_equal("Chemicals & petrochemicals.Others", worksheet.outputs_physical_implications_h160); end
  def test_outputs_physical_implications_q160; assert_in_delta(0.7504088224854855, worksheet.outputs_physical_implications_q160, 0.002); end
  def test_outputs_physical_implications_r160; assert_in_delta(0.7943551199896097, worksheet.outputs_physical_implications_r160, 0.002); end
  def test_outputs_physical_implications_s160; assert_in_delta(0.9058509527773093, worksheet.outputs_physical_implications_s160, 0.002); end
  def test_outputs_physical_implications_t160; assert_in_epsilon(1.0209784988776232, worksheet.outputs_physical_implications_t160, 0.002); end
  def test_outputs_physical_implications_u160; assert_in_epsilon(1.144919866068269, worksheet.outputs_physical_implications_u160, 0.002); end
  def test_outputs_physical_implications_v160; assert_in_epsilon(1.2738306459411926, worksheet.outputs_physical_implications_v160, 0.002); end
  def test_outputs_physical_implications_w160; assert_in_epsilon(1.4222343826772603, worksheet.outputs_physical_implications_w160, 0.002); end
  def test_outputs_physical_implications_x160; assert_in_epsilon(1.5778496009172949, worksheet.outputs_physical_implications_x160, 0.002); end
  def test_outputs_physical_implications_y160; assert_in_epsilon(1.7561437250251066, worksheet.outputs_physical_implications_y160, 0.002); end
  def test_outputs_physical_implications_c161; assert_equal("Pulp and paper", worksheet.outputs_physical_implications_c161); end
  def test_outputs_physical_implications_f161; assert_equal("Pulp & paper.Virgin", worksheet.outputs_physical_implications_f161); end
  def test_outputs_physical_implications_g161; assert_equal("Pulp & paper.Recycled", worksheet.outputs_physical_implications_g161); end
  def test_outputs_physical_implications_q161; assert_in_delta(0.6111514610000001, worksheet.outputs_physical_implications_q161, 0.002); end
  def test_outputs_physical_implications_r161; assert_in_delta(0.6537108684512274, worksheet.outputs_physical_implications_r161, 0.002); end
  def test_outputs_physical_implications_s161; assert_in_delta(0.7517159857797249, worksheet.outputs_physical_implications_s161, 0.002); end
  def test_outputs_physical_implications_t161; assert_in_delta(0.852169768774237, worksheet.outputs_physical_implications_t161, 0.002); end
  def test_outputs_physical_implications_u161; assert_in_delta(0.9609145554396777, worksheet.outputs_physical_implications_u161, 0.002); end
  def test_outputs_physical_implications_v161; assert_in_epsilon(1.0756445698288934, worksheet.outputs_physical_implications_v161, 0.002); end
  def test_outputs_physical_implications_w161; assert_in_epsilon(1.2073840328593146, worksheet.outputs_physical_implications_w161, 0.002); end
  def test_outputs_physical_implications_x161; assert_in_epsilon(1.3474702425328338, worksheet.outputs_physical_implications_x161, 0.002); end
  def test_outputs_physical_implications_y161; assert_in_epsilon(1.5091407312134655, worksheet.outputs_physical_implications_y161, 0.002); end
  def test_outputs_physical_implications_c162; assert_equal("Cement", worksheet.outputs_physical_implications_c162); end
  def test_outputs_physical_implications_e162; assert_equal("Cement", worksheet.outputs_physical_implications_e162); end
  def test_outputs_physical_implications_q162; assert_in_epsilon(3.6351730407050002, worksheet.outputs_physical_implications_q162, 0.002); end
  def test_outputs_physical_implications_r162; assert_in_epsilon(3.786722269591025, worksheet.outputs_physical_implications_r162, 0.002); end
  def test_outputs_physical_implications_s162; assert_in_epsilon(4.031534352121161, worksheet.outputs_physical_implications_s162, 0.002); end
  def test_outputs_physical_implications_t162; assert_in_epsilon(4.153065426795925, worksheet.outputs_physical_implications_t162, 0.002); end
  def test_outputs_physical_implications_u162; assert_in_epsilon(4.264294524186968, worksheet.outputs_physical_implications_u162, 0.002); end
  def test_outputs_physical_implications_v162; assert_in_epsilon(4.375899173106801, worksheet.outputs_physical_implications_v162, 0.002); end
  def test_outputs_physical_implications_w162; assert_in_epsilon(4.477037547933194, worksheet.outputs_physical_implications_w162, 0.002); end
  def test_outputs_physical_implications_x162; assert_in_epsilon(4.559544159559345, worksheet.outputs_physical_implications_x162, 0.002); end
  def test_outputs_physical_implications_y162; assert_in_epsilon(4.667801319473403, worksheet.outputs_physical_implications_y162, 0.002); end
  def test_outputs_physical_implications_c163; assert_equal("Timber", worksheet.outputs_physical_implications_c163); end
  def test_outputs_physical_implications_e163; assert_equal("Timber", worksheet.outputs_physical_implications_e163); end
  def test_outputs_physical_implications_q163; assert_in_delta(0.8091999999999999, worksheet.outputs_physical_implications_q163, 0.002); end
  def test_outputs_physical_implications_r163; assert_in_delta(0.8615667919614558, worksheet.outputs_physical_implications_r163, 0.002); end
  def test_outputs_physical_implications_s163; assert_in_delta(0.8877288386035564, worksheet.outputs_physical_implications_s163, 0.002); end
  def test_outputs_physical_implications_t163; assert_in_delta(0.9383864856536407, worksheet.outputs_physical_implications_t163, 0.002); end
  def test_outputs_physical_implications_u163; assert_in_delta(0.9884740439922085, worksheet.outputs_physical_implications_u163, 0.002); end
  def test_outputs_physical_implications_v163; assert_in_epsilon(1.0392913941600572, worksheet.outputs_physical_implications_v163, 0.002); end
  def test_outputs_physical_implications_w163; assert_in_epsilon(1.0905837674032912, worksheet.outputs_physical_implications_w163, 0.002); end
  def test_outputs_physical_implications_x163; assert_in_epsilon(1.1436403026957873, worksheet.outputs_physical_implications_x163, 0.002); end
  def test_outputs_physical_implications_y163; assert_in_epsilon(1.1956315714998795, worksheet.outputs_physical_implications_y163, 0.002); end
  def test_outputs_costs_c7; assert_equal("Sector", worksheet.outputs_costs_c7); end
  def test_outputs_costs_d7; assert_equal("Sector number", worksheet.outputs_costs_d7); end
  def test_outputs_costs_f7; assert_equal("Low", worksheet.outputs_costs_f7); end
  def test_outputs_costs_g7; assert_equal("Point", worksheet.outputs_costs_g7); end
  def test_outputs_costs_h7; assert_equal("High", worksheet.outputs_costs_h7); end
  def test_outputs_costs_c8; assert_equal("Transport", worksheet.outputs_costs_c8); end
  def test_outputs_costs_d8; assert_in_epsilon(10.0, worksheet.outputs_costs_d8, 0.002); end
  def test_outputs_costs_f8; assert_in_epsilon(21858.679432687553, worksheet.outputs_costs_f8, 0.002); end
  def test_outputs_costs_g8; assert_in_epsilon(31490.907994398858, worksheet.outputs_costs_g8, 0.002); end
  def test_outputs_costs_h8; assert_in_epsilon(54730.722144919746, worksheet.outputs_costs_h8, 0.002); end
  def test_outputs_costs_c9; assert_equal("Buildings", worksheet.outputs_costs_c9); end
  def test_outputs_costs_d9; assert_in_epsilon(20.0, worksheet.outputs_costs_d9, 0.002); end
  def test_outputs_costs_f9; assert_in_epsilon(10097.314946306491, worksheet.outputs_costs_f9, 0.002); end
  def test_outputs_costs_g9; assert_in_epsilon(12457.67225549941, worksheet.outputs_costs_g9, 0.002); end
  def test_outputs_costs_h9; assert_in_epsilon(14818.029564692339, worksheet.outputs_costs_h9, 0.002); end
  def test_outputs_costs_c10; assert_equal("Manufacturing", worksheet.outputs_costs_c10); end
  def test_outputs_costs_d10; assert_in_epsilon(30.0, worksheet.outputs_costs_d10, 0.002); end
  def test_outputs_costs_f10; assert_in_epsilon(12586.121687421572, worksheet.outputs_costs_f10, 0.002); end
  def test_outputs_costs_g10; assert_in_epsilon(15319.629725658655, worksheet.outputs_costs_g10, 0.002); end
  def test_outputs_costs_h10; assert_in_epsilon(18049.259261665047, worksheet.outputs_costs_h10, 0.002); end
  def test_outputs_costs_c11; assert_equal("Power", worksheet.outputs_costs_c11); end
  def test_outputs_costs_d11; assert_in_epsilon(40.0, worksheet.outputs_costs_d11, 0.002); end
  def test_outputs_costs_f11; assert_in_epsilon(3342.1800987748293, worksheet.outputs_costs_f11, 0.002); end
  def test_outputs_costs_g11; assert_in_epsilon(4791.292320225991, worksheet.outputs_costs_g11, 0.002); end
  def test_outputs_costs_h11; assert_in_epsilon(6083.877110188461, worksheet.outputs_costs_h11, 0.002); end
  def test_outputs_costs_c12; assert_equal("Total capital and operating costs", worksheet.outputs_costs_c12); end
  def test_outputs_costs_f12; assert_in_epsilon(47884.29616519045, worksheet.outputs_costs_f12, 0.002); end
  def test_outputs_costs_g12; assert_in_epsilon(64059.5022957829, worksheet.outputs_costs_g12, 0.002); end
  def test_outputs_costs_h12; assert_in_epsilon(93681.88808146561, worksheet.outputs_costs_h12, 0.002); end
  def test_outputs_costs_c838; assert_equal("Category", worksheet.outputs_costs_c838); end
  def test_outputs_costs_j838; assert_equal("2011", worksheet.outputs_costs_j838); end
  def test_outputs_costs_k838; assert_equal("2015", worksheet.outputs_costs_k838); end
  def test_outputs_costs_l838; assert_equal("2020", worksheet.outputs_costs_l838); end
  def test_outputs_costs_m838; assert_equal("2025", worksheet.outputs_costs_m838); end
  def test_outputs_costs_n838; assert_equal("2030", worksheet.outputs_costs_n838); end
  def test_outputs_costs_o838; assert_equal("2035", worksheet.outputs_costs_o838); end
  def test_outputs_costs_p838; assert_equal("2040", worksheet.outputs_costs_p838); end
  def test_outputs_costs_q838; assert_equal("2045", worksheet.outputs_costs_q838); end
  def test_outputs_costs_r838; assert_equal("2050", worksheet.outputs_costs_r838); end
  def test_outputs_costs_c839; assert_equal("Global GDP ", worksheet.outputs_costs_c839); end
  def test_outputs_costs_j839; assert_in_epsilon(100.0, worksheet.outputs_costs_j839, 0.002); end
  def test_outputs_costs_k839; assert_in_epsilon(113.68978797009366, worksheet.outputs_costs_k839, 0.002); end
  def test_outputs_costs_l839; assert_in_epsilon(136.0264497041611, worksheet.outputs_costs_l839, 0.002); end
  def test_outputs_costs_m839; assert_in_epsilon(159.60336208454257, worksheet.outputs_costs_m839, 0.002); end
  def test_outputs_costs_n839; assert_in_epsilon(185.494998695573, worksheet.outputs_costs_n839, 0.002); end
  def test_outputs_costs_o839; assert_in_epsilon(213.78734093191275, worksheet.outputs_costs_o839, 0.002); end
  def test_outputs_costs_p839; assert_in_epsilon(243.75824201543904, worksheet.outputs_costs_p839, 0.002); end
  def test_outputs_costs_q839; assert_in_epsilon(273.93872026972474, worksheet.outputs_costs_q839, 0.002); end
  def test_outputs_costs_r839; assert_in_epsilon(304.3979665327325, worksheet.outputs_costs_r839, 0.002); end
  def test_outputs_costs_j719; assert_equal("2011", worksheet.outputs_costs_j719); end
  def test_outputs_costs_k719; assert_equal("2015", worksheet.outputs_costs_k719); end
  def test_outputs_costs_l719; assert_equal("2020", worksheet.outputs_costs_l719); end
  def test_outputs_costs_m719; assert_equal("2025", worksheet.outputs_costs_m719); end
  def test_outputs_costs_n719; assert_equal("2030", worksheet.outputs_costs_n719); end
  def test_outputs_costs_o719; assert_equal("2035", worksheet.outputs_costs_o719); end
  def test_outputs_costs_p719; assert_equal("2040", worksheet.outputs_costs_p719); end
  def test_outputs_costs_q719; assert_equal("2045", worksheet.outputs_costs_q719); end
  def test_outputs_costs_r719; assert_equal("2050", worksheet.outputs_costs_r719); end
  def test_outputs_costs_t719; assert_equal("Cumulative", worksheet.outputs_costs_t719); end
  def test_outputs_costs_c720; assert_equal("Capital costs (including opportunity costs)", worksheet.outputs_costs_c720); end
  def test_outputs_costs_j720; assert_in_epsilon(20962.42821391349, worksheet.outputs_costs_j720, 0.002); end
  def test_outputs_costs_k720; assert_in_epsilon(28678.55971338111, worksheet.outputs_costs_k720, 0.002); end
  def test_outputs_costs_l720; assert_in_epsilon(37188.0612026712, worksheet.outputs_costs_l720, 0.002); end
  def test_outputs_costs_m720; assert_in_epsilon(45070.774072314474, worksheet.outputs_costs_m720, 0.002); end
  def test_outputs_costs_n720; assert_in_epsilon(51553.50979796171, worksheet.outputs_costs_n720, 0.002); end
  def test_outputs_costs_o720; assert_in_epsilon(58262.313504193575, worksheet.outputs_costs_o720, 0.002); end
  def test_outputs_costs_p720; assert_in_epsilon(66389.95813102246, worksheet.outputs_costs_p720, 0.002); end
  def test_outputs_costs_q720; assert_in_epsilon(73143.76927276568, worksheet.outputs_costs_q720, 0.002); end
  def test_outputs_costs_r720; assert_in_epsilon(82023.30799165956, worksheet.outputs_costs_r720, 0.002); end
  def test_outputs_costs_t720; assert_in_epsilon(2007514.954899494, worksheet.outputs_costs_t720, 0.002); end
  def test_outputs_costs_c721; assert_equal("Operating costs", worksheet.outputs_costs_c721); end
  def test_outputs_costs_j721; assert_in_epsilon(5036.692233448178, worksheet.outputs_costs_j721, 0.002); end
  def test_outputs_costs_k721; assert_in_epsilon(5664.92483754843, worksheet.outputs_costs_k721, 0.002); end
  def test_outputs_costs_l721; assert_in_epsilon(6546.1949201947455, worksheet.outputs_costs_l721, 0.002); end
  def test_outputs_costs_m721; assert_in_epsilon(7354.615671292896, worksheet.outputs_costs_m721, 0.002); end
  def test_outputs_costs_n721; assert_in_epsilon(8216.075027209085, worksheet.outputs_costs_n721, 0.002); end
  def test_outputs_costs_o721; assert_in_epsilon(8992.529021550648, worksheet.outputs_costs_o721, 0.002); end
  def test_outputs_costs_p721; assert_in_epsilon(9822.83662357941, worksheet.outputs_costs_p721, 0.002); end
  def test_outputs_costs_q721; assert_in_epsilon(10680.027400118584, worksheet.outputs_costs_q721, 0.002); end
  def test_outputs_costs_r721; assert_in_epsilon(11658.580089806072, worksheet.outputs_costs_r721, 0.002); end
  def test_outputs_costs_t721; assert_in_epsilon(320547.3952405749, worksheet.outputs_costs_t721, 0.002); end
  def test_outputs_costs_c722; assert_equal("Fuel costs", worksheet.outputs_costs_c722); end
  def test_outputs_costs_j722; assert_in_epsilon(2337.6946507212333, worksheet.outputs_costs_j722, 0.002); end
  def test_outputs_costs_k722; assert_in_epsilon(2651.551596088541, worksheet.outputs_costs_k722, 0.002); end
  def test_outputs_costs_l722; assert_in_epsilon(3291.230998847489, worksheet.outputs_costs_l722, 0.002); end
  def test_outputs_costs_m722; assert_in_epsilon(3916.0748898184393, worksheet.outputs_costs_m722, 0.002); end
  def test_outputs_costs_n722; assert_in_epsilon(4577.932113651115, worksheet.outputs_costs_n722, 0.002); end
  def test_outputs_costs_o722; assert_in_epsilon(5166.466137633577, worksheet.outputs_costs_o722, 0.002); end
  def test_outputs_costs_p722; assert_in_epsilon(5888.792526094311, worksheet.outputs_costs_p722, 0.002); end
  def test_outputs_costs_q722; assert_in_epsilon(6633.699034519592, worksheet.outputs_costs_q722, 0.002); end
  def test_outputs_costs_r722; assert_in_epsilon(7418.860159706548, worksheet.outputs_costs_r722, 0.002); end
  def test_outputs_costs_t722; assert_in_epsilon(181489.97579735037, worksheet.outputs_costs_t722, 0.002); end
  def test_outputs_costs_c723; assert_equal("Total", worksheet.outputs_costs_c723); end
  def test_outputs_costs_j723; assert_in_epsilon(28336.8150980829, worksheet.outputs_costs_j723, 0.002); end
  def test_outputs_costs_k723; assert_in_epsilon(36995.03614701808, worksheet.outputs_costs_k723, 0.002); end
  def test_outputs_costs_l723; assert_in_epsilon(47025.48712171343, worksheet.outputs_costs_l723, 0.002); end
  def test_outputs_costs_m723; assert_in_epsilon(56341.46463342581, worksheet.outputs_costs_m723, 0.002); end
  def test_outputs_costs_n723; assert_in_epsilon(64347.51693882191, worksheet.outputs_costs_n723, 0.002); end
  def test_outputs_costs_o723; assert_in_epsilon(72421.3086633778, worksheet.outputs_costs_o723, 0.002); end
  def test_outputs_costs_p723; assert_in_epsilon(82101.58728069619, worksheet.outputs_costs_p723, 0.002); end
  def test_outputs_costs_q723; assert_in_epsilon(90457.49570740387, worksheet.outputs_costs_q723, 0.002); end
  def test_outputs_costs_r723; assert_in_epsilon(101100.74824117217, worksheet.outputs_costs_r723, 0.002); end
  def test_outputs_costs_t723; assert_in_epsilon(2509552.325937419, worksheet.outputs_costs_t723, 0.002); end
  def test_outputs_costs_j741; assert_equal("2011", worksheet.outputs_costs_j741); end
  def test_outputs_costs_k741; assert_equal("2015", worksheet.outputs_costs_k741); end
  def test_outputs_costs_l741; assert_equal("2020", worksheet.outputs_costs_l741); end
  def test_outputs_costs_m741; assert_equal("2025", worksheet.outputs_costs_m741); end
  def test_outputs_costs_n741; assert_equal("2030", worksheet.outputs_costs_n741); end
  def test_outputs_costs_o741; assert_equal("2035", worksheet.outputs_costs_o741); end
  def test_outputs_costs_p741; assert_equal("2040", worksheet.outputs_costs_p741); end
  def test_outputs_costs_q741; assert_equal("2045", worksheet.outputs_costs_q741); end
  def test_outputs_costs_r741; assert_equal("2050", worksheet.outputs_costs_r741); end
  def test_outputs_costs_c742; assert_equal("Capital costs (including opportunity costs)", worksheet.outputs_costs_c742); end
  def test_outputs_costs_j742; assert_in_epsilon(20962.42821391349, worksheet.outputs_costs_j742, 0.002); end
  def test_outputs_costs_k742; assert_in_epsilon(26413.13664257453, worksheet.outputs_costs_k742, 0.002); end
  def test_outputs_costs_l742; assert_in_epsilon(31215.580334210783, worksheet.outputs_costs_l742, 0.002); end
  def test_outputs_costs_m742; assert_in_epsilon(34725.312917874064, worksheet.outputs_costs_m742, 0.002); end
  def test_outputs_costs_n742; assert_in_epsilon(36117.20222750344, worksheet.outputs_costs_n742, 0.002); end
  def test_outputs_costs_o742; assert_in_epsilon(37364.043449756835, worksheet.outputs_costs_o742, 0.002); end
  def test_outputs_costs_p742; assert_in_epsilon(39235.908550301865, worksheet.outputs_costs_p742, 0.002); end
  def test_outputs_costs_q742; assert_in_epsilon(39215.001405867544, worksheet.outputs_costs_q742, 0.002); end
  def test_outputs_costs_r742; assert_in_epsilon(40364.02981761945, worksheet.outputs_costs_r742, 0.002); end
  def test_outputs_costs_t742; assert_in_epsilon(1324321.4554250287, worksheet.outputs_costs_t742, 0.002); end
  def test_outputs_costs_c743; assert_equal("Operating costs", worksheet.outputs_costs_c743); end
  def test_outputs_costs_j743; assert_in_epsilon(5036.692233448178, worksheet.outputs_costs_j743, 0.002); end
  def test_outputs_costs_k743; assert_in_epsilon(5427.877657348406, worksheet.outputs_costs_k743, 0.002); end
  def test_outputs_costs_l743; assert_in_epsilon(5943.742262613777, worksheet.outputs_costs_l743, 0.002); end
  def test_outputs_costs_m743; assert_in_epsilon(6326.49087310523, worksheet.outputs_costs_m743, 0.002); end
  def test_outputs_costs_n743; assert_in_epsilon(6690.201726677019, worksheet.outputs_costs_n743, 0.002); end
  def test_outputs_costs_o743; assert_in_epsilon(6927.876342500318, worksheet.outputs_costs_o743, 0.002); end
  def test_outputs_costs_p743; assert_in_epsilon(7149.922807269201, worksheet.outputs_costs_p743, 0.002); end
  def test_outputs_costs_q743; assert_in_epsilon(7328.428848699464, worksheet.outputs_costs_q743, 0.002); end
  def test_outputs_costs_r743; assert_in_epsilon(7520.266347571001, worksheet.outputs_costs_r743, 0.002); end
  def test_outputs_costs_t743; assert_in_epsilon(252856.49609667456, worksheet.outputs_costs_t743, 0.002); end
  def test_outputs_costs_c744; assert_equal("Fuel costs", worksheet.outputs_costs_c744); end
  def test_outputs_costs_j744; assert_in_epsilon(2337.6946507212333, worksheet.outputs_costs_j744, 0.002); end
  def test_outputs_costs_k744; assert_in_epsilon(2323.1548818383576, worksheet.outputs_costs_k744, 0.002); end
  def test_outputs_costs_l744; assert_in_epsilon(2450.4851429833184, worksheet.outputs_costs_l744, 0.002); end
  def test_outputs_costs_m744; assert_in_epsilon(2492.117320489332, worksheet.outputs_costs_m744, 0.002); end
  def test_outputs_costs_n744; assert_in_epsilon(2500.0085327538086, worksheet.outputs_costs_n744, 0.002); end
  def test_outputs_costs_o744; assert_in_epsilon(2437.4215129167005, worksheet.outputs_costs_o744, 0.002); end
  def test_outputs_costs_p744; assert_in_epsilon(2387.6270611575974, worksheet.outputs_costs_p744, 0.002); end
  def test_outputs_costs_q744; assert_in_epsilon(2307.182160829806, worksheet.outputs_costs_q744, 0.002); end
  def test_outputs_costs_r744; assert_in_epsilon(2219.2088020694796, worksheet.outputs_costs_r744, 0.002); end
  def test_outputs_costs_t744; assert_in_epsilon(92971.23361829174, worksheet.outputs_costs_t744, 0.002); end
  def test_outputs_costs_c745; assert_equal("Total", worksheet.outputs_costs_c745); end
  def test_outputs_costs_j745; assert_in_epsilon(28336.8150980829, worksheet.outputs_costs_j745, 0.002); end
  def test_outputs_costs_k745; assert_in_epsilon(34164.169181761295, worksheet.outputs_costs_k745, 0.002); end
  def test_outputs_costs_l745; assert_in_epsilon(39609.80773980788, worksheet.outputs_costs_l745, 0.002); end
  def test_outputs_costs_m745; assert_in_epsilon(43543.921111468626, worksheet.outputs_costs_m745, 0.002); end
  def test_outputs_costs_n745; assert_in_epsilon(45307.41248693427, worksheet.outputs_costs_n745, 0.002); end
  def test_outputs_costs_o745; assert_in_epsilon(46729.34130517385, worksheet.outputs_costs_o745, 0.002); end
  def test_outputs_costs_p745; assert_in_epsilon(48773.45841872866, worksheet.outputs_costs_p745, 0.002); end
  def test_outputs_costs_q745; assert_in_epsilon(48850.61241539681, worksheet.outputs_costs_q745, 0.002); end
  def test_outputs_costs_r745; assert_in_epsilon(50103.50496725993, worksheet.outputs_costs_r745, 0.002); end
  def test_outputs_costs_t745; assert_in_epsilon(1670149.185139995, worksheet.outputs_costs_t745, 0.002); end
  def test_outputs_costs_j730; assert_equal("2011", worksheet.outputs_costs_j730); end
  def test_outputs_costs_k730; assert_equal("2015", worksheet.outputs_costs_k730); end
  def test_outputs_costs_l730; assert_equal("2020", worksheet.outputs_costs_l730); end
  def test_outputs_costs_m730; assert_equal("2025", worksheet.outputs_costs_m730); end
  def test_outputs_costs_n730; assert_equal("2030", worksheet.outputs_costs_n730); end
  def test_outputs_costs_o730; assert_equal("2035", worksheet.outputs_costs_o730); end
  def test_outputs_costs_p730; assert_equal("2040", worksheet.outputs_costs_p730); end
  def test_outputs_costs_q730; assert_equal("2045", worksheet.outputs_costs_q730); end
  def test_outputs_costs_r730; assert_equal("2050", worksheet.outputs_costs_r730); end
  def test_outputs_costs_c731; assert_equal("Capital costs (including opportunity costs)", worksheet.outputs_costs_c731); end
  def test_outputs_costs_j731; assert_in_epsilon(20962.42821391349, worksheet.outputs_costs_j731, 0.002); end
  def test_outputs_costs_k731; assert_in_epsilon(27150.903810652464, worksheet.outputs_costs_k731, 0.002); end
  def test_outputs_costs_l731; assert_in_epsilon(33100.757376633395, worksheet.outputs_costs_l731, 0.002); end
  def test_outputs_costs_m731; assert_in_epsilon(37999.28420335403, worksheet.outputs_costs_m731, 0.002); end
  def test_outputs_costs_n731; assert_in_epsilon(41080.31204386459, worksheet.outputs_costs_n731, 0.002); end
  def test_outputs_costs_o731; assert_in_epsilon(44134.44801803361, worksheet.outputs_costs_o731, 0.002); end
  def test_outputs_costs_p731; assert_in_epsilon(48140.45914752578, worksheet.outputs_costs_p731, 0.002); end
  def test_outputs_costs_q731; assert_in_epsilon(50485.63517044551, worksheet.outputs_costs_q731, 0.002); end
  def test_outputs_costs_r731; assert_in_epsilon(54428.66997262422, worksheet.outputs_costs_r731, 0.002); end
  def test_outputs_costs_t731; assert_in_epsilon(1549092.5578138707, worksheet.outputs_costs_t731, 0.002); end
  def test_outputs_costs_c732; assert_equal("Operating costs", worksheet.outputs_costs_c732); end
  def test_outputs_costs_j732; assert_in_epsilon(5036.692233448178, worksheet.outputs_costs_j732, 0.002); end
  def test_outputs_costs_k732; assert_in_epsilon(5550.087001000108, worksheet.outputs_costs_k732, 0.002); end
  def test_outputs_costs_l732; assert_in_epsilon(6253.501816555653, worksheet.outputs_costs_l732, 0.002); end
  def test_outputs_costs_m732; assert_in_epsilon(6854.035476552195, worksheet.outputs_costs_m732, 0.002); end
  def test_outputs_costs_n732; assert_in_epsilon(7473.085730985785, worksheet.outputs_costs_n732, 0.002); end
  def test_outputs_costs_o732; assert_in_epsilon(7984.183244454912, worksheet.outputs_costs_o732, 0.002); end
  def test_outputs_costs_p732; assert_in_epsilon(8516.045844385728, worksheet.outputs_costs_p732, 0.002); end
  def test_outputs_costs_q732; assert_in_epsilon(9039.287629770753, worksheet.outputs_costs_q732, 0.002); end
  def test_outputs_costs_r732; assert_in_epsilon(9630.83232315869, worksheet.outputs_costs_r732, 0.002); end
  def test_outputs_costs_t732; assert_in_epsilon(287463.58896801865, worksheet.outputs_costs_t732, 0.002); end
  def test_outputs_costs_c733; assert_equal("Fuel costs", worksheet.outputs_costs_c733); end
  def test_outputs_costs_j733; assert_in_epsilon(2337.6946507212333, worksheet.outputs_costs_j733, 0.002); end
  def test_outputs_costs_k733; assert_in_epsilon(2462.2690218182597, worksheet.outputs_costs_k733, 0.002); end
  def test_outputs_costs_l733; assert_in_epsilon(2806.0761375648567, worksheet.outputs_costs_l733, 0.002); end
  def test_outputs_costs_m733; assert_in_epsilon(3095.0786765680914, worksheet.outputs_costs_m733, 0.002); end
  def test_outputs_costs_n733; assert_in_epsilon(3381.6916909731, worksheet.outputs_costs_n733, 0.002); end
  def test_outputs_costs_o733; assert_in_epsilon(3598.1274801036457, worksheet.outputs_costs_o733, 0.002); end
  def test_outputs_costs_p733; assert_in_epsilon(3876.676386055133, worksheet.outputs_costs_p733, 0.002); end
  def test_outputs_costs_q733; assert_in_epsilon(4141.62996009787, worksheet.outputs_costs_q733, 0.002); end
  def test_outputs_costs_r733; assert_in_epsilon(4424.849861308009, worksheet.outputs_costs_r733, 0.002); end
  def test_outputs_costs_t733; assert_in_epsilon(130537.74008257753, worksheet.outputs_costs_t733, 0.002); end
  def test_outputs_costs_c734; assert_equal("Total", worksheet.outputs_costs_c734); end
  def test_outputs_costs_j734; assert_in_epsilon(28336.8150980829, worksheet.outputs_costs_j734, 0.002); end
  def test_outputs_costs_k734; assert_in_epsilon(35163.25983347083, worksheet.outputs_costs_k734, 0.002); end
  def test_outputs_costs_l734; assert_in_epsilon(42160.33533075391, worksheet.outputs_costs_l734, 0.002); end
  def test_outputs_costs_m734; assert_in_epsilon(47948.39835647432, worksheet.outputs_costs_m734, 0.002); end
  def test_outputs_costs_n734; assert_in_epsilon(51935.089465823476, worksheet.outputs_costs_n734, 0.002); end
  def test_outputs_costs_o734; assert_in_epsilon(55716.758742592174, worksheet.outputs_costs_o734, 0.002); end
  def test_outputs_costs_p734; assert_in_epsilon(60533.18137796664, worksheet.outputs_costs_p734, 0.002); end
  def test_outputs_costs_q734; assert_in_epsilon(63666.55276031413, worksheet.outputs_costs_q734, 0.002); end
  def test_outputs_costs_r734; assert_in_epsilon(68484.35215709092, worksheet.outputs_costs_r734, 0.002); end
  def test_outputs_costs_t734; assert_in_epsilon(1967093.886864467, worksheet.outputs_costs_t734, 0.002); end
  def test_outputs_costs_c848; assert_equal("Category", worksheet.outputs_costs_c848); end
  def test_outputs_costs_j848; assert_equal("2011", worksheet.outputs_costs_j848); end
  def test_outputs_costs_k848; assert_equal("2015", worksheet.outputs_costs_k848); end
  def test_outputs_costs_l848; assert_equal("2020", worksheet.outputs_costs_l848); end
  def test_outputs_costs_m848; assert_equal("2025", worksheet.outputs_costs_m848); end
  def test_outputs_costs_n848; assert_equal("2030", worksheet.outputs_costs_n848); end
  def test_outputs_costs_o848; assert_equal("2035", worksheet.outputs_costs_o848); end
  def test_outputs_costs_p848; assert_equal("2040", worksheet.outputs_costs_p848); end
  def test_outputs_costs_q848; assert_equal("2045", worksheet.outputs_costs_q848); end
  def test_outputs_costs_r848; assert_equal("2050", worksheet.outputs_costs_r848); end
  def test_outputs_costs_c849; assert_equal("Capital costs (including opportunity costs)", worksheet.outputs_costs_c849); end
  def test_outputs_costs_j849; assert_in_delta(0.7397595016008585, worksheet.outputs_costs_j849, 0.002); end
  def test_outputs_costs_k849; assert_in_delta(0.7721384177472747, worksheet.outputs_costs_k849, 0.002); end
  def test_outputs_costs_l849; assert_in_delta(0.7851160840385444, worksheet.outputs_costs_l849, 0.002); end
  def test_outputs_costs_m849; assert_in_delta(0.7925037228740531, worksheet.outputs_costs_m849, 0.002); end
  def test_outputs_costs_n849; assert_in_delta(0.7909933816692084, worksheet.outputs_costs_n849, 0.002); end
  def test_outputs_costs_o849; assert_in_delta(0.7921215988520063, worksheet.outputs_costs_o849, 0.002); end
  def test_outputs_costs_p849; assert_in_delta(0.7952738985737223, worksheet.outputs_costs_p849, 0.002); end
  def test_outputs_costs_q849; assert_in_delta(0.7929695103881169, worksheet.outputs_costs_q849, 0.002); end
  def test_outputs_costs_r849; assert_in_delta(0.7947606753696748, worksheet.outputs_costs_r849, 0.002); end
  def test_outputs_costs_c850; assert_equal("Operating costs", worksheet.outputs_costs_c850); end
  def test_outputs_costs_j850; assert_in_delta(0.17774376605185, worksheet.outputs_costs_j850, 0.002); end
  def test_outputs_costs_k850; assert_in_delta(0.15783766997953785, worksheet.outputs_costs_k850, 0.002); end
  def test_outputs_costs_l850; assert_in_delta(0.1483266621931735, worksheet.outputs_costs_l850, 0.002); end
  def test_outputs_costs_m850; assert_in_delta(0.14294607768951093, worksheet.outputs_costs_m850, 0.002); end
  def test_outputs_costs_n850; assert_in_delta(0.1438928055742263, worksheet.outputs_costs_n850, 0.002); end
  def test_outputs_costs_o850; assert_in_delta(0.14329949237250722, worksheet.outputs_costs_o850, 0.002); end
  def test_outputs_costs_p850; assert_in_delta(0.1406839298799099, worksheet.outputs_costs_p850, 0.002); end
  def test_outputs_costs_q850; assert_in_delta(0.14197859374923308, worksheet.outputs_costs_q850, 0.002); end
  def test_outputs_costs_r850; assert_in_delta(0.14062821680881601, worksheet.outputs_costs_r850, 0.002); end
  def test_outputs_costs_c851; assert_equal("Fuel costs", worksheet.outputs_costs_c851); end
  def test_outputs_costs_j851; assert_in_delta(0.08249673234729148, worksheet.outputs_costs_j851, 0.002); end
  def test_outputs_costs_k851; assert_in_delta(0.07002391227318752, worksheet.outputs_costs_k851, 0.002); end
  def test_outputs_costs_l851; assert_in_delta(0.06655725376828209, worksheet.outputs_costs_l851, 0.002); end
  def test_outputs_costs_m851; assert_in_delta(0.06455019943643588, worksheet.outputs_costs_m851, 0.002); end
  def test_outputs_costs_n851; assert_in_delta(0.06511381275656536, worksheet.outputs_costs_n851, 0.002); end
  def test_outputs_costs_o851; assert_in_delta(0.06457890877548643, worksheet.outputs_costs_o851, 0.002); end
  def test_outputs_costs_p851; assert_in_delta(0.06404217154636775, worksheet.outputs_costs_p851, 0.002); end
  def test_outputs_costs_q851; assert_in_delta(0.06505189586265005, worksheet.outputs_costs_q851, 0.002); end
  def test_outputs_costs_r851; assert_in_delta(0.06461110782150922, worksheet.outputs_costs_r851, 0.002); end
  def test_outputs_costs_b794; assert_equal("Transport indexed (capex + opex, non-amortised)", worksheet.outputs_costs_b794); end
  def test_outputs_costs_e794; assert_equal("Sector code:", worksheet.outputs_costs_e794); end
  def test_outputs_costs_f794; assert_in_epsilon(10.0, worksheet.outputs_costs_f794, 0.002); end
  def test_outputs_costs_i794; assert_equal("NON AMORTISED", worksheet.outputs_costs_i794); end
  def test_outputs_costs_c796; assert_equal("Category", worksheet.outputs_costs_c796); end
  def test_outputs_costs_j796; assert_equal("2011", worksheet.outputs_costs_j796); end
  def test_outputs_costs_k796; assert_equal("2015", worksheet.outputs_costs_k796); end
  def test_outputs_costs_l796; assert_equal("2020", worksheet.outputs_costs_l796); end
  def test_outputs_costs_m796; assert_equal("2025", worksheet.outputs_costs_m796); end
  def test_outputs_costs_n796; assert_equal("2030", worksheet.outputs_costs_n796); end
  def test_outputs_costs_o796; assert_equal("2035", worksheet.outputs_costs_o796); end
  def test_outputs_costs_p796; assert_equal("2040", worksheet.outputs_costs_p796); end
  def test_outputs_costs_q796; assert_equal("2045", worksheet.outputs_costs_q796); end
  def test_outputs_costs_r796; assert_equal("2050", worksheet.outputs_costs_r796); end
  def test_outputs_costs_c797; assert_equal("High", worksheet.outputs_costs_c797); end
  def test_outputs_costs_j797; assert_in_epsilon(100.0, worksheet.outputs_costs_j797, 0.002); end
  def test_outputs_costs_k797; assert_in_epsilon(119.58098470959024, worksheet.outputs_costs_k797, 0.002); end
  def test_outputs_costs_l797; assert_in_epsilon(145.92127665002982, worksheet.outputs_costs_l797, 0.002); end
  def test_outputs_costs_m797; assert_in_epsilon(168.2174665603772, worksheet.outputs_costs_m797, 0.002); end
  def test_outputs_costs_n797; assert_in_epsilon(191.41000785371705, worksheet.outputs_costs_n797, 0.002); end
  def test_outputs_costs_o797; assert_in_epsilon(213.40969243519078, worksheet.outputs_costs_o797, 0.002); end
  def test_outputs_costs_p797; assert_in_epsilon(236.37137005691443, worksheet.outputs_costs_p797, 0.002); end
  def test_outputs_costs_q797; assert_in_epsilon(258.11607904907714, worksheet.outputs_costs_q797, 0.002); end
  def test_outputs_costs_r797; assert_in_epsilon(283.6472082779543, worksheet.outputs_costs_r797, 0.002); end
  def test_outputs_costs_c798; assert_equal("Point", worksheet.outputs_costs_c798); end
  def test_outputs_costs_j798; assert_in_epsilon(100.0, worksheet.outputs_costs_j798, 0.002); end
  def test_outputs_costs_k798; assert_in_epsilon(110.14081735874078, worksheet.outputs_costs_k798, 0.002); end
  def test_outputs_costs_l798; assert_in_epsilon(122.25684848052165, worksheet.outputs_costs_l798, 0.002); end
  def test_outputs_costs_m798; assert_in_epsilon(130.20242726551723, worksheet.outputs_costs_m798, 0.002); end
  def test_outputs_costs_n798; assert_in_epsilon(138.16906620563478, worksheet.outputs_costs_n798, 0.002); end
  def test_outputs_costs_o798; assert_in_epsilon(144.38262210323077, worksheet.outputs_costs_o798, 0.002); end
  def test_outputs_costs_p798; assert_in_epsilon(150.73942257025436, worksheet.outputs_costs_p798, 0.002); end
  def test_outputs_costs_q798; assert_in_epsilon(155.949324319174, worksheet.outputs_costs_q798, 0.002); end
  def test_outputs_costs_r798; assert_in_epsilon(162.62134819833696, worksheet.outputs_costs_r798, 0.002); end
  def test_outputs_costs_c799; assert_equal("Low", worksheet.outputs_costs_c799); end
  def test_outputs_costs_j799; assert_in_epsilon(100.0, worksheet.outputs_costs_j799, 0.002); end
  def test_outputs_costs_k799; assert_in_epsilon(106.44164843952957, worksheet.outputs_costs_k799, 0.002); end
  def test_outputs_costs_l799; assert_in_epsilon(112.96487306696119, worksheet.outputs_costs_l799, 0.002); end
  def test_outputs_costs_m799; assert_in_epsilon(114.98633559459448, worksheet.outputs_costs_m799, 0.002); end
  def test_outputs_costs_n799; assert_in_epsilon(116.42806130051812, worksheet.outputs_costs_n799, 0.002); end
  def test_outputs_costs_o799; assert_in_epsilon(115.79676725309969, worksheet.outputs_costs_o799, 0.002); end
  def test_outputs_costs_p799; assert_in_epsilon(114.7757287044359, worksheet.outputs_costs_p799, 0.002); end
  def test_outputs_costs_q799; assert_in_epsilon(112.43050241188548, worksheet.outputs_costs_q799, 0.002); end
  def test_outputs_costs_r799; assert_in_epsilon(110.54181546076887, worksheet.outputs_costs_r799, 0.002); end
  def test_outputs_costs_b804; assert_equal("Buildings indexed (capex + opex, non-amortised)", worksheet.outputs_costs_b804); end
  def test_outputs_costs_e804; assert_equal("Sector code:", worksheet.outputs_costs_e804); end
  def test_outputs_costs_f804; assert_in_epsilon(20.0, worksheet.outputs_costs_f804, 0.002); end
  def test_outputs_costs_i804; assert_equal("NON AMORTISED", worksheet.outputs_costs_i804); end
  def test_outputs_costs_c806; assert_equal("Category", worksheet.outputs_costs_c806); end
  def test_outputs_costs_j806; assert_equal("2011", worksheet.outputs_costs_j806); end
  def test_outputs_costs_k806; assert_equal("2015", worksheet.outputs_costs_k806); end
  def test_outputs_costs_l806; assert_equal("2020", worksheet.outputs_costs_l806); end
  def test_outputs_costs_m806; assert_equal("2025", worksheet.outputs_costs_m806); end
  def test_outputs_costs_n806; assert_equal("2030", worksheet.outputs_costs_n806); end
  def test_outputs_costs_o806; assert_equal("2035", worksheet.outputs_costs_o806); end
  def test_outputs_costs_p806; assert_equal("2040", worksheet.outputs_costs_p806); end
  def test_outputs_costs_q806; assert_equal("2045", worksheet.outputs_costs_q806); end
  def test_outputs_costs_r806; assert_equal("2050", worksheet.outputs_costs_r806); end
  def test_outputs_costs_c807; assert_equal("High", worksheet.outputs_costs_c807); end
  def test_outputs_costs_j807; assert_in_epsilon(100.0, worksheet.outputs_costs_j807, 0.002); end
  def test_outputs_costs_k807; assert_in_epsilon(109.77196552462235, worksheet.outputs_costs_k807, 0.002); end
  def test_outputs_costs_l807; assert_in_epsilon(123.50494342781258, worksheet.outputs_costs_l807, 0.002); end
  def test_outputs_costs_m807; assert_in_epsilon(140.6032204848029, worksheet.outputs_costs_m807, 0.002); end
  def test_outputs_costs_n807; assert_in_epsilon(158.77703709205656, worksheet.outputs_costs_n807, 0.002); end
  def test_outputs_costs_o807; assert_in_epsilon(177.50043518762655, worksheet.outputs_costs_o807, 0.002); end
  def test_outputs_costs_p807; assert_in_epsilon(198.9836338314489, worksheet.outputs_costs_p807, 0.002); end
  def test_outputs_costs_q807; assert_in_epsilon(221.37455604075691, worksheet.outputs_costs_q807, 0.002); end
  def test_outputs_costs_r807; assert_in_epsilon(246.9628802655891, worksheet.outputs_costs_r807, 0.002); end
  def test_outputs_costs_c808; assert_equal("Point", worksheet.outputs_costs_c808); end
  def test_outputs_costs_j808; assert_in_epsilon(100.0, worksheet.outputs_costs_j808, 0.002); end
  def test_outputs_costs_k808; assert_in_epsilon(107.61138568023154, worksheet.outputs_costs_k808, 0.002); end
  def test_outputs_costs_l808; assert_in_epsilon(118.16201534078903, worksheet.outputs_costs_l808, 0.002); end
  def test_outputs_costs_m808; assert_in_epsilon(131.3486083877032, worksheet.outputs_costs_m808, 0.002); end
  def test_outputs_costs_n808; assert_in_epsilon(144.88763800025265, worksheet.outputs_costs_n808, 0.002); end
  def test_outputs_costs_o808; assert_in_epsilon(158.2723437259267, worksheet.outputs_costs_o808, 0.002); end
  def test_outputs_costs_p808; assert_in_epsilon(173.42682563553487, worksheet.outputs_costs_p808, 0.002); end
  def test_outputs_costs_q808; assert_in_epsilon(188.63986857030037, worksheet.outputs_costs_q808, 0.002); end
  def test_outputs_costs_r808; assert_in_epsilon(205.8024002213243, worksheet.outputs_costs_r808, 0.002); end
  def test_outputs_costs_c809; assert_equal("Low", worksheet.outputs_costs_c809); end
  def test_outputs_costs_j809; assert_in_epsilon(100.0, worksheet.outputs_costs_j809, 0.002); end
  def test_outputs_costs_k809; assert_in_epsilon(105.4508058358407, worksheet.outputs_costs_k809, 0.002); end
  def test_outputs_costs_l809; assert_in_epsilon(112.81908725376555, worksheet.outputs_costs_l809, 0.002); end
  def test_outputs_costs_m809; assert_in_epsilon(122.09399629060358, worksheet.outputs_costs_m809, 0.002); end
  def test_outputs_costs_n809; assert_in_epsilon(130.99823890844874, worksheet.outputs_costs_n809, 0.002); end
  def test_outputs_costs_o809; assert_in_epsilon(139.04425226422688, worksheet.outputs_costs_o809, 0.002); end
  def test_outputs_costs_p809; assert_in_epsilon(147.87001743962088, worksheet.outputs_costs_p809, 0.002); end
  def test_outputs_costs_q809; assert_in_epsilon(155.90518109984387, worksheet.outputs_costs_q809, 0.002); end
  def test_outputs_costs_r809; assert_in_epsilon(164.64192017705943, worksheet.outputs_costs_r809, 0.002); end
  def test_outputs_costs_b814; assert_equal("Manufacturing indexed (capex + opex, non-amortised)", worksheet.outputs_costs_b814); end
  def test_outputs_costs_e814; assert_equal("Sector code:", worksheet.outputs_costs_e814); end
  def test_outputs_costs_f814; assert_in_epsilon(30.0, worksheet.outputs_costs_f814, 0.002); end
  def test_outputs_costs_i814; assert_equal("NON AMORTISED", worksheet.outputs_costs_i814); end
  def test_outputs_costs_c816; assert_equal("Category", worksheet.outputs_costs_c816); end
  def test_outputs_costs_j816; assert_equal("2011", worksheet.outputs_costs_j816); end
  def test_outputs_costs_k816; assert_in_epsilon(2015.0, worksheet.outputs_costs_k816, 0.002); end
  def test_outputs_costs_l816; assert_equal("2020", worksheet.outputs_costs_l816); end
  def test_outputs_costs_m816; assert_equal("2025", worksheet.outputs_costs_m816); end
  def test_outputs_costs_n816; assert_equal("2030", worksheet.outputs_costs_n816); end
  def test_outputs_costs_o816; assert_equal("2035", worksheet.outputs_costs_o816); end
  def test_outputs_costs_p816; assert_equal("2040", worksheet.outputs_costs_p816); end
  def test_outputs_costs_q816; assert_equal("2045", worksheet.outputs_costs_q816); end
  def test_outputs_costs_r816; assert_equal("2050", worksheet.outputs_costs_r816); end
  def test_outputs_costs_c817; assert_equal("High", worksheet.outputs_costs_c817); end
  def test_outputs_costs_j817; assert_in_epsilon(100.0, worksheet.outputs_costs_j817, 0.002); end
  def test_outputs_costs_k817; assert_in_epsilon(107.54629407327994, worksheet.outputs_costs_k817, 0.002); end
  def test_outputs_costs_l817; assert_in_epsilon(119.7917264433906, worksheet.outputs_costs_l817, 0.002); end
  def test_outputs_costs_m817; assert_in_epsilon(130.80403181310973, worksheet.outputs_costs_m817, 0.002); end
  def test_outputs_costs_n817; assert_in_epsilon(142.48604438880022, worksheet.outputs_costs_n817, 0.002); end
  def test_outputs_costs_o817; assert_in_epsilon(154.5610616113057, worksheet.outputs_costs_o817, 0.002); end
  def test_outputs_costs_p817; assert_in_epsilon(167.99440095029095, worksheet.outputs_costs_p817, 0.002); end
  def test_outputs_costs_q817; assert_in_epsilon(182.12437374714477, worksheet.outputs_costs_q817, 0.002); end
  def test_outputs_costs_r817; assert_in_epsilon(198.00206400692673, worksheet.outputs_costs_r817, 0.002); end
  def test_outputs_costs_c818; assert_equal("Point", worksheet.outputs_costs_c818); end
  def test_outputs_costs_j818; assert_in_epsilon(100.0, worksheet.outputs_costs_j818, 0.002); end
  def test_outputs_costs_k818; assert_in_epsilon(105.39343078636053, worksheet.outputs_costs_k818, 0.002); end
  def test_outputs_costs_l818; assert_in_epsilon(114.50250071250963, worksheet.outputs_costs_l818, 0.002); end
  def test_outputs_costs_m818; assert_in_epsilon(122.02119159283045, worksheet.outputs_costs_m818, 0.002); end
  def test_outputs_costs_n818; assert_in_epsilon(129.79764118935924, worksheet.outputs_costs_n818, 0.002); end
  def test_outputs_costs_o818; assert_in_epsilon(137.5676283232528, worksheet.outputs_costs_o818, 0.002); end
  def test_outputs_costs_p818; assert_in_epsilon(146.17199980188616, worksheet.outputs_costs_p818, 0.002); end
  def test_outputs_costs_q818; assert_in_epsilon(154.99282460208715, worksheet.outputs_costs_q818, 0.002); end
  def test_outputs_costs_r818; assert_in_epsilon(164.89120952455715, worksheet.outputs_costs_r818, 0.002); end
  def test_outputs_costs_c819; assert_equal("Low", worksheet.outputs_costs_c819); end
  def test_outputs_costs_j819; assert_in_epsilon(100.0, worksheet.outputs_costs_j819, 0.002); end
  def test_outputs_costs_k819; assert_in_epsilon(103.25965091056982, worksheet.outputs_costs_k819, 0.002); end
  def test_outputs_costs_l819; assert_in_epsilon(109.22897235629212, worksheet.outputs_costs_l819, 0.002); end
  def test_outputs_costs_m819; assert_in_epsilon(113.24639197941349, worksheet.outputs_costs_m819, 0.002); end
  def test_outputs_costs_n819; assert_in_epsilon(117.10898598946149, worksheet.outputs_costs_n819, 0.002); end
  def test_outputs_costs_o819; assert_in_epsilon(120.5646219088063, worksheet.outputs_costs_o819, 0.002); end
  def test_outputs_costs_p819; assert_in_epsilon(124.3295491073657, worksheet.outputs_costs_p819, 0.002); end
  def test_outputs_costs_q819; assert_in_epsilon(127.82946074568366, worksheet.outputs_costs_q819, 0.002); end
  def test_outputs_costs_r819; assert_in_epsilon(131.73547412676504, worksheet.outputs_costs_r819, 0.002); end
  def test_outputs_costs_b824; assert_equal("Power indexed (capex + opex, non-amortised)", worksheet.outputs_costs_b824); end
  def test_outputs_costs_e824; assert_equal("Sector code:", worksheet.outputs_costs_e824); end
  def test_outputs_costs_f824; assert_in_epsilon(40.0, worksheet.outputs_costs_f824, 0.002); end
  def test_outputs_costs_i824; assert_equal("NON AMORTISED", worksheet.outputs_costs_i824); end
  def test_outputs_costs_c826; assert_equal("Category", worksheet.outputs_costs_c826); end
  def test_outputs_costs_j826; assert_equal("2011", worksheet.outputs_costs_j826); end
  def test_outputs_costs_k826; assert_equal("2015", worksheet.outputs_costs_k826); end
  def test_outputs_costs_l826; assert_equal("2020", worksheet.outputs_costs_l826); end
  def test_outputs_costs_m826; assert_equal("2025", worksheet.outputs_costs_m826); end
  def test_outputs_costs_n826; assert_equal("2030", worksheet.outputs_costs_n826); end
  def test_outputs_costs_o826; assert_equal("2035", worksheet.outputs_costs_o826); end
  def test_outputs_costs_p826; assert_equal("2040", worksheet.outputs_costs_p826); end
  def test_outputs_costs_q826; assert_equal("2045", worksheet.outputs_costs_q826); end
  def test_outputs_costs_r826; assert_equal("2050", worksheet.outputs_costs_r826); end
  def test_outputs_costs_c827; assert_equal("High", worksheet.outputs_costs_c827); end
  def test_outputs_costs_j827; assert_in_epsilon(100.0, worksheet.outputs_costs_j827, 0.002); end
  def test_outputs_costs_k827; assert_in_epsilon(108.2050756294172, worksheet.outputs_costs_k827, 0.002); end
  def test_outputs_costs_l827; assert_in_epsilon(108.85803472803903, worksheet.outputs_costs_l827, 0.002); end
  def test_outputs_costs_m827; assert_in_epsilon(99.56665603260473, worksheet.outputs_costs_m827, 0.002); end
  def test_outputs_costs_n827; assert_in_epsilon(138.35773774731572, worksheet.outputs_costs_n827, 0.002); end
  def test_outputs_costs_o827; assert_in_epsilon(122.43417567321522, worksheet.outputs_costs_o827, 0.002); end
  def test_outputs_costs_p827; assert_in_epsilon(170.17276988626656, worksheet.outputs_costs_p827, 0.002); end
  def test_outputs_costs_q827; assert_in_epsilon(219.5743597870745, worksheet.outputs_costs_q827, 0.002); end
  def test_outputs_costs_r827; assert_in_epsilon(301.89064856051846, worksheet.outputs_costs_r827, 0.002); end
  def test_outputs_costs_c828; assert_equal("Point", worksheet.outputs_costs_c828); end
  def test_outputs_costs_j828; assert_in_epsilon(100.0, worksheet.outputs_costs_j828, 0.002); end
  def test_outputs_costs_k828; assert_in_epsilon(106.045259465101, worksheet.outputs_costs_k828, 0.002); end
  def test_outputs_costs_l828; assert_in_epsilon(102.60184048058395, worksheet.outputs_costs_l828, 0.002); end
  def test_outputs_costs_m828; assert_in_epsilon(89.8560732238076, worksheet.outputs_costs_m828, 0.002); end
  def test_outputs_costs_n828; assert_in_epsilon(121.85596283491891, worksheet.outputs_costs_n828, 0.002); end
  def test_outputs_costs_o828; assert_in_epsilon(100.71726314585403, worksheet.outputs_costs_o828, 0.002); end
  def test_outputs_costs_p828; assert_in_epsilon(132.9358835578007, worksheet.outputs_costs_p828, 0.002); end
  def test_outputs_costs_q828; assert_in_epsilon(160.2134432531949, worksheet.outputs_costs_q828, 0.002); end
  def test_outputs_costs_r828; assert_in_epsilon(223.123118600927, worksheet.outputs_costs_r828, 0.002); end
  def test_outputs_costs_c829; assert_equal("Low", worksheet.outputs_costs_c829); end
  def test_outputs_costs_j829; assert_in_epsilon(100.0, worksheet.outputs_costs_j829, 0.002); end
  def test_outputs_costs_k829; assert_in_epsilon(99.85433173879228, worksheet.outputs_costs_k829, 0.002); end
  def test_outputs_costs_l829; assert_in_epsilon(92.59996425867747, worksheet.outputs_costs_l829, 0.002); end
  def test_outputs_costs_m829; assert_in_epsilon(76.24951832693932, worksheet.outputs_costs_m829, 0.002); end
  def test_outputs_costs_n829; assert_in_epsilon(98.92713312255029, worksheet.outputs_costs_n829, 0.002); end
  def test_outputs_costs_o829; assert_in_epsilon(74.17416029137866, worksheet.outputs_costs_o829, 0.002); end
  def test_outputs_costs_p829; assert_in_epsilon(93.86008805917642, worksheet.outputs_costs_p829, 0.002); end
  def test_outputs_costs_q829; assert_in_epsilon(103.74075914538065, worksheet.outputs_costs_q829, 0.002); end
  def test_outputs_costs_r829; assert_in_epsilon(139.84083474442716, worksheet.outputs_costs_r829, 0.002); end
  def test_outputs_costs_b762; assert_equal("High indexed (non-amortised)", worksheet.outputs_costs_b762); end
  def test_outputs_costs_i762; assert_equal("NON AMORTISED", worksheet.outputs_costs_i762); end
  def test_outputs_costs_c764; assert_equal("Category", worksheet.outputs_costs_c764); end
  def test_outputs_costs_j764; assert_equal("2011", worksheet.outputs_costs_j764); end
  def test_outputs_costs_k764; assert_equal("2015", worksheet.outputs_costs_k764); end
  def test_outputs_costs_l764; assert_equal("2020", worksheet.outputs_costs_l764); end
  def test_outputs_costs_m764; assert_equal("2025", worksheet.outputs_costs_m764); end
  def test_outputs_costs_n764; assert_equal("2030", worksheet.outputs_costs_n764); end
  def test_outputs_costs_o764; assert_equal("2035", worksheet.outputs_costs_o764); end
  def test_outputs_costs_p764; assert_equal("2040", worksheet.outputs_costs_p764); end
  def test_outputs_costs_q764; assert_equal("2045", worksheet.outputs_costs_q764); end
  def test_outputs_costs_r764; assert_equal("2050", worksheet.outputs_costs_r764); end
  def test_outputs_costs_c765; assert_equal("Capital costs (including opportunity costs)", worksheet.outputs_costs_c765); end
  def test_outputs_costs_j765; assert_in_epsilon(100.0, worksheet.outputs_costs_j765, 0.002); end
  def test_outputs_costs_k765; assert_in_epsilon(136.80934012380376, worksheet.outputs_costs_k765, 0.002); end
  def test_outputs_costs_l765; assert_in_epsilon(177.40340395292657, worksheet.outputs_costs_l765, 0.002); end
  def test_outputs_costs_m765; assert_in_epsilon(215.00741046020346, worksheet.outputs_costs_m765, 0.002); end
  def test_outputs_costs_n765; assert_in_epsilon(245.9329104046442, worksheet.outputs_costs_n765, 0.002); end
  def test_outputs_costs_o765; assert_in_epsilon(277.93685402115227, worksheet.outputs_costs_o765, 0.002); end
  def test_outputs_costs_p765; assert_in_epsilon(316.70929270950177, worksheet.outputs_costs_p765, 0.002); end
  def test_outputs_costs_q765; assert_in_epsilon(348.92794158368366, worksheet.outputs_costs_q765, 0.002); end
  def test_outputs_costs_r765; assert_in_epsilon(391.28724570762205, worksheet.outputs_costs_r765, 0.002); end
  def test_outputs_costs_c766; assert_equal("Operating costs", worksheet.outputs_costs_c766); end
  def test_outputs_costs_j766; assert_in_epsilon(100.0, worksheet.outputs_costs_j766, 0.002); end
  def test_outputs_costs_k766; assert_in_epsilon(112.47311876489536, worksheet.outputs_costs_k766, 0.002); end
  def test_outputs_costs_l766; assert_in_epsilon(129.97011960989215, worksheet.outputs_costs_l766, 0.002); end
  def test_outputs_costs_m766; assert_in_epsilon(146.0207479514356, worksheet.outputs_costs_m766, 0.002); end
  def test_outputs_costs_n766; assert_in_epsilon(163.12442067924934, worksheet.outputs_costs_n766, 0.002); end
  def test_outputs_costs_o766; assert_in_epsilon(178.54037143330194, worksheet.outputs_costs_o766, 0.002); end
  def test_outputs_costs_p766; assert_in_epsilon(195.02554788531484, worksheet.outputs_costs_p766, 0.002); end
  def test_outputs_costs_q766; assert_in_epsilon(212.04447095642598, worksheet.outputs_costs_q766, 0.002); end
  def test_outputs_costs_r766; assert_in_epsilon(231.4729498932372, worksheet.outputs_costs_r766, 0.002); end
  def test_outputs_costs_c767; assert_equal("Fuel costs", worksheet.outputs_costs_c767); end
  def test_outputs_costs_j767; assert_in_epsilon(100.0, worksheet.outputs_costs_j767, 0.002); end
  def test_outputs_costs_k767; assert_in_epsilon(113.42591707905373, worksheet.outputs_costs_k767, 0.002); end
  def test_outputs_costs_l767; assert_in_epsilon(140.7896021763179, worksheet.outputs_costs_l767, 0.002); end
  def test_outputs_costs_m767; assert_in_epsilon(167.51866581934638, worksheet.outputs_costs_m767, 0.002); end
  def test_outputs_costs_n767; assert_in_epsilon(195.83105570433318, worksheet.outputs_costs_n767, 0.002); end
  def test_outputs_costs_o767; assert_in_epsilon(221.0068853962429, worksheet.outputs_costs_o767, 0.002); end
  def test_outputs_costs_p767; assert_in_epsilon(251.9059760126277, worksheet.outputs_costs_p767, 0.002); end
  def test_outputs_costs_q767; assert_in_epsilon(283.77098063140716, worksheet.outputs_costs_q767, 0.002); end
  def test_outputs_costs_r767; assert_in_epsilon(317.3579644979577, worksheet.outputs_costs_r767, 0.002); end
  def test_outputs_costs_c768; assert_equal("Total", worksheet.outputs_costs_c768); end
  def test_outputs_costs_j768; assert_in_epsilon(100.0, worksheet.outputs_costs_j768, 0.002); end
  def test_outputs_costs_k768; assert_in_epsilon(130.55467249571367, worksheet.outputs_costs_k768, 0.002); end
  def test_outputs_costs_l768; assert_in_epsilon(165.95191435220568, worksheet.outputs_costs_l768, 0.002); end
  def test_outputs_costs_m768; assert_in_epsilon(198.82779500240142, worksheet.outputs_costs_m768, 0.002); end
  def test_outputs_costs_n768; assert_in_epsilon(227.0809782824721, worksheet.outputs_costs_n768, 0.002); end
  def test_outputs_costs_o768; assert_in_epsilon(255.5732124894918, worksheet.outputs_costs_o768, 0.002); end
  def test_outputs_costs_p768; assert_in_epsilon(289.73470376439974, worksheet.outputs_costs_p768, 0.002); end
  def test_outputs_costs_q768; assert_in_epsilon(319.22252163590423, worksheet.outputs_costs_q768, 0.002); end
  def test_outputs_costs_r768; assert_in_epsilon(356.7823267760675, worksheet.outputs_costs_r768, 0.002); end
  def test_outputs_costs_b772; assert_equal("Point indexed (non-amortised)", worksheet.outputs_costs_b772); end
  def test_outputs_costs_i772; assert_equal("NON AMORTISED", worksheet.outputs_costs_i772); end
  def test_outputs_costs_c774; assert_equal("Category", worksheet.outputs_costs_c774); end
  def test_outputs_costs_j774; assert_equal("2011", worksheet.outputs_costs_j774); end
  def test_outputs_costs_k774; assert_equal("2015", worksheet.outputs_costs_k774); end
  def test_outputs_costs_l774; assert_equal("2020", worksheet.outputs_costs_l774); end
  def test_outputs_costs_m774; assert_equal("2025", worksheet.outputs_costs_m774); end
  def test_outputs_costs_n774; assert_equal("2030", worksheet.outputs_costs_n774); end
  def test_outputs_costs_o774; assert_equal("2035", worksheet.outputs_costs_o774); end
  def test_outputs_costs_p774; assert_equal("2040", worksheet.outputs_costs_p774); end
  def test_outputs_costs_q774; assert_equal("2045", worksheet.outputs_costs_q774); end
  def test_outputs_costs_r774; assert_equal("2050", worksheet.outputs_costs_r774); end
  def test_outputs_costs_c775; assert_equal("Capital costs (including opportunity costs)", worksheet.outputs_costs_c775); end
  def test_outputs_costs_j775; assert_in_epsilon(100.0, worksheet.outputs_costs_j775, 0.002); end
  def test_outputs_costs_k775; assert_in_epsilon(129.52174974000135, worksheet.outputs_costs_k775, 0.002); end
  def test_outputs_costs_l775; assert_in_epsilon(157.90516746844852, worksheet.outputs_costs_l775, 0.002); end
  def test_outputs_costs_m775; assert_in_epsilon(181.27329437022277, worksheet.outputs_costs_m775, 0.002); end
  def test_outputs_costs_n775; assert_in_epsilon(195.9711519326667, worksheet.outputs_costs_n775, 0.002); end
  def test_outputs_costs_o775; assert_in_epsilon(210.54072346799998, worksheet.outputs_costs_o775, 0.002); end
  def test_outputs_costs_p775; assert_in_epsilon(229.6511580446262, worksheet.outputs_costs_p775, 0.002); end
  def test_outputs_costs_q775; assert_in_epsilon(240.8386788746947, worksheet.outputs_costs_q775, 0.002); end
  def test_outputs_costs_r775; assert_in_epsilon(259.6486886786237, worksheet.outputs_costs_r775, 0.002); end
  def test_outputs_costs_c776; assert_equal("Operating costs", worksheet.outputs_costs_c776); end
  def test_outputs_costs_j776; assert_in_epsilon(100.0, worksheet.outputs_costs_j776, 0.002); end
  def test_outputs_costs_k776; assert_in_epsilon(110.19309387503422, worksheet.outputs_costs_k776, 0.002); end
  def test_outputs_costs_l776; assert_in_epsilon(124.15890284156659, worksheet.outputs_costs_l776, 0.002); end
  def test_outputs_costs_m776; assert_in_epsilon(136.08207845290246, worksheet.outputs_costs_m776, 0.002); end
  def test_outputs_costs_n776; assert_in_epsilon(148.37288809027794, worksheet.outputs_costs_n776, 0.002); end
  def test_outputs_costs_o776; assert_in_epsilon(158.5203715929422, worksheet.outputs_costs_o776, 0.002); end
  def test_outputs_costs_p776; assert_in_epsilon(169.08013135747117, worksheet.outputs_costs_p776, 0.002); end
  def test_outputs_costs_q776; assert_in_epsilon(179.46873088138545, worksheet.outputs_costs_q776, 0.002); end
  def test_outputs_costs_r776; assert_in_epsilon(191.21343685050437, worksheet.outputs_costs_r776, 0.002); end
  def test_outputs_costs_c777; assert_equal("Fuel costs", worksheet.outputs_costs_c777); end
  def test_outputs_costs_j777; assert_in_epsilon(100.0, worksheet.outputs_costs_j777, 0.002); end
  def test_outputs_costs_k777; assert_in_epsilon(105.32894110266251, worksheet.outputs_costs_k777, 0.002); end
  def test_outputs_costs_l777; assert_in_epsilon(120.03604220504663, worksheet.outputs_costs_l777, 0.002); end
  def test_outputs_costs_m777; assert_in_epsilon(132.39875770829127, worksheet.outputs_costs_m777, 0.002); end
  def test_outputs_costs_n777; assert_in_epsilon(144.6592560722064, worksheet.outputs_costs_n777, 0.002); end
  def test_outputs_costs_o777; assert_in_epsilon(153.91777018412304, worksheet.outputs_costs_o777, 0.002); end
  def test_outputs_costs_p777; assert_in_epsilon(165.83330867695182, worksheet.outputs_costs_p777, 0.002); end
  def test_outputs_costs_q777; assert_in_epsilon(177.16727712150433, worksheet.outputs_costs_q777, 0.002); end
  def test_outputs_costs_r777; assert_in_epsilon(189.28262764954525, worksheet.outputs_costs_r777, 0.002); end
  def test_outputs_costs_c778; assert_equal("Total", worksheet.outputs_costs_c778); end
  def test_outputs_costs_j778; assert_in_epsilon(100.0, worksheet.outputs_costs_j778, 0.002); end
  def test_outputs_costs_k778; assert_in_epsilon(124.09037399495813, worksheet.outputs_costs_k778, 0.002); end
  def test_outputs_costs_l778; assert_in_epsilon(148.7829002124033, worksheet.outputs_costs_l778, 0.002); end
  def test_outputs_costs_m778; assert_in_epsilon(169.20884789101868, worksheet.outputs_costs_m778, 0.002); end
  def test_outputs_costs_n778; assert_in_epsilon(183.27779352075842, worksheet.outputs_costs_n778, 0.002); end
  def test_outputs_costs_o778; assert_in_epsilon(196.62322159261163, worksheet.outputs_costs_o778, 0.002); end
  def test_outputs_costs_p778; assert_in_epsilon(213.62027160935932, worksheet.outputs_costs_p778, 0.002); end
  def test_outputs_costs_q778; assert_in_epsilon(224.67787060734793, worksheet.outputs_costs_q778, 0.002); end
  def test_outputs_costs_r778; assert_in_epsilon(241.67977918493796, worksheet.outputs_costs_r778, 0.002); end
  def test_outputs_costs_b782; assert_equal("Low indexed (non-amortised)", worksheet.outputs_costs_b782); end
  def test_outputs_costs_i782; assert_equal("NON AMORTISED", worksheet.outputs_costs_i782); end
  def test_outputs_costs_c784; assert_equal("Category", worksheet.outputs_costs_c784); end
  def test_outputs_costs_j784; assert_equal("2011", worksheet.outputs_costs_j784); end
  def test_outputs_costs_k784; assert_equal("2015", worksheet.outputs_costs_k784); end
  def test_outputs_costs_l784; assert_equal("2020", worksheet.outputs_costs_l784); end
  def test_outputs_costs_m784; assert_equal("2025", worksheet.outputs_costs_m784); end
  def test_outputs_costs_n784; assert_equal("2030", worksheet.outputs_costs_n784); end
  def test_outputs_costs_o784; assert_equal("2035", worksheet.outputs_costs_o784); end
  def test_outputs_costs_p784; assert_equal("2040", worksheet.outputs_costs_p784); end
  def test_outputs_costs_q784; assert_equal("2045", worksheet.outputs_costs_q784); end
  def test_outputs_costs_r784; assert_equal("2050", worksheet.outputs_costs_r784); end
  def test_outputs_costs_c785; assert_equal("Capital costs (including opportunity costs)", worksheet.outputs_costs_c785); end
  def test_outputs_costs_j785; assert_in_epsilon(100.0, worksheet.outputs_costs_j785, 0.002); end
  def test_outputs_costs_k785; assert_in_epsilon(126.00227594360094, worksheet.outputs_costs_k785, 0.002); end
  def test_outputs_costs_l785; assert_in_epsilon(148.9120440421684, worksheet.outputs_costs_l785, 0.002); end
  def test_outputs_costs_m785; assert_in_epsilon(165.6550117358335, worksheet.outputs_costs_m785, 0.002); end
  def test_outputs_costs_n785; assert_in_epsilon(172.29493577242738, worksheet.outputs_costs_n785, 0.002); end
  def test_outputs_costs_o785; assert_in_epsilon(178.2429166529335, worksheet.outputs_costs_o785, 0.002); end
  def test_outputs_costs_p785; assert_in_epsilon(187.17253626304435, worksheet.outputs_costs_p785, 0.002); end
  def test_outputs_costs_q785; assert_in_epsilon(187.0727999909819, worksheet.outputs_costs_q785, 0.002); end
  def test_outputs_costs_r785; assert_in_epsilon(192.55417075598353, worksheet.outputs_costs_r785, 0.002); end
  def test_outputs_costs_c786; assert_equal("Operating costs", worksheet.outputs_costs_c786); end
  def test_outputs_costs_j786; assert_in_epsilon(100.0, worksheet.outputs_costs_j786, 0.002); end
  def test_outputs_costs_k786; assert_in_epsilon(107.76671286965687, worksheet.outputs_costs_k786, 0.002); end
  def test_outputs_costs_l786; assert_in_epsilon(118.00884364428642, worksheet.outputs_costs_l786, 0.002); end
  def test_outputs_costs_m786; assert_in_epsilon(125.608049487154, worksheet.outputs_costs_m786, 0.002); end
  def test_outputs_costs_n786; assert_in_epsilon(132.82927398755967, worksheet.outputs_costs_n786, 0.002); end
  def test_outputs_costs_o786; assert_in_epsilon(137.54813717806644, worksheet.outputs_costs_o786, 0.002); end
  def test_outputs_costs_p786; assert_in_epsilon(141.95671436478224, worksheet.outputs_costs_p786, 0.002); end
  def test_outputs_costs_q786; assert_in_epsilon(145.50082691239476, worksheet.outputs_costs_q786, 0.002); end
  def test_outputs_costs_r786; assert_in_epsilon(149.3096262191613, worksheet.outputs_costs_r786, 0.002); end
  def test_outputs_costs_c787; assert_equal("Fuel costs", worksheet.outputs_costs_c787); end
  def test_outputs_costs_j787; assert_in_epsilon(100.0, worksheet.outputs_costs_j787, 0.002); end
  def test_outputs_costs_k787; assert_in_epsilon(99.37802959516591, worksheet.outputs_costs_k787, 0.002); end
  def test_outputs_costs_l787; assert_in_epsilon(104.82485992031879, worksheet.outputs_costs_l787, 0.002); end
  def test_outputs_costs_m787; assert_in_epsilon(106.60576734093377, worksheet.outputs_costs_m787, 0.002); end
  def test_outputs_costs_n787; assert_in_epsilon(106.94333119950024, worksheet.outputs_costs_n787, 0.002); end
  def test_outputs_costs_o787; assert_in_epsilon(104.26603458089359, worksheet.outputs_costs_o787, 0.002); end
  def test_outputs_costs_p787; assert_in_epsilon(102.13596803247844, worksheet.outputs_costs_p787, 0.002); end
  def test_outputs_costs_q787; assert_in_epsilon(98.69476153003929, worksheet.outputs_costs_q787, 0.002); end
  def test_outputs_costs_r787; assert_in_epsilon(94.93150875734784, worksheet.outputs_costs_r787, 0.002); end
  def test_outputs_costs_c788; assert_equal("Total", worksheet.outputs_costs_c788); end
  def test_outputs_costs_j788; assert_in_epsilon(100.0, worksheet.outputs_costs_j788, 0.002); end
  def test_outputs_costs_k788; assert_in_epsilon(120.56460496180688, worksheet.outputs_costs_k788, 0.002); end
  def test_outputs_costs_l788; assert_in_epsilon(139.78214419194782, worksheet.outputs_costs_l788, 0.002); end
  def test_outputs_costs_m788; assert_in_epsilon(153.66554413666108, worksheet.outputs_costs_m788, 0.002); end
  def test_outputs_costs_n788; assert_in_epsilon(159.88886658613762, worksheet.outputs_costs_n788, 0.002); end
  def test_outputs_costs_o788; assert_in_epsilon(164.90682225023687, worksheet.outputs_costs_o788, 0.002); end
  def test_outputs_costs_p788; assert_in_epsilon(172.12046678466834, worksheet.outputs_costs_p788, 0.002); end
  def test_outputs_costs_q788; assert_in_epsilon(172.3927415494967, worksheet.outputs_costs_q788, 0.002); end
  def test_outputs_costs_r788; assert_in_epsilon(176.81417193088024, worksheet.outputs_costs_r788, 0.002); end
  def test_outputs_costs_c752; assert_equal("Year", worksheet.outputs_costs_c752); end
  def test_outputs_costs_j752; assert_equal("2011", worksheet.outputs_costs_j752); end
  def test_outputs_costs_k752; assert_equal("2015", worksheet.outputs_costs_k752); end
  def test_outputs_costs_l752; assert_equal("2020", worksheet.outputs_costs_l752); end
  def test_outputs_costs_m752; assert_equal("2025", worksheet.outputs_costs_m752); end
  def test_outputs_costs_n752; assert_equal("2030", worksheet.outputs_costs_n752); end
  def test_outputs_costs_o752; assert_equal("2035", worksheet.outputs_costs_o752); end
  def test_outputs_costs_p752; assert_equal("2040", worksheet.outputs_costs_p752); end
  def test_outputs_costs_q752; assert_equal("2045", worksheet.outputs_costs_q752); end
  def test_outputs_costs_r752; assert_equal("2050", worksheet.outputs_costs_r752); end
  def test_outputs_costs_c753; assert_equal("High", worksheet.outputs_costs_c753); end
  def test_outputs_costs_j753; assert_in_epsilon(28336.8150980829, worksheet.outputs_costs_j753, 0.002); end
  def test_outputs_costs_k753; assert_in_epsilon(36995.03614701808, worksheet.outputs_costs_k753, 0.002); end
  def test_outputs_costs_l753; assert_in_epsilon(47025.48712171343, worksheet.outputs_costs_l753, 0.002); end
  def test_outputs_costs_m753; assert_in_epsilon(56341.46463342581, worksheet.outputs_costs_m753, 0.002); end
  def test_outputs_costs_n753; assert_in_epsilon(64347.51693882191, worksheet.outputs_costs_n753, 0.002); end
  def test_outputs_costs_o753; assert_in_epsilon(72421.3086633778, worksheet.outputs_costs_o753, 0.002); end
  def test_outputs_costs_p753; assert_in_epsilon(82101.58728069619, worksheet.outputs_costs_p753, 0.002); end
  def test_outputs_costs_q753; assert_in_epsilon(90457.49570740387, worksheet.outputs_costs_q753, 0.002); end
  def test_outputs_costs_r753; assert_in_epsilon(101100.74824117217, worksheet.outputs_costs_r753, 0.002); end
  def test_outputs_costs_c754; assert_equal("Point", worksheet.outputs_costs_c754); end
  def test_outputs_costs_j754; assert_in_epsilon(28336.8150980829, worksheet.outputs_costs_j754, 0.002); end
  def test_outputs_costs_k754; assert_in_epsilon(35163.25983347083, worksheet.outputs_costs_k754, 0.002); end
  def test_outputs_costs_l754; assert_in_epsilon(42160.33533075391, worksheet.outputs_costs_l754, 0.002); end
  def test_outputs_costs_m754; assert_in_epsilon(47948.39835647432, worksheet.outputs_costs_m754, 0.002); end
  def test_outputs_costs_n754; assert_in_epsilon(51935.089465823476, worksheet.outputs_costs_n754, 0.002); end
  def test_outputs_costs_o754; assert_in_epsilon(55716.758742592174, worksheet.outputs_costs_o754, 0.002); end
  def test_outputs_costs_p754; assert_in_epsilon(60533.18137796664, worksheet.outputs_costs_p754, 0.002); end
  def test_outputs_costs_q754; assert_in_epsilon(63666.55276031413, worksheet.outputs_costs_q754, 0.002); end
  def test_outputs_costs_r754; assert_in_epsilon(68484.35215709092, worksheet.outputs_costs_r754, 0.002); end
  def test_outputs_costs_c755; assert_equal("Low", worksheet.outputs_costs_c755); end
  def test_outputs_costs_j755; assert_in_epsilon(28336.8150980829, worksheet.outputs_costs_j755, 0.002); end
  def test_outputs_costs_k755; assert_in_epsilon(34164.169181761295, worksheet.outputs_costs_k755, 0.002); end
  def test_outputs_costs_l755; assert_in_epsilon(39609.80773980788, worksheet.outputs_costs_l755, 0.002); end
  def test_outputs_costs_m755; assert_in_epsilon(43543.921111468626, worksheet.outputs_costs_m755, 0.002); end
  def test_outputs_costs_n755; assert_in_epsilon(45307.41248693427, worksheet.outputs_costs_n755, 0.002); end
  def test_outputs_costs_o755; assert_in_epsilon(46729.34130517385, worksheet.outputs_costs_o755, 0.002); end
  def test_outputs_costs_p755; assert_in_epsilon(48773.45841872866, worksheet.outputs_costs_p755, 0.002); end
  def test_outputs_costs_q755; assert_in_epsilon(48850.61241539681, worksheet.outputs_costs_q755, 0.002); end
  def test_outputs_costs_r755; assert_in_epsilon(50103.50496725993, worksheet.outputs_costs_r755, 0.002); end
  def test_outputs_costs_f25; assert_equal("GDP", worksheet.outputs_costs_f25); end
  def test_outputs_costs_g25; assert_equal("Energy costs", worksheet.outputs_costs_g25); end
  def test_outputs_costs_c26; assert_equal("Cumulative 2011 - 2050", worksheet.outputs_costs_c26); end
  def test_outputs_costs_f26; assert_in_epsilon(5037954.678401471, worksheet.outputs_costs_f26, 0.002); end
  def test_outputs_costs_g26; assert_in_epsilon(1967093.886864467, worksheet.outputs_costs_g26, 0.002); end
  def test_outputs_costs_bt660; assert_in_epsilon(571.3003528040675, worksheet.outputs_costs_bt660, 0.002); end
  def test_outputs_costs_bt661; assert_in_epsilon(1777.822380193661, worksheet.outputs_costs_bt661, 0.002); end
  def test_outputs_costs_bt662; assert_in_epsilon(589.848155990451, worksheet.outputs_costs_bt662, 0.002); end
  def test_outputs_costs_bt663; assert_in_epsilon(300.1491881684751, worksheet.outputs_costs_bt663, 0.002); end
  def test_outputs_costs_bt664; assert_in_epsilon(66.73424066023502, worksheet.outputs_costs_bt664, 0.002); end
  def test_outputs_costs_bt665; assert_in_epsilon(26.296072553653012, worksheet.outputs_costs_bt665, 0.002); end
  def test_outputs_costs_bt666; assert_in_epsilon(2.70070217360138, worksheet.outputs_costs_bt666, 0.002); end
  def test_outputs_costs_bt675; assert_in_epsilon(698.6861180482562, worksheet.outputs_costs_bt675, 0.002); end
  def test_outputs_costs_bt676; assert_in_epsilon(2822.169642407667, worksheet.outputs_costs_bt676, 0.002); end
  def test_outputs_costs_bt677; assert_in_epsilon(663.035338658076, worksheet.outputs_costs_bt677, 0.002); end
  def test_outputs_costs_bt678; assert_in_epsilon(344.2686761703157, worksheet.outputs_costs_bt678, 0.002); end
  def test_outputs_costs_bt679; assert_in_epsilon(77.96015349911313, worksheet.outputs_costs_bt679, 0.002); end
  def test_outputs_costs_bt680; assert_in_epsilon(30.855836303114554, worksheet.outputs_costs_bt680, 0.002); end
  def test_outputs_costs_bt681; assert_in_epsilon(3.2958860744120386, worksheet.outputs_costs_bt681, 0.002); end
  def test_outputs_costs_bt705; assert_in_epsilon(408.24657329150614, worksheet.outputs_costs_bt705, 0.002); end
  def test_outputs_costs_bt706; assert_in_epsilon(1120.2704002811388, worksheet.outputs_costs_bt706, 0.002); end
  def test_outputs_costs_bt707; assert_in_epsilon(468.42396656461875, worksheet.outputs_costs_bt707, 0.002); end
  def test_outputs_costs_bt708; assert_in_epsilon(285.4426921678616, worksheet.outputs_costs_bt708, 0.002); end
  def test_outputs_costs_bt709; assert_in_epsilon(62.992269713942314, worksheet.outputs_costs_bt709, 0.002); end
  def test_outputs_costs_bt710; assert_in_epsilon(24.776151303832485, worksheet.outputs_costs_bt710, 0.002); end
  def test_outputs_costs_bt711; assert_in_epsilon(2.502307539997827, worksheet.outputs_costs_bt711, 0.002); end
  def test_outputs_costs_bt690; assert_in_epsilon(571.3003528040675, worksheet.outputs_costs_bt690, 0.002); end
  def test_outputs_costs_bt691; assert_in_epsilon(1777.822380193661, worksheet.outputs_costs_bt691, 0.002); end
  def test_outputs_costs_bt692; assert_in_epsilon(589.848155990451, worksheet.outputs_costs_bt692, 0.002); end
  def test_outputs_costs_bt693; assert_in_epsilon(300.1491881684751, worksheet.outputs_costs_bt693, 0.002); end
  def test_outputs_costs_bt694; assert_in_epsilon(66.73424066023502, worksheet.outputs_costs_bt694, 0.002); end
  def test_outputs_costs_bt695; assert_in_epsilon(26.296072553653012, worksheet.outputs_costs_bt695, 0.002); end
  def test_outputs_costs_bt696; assert_in_epsilon(2.70070217360138, worksheet.outputs_costs_bt696, 0.002); end
  def test_outputs_costs_c18; assert_equal("Cost", worksheet.outputs_costs_c18); end
  def test_outputs_costs_e18; assert_equal("Chosen cost", worksheet.outputs_costs_e18); end
  def test_outputs_costs_f18; assert_equal("Low", worksheet.outputs_costs_f18); end
  def test_outputs_costs_g18; assert_equal("Point", worksheet.outputs_costs_g18); end
  def test_outputs_costs_h18; assert_equal("High", worksheet.outputs_costs_h18); end
  def test_outputs_costs_c19; assert_equal("Fuel", worksheet.outputs_costs_c19); end
  def test_outputs_costs_e19; assert_in_epsilon(3334.851092544144, worksheet.outputs_costs_e19, 0.002); end
  def test_outputs_costs_f19; assert_in_epsilon(2372.6543608628976, worksheet.outputs_costs_f19, 0.002); end
  def test_outputs_costs_g19; assert_in_epsilon(3334.851092544144, worksheet.outputs_costs_g19, 0.002); end
  def test_outputs_costs_h19; assert_in_epsilon(4640.271651160954, worksheet.outputs_costs_h19, 0.002); end
  def test_outputs_costs_c31; assert_equal("Scenario", worksheet.outputs_costs_c31); end
  def test_outputs_costs_j31; assert_equal("2011", worksheet.outputs_costs_j31); end
  def test_outputs_costs_k31; assert_equal("2015", worksheet.outputs_costs_k31); end
  def test_outputs_costs_l31; assert_equal("2020", worksheet.outputs_costs_l31); end
  def test_outputs_costs_m31; assert_equal("2025", worksheet.outputs_costs_m31); end
  def test_outputs_costs_n31; assert_equal("2030", worksheet.outputs_costs_n31); end
  def test_outputs_costs_o31; assert_equal("2035", worksheet.outputs_costs_o31); end
  def test_outputs_costs_p31; assert_equal("2040", worksheet.outputs_costs_p31); end
  def test_outputs_costs_q31; assert_equal("2045", worksheet.outputs_costs_q31); end
  def test_outputs_costs_r31; assert_equal("2050", worksheet.outputs_costs_r31); end
  def test_outputs_costs_c32; assert_equal("Global GDP", worksheet.outputs_costs_c32); end
  def test_outputs_costs_j32; assert_in_epsilon(67175.5376197859, worksheet.outputs_costs_j32, 0.002); end
  def test_outputs_costs_k32; assert_in_epsilon(76371.7262877051, worksheet.outputs_costs_k32, 0.002); end
  def test_outputs_costs_l32; assert_in_epsilon(91376.4988938779, worksheet.outputs_costs_l32, 0.002); end
  def test_outputs_costs_m32; assert_in_epsilon(107214.416539545, worksheet.outputs_costs_m32, 0.002); end
  def test_outputs_costs_n32; assert_in_epsilon(124607.262631566, worksheet.outputs_costs_n32, 0.002); end
  def test_outputs_costs_o32; assert_in_epsilon(143612.795634057, worksheet.outputs_costs_o32, 0.002); end
  def test_outputs_costs_p32; assert_in_epsilon(163745.90956641, worksheet.outputs_costs_p32, 0.002); end
  def test_outputs_costs_q32; assert_in_epsilon(184019.80808994902, worksheet.outputs_costs_q32, 0.002); end
  def test_outputs_costs_r32; assert_in_epsilon(204480.970522059, worksheet.outputs_costs_r32, 0.002); end
  def test_outputs_costs_j33; assert_in_epsilon(409.0, worksheet.outputs_costs_j33, 0.002); end
  def test_outputs_costs_nd44; assert_in_epsilon(176.74777033023503, worksheet.outputs_costs_nd44, 0.002); end
  def test_outputs_costs_nd45; assert_in_epsilon(421.261082703747, worksheet.outputs_costs_nd45, 0.002); end
  def test_outputs_costs_nd46; assert_in_epsilon(359.21993439244585, worksheet.outputs_costs_nd46, 0.002); end
  def test_outputs_costs_nd47; assert_in_epsilon(6704.5924750047925, worksheet.outputs_costs_nd47, 0.002); end
  def test_outputs_costs_nd48; assert_in_epsilon(168.26539793262936, worksheet.outputs_costs_nd48, 0.002); end
  def test_outputs_costs_nd49; assert_in_epsilon(686.1337345317404, worksheet.outputs_costs_nd49, 0.002); end
  def test_outputs_costs_nd50; assert_in_epsilon(352.70688177900604, worksheet.outputs_costs_nd50, 0.002); end
  def test_outputs_costs_nd51; assert_in_delta(0.0, (worksheet.outputs_costs_nd51||0), 0.002); end
  def test_outputs_costs_nd52; assert_in_epsilon(846.5844548149669, worksheet.outputs_costs_nd52, 0.002); end
  def test_outputs_costs_nd53; assert_in_epsilon(32.87001231783606, worksheet.outputs_costs_nd53, 0.002); end
  def test_outputs_costs_nd54; assert_in_epsilon(61.977149069612075, worksheet.outputs_costs_nd54, 0.002); end
  def test_outputs_costs_nd55; assert_in_epsilon(23.083739231237857, worksheet.outputs_costs_nd55, 0.002); end
  def test_outputs_costs_nd56; assert_in_delta(0.0, (worksheet.outputs_costs_nd56||0), 0.002); end
  def test_outputs_costs_nd57; assert_in_epsilon(12.535901076878226, worksheet.outputs_costs_nd57, 0.002); end
  def test_outputs_costs_nd58; assert_in_epsilon(112.78568312460655, worksheet.outputs_costs_nd58, 0.002); end
  def test_outputs_costs_nd59; assert_in_epsilon(67.2474420183232, worksheet.outputs_costs_nd59, 0.002); end
  def test_outputs_costs_nd60; assert_in_epsilon(199.53530646452316, worksheet.outputs_costs_nd60, 0.002); end
  def test_outputs_costs_nd61; assert_in_epsilon(159.13720971919025, worksheet.outputs_costs_nd61, 0.002); end
  def test_outputs_costs_nd62; assert_in_epsilon(2264.870153302132, worksheet.outputs_costs_nd62, 0.002); end
  def test_outputs_costs_nd63; assert_in_epsilon(59.05101241403588, worksheet.outputs_costs_nd63, 0.002); end
  def test_outputs_costs_nd64; assert_in_epsilon(206.0633231710737, worksheet.outputs_costs_nd64, 0.002); end
  def test_outputs_costs_nd65; assert_in_epsilon(98.9367482104083, worksheet.outputs_costs_nd65, 0.002); end
  def test_outputs_costs_nd66; assert_in_delta(0.0, (worksheet.outputs_costs_nd66||0), 0.002); end
  def test_outputs_costs_nd67; assert_in_epsilon(144.52448171148686, worksheet.outputs_costs_nd67, 0.002); end
  def test_outputs_costs_nd68; assert_in_epsilon(5.760280548711144, worksheet.outputs_costs_nd68, 0.002); end
  def test_outputs_costs_nd69; assert_in_epsilon(10.535405492038311, worksheet.outputs_costs_nd69, 0.002); end
  def test_outputs_costs_nd70; assert_in_epsilon(3.893181357601844, worksheet.outputs_costs_nd70, 0.002); end
  def test_outputs_costs_nd71; assert_in_delta(0.0, (worksheet.outputs_costs_nd71||0), 0.002); end
  def test_outputs_costs_nd72; assert_in_epsilon(72.79288990969286, worksheet.outputs_costs_nd72, 0.002); end
  def test_outputs_costs_nd73; assert_in_epsilon(147.62277813525338, worksheet.outputs_costs_nd73, 0.002); end
  def test_outputs_costs_nd74; assert_in_epsilon(338.1324069152181, worksheet.outputs_costs_nd74, 0.002); end
  def test_outputs_costs_nd75; assert_in_delta(0.0, (worksheet.outputs_costs_nd75||0), 0.002); end
  def test_outputs_costs_nd76; assert_in_epsilon(1747.7224149439703, worksheet.outputs_costs_nd76, 0.002); end
  def test_outputs_costs_nd77; assert_in_delta(0.0, (worksheet.outputs_costs_nd77||0), 0.002); end
  def test_outputs_costs_nd78; assert_in_epsilon(92.26898052813638, worksheet.outputs_costs_nd78, 0.002); end
  def test_outputs_costs_nd79; assert_in_epsilon(86.14903156564642, worksheet.outputs_costs_nd79, 0.002); end
  def test_outputs_costs_nd80; assert_in_epsilon(1165.383189363095, worksheet.outputs_costs_nd80, 0.002); end
  def test_outputs_costs_nd81; assert_in_epsilon(81.41559520549188, worksheet.outputs_costs_nd81, 0.002); end
  def test_outputs_costs_nd82; assert_in_epsilon(106.91109537266169, worksheet.outputs_costs_nd82, 0.002); end
  def test_outputs_costs_nd83; assert_in_delta(0.4878984257582729, worksheet.outputs_costs_nd83, 0.002); end
  def test_outputs_costs_nd84; assert_in_delta(0.48533678510150813, worksheet.outputs_costs_nd84, 0.002); end
  def test_outputs_costs_nd85; assert_in_epsilon(973.0183907795648, worksheet.outputs_costs_nd85, 0.002); end
  def test_outputs_costs_nd86; assert_in_epsilon(87.48269598132936, worksheet.outputs_costs_nd86, 0.002); end
  def test_outputs_costs_nd87; assert_in_epsilon(86.92163704942178, worksheet.outputs_costs_nd87, 0.002); end
  def test_outputs_costs_nd88; assert_in_delta(0.2611289383676943, worksheet.outputs_costs_nd88, 0.002); end
  def test_outputs_costs_nd89; assert_in_delta(0.4419437671787951, worksheet.outputs_costs_nd89, 0.002); end
  def test_outputs_costs_nd90; assert_in_epsilon(233.69597735585972, worksheet.outputs_costs_nd90, 0.002); end
  def test_outputs_costs_nd91; assert_in_epsilon(343.2525082243725, worksheet.outputs_costs_nd91, 0.002); end
  def test_outputs_costs_nd92; assert_in_epsilon(269.98285105820105, worksheet.outputs_costs_nd92, 0.002); end
  def test_outputs_costs_nd93; assert_in_epsilon(16.39656632418871, worksheet.outputs_costs_nd93, 0.002); end
  def test_outputs_costs_nd94; assert_in_epsilon(345.2330606916442, worksheet.outputs_costs_nd94, 0.002); end
  def test_outputs_costs_nd95; assert_in_epsilon(31.381137258483008, worksheet.outputs_costs_nd95, 0.002); end
  def test_outputs_costs_nd96; assert_in_epsilon(32.90526646420596, worksheet.outputs_costs_nd96, 0.002); end
  def test_outputs_costs_nd97; assert_in_delta(0.0004482155462744308, worksheet.outputs_costs_nd97, 0.002); end
  def test_outputs_costs_nd98; assert_in_delta(0.1663680078004588, worksheet.outputs_costs_nd98, 0.002); end
  def test_outputs_costs_nd99; assert_in_epsilon(17.684914053746226, worksheet.outputs_costs_nd99, 0.002); end
  def test_outputs_costs_nd100; assert_in_epsilon(26.593465759133203, worksheet.outputs_costs_nd100, 0.002); end
  def test_outputs_costs_nd101; assert_in_epsilon(1268.6376804468648, worksheet.outputs_costs_nd101, 0.002); end
  def test_outputs_costs_nd102; assert_in_delta(0.0, (worksheet.outputs_costs_nd102||0), 0.002); end
  def test_outputs_costs_nd103; assert_in_epsilon(209.91137954158597, worksheet.outputs_costs_nd103, 0.002); end
  def test_outputs_costs_nd104; assert_in_delta(0.0, (worksheet.outputs_costs_nd104||0), 0.002); end
  def test_outputs_costs_nd105; assert_in_epsilon(23762.772222645035, worksheet.outputs_costs_nd105, 0.002); end
  def test_outputs_costs_nd106; assert_in_epsilon(2582.1170345522223, worksheet.outputs_costs_nd106, 0.002); end
  def test_outputs_costs_nd107; assert_in_epsilon(7424.1750899357085, worksheet.outputs_costs_nd107, 0.002); end
  def test_outputs_costs_nd108; assert_in_epsilon(48.998289771444696, worksheet.outputs_costs_nd108, 0.002); end
  def test_outputs_costs_nd109; assert_in_epsilon(407.51168625848476, worksheet.outputs_costs_nd109, 0.002); end
  def test_outputs_costs_nd110; assert_in_epsilon(1639.1420159985546, worksheet.outputs_costs_nd110, 0.002); end
  def test_outputs_costs_nd111; assert_in_epsilon(55.81319287842555, worksheet.outputs_costs_nd111, 0.002); end
  def test_outputs_costs_nd112; assert_in_epsilon(94.1536185416032, worksheet.outputs_costs_nd112, 0.002); end
  def test_outputs_costs_nd113; assert_in_delta(0.0, (worksheet.outputs_costs_nd113||0), 0.002); end
  def test_outputs_costs_nd114; assert_in_epsilon(120.0813596568281, worksheet.outputs_costs_nd114, 0.002); end
  def test_outputs_costs_nd115; assert_in_epsilon(250.11707413431077, worksheet.outputs_costs_nd115, 0.002); end
  def test_outputs_costs_nd116; assert_in_epsilon(78.90857521625563, worksheet.outputs_costs_nd116, 0.002); end
  def test_outputs_costs_nd117; assert_in_epsilon(166.3656449078993, worksheet.outputs_costs_nd117, 0.002); end
  def test_outputs_costs_nd118; assert_in_epsilon(3.230327547080764, worksheet.outputs_costs_nd118, 0.002); end
  def test_outputs_costs_nd119; assert_in_epsilon(45.679221117227605, worksheet.outputs_costs_nd119, 0.002); end
  def test_outputs_costs_nd120; assert_in_delta(0.0, (worksheet.outputs_costs_nd120||0), 0.002); end
  def test_outputs_costs_nd121; assert_in_delta(0.0, (worksheet.outputs_costs_nd121||0), 0.002); end
  def test_outputs_costs_nd122; assert_in_epsilon(649.5088338613859, worksheet.outputs_costs_nd122, 0.002); end
  def test_outputs_costs_nd123; assert_in_epsilon(43.23425687345926, worksheet.outputs_costs_nd123, 0.002); end
  def test_outputs_costs_nd124; assert_in_epsilon(165.02031380700345, worksheet.outputs_costs_nd124, 0.002); end
  def test_outputs_costs_nd125; assert_in_epsilon(149.68113615956435, worksheet.outputs_costs_nd125, 0.002); end
  def test_outputs_costs_nd126; assert_in_epsilon(10.16881639189327, worksheet.outputs_costs_nd126, 0.002); end
  def test_outputs_costs_nd127; assert_in_epsilon(40.36239587533732, worksheet.outputs_costs_nd127, 0.002); end
  def test_outputs_costs_nd128; assert_in_epsilon(6.932456092523628, worksheet.outputs_costs_nd128, 0.002); end
  def test_outputs_costs_nd129; assert_in_epsilon(22.141296930151398, worksheet.outputs_costs_nd129, 0.002); end
  def test_outputs_costs_nd130; assert_in_epsilon(284.1284477194585, worksheet.outputs_costs_nd130, 0.002); end
  def test_outputs_costs_nd131; assert_in_epsilon(486.38836379187165, worksheet.outputs_costs_nd131, 0.002); end
  def test_outputs_costs_nd132; assert_in_epsilon(78.99739047729835, worksheet.outputs_costs_nd132, 0.002); end
  def test_outputs_costs_nd133; assert_in_epsilon(59.71912130436085, worksheet.outputs_costs_nd133, 0.002); end
  def test_outputs_costs_nd134; assert_in_delta(0.0, (worksheet.outputs_costs_nd134||0), 0.002); end
  def test_outputs_costs_nd135; assert_in_epsilon(18.09573554415432, worksheet.outputs_costs_nd135, 0.002); end
  def test_outputs_costs_nd136; assert_in_epsilon(2.5595947620584925, worksheet.outputs_costs_nd136, 0.002); end
  def test_outputs_costs_nd137; assert_in_epsilon(1.7263022448963654, worksheet.outputs_costs_nd137, 0.002); end
  def test_outputs_costs_nd138; assert_in_delta(0.0, (worksheet.outputs_costs_nd138||0), 0.002); end
  def test_outputs_costs_nd139; assert_in_epsilon(13.667182418464673, worksheet.outputs_costs_nd139, 0.002); end
  def test_outputs_costs_nd140; assert_in_epsilon(23.064738054861746, worksheet.outputs_costs_nd140, 0.002); end
  def test_outputs_costs_nd141; assert_in_delta(0.0, (worksheet.outputs_costs_nd141||0), 0.002); end
  def test_outputs_costs_nd142; assert_in_epsilon(380.4982354972699, worksheet.outputs_costs_nd142, 0.002); end
  def test_outputs_costs_nd143; assert_in_epsilon(262.56855633704185, worksheet.outputs_costs_nd143, 0.002); end
  def test_outputs_costs_nd144; assert_in_epsilon(349.48958847805494, worksheet.outputs_costs_nd144, 0.002); end
  def test_outputs_costs_nd145; assert_in_epsilon(268.769965864905, worksheet.outputs_costs_nd145, 0.002); end
  def test_outputs_costs_nd146; assert_in_epsilon(1239.3408889929133, worksheet.outputs_costs_nd146, 0.002); end
  def test_outputs_costs_nd147; assert_in_epsilon(1757.4461651350362, worksheet.outputs_costs_nd147, 0.002); end
  def test_outputs_costs_nd148; assert_in_epsilon(69.62483505881903, worksheet.outputs_costs_nd148, 0.002); end
  def test_outputs_costs_nd149; assert_in_epsilon(34.074566183246006, worksheet.outputs_costs_nd149, 0.002); end
  def test_outputs_costs_nd150; assert_in_epsilon(90.55583975989438, worksheet.outputs_costs_nd150, 0.002); end
  def test_outputs_costs_nd151; assert_in_epsilon(22.43836543200039, worksheet.outputs_costs_nd151, 0.002); end
  def test_outputs_costs_nd152; assert_in_epsilon(258.43861928378936, worksheet.outputs_costs_nd152, 0.002); end
  def test_outputs_costs_nd153; assert_in_epsilon(398.46981355899084, worksheet.outputs_costs_nd153, 0.002); end
  def test_outputs_costs_nd154; assert_in_epsilon(16.595825385736507, worksheet.outputs_costs_nd154, 0.002); end
  def test_outputs_costs_nd155; assert_in_epsilon(60.355622954321476, worksheet.outputs_costs_nd155, 0.002); end
  def test_outputs_costs_nd156; assert_in_epsilon(160.94832787819064, worksheet.outputs_costs_nd156, 0.002); end
  def test_outputs_costs_nd157; assert_in_epsilon(118.08098662672987, worksheet.outputs_costs_nd157, 0.002); end
  def test_outputs_costs_nd158; assert_in_epsilon(3.3149645269439265, worksheet.outputs_costs_nd158, 0.002); end
  def test_outputs_costs_nd159; assert_in_epsilon(4.877662324258047, worksheet.outputs_costs_nd159, 0.002); end
  def test_outputs_costs_nd160; assert_in_epsilon(9.481839211221665, worksheet.outputs_costs_nd160, 0.002); end
  def test_outputs_costs_nd161; assert_in_epsilon(2.844551763366499, worksheet.outputs_costs_nd161, 0.002); end
  def test_outputs_costs_nd162; assert_in_epsilon(3.3158042816000854, worksheet.outputs_costs_nd162, 0.002); end
  def test_outputs_costs_nd163; assert_in_epsilon(4.888599650063627, worksheet.outputs_costs_nd163, 0.002); end
  def test_outputs_costs_nd164; assert_in_epsilon(44.61673603403162, worksheet.outputs_costs_nd164, 0.002); end
  def test_outputs_costs_nd165; assert_in_epsilon(1.7978261997751737, worksheet.outputs_costs_nd165, 0.002); end
  def test_outputs_costs_nd166; assert_in_epsilon(23.494663181042522, worksheet.outputs_costs_nd166, 0.002); end
  def test_outputs_costs_nd167; assert_in_epsilon(1.1128943522479735, worksheet.outputs_costs_nd167, 0.002); end
  def test_outputs_costs_nd168; assert_in_epsilon(8.633370277842445, worksheet.outputs_costs_nd168, 0.002); end
  def test_outputs_costs_nd169; assert_in_delta(0.3239314130574264, worksheet.outputs_costs_nd169, 0.002); end
  def test_outputs_costs_nd170; assert_in_epsilon(2.208104769359058, worksheet.outputs_costs_nd170, 0.002); end
  def test_outputs_costs_nd171; assert_in_delta(0.052728663939718624, worksheet.outputs_costs_nd171, 0.002); end
  def test_outputs_costs_nd172; assert_in_epsilon(10.172198211135708, worksheet.outputs_costs_nd172, 0.002); end
  def test_outputs_costs_nd173; assert_in_epsilon(40.68879284454283, worksheet.outputs_costs_nd173, 0.002); end
  def test_outputs_costs_nd174; assert_in_epsilon(26.697559542094467, worksheet.outputs_costs_nd174, 0.002); end
  def test_outputs_costs_nd175; assert_in_epsilon(106.79023816837787, worksheet.outputs_costs_nd175, 0.002); end
  def test_outputs_costs_nd176; assert_in_epsilon(4.613442634101121, worksheet.outputs_costs_nd176, 0.002); end
  def test_outputs_costs_nd177; assert_in_epsilon(12.662400749468686, worksheet.outputs_costs_nd177, 0.002); end
  def test_outputs_costs_nd178; assert_in_delta(0.4772214705372935, worksheet.outputs_costs_nd178, 0.002); end
  def test_outputs_costs_nd179; assert_in_epsilon(6.502527309447541, worksheet.outputs_costs_nd179, 0.002); end
  def test_outputs_costs_nd180; assert_in_epsilon(31.746678184019526, worksheet.outputs_costs_nd180, 0.002); end
  def test_outputs_costs_nd181; assert_in_epsilon(29.764393387871923, worksheet.outputs_costs_nd181, 0.002); end
  def test_outputs_costs_nd182; assert_in_delta(0.0, (worksheet.outputs_costs_nd182||0), 0.002); end
  def test_outputs_costs_nd183; assert_in_delta(0.0, (worksheet.outputs_costs_nd183||0), 0.002); end
  def test_outputs_costs_nd184; assert_in_delta(0.0, (worksheet.outputs_costs_nd184||0), 0.002); end
  def test_outputs_costs_nd185; assert_in_epsilon(8.962861614996925, worksheet.outputs_costs_nd185, 0.002); end
  def test_outputs_costs_nd186; assert_in_delta(0.007508614691267925, worksheet.outputs_costs_nd186, 0.002); end
  def test_outputs_costs_nd187; assert_in_delta(0.0, (worksheet.outputs_costs_nd187||0), 0.002); end
  def test_outputs_costs_nd188; assert_in_epsilon(28.167316537662703, worksheet.outputs_costs_nd188, 0.002); end
  def test_outputs_costs_nd189; assert_in_epsilon(1.7731537623862321, worksheet.outputs_costs_nd189, 0.002); end
  def test_outputs_costs_nd190; assert_in_epsilon(8.365715809122275, worksheet.outputs_costs_nd190, 0.002); end
  def test_outputs_costs_nd191; assert_in_delta(0.6548555377440833, worksheet.outputs_costs_nd191, 0.002); end
  def test_outputs_costs_nd192; assert_in_epsilon(3925.049496765275, worksheet.outputs_costs_nd192, 0.002); end
  def test_outputs_costs_nd193; assert_in_epsilon(5.7699343111522055, worksheet.outputs_costs_nd193, 0.002); end
  def test_outputs_costs_nd194; assert_in_epsilon(1.6309873359689702, worksheet.outputs_costs_nd194, 0.002); end
  def test_outputs_costs_nd195; assert_in_epsilon(1.6835231549163778, worksheet.outputs_costs_nd195, 0.002); end
  def test_outputs_costs_nd196; assert_in_delta(0.8318649351781743, worksheet.outputs_costs_nd196, 0.002); end
  def test_outputs_costs_nd197; assert_in_delta(0.9596263991010868, worksheet.outputs_costs_nd197, 0.002); end
  def test_outputs_costs_nd198; assert_in_epsilon(3995.7473891568807, worksheet.outputs_costs_nd198, 0.002); end
  def test_outputs_costs_nd199; assert_in_epsilon(29.703729508826967, worksheet.outputs_costs_nd199, 0.002); end
  def test_outputs_costs_nd200; assert_in_epsilon(951.3784207517151, worksheet.outputs_costs_nd200, 0.002); end
  def test_outputs_costs_nd201; assert_in_epsilon(333.83893715061527, worksheet.outputs_costs_nd201, 0.002); end
  def test_outputs_costs_nd202; assert_in_epsilon(535.8798676185605, worksheet.outputs_costs_nd202, 0.002); end
  def test_outputs_costs_nd203; assert_in_epsilon(211.46659591624962, worksheet.outputs_costs_nd203, 0.002); end
  def test_outputs_costs_nd204; assert_in_epsilon(156.76621351615668, worksheet.outputs_costs_nd204, 0.002); end
  def test_outputs_costs_nd205; assert_in_epsilon(21.074855568010328, worksheet.outputs_costs_nd205, 0.002); end
  def test_outputs_costs_nd206; assert_in_epsilon(842.72401201393, worksheet.outputs_costs_nd206, 0.002); end
  def test_outputs_costs_nd207; assert_in_epsilon(247.2873234027333, worksheet.outputs_costs_nd207, 0.002); end
  def test_outputs_costs_nd208; assert_in_epsilon(152.17402477221464, worksheet.outputs_costs_nd208, 0.002); end
  def test_outputs_costs_nd209; assert_in_epsilon(548.1265292079369, worksheet.outputs_costs_nd209, 0.002); end
  def test_outputs_costs_nd210; assert_in_epsilon(456.32419610038477, worksheet.outputs_costs_nd210, 0.002); end
  def test_outputs_costs_nd211; assert_in_epsilon(984.7017545198267, worksheet.outputs_costs_nd211, 0.002); end
  def test_outputs_costs_nd212; assert_in_epsilon(547.1533945868671, worksheet.outputs_costs_nd212, 0.002); end
  def test_outputs_costs_nd213; assert_in_epsilon(5134.28750178697, worksheet.outputs_costs_nd213, 0.002); end
  def test_outputs_costs_nd214; assert_in_epsilon(1278.7174371724186, worksheet.outputs_costs_nd214, 0.002); end
  def test_outputs_costs_nd215; assert_in_epsilon(1621.9070789147502, worksheet.outputs_costs_nd215, 0.002); end
  def test_outputs_costs_nd216; assert_in_epsilon(195.93714230156377, worksheet.outputs_costs_nd216, 0.002); end
  def test_outputs_costs_nd217; assert_in_epsilon(624.0822164500848, worksheet.outputs_costs_nd217, 0.002); end
  def test_outputs_costs_nd218; assert_in_epsilon(2181.9944603077056, worksheet.outputs_costs_nd218, 0.002); end
  def test_outputs_costs_nd219; assert_in_epsilon(264.09279616922026, worksheet.outputs_costs_nd219, 0.002); end
  def test_outputs_costs_nd220; assert_in_epsilon(241.2156319051218, worksheet.outputs_costs_nd220, 0.002); end
  def test_outputs_costs_nd221; assert_in_epsilon(327.21978655728697, worksheet.outputs_costs_nd221, 0.002); end
  def test_outputs_costs_nd222; assert_in_epsilon(295.78983371552636, worksheet.outputs_costs_nd222, 0.002); end
  def test_outputs_costs_nd223; assert_in_epsilon(8.907675087214063, worksheet.outputs_costs_nd223, 0.002); end
  def test_outputs_costs_nd224; assert_in_epsilon(2.4758993428727107, worksheet.outputs_costs_nd224, 0.002); end
  def test_outputs_costs_nd225; assert_in_delta(0.0, (worksheet.outputs_costs_nd225||0), 0.002); end
  def test_outputs_costs_nd226; assert_in_delta(0.0, (worksheet.outputs_costs_nd226||0), 0.002); end
  def test_outputs_costs_nd227; assert_in_delta(0.0, (worksheet.outputs_costs_nd227||0), 0.002); end
  def test_outputs_costs_nd228; assert_in_epsilon(1.469245358321318, worksheet.outputs_costs_nd228, 0.002); end
  def test_outputs_costs_nd229; assert_in_delta(0.0, (worksheet.outputs_costs_nd229||0), 0.002); end
  def test_outputs_costs_nd230; assert_in_epsilon(297.3539648600467, worksheet.outputs_costs_nd230, 0.002); end
  def test_outputs_costs_nd231; assert_in_epsilon(227.80513007319, worksheet.outputs_costs_nd231, 0.002); end
  def test_outputs_costs_nd232; assert_in_epsilon(118.05291045986057, worksheet.outputs_costs_nd232, 0.002); end
  def test_outputs_costs_nd233; assert_in_epsilon(827.676596452399, worksheet.outputs_costs_nd233, 0.002); end
  def test_outputs_costs_nd234; assert_in_epsilon(13.049665475382312, worksheet.outputs_costs_nd234, 0.002); end
  def test_outputs_costs_nd235; assert_in_epsilon(35.7351243764001, worksheet.outputs_costs_nd235, 0.002); end
  def test_outputs_costs_nd236; assert_in_epsilon(167.85890639901865, worksheet.outputs_costs_nd236, 0.002); end
  def test_outputs_costs_nd237; assert_in_epsilon(61.41854840841203, worksheet.outputs_costs_nd237, 0.002); end
  def test_outputs_costs_nd238; assert_in_epsilon(47.52620602343951, worksheet.outputs_costs_nd238, 0.002); end
  def test_outputs_costs_nd239; assert_in_epsilon(144.2153704653935, worksheet.outputs_costs_nd239, 0.002); end
  def test_outputs_costs_nd455; assert_in_epsilon(120.34307483955283, worksheet.outputs_costs_nd455, 0.002); end
  def test_outputs_costs_nd456; assert_in_epsilon(285.02374534742, worksheet.outputs_costs_nd456, 0.002); end
  def test_outputs_costs_nd457; assert_in_epsilon(242.3860411898748, worksheet.outputs_costs_nd457, 0.002); end
  def test_outputs_costs_nd458; assert_in_epsilon(3818.3450534657622, worksheet.outputs_costs_nd458, 0.002); end
  def test_outputs_costs_nd459; assert_in_epsilon(113.62052113657586, worksheet.outputs_costs_nd459, 0.002); end
  def test_outputs_costs_nd460; assert_in_epsilon(363.45146285806027, worksheet.outputs_costs_nd460, 0.002); end
  def test_outputs_costs_nd461; assert_in_epsilon(181.761935435924, worksheet.outputs_costs_nd461, 0.002); end
  def test_outputs_costs_nd462; assert_in_delta(0.0, (worksheet.outputs_costs_nd462||0), 0.002); end
  def test_outputs_costs_nd463; assert_in_epsilon(580.1913149160913, worksheet.outputs_costs_nd463, 0.002); end
  def test_outputs_costs_nd464; assert_in_epsilon(22.486985357121824, worksheet.outputs_costs_nd464, 0.002); end
  def test_outputs_costs_nd465; assert_in_epsilon(42.70435592077856, worksheet.outputs_costs_nd465, 0.002); end
  def test_outputs_costs_nd466; assert_in_epsilon(16.251215647295083, worksheet.outputs_costs_nd466, 0.002); end
  def test_outputs_costs_nd467; assert_in_delta(0.0, (worksheet.outputs_costs_nd467||0), 0.002); end
  def test_outputs_costs_nd468; assert_in_epsilon(9.161660535981916, worksheet.outputs_costs_nd468, 0.002); end
  def test_outputs_costs_nd469; assert_in_epsilon(82.46518305539385, worksheet.outputs_costs_nd469, 0.002); end
  def test_outputs_costs_nd470; assert_in_epsilon(46.060812794224105, worksheet.outputs_costs_nd470, 0.002); end
  def test_outputs_costs_nd471; assert_in_epsilon(135.08961140444876, worksheet.outputs_costs_nd471, 0.002); end
  def test_outputs_costs_nd472; assert_in_epsilon(107.50414727395786, worksheet.outputs_costs_nd472, 0.002); end
  def test_outputs_costs_nd473; assert_in_epsilon(1531.8892108332955, worksheet.outputs_costs_nd473, 0.002); end
  def test_outputs_costs_nd474; assert_in_epsilon(39.90041070657146, worksheet.outputs_costs_nd474, 0.002); end
  def test_outputs_costs_nd475; assert_in_epsilon(139.9075883879102, worksheet.outputs_costs_nd475, 0.002); end
  def test_outputs_costs_nd476; assert_in_epsilon(67.60635974032957, worksheet.outputs_costs_nd476, 0.002); end
  def test_outputs_costs_nd477; assert_in_delta(0.0, (worksheet.outputs_costs_nd477||0), 0.002); end
  def test_outputs_costs_nd478; assert_in_epsilon(99.01537162247638, worksheet.outputs_costs_nd478, 0.002); end
  def test_outputs_costs_nd479; assert_in_epsilon(3.9362077969519906, worksheet.outputs_costs_nd479, 0.002); end
  def test_outputs_costs_nd480; assert_in_epsilon(7.255424651013309, worksheet.outputs_costs_nd480, 0.002); end
  def test_outputs_costs_nd481; assert_in_epsilon(2.741127275451296, worksheet.outputs_costs_nd481, 0.002); end
  def test_outputs_costs_nd482; assert_in_delta(0.0, (worksheet.outputs_costs_nd482||0), 0.002); end
  def test_outputs_costs_nd483; assert_in_epsilon(53.165060462568476, worksheet.outputs_costs_nd483, 0.002); end
  def test_outputs_costs_nd484; assert_in_epsilon(107.83070928971456, worksheet.outputs_costs_nd484, 0.002); end
  def test_outputs_costs_nd485; assert_in_epsilon(234.81655579368353, worksheet.outputs_costs_nd485, 0.002); end
  def test_outputs_costs_nd486; assert_in_delta(0.0, (worksheet.outputs_costs_nd486||0), 0.002); end
  def test_outputs_costs_nd487; assert_in_epsilon(1207.371610334933, worksheet.outputs_costs_nd487, 0.002); end
  def test_outputs_costs_nd488; assert_in_delta(0.0, (worksheet.outputs_costs_nd488||0), 0.002); end
  def test_outputs_costs_nd489; assert_in_epsilon(63.983373471972705, worksheet.outputs_costs_nd489, 0.002); end
  def test_outputs_costs_nd490; assert_in_epsilon(60.548955889688386, worksheet.outputs_costs_nd490, 0.002); end
  def test_outputs_costs_nd491; assert_in_epsilon(788.7252665088307, worksheet.outputs_costs_nd491, 0.002); end
  def test_outputs_costs_nd492; assert_in_epsilon(55.00155707410326, worksheet.outputs_costs_nd492, 0.002); end
  def test_outputs_costs_nd493; assert_in_epsilon(72.63382454987257, worksheet.outputs_costs_nd493, 0.002); end
  def test_outputs_costs_nd494; assert_in_delta(0.3736374598199041, worksheet.outputs_costs_nd494, 0.002); end
  def test_outputs_costs_nd495; assert_in_delta(0.3953265450045989, worksheet.outputs_costs_nd495, 0.002); end
  def test_outputs_costs_nd496; assert_in_epsilon(659.2066439038929, worksheet.outputs_costs_nd496, 0.002); end
  def test_outputs_costs_nd497; assert_in_epsilon(59.14808613658295, worksheet.outputs_costs_nd497, 0.002); end
  def test_outputs_costs_nd498; assert_in_epsilon(59.18852605650374, worksheet.outputs_costs_nd498, 0.002); end
  def test_outputs_costs_nd499; assert_in_delta(0.1999872456886504, worksheet.outputs_costs_nd499, 0.002); end
  def test_outputs_costs_nd500; assert_in_delta(0.3600050303019584, worksheet.outputs_costs_nd500, 0.002); end
  def test_outputs_costs_nd501; assert_in_epsilon(170.94485962352388, worksheet.outputs_costs_nd501, 0.002); end
  def test_outputs_costs_nd502; assert_in_epsilon(251.87120789569104, worksheet.outputs_costs_nd502, 0.002); end
  def test_outputs_costs_nd503; assert_in_epsilon(187.18347795028262, worksheet.outputs_costs_nd503, 0.002); end
  def test_outputs_costs_nd504; assert_in_epsilon(15.641062413360931, worksheet.outputs_costs_nd504, 0.002); end
  def test_outputs_costs_nd505; assert_in_epsilon(233.96934909656858, worksheet.outputs_costs_nd505, 0.002); end
  def test_outputs_costs_nd506; assert_in_epsilon(21.22419570428965, worksheet.outputs_costs_nd506, 0.002); end
  def test_outputs_costs_nd507; assert_in_epsilon(22.392490785297078, worksheet.outputs_costs_nd507, 0.002); end
  def test_outputs_costs_nd508; assert_in_delta(0.0003433429740555509, worksheet.outputs_costs_nd508, 0.002); end
  def test_outputs_costs_nd509; assert_in_delta(0.13555503316903716, worksheet.outputs_costs_nd509, 0.002); end
  def test_outputs_costs_nd510; assert_in_epsilon(12.990366570544207, worksheet.outputs_costs_nd510, 0.002); end
  def test_outputs_costs_nd511; assert_in_epsilon(19.556183219659236, worksheet.outputs_costs_nd511, 0.002); end
  def test_outputs_costs_nd512; assert_in_epsilon(877.6690880959177, worksheet.outputs_costs_nd512, 0.002); end
  def test_outputs_costs_nd513; assert_in_delta(0.0, (worksheet.outputs_costs_nd513||0), 0.002); end
  def test_outputs_costs_nd514; assert_in_epsilon(146.50433110012625, worksheet.outputs_costs_nd514, 0.002); end
  def test_outputs_costs_nd515; assert_in_delta(0.0, (worksheet.outputs_costs_nd515||0), 0.002); end
  def test_outputs_costs_nd516; assert_in_epsilon(5881.897675377036, worksheet.outputs_costs_nd516, 0.002); end
  def test_outputs_costs_nd517; assert_in_epsilon(691.4840338155834, worksheet.outputs_costs_nd517, 0.002); end
  def test_outputs_costs_nd518; assert_in_epsilon(1843.1672647179053, worksheet.outputs_costs_nd518, 0.002); end
  def test_outputs_costs_nd519; assert_in_epsilon(36.06029304192344, worksheet.outputs_costs_nd519, 0.002); end
  def test_outputs_costs_nd520; assert_in_epsilon(280.33393775862623, worksheet.outputs_costs_nd520, 0.002); end
  def test_outputs_costs_nd521; assert_in_epsilon(1126.7807307071316, worksheet.outputs_costs_nd521, 0.002); end
  def test_outputs_costs_nd522; assert_in_epsilon(37.980842093371024, worksheet.outputs_costs_nd522, 0.002); end
  def test_outputs_costs_nd523; assert_in_epsilon(63.76252696910867, worksheet.outputs_costs_nd523, 0.002); end
  def test_outputs_costs_nd524; assert_in_delta(0.0, (worksheet.outputs_costs_nd524||0), 0.002); end
  def test_outputs_costs_nd525; assert_in_epsilon(85.72892105740218, worksheet.outputs_costs_nd525, 0.002); end
  def test_outputs_costs_nd526; assert_in_epsilon(180.75190008273694, worksheet.outputs_costs_nd526, 0.002); end
  def test_outputs_costs_nd527; assert_in_epsilon(54.469503234313315, worksheet.outputs_costs_nd527, 0.002); end
  def test_outputs_costs_nd528; assert_in_epsilon(114.79331832084165, worksheet.outputs_costs_nd528, 0.002); end
  def test_outputs_costs_nd529; assert_in_epsilon(2.202327267330684, worksheet.outputs_costs_nd529, 0.002); end
  def test_outputs_costs_nd530; assert_in_epsilon(30.956949141946716, worksheet.outputs_costs_nd530, 0.002); end
  def test_outputs_costs_nd531; assert_in_delta(0.0, (worksheet.outputs_costs_nd531||0), 0.002); end
  def test_outputs_costs_nd532; assert_in_delta(0.0, (worksheet.outputs_costs_nd532||0), 0.002); end
  def test_outputs_costs_nd533; assert_in_epsilon(440.59407198496876, worksheet.outputs_costs_nd533, 0.002); end
  def test_outputs_costs_nd534; assert_in_epsilon(29.298123493908626, worksheet.outputs_costs_nd534, 0.002); end
  def test_outputs_costs_nd535; assert_in_epsilon(114.50301569693386, worksheet.outputs_costs_nd535, 0.002); end
  def test_outputs_costs_nd536; assert_in_epsilon(101.69723984585627, worksheet.outputs_costs_nd536, 0.002); end
  def test_outputs_costs_nd537; assert_in_epsilon(6.905278680240474, worksheet.outputs_costs_nd537, 0.002); end
  def test_outputs_costs_nd538; assert_in_epsilon(28.099080167346756, worksheet.outputs_costs_nd538, 0.002); end
  def test_outputs_costs_nd539; assert_in_epsilon(4.937036194069995, worksheet.outputs_costs_nd539, 0.002); end
  def test_outputs_costs_nd540; assert_in_epsilon(15.231624520153538, worksheet.outputs_costs_nd540, 0.002); end
  def test_outputs_costs_nd541; assert_in_epsilon(196.22755896591954, worksheet.outputs_costs_nd541, 0.002); end
  def test_outputs_costs_nd542; assert_in_epsilon(350.595472578231, worksheet.outputs_costs_nd542, 0.002); end
  def test_outputs_costs_nd543; assert_in_epsilon(54.55488587022252, worksheet.outputs_costs_nd543, 0.002); end
  def test_outputs_costs_nd544; assert_in_epsilon(41.19174979514156, worksheet.outputs_costs_nd544, 0.002); end
  def test_outputs_costs_nd545; assert_in_delta(0.0, (worksheet.outputs_costs_nd545||0), 0.002); end
  def test_outputs_costs_nd546; assert_in_epsilon(12.991813558246644, worksheet.outputs_costs_nd546, 0.002); end
  def test_outputs_costs_nd547; assert_in_epsilon(1.7655010115583143, worksheet.outputs_costs_nd547, 0.002); end
  def test_outputs_costs_nd548; assert_in_epsilon(1.195859089785163, worksheet.outputs_costs_nd548, 0.002); end
  def test_outputs_costs_nd549; assert_in_delta(0.0, (worksheet.outputs_costs_nd549||0), 0.002); end
  def test_outputs_costs_nd550; assert_in_epsilon(9.42430024868205, worksheet.outputs_costs_nd550, 0.002); end
  def test_outputs_costs_nd551; assert_in_epsilon(15.953610321679461, worksheet.outputs_costs_nd551, 0.002); end
  def test_outputs_costs_nd552; assert_in_delta(0.0, (worksheet.outputs_costs_nd552||0), 0.002); end
  def test_outputs_costs_nd553; assert_in_epsilon(257.597111159651, worksheet.outputs_costs_nd553, 0.002); end
  def test_outputs_costs_nd554; assert_in_epsilon(177.67131665045272, worksheet.outputs_costs_nd554, 0.002); end
  def test_outputs_costs_nd555; assert_in_epsilon(236.44197512713572, worksheet.outputs_costs_nd555, 0.002); end
  def test_outputs_costs_nd556; assert_in_epsilon(181.64185569131712, worksheet.outputs_costs_nd556, 0.002); end
  def test_outputs_costs_nd557; assert_in_epsilon(830.8464590747171, worksheet.outputs_costs_nd557, 0.002); end
  def test_outputs_costs_nd558; assert_in_epsilon(1178.2297584226058, worksheet.outputs_costs_nd558, 0.002); end
  def test_outputs_costs_nd559; assert_in_epsilon(47.15874611150748, worksheet.outputs_costs_nd559, 0.002); end
  def test_outputs_costs_nd560; assert_in_epsilon(22.8498972951548, worksheet.outputs_costs_nd560, 0.002); end
  def test_outputs_costs_nd561; assert_in_epsilon(61.26975898137057, worksheet.outputs_costs_nd561, 0.002); end
  def test_outputs_costs_nd562; assert_in_epsilon(15.183089508267564, worksheet.outputs_costs_nd562, 0.002); end
  def test_outputs_costs_nd563; assert_in_epsilon(173.2726529635521, worksheet.outputs_costs_nd563, 0.002); end
  def test_outputs_costs_nd564; assert_in_epsilon(267.20645518545695, worksheet.outputs_costs_nd564, 0.002); end
  def test_outputs_costs_nd565; assert_in_epsilon(11.328554867718175, worksheet.outputs_costs_nd565, 0.002); end
  def test_outputs_costs_nd566; assert_in_epsilon(41.31198673820212, worksheet.outputs_costs_nd566, 0.002); end
  def test_outputs_costs_nd567; assert_in_epsilon(110.16529796853904, worksheet.outputs_costs_nd567, 0.002); end
  def test_outputs_costs_nd568; assert_in_epsilon(79.1495062699797, worksheet.outputs_costs_nd568, 0.002); end
  def test_outputs_costs_nd569; assert_in_epsilon(2.2626213100898815, worksheet.outputs_costs_nd569, 0.002); end
  def test_outputs_costs_nd570; assert_in_epsilon(3.3291703205418632, worksheet.outputs_costs_nd570, 0.002); end
  def test_outputs_costs_nd571; assert_in_epsilon(6.504905332703266, worksheet.outputs_costs_nd571, 0.002); end
  def test_outputs_costs_nd572; assert_in_epsilon(1.9514715998109795, worksheet.outputs_costs_nd572, 0.002); end
  def test_outputs_costs_nd573; assert_in_epsilon(2.223431133950132, worksheet.outputs_costs_nd573, 0.002); end
  def test_outputs_costs_nd574; assert_in_epsilon(3.343403411726114, worksheet.outputs_costs_nd574, 0.002); end
  def test_outputs_costs_nd575; assert_in_epsilon(29.797434088809446, worksheet.outputs_costs_nd575, 0.002); end
  def test_outputs_costs_nd576; assert_in_epsilon(1.204947646865082, worksheet.outputs_costs_nd576, 0.002); end
  def test_outputs_costs_nd577; assert_in_epsilon(15.747404729597722, worksheet.outputs_costs_nd577, 0.002); end
  def test_outputs_costs_nd578; assert_in_delta(0.7609662871413716, worksheet.outputs_costs_nd578, 0.002); end
  def test_outputs_costs_nd579; assert_in_epsilon(5.7700747978319535, worksheet.outputs_costs_nd579, 0.002); end
  def test_outputs_costs_nd580; assert_in_delta(0.21719849179363726, worksheet.outputs_costs_nd580, 0.002); end
  def test_outputs_costs_nd581; assert_in_epsilon(1.4809166185772429, worksheet.outputs_costs_nd581, 0.002); end
  def test_outputs_costs_nd582; assert_in_delta(0.03626528821606921, worksheet.outputs_costs_nd582, 0.002); end
  def test_outputs_costs_nd583; assert_in_epsilon(7.271386113653297, worksheet.outputs_costs_nd583, 0.002); end
  def test_outputs_costs_nd584; assert_in_epsilon(29.08554445461319, worksheet.outputs_costs_nd584, 0.002); end
  def test_outputs_costs_nd585; assert_in_epsilon(19.43920651290771, worksheet.outputs_costs_nd585, 0.002); end
  def test_outputs_costs_nd586; assert_in_epsilon(77.75682605163084, worksheet.outputs_costs_nd586, 0.002); end
  def test_outputs_costs_nd587; assert_in_epsilon(3.138665101307496, worksheet.outputs_costs_nd587, 0.002); end
  def test_outputs_costs_nd588; assert_in_epsilon(8.668807472470505, worksheet.outputs_costs_nd588, 0.002); end
  def test_outputs_costs_nd589; assert_in_delta(0.3220777707748661, worksheet.outputs_costs_nd589, 0.002); end
  def test_outputs_costs_nd590; assert_in_epsilon(4.342060543666769, worksheet.outputs_costs_nd590, 0.002); end
  def test_outputs_costs_nd591; assert_in_epsilon(21.185914484183414, worksheet.outputs_costs_nd591, 0.002); end
  def test_outputs_costs_nd592; assert_in_epsilon(19.866597926375015, worksheet.outputs_costs_nd592, 0.002); end
  def test_outputs_costs_nd593; assert_in_delta(0.0, (worksheet.outputs_costs_nd593||0), 0.002); end
  def test_outputs_costs_nd594; assert_in_delta(0.0, (worksheet.outputs_costs_nd594||0), 0.002); end
  def test_outputs_costs_nd595; assert_in_delta(0.0, (worksheet.outputs_costs_nd595||0), 0.002); end
  def test_outputs_costs_nd596; assert_in_epsilon(5.9842741404489335, worksheet.outputs_costs_nd596, 0.002); end
  def test_outputs_costs_nd597; assert_in_delta(0.005528424297861781, worksheet.outputs_costs_nd597, 0.002); end
  def test_outputs_costs_nd598; assert_in_delta(0.0, (worksheet.outputs_costs_nd598||0), 0.002); end
  def test_outputs_costs_nd599; assert_in_epsilon(18.784072743693695, worksheet.outputs_costs_nd599, 0.002); end
  def test_outputs_costs_nd600; assert_in_epsilon(1.195805975794607, worksheet.outputs_costs_nd600, 0.002); end
  def test_outputs_costs_nd601; assert_in_epsilon(5.659364677970897, worksheet.outputs_costs_nd601, 0.002); end
  def test_outputs_costs_nd602; assert_in_delta(0.44822104802960083, worksheet.outputs_costs_nd602, 0.002); end
  def test_outputs_costs_nd603; assert_in_epsilon(2661.879732658115, worksheet.outputs_costs_nd603, 0.002); end
  def test_outputs_costs_nd604; assert_in_epsilon(3.8800849715018924, worksheet.outputs_costs_nd604, 0.002); end
  def test_outputs_costs_nd605; assert_in_epsilon(1.0959987965706526, worksheet.outputs_costs_nd605, 0.002); end
  def test_outputs_costs_nd606; assert_in_epsilon(1.130155286243259, worksheet.outputs_costs_nd606, 0.002); end
  def test_outputs_costs_nd607; assert_in_delta(0.5847383041071563, worksheet.outputs_costs_nd607, 0.002); end
  def test_outputs_costs_nd608; assert_in_delta(0.6477780771760422, worksheet.outputs_costs_nd608, 0.002); end
  def test_outputs_costs_nd609; assert_in_epsilon(2790.9492214870716, worksheet.outputs_costs_nd609, 0.002); end
  def test_outputs_costs_nd610; assert_in_epsilon(20.69379031982436, worksheet.outputs_costs_nd610, 0.002); end
  def test_outputs_costs_nd611; assert_in_epsilon(654.8994384728258, worksheet.outputs_costs_nd611, 0.002); end
  def test_outputs_costs_nd612; assert_in_epsilon(232.28271627948212, worksheet.outputs_costs_nd612, 0.002); end
  def test_outputs_costs_nd613; assert_in_epsilon(372.4852104730028, worksheet.outputs_costs_nd613, 0.002); end
  def test_outputs_costs_nd614; assert_in_epsilon(145.50443830581517, worksheet.outputs_costs_nd614, 0.002); end
  def test_outputs_costs_nd615; assert_in_epsilon(104.99000002500289, worksheet.outputs_costs_nd615, 0.002); end
  def test_outputs_costs_nd616; assert_in_epsilon(14.898731889370202, worksheet.outputs_costs_nd616, 0.002); end
  def test_outputs_costs_nd617; assert_in_epsilon(584.8365558723921, worksheet.outputs_costs_nd617, 0.002); end
  def test_outputs_costs_nd618; assert_in_epsilon(173.2993342413925, worksheet.outputs_costs_nd618, 0.002); end
  def test_outputs_costs_nd619; assert_in_epsilon(105.61207714206799, worksheet.outputs_costs_nd619, 0.002); end
  def test_outputs_costs_nd620; assert_in_epsilon(380.4101928526712, worksheet.outputs_costs_nd620, 0.002); end
  def test_outputs_costs_nd621; assert_in_epsilon(317.0008730056793, worksheet.outputs_costs_nd621, 0.002); end
  def test_outputs_costs_nd622; assert_in_epsilon(684.0602843075285, worksheet.outputs_costs_nd622, 0.002); end
  def test_outputs_costs_nd623; assert_in_epsilon(379.79306176290777, worksheet.outputs_costs_nd623, 0.002); end
  def test_outputs_costs_nd624; assert_in_epsilon(3594.175145705596, worksheet.outputs_costs_nd624, 0.002); end
  def test_outputs_costs_nd625; assert_in_epsilon(895.0799970081462, worksheet.outputs_costs_nd625, 0.002); end
  def test_outputs_costs_nd626; assert_in_epsilon(1135.1506182707935, worksheet.outputs_costs_nd626, 0.002); end
  def test_outputs_costs_nd627; assert_in_epsilon(132.51521319248133, worksheet.outputs_costs_nd627, 0.002); end
  def test_outputs_costs_nd628; assert_in_epsilon(298.14152248189043, worksheet.outputs_costs_nd628, 0.002); end
  def test_outputs_costs_nd629; assert_in_epsilon(1409.5852487426023, worksheet.outputs_costs_nd629, 0.002); end
  def test_outputs_costs_nd630; assert_in_epsilon(31.892538879466247, worksheet.outputs_costs_nd630, 0.002); end
  def test_outputs_costs_nd631; assert_in_epsilon(89.14615659282785, worksheet.outputs_costs_nd631, 0.002); end
  def test_outputs_costs_nd632; assert_in_epsilon(254.04889992571697, worksheet.outputs_costs_nd632, 0.002); end
  def test_outputs_costs_nd633; assert_in_epsilon(227.3226979583411, worksheet.outputs_costs_nd633, 0.002); end
  def test_outputs_costs_nd634; assert_in_epsilon(8.52275292615301, worksheet.outputs_costs_nd634, 0.002); end
  def test_outputs_costs_nd635; assert_in_epsilon(2.3479016762369245, worksheet.outputs_costs_nd635, 0.002); end
  def test_outputs_costs_nd636; assert_in_delta(0.0, (worksheet.outputs_costs_nd636||0), 0.002); end
  def test_outputs_costs_nd637; assert_in_delta(0.0, (worksheet.outputs_costs_nd637||0), 0.002); end
  def test_outputs_costs_nd638; assert_in_delta(0.0, (worksheet.outputs_costs_nd638||0), 0.002); end
  def test_outputs_costs_nd639; assert_in_epsilon(1.2220003488742965, worksheet.outputs_costs_nd639, 0.002); end
  def test_outputs_costs_nd640; assert_in_delta(0.0, (worksheet.outputs_costs_nd640||0), 0.002); end
  def test_outputs_costs_nd641; assert_in_epsilon(151.15108646544655, worksheet.outputs_costs_nd641, 0.002); end
  def test_outputs_costs_nd642; assert_in_epsilon(37.4279980922771, worksheet.outputs_costs_nd642, 0.002); end
  def test_outputs_costs_nd643; assert_in_epsilon(66.43828018556394, worksheet.outputs_costs_nd643, 0.002); end
  def test_outputs_costs_nd644; assert_in_epsilon(418.4216877917368, worksheet.outputs_costs_nd644, 0.002); end
  def test_outputs_costs_nd645; assert_in_epsilon(3.229784119798925, worksheet.outputs_costs_nd645, 0.002); end
  def test_outputs_costs_nd646; assert_in_epsilon(17.9532812182982, worksheet.outputs_costs_nd646, 0.002); end
  def test_outputs_costs_nd647; assert_in_epsilon(59.066284628922965, worksheet.outputs_costs_nd647, 0.002); end
  def test_outputs_costs_nd648; assert_in_epsilon(29.942093803561107, worksheet.outputs_costs_nd648, 0.002); end
  def test_outputs_costs_nd649; assert_in_epsilon(29.15578893663437, worksheet.outputs_costs_nd649, 0.002); end
  def test_outputs_costs_nd650; assert_in_epsilon(74.64888080799926, worksheet.outputs_costs_nd650, 0.002); end
  def test_outputs_costs_nd248; assert_in_epsilon(148.5454225848939, worksheet.outputs_costs_nd248, 0.002); end
  def test_outputs_costs_nd249; assert_in_epsilon(353.1424140255835, worksheet.outputs_costs_nd249, 0.002); end
  def test_outputs_costs_nd250; assert_in_epsilon(300.8029877911603, worksheet.outputs_costs_nd250, 0.002); end
  def test_outputs_costs_nd251; assert_in_epsilon(5368.178404061233, worksheet.outputs_costs_nd251, 0.002); end
  def test_outputs_costs_nd252; assert_in_epsilon(140.9429595346026, worksheet.outputs_costs_nd252, 0.002); end
  def test_outputs_costs_nd253; assert_in_epsilon(483.57068772630817, worksheet.outputs_costs_nd253, 0.002); end
  def test_outputs_costs_nd254; assert_in_epsilon(237.99757926002763, worksheet.outputs_costs_nd254, 0.002); end
  def test_outputs_costs_nd255; assert_in_delta(0.0, (worksheet.outputs_costs_nd255||0), 0.002); end
  def test_outputs_costs_nd256; assert_in_epsilon(713.3878848655291, worksheet.outputs_costs_nd256, 0.002); end
  def test_outputs_costs_nd257; assert_in_epsilon(27.67849883747894, worksheet.outputs_costs_nd257, 0.002); end
  def test_outputs_costs_nd258; assert_in_epsilon(52.34075249519532, worksheet.outputs_costs_nd258, 0.002); end
  def test_outputs_costs_nd259; assert_in_epsilon(19.66747743926647, worksheet.outputs_costs_nd259, 0.002); end
  def test_outputs_costs_nd260; assert_in_delta(0.0, (worksheet.outputs_costs_nd260||0), 0.002); end
  def test_outputs_costs_nd261; assert_in_epsilon(10.84878080643007, worksheet.outputs_costs_nd261, 0.002); end
  def test_outputs_costs_nd262; assert_in_epsilon(97.6254330900002, worksheet.outputs_costs_nd262, 0.002); end
  def test_outputs_costs_nd263; assert_in_epsilon(56.65412740627366, worksheet.outputs_costs_nd263, 0.002); end
  def test_outputs_costs_nd264; assert_in_epsilon(167.31245893448596, worksheet.outputs_costs_nd264, 0.002); end
  def test_outputs_costs_nd265; assert_in_epsilon(133.32067849657406, worksheet.outputs_costs_nd265, 0.002); end
  def test_outputs_costs_nd266; assert_in_epsilon(1898.3796820677137, worksheet.outputs_costs_nd266, 0.002); end
  def test_outputs_costs_nd267; assert_in_epsilon(49.47571156030367, worksheet.outputs_costs_nd267, 0.002); end
  def test_outputs_costs_nd268; assert_in_epsilon(172.98545577949196, worksheet.outputs_costs_nd268, 0.002); end
  def test_outputs_costs_nd269; assert_in_epsilon(83.27155397536893, worksheet.outputs_costs_nd269, 0.002); end
  def test_outputs_costs_nd270; assert_in_delta(0.0, (worksheet.outputs_costs_nd270||0), 0.002); end
  def test_outputs_costs_nd271; assert_in_epsilon(121.7699266669816, worksheet.outputs_costs_nd271, 0.002); end
  def test_outputs_costs_nd272; assert_in_epsilon(4.848244172831567, worksheet.outputs_costs_nd272, 0.002); end
  def test_outputs_costs_nd273; assert_in_epsilon(8.895415071525811, worksheet.outputs_costs_nd273, 0.002); end
  def test_outputs_costs_nd274; assert_in_epsilon(3.3171543165265702, worksheet.outputs_costs_nd274, 0.002); end
  def test_outputs_costs_nd275; assert_in_delta(0.0, (worksheet.outputs_costs_nd275||0), 0.002); end
  def test_outputs_costs_nd276; assert_in_epsilon(62.97897518613066, worksheet.outputs_costs_nd276, 0.002); end
  def test_outputs_costs_nd277; assert_in_epsilon(127.72674371248398, worksheet.outputs_costs_nd277, 0.002); end
  def test_outputs_costs_nd278; assert_in_epsilon(286.47448135445086, worksheet.outputs_costs_nd278, 0.002); end
  def test_outputs_costs_nd279; assert_in_delta(0.0, (worksheet.outputs_costs_nd279||0), 0.002); end
  def test_outputs_costs_nd280; assert_in_epsilon(1477.5470126394516, worksheet.outputs_costs_nd280, 0.002); end
  def test_outputs_costs_nd281; assert_in_delta(0.0, (worksheet.outputs_costs_nd281||0), 0.002); end
  def test_outputs_costs_nd282; assert_in_epsilon(78.12617700005455, worksheet.outputs_costs_nd282, 0.002); end
  def test_outputs_costs_nd283; assert_in_epsilon(73.3489937276674, worksheet.outputs_costs_nd283, 0.002); end
  def test_outputs_costs_nd284; assert_in_epsilon(977.0542279359628, worksheet.outputs_costs_nd284, 0.002); end
  def test_outputs_costs_nd285; assert_in_epsilon(68.20857613979757, worksheet.outputs_costs_nd285, 0.002); end
  def test_outputs_costs_nd286; assert_in_epsilon(89.77245996126713, worksheet.outputs_costs_nd286, 0.002); end
  def test_outputs_costs_nd287; assert_in_delta(0.43076794278908864, worksheet.outputs_costs_nd287, 0.002); end
  def test_outputs_costs_nd288; assert_in_delta(0.44033166505305354, worksheet.outputs_costs_nd288, 0.002); end
  def test_outputs_costs_nd289; assert_in_epsilon(816.1125173417288, worksheet.outputs_costs_nd289, 0.002); end
  def test_outputs_costs_nd290; assert_in_epsilon(73.31539105895615, worksheet.outputs_costs_nd290, 0.002); end
  def test_outputs_costs_nd291; assert_in_epsilon(73.05508155296276, worksheet.outputs_costs_nd291, 0.002); end
  def test_outputs_costs_nd292; assert_in_delta(0.23055809202817235, worksheet.outputs_costs_nd292, 0.002); end
  def test_outputs_costs_nd293; assert_in_delta(0.4009743987403766, worksheet.outputs_costs_nd293, 0.002); end
  def test_outputs_costs_nd294; assert_in_epsilon(202.3204184896918, worksheet.outputs_costs_nd294, 0.002); end
  def test_outputs_costs_nd295; assert_in_epsilon(297.5618580600318, worksheet.outputs_costs_nd295, 0.002); end
  def test_outputs_costs_nd296; assert_in_epsilon(228.58316450424184, worksheet.outputs_costs_nd296, 0.002); end
  def test_outputs_costs_nd297; assert_in_epsilon(16.01881436877482, worksheet.outputs_costs_nd297, 0.002); end
  def test_outputs_costs_nd298; assert_in_epsilon(289.60120489410644, worksheet.outputs_costs_nd298, 0.002); end
  def test_outputs_costs_nd299; assert_in_epsilon(26.302666481386325, worksheet.outputs_costs_nd299, 0.002); end
  def test_outputs_costs_nd300; assert_in_epsilon(27.64887862475152, worksheet.outputs_costs_nd300, 0.002); end
  def test_outputs_costs_nd301; assert_in_delta(0.00039577926016499086, worksheet.outputs_costs_nd301, 0.002); end
  def test_outputs_costs_nd302; assert_in_delta(0.15096152048474798, worksheet.outputs_costs_nd302, 0.002); end
  def test_outputs_costs_nd303; assert_in_epsilon(15.337640312145215, worksheet.outputs_costs_nd303, 0.002); end
  def test_outputs_costs_nd304; assert_in_epsilon(23.07482448939622, worksheet.outputs_costs_nd304, 0.002); end
  def test_outputs_costs_nd305; assert_in_epsilon(1073.1533842713911, worksheet.outputs_costs_nd305, 0.002); end
  def test_outputs_costs_nd306; assert_in_delta(0.0, (worksheet.outputs_costs_nd306||0), 0.002); end
  def test_outputs_costs_nd307; assert_in_epsilon(178.20785532085614, worksheet.outputs_costs_nd307, 0.002); end
  def test_outputs_costs_nd308; assert_in_delta(0.0, (worksheet.outputs_costs_nd308||0), 0.002); end
  def test_outputs_costs_nd309; assert_in_epsilon(9769.044316087471, worksheet.outputs_costs_nd309, 0.002); end
  def test_outputs_costs_nd310; assert_in_epsilon(1045.9777214537035, worksheet.outputs_costs_nd310, 0.002); end
  def test_outputs_costs_nd311; assert_in_epsilon(3437.7409290658493, worksheet.outputs_costs_nd311, 0.002); end
  def test_outputs_costs_nd312; assert_in_epsilon(42.52929140668407, worksheet.outputs_costs_nd312, 0.002); end
  def test_outputs_costs_nd313; assert_in_epsilon(343.9228120085555, worksheet.outputs_costs_nd313, 0.002); end
  def test_outputs_costs_nd314; assert_in_epsilon(1382.961373352843, worksheet.outputs_costs_nd314, 0.002); end
  def test_outputs_costs_nd315; assert_in_epsilon(46.89701748589829, worksheet.outputs_costs_nd315, 0.002); end
  def test_outputs_costs_nd316; assert_in_epsilon(78.95807275535591, worksheet.outputs_costs_nd316, 0.002); end
  def test_outputs_costs_nd317; assert_in_delta(0.0, (worksheet.outputs_costs_nd317||0), 0.002); end
  def test_outputs_costs_nd318; assert_in_epsilon(102.90514035711513, worksheet.outputs_costs_nd318, 0.002); end
  def test_outputs_costs_nd319; assert_in_epsilon(215.43448710852385, worksheet.outputs_costs_nd319, 0.002); end
  def test_outputs_costs_nd320; assert_in_epsilon(66.68903922528447, worksheet.outputs_costs_nd320, 0.002); end
  def test_outputs_costs_nd321; assert_in_epsilon(140.57948161437048, worksheet.outputs_costs_nd321, 0.002); end
  def test_outputs_costs_nd322; assert_in_epsilon(2.7163274072057244, worksheet.outputs_costs_nd322, 0.002); end
  def test_outputs_costs_nd323; assert_in_epsilon(38.31808512958716, worksheet.outputs_costs_nd323, 0.002); end
  def test_outputs_costs_nd324; assert_in_delta(0.0, (worksheet.outputs_costs_nd324||0), 0.002); end
  def test_outputs_costs_nd325; assert_in_delta(0.0, (worksheet.outputs_costs_nd325||0), 0.002); end
  def test_outputs_costs_nd326; assert_in_epsilon(545.0514529231775, worksheet.outputs_costs_nd326, 0.002); end
  def test_outputs_costs_nd327; assert_in_epsilon(36.26619018368394, worksheet.outputs_costs_nd327, 0.002); end
  def test_outputs_costs_nd328; assert_in_epsilon(139.76166475196865, worksheet.outputs_costs_nd328, 0.002); end
  def test_outputs_costs_nd329; assert_in_epsilon(125.68918800271034, worksheet.outputs_costs_nd329, 0.002); end
  def test_outputs_costs_nd330; assert_in_epsilon(8.537047536066872, worksheet.outputs_costs_nd330, 0.002); end
  def test_outputs_costs_nd331; assert_in_epsilon(34.23073802134204, worksheet.outputs_costs_nd331, 0.002); end
  def test_outputs_costs_nd332; assert_in_epsilon(5.934746143296811, worksheet.outputs_costs_nd332, 0.002); end
  def test_outputs_costs_nd333; assert_in_epsilon(18.686460725152468, worksheet.outputs_costs_nd333, 0.002); end
  def test_outputs_costs_nd334; assert_in_epsilon(240.178003342689, worksheet.outputs_costs_nd334, 0.002); end
  def test_outputs_costs_nd335; assert_in_epsilon(418.49191818505136, worksheet.outputs_costs_nd335, 0.002); end
  def test_outputs_costs_nd336; assert_in_epsilon(66.77613817376043, worksheet.outputs_costs_nd336, 0.002); end
  def test_outputs_costs_nd337; assert_in_epsilon(50.4554355497512, worksheet.outputs_costs_nd337, 0.002); end
  def test_outputs_costs_nd338; assert_in_delta(0.0, (worksheet.outputs_costs_nd338||0), 0.002); end
  def test_outputs_costs_nd339; assert_in_epsilon(15.543774551200482, worksheet.outputs_costs_nd339, 0.002); end
  def test_outputs_costs_nd340; assert_in_epsilon(2.162547886808403, worksheet.outputs_costs_nd340, 0.002); end
  def test_outputs_costs_nd341; assert_in_epsilon(1.4610806673407644, worksheet.outputs_costs_nd341, 0.002); end
  def test_outputs_costs_nd342; assert_in_delta(0.0, (worksheet.outputs_costs_nd342||0), 0.002); end
  def test_outputs_costs_nd343; assert_in_epsilon(11.54574133357336, worksheet.outputs_costs_nd343, 0.002); end
  def test_outputs_costs_nd344; assert_in_epsilon(19.509174188270606, worksheet.outputs_costs_nd344, 0.002); end
  def test_outputs_costs_nd345; assert_in_delta(0.0, (worksheet.outputs_costs_nd345||0), 0.002); end
  def test_outputs_costs_nd346; assert_in_epsilon(319.0476733284604, worksheet.outputs_costs_nd346, 0.002); end
  def test_outputs_costs_nd347; assert_in_epsilon(220.11993649374728, worksheet.outputs_costs_nd347, 0.002); end
  def test_outputs_costs_nd348; assert_in_epsilon(292.9657818025953, worksheet.outputs_costs_nd348, 0.002); end
  def test_outputs_costs_nd349; assert_in_epsilon(225.205910778111, worksheet.outputs_costs_nd349, 0.002); end
  def test_outputs_costs_nd350; assert_in_epsilon(1035.0936740338152, worksheet.outputs_costs_nd350, 0.002); end
  def test_outputs_costs_nd351; assert_in_epsilon(1467.837961778821, worksheet.outputs_costs_nd351, 0.002); end
  def test_outputs_costs_nd352; assert_in_epsilon(58.39179058516325, worksheet.outputs_costs_nd352, 0.002); end
  def test_outputs_costs_nd353; assert_in_epsilon(28.4622317392004, worksheet.outputs_costs_nd353, 0.002); end
  def test_outputs_costs_nd354; assert_in_epsilon(75.91279937063248, worksheet.outputs_costs_nd354, 0.002); end
  def test_outputs_costs_nd355; assert_in_epsilon(18.810727470133976, worksheet.outputs_costs_nd355, 0.002); end
  def test_outputs_costs_nd356; assert_in_epsilon(215.85563612367076, worksheet.outputs_costs_nd356, 0.002); end
  def test_outputs_costs_nd357; assert_in_epsilon(332.8381343722239, worksheet.outputs_costs_nd357, 0.002); end
  def test_outputs_costs_nd358; assert_in_epsilon(13.96219012672734, worksheet.outputs_costs_nd358, 0.002); end
  def test_outputs_costs_nd359; assert_in_epsilon(50.833804846261806, worksheet.outputs_costs_nd359, 0.002); end
  def test_outputs_costs_nd360; assert_in_epsilon(135.55681292336482, worksheet.outputs_costs_nd360, 0.002); end
  def test_outputs_costs_nd361; assert_in_epsilon(98.61524644835478, worksheet.outputs_costs_nd361, 0.002); end
  def test_outputs_costs_nd362; assert_in_epsilon(2.788792918516904, worksheet.outputs_costs_nd362, 0.002); end
  def test_outputs_costs_nd363; assert_in_epsilon(4.103416322399956, worksheet.outputs_costs_nd363, 0.002); end
  def test_outputs_costs_nd364; assert_in_epsilon(7.993372271962467, worksheet.outputs_costs_nd364, 0.002); end
  def test_outputs_costs_nd365; assert_in_epsilon(2.398011681588739, worksheet.outputs_costs_nd365, 0.002); end
  def test_outputs_costs_nd366; assert_in_epsilon(2.7696177077751085, worksheet.outputs_costs_nd366, 0.002); end
  def test_outputs_costs_nd367; assert_in_epsilon(4.11600153089487, worksheet.outputs_costs_nd367, 0.002); end
  def test_outputs_costs_nd368; assert_in_epsilon(37.207085061420536, worksheet.outputs_costs_nd368, 0.002); end
  def test_outputs_costs_nd369; assert_in_epsilon(1.5013869233201276, worksheet.outputs_costs_nd369, 0.002); end
  def test_outputs_costs_nd370; assert_in_epsilon(19.621033955320122, worksheet.outputs_costs_nd370, 0.002); end
  def test_outputs_costs_nd371; assert_in_delta(0.9369303196946726, worksheet.outputs_costs_nd371, 0.002); end
  def test_outputs_costs_nd372; assert_in_epsilon(7.2017225378372, worksheet.outputs_costs_nd372, 0.002); end
  def test_outputs_costs_nd373; assert_in_delta(0.27056495242553186, worksheet.outputs_costs_nd373, 0.002); end
  def test_outputs_costs_nd374; assert_in_epsilon(1.8445106939681506, worksheet.outputs_costs_nd374, 0.002); end
  def test_outputs_costs_nd375; assert_in_delta(0.044496976077893914, worksheet.outputs_costs_nd375, 0.002); end
  def test_outputs_costs_nd376; assert_in_epsilon(8.721792162394504, worksheet.outputs_costs_nd376, 0.002); end
  def test_outputs_costs_nd377; assert_in_epsilon(34.887168649578015, worksheet.outputs_costs_nd377, 0.002); end
  def test_outputs_costs_nd378; assert_in_epsilon(23.068383027501092, worksheet.outputs_costs_nd378, 0.002); end
  def test_outputs_costs_nd379; assert_in_epsilon(92.27353211000437, worksheet.outputs_costs_nd379, 0.002); end
  def test_outputs_costs_nd380; assert_in_epsilon(3.876053867704309, worksheet.outputs_costs_nd380, 0.002); end
  def test_outputs_costs_nd381; assert_in_epsilon(10.665604110969596, worksheet.outputs_costs_nd381, 0.002); end
  def test_outputs_costs_nd382; assert_in_delta(0.39964962065607984, worksheet.outputs_costs_nd382, 0.002); end
  def test_outputs_costs_nd383; assert_in_epsilon(5.422293926557154, worksheet.outputs_costs_nd383, 0.002); end
  def test_outputs_costs_nd384; assert_in_epsilon(26.466296334101465, worksheet.outputs_costs_nd384, 0.002); end
  def test_outputs_costs_nd385; assert_in_epsilon(24.815495657123467, worksheet.outputs_costs_nd385, 0.002); end
  def test_outputs_costs_nd386; assert_in_delta(0.0, (worksheet.outputs_costs_nd386||0), 0.002); end
  def test_outputs_costs_nd387; assert_in_delta(0.0, (worksheet.outputs_costs_nd387||0), 0.002); end
  def test_outputs_costs_nd388; assert_in_delta(0.0, (worksheet.outputs_costs_nd388||0), 0.002); end
  def test_outputs_costs_nd389; assert_in_epsilon(7.473567877722928, worksheet.outputs_costs_nd389, 0.002); end
  def test_outputs_costs_nd390; assert_in_delta(0.006518519494564854, worksheet.outputs_costs_nd390, 0.002); end
  def test_outputs_costs_nd391; assert_in_delta(0.0, (worksheet.outputs_costs_nd391||0), 0.002); end
  def test_outputs_costs_nd392; assert_in_epsilon(23.4756946406782, worksheet.outputs_costs_nd392, 0.002); end
  def test_outputs_costs_nd393; assert_in_epsilon(1.4844798690904195, worksheet.outputs_costs_nd393, 0.002); end
  def test_outputs_costs_nd394; assert_in_epsilon(7.012540243546585, worksheet.outputs_costs_nd394, 0.002); end
  def test_outputs_costs_nd395; assert_in_delta(0.5515382928868422, worksheet.outputs_costs_nd395, 0.002); end
  def test_outputs_costs_nd396; assert_in_epsilon(3293.4646147116946, worksheet.outputs_costs_nd396, 0.002); end
  def test_outputs_costs_nd397; assert_in_epsilon(4.825009641327049, worksheet.outputs_costs_nd397, 0.002); end
  def test_outputs_costs_nd398; assert_in_epsilon(1.3634930662698115, worksheet.outputs_costs_nd398, 0.002); end
  def test_outputs_costs_nd399; assert_in_epsilon(1.4068392205798184, worksheet.outputs_costs_nd399, 0.002); end
  def test_outputs_costs_nd400; assert_in_delta(0.7083016196426654, worksheet.outputs_costs_nd400, 0.002); end
  def test_outputs_costs_nd401; assert_in_delta(0.8037022381385646, worksheet.outputs_costs_nd401, 0.002); end
  def test_outputs_costs_nd402; assert_in_epsilon(3393.983435193588, worksheet.outputs_costs_nd402, 0.002); end
  def test_outputs_costs_nd403; assert_in_epsilon(25.198759914325663, worksheet.outputs_costs_nd403, 0.002); end
  def test_outputs_costs_nd404; assert_in_epsilon(803.1389296122704, worksheet.outputs_costs_nd404, 0.002); end
  def test_outputs_costs_nd405; assert_in_epsilon(283.0608267150487, worksheet.outputs_costs_nd405, 0.002); end
  def test_outputs_costs_nd406; assert_in_epsilon(454.3568517254304, worksheet.outputs_costs_nd406, 0.002); end
  def test_outputs_costs_nd407; assert_in_epsilon(178.40631506788915, worksheet.outputs_costs_nd407, 0.002); end
  def test_outputs_costs_nd408; assert_in_epsilon(131.74641495036082, worksheet.outputs_costs_nd408, 0.002); end
  def test_outputs_costs_nd409; assert_in_epsilon(18.009082763633728, worksheet.outputs_costs_nd409, 0.002); end
  def test_outputs_costs_nd410; assert_in_epsilon(713.779020235336, worksheet.outputs_costs_nd410, 0.002); end
  def test_outputs_costs_nd411; assert_in_epsilon(210.29340091471767, worksheet.outputs_costs_nd411, 0.002); end
  def test_outputs_costs_nd412; assert_in_epsilon(128.89312790781426, worksheet.outputs_costs_nd412, 0.002); end
  def test_outputs_costs_nd413; assert_in_epsilon(464.2698228153741, worksheet.outputs_costs_nd413, 0.002); end
  def test_outputs_costs_nd414; assert_in_epsilon(386.6624379469658, worksheet.outputs_costs_nd414, 0.002); end
  def test_outputs_costs_nd415; assert_in_epsilon(834.3813438326334, worksheet.outputs_costs_nd415, 0.002); end
  def test_outputs_costs_nd416; assert_in_epsilon(463.47339567382664, worksheet.outputs_costs_nd416, 0.002); end
  def test_outputs_costs_nd417; assert_in_epsilon(4364.552536339721, worksheet.outputs_costs_nd417, 0.002); end
  def test_outputs_costs_nd418; assert_in_epsilon(1086.8991454359991, worksheet.outputs_costs_nd418, 0.002); end
  def test_outputs_costs_nd419; assert_in_epsilon(1378.524878613719, worksheet.outputs_costs_nd419, 0.002); end
  def test_outputs_costs_nd420; assert_in_epsilon(164.12547031041584, worksheet.outputs_costs_nd420, 0.002); end
  def test_outputs_costs_nd421; assert_in_epsilon(401.29975700578973, worksheet.outputs_costs_nd421, 0.002); end
  def test_outputs_costs_nd422; assert_in_epsilon(1881.0538072724394, worksheet.outputs_costs_nd422, 0.002); end
  def test_outputs_costs_nd423; assert_in_epsilon(39.11584477686231, worksheet.outputs_costs_nd423, 0.002); end
  def test_outputs_costs_nd424; assert_in_epsilon(127.34747875902679, worksheet.outputs_costs_nd424, 0.002); end
  def test_outputs_costs_nd425; assert_in_epsilon(242.91074717707482, worksheet.outputs_costs_nd425, 0.002); end
  def test_outputs_costs_nd426; assert_in_epsilon(255.54073352507066, worksheet.outputs_costs_nd426, 0.002); end
  def test_outputs_costs_nd427; assert_in_epsilon(8.61721692615301, worksheet.outputs_costs_nd427, 0.002); end
  def test_outputs_costs_nd428; assert_in_epsilon(2.667761067594161, worksheet.outputs_costs_nd428, 0.002); end
  def test_outputs_costs_nd429; assert_in_delta(0.0, (worksheet.outputs_costs_nd429||0), 0.002); end
  def test_outputs_costs_nd430; assert_in_delta(0.0, (worksheet.outputs_costs_nd430||0), 0.002); end
  def test_outputs_costs_nd431; assert_in_delta(0.0, (worksheet.outputs_costs_nd431||0), 0.002); end
  def test_outputs_costs_nd432; assert_in_epsilon(1.3079905924484811, worksheet.outputs_costs_nd432, 0.002); end
  def test_outputs_costs_nd433; assert_in_delta(0.0, (worksheet.outputs_costs_nd433||0), 0.002); end
  def test_outputs_costs_nd434; assert_in_epsilon(287.89873735314535, worksheet.outputs_costs_nd434, 0.002); end
  def test_outputs_costs_nd435; assert_in_epsilon(217.67821233484105, worksheet.outputs_costs_nd435, 0.002); end
  def test_outputs_costs_nd436; assert_in_epsilon(88.04210456995482, worksheet.outputs_costs_nd436, 0.002); end
  def test_outputs_costs_nd437; assert_in_epsilon(779.8854549901728, worksheet.outputs_costs_nd437, 0.002); end
  def test_outputs_costs_nd438; assert_in_epsilon(8.249058035328815, worksheet.outputs_costs_nd438, 0.002); end
  def test_outputs_costs_nd439; assert_in_epsilon(21.74299726958907, worksheet.outputs_costs_nd439, 0.002); end
  def test_outputs_costs_nd440; assert_in_epsilon(74.25953215746601, worksheet.outputs_costs_nd440, 0.002); end
  def test_outputs_costs_nd441; assert_in_epsilon(31.332722564370638, worksheet.outputs_costs_nd441, 0.002); end
  def test_outputs_costs_nd442; assert_in_epsilon(41.77379012884651, worksheet.outputs_costs_nd442, 0.002); end
  def test_outputs_costs_nd443; assert_in_epsilon(116.4429034093998, worksheet.outputs_costs_nd443, 0.002); end
  def test_outputs_emissions_p216; assert_in_delta(0.09722222222222222, worksheet.outputs_emissions_p216, 0.002); end
  def test_outputs_emissions_h145; assert_in_delta(0.22302336874517037, worksheet.outputs_emissions_h145, 0.002); end
  def test_outputs_emissions_i145; assert_in_delta(0.22083373742161225, worksheet.outputs_emissions_i145, 0.002); end
  def test_outputs_emissions_j145; assert_in_delta(0.2238824093656446, worksheet.outputs_emissions_j145, 0.002); end
  def test_outputs_emissions_k145; assert_in_delta(0.24146225018340498, worksheet.outputs_emissions_k145, 0.002); end
  def test_outputs_emissions_l145; assert_in_delta(0.25552002061571527, worksheet.outputs_emissions_l145, 0.002); end
  def test_outputs_emissions_p145; assert_in_delta(0.25174798664093284, worksheet.outputs_emissions_p145, 0.002); end
  def test_outputs_emissions_q145; assert_in_delta(0.2609460365509338, worksheet.outputs_emissions_q145, 0.002); end
  def test_outputs_emissions_r145; assert_in_delta(0.2795131976906346, worksheet.outputs_emissions_r145, 0.002); end
  def test_outputs_emissions_s145; assert_in_delta(0.2967821819068948, worksheet.outputs_emissions_s145, 0.002); end
  def test_outputs_emissions_t145; assert_in_delta(0.3146895347078194, worksheet.outputs_emissions_t145, 0.002); end
  def test_outputs_emissions_u145; assert_in_delta(0.33177468823188727, worksheet.outputs_emissions_u145, 0.002); end
  def test_outputs_emissions_v145; assert_in_delta(0.3508388564585396, worksheet.outputs_emissions_v145, 0.002); end
  def test_outputs_emissions_w145; assert_in_delta(0.36727367801913124, worksheet.outputs_emissions_w145, 0.002); end
  def test_outputs_emissions_x145; assert_in_delta(0.38769329222722626, worksheet.outputs_emissions_x145, 0.002); end
  def test_outputs_emissions_y145; assert_in_delta(0.3907688154469699, worksheet.outputs_emissions_y145, 0.002); end
  def test_outputs_emissions_z145; assert_in_delta(0.39296496319133356, worksheet.outputs_emissions_z145, 0.002); end
  def test_outputs_emissions_aa145; assert_in_delta(0.3943779838758047, worksheet.outputs_emissions_aa145, 0.002); end
  def test_outputs_emissions_ab145; assert_in_delta(0.3947456419164765, worksheet.outputs_emissions_ab145, 0.002); end
  def test_outputs_emissions_ac145; assert_in_delta(0.39496436737229934, worksheet.outputs_emissions_ac145, 0.002); end
  def test_outputs_emissions_ad145; assert_in_delta(0.39507433460225244, worksheet.outputs_emissions_ad145, 0.002); end
  def test_outputs_emissions_ae145; assert_in_delta(0.3951126338922071, worksheet.outputs_emissions_ae145, 0.002); end
  def test_outputs_emissions_af145; assert_in_delta(0.3951328184508723, worksheet.outputs_emissions_af145, 0.002); end
  def test_outputs_emissions_ag145; assert_in_delta(0.3951420832601938, worksheet.outputs_emissions_ag145, 0.002); end
  def test_outputs_emissions_ah145; assert_in_delta(0.39514580943638056, worksheet.outputs_emissions_ah145, 0.002); end
  def test_outputs_emissions_h100; assert_in_epsilon(27.174031359999997, worksheet.outputs_emissions_h100, 0.002); end
  def test_outputs_emissions_i100; assert_in_epsilon(28.27281083, worksheet.outputs_emissions_i100, 0.002); end
  def test_outputs_emissions_j100; assert_in_epsilon(30.290309800000003, worksheet.outputs_emissions_j100, 0.002); end
  def test_outputs_emissions_k100; assert_in_epsilon(33.666490020000005, worksheet.outputs_emissions_k100, 0.002); end
  def test_outputs_emissions_l100; assert_in_epsilon(37.03273612, worksheet.outputs_emissions_l100, 0.002); end
  def test_outputs_emissions_p100; assert_in_epsilon(40.17010526275523, worksheet.outputs_emissions_p100, 0.002); end
  def test_outputs_emissions_q100; assert_in_epsilon(41.67817866639009, worksheet.outputs_emissions_q100, 0.002); end
  def test_outputs_emissions_r100; assert_in_epsilon(46.89919898216909, worksheet.outputs_emissions_r100, 0.002); end
  def test_outputs_emissions_s100; assert_in_epsilon(48.881773964792586, worksheet.outputs_emissions_s100, 0.002); end
  def test_outputs_emissions_t100; assert_in_epsilon(54.216499698393676, worksheet.outputs_emissions_t100, 0.002); end
  def test_outputs_emissions_u100; assert_in_epsilon(60.67825405047368, worksheet.outputs_emissions_u100, 0.002); end
  def test_outputs_emissions_v100; assert_in_epsilon(66.89057425669833, worksheet.outputs_emissions_v100, 0.002); end
  def test_outputs_emissions_w100; assert_in_epsilon(65.60404070983573, worksheet.outputs_emissions_w100, 0.002); end
  def test_outputs_emissions_x100; assert_in_epsilon(72.15273192517141, worksheet.outputs_emissions_x100, 0.002); end
  def test_outputs_emissions_y100; assert_in_epsilon(72.78382820827979, worksheet.outputs_emissions_y100, 0.002); end
  def test_outputs_emissions_z100; assert_in_epsilon(73.10795717561676, worksheet.outputs_emissions_z100, 0.002); end
  def test_outputs_emissions_aa100; assert_in_epsilon(73.52067258123472, worksheet.outputs_emissions_aa100, 0.002); end
  def test_outputs_emissions_ab100; assert_in_epsilon(73.5959093173182, worksheet.outputs_emissions_ab100, 0.002); end
  def test_outputs_emissions_ac100; assert_in_epsilon(73.64057377831531, worksheet.outputs_emissions_ac100, 0.002); end
  def test_outputs_emissions_ad100; assert_in_epsilon(73.66986769146374, worksheet.outputs_emissions_ad100, 0.002); end
  def test_outputs_emissions_ae100; assert_in_epsilon(73.67807342252634, worksheet.outputs_emissions_ae100, 0.002); end
  def test_outputs_emissions_af100; assert_in_epsilon(73.68259244831279, worksheet.outputs_emissions_af100, 0.002); end
  def test_outputs_emissions_ag100; assert_in_epsilon(73.68490347516266, worksheet.outputs_emissions_ag100, 0.002); end
  def test_outputs_emissions_ah100; assert_in_epsilon(73.6857304432661, worksheet.outputs_emissions_ah100, 0.002); end
  def test_outputs_emissions_d4; assert_equal("2260 Gt CO2", worksheet.outputs_emissions_d4); end
  def test_outputs_emissions_d5; assert_equal("3010 Gt CO2", worksheet.outputs_emissions_d5); end
  def test_outputs_emissions_c91; assert_equal("Column1", worksheet.outputs_emissions_c91); end
  def test_outputs_emissions_d91; assert_equal("IPCC Sector", worksheet.outputs_emissions_d91); end
  def test_outputs_emissions_h91; assert_equal("1990", worksheet.outputs_emissions_h91); end
  def test_outputs_emissions_i91; assert_equal("1995", worksheet.outputs_emissions_i91); end
  def test_outputs_emissions_j91; assert_equal("2000", worksheet.outputs_emissions_j91); end
  def test_outputs_emissions_k91; assert_equal("2005", worksheet.outputs_emissions_k91); end
  def test_outputs_emissions_l91; assert_equal("2010", worksheet.outputs_emissions_l91); end
  def test_outputs_emissions_n91; assert_equal("2011 historic", worksheet.outputs_emissions_n91); end
  def test_outputs_emissions_p91; assert_equal("2011", worksheet.outputs_emissions_p91); end
  def test_outputs_emissions_q91; assert_equal("2015", worksheet.outputs_emissions_q91); end
  def test_outputs_emissions_r91; assert_equal("2020", worksheet.outputs_emissions_r91); end
  def test_outputs_emissions_s91; assert_equal("2025", worksheet.outputs_emissions_s91); end
  def test_outputs_emissions_t91; assert_equal("2030", worksheet.outputs_emissions_t91); end
  def test_outputs_emissions_u91; assert_equal("2035", worksheet.outputs_emissions_u91); end
  def test_outputs_emissions_v91; assert_equal("2040", worksheet.outputs_emissions_v91); end
  def test_outputs_emissions_w91; assert_equal("2045", worksheet.outputs_emissions_w91); end
  def test_outputs_emissions_x91; assert_equal("2050", worksheet.outputs_emissions_x91); end
  def test_outputs_emissions_y91; assert_equal("2055", worksheet.outputs_emissions_y91); end
  def test_outputs_emissions_z91; assert_equal("2060", worksheet.outputs_emissions_z91); end
  def test_outputs_emissions_aa91; assert_equal("2065", worksheet.outputs_emissions_aa91); end
  def test_outputs_emissions_ab91; assert_equal("2070", worksheet.outputs_emissions_ab91); end
  def test_outputs_emissions_ac91; assert_equal("2075", worksheet.outputs_emissions_ac91); end
  def test_outputs_emissions_ad91; assert_equal("2080", worksheet.outputs_emissions_ad91); end
  def test_outputs_emissions_ae91; assert_equal("2085", worksheet.outputs_emissions_ae91); end
  def test_outputs_emissions_af91; assert_equal("2090", worksheet.outputs_emissions_af91); end
  def test_outputs_emissions_ag91; assert_equal("2095", worksheet.outputs_emissions_ag91); end
  def test_outputs_emissions_ah91; assert_equal("2100", worksheet.outputs_emissions_ah91); end
  def test_outputs_emissions_c92; assert_equal("G.1A", worksheet.outputs_emissions_c92); end
  def test_outputs_emissions_d92; assert_equal("Global Fuel Combustion", worksheet.outputs_emissions_d92); end
  def test_outputs_emissions_h92; assert_in_epsilon(20.98869, worksheet.outputs_emissions_h92, 0.002); end
  def test_outputs_emissions_i92; assert_in_epsilon(21.850990000000003, worksheet.outputs_emissions_i92, 0.002); end
  def test_outputs_emissions_j92; assert_in_epsilon(23.75862, worksheet.outputs_emissions_j92, 0.002); end
  def test_outputs_emissions_k92; assert_in_epsilon(27.50138, worksheet.outputs_emissions_k92, 0.002); end
  def test_outputs_emissions_l92; assert_in_epsilon(30.509400000000003, worksheet.outputs_emissions_l92, 0.002); end
  def test_outputs_emissions_p92; assert_in_epsilon(33.084123008114425, worksheet.outputs_emissions_p92, 0.002); end
  def test_outputs_emissions_q92; assert_in_epsilon(33.88019466361985, worksheet.outputs_emissions_q92, 0.002); end
  def test_outputs_emissions_r92; assert_in_epsilon(38.00000630557987, worksheet.outputs_emissions_r92, 0.002); end
  def test_outputs_emissions_s92; assert_in_epsilon(41.4890583839411, worksheet.outputs_emissions_s92, 0.002); end
  def test_outputs_emissions_t92; assert_in_epsilon(44.99121006629331, worksheet.outputs_emissions_t92, 0.002); end
  def test_outputs_emissions_u92; assert_in_epsilon(46.941734507601645, worksheet.outputs_emissions_u92, 0.002); end
  def test_outputs_emissions_v92; assert_in_epsilon(49.605116119757625, worksheet.outputs_emissions_v92, 0.002); end
  def test_outputs_emissions_w92; assert_in_epsilon(50.86584444438351, worksheet.outputs_emissions_w92, 0.002); end
  def test_outputs_emissions_x92; assert_in_epsilon(52.92550794309285, worksheet.outputs_emissions_x92, 0.002); end
  def test_outputs_emissions_c93; assert_equal("G.1B", worksheet.outputs_emissions_c93); end
  def test_outputs_emissions_d93; assert_equal("Global Fugitive Emissions from Fuels", worksheet.outputs_emissions_d93); end
  def test_outputs_emissions_h93; assert_in_delta(0.16401936, worksheet.outputs_emissions_h93, 0.002); end
  def test_outputs_emissions_i93; assert_in_delta(0.20241883000000002, worksheet.outputs_emissions_i93, 0.002); end
  def test_outputs_emissions_j93; assert_in_delta(0.17221180000000003, worksheet.outputs_emissions_j93, 0.002); end
  def test_outputs_emissions_k93; assert_in_delta(0.21541402, worksheet.outputs_emissions_k93, 0.002); end
  def test_outputs_emissions_l93; assert_in_delta(0.22069656, worksheet.outputs_emissions_l93, 0.002); end
  def test_outputs_emissions_p93; assert_in_delta(0.05049119761404452, worksheet.outputs_emissions_p93, 0.002); end
  def test_outputs_emissions_q93; assert_in_delta(0.0516901402824856, worksheet.outputs_emissions_q93, 0.002); end
  def test_outputs_emissions_r93; assert_in_delta(0.057624419397159295, worksheet.outputs_emissions_r93, 0.002); end
  def test_outputs_emissions_s93; assert_in_delta(0.06252946781786087, worksheet.outputs_emissions_s93, 0.002); end
  def test_outputs_emissions_t93; assert_in_delta(0.06715678414782836, worksheet.outputs_emissions_t93, 0.002); end
  def test_outputs_emissions_u93; assert_in_delta(0.07253395383605489, worksheet.outputs_emissions_u93, 0.002); end
  def test_outputs_emissions_v93; assert_in_delta(0.07670322767484027, worksheet.outputs_emissions_v93, 0.002); end
  def test_outputs_emissions_w93; assert_in_delta(0.08177777543454597, worksheet.outputs_emissions_w93, 0.002); end
  def test_outputs_emissions_x93; assert_in_delta(0.08769078045981217, worksheet.outputs_emissions_x93, 0.002); end
  def test_outputs_emissions_c94; assert_equal("G.2", worksheet.outputs_emissions_c94); end
  def test_outputs_emissions_d94; assert_equal("Global Industrial Processes", worksheet.outputs_emissions_d94); end
  def test_outputs_emissions_h94; assert_in_delta(0.5752480000000001, worksheet.outputs_emissions_h94, 0.002); end
  def test_outputs_emissions_i94; assert_in_delta(0.721808, worksheet.outputs_emissions_i94, 0.002); end
  def test_outputs_emissions_j94; assert_in_delta(0.828064, worksheet.outputs_emissions_j94, 0.002); end
  def test_outputs_emissions_k94; assert_in_epsilon(1.17248, worksheet.outputs_emissions_k94, 0.002); end
  def test_outputs_emissions_l94; assert_in_epsilon(1.65306856, worksheet.outputs_emissions_l94, 0.002); end
  def test_outputs_emissions_p94; assert_in_epsilon(2.3859600570267654, worksheet.outputs_emissions_p94, 0.002); end
  def test_outputs_emissions_q94; assert_in_epsilon(2.503003782105092, worksheet.outputs_emissions_q94, 0.002); end
  def test_outputs_emissions_r94; assert_in_epsilon(2.7259964324120802, worksheet.outputs_emissions_r94, 0.002); end
  def test_outputs_emissions_s94; assert_in_epsilon(2.907485642256546, worksheet.outputs_emissions_s94, 0.002); end
  def test_outputs_emissions_t94; assert_in_epsilon(3.095547167020432, worksheet.outputs_emissions_t94, 0.002); end
  def test_outputs_emissions_u94; assert_in_epsilon(3.2825954786058906, worksheet.outputs_emissions_u94, 0.002); end
  def test_outputs_emissions_v94; assert_in_epsilon(3.4914711357532178, worksheet.outputs_emissions_v94, 0.002); end
  def test_outputs_emissions_w94; assert_in_epsilon(3.704910148939747, worksheet.outputs_emissions_w94, 0.002); end
  def test_outputs_emissions_x94; assert_in_epsilon(3.9442608592253094, worksheet.outputs_emissions_x94, 0.002); end
  def test_outputs_emissions_c95; assert_equal("G.3", worksheet.outputs_emissions_c95); end
  def test_outputs_emissions_d95; assert_equal("Global Solvent and Other Product Use", worksheet.outputs_emissions_d95); end
  def test_outputs_emissions_h95; assert_in_delta(0.0, (worksheet.outputs_emissions_h95||0), 0.002); end
  def test_outputs_emissions_i95; assert_in_delta(0.0, (worksheet.outputs_emissions_i95||0), 0.002); end
  def test_outputs_emissions_j95; assert_in_delta(0.0, (worksheet.outputs_emissions_j95||0), 0.002); end
  def test_outputs_emissions_k95; assert_in_delta(0.0, (worksheet.outputs_emissions_k95||0), 0.002); end
  def test_outputs_emissions_l95; assert_in_delta(0.0, (worksheet.outputs_emissions_l95||0), 0.002); end
  def test_outputs_emissions_p95; assert_in_delta(0.0, (worksheet.outputs_emissions_p95||0), 0.002); end
  def test_outputs_emissions_q95; assert_in_delta(0.0, (worksheet.outputs_emissions_q95||0), 0.002); end
  def test_outputs_emissions_r95; assert_in_delta(0.0, (worksheet.outputs_emissions_r95||0), 0.002); end
  def test_outputs_emissions_s95; assert_in_delta(0.0, (worksheet.outputs_emissions_s95||0), 0.002); end
  def test_outputs_emissions_t95; assert_in_delta(0.0, (worksheet.outputs_emissions_t95||0), 0.002); end
  def test_outputs_emissions_u95; assert_in_delta(0.0, (worksheet.outputs_emissions_u95||0), 0.002); end
  def test_outputs_emissions_v95; assert_in_delta(0.0, (worksheet.outputs_emissions_v95||0), 0.002); end
  def test_outputs_emissions_w95; assert_in_delta(0.0, (worksheet.outputs_emissions_w95||0), 0.002); end
  def test_outputs_emissions_x95; assert_in_delta(0.0, (worksheet.outputs_emissions_x95||0), 0.002); end
  def test_outputs_emissions_c96; assert_equal("G.4", worksheet.outputs_emissions_c96); end
  def test_outputs_emissions_d96; assert_equal("Global Agriculture", worksheet.outputs_emissions_d96); end
  def test_outputs_emissions_h96; assert_in_delta(0.0, (worksheet.outputs_emissions_h96||0), 0.002); end
  def test_outputs_emissions_i96; assert_in_delta(0.0, (worksheet.outputs_emissions_i96||0), 0.002); end
  def test_outputs_emissions_j96; assert_in_delta(0.0, (worksheet.outputs_emissions_j96||0), 0.002); end
  def test_outputs_emissions_k96; assert_in_delta(0.0, (worksheet.outputs_emissions_k96||0), 0.002); end
  def test_outputs_emissions_l96; assert_in_delta(0.0, (worksheet.outputs_emissions_l96||0), 0.002); end
  def test_outputs_emissions_p96; assert_in_delta(0.0, (worksheet.outputs_emissions_p96||0), 0.002); end
  def test_outputs_emissions_q96; assert_in_delta(0.0, (worksheet.outputs_emissions_q96||0), 0.002); end
  def test_outputs_emissions_r96; assert_in_delta(0.0, (worksheet.outputs_emissions_r96||0), 0.002); end
  def test_outputs_emissions_s96; assert_in_delta(0.0, (worksheet.outputs_emissions_s96||0), 0.002); end
  def test_outputs_emissions_t96; assert_in_delta(0.0, (worksheet.outputs_emissions_t96||0), 0.002); end
  def test_outputs_emissions_u96; assert_in_delta(0.0, (worksheet.outputs_emissions_u96||0), 0.002); end
  def test_outputs_emissions_v96; assert_in_delta(0.0, (worksheet.outputs_emissions_v96||0), 0.002); end
  def test_outputs_emissions_w96; assert_in_delta(0.0, (worksheet.outputs_emissions_w96||0), 0.002); end
  def test_outputs_emissions_x96; assert_in_delta(0.0, (worksheet.outputs_emissions_x96||0), 0.002); end
  def test_outputs_emissions_c97; assert_equal("G.5", worksheet.outputs_emissions_c97); end
  def test_outputs_emissions_d97; assert_equal("Global Land Use, Land-Use Change and Forestry", worksheet.outputs_emissions_d97); end
  def test_outputs_emissions_h97; assert_in_epsilon(5.446073999999999, worksheet.outputs_emissions_h97, 0.002); end
  def test_outputs_emissions_i97; assert_in_epsilon(5.497594, worksheet.outputs_emissions_i97, 0.002); end
  def test_outputs_emissions_j97; assert_in_epsilon(5.531414, worksheet.outputs_emissions_j97, 0.002); end
  def test_outputs_emissions_k97; assert_in_epsilon(4.777216, worksheet.outputs_emissions_k97, 0.002); end
  def test_outputs_emissions_l97; assert_in_epsilon(4.649571, worksheet.outputs_emissions_l97, 0.002); end
  def test_outputs_emissions_p97; assert_in_epsilon(4.649531, worksheet.outputs_emissions_p97, 0.002); end
  def test_outputs_emissions_q97; assert_in_epsilon(5.243290080382662, worksheet.outputs_emissions_q97, 0.002); end
  def test_outputs_emissions_r97; assert_in_epsilon(6.115571824779975, worksheet.outputs_emissions_r97, 0.002); end
  def test_outputs_emissions_s97; assert_in_epsilon(4.422700470777077, worksheet.outputs_emissions_s97, 0.002); end
  def test_outputs_emissions_t97; assert_in_epsilon(6.062585680932102, worksheet.outputs_emissions_t97, 0.002); end
  def test_outputs_emissions_u97; assert_in_epsilon(10.38139011043009, worksheet.outputs_emissions_u97, 0.002); end
  def test_outputs_emissions_v97; assert_in_epsilon(13.717283773512651, worksheet.outputs_emissions_v97, 0.002); end
  def test_outputs_emissions_w97; assert_in_epsilon(10.951508341077924, worksheet.outputs_emissions_w97, 0.002); end
  def test_outputs_emissions_x97; assert_in_epsilon(15.195272342393439, worksheet.outputs_emissions_x97, 0.002); end
  def test_outputs_emissions_c98; assert_equal("G.6", worksheet.outputs_emissions_c98); end
  def test_outputs_emissions_d98; assert_equal("Global Waste", worksheet.outputs_emissions_d98); end
  def test_outputs_emissions_h98; assert_in_delta(0.0, (worksheet.outputs_emissions_h98||0), 0.002); end
  def test_outputs_emissions_i98; assert_in_delta(0.0, (worksheet.outputs_emissions_i98||0), 0.002); end
  def test_outputs_emissions_j98; assert_in_delta(0.0, (worksheet.outputs_emissions_j98||0), 0.002); end
  def test_outputs_emissions_k98; assert_in_delta(0.0, (worksheet.outputs_emissions_k98||0), 0.002); end
  def test_outputs_emissions_l98; assert_in_delta(0.0, (worksheet.outputs_emissions_l98||0), 0.002); end
  def test_outputs_emissions_p98; assert_in_delta(0.0, (worksheet.outputs_emissions_p98||0), 0.002); end
  def test_outputs_emissions_q98; assert_in_delta(0.0, (worksheet.outputs_emissions_q98||0), 0.002); end
  def test_outputs_emissions_r98; assert_in_delta(0.0, (worksheet.outputs_emissions_r98||0), 0.002); end
  def test_outputs_emissions_s98; assert_in_delta(0.0, (worksheet.outputs_emissions_s98||0), 0.002); end
  def test_outputs_emissions_t98; assert_in_delta(0.0, (worksheet.outputs_emissions_t98||0), 0.002); end
  def test_outputs_emissions_u98; assert_in_delta(0.0, (worksheet.outputs_emissions_u98||0), 0.002); end
  def test_outputs_emissions_v98; assert_in_delta(0.0, (worksheet.outputs_emissions_v98||0), 0.002); end
  def test_outputs_emissions_w98; assert_in_delta(0.0, (worksheet.outputs_emissions_w98||0), 0.002); end
  def test_outputs_emissions_x98; assert_in_delta(0.0, (worksheet.outputs_emissions_x98||0), 0.002); end
  def test_outputs_emissions_c99; assert_equal("G.7", worksheet.outputs_emissions_c99); end
  def test_outputs_emissions_d99; assert_equal("Global Other", worksheet.outputs_emissions_d99); end
  def test_outputs_emissions_h99; assert_in_delta(0.0, (worksheet.outputs_emissions_h99||0), 0.002); end
  def test_outputs_emissions_i99; assert_in_delta(0.0, (worksheet.outputs_emissions_i99||0), 0.002); end
  def test_outputs_emissions_j99; assert_in_delta(0.0, (worksheet.outputs_emissions_j99||0), 0.002); end
  def test_outputs_emissions_k99; assert_in_delta(0.0, (worksheet.outputs_emissions_k99||0), 0.002); end
  def test_outputs_emissions_l99; assert_in_delta(0.0, (worksheet.outputs_emissions_l99||0), 0.002); end
  def test_outputs_emissions_p99; assert_in_delta(0.0, (worksheet.outputs_emissions_p99||0), 0.002); end
  def test_outputs_emissions_q99; assert_in_delta(0.0, (worksheet.outputs_emissions_q99||0), 0.002); end
  def test_outputs_emissions_r99; assert_in_delta(0.0, (worksheet.outputs_emissions_r99||0), 0.002); end
  def test_outputs_emissions_s99; assert_in_delta(0.0, (worksheet.outputs_emissions_s99||0), 0.002); end
  def test_outputs_emissions_t99; assert_in_delta(0.0, (worksheet.outputs_emissions_t99||0), 0.002); end
  def test_outputs_emissions_u99; assert_in_delta(0.0, (worksheet.outputs_emissions_u99||0), 0.002); end
  def test_outputs_emissions_v99; assert_in_delta(0.0, (worksheet.outputs_emissions_v99||0), 0.002); end
  def test_outputs_emissions_w99; assert_in_delta(0.0, (worksheet.outputs_emissions_w99||0), 0.002); end
  def test_outputs_emissions_x99; assert_in_delta(0.0, (worksheet.outputs_emissions_x99||0), 0.002); end
  def test_outputs_emissions_d100; assert_equal("Total", worksheet.outputs_emissions_d100); end
  def test_outputs_emissions_d101; assert_equal("Cumulative emissions", worksheet.outputs_emissions_d101); end
  def test_outputs_emissions_h101; assert_in_epsilon(805.0, worksheet.outputs_emissions_h101, 0.002); end
  def test_outputs_emissions_i101; assert_in_epsilon(920.0, worksheet.outputs_emissions_i101, 0.002); end
  def test_outputs_emissions_j101; assert_in_epsilon(1041.0, worksheet.outputs_emissions_j101, 0.002); end
  def test_outputs_emissions_k101; assert_in_epsilon(1178.0, worksheet.outputs_emissions_k101, 0.002); end
  def test_outputs_emissions_l101; assert_in_epsilon(1849.8298947372448, worksheet.outputs_emissions_l101, 0.002); end
  def test_outputs_emissions_n101; assert_in_epsilon(1890.0, worksheet.outputs_emissions_n101, 0.002); end
  def test_outputs_emissions_p101; assert_in_epsilon(1890.0, worksheet.outputs_emissions_p101, 0.002); end
  def test_outputs_emissions_q101; assert_in_epsilon(2053.6965678582906, worksheet.outputs_emissions_q101, 0.002); end
  def test_outputs_emissions_r101; assert_in_epsilon(2275.1400119796886, worksheet.outputs_emissions_r101, 0.002); end
  def test_outputs_emissions_s101; assert_in_epsilon(2514.5924443470926, worksheet.outputs_emissions_s101, 0.002); end
  def test_outputs_emissions_t101; assert_in_epsilon(2772.338128505058, worksheet.outputs_emissions_t101, 0.002); end
  def test_outputs_emissions_u101; assert_in_epsilon(3059.5750128772265, worksheet.outputs_emissions_u101, 0.002); end
  def test_outputs_emissions_v101; assert_in_epsilon(3378.4970836451566, worksheet.outputs_emissions_v101, 0.002); end
  def test_outputs_emissions_w101; assert_in_epsilon(3709.7336210614917, worksheet.outputs_emissions_w101, 0.002); end
  def test_outputs_emissions_x101; assert_in_epsilon(4054.1255526490095, worksheet.outputs_emissions_x101, 0.002); end
  def test_outputs_emissions_y101; assert_in_epsilon(4416.466952982638, worksheet.outputs_emissions_y101, 0.002); end
  def test_outputs_emissions_z101; assert_in_epsilon(4781.196416442379, worksheet.outputs_emissions_z101, 0.002); end
  def test_outputs_emissions_aa101; assert_in_epsilon(5147.767990834507, worksheet.outputs_emissions_aa101, 0.002); end
  def test_outputs_emissions_ab101; assert_in_epsilon(5515.55944558089, worksheet.outputs_emissions_ab101, 0.002); end
  def test_outputs_emissions_ac101; assert_in_epsilon(5883.650653319974, worksheet.outputs_emissions_ac101, 0.002); end
  def test_outputs_emissions_ad101; assert_in_epsilon(6251.926756994421, worksheet.outputs_emissions_ad101, 0.002); end
  def test_outputs_emissions_ae101; assert_in_epsilon(6620.296609779397, worksheet.outputs_emissions_ae101, 0.002); end
  def test_outputs_emissions_af101; assert_in_epsilon(6988.698274456495, worksheet.outputs_emissions_af101, 0.002); end
  def test_outputs_emissions_ag101; assert_in_epsilon(7357.117014265184, worksheet.outputs_emissions_ag101, 0.002); end
  def test_outputs_emissions_ah101; assert_in_epsilon(7725.543599061255, worksheet.outputs_emissions_ah101, 0.002); end
  def test_outputs_emissions_d63; assert_equal("Gas", worksheet.outputs_emissions_d63); end
  def test_outputs_emissions_h63; assert_in_epsilon(1990.0, worksheet.outputs_emissions_h63, 0.002); end
  def test_outputs_emissions_i63; assert_in_epsilon(1995.0, worksheet.outputs_emissions_i63, 0.002); end
  def test_outputs_emissions_j63; assert_in_epsilon(2000.0, worksheet.outputs_emissions_j63, 0.002); end
  def test_outputs_emissions_k63; assert_in_epsilon(2005.0, worksheet.outputs_emissions_k63, 0.002); end
  def test_outputs_emissions_l63; assert_in_epsilon(2010.0, worksheet.outputs_emissions_l63, 0.002); end
  def test_outputs_emissions_p63; assert_in_epsilon(2011.0, worksheet.outputs_emissions_p63, 0.002); end
  def test_outputs_emissions_q63; assert_in_epsilon(2015.0, worksheet.outputs_emissions_q63, 0.002); end
  def test_outputs_emissions_r63; assert_in_epsilon(2020.0, worksheet.outputs_emissions_r63, 0.002); end
  def test_outputs_emissions_s63; assert_in_epsilon(2025.0, worksheet.outputs_emissions_s63, 0.002); end
  def test_outputs_emissions_t63; assert_in_epsilon(2030.0, worksheet.outputs_emissions_t63, 0.002); end
  def test_outputs_emissions_u63; assert_in_epsilon(2035.0, worksheet.outputs_emissions_u63, 0.002); end
  def test_outputs_emissions_v63; assert_in_epsilon(2040.0, worksheet.outputs_emissions_v63, 0.002); end
  def test_outputs_emissions_w63; assert_in_epsilon(2045.0, worksheet.outputs_emissions_w63, 0.002); end
  def test_outputs_emissions_x63; assert_in_epsilon(2050.0, worksheet.outputs_emissions_x63, 0.002); end
  def test_outputs_emissions_y63; assert_in_epsilon(2055.0, worksheet.outputs_emissions_y63, 0.002); end
  def test_outputs_emissions_z63; assert_in_epsilon(2060.0, worksheet.outputs_emissions_z63, 0.002); end
  def test_outputs_emissions_aa63; assert_in_epsilon(2065.0, worksheet.outputs_emissions_aa63, 0.002); end
  def test_outputs_emissions_ab63; assert_in_epsilon(2070.0, worksheet.outputs_emissions_ab63, 0.002); end
  def test_outputs_emissions_ac63; assert_in_epsilon(2075.0, worksheet.outputs_emissions_ac63, 0.002); end
  def test_outputs_emissions_ad63; assert_in_epsilon(2080.0, worksheet.outputs_emissions_ad63, 0.002); end
  def test_outputs_emissions_ae63; assert_in_epsilon(2085.0, worksheet.outputs_emissions_ae63, 0.002); end
  def test_outputs_emissions_af63; assert_in_epsilon(2090.0, worksheet.outputs_emissions_af63, 0.002); end
  def test_outputs_emissions_ag63; assert_in_epsilon(2095.0, worksheet.outputs_emissions_ag63, 0.002); end
  def test_outputs_emissions_ah63; assert_in_epsilon(2100.0, worksheet.outputs_emissions_ah63, 0.002); end
  def test_outputs_emissions_d64; assert_equal("CO2", worksheet.outputs_emissions_d64); end
  def test_outputs_emissions_h64; assert_in_epsilon(27.174031359999997, worksheet.outputs_emissions_h64, 0.002); end
  def test_outputs_emissions_i64; assert_in_epsilon(28.27281083, worksheet.outputs_emissions_i64, 0.002); end
  def test_outputs_emissions_j64; assert_in_epsilon(30.290309800000003, worksheet.outputs_emissions_j64, 0.002); end
  def test_outputs_emissions_k64; assert_in_epsilon(33.666490020000005, worksheet.outputs_emissions_k64, 0.002); end
  def test_outputs_emissions_l64; assert_in_epsilon(37.03273612, worksheet.outputs_emissions_l64, 0.002); end
  def test_outputs_emissions_p64; assert_in_epsilon(40.17010526275523, worksheet.outputs_emissions_p64, 0.002); end
  def test_outputs_emissions_q64; assert_in_epsilon(41.67817866639009, worksheet.outputs_emissions_q64, 0.002); end
  def test_outputs_emissions_r64; assert_in_epsilon(46.89919898216909, worksheet.outputs_emissions_r64, 0.002); end
  def test_outputs_emissions_s64; assert_in_epsilon(48.881773964792586, worksheet.outputs_emissions_s64, 0.002); end
  def test_outputs_emissions_t64; assert_in_epsilon(54.216499698393676, worksheet.outputs_emissions_t64, 0.002); end
  def test_outputs_emissions_u64; assert_in_epsilon(60.67825405047368, worksheet.outputs_emissions_u64, 0.002); end
  def test_outputs_emissions_v64; assert_in_epsilon(66.89057425669833, worksheet.outputs_emissions_v64, 0.002); end
  def test_outputs_emissions_w64; assert_in_epsilon(65.60404070983573, worksheet.outputs_emissions_w64, 0.002); end
  def test_outputs_emissions_x64; assert_in_epsilon(72.15273192517141, worksheet.outputs_emissions_x64, 0.002); end
  def test_outputs_emissions_y64; assert_in_epsilon(72.78382820827979, worksheet.outputs_emissions_y64, 0.002); end
  def test_outputs_emissions_z64; assert_in_epsilon(73.10795717561676, worksheet.outputs_emissions_z64, 0.002); end
  def test_outputs_emissions_aa64; assert_in_epsilon(73.52067258123472, worksheet.outputs_emissions_aa64, 0.002); end
  def test_outputs_emissions_ab64; assert_in_epsilon(73.5959093173182, worksheet.outputs_emissions_ab64, 0.002); end
  def test_outputs_emissions_ac64; assert_in_epsilon(73.64057377831531, worksheet.outputs_emissions_ac64, 0.002); end
  def test_outputs_emissions_ad64; assert_in_epsilon(73.66986769146374, worksheet.outputs_emissions_ad64, 0.002); end
  def test_outputs_emissions_ae64; assert_in_epsilon(73.67807342252634, worksheet.outputs_emissions_ae64, 0.002); end
  def test_outputs_emissions_af64; assert_in_epsilon(73.68259244831279, worksheet.outputs_emissions_af64, 0.002); end
  def test_outputs_emissions_ag64; assert_in_epsilon(73.68490347516266, worksheet.outputs_emissions_ag64, 0.002); end
  def test_outputs_emissions_ah64; assert_in_epsilon(73.6857304432661, worksheet.outputs_emissions_ah64, 0.002); end
  def test_outputs_emissions_d65; assert_equal("CH4", worksheet.outputs_emissions_d65); end
  def test_outputs_emissions_h65; assert_in_epsilon(6.467677693609941, worksheet.outputs_emissions_h65, 0.002); end
  def test_outputs_emissions_i65; assert_in_epsilon(6.404178385226755, worksheet.outputs_emissions_i65, 0.002); end
  def test_outputs_emissions_j65; assert_in_epsilon(6.492589871603694, worksheet.outputs_emissions_j65, 0.002); end
  def test_outputs_emissions_k65; assert_in_epsilon(7.002405255318744, worksheet.outputs_emissions_k65, 0.002); end
  def test_outputs_emissions_l65; assert_in_epsilon(7.4100805978557425, worksheet.outputs_emissions_l65, 0.002); end
  def test_outputs_emissions_p65; assert_in_epsilon(7.300691612587053, worksheet.outputs_emissions_p65, 0.002); end
  def test_outputs_emissions_q65; assert_in_epsilon(7.56743505997708, worksheet.outputs_emissions_q65, 0.002); end
  def test_outputs_emissions_r65; assert_in_epsilon(8.105882733028404, worksheet.outputs_emissions_r65, 0.002); end
  def test_outputs_emissions_s65; assert_in_epsilon(8.60668327529995, worksheet.outputs_emissions_s65, 0.002); end
  def test_outputs_emissions_t65; assert_in_epsilon(9.125996506526763, worksheet.outputs_emissions_t65, 0.002); end
  def test_outputs_emissions_u65; assert_in_epsilon(9.62146595872473, worksheet.outputs_emissions_u65, 0.002); end
  def test_outputs_emissions_v65; assert_in_epsilon(10.174326837297649, worksheet.outputs_emissions_v65, 0.002); end
  def test_outputs_emissions_w65; assert_in_epsilon(10.650936662554805, worksheet.outputs_emissions_w65, 0.002); end
  def test_outputs_emissions_x65; assert_in_epsilon(11.243105474589562, worksheet.outputs_emissions_x65, 0.002); end
  def test_outputs_emissions_y65; assert_in_epsilon(11.332295647962127, worksheet.outputs_emissions_y65, 0.002); end
  def test_outputs_emissions_z65; assert_in_epsilon(11.395983932548674, worksheet.outputs_emissions_z65, 0.002); end
  def test_outputs_emissions_aa65; assert_in_epsilon(11.436961532398335, worksheet.outputs_emissions_aa65, 0.002); end
  def test_outputs_emissions_ab65; assert_in_epsilon(11.447623615577818, worksheet.outputs_emissions_ab65, 0.002); end
  def test_outputs_emissions_ac65; assert_in_epsilon(11.45396665379668, worksheet.outputs_emissions_ac65, 0.002); end
  def test_outputs_emissions_ad65; assert_in_epsilon(11.45715570346532, worksheet.outputs_emissions_ad65, 0.002); end
  def test_outputs_emissions_ae65; assert_in_epsilon(11.458266382874005, worksheet.outputs_emissions_ae65, 0.002); end
  def test_outputs_emissions_af65; assert_in_epsilon(11.458851735075296, worksheet.outputs_emissions_af65, 0.002); end
  def test_outputs_emissions_ag65; assert_in_epsilon(11.45912041454562, worksheet.outputs_emissions_ag65, 0.002); end
  def test_outputs_emissions_ah65; assert_in_epsilon(11.459228473655036, worksheet.outputs_emissions_ah65, 0.002); end
  def test_outputs_emissions_d66; assert_equal("N2O", worksheet.outputs_emissions_d66); end
  def test_outputs_emissions_h66; assert_in_epsilon(3.2861341507989916, worksheet.outputs_emissions_h66, 0.002); end
  def test_outputs_emissions_i66; assert_in_epsilon(3.237809653650898, worksheet.outputs_emissions_i66, 0.002); end
  def test_outputs_emissions_j66; assert_in_epsilon(3.1804866694579648, worksheet.outputs_emissions_j66, 0.002); end
  def test_outputs_emissions_k66; assert_in_epsilon(3.405302126508719, worksheet.outputs_emissions_k66, 0.002); end
  def test_outputs_emissions_l66; assert_in_epsilon(3.5694921617384887, worksheet.outputs_emissions_l66, 0.002); end
  def test_outputs_emissions_p66; assert_in_epsilon(2.412802860555091, worksheet.outputs_emissions_p66, 0.002); end
  def test_outputs_emissions_q66; assert_in_epsilon(2.4876296958919517, worksheet.outputs_emissions_q66, 0.002); end
  def test_outputs_emissions_r66; assert_in_epsilon(2.6331955041368826, worksheet.outputs_emissions_r66, 0.002); end
  def test_outputs_emissions_s66; assert_in_epsilon(2.761275080205624, worksheet.outputs_emissions_s66, 0.002); end
  def test_outputs_emissions_t66; assert_in_epsilon(2.895833278725638, worksheet.outputs_emissions_t66, 0.002); end
  def test_outputs_emissions_u66; assert_in_epsilon(3.023294762788338, worksheet.outputs_emissions_u66, 0.002); end
  def test_outputs_emissions_v66; assert_in_epsilon(3.1776244799331463, worksheet.outputs_emissions_v66, 0.002); end
  def test_outputs_emissions_w66; assert_in_epsilon(3.3217578960305048, worksheet.outputs_emissions_w66, 0.002); end
  def test_outputs_emissions_x66; assert_in_epsilon(3.4953947380579486, worksheet.outputs_emissions_x66, 0.002); end
  def test_outputs_emissions_y66; assert_in_epsilon(3.521360236697777, worksheet.outputs_emissions_y66, 0.002); end
  def test_outputs_emissions_z66; assert_in_epsilon(3.540265703319832, worksheet.outputs_emissions_z66, 0.002); end
  def test_outputs_emissions_aa66; assert_in_epsilon(3.5522836327207448, worksheet.outputs_emissions_aa66, 0.002); end
  def test_outputs_emissions_ab66; assert_in_epsilon(3.555412521927199, worksheet.outputs_emissions_ab66, 0.002); end
  def test_outputs_emissions_ac66; assert_in_epsilon(3.5572853976148173, worksheet.outputs_emissions_ac66, 0.002); end
  def test_outputs_emissions_ad66; assert_in_epsilon(3.5582214808010413, worksheet.outputs_emissions_ad66, 0.002); end
  def test_outputs_emissions_ae66; assert_in_epsilon(3.5585480624454577, worksheet.outputs_emissions_ae66, 0.002); end
  def test_outputs_emissions_af66; assert_in_epsilon(3.5587205171739624, worksheet.outputs_emissions_af66, 0.002); end
  def test_outputs_emissions_ag66; assert_in_epsilon(3.558799448749715, worksheet.outputs_emissions_ag66, 0.002); end
  def test_outputs_emissions_ah66; assert_in_epsilon(3.558831236986892, worksheet.outputs_emissions_ah66, 0.002); end
  def test_outputs_emissions_d67; assert_equal("Total", worksheet.outputs_emissions_d67); end
  def test_outputs_emissions_h67; assert_in_epsilon(36.92784320440893, worksheet.outputs_emissions_h67, 0.002); end
  def test_outputs_emissions_i67; assert_in_epsilon(37.914798868877654, worksheet.outputs_emissions_i67, 0.002); end
  def test_outputs_emissions_j67; assert_in_epsilon(39.96338634106166, worksheet.outputs_emissions_j67, 0.002); end
  def test_outputs_emissions_k67; assert_in_epsilon(44.07419740182746, worksheet.outputs_emissions_k67, 0.002); end
  def test_outputs_emissions_l67; assert_in_epsilon(48.01230887959424, worksheet.outputs_emissions_l67, 0.002); end
  def test_outputs_emissions_p67; assert_in_epsilon(49.88359973589737, worksheet.outputs_emissions_p67, 0.002); end
  def test_outputs_emissions_q67; assert_in_epsilon(51.73324342225912, worksheet.outputs_emissions_q67, 0.002); end
  def test_outputs_emissions_r67; assert_in_epsilon(57.63827721933438, worksheet.outputs_emissions_r67, 0.002); end
  def test_outputs_emissions_s67; assert_in_epsilon(60.24973232029816, worksheet.outputs_emissions_s67, 0.002); end
  def test_outputs_emissions_t67; assert_in_epsilon(66.23832948364607, worksheet.outputs_emissions_t67, 0.002); end
  def test_outputs_emissions_u67; assert_in_epsilon(73.32301477198675, worksheet.outputs_emissions_u67, 0.002); end
  def test_outputs_emissions_v67; assert_in_epsilon(80.24252557392913, worksheet.outputs_emissions_v67, 0.002); end
  def test_outputs_emissions_w67; assert_in_epsilon(79.57673526842103, worksheet.outputs_emissions_w67, 0.002); end
  def test_outputs_emissions_x67; assert_in_epsilon(86.89123213781893, worksheet.outputs_emissions_x67, 0.002); end
  def test_outputs_emissions_y67; assert_in_epsilon(87.63748409293969, worksheet.outputs_emissions_y67, 0.002); end
  def test_outputs_emissions_z67; assert_in_epsilon(88.04420681148527, worksheet.outputs_emissions_z67, 0.002); end
  def test_outputs_emissions_aa67; assert_in_epsilon(88.50991774635379, worksheet.outputs_emissions_aa67, 0.002); end
  def test_outputs_emissions_ab67; assert_in_epsilon(88.59894545482322, worksheet.outputs_emissions_ab67, 0.002); end
  def test_outputs_emissions_ac67; assert_in_epsilon(88.65182582972682, worksheet.outputs_emissions_ac67, 0.002); end
  def test_outputs_emissions_ad67; assert_in_epsilon(88.68524487573009, worksheet.outputs_emissions_ad67, 0.002); end
  def test_outputs_emissions_ae67; assert_in_epsilon(88.6948878678458, worksheet.outputs_emissions_ae67, 0.002); end
  def test_outputs_emissions_af67; assert_in_epsilon(88.70016470056206, worksheet.outputs_emissions_af67, 0.002); end
  def test_outputs_emissions_ag67; assert_in_epsilon(88.70282333845799, worksheet.outputs_emissions_ag67, 0.002); end
  def test_outputs_emissions_ah67; assert_in_epsilon(88.70379015390802, worksheet.outputs_emissions_ah67, 0.002); end
  def test_outputs_emissions_c45; assert_equal("Column1", worksheet.outputs_emissions_c45); end
  def test_outputs_emissions_d45; assert_equal("IPCC Sector", worksheet.outputs_emissions_d45); end
  def test_outputs_emissions_h45; assert_equal("1990", worksheet.outputs_emissions_h45); end
  def test_outputs_emissions_i45; assert_equal("1995", worksheet.outputs_emissions_i45); end
  def test_outputs_emissions_j45; assert_equal("2000", worksheet.outputs_emissions_j45); end
  def test_outputs_emissions_k45; assert_equal("2005", worksheet.outputs_emissions_k45); end
  def test_outputs_emissions_l45; assert_equal("2010", worksheet.outputs_emissions_l45); end
  def test_outputs_emissions_m45; assert_equal("….", worksheet.outputs_emissions_m45); end
  def test_outputs_emissions_p45; assert_equal("2011", worksheet.outputs_emissions_p45); end
  def test_outputs_emissions_q45; assert_equal("2015", worksheet.outputs_emissions_q45); end
  def test_outputs_emissions_r45; assert_equal("2020", worksheet.outputs_emissions_r45); end
  def test_outputs_emissions_s45; assert_equal("2025", worksheet.outputs_emissions_s45); end
  def test_outputs_emissions_t45; assert_equal("2030", worksheet.outputs_emissions_t45); end
  def test_outputs_emissions_u45; assert_equal("2035", worksheet.outputs_emissions_u45); end
  def test_outputs_emissions_v45; assert_equal("2040", worksheet.outputs_emissions_v45); end
  def test_outputs_emissions_w45; assert_equal("2045", worksheet.outputs_emissions_w45); end
  def test_outputs_emissions_x45; assert_equal("2050", worksheet.outputs_emissions_x45); end
  def test_outputs_emissions_y45; assert_equal("2055", worksheet.outputs_emissions_y45); end
  def test_outputs_emissions_z45; assert_equal("2060", worksheet.outputs_emissions_z45); end
  def test_outputs_emissions_aa45; assert_equal("2065", worksheet.outputs_emissions_aa45); end
  def test_outputs_emissions_ab45; assert_equal("2070", worksheet.outputs_emissions_ab45); end
  def test_outputs_emissions_ac45; assert_equal("2075", worksheet.outputs_emissions_ac45); end
  def test_outputs_emissions_ad45; assert_equal("2080", worksheet.outputs_emissions_ad45); end
  def test_outputs_emissions_ae45; assert_equal("2085", worksheet.outputs_emissions_ae45); end
  def test_outputs_emissions_af45; assert_equal("2090", worksheet.outputs_emissions_af45); end
  def test_outputs_emissions_ag45; assert_equal("2095", worksheet.outputs_emissions_ag45); end
  def test_outputs_emissions_ah45; assert_equal("2100", worksheet.outputs_emissions_ah45); end
  def test_outputs_emissions_c46; assert_equal("G.1A", worksheet.outputs_emissions_c46); end
  def test_outputs_emissions_d46; assert_equal("Global Fuel Combustion", worksheet.outputs_emissions_d46); end
  def test_outputs_emissions_h46; assert_in_epsilon(21.62825807111542, worksheet.outputs_emissions_h46, 0.002); end
  def test_outputs_emissions_i46; assert_in_epsilon(22.511665420052775, worksheet.outputs_emissions_i46, 0.002); end
  def test_outputs_emissions_j46; assert_in_epsilon(24.432527742912075, worksheet.outputs_emissions_j46, 0.002); end
  def test_outputs_emissions_k46; assert_in_epsilon(28.22731050431886, worksheet.outputs_emissions_k46, 0.002); end
  def test_outputs_emissions_l46; assert_in_epsilon(31.28377980273924, worksheet.outputs_emissions_l46, 0.002); end
  def test_outputs_emissions_p46; assert_in_epsilon(33.45424707251121, worksheet.outputs_emissions_p46, 0.002); end
  def test_outputs_emissions_q46; assert_in_epsilon(34.271791174532765, worksheet.outputs_emissions_q46, 0.002); end
  def test_outputs_emissions_r46; assert_in_epsilon(38.44053609814549, worksheet.outputs_emissions_r46, 0.002); end
  def test_outputs_emissions_s46; assert_in_epsilon(41.9636341416032, worksheet.outputs_emissions_s46, 0.002); end
  def test_outputs_emissions_t46; assert_in_epsilon(45.50132655005774, worksheet.outputs_emissions_t46, 0.002); end
  def test_outputs_emissions_u46; assert_in_epsilon(47.466072185524766, worksheet.outputs_emissions_u46, 0.002); end
  def test_outputs_emissions_v46; assert_in_epsilon(50.157066045234636, worksheet.outputs_emissions_v46, 0.002); end
  def test_outputs_emissions_w46; assert_in_epsilon(51.43476058776124, worksheet.outputs_emissions_w46, 0.002); end
  def test_outputs_emissions_x46; assert_in_epsilon(53.52208632005554, worksheet.outputs_emissions_x46, 0.002); end
  def test_outputs_emissions_c47; assert_equal("G.1B", worksheet.outputs_emissions_c47); end
  def test_outputs_emissions_d47; assert_equal("Global Fugitive Emissions from Fuels", worksheet.outputs_emissions_d47); end
  def test_outputs_emissions_h47; assert_in_epsilon(1.97211881029452, worksheet.outputs_emissions_h47, 0.002); end
  def test_outputs_emissions_i47; assert_in_epsilon(1.92072397186996, worksheet.outputs_emissions_i47, 0.002); end
  def test_outputs_emissions_j47; assert_in_epsilon(2.0150954274728803, worksheet.outputs_emissions_j47, 0.002); end
  def test_outputs_emissions_k47; assert_in_epsilon(2.27969998630441, worksheet.outputs_emissions_k47, 0.002); end
  def test_outputs_emissions_l47; assert_in_epsilon(2.48650439282281, worksheet.outputs_emissions_l47, 0.002); end
  def test_outputs_emissions_p47; assert_in_epsilon(1.985596979192376, worksheet.outputs_emissions_p47, 0.002); end
  def test_outputs_emissions_q47; assert_in_epsilon(2.0267019922214495, worksheet.outputs_emissions_q47, 0.002); end
  def test_outputs_emissions_r47; assert_in_epsilon(2.2615784143486977, worksheet.outputs_emissions_r47, 0.002); end
  def test_outputs_emissions_s47; assert_in_epsilon(2.468449323043362, worksheet.outputs_emissions_s47, 0.002); end
  def test_outputs_emissions_t47; assert_in_epsilon(2.678737471321958, worksheet.outputs_emissions_t47, 0.002); end
  def test_outputs_emissions_u47; assert_in_epsilon(2.8300567923541213, worksheet.outputs_emissions_u47, 0.002); end
  def test_outputs_emissions_v47; assert_in_epsilon(2.996235205337806, worksheet.outputs_emissions_v47, 0.002); end
  def test_outputs_emissions_w47; assert_in_epsilon(3.0963743344471935, worksheet.outputs_emissions_w47, 0.002); end
  def test_outputs_emissions_x47; assert_in_epsilon(3.254910258079288, worksheet.outputs_emissions_x47, 0.002); end
  def test_outputs_emissions_c48; assert_equal("G.2", worksheet.outputs_emissions_c48); end
  def test_outputs_emissions_d48; assert_equal("Global Industrial Processes", worksheet.outputs_emissions_d48); end
  def test_outputs_emissions_h48; assert_in_delta(0.8635527545553001, worksheet.outputs_emissions_h48, 0.002); end
  def test_outputs_emissions_i48; assert_in_epsilon(1.0090538613606506, worksheet.outputs_emissions_i48, 0.002); end
  def test_outputs_emissions_j48; assert_in_epsilon(1.05186394402772, worksheet.outputs_emissions_j48, 0.002); end
  def test_outputs_emissions_k48; assert_in_epsilon(1.3834269715517598, worksheet.outputs_emissions_k48, 0.002); end
  def test_outputs_emissions_l48; assert_in_epsilon(1.8539335657936016, worksheet.outputs_emissions_l48, 0.002); end
  def test_outputs_emissions_p48; assert_in_epsilon(2.5111122709267653, worksheet.outputs_emissions_p48, 0.002); end
  def test_outputs_emissions_q48; assert_in_epsilon(2.6357465693849527, worksheet.outputs_emissions_q48, 0.002); end
  def test_outputs_emissions_r48; assert_in_epsilon(2.8802585089313077, worksheet.outputs_emissions_r48, 0.002); end
  def test_outputs_emissions_s48; assert_in_epsilon(3.0840028230991225, worksheet.outputs_emissions_s48, 0.002); end
  def test_outputs_emissions_t48; assert_in_epsilon(3.2961527223519416, worksheet.outputs_emissions_t48, 0.002); end
  def test_outputs_emissions_u48; assert_in_epsilon(3.5082402113403006, worksheet.outputs_emissions_u48, 0.002); end
  def test_outputs_emissions_v48; assert_in_epsilon(3.7461387468235556, worksheet.outputs_emissions_v48, 0.002); end
  def test_outputs_emissions_w48; assert_in_epsilon(3.990170175374407, worksheet.outputs_emissions_w48, 0.002); end
  def test_outputs_emissions_x48; assert_in_epsilon(4.264794865191793, worksheet.outputs_emissions_x48, 0.002); end
  def test_outputs_emissions_c49; assert_equal("G.3", worksheet.outputs_emissions_c49); end
  def test_outputs_emissions_d49; assert_equal("Global Solvent and Other Product Use", worksheet.outputs_emissions_d49); end
  def test_outputs_emissions_h49; assert_in_delta(0.0, (worksheet.outputs_emissions_h49||0), 0.002); end
  def test_outputs_emissions_i49; assert_in_delta(0.0, (worksheet.outputs_emissions_i49||0), 0.002); end
  def test_outputs_emissions_j49; assert_in_delta(0.0, (worksheet.outputs_emissions_j49||0), 0.002); end
  def test_outputs_emissions_k49; assert_in_delta(0.0, (worksheet.outputs_emissions_k49||0), 0.002); end
  def test_outputs_emissions_l49; assert_in_delta(0.0, (worksheet.outputs_emissions_l49||0), 0.002); end
  def test_outputs_emissions_p49; assert_in_delta(0.0, (worksheet.outputs_emissions_p49||0), 0.002); end
  def test_outputs_emissions_q49; assert_in_delta(0.0, (worksheet.outputs_emissions_q49||0), 0.002); end
  def test_outputs_emissions_r49; assert_in_delta(0.0, (worksheet.outputs_emissions_r49||0), 0.002); end
  def test_outputs_emissions_s49; assert_in_delta(0.0, (worksheet.outputs_emissions_s49||0), 0.002); end
  def test_outputs_emissions_t49; assert_in_delta(0.0, (worksheet.outputs_emissions_t49||0), 0.002); end
  def test_outputs_emissions_u49; assert_in_delta(0.0, (worksheet.outputs_emissions_u49||0), 0.002); end
  def test_outputs_emissions_v49; assert_in_delta(0.0, (worksheet.outputs_emissions_v49||0), 0.002); end
  def test_outputs_emissions_w49; assert_in_delta(0.0, (worksheet.outputs_emissions_w49||0), 0.002); end
  def test_outputs_emissions_x49; assert_in_delta(0.0, (worksheet.outputs_emissions_x49||0), 0.002); end
  def test_outputs_emissions_c50; assert_equal("G.4", worksheet.outputs_emissions_c50); end
  def test_outputs_emissions_d50; assert_equal("Global Agriculture", worksheet.outputs_emissions_d50); end
  def test_outputs_emissions_h50; assert_in_epsilon(5.62178989983279, worksheet.outputs_emissions_h50, 0.002); end
  def test_outputs_emissions_i50; assert_in_epsilon(5.501831340352361, worksheet.outputs_emissions_i50, 0.002); end
  def test_outputs_emissions_j50; assert_in_epsilon(5.42376971473413, worksheet.outputs_emissions_j50, 0.002); end
  def test_outputs_emissions_k50; assert_in_epsilon(5.79845056426927, worksheet.outputs_emissions_k50, 0.002); end
  def test_outputs_emissions_l50; assert_in_epsilon(5.99880140697078, worksheet.outputs_emissions_l50, 0.002); end
  def test_outputs_emissions_p50; assert_in_epsilon(5.811749701999231, worksheet.outputs_emissions_p50, 0.002); end
  def test_outputs_emissions_q50; assert_in_epsilon(6.0558490114779735, worksheet.outputs_emissions_q50, 0.002); end
  def test_outputs_emissions_r50; assert_in_epsilon(6.397290943647304, worksheet.outputs_emissions_r50, 0.002); end
  def test_outputs_emissions_s50; assert_in_epsilon(6.731972522353816, worksheet.outputs_emissions_s50, 0.002); end
  def test_outputs_emissions_t50; assert_in_epsilon(7.0884571214789345, worksheet.outputs_emissions_t50, 0.002); end
  def test_outputs_emissions_u50; assert_in_epsilon(7.494748371474261, worksheet.outputs_emissions_u50, 0.002); end
  def test_outputs_emissions_v50; assert_in_epsilon(7.9525615272719135, worksheet.outputs_emissions_v50, 0.002); end
  def test_outputs_emissions_w50; assert_in_epsilon(8.40638836641141, worksheet.outputs_emissions_w50, 0.002); end
  def test_outputs_emissions_x50; assert_in_epsilon(8.931586084541745, worksheet.outputs_emissions_x50, 0.002); end
  def test_outputs_emissions_c51; assert_equal("G.5", worksheet.outputs_emissions_c51); end
  def test_outputs_emissions_d51; assert_equal("Global Land Use, Land-Use Change and Forestry", worksheet.outputs_emissions_d51); end
  def test_outputs_emissions_h51; assert_in_epsilon(5.693866999999999, worksheet.outputs_emissions_h51, 0.002); end
  def test_outputs_emissions_i51; assert_in_epsilon(5.745387, worksheet.outputs_emissions_i51, 0.002); end
  def test_outputs_emissions_j51; assert_in_epsilon(5.740712, worksheet.outputs_emissions_j51, 0.002); end
  def test_outputs_emissions_k51; assert_in_epsilon(5.006499000000001, worksheet.outputs_emissions_k51, 0.002); end
  def test_outputs_emissions_l51; assert_in_epsilon(4.917927, worksheet.outputs_emissions_l51, 0.002); end
  def test_outputs_emissions_p51; assert_in_epsilon(4.649531, worksheet.outputs_emissions_p51, 0.002); end
  def test_outputs_emissions_q51; assert_in_epsilon(5.243290080382662, worksheet.outputs_emissions_q51, 0.002); end
  def test_outputs_emissions_r51; assert_in_epsilon(6.115571824779975, worksheet.outputs_emissions_r51, 0.002); end
  def test_outputs_emissions_s51; assert_in_epsilon(4.422700470777077, worksheet.outputs_emissions_s51, 0.002); end
  def test_outputs_emissions_t51; assert_in_epsilon(6.062585680932102, worksheet.outputs_emissions_t51, 0.002); end
  def test_outputs_emissions_u51; assert_in_epsilon(10.38139011043009, worksheet.outputs_emissions_u51, 0.002); end
  def test_outputs_emissions_v51; assert_in_epsilon(13.717283773512651, worksheet.outputs_emissions_v51, 0.002); end
  def test_outputs_emissions_w51; assert_in_epsilon(10.951508341077924, worksheet.outputs_emissions_w51, 0.002); end
  def test_outputs_emissions_x51; assert_in_epsilon(15.195272342393439, worksheet.outputs_emissions_x51, 0.002); end
  def test_outputs_emissions_c52; assert_equal("G.6", worksheet.outputs_emissions_c52); end
  def test_outputs_emissions_d52; assert_equal("Global Waste", worksheet.outputs_emissions_d52); end
  def test_outputs_emissions_h52; assert_in_epsilon(1.1482566686108997, worksheet.outputs_emissions_h52, 0.002); end
  def test_outputs_emissions_i52; assert_in_epsilon(1.2261372752419115, worksheet.outputs_emissions_i52, 0.002); end
  def test_outputs_emissions_j52; assert_in_epsilon(1.2994175119148552, worksheet.outputs_emissions_j52, 0.002); end
  def test_outputs_emissions_k52; assert_in_epsilon(1.3788103753831609, worksheet.outputs_emissions_k52, 0.002); end
  def test_outputs_emissions_l52; assert_in_epsilon(1.4713627112678027, worksheet.outputs_emissions_l52, 0.002); end
  def test_outputs_emissions_p52; assert_in_epsilon(1.4713627112678027, worksheet.outputs_emissions_p52, 0.002); end
  def test_outputs_emissions_q52; assert_in_epsilon(1.4998645942593172, worksheet.outputs_emissions_q52, 0.002); end
  def test_outputs_emissions_r52; assert_in_epsilon(1.5430414294815995, worksheet.outputs_emissions_r52, 0.002); end
  def test_outputs_emissions_s52; assert_in_epsilon(1.5789730394215769, worksheet.outputs_emissions_s52, 0.002); end
  def test_outputs_emissions_t52; assert_in_epsilon(1.611069937503396, worksheet.outputs_emissions_t52, 0.002); end
  def test_outputs_emissions_u52; assert_in_epsilon(1.6425071008632088, worksheet.outputs_emissions_u52, 0.002); end
  def test_outputs_emissions_v52; assert_in_epsilon(1.6732402757485707, worksheet.outputs_emissions_v52, 0.002); end
  def test_outputs_emissions_w52; assert_in_epsilon(1.6975334633488675, worksheet.outputs_emissions_w52, 0.002); end
  def test_outputs_emissions_x52; assert_in_epsilon(1.7225822675571136, worksheet.outputs_emissions_x52, 0.002); end
  def test_outputs_emissions_c53; assert_equal("G.7", worksheet.outputs_emissions_c53); end
  def test_outputs_emissions_d53; assert_equal("Global Other", worksheet.outputs_emissions_d53); end
  def test_outputs_emissions_h53; assert_in_delta(0.0, (worksheet.outputs_emissions_h53||0), 0.002); end
  def test_outputs_emissions_i53; assert_in_delta(0.0, (worksheet.outputs_emissions_i53||0), 0.002); end
  def test_outputs_emissions_j53; assert_in_delta(0.0, (worksheet.outputs_emissions_j53||0), 0.002); end
  def test_outputs_emissions_k53; assert_in_delta(0.0, (worksheet.outputs_emissions_k53||0), 0.002); end
  def test_outputs_emissions_l53; assert_in_delta(0.0, (worksheet.outputs_emissions_l53||0), 0.002); end
  def test_outputs_emissions_p53; assert_in_delta(0.0, (worksheet.outputs_emissions_p53||0), 0.002); end
  def test_outputs_emissions_q53; assert_in_delta(0.0, (worksheet.outputs_emissions_q53||0), 0.002); end
  def test_outputs_emissions_r53; assert_in_delta(0.0, (worksheet.outputs_emissions_r53||0), 0.002); end
  def test_outputs_emissions_s53; assert_in_delta(0.0, (worksheet.outputs_emissions_s53||0), 0.002); end
  def test_outputs_emissions_t53; assert_in_delta(0.0, (worksheet.outputs_emissions_t53||0), 0.002); end
  def test_outputs_emissions_u53; assert_in_delta(0.0, (worksheet.outputs_emissions_u53||0), 0.002); end
  def test_outputs_emissions_v53; assert_in_delta(0.0, (worksheet.outputs_emissions_v53||0), 0.002); end
  def test_outputs_emissions_w53; assert_in_delta(0.0, (worksheet.outputs_emissions_w53||0), 0.002); end
  def test_outputs_emissions_x53; assert_in_delta(0.0, (worksheet.outputs_emissions_x53||0), 0.002); end
  def test_outputs_emissions_d54; assert_equal("Total", worksheet.outputs_emissions_d54); end
  def test_outputs_emissions_h54; assert_in_epsilon(36.92784320440893, worksheet.outputs_emissions_h54, 0.002); end
  def test_outputs_emissions_i54; assert_in_epsilon(37.914798868877654, worksheet.outputs_emissions_i54, 0.002); end
  def test_outputs_emissions_j54; assert_in_epsilon(39.96338634106166, worksheet.outputs_emissions_j54, 0.002); end
  def test_outputs_emissions_k54; assert_in_epsilon(44.07419740182746, worksheet.outputs_emissions_k54, 0.002); end
  def test_outputs_emissions_l54; assert_in_epsilon(48.01230887959424, worksheet.outputs_emissions_l54, 0.002); end
  def test_outputs_emissions_p54; assert_in_epsilon(49.88359973589737, worksheet.outputs_emissions_p54, 0.002); end
  def test_outputs_emissions_q54; assert_in_epsilon(51.73324342225912, worksheet.outputs_emissions_q54, 0.002); end
  def test_outputs_emissions_r54; assert_in_epsilon(57.63827721933438, worksheet.outputs_emissions_r54, 0.002); end
  def test_outputs_emissions_s54; assert_in_epsilon(60.24973232029816, worksheet.outputs_emissions_s54, 0.002); end
  def test_outputs_emissions_t54; assert_in_epsilon(66.23832948364607, worksheet.outputs_emissions_t54, 0.002); end
  def test_outputs_emissions_u54; assert_in_epsilon(73.32301477198675, worksheet.outputs_emissions_u54, 0.002); end
  def test_outputs_emissions_v54; assert_in_epsilon(80.24252557392913, worksheet.outputs_emissions_v54, 0.002); end
  def test_outputs_emissions_w54; assert_in_epsilon(79.57673526842103, worksheet.outputs_emissions_w54, 0.002); end
  def test_outputs_emissions_x54; assert_in_epsilon(86.89123213781893, worksheet.outputs_emissions_x54, 0.002); end
  def test_outputs_emissions_y54; assert_in_epsilon(87.63748409293969, worksheet.outputs_emissions_y54, 0.002); end
  def test_outputs_emissions_z54; assert_in_epsilon(88.04420681148527, worksheet.outputs_emissions_z54, 0.002); end
  def test_outputs_emissions_aa54; assert_in_epsilon(88.50991774635379, worksheet.outputs_emissions_aa54, 0.002); end
  def test_outputs_emissions_ab54; assert_in_epsilon(88.59894545482322, worksheet.outputs_emissions_ab54, 0.002); end
  def test_outputs_emissions_ac54; assert_in_epsilon(88.65182582972682, worksheet.outputs_emissions_ac54, 0.002); end
  def test_outputs_emissions_ad54; assert_in_epsilon(88.68524487573009, worksheet.outputs_emissions_ad54, 0.002); end
  def test_outputs_emissions_ae54; assert_in_epsilon(88.6948878678458, worksheet.outputs_emissions_ae54, 0.002); end
  def test_outputs_emissions_af54; assert_in_epsilon(88.70016470056206, worksheet.outputs_emissions_af54, 0.002); end
  def test_outputs_emissions_ag54; assert_in_epsilon(88.70282333845799, worksheet.outputs_emissions_ag54, 0.002); end
  def test_outputs_emissions_ah54; assert_in_epsilon(88.70379015390802, worksheet.outputs_emissions_ah54, 0.002); end
  def test_outputs_emissions_d13; assert_equal("IPCC Sector", worksheet.outputs_emissions_d13); end
  def test_outputs_emissions_p13; assert_in_epsilon(2011.0, worksheet.outputs_emissions_p13, 0.002); end
  def test_outputs_emissions_q13; assert_in_epsilon(2015.0, worksheet.outputs_emissions_q13, 0.002); end
  def test_outputs_emissions_r13; assert_in_epsilon(2020.0, worksheet.outputs_emissions_r13, 0.002); end
  def test_outputs_emissions_s13; assert_in_epsilon(2025.0, worksheet.outputs_emissions_s13, 0.002); end
  def test_outputs_emissions_t13; assert_in_epsilon(2030.0, worksheet.outputs_emissions_t13, 0.002); end
  def test_outputs_emissions_u13; assert_in_epsilon(2035.0, worksheet.outputs_emissions_u13, 0.002); end
  def test_outputs_emissions_v13; assert_in_epsilon(2040.0, worksheet.outputs_emissions_v13, 0.002); end
  def test_outputs_emissions_w13; assert_in_epsilon(2045.0, worksheet.outputs_emissions_w13, 0.002); end
  def test_outputs_emissions_x13; assert_in_epsilon(2050.0, worksheet.outputs_emissions_x13, 0.002); end
  def test_outputs_emissions_y13; assert_in_epsilon(2055.0, worksheet.outputs_emissions_y13, 0.002); end
  def test_outputs_emissions_z13; assert_in_epsilon(2060.0, worksheet.outputs_emissions_z13, 0.002); end
  def test_outputs_emissions_aa13; assert_in_epsilon(2065.0, worksheet.outputs_emissions_aa13, 0.002); end
  def test_outputs_emissions_ab13; assert_in_epsilon(2070.0, worksheet.outputs_emissions_ab13, 0.002); end
  def test_outputs_emissions_ac13; assert_in_epsilon(2075.0, worksheet.outputs_emissions_ac13, 0.002); end
  def test_outputs_emissions_ad13; assert_in_epsilon(2080.0, worksheet.outputs_emissions_ad13, 0.002); end
  def test_outputs_emissions_ae13; assert_in_epsilon(2085.0, worksheet.outputs_emissions_ae13, 0.002); end
  def test_outputs_emissions_af13; assert_in_epsilon(2090.0, worksheet.outputs_emissions_af13, 0.002); end
  def test_outputs_emissions_ag13; assert_in_epsilon(2095.0, worksheet.outputs_emissions_ag13, 0.002); end
  def test_outputs_emissions_ah13; assert_in_epsilon(2100.0, worksheet.outputs_emissions_ah13, 0.002); end
  def test_outputs_emissions_c14; assert_equal("G.1A", worksheet.outputs_emissions_c14); end
  def test_outputs_emissions_d14; assert_equal("Global Fuel Combustion", worksheet.outputs_emissions_d14); end
  def test_outputs_emissions_p14; assert_in_epsilon(4.802201476729181, worksheet.outputs_emissions_p14, 0.002); end
  def test_outputs_emissions_q14; assert_in_epsilon(4.678882071102288, worksheet.outputs_emissions_q14, 0.002); end
  def test_outputs_emissions_r14; assert_in_epsilon(4.981441808998257, worksheet.outputs_emissions_r14, 0.002); end
  def test_outputs_emissions_s14; assert_in_epsilon(5.191326255580805, worksheet.outputs_emissions_s14, 0.002); end
  def test_outputs_emissions_t14; assert_in_epsilon(5.400791311562061, worksheet.outputs_emissions_t14, 0.002); end
  def test_outputs_emissions_u14; assert_in_epsilon(5.4287596397078595, worksheet.outputs_emissions_u14, 0.002); end
  def test_outputs_emissions_v14; assert_in_epsilon(5.549153991640006, worksheet.outputs_emissions_v14, 0.002); end
  def test_outputs_emissions_w14; assert_in_epsilon(5.525605970385283, worksheet.outputs_emissions_w14, 0.002); end
  def test_outputs_emissions_x14; assert_in_epsilon(5.603852427174017, worksheet.outputs_emissions_x14, 0.002); end
  def test_outputs_emissions_c15; assert_equal("G.1B", worksheet.outputs_emissions_c15); end
  def test_outputs_emissions_d15; assert_equal("Global Fugitive Emissions from Fuels", worksheet.outputs_emissions_d15); end
  def test_outputs_emissions_p15; assert_in_delta(0.28502320572330475, worksheet.outputs_emissions_p15, 0.002); end
  def test_outputs_emissions_q15; assert_in_delta(0.27669110046161777, worksheet.outputs_emissions_q15, 0.002); end
  def test_outputs_emissions_r15; assert_in_delta(0.293073989363746, worksheet.outputs_emissions_r15, 0.002); end
  def test_outputs_emissions_s15; assert_in_delta(0.3053721643374354, worksheet.outputs_emissions_s15, 0.002); end
  def test_outputs_emissions_t15; assert_in_delta(0.3179534127462268, worksheet.outputs_emissions_t15, 0.002); end
  def test_outputs_emissions_u15; assert_in_delta(0.3236774686635741, worksheet.outputs_emissions_u15, 0.002); end
  def test_outputs_emissions_v15; assert_in_delta(0.3314900942291514, worksheet.outputs_emissions_v15, 0.002); end
  def test_outputs_emissions_w15; assert_in_delta(0.3326416671032447, worksheet.outputs_emissions_w15, 0.002); end
  def test_outputs_emissions_x15; assert_in_delta(0.34079457667061086, worksheet.outputs_emissions_x15, 0.002); end
  def test_outputs_emissions_c16; assert_equal("G.2", worksheet.outputs_emissions_c16); end
  def test_outputs_emissions_d16; assert_equal("Global Industrial Processes", worksheet.outputs_emissions_d16); end
  def test_outputs_emissions_p16; assert_in_delta(0.36045848019057186, worksheet.outputs_emissions_p16, 0.002); end
  def test_outputs_emissions_q16; assert_in_delta(0.35983959241175406, worksheet.outputs_emissions_q16, 0.002); end
  def test_outputs_emissions_r16; assert_in_delta(0.3732476602428442, worksheet.outputs_emissions_r16, 0.002); end
  def test_outputs_emissions_s16; assert_in_delta(0.3815223622867126, worksheet.outputs_emissions_s16, 0.002); end
  def test_outputs_emissions_t16; assert_in_delta(0.39123767006826776, worksheet.outputs_emissions_t16, 0.002); end
  def test_outputs_emissions_u16; assert_in_delta(0.40124223448032575, worksheet.outputs_emissions_u16, 0.002); end
  def test_outputs_emissions_v16; assert_in_delta(0.4144560760676363, worksheet.outputs_emissions_v16, 0.002); end
  def test_outputs_emissions_w16; assert_in_delta(0.4286616267277503, worksheet.outputs_emissions_w16, 0.002); end
  def test_outputs_emissions_x16; assert_in_delta(0.4465311930067436, worksheet.outputs_emissions_x16, 0.002); end
  def test_outputs_emissions_c17; assert_equal("G.3", worksheet.outputs_emissions_c17); end
  def test_outputs_emissions_d17; assert_equal("Global Solvent and Other Product Use", worksheet.outputs_emissions_d17); end
  def test_outputs_emissions_p17; assert_in_delta(0.0, (worksheet.outputs_emissions_p17||0), 0.002); end
  def test_outputs_emissions_q17; assert_in_delta(0.0, (worksheet.outputs_emissions_q17||0), 0.002); end
  def test_outputs_emissions_r17; assert_in_delta(0.0, (worksheet.outputs_emissions_r17||0), 0.002); end
  def test_outputs_emissions_s17; assert_in_delta(0.0, (worksheet.outputs_emissions_s17||0), 0.002); end
  def test_outputs_emissions_t17; assert_in_delta(0.0, (worksheet.outputs_emissions_t17||0), 0.002); end
  def test_outputs_emissions_u17; assert_in_delta(0.0, (worksheet.outputs_emissions_u17||0), 0.002); end
  def test_outputs_emissions_v17; assert_in_delta(0.0, (worksheet.outputs_emissions_v17||0), 0.002); end
  def test_outputs_emissions_w17; assert_in_delta(0.0, (worksheet.outputs_emissions_w17||0), 0.002); end
  def test_outputs_emissions_x17; assert_in_delta(0.0, (worksheet.outputs_emissions_x17||0), 0.002); end
  def test_outputs_emissions_c18; assert_equal("G.4", worksheet.outputs_emissions_c18); end
  def test_outputs_emissions_d18; assert_equal("Global Agriculture", worksheet.outputs_emissions_d18); end
  def test_outputs_emissions_p18; assert_in_delta(0.8342496228006158, worksheet.outputs_emissions_p18, 0.002); end
  def test_outputs_emissions_q18; assert_in_delta(0.8267616717436741, worksheet.outputs_emissions_q18, 0.002); end
  def test_outputs_emissions_r18; assert_in_delta(0.8290137392893436, worksheet.outputs_emissions_r18, 0.002); end
  def test_outputs_emissions_s18; assert_in_delta(0.8328131350400896, worksheet.outputs_emissions_s18, 0.002); end
  def test_outputs_emissions_t18; assert_in_delta(0.8413661872461402, worksheet.outputs_emissions_t18, 0.002); end
  def test_outputs_emissions_u18; assert_in_delta(0.8571846288396625, worksheet.outputs_emissions_u18, 0.002); end
  def test_outputs_emissions_v18; assert_in_delta(0.879835923876102, worksheet.outputs_emissions_v18, 0.002); end
  def test_outputs_emissions_w18; assert_in_delta(0.9030933403017143, worksheet.outputs_emissions_w18, 0.002); end
  def test_outputs_emissions_x18; assert_in_delta(0.9351520801912003, worksheet.outputs_emissions_x18, 0.002); end
  def test_outputs_emissions_c19; assert_equal("G.5", worksheet.outputs_emissions_c19); end
  def test_outputs_emissions_d19; assert_equal("Global Land Use, Land-Use Change and Forestry", worksheet.outputs_emissions_d19); end
  def test_outputs_emissions_p19; assert_in_delta(0.667418536902139, worksheet.outputs_emissions_p19, 0.002); end
  def test_outputs_emissions_q19; assert_in_delta(0.715828823353741, worksheet.outputs_emissions_q19, 0.002); end
  def test_outputs_emissions_r19; assert_in_delta(0.7925062516326468, worksheet.outputs_emissions_r19, 0.002); end
  def test_outputs_emissions_s19; assert_in_delta(0.54713281020988, worksheet.outputs_emissions_s19, 0.002); end
  def test_outputs_emissions_t19; assert_in_delta(0.7196001205625754, worksheet.outputs_emissions_t19, 0.002); end
  def test_outputs_emissions_u19; assert_in_epsilon(1.1873337952903573, worksheet.outputs_emissions_u19, 0.002); end
  def test_outputs_emissions_v19; assert_in_epsilon(1.5176190716099198, worksheet.outputs_emissions_v19, 0.002); end
  def test_outputs_emissions_w19; assert_in_epsilon(1.176514076913648, worksheet.outputs_emissions_w19, 0.002); end
  def test_outputs_emissions_x19; assert_in_epsilon(1.5909705628493764, worksheet.outputs_emissions_x19, 0.002); end
  def test_outputs_emissions_c20; assert_equal("G.6", worksheet.outputs_emissions_c20); end
  def test_outputs_emissions_d20; assert_equal("Global Waste", worksheet.outputs_emissions_d20); end
  def test_outputs_emissions_p20; assert_in_delta(0.21120726972391873, worksheet.outputs_emissions_p20, 0.002); end
  def test_outputs_emissions_q20; assert_in_delta(0.20476576562405777, worksheet.outputs_emissions_q20, 0.002); end
  def test_outputs_emissions_r20; assert_in_delta(0.1999600388041129, worksheet.outputs_emissions_r20, 0.002); end
  def test_outputs_emissions_s20; assert_in_delta(0.1953349456994931, worksheet.outputs_emissions_s20, 0.002); end
  def test_outputs_emissions_t20; assert_in_delta(0.1912263483398625, worksheet.outputs_emissions_t20, 0.002); end
  def test_outputs_emissions_u20; assert_in_delta(0.187855785122642, worksheet.outputs_emissions_u20, 0.002); end
  def test_outputs_emissions_v20; assert_in_delta(0.18511983828498219, worksheet.outputs_emissions_v20, 0.002); end
  def test_outputs_emissions_w20; assert_in_delta(0.18236501799215588, worksheet.outputs_emissions_w20, 0.002); end
  def test_outputs_emissions_x20; assert_in_delta(0.18035725968028435, worksheet.outputs_emissions_x20, 0.002); end
  def test_outputs_emissions_c21; assert_equal("G.7", worksheet.outputs_emissions_c21); end
  def test_outputs_emissions_d21; assert_equal("Global Other", worksheet.outputs_emissions_d21); end
  def test_outputs_emissions_p21; assert_in_delta(0.0, (worksheet.outputs_emissions_p21||0), 0.002); end
  def test_outputs_emissions_q21; assert_in_delta(0.0, (worksheet.outputs_emissions_q21||0), 0.002); end
  def test_outputs_emissions_r21; assert_in_delta(0.0, (worksheet.outputs_emissions_r21||0), 0.002); end
  def test_outputs_emissions_s21; assert_in_delta(0.0, (worksheet.outputs_emissions_s21||0), 0.002); end
  def test_outputs_emissions_t21; assert_in_delta(0.0, (worksheet.outputs_emissions_t21||0), 0.002); end
  def test_outputs_emissions_u21; assert_in_delta(0.0, (worksheet.outputs_emissions_u21||0), 0.002); end
  def test_outputs_emissions_v21; assert_in_delta(0.0, (worksheet.outputs_emissions_v21||0), 0.002); end
  def test_outputs_emissions_w21; assert_in_delta(0.0, (worksheet.outputs_emissions_w21||0), 0.002); end
  def test_outputs_emissions_x21; assert_in_delta(0.0, (worksheet.outputs_emissions_x21||0), 0.002); end
  def test_outputs_emissions_d22; assert_equal("Total", worksheet.outputs_emissions_d22); end
  def test_outputs_emissions_p22; assert_in_epsilon(7.160558592069732, worksheet.outputs_emissions_p22, 0.002); end
  def test_outputs_emissions_q22; assert_in_epsilon(7.0627690246971335, worksheet.outputs_emissions_q22, 0.002); end
  def test_outputs_emissions_r22; assert_in_epsilon(7.46924348833095, worksheet.outputs_emissions_r22, 0.002); end
  def test_outputs_emissions_s22; assert_in_epsilon(7.453501673154416, worksheet.outputs_emissions_s22, 0.002); end
  def test_outputs_emissions_t22; assert_in_epsilon(7.862175050525134, worksheet.outputs_emissions_t22, 0.002); end
  def test_outputs_emissions_u22; assert_in_epsilon(8.38605355210442, worksheet.outputs_emissions_u22, 0.002); end
  def test_outputs_emissions_v22; assert_in_epsilon(8.877674995707798, worksheet.outputs_emissions_v22, 0.002); end
  def test_outputs_emissions_w22; assert_in_epsilon(8.548881699423797, worksheet.outputs_emissions_w22, 0.002); end
  def test_outputs_emissions_x22; assert_in_epsilon(9.097658099572232, worksheet.outputs_emissions_x22, 0.002); end
  def test_outputs_emissions_p217; assert_in_delta(0.20277777777777778, worksheet.outputs_emissions_p217, 0.002); end
  def test_outputs_emissions_p214; assert_in_delta(0.16086816609393137, worksheet.outputs_emissions_p214, 0.002); end
  def test_outputs_emissions_q214; assert_in_delta(0.14227774762467738, worksheet.outputs_emissions_q214, 0.002); end
  def test_outputs_emissions_r214; assert_in_delta(0.14096766365610283, worksheet.outputs_emissions_r214, 0.002); end
  def test_outputs_emissions_s214; assert_in_delta(0.14224940791753365, worksheet.outputs_emissions_s214, 0.002); end
  def test_outputs_emissions_t214; assert_in_delta(0.14221966315275394, worksheet.outputs_emissions_t214, 0.002); end
  def test_outputs_emissions_u214; assert_in_delta(0.1393382888082167, worksheet.outputs_emissions_u214, 0.002); end
  def test_outputs_emissions_v214; assert_in_delta(0.13595759727226808, worksheet.outputs_emissions_v214, 0.002); end
  def test_outputs_emissions_w214; assert_in_delta(0.12724752718878096, worksheet.outputs_emissions_w214, 0.002); end
  def test_outputs_emissions_x214; assert_in_delta(0.12064788151236094, worksheet.outputs_emissions_x214, 0.002); end
  def test_outputs_emissions_p219; assert_in_delta(0.0, (worksheet.outputs_emissions_p219||0), 0.002); end
  def test_outputs_emissions_q219; assert_in_delta(-0.11556306583615181, worksheet.outputs_emissions_q219, 0.002); end
  def test_outputs_emissions_r219; assert_in_delta(-0.12370690187521985, worksheet.outputs_emissions_r219, 0.002); end
  def test_outputs_emissions_s219; assert_in_delta(-0.11573923311543298, worksheet.outputs_emissions_s219, 0.002); end
  def test_outputs_emissions_t219; assert_in_delta(-0.11592413461273943, worksheet.outputs_emissions_t219, 0.002); end
  def test_outputs_emissions_u219; assert_in_delta(-0.13383553631825032, worksheet.outputs_emissions_u219, 0.002); end
  def test_outputs_emissions_v219; assert_in_delta(-0.15485082864137295, worksheet.outputs_emissions_v219, 0.002); end
  def test_outputs_emissions_w219; assert_in_delta(-0.20899497844414552, worksheet.outputs_emissions_w219, 0.002); end
  def test_outputs_emissions_x219; assert_in_delta(-0.2500201597256084, worksheet.outputs_emissions_x219, 0.002); end
  def test_outputs_emissions_h183; assert_in_delta(0.012400506229430158, worksheet.outputs_emissions_h183, 0.002); end
  def test_outputs_emissions_i183; assert_in_delta(0.012218149636418481, worksheet.outputs_emissions_i183, 0.002); end
  def test_outputs_emissions_j183; assert_in_delta(0.012001836488520622, worksheet.outputs_emissions_j183, 0.002); end
  def test_outputs_emissions_k183; assert_in_delta(0.012850196703806487, worksheet.outputs_emissions_k183, 0.002); end
  def test_outputs_emissions_l183; assert_in_delta(0.013469781742409391, worksheet.outputs_emissions_l183, 0.002); end
  def test_outputs_emissions_p183; assert_in_delta(0.009104916454924871, worksheet.outputs_emissions_p183, 0.002); end
  def test_outputs_emissions_q183; assert_in_delta(0.009387281871290384, worksheet.outputs_emissions_q183, 0.002); end
  def test_outputs_emissions_r183; assert_in_delta(0.009936586808063709, worksheet.outputs_emissions_r183, 0.002); end
  def test_outputs_emissions_s183; assert_in_delta(0.01041990596304009, worksheet.outputs_emissions_s183, 0.002); end
  def test_outputs_emissions_t183; assert_in_delta(0.010927672749908067, worksheet.outputs_emissions_t183, 0.002); end
  def test_outputs_emissions_u183; assert_in_delta(0.011408659482220144, worksheet.outputs_emissions_u183, 0.002); end
  def test_outputs_emissions_v183; assert_in_delta(0.011991035773332628, worksheet.outputs_emissions_v183, 0.002); end
  def test_outputs_emissions_w183; assert_in_delta(0.012534935456718885, worksheet.outputs_emissions_w183, 0.002); end
  def test_outputs_emissions_x183; assert_in_delta(0.013190168822860183, worksheet.outputs_emissions_x183, 0.002); end
  def test_outputs_emissions_y183; assert_in_delta(0.013288151836595385, worksheet.outputs_emissions_y183, 0.002); end
  def test_outputs_emissions_z183; assert_in_delta(0.013359493220074837, worksheet.outputs_emissions_z183, 0.002); end
  def test_outputs_emissions_aa183; assert_in_delta(0.013404843897059414, worksheet.outputs_emissions_aa183, 0.002); end
  def test_outputs_emissions_ab183; assert_in_delta(0.013416651026140373, worksheet.outputs_emissions_ab183, 0.002); end
  def test_outputs_emissions_ac183; assert_in_delta(0.013423718481565348, worksheet.outputs_emissions_ac183, 0.002); end
  def test_outputs_emissions_ad183; assert_in_delta(0.013427250870947326, worksheet.outputs_emissions_ad183, 0.002); end
  def test_outputs_emissions_ae183; assert_in_delta(0.013428483254511162, worksheet.outputs_emissions_ae183, 0.002); end
  def test_outputs_emissions_af183; assert_in_delta(0.013429134027071556, worksheet.outputs_emissions_af183, 0.002); end
  def test_outputs_emissions_ag183; assert_in_delta(0.013429431882074397, worksheet.outputs_emissions_ag183, 0.002); end
  def test_outputs_emissions_ah183; assert_in_delta(0.013429551837686385, worksheet.outputs_emissions_ah183, 0.002); end
  def test_outputs_emissions_c174; assert_equal("Column1", worksheet.outputs_emissions_c174); end
  def test_outputs_emissions_d174; assert_equal("IPCC Sector", worksheet.outputs_emissions_d174); end
  def test_outputs_emissions_h174; assert_equal("1990", worksheet.outputs_emissions_h174); end
  def test_outputs_emissions_i174; assert_equal("1995", worksheet.outputs_emissions_i174); end
  def test_outputs_emissions_j174; assert_equal("2000", worksheet.outputs_emissions_j174); end
  def test_outputs_emissions_k174; assert_equal("2005", worksheet.outputs_emissions_k174); end
  def test_outputs_emissions_l174; assert_equal("2010", worksheet.outputs_emissions_l174); end
  def test_outputs_emissions_p174; assert_equal("2011", worksheet.outputs_emissions_p174); end
  def test_outputs_emissions_q174; assert_equal("2015", worksheet.outputs_emissions_q174); end
  def test_outputs_emissions_r174; assert_equal("2020", worksheet.outputs_emissions_r174); end
  def test_outputs_emissions_s174; assert_equal("2025", worksheet.outputs_emissions_s174); end
  def test_outputs_emissions_t174; assert_equal("2030", worksheet.outputs_emissions_t174); end
  def test_outputs_emissions_u174; assert_equal("2035", worksheet.outputs_emissions_u174); end
  def test_outputs_emissions_v174; assert_equal("2040", worksheet.outputs_emissions_v174); end
  def test_outputs_emissions_w174; assert_equal("2045", worksheet.outputs_emissions_w174); end
  def test_outputs_emissions_x174; assert_equal("2050", worksheet.outputs_emissions_x174); end
  def test_outputs_emissions_y174; assert_equal("2055", worksheet.outputs_emissions_y174); end
  def test_outputs_emissions_z174; assert_equal("2060", worksheet.outputs_emissions_z174); end
  def test_outputs_emissions_aa174; assert_equal("2065", worksheet.outputs_emissions_aa174); end
  def test_outputs_emissions_ab174; assert_equal("2070", worksheet.outputs_emissions_ab174); end
  def test_outputs_emissions_ac174; assert_equal("2075", worksheet.outputs_emissions_ac174); end
  def test_outputs_emissions_ad174; assert_equal("2080", worksheet.outputs_emissions_ad174); end
  def test_outputs_emissions_ae174; assert_equal("2085", worksheet.outputs_emissions_ae174); end
  def test_outputs_emissions_af174; assert_equal("2090", worksheet.outputs_emissions_af174); end
  def test_outputs_emissions_ag174; assert_equal("2095", worksheet.outputs_emissions_ag174); end
  def test_outputs_emissions_ah174; assert_equal("2100", worksheet.outputs_emissions_ah174); end
  def test_outputs_emissions_c175; assert_equal("G.1A", worksheet.outputs_emissions_c175); end
  def test_outputs_emissions_d175; assert_equal("Global Fuel Combustion", worksheet.outputs_emissions_d175); end
  def test_outputs_emissions_h175; assert_in_delta(0.0009130686233989812, worksheet.outputs_emissions_h175, 0.002); end
  def test_outputs_emissions_i175; assert_in_delta(0.0009965133809872679, worksheet.outputs_emissions_i175, 0.002); end
  def test_outputs_emissions_j175; assert_in_delta(0.001054643547268351, worksheet.outputs_emissions_j175, 0.002); end
  def test_outputs_emissions_k175; assert_in_delta(0.001146013024618166, worksheet.outputs_emissions_k175, 0.002); end
  def test_outputs_emissions_l175; assert_in_delta(0.0012359546542829699, worksheet.outputs_emissions_l175, 0.002); end
  def test_outputs_emissions_p175; assert_in_delta(0.0011820497535944387, worksheet.outputs_emissions_p175, 0.002); end
  def test_outputs_emissions_q175; assert_in_delta(0.0012577499886024352, worksheet.outputs_emissions_q175, 0.002); end
  def test_outputs_emissions_r175; assert_in_delta(0.001415510515192457, worksheet.outputs_emissions_r175, 0.002); end
  def test_outputs_emissions_s175; assert_in_delta(0.0015213561352245715, worksheet.outputs_emissions_s175, 0.002); end
  def test_outputs_emissions_t175; assert_in_delta(0.0016327480340632915, worksheet.outputs_emissions_t175, 0.002); end
  def test_outputs_emissions_u175; assert_in_delta(0.0016737689966777867, worksheet.outputs_emissions_u175, 0.002); end
  def test_outputs_emissions_v175; assert_in_delta(0.001760728360784437, worksheet.outputs_emissions_v175, 0.002); end
  def test_outputs_emissions_w175; assert_in_delta(0.0018166371835576765, worksheet.outputs_emissions_w175, 0.002); end
  def test_outputs_emissions_x175; assert_in_delta(0.00190770678146938, worksheet.outputs_emissions_x175, 0.002); end
  def test_outputs_emissions_c176; assert_equal("G.1B", worksheet.outputs_emissions_c176); end
  def test_outputs_emissions_d176; assert_equal("Global Fugitive Emissions from Fuels", worksheet.outputs_emissions_d176); end
  def test_outputs_emissions_h176; assert_in_delta(0.0, (worksheet.outputs_emissions_h176||0), 0.002); end
  def test_outputs_emissions_i176; assert_in_delta(0.0, (worksheet.outputs_emissions_i176||0), 0.002); end
  def test_outputs_emissions_j176; assert_in_delta(0.0, (worksheet.outputs_emissions_j176||0), 0.002); end
  def test_outputs_emissions_k176; assert_in_delta(0.0, (worksheet.outputs_emissions_k176||0), 0.002); end
  def test_outputs_emissions_l176; assert_in_delta(0.0, (worksheet.outputs_emissions_l176||0), 0.002); end
  def test_outputs_emissions_p176; assert_in_delta(0.0, (worksheet.outputs_emissions_p176||0), 0.002); end
  def test_outputs_emissions_q176; assert_in_delta(0.0, (worksheet.outputs_emissions_q176||0), 0.002); end
  def test_outputs_emissions_r176; assert_in_delta(0.0, (worksheet.outputs_emissions_r176||0), 0.002); end
  def test_outputs_emissions_s176; assert_in_delta(0.0, (worksheet.outputs_emissions_s176||0), 0.002); end
  def test_outputs_emissions_t176; assert_in_delta(0.0, (worksheet.outputs_emissions_t176||0), 0.002); end
  def test_outputs_emissions_u176; assert_in_delta(0.0, (worksheet.outputs_emissions_u176||0), 0.002); end
  def test_outputs_emissions_v176; assert_in_delta(0.0, (worksheet.outputs_emissions_v176||0), 0.002); end
  def test_outputs_emissions_w176; assert_in_delta(0.0, (worksheet.outputs_emissions_w176||0), 0.002); end
  def test_outputs_emissions_x176; assert_in_delta(0.0, (worksheet.outputs_emissions_x176||0), 0.002); end
  def test_outputs_emissions_c177; assert_equal("G.2", worksheet.outputs_emissions_c177); end
  def test_outputs_emissions_d177; assert_equal("Global Industrial Processes", worksheet.outputs_emissions_d177); end
  def test_outputs_emissions_h177; assert_in_delta(0.0010588904336770641, worksheet.outputs_emissions_h177, 0.002); end
  def test_outputs_emissions_i177; assert_in_delta(0.001058384026600717, worksheet.outputs_emissions_i177, 0.002); end
  def test_outputs_emissions_j177; assert_in_delta(0.0008160774983504037, worksheet.outputs_emissions_j177, 0.002); end
  def test_outputs_emissions_k177; assert_in_delta(0.0007678739913186566, worksheet.outputs_emissions_k177, 0.002); end
  def test_outputs_emissions_l177; assert_in_delta(0.0007341236710068264, worksheet.outputs_emissions_l177, 0.002); end
  def test_outputs_emissions_p177; assert_in_delta(0.00044470400000000014, worksheet.outputs_emissions_p177, 0.002); end
  def test_outputs_emissions_q177; assert_in_delta(0.00047175943050960754, worksheet.outputs_emissions_q177, 0.002); end
  def test_outputs_emissions_r177; assert_in_delta(0.0005488304183215176, worksheet.outputs_emissions_r177, 0.002); end
  def test_outputs_emissions_s177; assert_in_delta(0.0006286737252916495, worksheet.outputs_emissions_s177, 0.002); end
  def test_outputs_emissions_t177; assert_in_delta(0.0007151156575370677, worksheet.outputs_emissions_t177, 0.002); end
  def test_outputs_emissions_u177; assert_in_delta(0.0008050261503073785, worksheet.outputs_emissions_u177, 0.002); end
  def test_outputs_emissions_v177; assert_in_delta(0.0009092421197543805, worksheet.outputs_emissions_v177, 0.002); end
  def test_outputs_emissions_w177; assert_in_delta(0.0010190972457876362, worksheet.outputs_emissions_w177, 0.002); end
  def test_outputs_emissions_x177; assert_in_delta(0.0011458307444864534, worksheet.outputs_emissions_x177, 0.002); end
  def test_outputs_emissions_c178; assert_equal("G.3", worksheet.outputs_emissions_c178); end
  def test_outputs_emissions_d178; assert_equal("Global Solvent and Other Product Use", worksheet.outputs_emissions_d178); end
  def test_outputs_emissions_h178; assert_in_delta(0.0, (worksheet.outputs_emissions_h178||0), 0.002); end
  def test_outputs_emissions_i178; assert_in_delta(0.0, (worksheet.outputs_emissions_i178||0), 0.002); end
  def test_outputs_emissions_j178; assert_in_delta(0.0, (worksheet.outputs_emissions_j178||0), 0.002); end
  def test_outputs_emissions_k178; assert_in_delta(0.0, (worksheet.outputs_emissions_k178||0), 0.002); end
  def test_outputs_emissions_l178; assert_in_delta(0.0, (worksheet.outputs_emissions_l178||0), 0.002); end
  def test_outputs_emissions_p178; assert_in_delta(0.0, (worksheet.outputs_emissions_p178||0), 0.002); end
  def test_outputs_emissions_q178; assert_in_delta(0.0, (worksheet.outputs_emissions_q178||0), 0.002); end
  def test_outputs_emissions_r178; assert_in_delta(0.0, (worksheet.outputs_emissions_r178||0), 0.002); end
  def test_outputs_emissions_s178; assert_in_delta(0.0, (worksheet.outputs_emissions_s178||0), 0.002); end
  def test_outputs_emissions_t178; assert_in_delta(0.0, (worksheet.outputs_emissions_t178||0), 0.002); end
  def test_outputs_emissions_u178; assert_in_delta(0.0, (worksheet.outputs_emissions_u178||0), 0.002); end
  def test_outputs_emissions_v178; assert_in_delta(0.0, (worksheet.outputs_emissions_v178||0), 0.002); end
  def test_outputs_emissions_w178; assert_in_delta(0.0, (worksheet.outputs_emissions_w178||0), 0.002); end
  def test_outputs_emissions_x178; assert_in_delta(0.0, (worksheet.outputs_emissions_x178||0), 0.002); end
  def test_outputs_emissions_c179; assert_equal("G.4", worksheet.outputs_emissions_c179); end
  def test_outputs_emissions_d179; assert_equal("Global Agriculture", worksheet.outputs_emissions_d179); end
  def test_outputs_emissions_h179; assert_in_delta(0.009956991391139623, worksheet.outputs_emissions_h179, 0.002); end
  def test_outputs_emissions_i179; assert_in_delta(0.009679164975862868, worksheet.outputs_emissions_i179, 0.002); end
  def test_outputs_emissions_j179; assert_in_delta(0.009651220745010868, worksheet.outputs_emissions_j179, 0.002); end
  def test_outputs_emissions_k179; assert_in_delta(0.01042663335693185, worksheet.outputs_emissions_k179, 0.002); end
  def test_outputs_emissions_l179; assert_in_delta(0.010931037319002792, worksheet.outputs_emissions_l179, 0.002); end
  def test_outputs_emissions_p179; assert_in_delta(0.007110764527741934, worksheet.outputs_emissions_p179, 0.002); end
  def test_outputs_emissions_q179; assert_in_delta(0.007283257379626233, worksheet.outputs_emissions_q179, 0.002); end
  def test_outputs_emissions_r179; assert_in_delta(0.007586949578387349, worksheet.outputs_emissions_r179, 0.002); end
  def test_outputs_emissions_s179; assert_in_delta(0.007875607710110205, worksheet.outputs_emissions_s179, 0.002); end
  def test_outputs_emissions_t179; assert_in_delta(0.008177526094338836, worksheet.outputs_emissions_t179, 0.002); end
  def test_outputs_emissions_u179; assert_in_delta(0.00851973153497982, worksheet.outputs_emissions_u179, 0.002); end
  def test_outputs_emissions_v179; assert_in_delta(0.008903258441650325, worksheet.outputs_emissions_v179, 0.002); end
  def test_outputs_emissions_w179; assert_in_delta(0.009275328185372333, worksheet.outputs_emissions_w179, 0.002); end
  def test_outputs_emissions_x179; assert_in_delta(0.0097065037871409, worksheet.outputs_emissions_x179, 0.002); end
  def test_outputs_emissions_c180; assert_equal("G.5", worksheet.outputs_emissions_c180); end
  def test_outputs_emissions_d180; assert_equal("Global Land Use, Land-Use Change and Forestry", worksheet.outputs_emissions_d180); end
  def test_outputs_emissions_h180; assert_in_delta(0.0001813207547169811, worksheet.outputs_emissions_h180, 0.002); end
  def test_outputs_emissions_i180; assert_in_delta(0.0001813207547169811, worksheet.outputs_emissions_i180, 0.002); end
  def test_outputs_emissions_j180; assert_in_delta(0.0001530792452830189, worksheet.outputs_emissions_j180, 0.002); end
  def test_outputs_emissions_k180; assert_in_delta(0.00015910566037735847, worksheet.outputs_emissions_k180, 0.002); end
  def test_outputs_emissions_l180; assert_in_delta(0.00020126792452830188, worksheet.outputs_emissions_l180, 0.002); end
  def test_outputs_emissions_p180; assert_in_delta(0.0, (worksheet.outputs_emissions_p180||0), 0.002); end
  def test_outputs_emissions_q180; assert_in_delta(0.0, (worksheet.outputs_emissions_q180||0), 0.002); end
  def test_outputs_emissions_r180; assert_in_delta(0.0, (worksheet.outputs_emissions_r180||0), 0.002); end
  def test_outputs_emissions_s180; assert_in_delta(0.0, (worksheet.outputs_emissions_s180||0), 0.002); end
  def test_outputs_emissions_t180; assert_in_delta(0.0, (worksheet.outputs_emissions_t180||0), 0.002); end
  def test_outputs_emissions_u180; assert_in_delta(0.0, (worksheet.outputs_emissions_u180||0), 0.002); end
  def test_outputs_emissions_v180; assert_in_delta(0.0, (worksheet.outputs_emissions_v180||0), 0.002); end
  def test_outputs_emissions_w180; assert_in_delta(0.0, (worksheet.outputs_emissions_w180||0), 0.002); end
  def test_outputs_emissions_x180; assert_in_delta(0.0, (worksheet.outputs_emissions_x180||0), 0.002); end
  def test_outputs_emissions_c181; assert_equal("G.6", worksheet.outputs_emissions_c181); end
  def test_outputs_emissions_d181; assert_equal("Global Waste", worksheet.outputs_emissions_d181); end
  def test_outputs_emissions_h181; assert_in_delta(0.0002902350264975083, worksheet.outputs_emissions_h181, 0.002); end
  def test_outputs_emissions_i181; assert_in_delta(0.0003027664982506464, worksheet.outputs_emissions_i181, 0.002); end
  def test_outputs_emissions_j181; assert_in_delta(0.0003268154526079815, worksheet.outputs_emissions_j181, 0.002); end
  def test_outputs_emissions_k181; assert_in_delta(0.0003505706705604558, worksheet.outputs_emissions_k181, 0.002); end
  def test_outputs_emissions_l181; assert_in_delta(0.0003673981735885, worksheet.outputs_emissions_l181, 0.002); end
  def test_outputs_emissions_p181; assert_in_delta(0.0003673981735885, worksheet.outputs_emissions_p181, 0.002); end
  def test_outputs_emissions_q181; assert_in_delta(0.00037451507255210957, worksheet.outputs_emissions_q181, 0.002); end
  def test_outputs_emissions_r181; assert_in_delta(0.0003852962961623842, worksheet.outputs_emissions_r181, 0.002); end
  def test_outputs_emissions_s181; assert_in_delta(0.00039426839241366626, worksheet.outputs_emissions_s181, 0.002); end
  def test_outputs_emissions_t181; assert_in_delta(0.0004022829639688715, worksheet.outputs_emissions_t181, 0.002); end
  def test_outputs_emissions_u181; assert_in_delta(0.00041013280025515767, worksheet.outputs_emissions_u181, 0.002); end
  def test_outputs_emissions_v181; assert_in_delta(0.0004178068511434861, worksheet.outputs_emissions_v181, 0.002); end
  def test_outputs_emissions_w181; assert_in_delta(0.00042387284200124086, worksheet.outputs_emissions_w181, 0.002); end
  def test_outputs_emissions_x181; assert_in_delta(0.0004301275097634516, worksheet.outputs_emissions_x181, 0.002); end
  def test_outputs_emissions_c182; assert_equal("G.7", worksheet.outputs_emissions_c182); end
  def test_outputs_emissions_d182; assert_equal("Global Other", worksheet.outputs_emissions_d182); end
  def test_outputs_emissions_h182; assert_in_delta(0.0, (worksheet.outputs_emissions_h182||0), 0.002); end
  def test_outputs_emissions_i182; assert_in_delta(0.0, (worksheet.outputs_emissions_i182||0), 0.002); end
  def test_outputs_emissions_j182; assert_in_delta(0.0, (worksheet.outputs_emissions_j182||0), 0.002); end
  def test_outputs_emissions_k182; assert_in_delta(0.0, (worksheet.outputs_emissions_k182||0), 0.002); end
  def test_outputs_emissions_l182; assert_in_delta(0.0, (worksheet.outputs_emissions_l182||0), 0.002); end
  def test_outputs_emissions_p182; assert_in_delta(0.0, (worksheet.outputs_emissions_p182||0), 0.002); end
  def test_outputs_emissions_q182; assert_in_delta(0.0, (worksheet.outputs_emissions_q182||0), 0.002); end
  def test_outputs_emissions_r182; assert_in_delta(0.0, (worksheet.outputs_emissions_r182||0), 0.002); end
  def test_outputs_emissions_s182; assert_in_delta(0.0, (worksheet.outputs_emissions_s182||0), 0.002); end
  def test_outputs_emissions_t182; assert_in_delta(0.0, (worksheet.outputs_emissions_t182||0), 0.002); end
  def test_outputs_emissions_u182; assert_in_delta(0.0, (worksheet.outputs_emissions_u182||0), 0.002); end
  def test_outputs_emissions_v182; assert_in_delta(0.0, (worksheet.outputs_emissions_v182||0), 0.002); end
  def test_outputs_emissions_w182; assert_in_delta(0.0, (worksheet.outputs_emissions_w182||0), 0.002); end
  def test_outputs_emissions_x182; assert_in_delta(0.0, (worksheet.outputs_emissions_x182||0), 0.002); end
  def test_outputs_emissions_d183; assert_equal("Total", worksheet.outputs_emissions_d183); end
  def test_outputs_emissions_d184; assert_equal("Cumulative emissions", worksheet.outputs_emissions_d184); end
  def test_outputs_emissions_e184; assert_equal("exclues pre 2011", worksheet.outputs_emissions_e184); end
  def test_outputs_emissions_p184; assert_in_delta(0.009104916454924871, worksheet.outputs_emissions_p184, 0.002); end
  def test_outputs_emissions_q184; assert_in_delta(0.04608931310735539, worksheet.outputs_emissions_q184, 0.002); end
  def test_outputs_emissions_r184; assert_in_delta(0.09439898480574063, worksheet.outputs_emissions_r184, 0.002); end
  def test_outputs_emissions_s184; assert_in_delta(0.14529021673350012, worksheet.outputs_emissions_s184, 0.002); end
  def test_outputs_emissions_t184; assert_in_delta(0.1986591635158705, worksheet.outputs_emissions_t184, 0.002); end
  def test_outputs_emissions_u184; assert_in_delta(0.25449999409619106, worksheet.outputs_emissions_u184, 0.002); end
  def test_outputs_emissions_v184; assert_in_delta(0.312999232235073, worksheet.outputs_emissions_v184, 0.002); end
  def test_outputs_emissions_w184; assert_in_delta(0.37431416031020176, worksheet.outputs_emissions_w184, 0.002); end
  def test_outputs_emissions_x184; assert_in_delta(0.43862692100914946, worksheet.outputs_emissions_x184, 0.002); end
  def test_outputs_emissions_y184; assert_in_delta(0.5048227226577884, worksheet.outputs_emissions_y184, 0.002); end
  def test_outputs_emissions_z184; assert_in_delta(0.5714418352994639, worksheet.outputs_emissions_z184, 0.002); end
  def test_outputs_emissions_aa184; assert_in_delta(0.6383526780922996, worksheet.outputs_emissions_aa184, 0.002); end
  def test_outputs_emissions_ab184; assert_in_delta(0.705406415400299, worksheet.outputs_emissions_ab184, 0.002); end
  def test_outputs_emissions_ac184; assert_in_delta(0.7725073391695634, worksheet.outputs_emissions_ac184, 0.002); end
  def test_outputs_emissions_ad184; assert_in_delta(0.8396347625508451, worksheet.outputs_emissions_ad184, 0.002); end
  def test_outputs_emissions_ae184; assert_in_delta(0.9067740978644914, worksheet.outputs_emissions_ae184, 0.002); end
  def test_outputs_emissions_af184; assert_in_delta(0.9739181410684481, worksheet.outputs_emissions_af184, 0.002); end
  def test_outputs_emissions_ag184; assert_in_epsilon(1.041064555841313, worksheet.outputs_emissions_ag184, 0.002); end
  def test_outputs_emissions_ah184; assert_in_epsilon(1.1082120151407149, worksheet.outputs_emissions_ah184, 0.002); end
  def test_outputs_emissions_c213; assert_equal("Fuel type", worksheet.outputs_emissions_c213); end
  def test_outputs_emissions_d213; assert_equal("…", worksheet.outputs_emissions_d213); end
  def test_outputs_emissions_e213; assert_equal("Notes", worksheet.outputs_emissions_e213); end
  def test_outputs_emissions_f213; assert_equal("..", worksheet.outputs_emissions_f213); end
  def test_outputs_emissions_g213; assert_equal("..2", worksheet.outputs_emissions_g213); end
  def test_outputs_emissions_h213; assert_equal("….", worksheet.outputs_emissions_h213); end
  def test_outputs_emissions_i213; assert_equal("Column1", worksheet.outputs_emissions_i213); end
  def test_outputs_emissions_j213; assert_equal("Column2", worksheet.outputs_emissions_j213); end
  def test_outputs_emissions_k213; assert_equal("Column3", worksheet.outputs_emissions_k213); end
  def test_outputs_emissions_l213; assert_equal("Column4", worksheet.outputs_emissions_l213); end
  def test_outputs_emissions_m213; assert_equal("Column5", worksheet.outputs_emissions_m213); end
  def test_outputs_emissions_n213; assert_equal("Column6", worksheet.outputs_emissions_n213); end
  def test_outputs_emissions_o213; assert_equal("Column7", worksheet.outputs_emissions_o213); end
  def test_outputs_emissions_p213; assert_equal("2011", worksheet.outputs_emissions_p213); end
  def test_outputs_emissions_q213; assert_equal("2015", worksheet.outputs_emissions_q213); end
  def test_outputs_emissions_r213; assert_equal("2020", worksheet.outputs_emissions_r213); end
  def test_outputs_emissions_s213; assert_equal("2025", worksheet.outputs_emissions_s213); end
  def test_outputs_emissions_t213; assert_equal("2030", worksheet.outputs_emissions_t213); end
  def test_outputs_emissions_u213; assert_equal("2035", worksheet.outputs_emissions_u213); end
  def test_outputs_emissions_v213; assert_equal("2040", worksheet.outputs_emissions_v213); end
  def test_outputs_emissions_w213; assert_equal("2045", worksheet.outputs_emissions_w213); end
  def test_outputs_emissions_x213; assert_equal("2050", worksheet.outputs_emissions_x213); end
  def test_outputs_emissions_c214; assert_equal("CO2e", worksheet.outputs_emissions_c214); end
  def test_outputs_emissions_e214; assert_equal("Total", worksheet.outputs_emissions_e214); end
  def test_detailed_lever_guides_b69; assert_equal("Lever", worksheet.detailed_lever_guides_b69); end
  def test_detailed_lever_guides_c69; assert_equal("What is it", worksheet.detailed_lever_guides_c69); end
  def test_detailed_lever_guides_d69; assert_equal("Key constraints", worksheet.detailed_lever_guides_d69); end
  def test_detailed_lever_guides_e69; assert_equal("State of development of this technique", worksheet.detailed_lever_guides_e69); end
  def test_detailed_lever_guides_b70; assert_equal("Biochar", worksheet.detailed_lever_guides_b70); end
  def test_detailed_lever_guides_c70; assert_equal("Biomass contains carbon taken from the carbon dioxide air through the process of photosynthesis. Heating biomass in an oxygen-deficient environment results in incomplete combustion and the production of a char that has high carbon content, some of which is ‘recalcitrant’ (meaning resistant to decomposing and being re-released back into the atmosphere). If this char is buried, then this carbon is sequestered away from the atmosphere. ", worksheet.detailed_lever_guides_c70); end
  def test_detailed_lever_guides_d70; assert_equal("• Carbon stability: the proportion of recalcitrant carbon in a biochar is a function of many factors: the biomass feedstock, the method of producing the biochar, and the characteristics of the soil into which the biochar is placed. \r• Dispute for natural resources: the availability of biomass to produce the biochar.\r• Impacts on human health: Biochar dust poses a potential hazard to human health.\r• Impacts on soil biota: The addition of biochar alters the property of the soil. In many cases it can lead to enhanced crop yields. However, it can also lead to increased production of methane, and cause impacts on the biological diversity of the soil.\r• Albedo effect: the addition of large amounts of biochar to soils may result in reduced albedo (ability of the surface of the earth to reflect heat energy from the sun), thereby counteracting some of the cooling benefit of removing carbon dioxide.\r• Fire impacts: if a land area into which biochar has been added is affected by fire (e.g. fire use as an agronomical practice, accidental fire, or even as the result of a warming climate), then the carbon stored may be released back into the atmosphere.", worksheet.detailed_lever_guides_d70); end
  def test_detailed_lever_guides_e70; assert_equal("Biochar is produced from the pyrolysis of biomass, similar to the production of charcoal. Research is underway to enhance the understanding of the long-term behaviour of biochar as a means of storing carbon away from the atmosphere (sequestration potential). Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e70); end
  def test_detailed_lever_guides_b71; assert_equal("Direct air capture", worksheet.detailed_lever_guides_b71); end
  def test_detailed_lever_guides_c71; assert_equal("Direct air capture (DAC) involves using chemical processes to directly capture carbon dioxide from ambient air. Typically this will involve using an alkaline material (such as sodium hydroxide) which reacts with carbon dioxide, or a material which adsorbs the carbon dioxide. The carbon dioxide is then stored underground in suitable geological formations. DAC differs from carbon capture and storage (CCS), in that CCS involves capturing carbon dioxide from large stationary sources, such as power plants or cement plants (4-30% concentration) rather than from ambient air (~0.04% concentration). ", worksheet.detailed_lever_guides_c71); end
  def test_detailed_lever_guides_d71; assert_equal("• Energy penalty: this is the amount of energy that is required to run such systems, which may counteract the carbon savings made through the DAC process.\r• Physical constraints: given the low initial concentration of carbon dioxide in ambient air, it is necessary to treat 1.4 million cubic metres of air to remove a single tonne of carbon dioxide. These volumes indicate that the scale of the machinery is likely to be large with significant resource implications.\r• Water: many, but not all, DAC techniques have a significant water requirement.\r• Costs: it is unlikely that DAC from ambient air will be cost competitive with CCS, as the starting concentration of the carbon dioxide feedstock is so much lower. It would make economic sense to first exhaust all potential CCS opportunities before applying DAC. The exception to this would be if large quantities of extra low-carbon energy ¬¬¬(known as “stranded energy”) were available in locations close to geological storage sites.\r• Geological storage: DAC will compete with geological storage space with CCS from large stationary plants.", worksheet.detailed_lever_guides_d71); end
  def test_detailed_lever_guides_e71; assert_equal("There are about a dozen proposed Direct Air Capture (DAC) technologies that have been demonstrated at small scales. Technically the process works – in fact, the removal of carbon dioxide from ambient air in submarines and spacecraft has been practised for decades. The real questions are around the carbon balance of the systems and the economics. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e71); end
  def test_detailed_lever_guides_b72; assert_equal("Ocean fertilisation", worksheet.detailed_lever_guides_b72); end
  def test_detailed_lever_guides_c72; assert_equal("Ocean fertilisation (OF) involves enhancing the biological capacity of the oceans to draw down more carbon dioxide from the atmosphere. Photosynthesising organisms incorporate carbon dioxide from the air into their cells as they grow and multiply. Some of this carbon will eventually end up in the deep ocean where it will be effectively stored away from the atmosphere. Some parts of the ocean are deficient in micronutrients such as iron, which organisms need to grow. By adding iron filings, more photosynthesis can occur and more carbon can be transported from the atmosphere to the deep ocean. ", worksheet.detailed_lever_guides_c72); end
  def test_detailed_lever_guides_d72; assert_equal("• Biological constraints: The effectiveness of OF is limited by the area of ocean that is deficient in micronutrients. Once iron is no longer a constraint, photosynthetic activity can increase up to the point that the next constraining factor limits growth (typically the availability of nitrate).\r• Logistics: some proponents of OF have suggested that it may be possible to boost macronutrients such as nitrate as a means of enhancing photosynthetic capacity. While that may be possible, the quantity of material that is required to boost photosynthesis may be impractical.\r• Impacts on marine biodiversity: serious environmental concerns have been raised about OF. The introduction of micronutrients into the ocean will alter its ecology, favouring certain types of organism over others that thrive in low-iron waters. In addition, increased photosynthetic activity could lead to increased ocean acidification and a decrease in dissolved oxygen.\r• Efficacy: it is not sufficient for photosynthetic activity to just increase – for the technique to have a positive impact on the climate, the carbon must be transferred from the atmosphere to the deep ocean. Some studies show that a large fraction of the carbon is released back into the atmosphere as the algae die or enter the food chain, so the efficacy of the technique has been questioned. \r• Governance: the governance issues relating to OF are complicated. Rules established by the London Convention/London Protocol (LC/LP) restrict activities to small-scale scientific experiments, while the Convention on Biological Diversity also seeks to restrict such activities.", worksheet.detailed_lever_guides_d72); end
  def test_detailed_lever_guides_e72; assert_equal("A small number of Ocean fertilisation (OF) experiments have been undertaken, most with the approval of national research establishments, but some without such approval. Those experiments conducted without approval have been highly controversial. The results of the officially approved experiments have indicated, at least in some instances, that there has been a net carbon drawdown, but there are still many unanswered questions as to the long-term effects of this technique. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e72); end
  def test_detailed_lever_guides_b73; assert_equal("Enhanced weathering (oceanic)", worksheet.detailed_lever_guides_b73); end
  def test_detailed_lever_guides_c73; assert_equal("Enhanced weathering – oceanic (EW-O) seeks to enhance the chemical capacity of the oceans to draw down carbon dioxide by introducing alkaline materials that increase the pH of the ocean and allow more carbon to be stored as dissolved inorganic carbon (DIC) in the ocean. Various proposed methods have been suggested – adding limestone (calcium carbonate), hydrated lime (calcium hydroxide) or finely ground olivine (magnesium silicate), or by electrolysis of seawater.", worksheet.detailed_lever_guides_c73); end
  def test_detailed_lever_guides_d73; assert_equal("• Impacts on ocean biota: The increase in pH will affect ecosystems as certain organisms will be more suited to it than others. However, adding alkaline materials could counteract the ocean acidification process that has been caused by higher levels of carbon dioxide in the atmosphere and affects some species. Calcium and magnesium ion concentrations will become higher than historical levels, though.\r• Energy penalty and costs: the process for obtaining alkaline materials is likely to be costly both in economic and energy terms. There are few naturally occurring deposits of alkaline materials that could be added to the ocean, but it may be possible to manufacture such materials.\r• Logistics: to have a real impact on the concentration of carbon dioxide in the atmosphere would require a massive mining, mineral processing and distribution industry.\r• Governance: the application of EW-O would involve governance challenges, as the ocean is a global commons (an international global resource). An amendment (currently in progress) to the LC/LP would permit small scale research activities, but deployment would require further amendments. ", worksheet.detailed_lever_guides_d73); end
  def test_detailed_lever_guides_e73; assert_equal("Enhanced weathering (oceanic) (EW-O) has been studied in the laboratory and has been modelled, but it has not been researched in the open environment. The processes required to generate alkaline materials are well established at an industrial scale. However, the environmental impacts of adding them into the oceans are not known. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e73); end
  def test_detailed_lever_guides_b74; assert_equal("Enhanced weathering (terrestial)", worksheet.detailed_lever_guides_b74); end
  def test_detailed_lever_guides_c74; assert_equal("As silicate minerals weather, they absorb carbon dioxide from the atmosphere and store it in carbonate minerals. Enhanced weathering – terrestrial (EW-T) seeks to accelerate this natural process, which is usually very slow. The main proposed method involves grinding minerals like olivine (magnesium silicate) into a fine dust, which will react more quickly because of the higher surface-area-to-volume ratio.", worksheet.detailed_lever_guides_c74); end
  def test_detailed_lever_guides_d74; assert_equal("• Energy penalty and costs: the energy and cost requirements for grinding appropriate minerals sufficiently are high.\r• Impacts on human health: the particle size to which such minerals need to be ground to is often smaller than 10 microns in diameter - a size which can cause harm to health.\r• Geological constraints: there is an upper limit as to the amount of carbon dioxide that can be sequestered via this method, based on the saturation state of silicic acid that is produced when the magnesium silicate reacts.\r• Land use impacts: this technique will affect soils, for example by introducing trace metals present in the olivine, changing the pH. The places currently identified as most suitable for enhanced weathering (tropical areas that have high rainfall and high temperatures) are also some of the most important areas for biodiversity globally. \r• Transboundary effects: while EW-T would occur on territory under the jurisdiction of individual states, runoff from EW-T could have transboundary effects by altering the pH of river systems and potentially enhancing the saturation state of silicic acid in coastal waters. ", worksheet.detailed_lever_guides_d74); end
  def test_detailed_lever_guides_e74; assert_equal("Enhanced weathering (terrestrial) (EW-T) has been studied in the laboratory and has been modelled, but it has had little research in the open environment (although proponents of EW-T have marketed ground olivine as a soil additive already). Technical and theoretical modelling of the particle sizes indicate that while there would be some carbon dioxide drawdown, it is far less than has been claimed. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e74); end
  def test_detailed_lever_guides_u5; assert_equal("Lever controls", worksheet.detailed_lever_guides_u5); end
  def test_detailed_lever_guides_v5; assert_equal("One-pager context", worksheet.detailed_lever_guides_v5); end
  def test_detailed_lever_guides_w5; assert_equal("Things to consider", worksheet.detailed_lever_guides_w5); end
  def test_detailed_lever_guides_x5; assert_equal("1-pager Level 1", worksheet.detailed_lever_guides_x5); end
  def test_detailed_lever_guides_y5; assert_equal("1-pager Level 2", worksheet.detailed_lever_guides_y5); end
  def test_detailed_lever_guides_z5; assert_equal("1-pager Level 3", worksheet.detailed_lever_guides_z5); end
  def test_detailed_lever_guides_aa5; assert_equal("1-pager Level 4", worksheet.detailed_lever_guides_aa5); end
  def test_detailed_lever_guides_ab5; assert_equal("Key metric - data source", worksheet.detailed_lever_guides_ab5); end
  def test_detailed_lever_guides_ac5; assert_equal("More detailed context", worksheet.detailed_lever_guides_ac5); end
  def test_detailed_lever_guides_x6; assert_equal("In 2050 the population rises to 10.9 billion.", worksheet.detailed_lever_guides_x6); end
  def test_detailed_lever_guides_y6; assert_equal("In 2050 the population rises to 9.6 billion.", worksheet.detailed_lever_guides_y6); end
  def test_detailed_lever_guides_z6; assert_equal("In 2050 the population rises to 8.3 billion.", worksheet.detailed_lever_guides_z6); end
  def test_detailed_lever_guides_aa6; assert_equal("This lever only has three levels.", worksheet.detailed_lever_guides_aa6); end
  def test_detailed_lever_guides_ab6; assert_equal("g.1pager.population", worksheet.detailed_lever_guides_ab6); end
  def test_detailed_lever_guides_x7; assert_equal("75% of people live in urban areas.", worksheet.detailed_lever_guides_x7); end
  def test_detailed_lever_guides_y7; assert_equal("66% of people live in urban areas.", worksheet.detailed_lever_guides_y7); end
  def test_detailed_lever_guides_z7; assert_equal("58% of people live in urban areas.", worksheet.detailed_lever_guides_z7); end
  def test_detailed_lever_guides_aa7; assert_equal("This lever only has three levels.", worksheet.detailed_lever_guides_aa7); end
  def test_detailed_lever_guides_ab7; assert_equal("g.1pager.urbanisation", worksheet.detailed_lever_guides_ab7); end
  def test_detailed_lever_guides_x8; assert_equal("Growth in travel demand continues in cities around the world, with global distance travelled per person increasing sharply.", worksheet.detailed_lever_guides_x8); end
  def test_detailed_lever_guides_y8; assert_equal("Growth in travel demand continues in cities around the world, with global distance travelled per person increasing.", worksheet.detailed_lever_guides_y8); end
  def test_detailed_lever_guides_z8; assert_equal("Cities with established development patterns as well as growing cities pursue initiatives to reduce the need for travel throughout the city. Global distance travelled per person increases but less dramatically.", worksheet.detailed_lever_guides_z8); end
  def test_detailed_lever_guides_aa8; assert_equal("Cities make a significant effort to develop as transit-oriented, multi-use cities along with significant advances in communication technologies. Total distance travelled per person increases moderately.", worksheet.detailed_lever_guides_aa8); end
  def test_detailed_lever_guides_x9; assert_equal("Growth in freight tonne-kms remains closely tied to GDP, increasing dramatically.", worksheet.detailed_lever_guides_x9); end
  def test_detailed_lever_guides_y9; assert_equal("Growth in freight tonne-kms is at a slower rate than GDP. This could be due to producing products closer to the source of consumption and reducing demand for products such as fuels.", worksheet.detailed_lever_guides_y9); end
  def test_detailed_lever_guides_z9; assert_equal("Growth in freight tonne-kms is decoupled from GDP. This could be due to producing products closer to the source of consumption and reducing demand for products such as fuels.", worksheet.detailed_lever_guides_z9); end
  def test_detailed_lever_guides_aa9; assert_equal("Growth in freight tonne-kms is significantly decoupled from GDP. This could be due to significant reduction in demand as well major technological improvements.", worksheet.detailed_lever_guides_aa9); end
  def test_detailed_lever_guides_x10; assert_equal("In 2050 cars are the dominant mode of travel in urban areas (around 65%).", worksheet.detailed_lever_guides_x10); end
  def test_detailed_lever_guides_y10; assert_equal("In 2050, cars account for 53% of km travelled in urban areas.", worksheet.detailed_lever_guides_y10); end
  def test_detailed_lever_guides_z10; assert_equal("In 2050, cars account for 43% of km travelled in urban areas.", worksheet.detailed_lever_guides_z10); end
  def test_detailed_lever_guides_aa10; assert_equal("In 2050, cars account for 29% of km travelled in urban areas.", worksheet.detailed_lever_guides_aa10); end
  def test_detailed_lever_guides_ac10; assert_equal("Do we use cars, or do we switch to public transport, cycling and walking? In 2011, between 60 and 80% of trips are made by car in developed countries. For developing countries, this number is often less than 20%. The global average is around 40%. Roughly 83% of freight tonne-kms are made by truck or ship. The mode of travel will have a big impact on reducing overall vehicle kilometres travelled and reducing emissions from person and freight travel. This lever includes a switch between all modes including flights.", worksheet.detailed_lever_guides_ac10); end
  def test_detailed_lever_guides_x11; assert_equal("1.4 people (10% lower than 2011).", worksheet.detailed_lever_guides_x11); end
  def test_detailed_lever_guides_y11; assert_equal("1.6 people (equal to 2011).", worksheet.detailed_lever_guides_y11); end
  def test_detailed_lever_guides_z11; assert_equal("1.8 people (10% higher than 2011).", worksheet.detailed_lever_guides_z11); end
  def test_detailed_lever_guides_aa11; assert_equal("1.9 people (20% higher than 2011)", worksheet.detailed_lever_guides_aa11); end
  def test_detailed_lever_guides_x12; assert_equal("In 2050, the average urban car travels 12,000 km per year.", worksheet.detailed_lever_guides_x12); end
  def test_detailed_lever_guides_y12; assert_equal("In 2050, the average urban car travels 15,000 km per year.", worksheet.detailed_lever_guides_y12); end
  def test_detailed_lever_guides_z12; assert_equal("In 2050, the average urban car travels 30,000 km per year.", worksheet.detailed_lever_guides_z12); end
  def test_detailed_lever_guides_aa12; assert_equal("In 2050, the average urban car travels 54,000 km per year.", worksheet.detailed_lever_guides_aa12); end
  def test_detailed_lever_guides_x13; assert_equal("By 2050 most transport modes decrease their energy intensity by 0.5% annually to roughly 8 lge/100km for LDVs and 26 lge/100km for HDVs.", worksheet.detailed_lever_guides_x13); end
  def test_detailed_lever_guides_y13; assert_equal("Up to 2050 most transport modes decrease their energy intensity by 1% annually to roughly 7 lge/100km for LDVs and 22 lge/100km for HDVs.", worksheet.detailed_lever_guides_y13); end
  def test_detailed_lever_guides_z13; assert_equal("Most transport modes decrease their energy intensity by 2% annually to roughly 4.5 lge/100km for LDVs and 15 lge/100km for HDVs by 2050.", worksheet.detailed_lever_guides_z13); end
  def test_detailed_lever_guides_aa13; assert_equal("Most transport modes decrease their energy intensity by 3% annually to roughly 3 lge/100km for LDVs and 10 lge/100km for HDVs.", worksheet.detailed_lever_guides_aa13); end
  def test_detailed_lever_guides_ac13; assert_equal("How efficient will our vehicles be? The efficiency of vehicles in 2011 applies to different vehicle types and fuels used in the calculator. In 2011 light-duty vehicles had an efficiency of 10 litres gasoline equivalent (lpe) per 100km and heavy-duty vehicles, 32 lge/100km. The rate of improvement is 1 to 2% globally per year. Though many improvements in efficiency can take place by implementing existing technology globally, additional improvements will depend on the development of new technologies and making attractive, affordable vehicles with these technologies.", worksheet.detailed_lever_guides_ac13); end
  def test_detailed_lever_guides_x14; assert_equal("By 2050 the percentage of hybrid and electric vehicles remains low (5% and 2%) for passenger cars, and heavy duty vehicles (5% hybrid), and decreases for 2-3 wheelers (40% electric). Few new technologies are adopted for ships or airplanes.", worksheet.detailed_lever_guides_x14); end
  def test_detailed_lever_guides_y14; assert_equal("By 2050, there is an increased share of new technologies in the vehicle fleet. The percentage of hybrid and electric vehicles increases (10% and 10%) for passenger cars, heavy duty vehicles (10% and 3%), and 2-3 wheelers (60% electric). Some new technologies are adopted for ships or airplanes (20% hydrogen).", worksheet.detailed_lever_guides_y14); end
  def test_detailed_lever_guides_z14; assert_equal("By 2050 there is significant adoption of low emission vehicles. The percentage of hybrid, electric and hydrogen vehicles increases (20%, 20%, and 15%) for passenger cars, heavy duty vehicles (15%, 6%, and 10%), and 2-3 wheelers (70% electric). Some new technologies are adopted for ships or airplanes (40% hydrogen).", worksheet.detailed_lever_guides_z14); end
  def test_detailed_lever_guides_aa14; assert_equal("By 2050 there is major deployment of low emission vehicles. The percentage of hybrid, electric and hydrogen vehicles increases (33%, 35%, and 20%) for passenger cars, heavy duty vehicles (20% ,10%, and 20%), and 2-3 wheelers (80% electric). Many new technologies are adopted for ships or airplanes (60% hydrogen).", worksheet.detailed_lever_guides_aa14); end
  def test_detailed_lever_guides_x15; assert_equal("The average urban home has a floor area of 110 m<sup>2</sup> by 2050. This is the same level as in western Europe today.", worksheet.detailed_lever_guides_x15); end
  def test_detailed_lever_guides_y15; assert_equal("The average urban home has a floor area of 105 m<sup>2</sup> by 2050.. This is a little lower than the level of western Europe today.", worksheet.detailed_lever_guides_y15); end
  def test_detailed_lever_guides_z15; assert_equal("The average urban home has a floor area of 100 m<sup>2</sup> by 2050.. This is the same level as countries in Southern Europe today, such as Spain.", worksheet.detailed_lever_guides_z15); end
  def test_detailed_lever_guides_aa15; assert_equal("The average urban home has a floor area of 95 m<sup>2</sup> by 2050. This is the current OECD average, and the same as Japan today.", worksheet.detailed_lever_guides_aa15); end
  def test_detailed_lever_guides_x16; assert_equal("20&deg;C in winter, 24&deg;C in summer.", worksheet.detailed_lever_guides_x16); end
  def test_detailed_lever_guides_y16; assert_equal("19&deg;C in winter, 25&deg;C in summer.", worksheet.detailed_lever_guides_y16); end
  def test_detailed_lever_guides_z16; assert_equal("18&deg;C in winter, 26&deg;C in summer.", worksheet.detailed_lever_guides_z16); end
  def test_detailed_lever_guides_aa16; assert_equal("17 &deg;C in winter, 27 &deg;C in summer.", worksheet.detailed_lever_guides_aa16); end
  def test_detailed_lever_guides_x17; assert_equal("In 2050 the average urban household will have 6.3 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 5.0 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_x17); end
  def test_detailed_lever_guides_y17; assert_equal("In 2050 the average urban household will have 5.5 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 4.2 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_y17); end
  def test_detailed_lever_guides_z17; assert_equal("In 2050 the average urban household will have 4.9 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 3.6 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_z17); end
  def test_detailed_lever_guides_aa17; assert_equal("In 2050 the average urban household will have 4.1 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 3.0 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_aa17); end
  def test_detailed_lever_guides_x18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 29%.", worksheet.detailed_lever_guides_x18); end
  def test_detailed_lever_guides_y18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 47%.", worksheet.detailed_lever_guides_y18); end
  def test_detailed_lever_guides_z18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 64%.", worksheet.detailed_lever_guides_z18); end
  def test_detailed_lever_guides_aa18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 76%.", worksheet.detailed_lever_guides_aa18); end
  def test_detailed_lever_guides_x19; assert_equal("Technology mix remains the same in 2050 as today. HEATING: 2% solid boiler, 14% liquid boiler, 55% gas boiler, 2% heat pumps, 8% electricity heater, 0% solar heater, 2% micro-CHP, 17% district heating. COOLING: 93% air-conditioning 2% chiller, 5% solar cooling. COOKING: 8% solid stoves, 15% liquid stoves, 40% gas stoves, 25% electric stoves, 12% traditional biomass stoves. LIGHTING: 51% incandescents, 3% halogens, 45% CFLs, 1% LEDs. ", worksheet.detailed_lever_guides_x19); end
  def test_detailed_lever_guides_y19; assert_equal("In 2050 the technology mix will be: HEATING: 1% solid boiler, 1% liquid boiler, 10% gas boiler, 15% heat pumps, 5% electricity heater, 5% solar heater, 8% micro-CHP, 55% district heating. COOLING: 85% air-conditioning 5% chiller, 10% solar cooling. COOKING: 1% solid stoves, 8% liquid stoves, 35% gas stoves, 50% electric stoves, 6% traditional biomass stoves. LIGHTING: 20% incandescents, 1% halogens, 69% CFLs, 10% LEDs.", worksheet.detailed_lever_guides_y19); end
  def test_detailed_lever_guides_z19; assert_equal("In 2050 the technology mix will be: HEATING: 1% solid boiler, 0% liquid boiler, 30% gas boiler, 35% heat pumps, 5% electricity heater, 10% solar heater, 9% micro-CHP, 10% district heating. COOLING: 75% air-conditioning 10% chiller, 15% solar cooling. COOKING: 0% solid stoves, 1% liquid stoves, 30% gas stoves, 68% electric stoves, 1% traditional biomass stoves. LIGHTING: 0% incandescents, 0% halogens, 50% CFLs, 50% LEDs.", worksheet.detailed_lever_guides_z19); end
  def test_detailed_lever_guides_aa19; assert_equal("In 2050 the technology mix will be: HEATING: 0% solid boiler, 0% liquid boiler, 10% gas boiler, 50% heat pumps, 2% electricity heater, 20% solar heater, 11% micro-CHP, 7% district heating. COOLING: 65% air-conditioning 15% chiller, 20% solar cooling. COOKING: 0% solid stoves, 0% liquid stoves, 25% gas stoves, 75% electric stoves, 0% traditional biomass stoves. LIGHTING: 0% incandescents, 0% halogens, 20% CFLs, 80% LEDs.", worksheet.detailed_lever_guides_aa19); end
  def test_detailed_lever_guides_x20; assert_equal("An average TV uses 3% less power.", worksheet.detailed_lever_guides_x20); end
  def test_detailed_lever_guides_y20; assert_equal("An average TV uses 17% less power.", worksheet.detailed_lever_guides_y20); end
  def test_detailed_lever_guides_z20; assert_equal("An average TV uses 23% less power.", worksheet.detailed_lever_guides_z20); end
  def test_detailed_lever_guides_aa20; assert_equal("An average TV uses 30% less power.", worksheet.detailed_lever_guides_aa20); end
  def test_detailed_lever_guides_w21; assert_equal("Product demand is defined by the activity in the other sectors whenever possible (e.g. amount of buildings, infrastructure and transport demand are defined in their respective sectors). Product demand is defined by this lever when there is no link with the activity in the other sectors (e.g. packaging and paper demand are defined by this lever). This lever also specifies the lifetime of all the consumer products (and therefore the need for new products to answer a specified stock requirement at a given time).", worksheet.detailed_lever_guides_w21); end
  def test_detailed_lever_guides_x21; assert_equal("To 2050, product demand is in line with historical trends and  the GDP growth projection. Buildings, infrastructure and transport product demand are defined by the other sectors. Consumer goods increase (paper+10%, metal goods +20% and packaging +10%).There is no development in product reuse or recycling (product lifetime for cars is 12.5 years, for TVs 5 years, and for appliances 10 years).", worksheet.detailed_lever_guides_x21); end
  def test_detailed_lever_guides_y21; assert_equal("Consumer product demand worldwide reaches current EU levels then flattens. Buildings, infrastructure and transport product demand are defined by the other sectors. Consumer goods stabilize (paper+0%, metal goods +10%, packaging +0%). Moderate development in product reuse and recycling (product lifetime for cars is 13.7 years, for TVs 7 years, and for appliances 15 years).", worksheet.detailed_lever_guides_y21); end
  def test_detailed_lever_guides_z21; assert_equal("Consumer product demand remains constant (increases in some parts of the world balance decreases in others). Buildings, infrastructure and transport product demand are defined by the other sectors. Consumer goods decrease (paper-10%, metal goods -10% and packaging -10%). Significant development in product reuse and recycling (product lifetime for cars is 15 years, for TV 10 years, and for appliances 20 years).", worksheet.detailed_lever_guides_z21); end
  def test_detailed_lever_guides_aa21; assert_equal("Consumers buy fewer goods (e.g. they are higher value but less resource intensive). Buildings, infrastructure & transport product demand are defined by the other sectors. Consumer goods decrease (paper-20%, metals goods -20%, packaging -20%).Product demand not correlated to GDP increase (product life time of cars is 16.2 years, of TV 15 years, of appliances 30 years).", worksheet.detailed_lever_guides_aa21); end
  def test_detailed_lever_guides_x22; assert_equal("No product & material design improvements (leading to less materials to make products by 2050). No switch to materials which are less CO2 intensive over the product lifetime.Recycling levels the same as today (36% recycled steel, 8% non-recycled chemicals becomes recycled, -29% non-recycled aluminium becomes recycled).", worksheet.detailed_lever_guides_x22); end
  def test_detailed_lever_guides_y22; assert_equal("Ambitious product and material design improvements, leading to -10% less materials needed to make products. Minor material switches (5% steel to timber in buildings, 5% cement to timber in buildings, 5% steel to aluminium in cars and trucks, 5% steel to carbon fibres [plastics] in cars and trucks, 1.25% cement to insulation materials [plastics] in buildings and infrastructure). Minor increase by 2050 in recycling (44% steel, 16% chemicals, -21% aluminium, 9% paper).", worksheet.detailed_lever_guides_y22); end
  def test_detailed_lever_guides_z22; assert_equal("Very ambitious product and material design improvements, leading to -20% less material needed to make products. Significant material switches (10% steel to timber in buildings, 10% cement to timber in buildings, 10% steel to aluminium in cars and trucks, 10% steel to carbon fibres [plastics] in cars and trucks, 2,5% cement to insulation materials [plastics] in buildings and infrastructure). Significant increase in non recycled which will get recycled (56% steel, 24% chemicals, -14% aluminium, 24% paper).", worksheet.detailed_lever_guides_z22); end
  def test_detailed_lever_guides_aa22; assert_equal("Extreme improvements in product and material design, leading to -30% less material needed to make products by 2050. Major material switches (20% steel to timber in buildings, 10% cement to timber in buildings, 20% steel to aluminium in cars and trucks, 20% steel to carbon fibres [plastics] in cars and trucks, 5% cement to insulation materials [plastics] in buildings and infrastructure). Major increase in recycling (75% steel, 32% chemicals, -7% aluminium, 39% paper).", worksheet.detailed_lever_guides_aa22); end
  def test_detailed_lever_guides_x23; assert_equal("Continued use of current processes and technologies. Steel: 70% classic blast oxygen furnaces (using 21% scrap), 0% HIsarna, 5% electric arc furnace DRI (using 9% scrap), 25% electric arc furnace scrap (using 70% of scrap). Aluminium: 0% decrease in consumption per tonne for primary aluminium and 0% for secondary aluminium. Continued use of fuels. Minimal improvements in energy efficiency (no additional CHP). Emissions per tonne of steel and aluminium are unchanged by 2050 (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_x23); end
  def test_detailed_lever_guides_y23; assert_equal("Moderate process and technology change. Steel: 61% classic blast oxygen furnaces (using 19% of scrap), 2% HIsarna (using 0.2% of scrap), 6% EAF DRI (using 10% scrap), 31% EAF scrap (using 71% scrap). Aluminium: 5% decrease in consumption per tonne for primary aluminium and 5% for secondary aluminium. Some fuel switches in blast oxygen furnaces (2% coal to gas, 15% coal to biomass potential), none in the other steel technologies (HIsarna, EAF scrap & EAF DRI), some in primary aluminium (2% coal to biomass potential), none in secondary aluminium. Significant energy efficiency improvements (5% in blast oxygen furnaces, none in other technologies and no additional CHP development) Emissions per tonne decrease by 2% for steel and by 3% for aluminium (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_y23); end
  def test_detailed_lever_guides_z23; assert_equal("Significant technology progress. Steel: 48% classic blast oxygen furnaces (using 18% scrap), 5% Hisarna (using 1% scrap), 8% EAF DRI (using 9% scrap), 40% EAF scrap (using 72% scrap). Aluminium: (10% decrease in consumption per tonne for primary aluminium and 10% for secondary aluminium.Important fuel switches in blast oxygen furnaces (3% coal to gas, 15% coal to biomass potential), none in the other steel technologies (HIsarna, EAF scrap and EAF DRI), some in primary aluminium (3% coal to biomass potential), none in secondary aluminium. Significant energy efficiency increases (7% in blast oxygen furnaces, none in other technologies and no additional CHP development).  Emissions per tonne decrease by 1% for steel and by 7% for aluminium (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_z23); end
  def test_detailed_lever_guides_aa23; assert_equal("Extreme technology progress. Steel: 25% classic blast oxygen furnaces (using 13% scrap), 10% HIsarna (using 4% scrap), 10% EAF DRI (using 10% scrap), 55% EAF scrap (using 73% scrap). Aluminium: 20% decrease in consumption per tonne for primary aluminium and 20% for secondary aluminium. Major fuel switches in blast oxygen furnaces (5% coal to gas, 15% coal to biomass potential), none in the other steel technologies (HIsarna, EAF scrap and EAF DRI), some in primary aluminium (5% coal to biomass potential), none in secondary aluminium. Energy efficiency improvements close to technical and physical constraints (10% in blast oxygen furnaces, none in other technologies and no additional CHP development). Emissions per tonne reduce by 1% for steel & by 13% for aluminium (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_aa23); end
  def test_detailed_lever_guides_x24; assert_equal("Continued use of current processes and technologies. Continued use of fuels. Minimal improvements in energy efficiency (5% of electricity produced by CHP as now).  Emissions per tonne increase by 1% for chemicals (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_x24); end
  def test_detailed_lever_guides_y24; assert_equal("Moderate process and technology changes: 5% decrease in consumption per ton for high value chemicals (HVC), 0% in ammonia, 0% in methanol, 5% in other chemicals. Some fuel switches in HVC (10% coal to gas,10% oil to gas), some switches across all chemical technologies (5% coal to biomass potential). Significant energy efficiency improvements (5% for HVC, 8% for ammonia, 8% for methanol & 5% for other chemicals. 10% of electricity produced by CHP)  Emissions per tonne decrease by 3% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_y24); end
  def test_detailed_lever_guides_z24; assert_equal("Significant process and technology changes: 10% decrease in consumption per tonne for HVCs, 0% for ammonia, 0% for methanol, 10% for other chemicals. Important fuel switches in HVCs (20% coal to gas,20% oil to gas), some switches across all chemical technologies (10% coal to biomass potential). Significant energy efficiency improvements (10% for HVC, 15% for ammonia, 15% for methanol & 10% for other chemicals & 15% of electricity produced by CHP).  Emissions per tonne decrease by 7% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_z24); end
  def test_detailed_lever_guides_aa24; assert_equal("Very important process and technology changes: 20% decrease in consumption per tonne for HVCs, 0% for ammonia, 0% for methanol, 20% for other chemicals.Major fuel switches in HVCs (30% coal to gas,30% oil to gas), some switches across all chemical technologies (20% coal to biomass potential). Energy efficiency improvements close to technical and physical constraints (20% for HVC, 30% for ammonia, 30% for methanol & 20% for other chemicals & 20% of electricity produced by CHP).  Emissions per tonne decrease by 15% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_aa24); end
  def test_detailed_lever_guides_x25; assert_equal("Continued use of current processes and technologies. Continued use of fuels. Minimal improvements in energy efficiency (No additional CHP ( 5% of electricity produced by CHP for paper, 5% for timber & 5% for other industries). )Emissions per tonne increase by 1% for paper and 2% for other materials (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_x25); end
  def test_detailed_lever_guides_y25; assert_equal("Moderate process and technology changes: paper (5% decrease in consumption per tonne for paper pulp, 5% for virgin paper, 5% for recycled paper), 0% for timber & 0% for other industries. Some fuel switches (coal to biomass potential) inpPaper (2%), timber(2%), and other industries (2%) Significant energy efficiency (20% for paper, 20% for timber, 20% for other industries. 10% of electricity produced by CHP for paper, 10% for timber & 10% for other industries). Emissions per tonne decrease by 20% for pulp and paper and by 20% for other materials (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_y25); end
  def test_detailed_lever_guides_z25; assert_equal("Significant process and technology changes: 10% decrease in consumption per tonne for paper pulp, 10% for virgin paper, 10% for recycled paper), 0% for timber & 0% for other industries. Significant fuel switches (coal to biomass potential) in paper (3%), timber (3%), and other industries (3%). Significant energy efficiency (30% for paper, 30% for timber, 30% for other industries. 15% of electricity produced by CHP for paper, 15% for timber & 15% for other industries).  Emissions per tonne decrease by 32% for pulp and paper, and by 31% for other materials (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_z25); end
  def test_detailed_lever_guides_aa25; assert_equal("Very important process and technology changes: paper (20% decrease in consumption per ton for paper pulp, 20% for virgin paper, 20% for recycled paper), % for timber and % in other industries), 0% for timber and 0% for other industries. Major fuel switches (coal to biomass potential) in paper (5%), timber(5%), and other industries (5%). Energy efficiency close to technical and physical constraints (40% for paper, 40% for timber, 40% for other industries. 20% of electricity produced by CHP for paper, 20% for timber & 20% for other industries).  Emissions per tonne reduce by 45% for pulp and paper, and by 42% for other materials (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_aa25); end
  def test_detailed_lever_guides_x26; assert_equal("Continued use of current processes and technologies (28% clinker in cement). Continued use of fuels. Minimal improvements in energy efficiency (no additional CHP). Emissions per tonne decrease by 2% for cement (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_x26); end
  def test_detailed_lever_guides_y26; assert_equal("Moderate process and technology changes: 4% decrease in consumption per tonne (31% clinker in cement). Some fuel switches (6% coal to biomass potential) Significant energy efficiency (9%). No additional CHP developments.  Emissions per tonne decrease by 4% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_y26); end
  def test_detailed_lever_guides_z26; assert_equal("Significant process and technology changes: 8% decrease in consumption per tonne (34% clinker in cement). Significant fuel switches (46% coal to biomass potential). Significant energy efficiency (18%). No additional CHP developments.  Emissions per tonne decrease by 8% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_z26); end
  def test_detailed_lever_guides_aa26; assert_equal("Very important process and technology changes: 86% decrease in consumption per tonne (90% clinker in cement).Major fuel switches (100% coal to biomass potential). Energy efficiency close to technical & physical constraints (30%). No additional CHP developments.  Emissions per tonne reduce by 31% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_aa26); end
  def test_detailed_lever_guides_x27; assert_equal("No CCS development.", worksheet.detailed_lever_guides_x27); end
  def test_detailed_lever_guides_y27; assert_equal("Partial CCS development as of 2030 progressively leading to a reduction of 18% of emissions (excluding electricity emissions & counting biomass as fossil fuel). It also implies a 119EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_y27); end
  def test_detailed_lever_guides_z27; assert_equal("Important CCS development as of 2030 progressively leading to a reduction of 39% of emissions (excluding electricity emissions & counting biomass as fossil fuel). It also implies a 119EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_z27); end
  def test_detailed_lever_guides_aa27; assert_equal("Very important CCS development as of 2030 progressively leading to a reduction of 70% of emissions (excluding electricity emissions & counting biomass as fossil fuel). It also implies a 119EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_aa27); end
  def test_detailed_lever_guides_x28; assert_equal("61% of fuel for thermal power plants is solid, and 12% is gas.. This represents a slight move away from gas to liquid based power.", worksheet.detailed_lever_guides_x28); end
  def test_detailed_lever_guides_y28; assert_equal("61% of fuel for thermal power plants is solid, and 12% is gas.. This represents a slight move away from solid to gas and liquid based power.", worksheet.detailed_lever_guides_y28); end
  def test_detailed_lever_guides_z28; assert_equal("61% of fuel for thermal power plants is solid, and 12% is gas.. This represents a strong move away from solid to gas based power.", worksheet.detailed_lever_guides_z28); end
  def test_detailed_lever_guides_aa28; assert_equal("61% of fuel for thermal power plants is solid, and 12% is gas.. This represents a significant move away from coal and liquid based power toward gas based power.", worksheet.detailed_lever_guides_aa28); end
  def test_detailed_lever_guides_x29; assert_equal("Small increase e.g. 38% of coal power stations used ultra- or super-critical technologies.", worksheet.detailed_lever_guides_x29); end
  def test_detailed_lever_guides_y29; assert_equal("More efficient power e.g. 45% of coal power stations used ultra- or super-critical technologies.", worksheet.detailed_lever_guides_y29); end
  def test_detailed_lever_guides_z29; assert_equal("High efficiency power e.g. 50% of coal power stations used ultra- or super-critical technologies.", worksheet.detailed_lever_guides_z29); end
  def test_detailed_lever_guides_aa29; assert_equal("Very efficient power e.g. 55% of coal power stations used ultra- or super-critical technologies.", worksheet.detailed_lever_guides_aa29); end
  def test_detailed_lever_guides_x30; assert_equal("By 2050 there will be 16 GW of power plants with CCS. No new CCS plants will be commissioned beyond 2020 and the plants commissioned between 2015-2020 will be operating by 2050.", worksheet.detailed_lever_guides_x30); end
  def test_detailed_lever_guides_y30; assert_equal("490 GW of CCS installed power capacity by 2050. This could be interpreted as expansion mostly driven by the US and EU and no/low participation from non-OECD countries. 10% of total fossil fuel plants will have CCS by 2050.", worksheet.detailed_lever_guides_y30); end
  def test_detailed_lever_guides_z30; assert_equal("1,487 GW of CCS installed power capacity by 2050. This could be interpreted as moderate penetration of CCS in OECD countries and emerging economies and low expansion in developing countries. 30% of total fossil fuel-based plants have adopted CCS technology by 2050.", worksheet.detailed_lever_guides_z30); end
  def test_detailed_lever_guides_aa30; assert_equal("3,700 GW of CCS installed power capacity by 2050 High CCS expansion worldwide.", worksheet.detailed_lever_guides_aa30); end
  def test_detailed_lever_guides_ac30; assert_equal("Do we use carbon capture and storage in electricity generation? In 2011, most of the CCS projects implemented in the power sector were demonstration projects of kW and MW scale. There was no commercial deployment of CCS in power in 2011. However, there is a pipeline of CCS projects being developed by OECD countries (mainly USA and EU). These are not expected until the early 2020s.", worksheet.detailed_lever_guides_ac30); end
  def test_detailed_lever_guides_u31; assert_equal("This lever controls total world nuclear power capacity (GW).\r\r\r\r", worksheet.detailed_lever_guides_u31); end
  def test_detailed_lever_guides_v31; assert_equal("Nuclear power is a form of thermal electricity generation that uses the heat produced from nuclear reactions rather than from the combustion of fossil fuels. These reactions do not produce greenhouse gases like carbon dioxide, so it is a low-carbon source of electricity. \rNuclear power stations was first used commercially in the 1950s. In 2011 operating power stations had 369 GW of capacity, producing around 13% of the world’s electricity. The country with the highest proportion of nuclear generation is France, with around 80%. Build rates have slowed in the last few years, but are expected to increase in the next decade. ", worksheet.detailed_lever_guides_v31); end
  def test_detailed_lever_guides_w31; assert_equal("Nuclear has some benefits compared to many other low-carbon electricity sources. It can produce a reliable supply of power, unlike some renewables such as wind and solar which are intermittent. Once built, a reactor has a lifespan of around 40 years and perhaps longer. If power plants are located close to buildings with heat demand, then the waste heat produced in the generating process can be used in district heating systems rather than being released into the atmosphere. This reduces the need for high-carbon sources of heat like gas. \rHowever, nuclear power has disadvantages too. Nuclear accidents, though rare, can have serious and long-term consequences. The safe disposal and storage of the radioactive waste produced by nuclear processes is also a serious challenge, as some of the substances have a half-life of many thousand – and even millions – of years. These concerns mean that some countries and organisations do not support the use of this technology.  Even in countries that support the use of nuclear power, the planning process can be long and difficult, as local residents may object to having a power plant near their homes. The meltdown of three reactors at the Fukushima Daiichi plant in Japan in 2011 has increased safety concerns, and led to more countries closing nuclear power plants before their natural lifespan has come to an end.\rWhen choosing levels 3 or 4, you should consider that building this amount of nuclear power is likely to result in many planning challenges and may be difficult in terms of public acceptability.  ", worksheet.detailed_lever_guides_w31); end
  def test_detailed_lever_guides_x31; assert_equal("No new power stations are built, and all existing plant are switched off by 2050. It is likely that some reactors would have to retire early, before the end of their technical and economic lifespan. This represents a future that has turned away from nuclear power. \r", worksheet.detailed_lever_guides_x31); end
  def test_detailed_lever_guides_y31; assert_equal("Current global build rates for nuclear plants continue for the next few decades, meaning that there would be 558 GW in total by 2050. \r", worksheet.detailed_lever_guides_y31); end
  def test_detailed_lever_guides_z31; assert_equal("The increased build rate planned from 2011 to 2020 is sustained until 2050, meaning that there would be 989 GW in total. \r", worksheet.detailed_lever_guides_z31); end
  def test_detailed_lever_guides_aa31; assert_equal("After 2020, the build rate increases to the fastest the nuclear sector believes is technically possible, and this is sustained until 2050. This would result in 1,870 GW of capacity. This represents a future which has put an extreme amount of effort into rolling out nuclear.  \r", worksheet.detailed_lever_guides_aa31); end
  def test_detailed_lever_guides_x32; assert_equal("By 2050 there is 0 GW of onshore wind energy. It builds at a rate of 19.64% till 2013, 8% till 2015, 5% till 2020 with decommissioning in tandem. by 2050 the offshore wind energy is also 0 GW with a build rate of 34.06% by 2015. After this, the rate of build up and decommissioning matches each other until 2020 after which it serves its technical lifespan. ", worksheet.detailed_lever_guides_x32); end
  def test_detailed_lever_guides_y32; assert_equal("By 2050 there is 1862 GW of onshore wind energy and 455 GW of offshore wind energy. Different build rates were arrived by technical and geographical analysis.", worksheet.detailed_lever_guides_y32); end
  def test_detailed_lever_guides_z32; assert_equal("by 2050 there is 3800 GW of onshore wind energy and 910 GW of offshore wind energy. Different build rates were arrived by technical and geographical analysis.", worksheet.detailed_lever_guides_z32); end
  def test_detailed_lever_guides_aa32; assert_equal("By 2050 there is 5058 GW of onshore wind energy. It builds at a rate of 21% by 2015, 16% by 2020, 8% by 2030, 6% until 2040 and 2% until 2050. There is 1408 GW of offshore wind energy which builds at a rate of 34.06% until 2020, 20% until 2030, 8% by 2040 and 4% by 2050. ", worksheet.detailed_lever_guides_aa32); end
  def test_detailed_lever_guides_x33; assert_equal("1,188 GW This is equivalent to all current capacity plus all projects already under construction or that have been commissioned.", worksheet.detailed_lever_guides_x33); end
  def test_detailed_lever_guides_y33; assert_equal("1,750 GW This is equivalent to steady growth of 1.5% a year.", worksheet.detailed_lever_guides_y33); end
  def test_detailed_lever_guides_z33; assert_equal("2,101 GW This is equivalent to steady growth of 2% a year, with continued investment in large hydro and technology upgrading.", worksheet.detailed_lever_guides_z33); end
  def test_detailed_lever_guides_aa33; assert_equal("2,375 GW This is equivalent to a growth rate of 3% per year. Considering a limiting build rate of 3.55% to realize the entire hydro potential by 2050.", worksheet.detailed_lever_guides_aa33); end
  def test_detailed_lever_guides_x34; assert_equal("By 2050 there is 0 GW of tidal energy if not harnessed as the present installation would serve its technical lifespan whereas there will be 8 GW of wave energy.", worksheet.detailed_lever_guides_x34); end
  def test_detailed_lever_guides_y34; assert_equal("By 2050, there is 35 GW of tidal electricity and 62 GW of wave. ", worksheet.detailed_lever_guides_y34); end
  def test_detailed_lever_guides_z34; assert_equal("by 2050 there is 49 GW of tidal electricity. Build up rate enhanced considering construction time, global technological and environmental factors whereas there will be 105 GW of wave energy based on similar analysis.", worksheet.detailed_lever_guides_z34); end
  def test_detailed_lever_guides_aa34; assert_equal("By 2050 there is 64 GW of tidal energy and 143 GW of wave energy. Different build up rate computed considering technical maturity and potential acceptance. ", worksheet.detailed_lever_guides_aa34); end
  def test_detailed_lever_guides_x35; assert_equal("By 2050 there is 0 GW of concentrated solar power. The average build up rate is 44.45% till 2015, 43.09% by 2020 after which the rate of decommissioning and technical lifespan will exceed build up rate. by 2050 there is 0 GW of photovoltaic which builds by 18.34% by 2015, 16.58% by 2020 post which rate of decommission & technical life span takes over.", worksheet.detailed_lever_guides_x35); end
  def test_detailed_lever_guides_y35; assert_equal("By 2050 there is 388 GW of concentrated solar power and 811 GW of photovoltaic. Build up rates computed by analysing various technologies, barriers and country specific factors.", worksheet.detailed_lever_guides_y35); end
  def test_detailed_lever_guides_z35; assert_equal("by 2050 there is 879 GW of concentrated solar power and 1860 GW of photovoltaic. Build up rates computed by analysing various factors.", worksheet.detailed_lever_guides_z35); end
  def test_detailed_lever_guides_aa35; assert_equal("By 2050 there is 1067 GW of concentrated solar energy. The average build rate is 58% up to 2020 where CSP landscape will change to average 8% by 2030 and 6% by 2050. by 2050 there is 3750 GW of photovoltaic with 22.76% till 2020, 15.3% by 2030, 8.75% by 2040 and 6% till 2050. ", worksheet.detailed_lever_guides_aa35); end
  def test_detailed_lever_guides_x36; assert_equal("By 2050 there is 0 GW of geothermal electricity. Technological lifespan and depreciating CAGR was arrived by analysis of various intertwined factors.", worksheet.detailed_lever_guides_x36); end
  def test_detailed_lever_guides_y36; assert_equal("By 2050 there is 172 GW of geothermal electricity. Different build up rate were arrived for different timespans with emphasis on ring of fire countries.", worksheet.detailed_lever_guides_y36); end
  def test_detailed_lever_guides_z36; assert_equal("by 2050 there is 289 GW of geothermal electricity. Average growth rate is arrived by considering various global factors.", worksheet.detailed_lever_guides_z36); end
  def test_detailed_lever_guides_aa36; assert_equal("By 2050 there is 404 GW of geothermal electricity. The average built up rate is 9% till 2020, whereas 11.55% till 2040 and 6% up till 2050. For developing the levels different variables were mapped and interdependence of factors was analysed.", worksheet.detailed_lever_guides_aa36); end
  def test_detailed_lever_guides_x37; assert_equal("By 2050, around 152 GW of peak demand is met by energy storage. The storage has an annual growth rate of 3%.", worksheet.detailed_lever_guides_x37); end
  def test_detailed_lever_guides_y37; assert_equal("By 2050 there is 600 GW of energy storage by 2050. ", worksheet.detailed_lever_guides_y37); end
  def test_detailed_lever_guides_z37; assert_equal("By 2050 there is 800 GW of energy storage system by 2050.", worksheet.detailed_lever_guides_z37); end
  def test_detailed_lever_guides_aa37; assert_equal("High adoption of storage technologies across the globe, with 1,200 GW of energy storage by 2050. ", worksheet.detailed_lever_guides_aa37); end
  def test_detailed_lever_guides_x38; assert_equal("Global average calorie consumption increases from 2,170 kcal/person/day to the current European level, i.e., 2,560 kcal/person/day, by 2050. This represents and extreme scenario, where the entire world would reach European levels of food consumption with high risks of obesity, diabetes and cardiovascular problems. More land would have to be allocated to agricultural production.", worksheet.detailed_lever_guides_x38); end
  def test_detailed_lever_guides_y38; assert_equal("Global average calorie consumption increases from 2,170 kcal/person/day in 2011 to 2,430 kcal/person/day by 2050 based on the growth rate of the past decade (2000-2010). Therefore, this pathway corresponds to approximately the same changes in food consumption observed in the last 10 years, in which some developing countries (e.g., China and India) have substantially increased their calorie intake.", worksheet.detailed_lever_guides_y38); end
  def test_detailed_lever_guides_z38; assert_equal("Global average calorie consumption increases from 2,140 kcal/capita/day in 2011 to approximately 2,330 kcal/capita/day by 2050, which is similar to the UN's Food and Agricultural Organisation (FAO) forecast by Alexandratos and Bruinsma (2012) (adjusted to exclude food losses). In this trajectory, there will be still a significant increase of food consumption globally, but the current trend would be slightly reduced by population and consumption peaks in some countries.", worksheet.detailed_lever_guides_z38); end
  def test_detailed_lever_guides_aa38; assert_equal("Global average calorie consumption reduces slightly from 2,170 kcal/person/day in 2011 to 2,100 kcal/person/day by 2050, which is the target for a healthy diet (2,200 kcal/person/day for men, and 2,000 kcal/person/day for women). However, this scenario may also see a redistribution of calorie intakes, where some developing countries could increase food consumption (e.g., by reducing poverty), whilst some developed countries could reduce their consumption (by tackling obesity issues). Overall, this is an extreme target, given that values below this global average would result in more cases of undernourishment.", worksheet.detailed_lever_guides_aa38); end
  def test_detailed_lever_guides_x39; assert_equal("281 kcal/person/day.", worksheet.detailed_lever_guides_x39); end
  def test_detailed_lever_guides_y39; assert_equal("220 kcal/person/day.", worksheet.detailed_lever_guides_y39); end
  def test_detailed_lever_guides_z39; assert_equal("152 kcal/person/day.", worksheet.detailed_lever_guides_z39); end
  def test_detailed_lever_guides_aa39; assert_equal("14 kcal/person/day.", worksheet.detailed_lever_guides_aa39); end
  def test_detailed_lever_guides_ac39; assert_equal("How much meat will we eat? The current global average meat consumption is 191 kcal/person/day, but growing incomes in developing countries tend to promote an increase in meat consumption. This value represents the effective calorie intake by person and excludes losses along the supply chain (19% in terms of meat energy content). People in developing countries on average consume 32 kg of meat a year (88 g/person/day), compared to 80 kg/person/year (219 g/person/day) in industrialised countries (Worldwatch, 2011). As meat production is, on average, associated with significantly higher GHG emissions than the production of grains, fruit and vegetables per unit of output, a shift from a high meat diet to lower levels of meat consumption can help in the reduction of the GHG footprint of our diets. ", worksheet.detailed_lever_guides_ac39); end
  def test_detailed_lever_guides_x40; assert_equal("Increase in the consumption of meat from ruminants (25% on average, with 19% beef, 6% mutton and goat, respectively) and a decrease in the consumption of meat from non-ruminants (75% on average, with 30% poultry, 44% pork, and others) by 2050. These shares assume the UN FAO forecast for type of meat consumption as a reference.", worksheet.detailed_lever_guides_x40); end
  def test_detailed_lever_guides_y40; assert_equal("Current world meat mix stabilised by 2050. Meat from ruminants accounts for 22% (17% beef, 5% mutton and goat, and others) and from non-ruminants for approximately 78% (23% poultry, 53% pork, and others). These proportions are also similar to the current share of meat types consumed in Europe.", worksheet.detailed_lever_guides_y40); end
  def test_detailed_lever_guides_z40; assert_equal("Decrease in the consumption of meat from ruminant animals by 2050 (20%, with 12% beef, 7% mutton and goat, and others). Meat from non-ruminant would account for 80%, with 25% poultry and 54% pork, and others) by 2050. This entails a small shift from rumiants to non-rumiants from the current (2011) global share of meat types (78% non-ruminants and 22% ruminants) consumed by 2050. These shares assume the current consumption of meat types in the United Kingdom as a reference.", worksheet.detailed_lever_guides_z40); end
  def test_detailed_lever_guides_aa40; assert_equal("Extremely reduced global consumption of meat from ruminants (10%, with 6% beef, 4% mutton and goat) and a high increase in consumption of meat from non-ruminants (90%, with 14% poultry and 76% pork) by 2050. This entails an extreme shift from ruminants to non-ruminants from the current (2011) global share of meat types (78% non-ruminants and 22% ruminants) consumed by 2050. These shares assume the current consumption of meat types in China as a reference.", worksheet.detailed_lever_guides_aa40); end
  def test_detailed_lever_guides_ac40; assert_equal("Do we eat more meat from ruminants or non-ruminants? Currently, the meat from non-ruminants (monograstric animals) constitutes the dominant share of meat consumed globally (78%), while only 22% is meat from ruminants (2011). Meat from ruminants includes beef, and mutton (sheep) and goat, with respective shares of 17% and 5% (2011). Meat from non-ruminants includes pork (53%) and poultry (23%). As the production of ruminants is, on average, associated with significantly higher GHG emissions per kg of meat than meat from non-ruminant animals, a shift from a ruminant to a predominantly non-rumanant diet can help in significantly reduction of the GHG footprint of our diets. ", worksheet.detailed_lever_guides_ac40); end
  def test_detailed_lever_guides_x41; assert_equal("A severe crop productivity decrease of -10% overall by 2050, potentially due to negative impacts of climate change on agriculture or scarcity of key resources, e.g., water and fertilisers.", worksheet.detailed_lever_guides_x41); end
  def test_detailed_lever_guides_y41; assert_equal("Moderate crop yield growth of approximately 40% by 2050, as suggested by the UN's Food and Agriculture Organisation (FAO) as a likely trend (assuming grains as a reference).", worksheet.detailed_lever_guides_y41); end
  def test_detailed_lever_guides_z41; assert_equal("Global yields increase by approximately 60% by 2050. This increase represents a linear extrapolation of past yield growths, taking grains as a reference. This level assumes a significant contribution from improved crop varieties, more irrigation, higher use of fertilisers, improved farm management, technology transfer and capacity development programmes to reduce the yield gap and low levels of adverse climate change impacts on agricultural productivity.", worksheet.detailed_lever_guides_z41); end
  def test_detailed_lever_guides_aa41; assert_equal("Extreme yield growth of 100% by 2050. This ambitious level of effort assumes a substantial increase globally in the use of mechanisation, irrigation, fertilisers, biotechnology, a high increase in photosynthetic efficiencies, technology transfer, and potentially positive climate change impacts on crop productivity.", worksheet.detailed_lever_guides_aa41); end
  def test_detailed_lever_guides_ac41; assert_equal("Can we increase crop yields? Globally, crop yields are continuing to increase, although a lower rates than historically. There is a large potential, particularly in developing countries with significant productivity gaps (the difference between actual and potential yields based on agro-ecological parameters), to increase yields substantially to levels achieved in industrialised countries. From 1987-2007 global average annual crop yield growth was approximately 1.9% (FAO, 2012).", worksheet.detailed_lever_guides_ac41); end
  def test_detailed_lever_guides_x42; assert_equal("This level assumes that 10% more agricultural land would be necessary to meet the selected food/livestock/bioenergy production levels by 2050. It reflects mismanaged land use, which can cause soil degradation, soil loss or desertification, e.g. through erosion, water scarcity or salinisation.", worksheet.detailed_lever_guides_x42); end
  def test_detailed_lever_guides_y42; assert_equal("No land use efficiency improvements. This level assumes that the current global pattern of agricultural systems and practices remains stable until 2050. No further improvements or damages from land multi-use would be expected by 2050.", worksheet.detailed_lever_guides_y42); end
  def test_detailed_lever_guides_z42; assert_equal("10% improvement in efficiency, i.e., 10% less agricultural land would be necessary to meet the selected food/livestock/bioenergy production levels by 2050. It entails an increase in agro-forestry-pasture synergies and best farming practices, e.g., crop rotations, dual cropping, co-cropping and no tillage technologies. ", worksheet.detailed_lever_guides_z42); end
  def test_detailed_lever_guides_aa42; assert_equal("30% improvement in efficiency, i.e., 30% less agricultural land would be necessary to meet the selected food/livestock/bioenergy production levels by 2050. It entails a substantial increase in agro-forestry-pasture synergies and best farming practices and high uptake of climate-smart agriculture and integrated agricultural land use management (e.g., dual/triple cropping).", worksheet.detailed_lever_guides_aa42); end
  def test_detailed_lever_guides_x43; assert_equal("No cattle in feedlots by 2050.", worksheet.detailed_lever_guides_x43); end
  def test_detailed_lever_guides_y43; assert_equal("6% of cattle in feedlots by 2050.", worksheet.detailed_lever_guides_y43); end
  def test_detailed_lever_guides_z43; assert_equal("15% of cattle in feedlots by 2050.", worksheet.detailed_lever_guides_z43); end
  def test_detailed_lever_guides_aa43; assert_equal("30% of cattle in feedlots by 2050.", worksheet.detailed_lever_guides_aa43); end
  def test_detailed_lever_guides_ac43; assert_equal("The production of meat to meet future demands poses a major challenge. The production of meat to meet future demands poses a major challenge. Meat production appropriates large areas of land globally for animal feed production and pastures. Globally, there has been a gradual annual increase in livestock yields, but significant yield gaps remain in developing countries and extensive production systems prevail. In general, red meat (e.g., beef) has a larger environmental footprint (including GHG emissions, water and land requirements) than white meat (e.g., poultry). Livestock yields are affected by (a) the animal density in grass-fed systems (i.e., number of animals animals/ha of pasture), (b) the percentage of animals reared in high efficiency feedlots (confined systems), and (c) feed conversion ratios (kg of meat produced per kg of animal feed). Improvements in one or more of these parameters have the potential to significantly reduce the environmental impacts associated with meat production. This lever considers the intensification of animals traditionally raised on pasture land in confined systems, i.e., cattle, sheep and goats and feed conversion ratios (kg of edible meat per kg of feed input). It is assumed that poultry and pigs are generally raised in confined systems already and therefore these are not considered in this lever.  Currently, globally, only 2% cattle and 4% of sheep and goats are raised in confined systems, although the percentage is much higher in some regions, for example, North America and EU. On average, modern feedlots are generally associated with higher meat yields, appropriate no pasture land and have fewer emissions per kg of meat produced than free range animals (although significant amounts of crop land are required to produce the necessary animal feed).", worksheet.detailed_lever_guides_ac43); end
  def test_detailed_lever_guides_x44; assert_equal("Low increase in pasture animal density (10% by 2050), i.e., the number of cows, sheep and goats per unit of pasture land through improved animal husbandry. The feed conversion ratio (kg of meat produced per kg of animal feed) increases slightly by 5%.", worksheet.detailed_lever_guides_x44); end
  def test_detailed_lever_guides_y44; assert_equal("Moderate increase in pasture animal density (30% by 2050), i.e., the number of cows, sheep and goats per unit of pasture land through improved animal husbandry. The feed conversion ratio (kg of meat produced per kg of animal feed) increases by 10%.", worksheet.detailed_lever_guides_y44); end
  def test_detailed_lever_guides_z44; assert_equal("High increase in pasture animal density (50% by 2050), i.e., the number of cows, sheep and goats per unit of pasture land through improved animal husbandry. The feed conversion ratio (kg of meat produced per kg of animal feed) increases by 15%. This entails a higher use of conventional animal genetic improvements and technology transfer and capacity development programmes.", worksheet.detailed_lever_guides_z44); end
  def test_detailed_lever_guides_aa44; assert_equal("Extreme increase in pasture animal density (80% by 2050), i.e., the number of cows, sheep and goats per unit of pasture land through improved animal husbandry. The feed conversion ratio (kg of meat produced per kg of animal feed) increases by 20%. This entails a high use of conventional animal genetic improvements and improved pasture rotation management and capacity development programmes. Furthermore, it involves the extensive use of biotechnology, and strong technology transfer from developed to developing countries to leap-frog the learning curves to achieve higher levels of productivity.", worksheet.detailed_lever_guides_aa44); end
  def test_detailed_lever_guides_ac44; assert_equal("The production of meat to meet future demands poses a major challenge. Meat production appropriates large areas of land globally for animal feed production and pastures. Globally, there has been a gradual annual increase in livestock yields, but significant yield gaps remain in developing countries and extensive production systems prevail. In general, red meat (e.g., beef) has a larger environmental footprint (including GHG emissions, water and land requirements) than white meat (e.g., poultry). Livestock yields are affected by (a) the animal density in grass-fed systems (i.e., number of animals/ha of pasture), (b) the percentage of animals reared in high efficiency feedlots (confined systems), and (c) feed conversion ratios (kg of meat produced per kg of animal feed). Improvements in one or more of these parameters have the potential to significantly reduce the environmental impacts associated with meat production. This lever considers the increase of pasture intensity, i.e. the number of animals / ha of pasture (through improved animal husbandry schemes) and feed conversion ratios (kg of edible meat per kg of feed input). It is assumed that poultry and pigs are generally raised in confined systems and therefore these are not considered in this lever. Increasing the number of animals per ha of land results in a higher production of meat per unit of pasture land and reduced emissions per kg of meat produced.", worksheet.detailed_lever_guides_ac44); end
  def test_detailed_lever_guides_x45; assert_equal("Low yield increase of energy production per unit of area of 20% by 2050 (approximately 0.5% CAGR). This is below the current crop yield growth trend, and relies primarily on the use of crops with low energy balance (e.g., corn-based ethanol, oilseed rape-based biodiesel) for biofuels and on low efficiency solid biomass for power, heating and cooking.", worksheet.detailed_lever_guides_x45); end
  def test_detailed_lever_guides_y45; assert_equal("Moderate increase in energy production per unit of land area of 50% by 2050 (approximately 1.0% CAGR) with associated changes in the mix of energy crops towards a higher share of energy-efficient feedstocks and more efficient technologies, such as lignocellulosic fuels, anaerobic digestion and high-efficiency biomass boilers. ", worksheet.detailed_lever_guides_y45); end
  def test_detailed_lever_guides_z45; assert_equal("High increase in energy production per unit of land area of 120% by 2050 (approximately 2.0% CAGR) with associated substantial changes in the mix of energy crops towards a high share of energy-efficient feedstocks and highly efficient conversion technologies (including lignocellulosic bioethanol and Fischer-Tropsch biodiesel).", worksheet.detailed_lever_guides_z45); end
  def test_detailed_lever_guides_aa45; assert_equal("Extreme increase in energy production per unit of land area of 200% by 2050 (approximately 3.0% CAGR) with a reliance on  highly energy-efficient feedstocks and very efficient conversion technologies , including advanced fuel technologies and boilers, biorefineries and biotechnology and state-of-the-art farm management. This level assumes that highly energy-efficient dedicated energy crops (e.g., sugarcane, oil palm, switchgrass, napier grass and miscanthus) would dominate the market.", worksheet.detailed_lever_guides_aa45); end
  def test_detailed_lever_guides_ac45; assert_equal("Could we get more usable energy out of each hectare of biocrops, for example by using more efficient crop types and introducing better conversion technology? Bioenergy (solid, gaseous and liquid) represents approximately 60 EJ of the world energy mix (IPCC, 2011). Bioenergy yields are affected by (a) yields of bioenergy feedstocks (b) energy content of these crops, and (c) advances in conversion technologies. Currently, liquid bioenergy, i.e., biofuels, are primarily produced from crop-based feedstocks (e.g., wheat, maize, sugarcane, oilseed rape, etc.), but increasingly advanced biofuel technologies (based on lignocellulosic feedstocks, such as high-yielding energy crops and agricultural and forestry residues) and biorefineries (co-production of energy (fuel, heat, electricity), feed and chemicals) are deployed at commercial scales. Main producers of biofuels include the USA, Brazil, EU and China. Solid biomass is used mainly for cooking and heating, but could play a larger role in the future by displacing coal in thermal power plants and industrial uses. Biogas, produced by anaerobic decomposition of agricultural residues, manure and the organic fraction of municipal solid waste is used for cooking, heating,  transportation and industrial application (e.g., drying).", worksheet.detailed_lever_guides_ac45); end
  def test_detailed_lever_guides_x46; assert_equal("Liquid biofuels are reduced from 40% in 2011 to 20% by 2050, and therefore 80% of the bioenergy produced would be consumed in solid form, such as wood pellets and chips. This level assumes that technology changes, particularly in transport (i.e., electrification), would result a reduction of liquid biofuels.", worksheet.detailed_lever_guides_x46); end
  def test_detailed_lever_guides_y46; assert_equal("The current share of solid and liquid bioenergy (60% solid biomass and 40% liquid biofuels in 2011) remains the constant until 2050. This level assumes no substantial changes in the current pattern of bioenergy production and consumption.", worksheet.detailed_lever_guides_y46); end
  def test_detailed_lever_guides_z46; assert_equal("Increase in liquid biofuels from 40% to 60% by 2050, while solid biomass would decrease from 60% in 2011 to 40% in 2050. Biofuels would increase their relevance as a renewable energy source, mainly for the transport sector as new technologies enhance the competitiveness of advanced biofuels, e.g., lignocellulosic ethanol and biomass-to-liquids (Fischer-Tropschs).", worksheet.detailed_lever_guides_z46); end
  def test_detailed_lever_guides_aa46; assert_equal("Extreme shift towards liquid biofuels from currently 40% to 80% in 2050, while solid biomass decreases its share from 60% to 20%, respectively. Liquid biofuel would be mainly used in the transport sector, including shipping and aviation. To achieve this level of liquid biofuel penetration, it is expected that new technologies would substantially increase the competitiveness of advanced biofuels, e.g., lignocellulosic ethanol and biomass-to-liquid (Fischer-Tropsch). In contrast, the use of traditional biomass would substantially decrease worldwide.", worksheet.detailed_lever_guides_aa46); end
  def test_detailed_lever_guides_x47; assert_equal("Surplus land (achieved through climate-smart dietary, yield improvement and positive land-use efficiency choices) is allocated to 80% forests (including natural regeneration and planted forests), and 20% restoration of natural grasslands. 0% of the surplus land will be used for the production of dedicated bioenergy crops. ", worksheet.detailed_lever_guides_x47); end
  def test_detailed_lever_guides_y47; assert_equal("40% of surplus land is used for biocrops, with 48% for forest/grassland.", worksheet.detailed_lever_guides_y47); end
  def test_detailed_lever_guides_z47; assert_equal("60% of surplus land is used for biocrops, with 32% for forest/grassland.", worksheet.detailed_lever_guides_z47); end
  def test_detailed_lever_guides_aa47; assert_equal("80% of surplus land is used for biocrops, with 16% for forest/grassland.", worksheet.detailed_lever_guides_aa47); end
  def test_detailed_lever_guides_ac47; assert_equal("After accounting for food production, do we use surplus land for growing biocrops, or for the regeneration of forests and grassland? In 2011, around 6 million ha of land were deforested, not only due to livestock and agricultural expansions, but also because of timber operations and land speculations. This lever allows you to decide how any land you have freed up in your pathway is used. The size of the potential surplus land can be increased through climate-smart dietary choices (calories and meat consumed), increased yields (crops, livestock and bioenergy), and enhanced land-use efficiencies. Depending on the levels selected, more or less land will be allocated to forests and natural regeneration and/or the production of dedicated energy crops. Land occupied by settlements (which can increase according to population growth) or unsuitable for production (e.g., deserts, ice sheets, degraded lands) is pre-allocated and does not factor in the allocation of surplus land.", worksheet.detailed_lever_guides_ac47); end
  def test_detailed_lever_guides_x48; assert_equal("Biochar technology is still not used in 2050.", worksheet.detailed_lever_guides_x48); end
  def test_detailed_lever_guides_y48; assert_equal("Biochar technology removes 0.3 GtCO<sub>2</sub>/year by 2050.", worksheet.detailed_lever_guides_y48); end
  def test_detailed_lever_guides_z48; assert_equal("Biochar technology removes 0.8 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_z48); end
  def test_detailed_lever_guides_aa48; assert_equal("Biochar technology removes 3.3 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_aa48); end
  def test_detailed_lever_guides_x49; assert_equal("Direct air capture technology is still not used in 2050 .", worksheet.detailed_lever_guides_x49); end
  def test_detailed_lever_guides_y49; assert_equal("Direct air capture technology removes 1.0 GtCO<sub>2</sub>/year by 2050.", worksheet.detailed_lever_guides_y49); end
  def test_detailed_lever_guides_z49; assert_equal("Direct air capture technology removes 2.5 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_z49); end
  def test_detailed_lever_guides_aa49; assert_equal("Direct air capture technology removes 10.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_aa49); end
  def test_detailed_lever_guides_x50; assert_equal("Ocean fertilisation technology is still not used in 2050.", worksheet.detailed_lever_guides_x50); end
  def test_detailed_lever_guides_y50; assert_equal("Ocean fertilisation technology removes 0.1 GtCO<sub>2</sub>/year by 2050.", worksheet.detailed_lever_guides_y50); end
  def test_detailed_lever_guides_z50; assert_equal("Ocean fertilisation technology removes 0.3 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_z50); end
  def test_detailed_lever_guides_aa50; assert_equal("Ocean fertilisation technology removes 1.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_aa50); end
  def test_detailed_lever_guides_x51; assert_equal("Enhanced weather (oceanic) technology is still not used in 2050.", worksheet.detailed_lever_guides_x51); end
  def test_detailed_lever_guides_y51; assert_equal("Enhanced weather (oceanic) technology removes 1.0 GtCO<sub>2</sub>/year by 2050.", worksheet.detailed_lever_guides_y51); end
  def test_detailed_lever_guides_z51; assert_equal("Enhanced weather (oceanic) technology removes 2.5 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_z51); end
  def test_detailed_lever_guides_aa51; assert_equal("Enhanced weather (oceanic) technology removes 10.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_aa51); end
  def test_detailed_lever_guides_x52; assert_equal("Enhanced weather (terrestrial) technology is still not used in 2050.", worksheet.detailed_lever_guides_x52); end
  def test_detailed_lever_guides_y52; assert_equal("Enhanced weather (terrestial) technology removes 0.4 GtCO<sub>2</sub>/year by 2050.", worksheet.detailed_lever_guides_y52); end
  def test_detailed_lever_guides_z52; assert_equal("Enhanced weather (terrestial) technology removes 0.9 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_z52); end
  def test_detailed_lever_guides_aa52; assert_equal("Enhanced weather (terrestial) technology removes 3.7 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_aa52); end
  def test_detailed_lever_guides_x53; assert_equal("No increase in the collection of on-farm residues and no increase in the production of post-farm wastes and residues, but with a low increase in post-farm wastes and residues collection for energy and feed, i.e.,  plant-based food and meat from 1% to 5%; eggs from 0.2% to 0.5%; and milk from 0.1% to 0.5%, respectively, from 2011 to 2050.", worksheet.detailed_lever_guides_x53); end
  def test_detailed_lever_guides_y53; assert_equal("Moderate increase in the collection of on-farm residues (from 10% in 2011 to 20% in 2050), accompanied by a moderate reduction in the production of post-farm residues and wastes (plant-based food 24% to 20%; meat 19% to 15%; eggs 10% to 8%; milk 18% to 15%, respectively, from 2011 to 2050) and a moderate increase in their collection for energy and feed (plant-based food and meat from 1% to 30%; eggs from 0.2% to 10%; and milk from 0.1% to 10%, respectively, from 2011 to 2050).", worksheet.detailed_lever_guides_y53); end
  def test_detailed_lever_guides_z53; assert_equal("High increase in the collection of on-farm residues (from 10% in 2011 to 30% in 2050), accompanied by a significant reduction in the production of post-farm residues and wastes (plant-based food 24% to 16%; meat 19% to 10%; eggs 10% to 6%; milk 18% to 10%, respectively, from 2011 to 2050), as well as a significant increase in collection for energy and feed (plant-based food and meat from 1% to 20%; eggs from 0.2% to 5%; and milk from 0.1% to 5%, respectively, from 2011 to 2050).", worksheet.detailed_lever_guides_z53); end
  def test_detailed_lever_guides_aa53; assert_equal("Extreme increase in the collection of on-farm residues (from 10% in 2011 to 50% in 2050) , accompanied by a reduction in the production of post-farm residues and wastes (plant-based food 24% to 10%; meat 19% to 5%; eggs 10% to 5%; milk 18% to 5%, respectively, from 2011 to 2050), as well as a moderate increase in collection for energy and feed (plant-based food and meat from 1% to 30%; eggs from 0.2% to 10%; and milk from 0.1% 10%, respectively, from 2011 to 2050).", worksheet.detailed_lever_guides_aa53); end
  def test_detailed_lever_guides_x54; assert_equal("After 2050, emissions are flat.", worksheet.detailed_lever_guides_x54); end
  def test_detailed_lever_guides_y54; assert_equal("After 2050, emissions change every year by one third of the average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_y54); end
  def test_detailed_lever_guides_z54; assert_equal("After 2050, emissions change every year by two thirds the average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_z54); end
  def test_detailed_lever_guides_aa54; assert_equal("After 2050, emissions change every year by 1.16 x average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_aa54); end
  def test_detailed_lever_guides_x55; assert_equal("Land and ocean sinks increase relative to the present day; by 2100, only 30% of emitted CO2 remains in atmosphere. Such a low atmospheric fraction is only expected for trajectories with very low rates of CO2 emissions.", worksheet.detailed_lever_guides_x55); end
  def test_detailed_lever_guides_y55; assert_equal(" Land and ocean sinks remain similar to today; 44% of emitted CO2 remains in atmosphere.", worksheet.detailed_lever_guides_y55); end
  def test_detailed_lever_guides_z55; assert_equal("Land and ocean sinks decrease slightly; by 2100, 60% of emitted CO2 remains in atmosphere.", worksheet.detailed_lever_guides_z55); end
  def test_detailed_lever_guides_aa55; assert_equal("Land and ocean sinks decrease significantly: by 2100, 74% of emitted CO2 remains in atmosphere. Such a high atmospheric fraction is only expected for trajectories with very high rates of CO2 emissions.", worksheet.detailed_lever_guides_aa55); end
  def test_detailed_lever_guides_x56; assert_equal("Display only the range of model-generated outputs with no additional range to account for unmodelled phenomena. This level is provided for comparison purposes only.", worksheet.detailed_lever_guides_x56); end
  def test_detailed_lever_guides_y56; assert_equal("Generate an uncertainty range based on model output, using a method similar to the most recent IPCC report, to account for unmodelled phenomena. This method takes the \"very likely\" range generated by computer models and downgrades that to a \"likely\" range, so that the effect in the Calculator is to widen the range of projected temperatures. See documentation for further details.", worksheet.detailed_lever_guides_y56); end
  def test_detailed_lever_guides_z56; assert_equal("n/a", worksheet.detailed_lever_guides_z56); end
  def test_detailed_lever_guides_aa56; assert_equal("n/a", worksheet.detailed_lever_guides_aa56); end
  def test_detailed_lever_guides_b5; assert_equal("Lever", worksheet.detailed_lever_guides_b5); end
  def test_detailed_lever_guides_c5; assert_equal("Code", worksheet.detailed_lever_guides_c5); end
  def test_detailed_lever_guides_d5; assert_equal("Situation today", worksheet.detailed_lever_guides_d5); end
  def test_detailed_lever_guides_e5; assert_equal("Chosen level description", worksheet.detailed_lever_guides_e5); end
  def test_detailed_lever_guides_f5; assert_equal("Energy supply / demand from choice by 2050", worksheet.detailed_lever_guides_f5); end
  def test_detailed_lever_guides_g5; assert_equal("Interactions with other levers", worksheet.detailed_lever_guides_g5); end
  def test_detailed_lever_guides_h5; assert_equal("Level 1 bubble text", worksheet.detailed_lever_guides_h5); end
  def test_detailed_lever_guides_i5; assert_equal("Level 2 bubble text", worksheet.detailed_lever_guides_i5); end
  def test_detailed_lever_guides_j5; assert_equal("Level 3 bubble text", worksheet.detailed_lever_guides_j5); end
  def test_detailed_lever_guides_k5; assert_equal("Level 4 bubble text", worksheet.detailed_lever_guides_k5); end
  def test_detailed_lever_guides_l5; assert_equal("Note", worksheet.detailed_lever_guides_l5); end
  def test_detailed_lever_guides_m5; assert_equal("Lever", worksheet.detailed_lever_guides_m5); end
  def test_detailed_lever_guides_n5; assert_equal("Question for key number", worksheet.detailed_lever_guides_n5); end
  def test_detailed_lever_guides_o5; assert_equal("Metric - key unit", worksheet.detailed_lever_guides_o5); end
  def test_detailed_lever_guides_p5; assert_equal("Metric - 2011", worksheet.detailed_lever_guides_p5); end
  def test_detailed_lever_guides_q5; assert_equal("Metric - L1", worksheet.detailed_lever_guides_q5); end
  def test_detailed_lever_guides_r5; assert_equal("Metric - L2", worksheet.detailed_lever_guides_r5); end
  def test_detailed_lever_guides_s5; assert_equal("Metric - L3", worksheet.detailed_lever_guides_s5); end
  def test_detailed_lever_guides_t5; assert_equal("Metric - L4", worksheet.detailed_lever_guides_t5); end
  def test_detailed_lever_guides_b6; assert_equal("Global population", worksheet.detailed_lever_guides_b6); end
  def test_detailed_lever_guides_d6; assert_equal("How many people will there be in 2050? In 2011 there were 6.97 billion.", worksheet.detailed_lever_guides_d6); end
  def test_detailed_lever_guides_e6; assert_equal("There are 9.6 billion people in 2050.", worksheet.detailed_lever_guides_e6); end
  def test_detailed_lever_guides_g6; assert_equal("This lever also drives the total food consumption, total buildings demand and total transport demand.", worksheet.detailed_lever_guides_g6); end
  def test_detailed_lever_guides_h6; assert_equal("In 2050 the population rises to 10.9 billion.", worksheet.detailed_lever_guides_h6); end
  def test_detailed_lever_guides_i6; assert_equal("In 2050 the population rises to 9.6 billion.", worksheet.detailed_lever_guides_i6); end
  def test_detailed_lever_guides_j6; assert_equal("In 2050 the population rises to 8.3 billion.", worksheet.detailed_lever_guides_j6); end
  def test_detailed_lever_guides_k6; assert_equal("This lever only has three levels.", worksheet.detailed_lever_guides_k6); end
  def test_detailed_lever_guides_m6; assert_equal("Global population", worksheet.detailed_lever_guides_m6); end
  def test_detailed_lever_guides_n6; assert_equal("How many people will there be?", worksheet.detailed_lever_guides_n6); end
  def test_detailed_lever_guides_o6; assert_equal("Number of people globally", worksheet.detailed_lever_guides_o6); end
  def test_detailed_lever_guides_p6; assert_equal("6,970,000,000", worksheet.detailed_lever_guides_p6); end
  def test_detailed_lever_guides_q6; assert_equal("10,900,000,000", worksheet.detailed_lever_guides_q6); end
  def test_detailed_lever_guides_r6; assert_equal("9,600,000,000", worksheet.detailed_lever_guides_r6); end
  def test_detailed_lever_guides_s6; assert_equal("8,300,000,000", worksheet.detailed_lever_guides_s6); end
  def test_detailed_lever_guides_t6; assert_equal("(no level 4)", worksheet.detailed_lever_guides_t6); end
  def test_detailed_lever_guides_b7; assert_equal("Urbanisation", worksheet.detailed_lever_guides_b7); end
  def test_detailed_lever_guides_d7; assert_equal("What percentage of people will live in urban areas? In 2011 it was 52%.", worksheet.detailed_lever_guides_d7); end
  def test_detailed_lever_guides_e7; assert_equal("66% of people live in urban areas.", worksheet.detailed_lever_guides_e7); end
  def test_detailed_lever_guides_g7; assert_equal("This lever also drives the total buildings demand and total transport demand.", worksheet.detailed_lever_guides_g7); end
  def test_detailed_lever_guides_h7; assert_equal("75% of people live in urban areas.", worksheet.detailed_lever_guides_h7); end
  def test_detailed_lever_guides_i7; assert_equal("66% of people live in urban areas.", worksheet.detailed_lever_guides_i7); end
  def test_detailed_lever_guides_j7; assert_equal("58% of people live in urban areas.", worksheet.detailed_lever_guides_j7); end
  def test_detailed_lever_guides_k7; assert_equal("This lever only has three levels.", worksheet.detailed_lever_guides_k7); end
  def test_detailed_lever_guides_m7; assert_equal("Urbanisation", worksheet.detailed_lever_guides_m7); end
  def test_detailed_lever_guides_n7; assert_equal("How many people will live in urban areas?", worksheet.detailed_lever_guides_n7); end
  def test_detailed_lever_guides_o7; assert_equal("% of population living in urban areas", worksheet.detailed_lever_guides_o7); end
  def test_detailed_lever_guides_p7; assert_in_epsilon(52.0, worksheet.detailed_lever_guides_p7, 0.002); end
  def test_detailed_lever_guides_q7; assert_in_epsilon(75.0, worksheet.detailed_lever_guides_q7, 0.002); end
  def test_detailed_lever_guides_r7; assert_in_epsilon(66.0, worksheet.detailed_lever_guides_r7, 0.002); end
  def test_detailed_lever_guides_s7; assert_in_epsilon(58.0, worksheet.detailed_lever_guides_s7, 0.002); end
  def test_detailed_lever_guides_t7; assert_equal("(no level 4)", worksheet.detailed_lever_guides_t7); end
  def test_detailed_lever_guides_b8; assert_equal("Passenger distance", worksheet.detailed_lever_guides_b8); end
  def test_detailed_lever_guides_d8; assert_equal("How far will we travel? For example, in 2011 the average urban person travelled 9,200 km/year domestically.", worksheet.detailed_lever_guides_d8); end
  def test_detailed_lever_guides_g8; assert_equal("Passenger demand is very dependent on mode and occupancy. If more car trips are shifted to walking, cycling, transit, rail and 2-3 wheelers through better city design then number as well as distance of trips will likely be reduced. ", worksheet.detailed_lever_guides_g8); end
  def test_detailed_lever_guides_h8; assert_equal("13,300 km/year (45% increase from 2011).", worksheet.detailed_lever_guides_h8); end
  def test_detailed_lever_guides_i8; assert_equal("12,400 km/year (35% increase from 2011).", worksheet.detailed_lever_guides_i8); end
  def test_detailed_lever_guides_j8; assert_equal("11,900 km/year (30% increase from 2011).", worksheet.detailed_lever_guides_j8); end
  def test_detailed_lever_guides_k8; assert_equal("11,500 km/year (26% increase from 2011)", worksheet.detailed_lever_guides_k8); end
  def test_detailed_lever_guides_m8; assert_equal("Passenger distance", worksheet.detailed_lever_guides_m8); end
  def test_detailed_lever_guides_n8; assert_equal("How far will the average urban person travel?", worksheet.detailed_lever_guides_n8); end
  def test_detailed_lever_guides_o8; assert_equal("average domestic urban distance travelled in km/person/year", worksheet.detailed_lever_guides_o8); end
  def test_detailed_lever_guides_p8; assert_equal("9,200", worksheet.detailed_lever_guides_p8); end
  def test_detailed_lever_guides_q8; assert_equal("13,300", worksheet.detailed_lever_guides_q8); end
  def test_detailed_lever_guides_r8; assert_equal("12,400", worksheet.detailed_lever_guides_r8); end
  def test_detailed_lever_guides_s8; assert_equal("11,900", worksheet.detailed_lever_guides_s8); end
  def test_detailed_lever_guides_t8; assert_equal("11,500", worksheet.detailed_lever_guides_t8); end
  def test_detailed_lever_guides_b9; assert_equal("Freight distance", worksheet.detailed_lever_guides_b9); end
  def test_detailed_lever_guides_d9; assert_equal("How far will our freight travel? In 2011 freight travelled 85 trillion tonne-kms.", worksheet.detailed_lever_guides_d9); end
  def test_detailed_lever_guides_g9; assert_equal("Freight demand’s impact on reducing CO2 emissions is highly dependent on vehicle load factors and the modes by which freight growth is accommodated.", worksheet.detailed_lever_guides_g9); end
  def test_detailed_lever_guides_h9; assert_equal("Freight increases by 246%", worksheet.detailed_lever_guides_h9); end
  def test_detailed_lever_guides_i9; assert_equal("Freight increases by 217%", worksheet.detailed_lever_guides_i9); end
  def test_detailed_lever_guides_j9; assert_equal("Freight increases by 187%", worksheet.detailed_lever_guides_j9); end
  def test_detailed_lever_guides_k9; assert_equal("Freight increases by 152%", worksheet.detailed_lever_guides_k9); end
  def test_detailed_lever_guides_m9; assert_equal("Freight distance", worksheet.detailed_lever_guides_m9); end
  def test_detailed_lever_guides_n9; assert_equal("How far will our stuff travel?", worksheet.detailed_lever_guides_n9); end
  def test_detailed_lever_guides_o9; assert_equal("trillion tonne-km per year (2011)", worksheet.detailed_lever_guides_o9); end
  def test_detailed_lever_guides_p9; assert_equal("85", worksheet.detailed_lever_guides_p9); end
  def test_detailed_lever_guides_q9; assert_equal("209", worksheet.detailed_lever_guides_q9); end
  def test_detailed_lever_guides_r9; assert_equal("185", worksheet.detailed_lever_guides_r9); end
  def test_detailed_lever_guides_s9; assert_equal("159", worksheet.detailed_lever_guides_s9); end
  def test_detailed_lever_guides_t9; assert_equal("129", worksheet.detailed_lever_guides_t9); end
  def test_detailed_lever_guides_b10; assert_equal("Mode", worksheet.detailed_lever_guides_b10); end
  def test_detailed_lever_guides_d10; assert_equal("Do we use cars, or do we switch to public transport, cycling and walking? For example, in 2011 38% of all km travelled by urban passengers were by car.", worksheet.detailed_lever_guides_d10); end
  def test_detailed_lever_guides_g10; assert_equal("The effectiveness of mode shifts will also be impacted by the total quantity of demand. The modes also impact vehicle types, thereby impacting the results from the efficiency and electrification levers. ", worksheet.detailed_lever_guides_g10); end
  def test_detailed_lever_guides_h10; assert_equal("In 2050 cars are the dominant mode of travel in urban areas (around 65%).", worksheet.detailed_lever_guides_h10); end
  def test_detailed_lever_guides_i10; assert_equal("In 2050, cars account for 53% of km travelled in urban areas.", worksheet.detailed_lever_guides_i10); end
  def test_detailed_lever_guides_j10; assert_equal("In 2050, cars account for 43% of km travelled in urban areas.", worksheet.detailed_lever_guides_j10); end
  def test_detailed_lever_guides_k10; assert_equal("In 2050, cars account for 29% of km travelled in urban areas.", worksheet.detailed_lever_guides_k10); end
  def test_detailed_lever_guides_m10; assert_equal("Mode", worksheet.detailed_lever_guides_m10); end
  def test_detailed_lever_guides_n10; assert_equal("What proportion of km travelled were by car?", worksheet.detailed_lever_guides_n10); end
  def test_detailed_lever_guides_o10; assert_equal("% of km travelled by car", worksheet.detailed_lever_guides_o10); end
  def test_detailed_lever_guides_p10; assert_equal("38%", worksheet.detailed_lever_guides_p10); end
  def test_detailed_lever_guides_q10; assert_equal("65%", worksheet.detailed_lever_guides_q10); end
  def test_detailed_lever_guides_r10; assert_equal("53%", worksheet.detailed_lever_guides_r10); end
  def test_detailed_lever_guides_s10; assert_equal("43%", worksheet.detailed_lever_guides_s10); end
  def test_detailed_lever_guides_t10; assert_equal("29%", worksheet.detailed_lever_guides_t10); end
  def test_detailed_lever_guides_b11; assert_equal("Occupancy and load", worksheet.detailed_lever_guides_b11); end
  def test_detailed_lever_guides_d11; assert_equal("Can each vehicle carry more people or heavier loads? For example, in 2011 the average urban car carried 1.6 people.", worksheet.detailed_lever_guides_d11); end
  def test_detailed_lever_guides_g11; assert_equal("The impact of changes to occupancy will depend on the other transport levers.", worksheet.detailed_lever_guides_g11); end
  def test_detailed_lever_guides_h11; assert_equal("1.4 people (10% lower than 2011).", worksheet.detailed_lever_guides_h11); end
  def test_detailed_lever_guides_i11; assert_equal("1.6 people (equal to 2011).", worksheet.detailed_lever_guides_i11); end
  def test_detailed_lever_guides_j11; assert_equal("1.8 people (10% higher than 2011).", worksheet.detailed_lever_guides_j11); end
  def test_detailed_lever_guides_k11; assert_equal("1.9 people (20% higher than 2011)", worksheet.detailed_lever_guides_k11); end
  def test_detailed_lever_guides_m11; assert_equal("Occupancy and load", worksheet.detailed_lever_guides_m11); end
  def test_detailed_lever_guides_n11; assert_equal("Can each vehicle carry more people or heavier loads?", worksheet.detailed_lever_guides_n11); end
  def test_detailed_lever_guides_o11; assert_equal("Occupancy (number of people) per average urban car (2011), then % increase", worksheet.detailed_lever_guides_o11); end
  def test_detailed_lever_guides_p11; assert_equal("1.6", worksheet.detailed_lever_guides_p11); end
  def test_detailed_lever_guides_q11; assert_equal("1.4", worksheet.detailed_lever_guides_q11); end
  def test_detailed_lever_guides_r11; assert_equal("1.6", worksheet.detailed_lever_guides_r11); end
  def test_detailed_lever_guides_s11; assert_equal("1.8", worksheet.detailed_lever_guides_s11); end
  def test_detailed_lever_guides_t11; assert_equal("1.9", worksheet.detailed_lever_guides_t11); end
  def test_detailed_lever_guides_b12; assert_equal("Car own or hire ", worksheet.detailed_lever_guides_b12); end
  def test_detailed_lever_guides_d12; assert_equal("In 2011, the average urban car travelled 15,000 km per year, but this could change in future if more people move away from owning private cars, towards hired, shared or self-driving vehicles.", worksheet.detailed_lever_guides_d12); end
  def test_detailed_lever_guides_e12; assert_equal("In 2050, the average urban car travels 15,000 km per year.", worksheet.detailed_lever_guides_e12); end
  def test_detailed_lever_guides_h12; assert_equal("In 2050, the average urban car travels 12,000 km per year.", worksheet.detailed_lever_guides_h12); end
  def test_detailed_lever_guides_i12; assert_equal("In 2050, the average urban car travels 15,000 km per year.", worksheet.detailed_lever_guides_i12); end
  def test_detailed_lever_guides_j12; assert_equal("In 2050, the average urban car travels 30,000 km per year.", worksheet.detailed_lever_guides_j12); end
  def test_detailed_lever_guides_k12; assert_equal("In 2050, the average urban car travels 54,000 km per year.", worksheet.detailed_lever_guides_k12); end
  def test_detailed_lever_guides_m12; assert_equal("Car own or hire ", worksheet.detailed_lever_guides_m12); end
  def test_detailed_lever_guides_n12; assert_equal("Will car hiring/sharing increase the distance an average car travels per year?", worksheet.detailed_lever_guides_n12); end
  def test_detailed_lever_guides_o12; assert_equal("Km per year travelled by average urban ICE car", worksheet.detailed_lever_guides_o12); end
  def test_detailed_lever_guides_p12; assert_equal("15,000", worksheet.detailed_lever_guides_p12); end
  def test_detailed_lever_guides_q12; assert_equal("12,000", worksheet.detailed_lever_guides_q12); end
  def test_detailed_lever_guides_r12; assert_equal("15,000", worksheet.detailed_lever_guides_r12); end
  def test_detailed_lever_guides_s12; assert_equal("30,000", worksheet.detailed_lever_guides_s12); end
  def test_detailed_lever_guides_t12; assert_equal("54,000", worksheet.detailed_lever_guides_t12); end
  def test_detailed_lever_guides_b13; assert_equal("Efficiency", worksheet.detailed_lever_guides_b13); end
  def test_detailed_lever_guides_d13; assert_equal("How efficient will our vehicles be? For example, in 2011 the average urban passenger car uses 8.6 litres of fuel per 100km. Efficiency has been improving around 1 to 2% a year.", worksheet.detailed_lever_guides_d13); end
  def test_detailed_lever_guides_g13; assert_equal("The efficiency lever will depend on the mode and occupancy lever. The more vehicles in the fleet, the more effective efficiency improvements will be in reducing emissions.", worksheet.detailed_lever_guides_g13); end
  def test_detailed_lever_guides_h13; assert_equal("By 2050 the average urban passenger car (with an internal combusion engine) will use 5.9 litres of fuel per 100km. ", worksheet.detailed_lever_guides_h13); end
  def test_detailed_lever_guides_i13; assert_equal("By 2050 the average urban passenger car (with an internal combusion engine) will use 5.3 litres of fuel per 100km. ", worksheet.detailed_lever_guides_i13); end
  def test_detailed_lever_guides_j13; assert_equal("By 2050 the average urban passenger car (with an internal combusion engine) will use 4.3 litres of fuel per 100km. ", worksheet.detailed_lever_guides_j13); end
  def test_detailed_lever_guides_k13; assert_equal("By 2050 the average urban passenger car (with an internal combusion engine) will use 3.6 litres of fuel per 100km. ", worksheet.detailed_lever_guides_k13); end
  def test_detailed_lever_guides_m13; assert_equal("Efficiency", worksheet.detailed_lever_guides_m13); end
  def test_detailed_lever_guides_n13; assert_equal("How efficient wil the average urban passenger car with an internal combustion engine be?", worksheet.detailed_lever_guides_n13); end
  def test_detailed_lever_guides_o13; assert_equal("litres of fuel per 100km", worksheet.detailed_lever_guides_o13); end
  def test_detailed_lever_guides_p13; assert_equal("8.6", worksheet.detailed_lever_guides_p13); end
  def test_detailed_lever_guides_q13; assert_equal("5.9", worksheet.detailed_lever_guides_q13); end
  def test_detailed_lever_guides_r13; assert_equal("5.3", worksheet.detailed_lever_guides_r13); end
  def test_detailed_lever_guides_s13; assert_equal("4.3", worksheet.detailed_lever_guides_s13); end
  def test_detailed_lever_guides_t13; assert_equal("3.6", worksheet.detailed_lever_guides_t13); end
  def test_detailed_lever_guides_b14; assert_equal("Electric and hydrogen", worksheet.detailed_lever_guides_b14); end
  def test_detailed_lever_guides_d14; assert_equal("Will we switch to lower emission vehicles, such as hybrid, electric or hydrogen vehicles? For example, in 2011 only 0.2% of passenger cars were electric and very few used hydrogen.", worksheet.detailed_lever_guides_d14); end
  def test_detailed_lever_guides_g14; assert_equal("The impact of the electrification lever depends on the distribution of modes as well as the passenger and freight demand. The more vehicles in the fleet, the greater the impact of electrification in reducing emissions.", worksheet.detailed_lever_guides_g14); end
  def test_detailed_lever_guides_h14; assert_equal("By 2050, 2.0% of passenger cars are electric/hydrogen-powered.", worksheet.detailed_lever_guides_h14); end
  def test_detailed_lever_guides_i14; assert_equal("By 2050, 10.0% of passenger cars are electric/hydrogen-powered.", worksheet.detailed_lever_guides_i14); end
  def test_detailed_lever_guides_j14; assert_equal("By 2050, 35.0% of passenger cars are electric/hydrogen-powered.", worksheet.detailed_lever_guides_j14); end
  def test_detailed_lever_guides_k14; assert_equal("By 2050, 55.0% of passenger cars are electric/hydrogen-powered", worksheet.detailed_lever_guides_k14); end
  def test_detailed_lever_guides_m14; assert_equal("Electric and hydrogen", worksheet.detailed_lever_guides_m14); end
  def test_detailed_lever_guides_n14; assert_equal("How many vehicles will be either electric or hydrogen powered?", worksheet.detailed_lever_guides_n14); end
  def test_detailed_lever_guides_o14; assert_equal("% of passenger cars that are electric or hydrogen powered", worksheet.detailed_lever_guides_o14); end
  def test_detailed_lever_guides_p14; assert_equal("0.2%", worksheet.detailed_lever_guides_p14); end
  def test_detailed_lever_guides_q14; assert_equal("2%", worksheet.detailed_lever_guides_q14); end
  def test_detailed_lever_guides_r14; assert_equal("10%", worksheet.detailed_lever_guides_r14); end
  def test_detailed_lever_guides_s14; assert_equal("35%", worksheet.detailed_lever_guides_s14); end
  def test_detailed_lever_guides_t14; assert_equal("55%", worksheet.detailed_lever_guides_t14); end
  def test_detailed_lever_guides_b15; assert_equal("Building size", worksheet.detailed_lever_guides_b15); end
  def test_detailed_lever_guides_d15; assert_equal("How big will our buildings be? For example, in 2011 the average area of an urban household was 92 m<sup>2</sup>.", worksheet.detailed_lever_guides_d15); end
  def test_detailed_lever_guides_e15; assert_equal("The average urban home will have a floor area of 100 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_e15); end
  def test_detailed_lever_guides_h15; assert_equal("The average urban home has a floor area of 110 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_h15); end
  def test_detailed_lever_guides_i15; assert_equal("The average urban home has a floor area of 105 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_i15); end
  def test_detailed_lever_guides_j15; assert_equal("The average urban home has a floor area of 100 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_j15); end
  def test_detailed_lever_guides_k15; assert_equal("The average urban home has a floor area of 95 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_k15); end
  def test_detailed_lever_guides_m15; assert_equal("Building size", worksheet.detailed_lever_guides_m15); end
  def test_detailed_lever_guides_n15; assert_equal("How big will the average urban home be?", worksheet.detailed_lever_guides_n15); end
  def test_detailed_lever_guides_o15; assert_equal("Area of average urban household (square metres)", worksheet.detailed_lever_guides_o15); end
  def test_detailed_lever_guides_p15; assert_in_epsilon(92.0, worksheet.detailed_lever_guides_p15, 0.002); end
  def test_detailed_lever_guides_q15; assert_in_epsilon(110.0, worksheet.detailed_lever_guides_q15, 0.002); end
  def test_detailed_lever_guides_r15; assert_in_epsilon(105.0, worksheet.detailed_lever_guides_r15, 0.002); end
  def test_detailed_lever_guides_s15; assert_in_epsilon(100.0, worksheet.detailed_lever_guides_s15, 0.002); end
  def test_detailed_lever_guides_t15; assert_in_epsilon(95.0, worksheet.detailed_lever_guides_t15, 0.002); end
  def test_detailed_lever_guides_b16; assert_equal("Temperature & hot water use", worksheet.detailed_lever_guides_b16); end
  def test_detailed_lever_guides_d16; assert_equal("How comfortable will our home temperatures be? For example, in 2011 the average urban home temperature was 17.5&deg;C in winter and 26.5&deg;C in summer.", worksheet.detailed_lever_guides_d16); end
  def test_detailed_lever_guides_e16; assert_equal("In 2050 the average urban home will have an inside temperature of 20 &deg;C in winter and 24 &deg;C in summer.", worksheet.detailed_lever_guides_e16); end
  def test_detailed_lever_guides_h16; assert_equal("20&deg;C in winter, 24&deg;C in summer.", worksheet.detailed_lever_guides_h16); end
  def test_detailed_lever_guides_i16; assert_equal("19&deg;C in winter, 25&deg;C in summer.", worksheet.detailed_lever_guides_i16); end
  def test_detailed_lever_guides_j16; assert_equal("18&deg;C in winter, 26&deg;C in summer.", worksheet.detailed_lever_guides_j16); end
  def test_detailed_lever_guides_k16; assert_equal("17 &deg;C in winter, 27 &deg;C in summer.", worksheet.detailed_lever_guides_k16); end
  def test_detailed_lever_guides_m16; assert_equal("Temperature & hot water use", worksheet.detailed_lever_guides_m16); end
  def test_detailed_lever_guides_n16; assert_equal("How comfortable will our home temperatures be in summer?", worksheet.detailed_lever_guides_n16); end
  def test_detailed_lever_guides_o16; assert_equal("Average urban home temperature in summer (deg;C)", worksheet.detailed_lever_guides_o16); end
  def test_detailed_lever_guides_p16; assert_equal("26.5&deg;C.", worksheet.detailed_lever_guides_p16); end
  def test_detailed_lever_guides_q16; assert_equal("24 &deg;C.", worksheet.detailed_lever_guides_q16); end
  def test_detailed_lever_guides_r16; assert_equal("25 &deg;C.", worksheet.detailed_lever_guides_r16); end
  def test_detailed_lever_guides_s16; assert_equal("26 &deg;C.", worksheet.detailed_lever_guides_s16); end
  def test_detailed_lever_guides_t16; assert_equal("27 &deg;C.", worksheet.detailed_lever_guides_t16); end
  def test_detailed_lever_guides_b17; assert_equal("Lighting, cooking & appliance use", worksheet.detailed_lever_guides_b17); end
  def test_detailed_lever_guides_d17; assert_equal("How many appliances will we have in our homes? For example, in 2011 the average urban household had 4.0 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 2.0 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_d17); end
  def test_detailed_lever_guides_e17; assert_equal("In 2050 the average urban household will have 6.0 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 4.7 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_e17); end
  def test_detailed_lever_guides_h17; assert_equal("6.3 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 5.0 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_h17); end
  def test_detailed_lever_guides_i17; assert_equal("5.5 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 4.2 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_i17); end
  def test_detailed_lever_guides_j17; assert_equal("4.9 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 3.6 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_j17); end
  def test_detailed_lever_guides_k17; assert_equal("4.1 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 3.0 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_k17); end
  def test_detailed_lever_guides_m17; assert_equal("Lighting, cooking & appliance use", worksheet.detailed_lever_guides_m17); end
  def test_detailed_lever_guides_n17; assert_equal("How many appliances will we have in our homes?", worksheet.detailed_lever_guides_n17); end
  def test_detailed_lever_guides_o17; assert_equal("Average number of large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) in urban homes", worksheet.detailed_lever_guides_o17); end
  def test_detailed_lever_guides_p17; assert_in_epsilon(3.958364024436915, worksheet.detailed_lever_guides_p17, 0.002); end
  def test_detailed_lever_guides_q17; assert_in_epsilon(6.343995562824797, worksheet.detailed_lever_guides_q17, 0.002); end
  def test_detailed_lever_guides_r17; assert_in_epsilon(5.4758572622881, worksheet.detailed_lever_guides_r17, 0.002); end
  def test_detailed_lever_guides_s17; assert_in_epsilon(4.907063310343802, worksheet.detailed_lever_guides_s17, 0.002); end
  def test_detailed_lever_guides_t17; assert_in_epsilon(4.083792065075336, worksheet.detailed_lever_guides_t17, 0.002); end
  def test_detailed_lever_guides_b18; assert_equal("Building insulation", worksheet.detailed_lever_guides_b18); end
  def test_detailed_lever_guides_d18; assert_equal("How insulated will our buildings be? For example, in 2011 the average heat loss coefficient of an urban residential building was 16.9 GW/(M ha*&deg;C).", worksheet.detailed_lever_guides_d18); end
  def test_detailed_lever_guides_e18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 29% by 2050. The average heat loss coefficient of these buildings will be 12 GW/(M ha*&deg;C).", worksheet.detailed_lever_guides_e18); end
  def test_detailed_lever_guides_h18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 29%.", worksheet.detailed_lever_guides_h18); end
  def test_detailed_lever_guides_i18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 47%.", worksheet.detailed_lever_guides_i18); end
  def test_detailed_lever_guides_j18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 64%.", worksheet.detailed_lever_guides_j18); end
  def test_detailed_lever_guides_k18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 76%.", worksheet.detailed_lever_guides_k18); end
  def test_detailed_lever_guides_m18; assert_equal("Building insulation", worksheet.detailed_lever_guides_m18); end
  def test_detailed_lever_guides_n18; assert_equal("How much will insulation of urban buildings reduce heat loss?", worksheet.detailed_lever_guides_n18); end
  def test_detailed_lever_guides_o18; assert_equal("Rate of heat loss in urban buildings GW/(M ha*&deg;C)", worksheet.detailed_lever_guides_o18); end
  def test_detailed_lever_guides_p18; assert_in_epsilon(16.9, worksheet.detailed_lever_guides_p18, 0.002); end
  def test_detailed_lever_guides_q18; assert_in_epsilon(12.0, worksheet.detailed_lever_guides_q18, 0.002); end
  def test_detailed_lever_guides_r18; assert_in_epsilon(9.0, worksheet.detailed_lever_guides_r18, 0.002); end
  def test_detailed_lever_guides_s18; assert_in_epsilon(6.0, worksheet.detailed_lever_guides_s18, 0.002); end
  def test_detailed_lever_guides_t18; assert_in_epsilon(4.0, worksheet.detailed_lever_guides_t18, 0.002); end
  def test_detailed_lever_guides_b19; assert_equal("Temperature, cooking & lighting technology", worksheet.detailed_lever_guides_b19); end
  def test_detailed_lever_guides_d19; assert_equal("How will we heat, cool and light our buildings, and how will we cook our food? For example, in 2011, 2% of urban heating used low-carbon technologies like heat pumps and solar heaters. All cooling used air conditioning, with 0% low-carbon options like solar cooling.", worksheet.detailed_lever_guides_d19); end
  def test_detailed_lever_guides_e19; assert_equal("In 2050, 2% of urban heating will be low carbon (heat pumps and solar heaters) and 5% of urban cooling will be from options like solar cooling.", worksheet.detailed_lever_guides_e19); end
  def test_detailed_lever_guides_h19; assert_equal("2% of heating is from either solar or heat pumps, and 5% of cooling is solar. ", worksheet.detailed_lever_guides_h19); end
  def test_detailed_lever_guides_i19; assert_equal("20% of heating is from either solar or heat pumps, and 10% of cooling is solar. ", worksheet.detailed_lever_guides_i19); end
  def test_detailed_lever_guides_j19; assert_equal("45% of heating is from either solar or heat pumps, and 15% of cooling is solar.", worksheet.detailed_lever_guides_j19); end
  def test_detailed_lever_guides_k19; assert_equal("70% of heating is from either solar or heat pumps, and 20% of cooling is solar. ", worksheet.detailed_lever_guides_k19); end
  def test_detailed_lever_guides_m19; assert_equal("Temperature, cooking & lighting technology", worksheet.detailed_lever_guides_m19); end
  def test_detailed_lever_guides_n19; assert_equal("How much will we use low-carbon technologies to heat and cool our buildings?", worksheet.detailed_lever_guides_n19); end
  def test_detailed_lever_guides_o19; assert_equal("% of urban space heating technologies that are low-carbon (solar and heat pumps)", worksheet.detailed_lever_guides_o19); end
  def test_detailed_lever_guides_p19; assert_equal("2%", worksheet.detailed_lever_guides_p19); end
  def test_detailed_lever_guides_q19; assert_equal("2%", worksheet.detailed_lever_guides_q19); end
  def test_detailed_lever_guides_r19; assert_equal("20%", worksheet.detailed_lever_guides_r19); end
  def test_detailed_lever_guides_s19; assert_equal("45%", worksheet.detailed_lever_guides_s19); end
  def test_detailed_lever_guides_t19; assert_equal("70%", worksheet.detailed_lever_guides_t19); end
  def test_detailed_lever_guides_b20; assert_equal("Appliance efficiency", worksheet.detailed_lever_guides_b20); end
  def test_detailed_lever_guides_d20; assert_equal("How efficient will our appliances be? For example, the average urban TV in 2011 had a power of 250W. For the last 20 years, average appliance efficiency in Europe has improved by around 20%. ", worksheet.detailed_lever_guides_d20); end
  def test_detailed_lever_guides_e20; assert_equal("An average TV has a power of 243W in 2050.", worksheet.detailed_lever_guides_e20); end
  def test_detailed_lever_guides_h20; assert_equal("An average TV uses 3% less power.", worksheet.detailed_lever_guides_h20); end
  def test_detailed_lever_guides_i20; assert_equal("An average TV uses 17% less power.", worksheet.detailed_lever_guides_i20); end
  def test_detailed_lever_guides_j20; assert_equal("An average TV uses 23% less power.", worksheet.detailed_lever_guides_j20); end
  def test_detailed_lever_guides_k20; assert_equal("An average TV uses 30% less power.", worksheet.detailed_lever_guides_k20); end
  def test_detailed_lever_guides_m20; assert_equal("Appliance efficiency", worksheet.detailed_lever_guides_m20); end
  def test_detailed_lever_guides_n20; assert_equal("% reduction in power needed by average appliance", worksheet.detailed_lever_guides_n20); end
  def test_detailed_lever_guides_o20; assert_equal("Power (W) required by average global urban TVs", worksheet.detailed_lever_guides_o20); end
  def test_detailed_lever_guides_p20; assert_equal("250W", worksheet.detailed_lever_guides_p20); end
  def test_detailed_lever_guides_q20; assert_equal("243W", worksheet.detailed_lever_guides_q20); end
  def test_detailed_lever_guides_r20; assert_equal("208W", worksheet.detailed_lever_guides_r20); end
  def test_detailed_lever_guides_s20; assert_equal("192W", worksheet.detailed_lever_guides_s20); end
  def test_detailed_lever_guides_t20; assert_equal("174W", worksheet.detailed_lever_guides_t20); end
  def test_detailed_lever_guides_b21; assert_equal("Product lifespan", worksheet.detailed_lever_guides_b21); end
  def test_detailed_lever_guides_d21; assert_equal("How long will our products last? In 2011, the average lifespan of an urban 4-wheeled car with internal combustion engine was 12.5 years.", worksheet.detailed_lever_guides_d21); end
  def test_detailed_lever_guides_e21; assert_equal("By 2050, the average lifespan of an urban 4-wheeled car with internal combustion engine will be 12.5 years.", worksheet.detailed_lever_guides_e21); end
  def test_detailed_lever_guides_h21; assert_equal("The average lifespan of an urban 4-wheeled car with internal combustion engine is unchanged by 2050, remaining at 12.5 years.", worksheet.detailed_lever_guides_h21); end
  def test_detailed_lever_guides_i21; assert_equal("The average lifespan of an urban 4-wheeled car with internal combustion engine is unchanged by 2050, remaining at 13.7 years.", worksheet.detailed_lever_guides_i21); end
  def test_detailed_lever_guides_j21; assert_equal("The average lifespan of an urban 4-wheeled car with internal combustion engine is unchanged by 2050, remaining at 15.0 years.", worksheet.detailed_lever_guides_j21); end
  def test_detailed_lever_guides_k21; assert_equal("The average lifespan of an urban 4-wheeled car with internal combustion engine is unchanged by 2050, remaining at 16.2 years.", worksheet.detailed_lever_guides_k21); end
  def test_detailed_lever_guides_m21; assert_equal("Product lifespan", worksheet.detailed_lever_guides_m21); end
  def test_detailed_lever_guides_n21; assert_equal("How frequently will we replace products?", worksheet.detailed_lever_guides_n21); end
  def test_detailed_lever_guides_o21; assert_equal("Lifespan of urban car with internal combustion engine", worksheet.detailed_lever_guides_o21); end
  def test_detailed_lever_guides_p21; assert_in_epsilon(12.5, worksheet.detailed_lever_guides_p21, 0.002); end
  def test_detailed_lever_guides_q21; assert_in_epsilon(12.5, worksheet.detailed_lever_guides_q21, 0.002); end
  def test_detailed_lever_guides_r21; assert_in_epsilon(13.7, worksheet.detailed_lever_guides_r21, 0.002); end
  def test_detailed_lever_guides_s21; assert_in_epsilon(15.0, worksheet.detailed_lever_guides_s21, 0.002); end
  def test_detailed_lever_guides_t21; assert_in_epsilon(16.2, worksheet.detailed_lever_guides_t21, 0.002); end
  def test_detailed_lever_guides_b22; assert_equal("Design, material switch & recycling", worksheet.detailed_lever_guides_b22); end
  def test_detailed_lever_guides_d22; assert_equal("How efficiently will we use materials, and will we recycle more? In 2011, demand for products leads to the production of 8.69Gt of materials per year.", worksheet.detailed_lever_guides_d22); end
  def test_detailed_lever_guides_e22; assert_equal("Product design, material switching and recycling improvements mean that the products demanded can be manufactured using 4.0% less materials (by weight) in 2050.", worksheet.detailed_lever_guides_e22); end
  def test_detailed_lever_guides_h22; assert_equal("No product or material design improvements that would reduce the material needed for product manufacture", worksheet.detailed_lever_guides_h22); end
  def test_detailed_lever_guides_i22; assert_equal("Moderately ambitious product and material design improvements", worksheet.detailed_lever_guides_i22); end
  def test_detailed_lever_guides_j22; assert_equal("Very ambitious product & material design improvements, increased recycling, and significant switches to materials which are less CO<sub>2</sub> intensive over product lifetimes.", worksheet.detailed_lever_guides_j22); end
  def test_detailed_lever_guides_k22; assert_equal("Extreme improvements in product & material design, and switching to materials which are less CO<sub>2</sub> intensive over product lifetimes, along with an extreme increase in recycling levels.", worksheet.detailed_lever_guides_k22); end
  def test_detailed_lever_guides_m22; assert_equal("Design, material switch & recycling", worksheet.detailed_lever_guides_m22); end
  def test_detailed_lever_guides_n22; assert_equal("% reduction in material needed for a given product between 2011 and 2050", worksheet.detailed_lever_guides_n22); end
  def test_detailed_lever_guides_o22; assert_equal("% reduction in material used to make a given product between 2011 and 2050", worksheet.detailed_lever_guides_o22); end
  def test_detailed_lever_guides_p22; assert_in_delta(0.0, (worksheet.detailed_lever_guides_p22||0), 0.002); end
  def test_detailed_lever_guides_b23; assert_equal("Iron, steel & aluminium", worksheet.detailed_lever_guides_b23); end
  def test_detailed_lever_guides_d23; assert_equal("How much will emissions reduce from iron, steel and aluminium production? In 2011, emissions in the production of metals were 1.7 GtCO2 per Gt of steel and 1.1 GtCO2 per Gt of aluminium.", worksheet.detailed_lever_guides_d23); end
  def test_detailed_lever_guides_e23; assert_equal("Specific emissions for steel decrease by 7.3% and specific emissions for aluminium decrease by 0.1%.", worksheet.detailed_lever_guides_e23); end
  def test_detailed_lever_guides_h23; assert_equal("Minimal effort to reduce emissions from iron, steel and aluminium production", worksheet.detailed_lever_guides_h23); end
  def test_detailed_lever_guides_i23; assert_equal("Moderate effort to reduce emissions from iron, steel and aluminium production", worksheet.detailed_lever_guides_i23); end
  def test_detailed_lever_guides_j23; assert_equal("High effort to reduce emissions from iron, steel and aluminium production", worksheet.detailed_lever_guides_j23); end
  def test_detailed_lever_guides_k23; assert_equal("Extremely high reductions in emissions from iron, steel and aluminium production", worksheet.detailed_lever_guides_k23); end
  def test_detailed_lever_guides_m23; assert_equal("Iron, steel & aluminium", worksheet.detailed_lever_guides_m23); end
  def test_detailed_lever_guides_n23; assert_equal("How many tonnes of CO2 are produced per tonne of steel?\r(% reduction from 2011 to 2050)", worksheet.detailed_lever_guides_n23); end
  def test_detailed_lever_guides_o23; assert_equal("Change in emissions per tonne of steel from now to 2050 ", worksheet.detailed_lever_guides_o23); end
  def test_detailed_lever_guides_p23; assert_equal("2 tonnes of CO2 currently produced per tonne of steel. ", worksheet.detailed_lever_guides_p23); end
  def test_detailed_lever_guides_q23; assert_equal("TO ADD", worksheet.detailed_lever_guides_q23); end
  def test_detailed_lever_guides_r23; assert_equal("TO ADD", worksheet.detailed_lever_guides_r23); end
  def test_detailed_lever_guides_s23; assert_equal("TO ADD", worksheet.detailed_lever_guides_s23); end
  def test_detailed_lever_guides_t23; assert_equal("TO ADD", worksheet.detailed_lever_guides_t23); end
  def test_detailed_lever_guides_b24; assert_equal("Chemicals", worksheet.detailed_lever_guides_b24); end
  def test_detailed_lever_guides_d24; assert_equal("How much will emissions reduce from chemical production? In 2011, specific emissions for chemicals were 1.6 GtCO2 per Gt.", worksheet.detailed_lever_guides_d24); end
  def test_detailed_lever_guides_e24; assert_equal("Specific emissions for Chemicals & petrochemicals increase by -4.3%", worksheet.detailed_lever_guides_e24); end
  def test_detailed_lever_guides_h24; assert_equal("Minimal effort to reduce emissions from chemical production", worksheet.detailed_lever_guides_h24); end
  def test_detailed_lever_guides_i24; assert_equal("Moderate effort to reduce emissions from chemical production", worksheet.detailed_lever_guides_i24); end
  def test_detailed_lever_guides_j24; assert_equal("High effort to reduce emissions from chemical production", worksheet.detailed_lever_guides_j24); end
  def test_detailed_lever_guides_k24; assert_equal("Extremely high reductions in emissions from chemical production", worksheet.detailed_lever_guides_k24); end
  def test_detailed_lever_guides_m24; assert_equal("Chemicals", worksheet.detailed_lever_guides_m24); end
  def test_detailed_lever_guides_n24; assert_equal("How many tonnes of CO2 are produced per tonne of chemicals on average?\r(% reduction from 2011 to 2050)", worksheet.detailed_lever_guides_n24); end
  def test_detailed_lever_guides_o24; assert_equal("Change in emissions per tonne from now to 2050", worksheet.detailed_lever_guides_o24); end
  def test_detailed_lever_guides_p24; assert_equal("1.7 tonnes of CO2 produced per tonne of chemicals on average", worksheet.detailed_lever_guides_p24); end
  def test_detailed_lever_guides_q24; assert_in_delta(0.01, worksheet.detailed_lever_guides_q24, 0.002); end
  def test_detailed_lever_guides_r24; assert_in_delta(-0.03, worksheet.detailed_lever_guides_r24, 0.002); end
  def test_detailed_lever_guides_s24; assert_in_delta(-0.07, worksheet.detailed_lever_guides_s24, 0.002); end
  def test_detailed_lever_guides_t24; assert_in_delta(-0.15, worksheet.detailed_lever_guides_t24, 0.002); end
  def test_detailed_lever_guides_b25; assert_equal("Paper and other", worksheet.detailed_lever_guides_b25); end
  def test_detailed_lever_guides_d25; assert_equal("How efficiently do we produce paper? In 2011, specific emissions for pulp & paper were 0.5 GtCO2 per Gt.", worksheet.detailed_lever_guides_d25); end
  def test_detailed_lever_guides_e25; assert_equal("Specific emissions for pulp & paper increase by -1.7%", worksheet.detailed_lever_guides_e25); end
  def test_detailed_lever_guides_h25; assert_equal("0% increase in CO<sub>2</sub> per tonne of pulp and paper produced, and 0% increase for other materials.", worksheet.detailed_lever_guides_h25); end
  def test_detailed_lever_guides_i25; assert_equal("20% increase in CO<sub>2</sub> per tonne of pulp and paper produced, and 0% increase for other materials.", worksheet.detailed_lever_guides_i25); end
  def test_detailed_lever_guides_j25; assert_equal("30% increase in CO<sub>2</sub> per tonne of pulp and paper produced, and 0% increase for other materials.", worksheet.detailed_lever_guides_j25); end
  def test_detailed_lever_guides_k25; assert_equal("40% increase in CO<sub>2</sub> per tonne of pulp and paper produced, and 0% increase for other materials.", worksheet.detailed_lever_guides_k25); end
  def test_detailed_lever_guides_m25; assert_equal("Paper and other", worksheet.detailed_lever_guides_m25); end
  def test_detailed_lever_guides_n25; assert_equal("How many tonnes of CO2 are produced per tonne of chemicals on paper on average?\r(% reduction from 2011 to 2050)", worksheet.detailed_lever_guides_n25); end
  def test_detailed_lever_guides_o25; assert_equal("Change in emissions per tonne from now to 2050", worksheet.detailed_lever_guides_o25); end
  def test_detailed_lever_guides_p25; assert_equal("0.5 tonnes of CO2 produced per tonne of paper", worksheet.detailed_lever_guides_p25); end
  def test_detailed_lever_guides_q25; assert_in_delta(0.01, worksheet.detailed_lever_guides_q25, 0.002); end
  def test_detailed_lever_guides_r25; assert_in_delta(-0.2, worksheet.detailed_lever_guides_r25, 0.002); end
  def test_detailed_lever_guides_s25; assert_in_delta(-0.32, worksheet.detailed_lever_guides_s25, 0.002); end
  def test_detailed_lever_guides_t25; assert_in_delta(-0.45, worksheet.detailed_lever_guides_t25, 0.002); end
  def test_detailed_lever_guides_b26; assert_equal("Cement", worksheet.detailed_lever_guides_b26); end
  def test_detailed_lever_guides_d26; assert_equal("How efficiently do we produce cement?  In 2011, specific emissions for cement were 0.4 GtCO2 per Gt.", worksheet.detailed_lever_guides_d26); end
  def test_detailed_lever_guides_e26; assert_equal("Specific emissions for cement increase by -5.8%", worksheet.detailed_lever_guides_e26); end
  def test_detailed_lever_guides_h26; assert_equal("5% decrease in CO<sub>2</sub> emissions per tonne of cement produced.", worksheet.detailed_lever_guides_h26); end
  def test_detailed_lever_guides_i26; assert_equal("9% decrease in CO<sub>2</sub> emissions per tonne of cement produced.", worksheet.detailed_lever_guides_i26); end
  def test_detailed_lever_guides_j26; assert_equal("18% decrease in CO<sub>2</sub> emissions per tonne of cement produced.", worksheet.detailed_lever_guides_j26); end
  def test_detailed_lever_guides_k26; assert_equal("30% decrease in CO<sub>2</sub> emissions per tonne of cement produced.", worksheet.detailed_lever_guides_k26); end
  def test_detailed_lever_guides_m26; assert_equal("Cement", worksheet.detailed_lever_guides_m26); end
  def test_detailed_lever_guides_n26; assert_equal("How many tonnes of CO2 are produced per tonne of cement?\r(% reduction from 2011 to 2050)", worksheet.detailed_lever_guides_n26); end
  def test_detailed_lever_guides_o26; assert_equal("Change in emissions per tonne from now to 2050", worksheet.detailed_lever_guides_o26); end
  def test_detailed_lever_guides_p26; assert_equal("0.4 tonnes of CO2 produced per tonne of cement", worksheet.detailed_lever_guides_p26); end
  def test_detailed_lever_guides_q26; assert_in_delta(0.02, worksheet.detailed_lever_guides_q26, 0.002); end
  def test_detailed_lever_guides_r26; assert_in_delta(0.04, worksheet.detailed_lever_guides_r26, 0.002); end
  def test_detailed_lever_guides_s26; assert_in_delta(0.08, worksheet.detailed_lever_guides_s26, 0.002); end
  def test_detailed_lever_guides_t26; assert_in_delta(0.31, worksheet.detailed_lever_guides_t26, 0.002); end
  def test_detailed_lever_guides_b27; assert_equal("Carbon capture and storage (ind.)", worksheet.detailed_lever_guides_b27); end
  def test_detailed_lever_guides_d27; assert_equal("Will we use CCS in industry to capture process and combustion emissions? CCS is not implemented in industry in 2011.", worksheet.detailed_lever_guides_d27); end
  def test_detailed_lever_guides_e27; assert_equal("CCS enables a 0% CO2 reduction (excluding electricity emissions & counting biomass as fossil fuel) and an 0 EJ electricity consumption increase.", worksheet.detailed_lever_guides_e27); end
  def test_detailed_lever_guides_h27; assert_equal("No CCS development.", worksheet.detailed_lever_guides_h27); end
  def test_detailed_lever_guides_i27; assert_equal("Partial CCS development as of 2030 progressively leading to a reduction of 18% of emissions . It also implies a 1 EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_i27); end
  def test_detailed_lever_guides_j27; assert_equal("Important CCS development as of 2030 progressively leading to a reduction of 39% of emissions. It also implies a 1 EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_j27); end
  def test_detailed_lever_guides_k27; assert_equal("Very important CCS development as of 2030 progressively leading to a reduction of 70% of emissions. It also implies a 1 EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_k27); end
  def test_detailed_lever_guides_m27; assert_equal("Carbon capture and storage (ind.)", worksheet.detailed_lever_guides_m27); end
  def test_detailed_lever_guides_n27; assert_equal("Do we use CCS in industry to capture process and combustion emissions? ", worksheet.detailed_lever_guides_n27); end
  def test_detailed_lever_guides_o27; assert_equal("tonnes of CO2 captured within industry", worksheet.detailed_lever_guides_o27); end
  def test_detailed_lever_guides_p27; assert_in_delta(0.0, (worksheet.detailed_lever_guides_p27||0), 0.002); end
  def test_detailed_lever_guides_q27; assert_equal("TO ADD", worksheet.detailed_lever_guides_q27); end
  def test_detailed_lever_guides_r27; assert_equal("TO ADD", worksheet.detailed_lever_guides_r27); end
  def test_detailed_lever_guides_s27; assert_equal("TO ADD", worksheet.detailed_lever_guides_s27); end
  def test_detailed_lever_guides_t27; assert_equal("TO ADD", worksheet.detailed_lever_guides_t27); end
  def test_detailed_lever_guides_b28; assert_equal("Coal / oil / gas", worksheet.detailed_lever_guides_b28); end
  def test_detailed_lever_guides_c28; assert_equal("SLG.elec", worksheet.detailed_lever_guides_c28); end
  def test_detailed_lever_guides_d28; assert_equal("In thermal power plants, do we use solid fuel (coal or wood) or gaseous fuel (natural gas or biogas)? For example, in 2011 61% of fuel was solid, 7% liquid and 32% gas.", worksheet.detailed_lever_guides_d28); end
  def test_detailed_lever_guides_e28; assert_equal("In 2050 out of total fossil energy supplied it is 44% of solid, 16% of liquid and 40% of gas power.", worksheet.detailed_lever_guides_e28); end
  def test_detailed_lever_guides_g28; assert_equal("If the user supplies bioenergy from the land and food choices, some of this is allocated to thermal power plants.", worksheet.detailed_lever_guides_g28); end
  def test_detailed_lever_guides_h28; assert_equal("61% of fuel for thermal power plants is solid, and 12% is gas.", worksheet.detailed_lever_guides_h28); end
  def test_detailed_lever_guides_i28; assert_equal("48% of fuel for thermal power plants is solid, and 32% is gas.", worksheet.detailed_lever_guides_i28); end
  def test_detailed_lever_guides_j28; assert_equal("36% of fuel for thermal power plants is solid, and 58% is gas.", worksheet.detailed_lever_guides_j28); end
  def test_detailed_lever_guides_k28; assert_equal("26% of fuel for thermal power plants is solid, and 70% is gas.", worksheet.detailed_lever_guides_k28); end
  def test_detailed_lever_guides_m28; assert_equal("Coal / oil / gas", worksheet.detailed_lever_guides_m28); end
  def test_detailed_lever_guides_n28; assert_equal("Thermal power plants: % that is supplied by solid fuel", worksheet.detailed_lever_guides_n28); end
  def test_detailed_lever_guides_o28; assert_equal("% solid", worksheet.detailed_lever_guides_o28); end
  def test_detailed_lever_guides_p28; assert_equal("61%", worksheet.detailed_lever_guides_p28); end
  def test_detailed_lever_guides_q28; assert_equal("61%", worksheet.detailed_lever_guides_q28); end
  def test_detailed_lever_guides_r28; assert_equal("48%", worksheet.detailed_lever_guides_r28); end
  def test_detailed_lever_guides_s28; assert_equal("36%", worksheet.detailed_lever_guides_s28); end
  def test_detailed_lever_guides_t28; assert_equal("26%", worksheet.detailed_lever_guides_t28); end
  def test_detailed_lever_guides_b29; assert_equal("Fossil fuel efficiency", worksheet.detailed_lever_guides_b29); end
  def test_detailed_lever_guides_d29; assert_equal("How efficiently will we extract and use fossil fuels? For example, in 2011 25% of coal power stations used the most efficient technologies (ultra- or super-critical).", worksheet.detailed_lever_guides_d29); end
  def test_detailed_lever_guides_h29; assert_equal("Small increase e.g. 38% of coal power stations used ultra- or super-critical technologies.", worksheet.detailed_lever_guides_h29); end
  def test_detailed_lever_guides_i29; assert_equal("More efficient power e.g. 45% of coal power stations used ultra- or super-critical technologies.", worksheet.detailed_lever_guides_i29); end
  def test_detailed_lever_guides_j29; assert_equal("High efficiency power e.g. 50% of coal power stations used ultra- or super-critical technologies.", worksheet.detailed_lever_guides_j29); end
  def test_detailed_lever_guides_k29; assert_equal("Very efficient power e.g. 55% of coal power stations used ultra- or super-critical technologies.", worksheet.detailed_lever_guides_k29); end
  def test_detailed_lever_guides_m29; assert_equal("Fossil fuel efficiency", worksheet.detailed_lever_guides_m29); end
  def test_detailed_lever_guides_n29; assert_equal("How many coal power stations use the most efficient technologies (ultra- or super- critical)?", worksheet.detailed_lever_guides_n29); end
  def test_detailed_lever_guides_o29; assert_equal("% of coal power stations using most efficient technologies (ultra- or super- critical)", worksheet.detailed_lever_guides_o29); end
  def test_detailed_lever_guides_p29; assert_equal("25%", worksheet.detailed_lever_guides_p29); end
  def test_detailed_lever_guides_q29; assert_equal("38%", worksheet.detailed_lever_guides_q29); end
  def test_detailed_lever_guides_r29; assert_equal("45%", worksheet.detailed_lever_guides_r29); end
  def test_detailed_lever_guides_s29; assert_equal("50%", worksheet.detailed_lever_guides_s29); end
  def test_detailed_lever_guides_t29; assert_equal("55%", worksheet.detailed_lever_guides_t29); end
  def test_detailed_lever_guides_b30; assert_equal("Carbon capture and storage (power)", worksheet.detailed_lever_guides_b30); end
  def test_detailed_lever_guides_c30; assert_equal("CCS.elec", worksheet.detailed_lever_guides_c30); end
  def test_detailed_lever_guides_d30; assert_equal("Do we use carbon capture and storage in electricity generation? In 2011 there were only small demonstration projects.", worksheet.detailed_lever_guides_d30); end
  def test_detailed_lever_guides_e30; assert_equal("16 GW of CCS installed power capacity by 2050.", worksheet.detailed_lever_guides_e30); end
  def test_detailed_lever_guides_h30; assert_equal("16 GW of CCS installed power capacity by 2050.", worksheet.detailed_lever_guides_h30); end
  def test_detailed_lever_guides_i30; assert_equal("490 GW of CCS installed power capacity by 2050.", worksheet.detailed_lever_guides_i30); end
  def test_detailed_lever_guides_j30; assert_equal("1,487 GW of CCS installed power capacity by 2050.", worksheet.detailed_lever_guides_j30); end
  def test_detailed_lever_guides_k30; assert_equal("3,700 GW of CCS installed power capacity by 2050", worksheet.detailed_lever_guides_k30); end
  def test_detailed_lever_guides_m30; assert_equal("Carbon capture and storage (power)", worksheet.detailed_lever_guides_m30); end
  def test_detailed_lever_guides_n30; assert_equal("How much do we use carbon capture and storage for electricity generation?", worksheet.detailed_lever_guides_n30); end
  def test_detailed_lever_guides_o30; assert_equal("GW of CCS power capacity", worksheet.detailed_lever_guides_o30); end
  def test_detailed_lever_guides_p30; assert_equal("0 GW", worksheet.detailed_lever_guides_p30); end
  def test_detailed_lever_guides_q30; assert_equal("16 GW", worksheet.detailed_lever_guides_q30); end
  def test_detailed_lever_guides_r30; assert_equal("490 GW", worksheet.detailed_lever_guides_r30); end
  def test_detailed_lever_guides_s30; assert_equal("1,487 GW", worksheet.detailed_lever_guides_s30); end
  def test_detailed_lever_guides_t30; assert_equal("3,700 GW", worksheet.detailed_lever_guides_t30); end
  def test_detailed_lever_guides_b31; assert_equal("Nuclear", worksheet.detailed_lever_guides_b31); end
  def test_detailed_lever_guides_c31; assert_equal("nuclear.elec", worksheet.detailed_lever_guides_c31); end
  def test_detailed_lever_guides_d31; assert_equal("Do we use nuclear power? In 2011, global capacity was 364 GW.", worksheet.detailed_lever_guides_d31); end
  def test_detailed_lever_guides_e31; assert_equal("480 GW of installed nuclear power capacity by 2050.", worksheet.detailed_lever_guides_e31); end
  def test_detailed_lever_guides_h31; assert_equal("0 GW", worksheet.detailed_lever_guides_h31); end
  def test_detailed_lever_guides_i31; assert_equal("685 GW", worksheet.detailed_lever_guides_i31); end
  def test_detailed_lever_guides_j31; assert_equal("1,030 GW", worksheet.detailed_lever_guides_j31); end
  def test_detailed_lever_guides_k31; assert_equal("1,870 GW", worksheet.detailed_lever_guides_k31); end
  def test_detailed_lever_guides_m31; assert_equal("Nuclear", worksheet.detailed_lever_guides_m31); end
  def test_detailed_lever_guides_n31; assert_equal("How much do we use nuclear power?", worksheet.detailed_lever_guides_n31); end
  def test_detailed_lever_guides_o31; assert_equal("GW of nuclear power capacity", worksheet.detailed_lever_guides_o31); end
  def test_detailed_lever_guides_p31; assert_equal("364 GW", worksheet.detailed_lever_guides_p31); end
  def test_detailed_lever_guides_q31; assert_equal("0 GW", worksheet.detailed_lever_guides_q31); end
  def test_detailed_lever_guides_r31; assert_equal("685 GW", worksheet.detailed_lever_guides_r31); end
  def test_detailed_lever_guides_s31; assert_equal("1,030 GW", worksheet.detailed_lever_guides_s31); end
  def test_detailed_lever_guides_t31; assert_equal("1,870 GW", worksheet.detailed_lever_guides_t31); end
  def test_detailed_lever_guides_b32; assert_equal("Wind", worksheet.detailed_lever_guides_b32); end
  def test_detailed_lever_guides_c32; assert_equal("onshore.wind.elec, offshore.wind.elec", worksheet.detailed_lever_guides_c32); end
  def test_detailed_lever_guides_d32; assert_equal("Do we use wind power? In 2011 there was around 234 GW of onshore wind capacity, in 83 countries. There was also 4 GW of offshore power installed.", worksheet.detailed_lever_guides_d32); end
  def test_detailed_lever_guides_e32; assert_equal("1,159 GW of installed wind power capacity by 2050.", worksheet.detailed_lever_guides_e32); end
  def test_detailed_lever_guides_h32; assert_equal("0 GW", worksheet.detailed_lever_guides_h32); end
  def test_detailed_lever_guides_i32; assert_equal("2,317 GW", worksheet.detailed_lever_guides_i32); end
  def test_detailed_lever_guides_j32; assert_equal("4,710 GW", worksheet.detailed_lever_guides_j32); end
  def test_detailed_lever_guides_k32; assert_equal("6,466 GW", worksheet.detailed_lever_guides_k32); end
  def test_detailed_lever_guides_m32; assert_equal("Wind", worksheet.detailed_lever_guides_m32); end
  def test_detailed_lever_guides_n32; assert_equal("How much do we use wind power?", worksheet.detailed_lever_guides_n32); end
  def test_detailed_lever_guides_o32; assert_equal("total GW of onshore and offshore wind power capacity", worksheet.detailed_lever_guides_o32); end
  def test_detailed_lever_guides_p32; assert_equal("238 GW", worksheet.detailed_lever_guides_p32); end
  def test_detailed_lever_guides_q32; assert_equal("0 GW", worksheet.detailed_lever_guides_q32); end
  def test_detailed_lever_guides_r32; assert_equal("2,317 GW", worksheet.detailed_lever_guides_r32); end
  def test_detailed_lever_guides_s32; assert_equal("4,710 GW", worksheet.detailed_lever_guides_s32); end
  def test_detailed_lever_guides_t32; assert_equal("6,466 GW", worksheet.detailed_lever_guides_t32); end
  def test_detailed_lever_guides_b33; assert_equal("Hydroelectric", worksheet.detailed_lever_guides_b33); end
  def test_detailed_lever_guides_c33; assert_equal("hydro.elec", worksheet.detailed_lever_guides_c33); end
  def test_detailed_lever_guides_d33; assert_equal("Do we use hydroelectric power? In 2011 global capacity was 970 GW.", worksheet.detailed_lever_guides_d33); end
  def test_detailed_lever_guides_e33; assert_equal("1,694 GW of installed hydroelectric power capacity by 2050.", worksheet.detailed_lever_guides_e33); end
  def test_detailed_lever_guides_h33; assert_equal("1,188 GW", worksheet.detailed_lever_guides_h33); end
  def test_detailed_lever_guides_i33; assert_equal("1,750 GW", worksheet.detailed_lever_guides_i33); end
  def test_detailed_lever_guides_j33; assert_equal("2,101 GW", worksheet.detailed_lever_guides_j33); end
  def test_detailed_lever_guides_k33; assert_equal("2,375 GW", worksheet.detailed_lever_guides_k33); end
  def test_detailed_lever_guides_m33; assert_equal("Hydroelectric", worksheet.detailed_lever_guides_m33); end
  def test_detailed_lever_guides_n33; assert_equal("How much do we use hydroelectric power?", worksheet.detailed_lever_guides_n33); end
  def test_detailed_lever_guides_o33; assert_equal("GW of hydroelectric capacity", worksheet.detailed_lever_guides_o33); end
  def test_detailed_lever_guides_p33; assert_equal("970", worksheet.detailed_lever_guides_p33); end
  def test_detailed_lever_guides_q33; assert_equal("1,188", worksheet.detailed_lever_guides_q33); end
  def test_detailed_lever_guides_r33; assert_equal("1,750", worksheet.detailed_lever_guides_r33); end
  def test_detailed_lever_guides_s33; assert_equal("2,101", worksheet.detailed_lever_guides_s33); end
  def test_detailed_lever_guides_t33; assert_equal("2,375", worksheet.detailed_lever_guides_t33); end
  def test_detailed_lever_guides_b34; assert_equal("Marine", worksheet.detailed_lever_guides_b34); end
  def test_detailed_lever_guides_c34; assert_equal("tidal.elec, wave.elec", worksheet.detailed_lever_guides_c34); end
  def test_detailed_lever_guides_d34; assert_equal("Do we use wave and tidal power? In 2011, global capacity was 0.5 GW of marine in total (0.5 GW of tidal power and 0 GW of wave power).", worksheet.detailed_lever_guides_d34); end
  def test_detailed_lever_guides_e34; assert_equal("34.7 GW of installed marine power capacity by 2050.", worksheet.detailed_lever_guides_e34); end
  def test_detailed_lever_guides_h34; assert_equal("8 GW", worksheet.detailed_lever_guides_h34); end
  def test_detailed_lever_guides_i34; assert_equal("97 GW", worksheet.detailed_lever_guides_i34); end
  def test_detailed_lever_guides_j34; assert_equal("237 GW", worksheet.detailed_lever_guides_j34); end
  def test_detailed_lever_guides_k34; assert_equal("436 GW", worksheet.detailed_lever_guides_k34); end
  def test_detailed_lever_guides_m34; assert_equal("Marine", worksheet.detailed_lever_guides_m34); end
  def test_detailed_lever_guides_n34; assert_equal("How much do we use wave and tidal power?", worksheet.detailed_lever_guides_n34); end
  def test_detailed_lever_guides_o34; assert_equal("total GW of marine capacity (wave and tidal)", worksheet.detailed_lever_guides_o34); end
  def test_detailed_lever_guides_p34; assert_equal("0.5 GW", worksheet.detailed_lever_guides_p34); end
  def test_detailed_lever_guides_q34; assert_equal("8 GW", worksheet.detailed_lever_guides_q34); end
  def test_detailed_lever_guides_r34; assert_equal("97 GW", worksheet.detailed_lever_guides_r34); end
  def test_detailed_lever_guides_s34; assert_equal("237 GW", worksheet.detailed_lever_guides_s34); end
  def test_detailed_lever_guides_t34; assert_equal("436 GW", worksheet.detailed_lever_guides_t34); end
  def test_detailed_lever_guides_b35; assert_equal("Solar", worksheet.detailed_lever_guides_b35); end
  def test_detailed_lever_guides_c35; assert_equal("concentrated.solar.elec, solarpv.elec", worksheet.detailed_lever_guides_c35); end
  def test_detailed_lever_guides_d35; assert_equal("Do we use solar power? In 2011, global capacity was 71.3 GW in total (69.7 GW of photovoltaic power and 1.6 GW of concentrated solar power). ", worksheet.detailed_lever_guides_d35); end
  def test_detailed_lever_guides_e35; assert_equal("441 GW of installed solar power capacity by 2050.", worksheet.detailed_lever_guides_e35); end
  def test_detailed_lever_guides_h35; assert_equal("0 GW", worksheet.detailed_lever_guides_h35); end
  def test_detailed_lever_guides_i35; assert_equal("2,204 GW", worksheet.detailed_lever_guides_i35); end
  def test_detailed_lever_guides_j35; assert_equal("4,149 GW", worksheet.detailed_lever_guides_j35); end
  def test_detailed_lever_guides_k35; assert_equal("23,107 GW", worksheet.detailed_lever_guides_k35); end
  def test_detailed_lever_guides_m35; assert_equal("Solar", worksheet.detailed_lever_guides_m35); end
  def test_detailed_lever_guides_n35; assert_equal("How much do we use solar power?", worksheet.detailed_lever_guides_n35); end
  def test_detailed_lever_guides_o35; assert_equal("total GW of solar power capacity", worksheet.detailed_lever_guides_o35); end
  def test_detailed_lever_guides_p35; assert_equal("71 GW", worksheet.detailed_lever_guides_p35); end
  def test_detailed_lever_guides_q35; assert_equal("0 GW", worksheet.detailed_lever_guides_q35); end
  def test_detailed_lever_guides_r35; assert_equal("2,204 GW", worksheet.detailed_lever_guides_r35); end
  def test_detailed_lever_guides_s35; assert_equal("4,149 GW", worksheet.detailed_lever_guides_s35); end
  def test_detailed_lever_guides_t35; assert_equal("23,107 GW", worksheet.detailed_lever_guides_t35); end
  def test_detailed_lever_guides_b36; assert_equal("Geothermal", worksheet.detailed_lever_guides_b36); end
  def test_detailed_lever_guides_c36; assert_equal("geothermal.elec", worksheet.detailed_lever_guides_c36); end
  def test_detailed_lever_guides_d36; assert_equal("Do we use geothermal power? In 2011, global capacity was 11 GW, centred in 24 countries. Maximum potential exists in the 'ring of fire' around the Pacific Ocean.", worksheet.detailed_lever_guides_d36); end
  def test_detailed_lever_guides_e36; assert_equal("69 GW of installed geothermal power capacity by 2050.", worksheet.detailed_lever_guides_e36); end
  def test_detailed_lever_guides_h36; assert_equal("0 GW", worksheet.detailed_lever_guides_h36); end
  def test_detailed_lever_guides_i36; assert_equal("172 GW", worksheet.detailed_lever_guides_i36); end
  def test_detailed_lever_guides_j36; assert_equal("289 GW", worksheet.detailed_lever_guides_j36); end
  def test_detailed_lever_guides_k36; assert_equal("404 GW", worksheet.detailed_lever_guides_k36); end
  def test_detailed_lever_guides_m36; assert_equal("Geothermal", worksheet.detailed_lever_guides_m36); end
  def test_detailed_lever_guides_n36; assert_equal("How much do we use geothermal power?", worksheet.detailed_lever_guides_n36); end
  def test_detailed_lever_guides_o36; assert_equal("total GW of geothermal capacity", worksheet.detailed_lever_guides_o36); end
  def test_detailed_lever_guides_p36; assert_equal("11 GW", worksheet.detailed_lever_guides_p36); end
  def test_detailed_lever_guides_q36; assert_equal("0 GW", worksheet.detailed_lever_guides_q36); end
  def test_detailed_lever_guides_r36; assert_equal("172 GW", worksheet.detailed_lever_guides_r36); end
  def test_detailed_lever_guides_s36; assert_equal("289 GW", worksheet.detailed_lever_guides_s36); end
  def test_detailed_lever_guides_t36; assert_equal("404 GW", worksheet.detailed_lever_guides_t36); end
  def test_detailed_lever_guides_b37; assert_equal("Storage and demand shifting", worksheet.detailed_lever_guides_b37); end
  def test_detailed_lever_guides_c37; assert_equal("storage.elec", worksheet.detailed_lever_guides_c37); end
  def test_detailed_lever_guides_d37; assert_equal("How much electricity storage will we have? This is important in a grid using intermittent renewable technologies (like solar and wind) to make sure that peak demand is met. In 2011, there were 120 GW of electricity storage plants.", worksheet.detailed_lever_guides_d37); end
  def test_detailed_lever_guides_e37; assert_equal("278 GW of electricity storage capacity by 2050.", worksheet.detailed_lever_guides_e37); end
  def test_detailed_lever_guides_h37; assert_equal("152 GW", worksheet.detailed_lever_guides_h37); end
  def test_detailed_lever_guides_i37; assert_equal("403 GW", worksheet.detailed_lever_guides_i37); end
  def test_detailed_lever_guides_j37; assert_equal("800 GW", worksheet.detailed_lever_guides_j37); end
  def test_detailed_lever_guides_k37; assert_equal("1,200 GW", worksheet.detailed_lever_guides_k37); end
  def test_detailed_lever_guides_m37; assert_equal("Storage and demand shifting", worksheet.detailed_lever_guides_m37); end
  def test_detailed_lever_guides_n37; assert_equal("How much electricity storage will we have?", worksheet.detailed_lever_guides_n37); end
  def test_detailed_lever_guides_o37; assert_equal("GW of electricity storage plants.", worksheet.detailed_lever_guides_o37); end
  def test_detailed_lever_guides_p37; assert_equal("120 GW", worksheet.detailed_lever_guides_p37); end
  def test_detailed_lever_guides_q37; assert_equal("152 GW", worksheet.detailed_lever_guides_q37); end
  def test_detailed_lever_guides_r37; assert_equal("403 GW", worksheet.detailed_lever_guides_r37); end
  def test_detailed_lever_guides_s37; assert_equal("800 GW", worksheet.detailed_lever_guides_s37); end
  def test_detailed_lever_guides_t37; assert_equal("1,200 GW", worksheet.detailed_lever_guides_t37); end
  def test_detailed_lever_guides_b38; assert_equal("Calories consumed", worksheet.detailed_lever_guides_b38); end
  def test_detailed_lever_guides_d38; assert_equal("How much food will we eat? In 2011, global average food consumption was 2,180 kcal/person/day, but with extremes of over- and under-nourishment across the world.", worksheet.detailed_lever_guides_d38); end
  def test_detailed_lever_guides_h38; assert_equal("2,520 kcal/person/day (typical for Europe).", worksheet.detailed_lever_guides_h38); end
  def test_detailed_lever_guides_i38; assert_equal("2,330 kcal/person/day (recent trends continue).", worksheet.detailed_lever_guides_i38); end
  def test_detailed_lever_guides_j38; assert_equal("2,195 kcal/person/day (long term trends continue)", worksheet.detailed_lever_guides_j38); end
  def test_detailed_lever_guides_k38; assert_equal("2,100 kcal/person/day (the target for a healthy diet)", worksheet.detailed_lever_guides_k38); end
  def test_detailed_lever_guides_m38; assert_equal("Calories consumed", worksheet.detailed_lever_guides_m38); end
  def test_detailed_lever_guides_n38; assert_equal("How much food will we eat?", worksheet.detailed_lever_guides_n38); end
  def test_detailed_lever_guides_o38; assert_equal("Global average food consumption (kcals/person/day)", worksheet.detailed_lever_guides_o38); end
  def test_detailed_lever_guides_p38; assert_equal("2,180", worksheet.detailed_lever_guides_p38); end
  def test_detailed_lever_guides_q38; assert_equal("2,520", worksheet.detailed_lever_guides_q38); end
  def test_detailed_lever_guides_r38; assert_equal("2,330", worksheet.detailed_lever_guides_r38); end
  def test_detailed_lever_guides_s38; assert_equal("2,195", worksheet.detailed_lever_guides_s38); end
  def test_detailed_lever_guides_t38; assert_equal("2,100", worksheet.detailed_lever_guides_t38); end
  def test_detailed_lever_guides_b39; assert_equal("Quantity of meat", worksheet.detailed_lever_guides_b39); end
  def test_detailed_lever_guides_d39; assert_equal("How much meat will we eat? In 2011, global average food consumption was 187 kcal of meat/person/day. This has generally increased in recent decades, particularly in the developing world. ", worksheet.detailed_lever_guides_d39); end
  def test_detailed_lever_guides_h39; assert_equal("281 kcal/person/day.", worksheet.detailed_lever_guides_h39); end
  def test_detailed_lever_guides_i39; assert_equal("220 kcal/person/day.", worksheet.detailed_lever_guides_i39); end
  def test_detailed_lever_guides_j39; assert_equal("152 kcal/person/day.", worksheet.detailed_lever_guides_j39); end
  def test_detailed_lever_guides_k39; assert_equal("14 kcal/person/day.", worksheet.detailed_lever_guides_k39); end
  def test_detailed_lever_guides_m39; assert_equal("Quantity of meat", worksheet.detailed_lever_guides_m39); end
  def test_detailed_lever_guides_n39; assert_equal("How much meat will we eat?", worksheet.detailed_lever_guides_n39); end
  def test_detailed_lever_guides_o39; assert_equal("Global average meat consumption (kcals meat/person/day)", worksheet.detailed_lever_guides_o39); end
  def test_detailed_lever_guides_p39; assert_equal("187", worksheet.detailed_lever_guides_p39); end
  def test_detailed_lever_guides_q39; assert_equal("281", worksheet.detailed_lever_guides_q39); end
  def test_detailed_lever_guides_r39; assert_equal("220", worksheet.detailed_lever_guides_r39); end
  def test_detailed_lever_guides_s39; assert_equal("152", worksheet.detailed_lever_guides_s39); end
  def test_detailed_lever_guides_t39; assert_equal("14", worksheet.detailed_lever_guides_t39); end
  def test_detailed_lever_guides_b40; assert_equal("Type of meat", worksheet.detailed_lever_guides_b40); end
  def test_detailed_lever_guides_d40; assert_equal("What type of meat do we eat? In 2011 22% of meat consumed was beef, lamb and goat. The rest was pork, chicken and other poultry.", worksheet.detailed_lever_guides_d40); end
  def test_detailed_lever_guides_h40; assert_equal("Increased consumption of meat from ruminant animals from 22% in 2011 to 28% in 2050, reflecting the UN FAO forecast.  ", worksheet.detailed_lever_guides_h40); end
  def test_detailed_lever_guides_i40; assert_equal("World mix of meat types stabilised by 2050, i.e., 25% meat from ruminants.", worksheet.detailed_lever_guides_i40); end
  def test_detailed_lever_guides_j40; assert_equal("Decrease by 2050 to 22% of meat from ruminants.", worksheet.detailed_lever_guides_j40); end
  def test_detailed_lever_guides_k40; assert_equal("Decrease by 2050 to 10% of meat from ruminants.", worksheet.detailed_lever_guides_k40); end
  def test_detailed_lever_guides_m40; assert_equal("Type of meat", worksheet.detailed_lever_guides_m40); end
  def test_detailed_lever_guides_n40; assert_equal("How much of the meat consumed is from ruminants (cows, sheep and goats)", worksheet.detailed_lever_guides_n40); end
  def test_detailed_lever_guides_o40; assert_equal("% of kcals of meat from ruminants", worksheet.detailed_lever_guides_o40); end
  def test_detailed_lever_guides_p40; assert_equal("22%", worksheet.detailed_lever_guides_p40); end
  def test_detailed_lever_guides_q40; assert_equal("28%", worksheet.detailed_lever_guides_q40); end
  def test_detailed_lever_guides_r40; assert_equal("25%", worksheet.detailed_lever_guides_r40); end
  def test_detailed_lever_guides_s40; assert_equal("22%", worksheet.detailed_lever_guides_s40); end
  def test_detailed_lever_guides_t40; assert_equal("10%", worksheet.detailed_lever_guides_t40); end
  def test_detailed_lever_guides_b41; assert_equal("Crop yields", worksheet.detailed_lever_guides_b41); end
  def test_detailed_lever_guides_d41; assert_equal("Can we increase crop yields? Between 1987 and 2007 they increased by around 1.9% per year globally, which is slower than they were in the past. Current average yields are 0.10 W per square metre per year.", worksheet.detailed_lever_guides_d41); end
  def test_detailed_lever_guides_h41; assert_equal("No crop yield growth (yield rise 0% by 2050)", worksheet.detailed_lever_guides_h41); end
  def test_detailed_lever_guides_i41; assert_equal("Moderate crop yield growth (yields rise 40% by 2050).", worksheet.detailed_lever_guides_i41); end
  def test_detailed_lever_guides_j41; assert_equal("High crop yield growth (yields rise 60% by 2050).", worksheet.detailed_lever_guides_j41); end
  def test_detailed_lever_guides_k41; assert_equal("High crop yield growth (yields rise 100% by 2050).", worksheet.detailed_lever_guides_k41); end
  def test_detailed_lever_guides_m41; assert_equal("Crop yields", worksheet.detailed_lever_guides_m41); end
  def test_detailed_lever_guides_n41; assert_equal("Will crop yields increase?", worksheet.detailed_lever_guides_n41); end
  def test_detailed_lever_guides_o41; assert_equal("Change in average yield per hectare of land from 2011 to 2050. ", worksheet.detailed_lever_guides_o41); end
  def test_detailed_lever_guides_p41; assert_equal("0%", worksheet.detailed_lever_guides_p41); end
  def test_detailed_lever_guides_q41; assert_equal("0%", worksheet.detailed_lever_guides_q41); end
  def test_detailed_lever_guides_r41; assert_equal("40%", worksheet.detailed_lever_guides_r41); end
  def test_detailed_lever_guides_s41; assert_equal("60%", worksheet.detailed_lever_guides_s41); end
  def test_detailed_lever_guides_t41; assert_equal("100%", worksheet.detailed_lever_guides_t41); end
  def test_detailed_lever_guides_b42; assert_equal("Land-use efficiency ", worksheet.detailed_lever_guides_b42); end
  def test_detailed_lever_guides_d42; assert_equal("Can we use smarter land-use techniques to increase productivity? For example, multi-cropping and integrated agro-livestock-forestry schemes.", worksheet.detailed_lever_guides_d42); end
  def test_detailed_lever_guides_h42; assert_equal("Mismanaged land (e.g. 10% more land needed for same yield).", worksheet.detailed_lever_guides_h42); end
  def test_detailed_lever_guides_i42; assert_equal("No change from current land use efficiency", worksheet.detailed_lever_guides_i42); end
  def test_detailed_lever_guides_j42; assert_equal("Improved efficiency (e.g. 10% less land needed for same yield)", worksheet.detailed_lever_guides_j42); end
  def test_detailed_lever_guides_k42; assert_equal("Extreme efficiency (e.g. 30% less land needed for same yield)", worksheet.detailed_lever_guides_k42); end
  def test_detailed_lever_guides_m42; assert_equal("Land-use efficiency ", worksheet.detailed_lever_guides_m42); end
  def test_detailed_lever_guides_n42; assert_equal("Can we use smarter land-use techniques to increase productivity?", worksheet.detailed_lever_guides_n42); end
  def test_detailed_lever_guides_o42; assert_equal("% more land which is needed to get the same yield", worksheet.detailed_lever_guides_o42); end
  def test_detailed_lever_guides_p42; assert_equal("0%", worksheet.detailed_lever_guides_p42); end
  def test_detailed_lever_guides_q42; assert_equal("10%", worksheet.detailed_lever_guides_q42); end
  def test_detailed_lever_guides_r42; assert_equal("0%", worksheet.detailed_lever_guides_r42); end
  def test_detailed_lever_guides_s42; assert_equal("-10%", worksheet.detailed_lever_guides_s42); end
  def test_detailed_lever_guides_t42; assert_equal("-30%", worksheet.detailed_lever_guides_t42); end
  def test_detailed_lever_guides_b43; assert_equal("Livestock (grains/residues fed)", worksheet.detailed_lever_guides_b43); end
  def test_detailed_lever_guides_d43; assert_equal("Should we move more livestock traditionally raised on pastureland (cattle, sheep and goats) into feedlots (confined systems that are more efficient at converting food to meat) and use more efficient breeds of animal? For example, in 2011, around 6% of cattle were kept in feedlots.", worksheet.detailed_lever_guides_d43); end
  def test_detailed_lever_guides_h43; assert_equal("No cattle in feedlots by 2050.", worksheet.detailed_lever_guides_h43); end
  def test_detailed_lever_guides_i43; assert_equal("6% of cattle in feedlots by 2050.", worksheet.detailed_lever_guides_i43); end
  def test_detailed_lever_guides_j43; assert_equal("15% of cattle in feedlots by 2050.", worksheet.detailed_lever_guides_j43); end
  def test_detailed_lever_guides_k43; assert_equal("30% of cattle in feedlots by 2050.", worksheet.detailed_lever_guides_k43); end
  def test_detailed_lever_guides_m43; assert_equal("Livestock (grains/residues fed)", worksheet.detailed_lever_guides_m43); end
  def test_detailed_lever_guides_n43; assert_equal("How intensively do we keep grain/residue fed cattle?", worksheet.detailed_lever_guides_n43); end
  def test_detailed_lever_guides_o43; assert_equal("% of cattle in feedlots", worksheet.detailed_lever_guides_o43); end
  def test_detailed_lever_guides_p43; assert_equal("6%", worksheet.detailed_lever_guides_p43); end
  def test_detailed_lever_guides_q43; assert_equal("0%", worksheet.detailed_lever_guides_q43); end
  def test_detailed_lever_guides_r43; assert_equal("6%", worksheet.detailed_lever_guides_r43); end
  def test_detailed_lever_guides_s43; assert_equal("15%", worksheet.detailed_lever_guides_s43); end
  def test_detailed_lever_guides_t43; assert_equal("30%", worksheet.detailed_lever_guides_t43); end
  def test_detailed_lever_guides_b44; assert_equal("Livestock (pasture fed)", worksheet.detailed_lever_guides_b44); end
  def test_detailed_lever_guides_d44; assert_equal("For animals raised in pastureland (cattle, sheep and goats), should we increase the number of animals per hectare, and their efficiency at converting food to meat? Currently cattle density is 0.634750041742287 animals per hectare, and sheep/goats is 3.06639694958513 animals/hectare.", worksheet.detailed_lever_guides_d44); end
  def test_detailed_lever_guides_h44; assert_equal("0.70 cows per hectare (10% increase)", worksheet.detailed_lever_guides_h44); end
  def test_detailed_lever_guides_i44; assert_equal("0.83 cows per hectare (30% increase)", worksheet.detailed_lever_guides_i44); end
  def test_detailed_lever_guides_j44; assert_equal("0.95 cows per hectare (50% increase)", worksheet.detailed_lever_guides_j44); end
  def test_detailed_lever_guides_k44; assert_equal("1.14 cows per hectare (80% increase)", worksheet.detailed_lever_guides_k44); end
  def test_detailed_lever_guides_m44; assert_equal("Livestock (pasture fed)", worksheet.detailed_lever_guides_m44); end
  def test_detailed_lever_guides_n44; assert_equal("How densely are pasture fed cattle kept?", worksheet.detailed_lever_guides_n44); end
  def test_detailed_lever_guides_o44; assert_equal("Cows kept per hectare", worksheet.detailed_lever_guides_o44); end
  def test_detailed_lever_guides_p44; assert_equal("0.63", worksheet.detailed_lever_guides_p44); end
  def test_detailed_lever_guides_q44; assert_equal("0.70", worksheet.detailed_lever_guides_q44); end
  def test_detailed_lever_guides_r44; assert_equal("0.83", worksheet.detailed_lever_guides_r44); end
  def test_detailed_lever_guides_s44; assert_equal("0.95", worksheet.detailed_lever_guides_s44); end
  def test_detailed_lever_guides_t44; assert_equal("1.14", worksheet.detailed_lever_guides_t44); end
  def test_detailed_lever_guides_b45; assert_equal("Bioenergy yields", worksheet.detailed_lever_guides_b45); end
  def test_detailed_lever_guides_d45; assert_equal("Could we get more usable energy out of each hectare of biocrops, for example by using more efficient crop types and introducing better conversion technology? Current average yield is 6.7 dry tonnes per hectare per year.", worksheet.detailed_lever_guides_d45); end
  def test_detailed_lever_guides_h45; assert_equal("Low yield increase of energy production per unit of land area, without significant changes in the energy crop mix and/or conversion technologies. Total increase: 20% by 2050.", worksheet.detailed_lever_guides_h45); end
  def test_detailed_lever_guides_i45; assert_equal("Moderate increase in energy production per unit of land area, and changes in the mix of energy crops towards a higher share of energy-efficient feedstocks and more efficient conversion technologies. Total increase: 50% by 2050.", worksheet.detailed_lever_guides_i45); end
  def test_detailed_lever_guides_j45; assert_equal("High increase in energy production per unit of land area, with substantial changes in the mix of energy crops towards a high share of energy-efficient feedstocks and highly efficient conversion technologies. Total increase: 120% by 2050.", worksheet.detailed_lever_guides_j45); end
  def test_detailed_lever_guides_k45; assert_equal("Extreme increase in energy production per unit of land area relying on highly energy-efficient feedstocks and very efficient conversion technologies. Total increase: 200% by 2050.", worksheet.detailed_lever_guides_k45); end
  def test_detailed_lever_guides_m45; assert_equal("Bioenergy yields", worksheet.detailed_lever_guides_m45); end
  def test_detailed_lever_guides_n45; assert_equal("Increase in bioenergy crop yields between 2011 and 2050", worksheet.detailed_lever_guides_n45); end
  def test_detailed_lever_guides_o45; assert_equal("Change in average yield per hectare of land from 2011 to 2050. ", worksheet.detailed_lever_guides_o45); end
  def test_detailed_lever_guides_p45; assert_equal("6.7", worksheet.detailed_lever_guides_p45); end
  def test_detailed_lever_guides_q45; assert_equal("8.1", worksheet.detailed_lever_guides_q45); end
  def test_detailed_lever_guides_r45; assert_equal("10.1", worksheet.detailed_lever_guides_r45); end
  def test_detailed_lever_guides_s45; assert_equal("14.8", worksheet.detailed_lever_guides_s45); end
  def test_detailed_lever_guides_t45; assert_equal("20.2", worksheet.detailed_lever_guides_t45); end
  def test_detailed_lever_guides_b46; assert_equal("Solid or liquid", worksheet.detailed_lever_guides_b46); end
  def test_detailed_lever_guides_d46; assert_equal("Should we use solid or liquid biofuels? Currently 60% of modern biofuels are solid (e.g. wood chips) and 40% are liquid (bioethanol and biodiesel).", worksheet.detailed_lever_guides_d46); end
  def test_detailed_lever_guides_e46; assert_equal("30% liquid", worksheet.detailed_lever_guides_e46); end
  def test_detailed_lever_guides_h46; assert_equal("Reduced use of liquid biofuels. 20% liquid.", worksheet.detailed_lever_guides_h46); end
  def test_detailed_lever_guides_i46; assert_equal("40% liquid.", worksheet.detailed_lever_guides_i46); end
  def test_detailed_lever_guides_j46; assert_equal("60% liquid", worksheet.detailed_lever_guides_j46); end
  def test_detailed_lever_guides_k46; assert_equal("80% liquid", worksheet.detailed_lever_guides_k46); end
  def test_detailed_lever_guides_m46; assert_equal("Solid or liquid", worksheet.detailed_lever_guides_m46); end
  def test_detailed_lever_guides_n46; assert_equal("How much do we use liquid biofuels?", worksheet.detailed_lever_guides_n46); end
  def test_detailed_lever_guides_o46; assert_equal("% of biofuels that are liquid", worksheet.detailed_lever_guides_o46); end
  def test_detailed_lever_guides_p46; assert_equal("40% liquid", worksheet.detailed_lever_guides_p46); end
  def test_detailed_lever_guides_q46; assert_equal("20% liquid", worksheet.detailed_lever_guides_q46); end
  def test_detailed_lever_guides_r46; assert_equal("40% liquid", worksheet.detailed_lever_guides_r46); end
  def test_detailed_lever_guides_s46; assert_equal("60% liquid", worksheet.detailed_lever_guides_s46); end
  def test_detailed_lever_guides_t46; assert_equal("80% liquid", worksheet.detailed_lever_guides_t46); end
  def test_detailed_lever_guides_b47; assert_equal("Surplus land (forest & bioenergy) ", worksheet.detailed_lever_guides_b47); end
  def test_detailed_lever_guides_d47; assert_equal("After accounting for food production, do we use surplus land for growing biocrops, or for the regeneration of forests and grassland?", worksheet.detailed_lever_guides_d47); end
  def test_detailed_lever_guides_e47; assert_equal("40% of surplus land is used for biocrops.", worksheet.detailed_lever_guides_e47); end
  def test_detailed_lever_guides_h47; assert_equal("0% of surplus land is used for biocrops, with 80% for forests (including natural regeneration and planted forests).", worksheet.detailed_lever_guides_h47); end
  def test_detailed_lever_guides_i47; assert_equal("40% of surplus land is used for biocrops, with 48% for forest/grassland.", worksheet.detailed_lever_guides_i47); end
  def test_detailed_lever_guides_j47; assert_equal("60% of surplus land is used for biocrops, with 32% for forest/grassland.", worksheet.detailed_lever_guides_j47); end
  def test_detailed_lever_guides_k47; assert_equal("80% of surplus land is used for biocrops, with 16% for forest/grassland.", worksheet.detailed_lever_guides_k47); end
  def test_detailed_lever_guides_m47; assert_equal("Surplus land (forest & bioenergy) ", worksheet.detailed_lever_guides_m47); end
  def test_detailed_lever_guides_n47; assert_equal("Percentage of surplus land that is used for biocrops", worksheet.detailed_lever_guides_n47); end
  def test_detailed_lever_guides_o47; assert_equal("% of 2050's surplus land (if any) used for biocrops", worksheet.detailed_lever_guides_o47); end
  def test_detailed_lever_guides_p47; assert_equal("Historic data", worksheet.detailed_lever_guides_p47); end
  def test_detailed_lever_guides_q47; assert_equal("0%", worksheet.detailed_lever_guides_q47); end
  def test_detailed_lever_guides_r47; assert_equal("40%", worksheet.detailed_lever_guides_r47); end
  def test_detailed_lever_guides_s47; assert_equal("60%", worksheet.detailed_lever_guides_s47); end
  def test_detailed_lever_guides_t47; assert_equal("80%", worksheet.detailed_lever_guides_t47); end
  def test_detailed_lever_guides_b48; assert_equal("Biochar", worksheet.detailed_lever_guides_b48); end
  def test_detailed_lever_guides_d48; assert_equal("Do we use biochar technology to remove CO<sub>2</sub> from the atmosphere? In 2011, biochar was not used.", worksheet.detailed_lever_guides_d48); end
  def test_detailed_lever_guides_e48; assert_equal("Biochar technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_e48); end
  def test_detailed_lever_guides_h48; assert_equal("Biochar technology is still not used in 2050.", worksheet.detailed_lever_guides_h48); end
  def test_detailed_lever_guides_i48; assert_equal("Biochar technology removes 0.3 GtCO<sub>2</sub>/year by 2050.", worksheet.detailed_lever_guides_i48); end
  def test_detailed_lever_guides_j48; assert_equal("Biochar technology removes 0.8 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_j48); end
  def test_detailed_lever_guides_k48; assert_equal("Biochar technology removes 3.3 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_k48); end
  def test_detailed_lever_guides_m48; assert_equal("Biochar", worksheet.detailed_lever_guides_m48); end
  def test_detailed_lever_guides_n48; assert_equal("How much CO2 do we capture through biochar technology?", worksheet.detailed_lever_guides_n48); end
  def test_detailed_lever_guides_o48; assert_equal("Removal rate through biochar(GtCO2/year)", worksheet.detailed_lever_guides_o48); end
  def test_detailed_lever_guides_p48; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_p48); end
  def test_detailed_lever_guides_q48; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_q48); end
  def test_detailed_lever_guides_r48; assert_equal("0.3 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_r48); end
  def test_detailed_lever_guides_s48; assert_equal("0.8 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_s48); end
  def test_detailed_lever_guides_t48; assert_equal("3.3 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_t48); end
  def test_detailed_lever_guides_b49; assert_equal("Direct air capture", worksheet.detailed_lever_guides_b49); end
  def test_detailed_lever_guides_d49; assert_equal("Do we use direct air capture technology to remove CO<sub>2</sub> from the atmosphere? In 2011, direct air capture was not used.", worksheet.detailed_lever_guides_d49); end
  def test_detailed_lever_guides_e49; assert_equal("Direct air capture technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_e49); end
  def test_detailed_lever_guides_h49; assert_equal("Direct air capture technology is still not used in 2050 .", worksheet.detailed_lever_guides_h49); end
  def test_detailed_lever_guides_i49; assert_equal("Direct air capture technology removes 1.0 GtCO<sub>2</sub>/year by 2050.", worksheet.detailed_lever_guides_i49); end
  def test_detailed_lever_guides_j49; assert_equal("Direct air capture technology removes 2.5 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_j49); end
  def test_detailed_lever_guides_k49; assert_equal("Direct air capture technology removes 10.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_k49); end
  def test_detailed_lever_guides_m49; assert_equal("Direct air capture", worksheet.detailed_lever_guides_m49); end
  def test_detailed_lever_guides_n49; assert_equal("How much CO2 do we capture through direct air capture technology?", worksheet.detailed_lever_guides_n49); end
  def test_detailed_lever_guides_o49; assert_equal("Removal rate through air-capture (GtCO2/year)", worksheet.detailed_lever_guides_o49); end
  def test_detailed_lever_guides_p49; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_p49); end
  def test_detailed_lever_guides_q49; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_q49); end
  def test_detailed_lever_guides_r49; assert_equal("1.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_r49); end
  def test_detailed_lever_guides_s49; assert_equal("2.5 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_s49); end
  def test_detailed_lever_guides_t49; assert_equal("10.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_t49); end
  def test_detailed_lever_guides_b50; assert_equal("Ocean fertilisation", worksheet.detailed_lever_guides_b50); end
  def test_detailed_lever_guides_d50; assert_equal("Do we use ocean fertilisation technology to remove CO<sub>2</sub> from the atmosphere? In 2011, ocean fertilisation was not used.", worksheet.detailed_lever_guides_d50); end
  def test_detailed_lever_guides_e50; assert_equal("Ocean fertilisation technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_e50); end
  def test_detailed_lever_guides_h50; assert_equal("Ocean fertilisation technology is still not used in 2050.", worksheet.detailed_lever_guides_h50); end
  def test_detailed_lever_guides_i50; assert_equal("Ocean fertilisation technology removes 0.1 GtCO<sub>2</sub>/year by 2050.", worksheet.detailed_lever_guides_i50); end
  def test_detailed_lever_guides_j50; assert_equal("Ocean fertilisation technology removes 0.3 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_j50); end
  def test_detailed_lever_guides_k50; assert_equal("Ocean fertilisation technology removes 1.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_k50); end
  def test_detailed_lever_guides_m50; assert_equal("Ocean fertilisation", worksheet.detailed_lever_guides_m50); end
  def test_detailed_lever_guides_n50; assert_equal("How much CO2 do we capture through ocean fertilisation technology?", worksheet.detailed_lever_guides_n50); end
  def test_detailed_lever_guides_o50; assert_equal("Removal rate through ocean fertilisation (GtCO2/year)", worksheet.detailed_lever_guides_o50); end
  def test_detailed_lever_guides_p50; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_p50); end
  def test_detailed_lever_guides_q50; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_q50); end
  def test_detailed_lever_guides_r50; assert_equal("0.1 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_r50); end
  def test_detailed_lever_guides_s50; assert_equal("0.3 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_s50); end
  def test_detailed_lever_guides_t50; assert_equal("1.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_t50); end
  def test_detailed_lever_guides_b51; assert_equal("Enhanced weathering (oceanic)", worksheet.detailed_lever_guides_b51); end
  def test_detailed_lever_guides_d51; assert_equal("Do we use enhanced weathering (oceanic) technology to remove CO<sub>2</sub> from the atmosphere? In 2011, it was not used.", worksheet.detailed_lever_guides_d51); end
  def test_detailed_lever_guides_e51; assert_equal("Enhanced weathering (oceanic) technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_e51); end
  def test_detailed_lever_guides_h51; assert_equal("Enhanced weather (oceanic) technology is still not used in 2050.", worksheet.detailed_lever_guides_h51); end
  def test_detailed_lever_guides_i51; assert_equal("Enhanced weather (oceanic) technology removes 1.0 GtCO<sub>2</sub>/year by 2050.", worksheet.detailed_lever_guides_i51); end
  def test_detailed_lever_guides_j51; assert_equal("Enhanced weather (oceanic) technology removes 2.5 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_j51); end
  def test_detailed_lever_guides_k51; assert_equal("Enhanced weather (oceanic) technology removes 10.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_k51); end
  def test_detailed_lever_guides_m51; assert_equal("Enhanced weathering (oceanic)", worksheet.detailed_lever_guides_m51); end
  def test_detailed_lever_guides_n51; assert_equal("How much CO2 do we capture through enhanced weather (oceanic) technology?", worksheet.detailed_lever_guides_n51); end
  def test_detailed_lever_guides_o51; assert_equal("Removal rate through enhanced weathering (oceanic)", worksheet.detailed_lever_guides_o51); end
  def test_detailed_lever_guides_p51; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_p51); end
  def test_detailed_lever_guides_q51; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_q51); end
  def test_detailed_lever_guides_r51; assert_equal("1.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_r51); end
  def test_detailed_lever_guides_s51; assert_equal("2.5 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_s51); end
  def test_detailed_lever_guides_t51; assert_equal("10.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_t51); end
  def test_detailed_lever_guides_b52; assert_equal("Enhanced weathering (terrestial)", worksheet.detailed_lever_guides_b52); end
  def test_detailed_lever_guides_d52; assert_equal("Do we use enhanced weathering (terrestrial) technology to remove CO<sub>2</sub> from the atmosphere? In 2011, it was not used.", worksheet.detailed_lever_guides_d52); end
  def test_detailed_lever_guides_e52; assert_equal("Enhanced weathering (terrestial) technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_e52); end
  def test_detailed_lever_guides_h52; assert_equal("Enhanced weather (terrestrial) technology is still not used in 2050.", worksheet.detailed_lever_guides_h52); end
  def test_detailed_lever_guides_i52; assert_equal("Enhanced weather (terrestial) technology removes 0.4 GtCO<sub>2</sub>/year by 2050.", worksheet.detailed_lever_guides_i52); end
  def test_detailed_lever_guides_j52; assert_equal("Enhanced weather (terrestial) technology removes 0.9 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_j52); end
  def test_detailed_lever_guides_k52; assert_equal("Enhanced weather (terrestial) technology removes 3.7 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_k52); end
  def test_detailed_lever_guides_m52; assert_equal("Enhanced weathering (terrestial)", worksheet.detailed_lever_guides_m52); end
  def test_detailed_lever_guides_n52; assert_equal("How much CO2 do we capture through enhanced weather (terrestrial) technology?", worksheet.detailed_lever_guides_n52); end
  def test_detailed_lever_guides_o52; assert_equal("Removal rate through enhanced weathering (terrestial)", worksheet.detailed_lever_guides_o52); end
  def test_detailed_lever_guides_p52; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_p52); end
  def test_detailed_lever_guides_q52; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_q52); end
  def test_detailed_lever_guides_r52; assert_equal("0.4 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_r52); end
  def test_detailed_lever_guides_s52; assert_equal("0.9 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_s52); end
  def test_detailed_lever_guides_t52; assert_equal("3.7 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_t52); end
  def test_detailed_lever_guides_b53; assert_equal("Wastes and residues", worksheet.detailed_lever_guides_b53); end
  def test_detailed_lever_guides_d53; assert_equal("How much is wasted on farms, and how much food is wasted? For example, in 2011, 24% of crop energy content was wasted after leaving the farm (e.g. through damage in transit, improper storage, or consumers throwing it away).", worksheet.detailed_lever_guides_d53); end
  def test_detailed_lever_guides_e53; assert_equal("22% of crop energy is wasted after leaving the farm by 2050", worksheet.detailed_lever_guides_e53); end
  def test_detailed_lever_guides_h53; assert_equal("24% of crop energy is wasted after leaving the farm.", worksheet.detailed_lever_guides_h53); end
  def test_detailed_lever_guides_i53; assert_equal("20% of crop energy is wasted after leaving the farm.", worksheet.detailed_lever_guides_i53); end
  def test_detailed_lever_guides_j53; assert_equal("16% of crop energy is wasted after leaving the farm", worksheet.detailed_lever_guides_j53); end
  def test_detailed_lever_guides_k53; assert_equal("10% of crop energy is wasted after leaving the farm", worksheet.detailed_lever_guides_k53); end
  def test_detailed_lever_guides_m53; assert_equal("Wastes and residues", worksheet.detailed_lever_guides_m53); end
  def test_detailed_lever_guides_n53; assert_equal("How much food is wasted after leaving the farm?", worksheet.detailed_lever_guides_n53); end
  def test_detailed_lever_guides_o53; assert_equal("% of crop energy content that is wasted after leaving the farm", worksheet.detailed_lever_guides_o53); end
  def test_detailed_lever_guides_p53; assert_equal("24%", worksheet.detailed_lever_guides_p53); end
  def test_detailed_lever_guides_q53; assert_equal("24%", worksheet.detailed_lever_guides_q53); end
  def test_detailed_lever_guides_r53; assert_equal("20%", worksheet.detailed_lever_guides_r53); end
  def test_detailed_lever_guides_s53; assert_equal("16%", worksheet.detailed_lever_guides_s53); end
  def test_detailed_lever_guides_t53; assert_equal("10%", worksheet.detailed_lever_guides_t53); end
  def test_detailed_lever_guides_b54; assert_equal("Emissions trajectory", worksheet.detailed_lever_guides_b54); end
  def test_detailed_lever_guides_h54; assert_equal("After 2050, emissions are flat.", worksheet.detailed_lever_guides_h54); end
  def test_detailed_lever_guides_i54; assert_equal("After 2050, emissions change every year by one third of the average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_i54); end
  def test_detailed_lever_guides_j54; assert_equal("After 2050, emissions change every year by two thirds the average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_j54); end
  def test_detailed_lever_guides_k54; assert_equal("After 2050, emissions change every year by 1.16 x average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_k54); end
  def test_detailed_lever_guides_m54; assert_equal("Emissions trajectory", worksheet.detailed_lever_guides_m54); end
  def test_detailed_lever_guides_n54; assert_equal("TO ADD", worksheet.detailed_lever_guides_n54); end
  def test_detailed_lever_guides_o54; assert_equal("Emissions change every year between 2050 and 2100 ", worksheet.detailed_lever_guides_o54); end
  def test_detailed_lever_guides_p54; assert_in_delta(0.0, (worksheet.detailed_lever_guides_p54||0), 0.002); end
  def test_detailed_lever_guides_q54; assert_in_delta(0.0, (worksheet.detailed_lever_guides_q54||0), 0.002); end
  def test_detailed_lever_guides_r54; assert_in_delta(0.3333333333333333, worksheet.detailed_lever_guides_r54, 0.002); end
  def test_detailed_lever_guides_s54; assert_in_delta(0.6666666666666666, worksheet.detailed_lever_guides_s54, 0.002); end
  def test_detailed_lever_guides_t54; assert_in_epsilon(1.16, worksheet.detailed_lever_guides_t54, 0.002); end
  def test_detailed_lever_guides_b55; assert_equal("Atmospheric CO2 fraction", worksheet.detailed_lever_guides_b55); end
  def test_detailed_lever_guides_c55; assert_equal("atm.fraction", worksheet.detailed_lever_guides_c55); end
  def test_detailed_lever_guides_d55; assert_equal("What proportion of emitted CO<sub>2</sub> remains in the atmosphere? In 2011, this was assumed to be 44% (plus or minus 6%) , and it is expected to rise if emissions continue to increase.", worksheet.detailed_lever_guides_d55); end
  def test_detailed_lever_guides_h55; assert_equal("Decreases to 30% of emitted CO<sub>2</sub> remaining in the atmosphere.", worksheet.detailed_lever_guides_h55); end
  def test_detailed_lever_guides_i55; assert_equal("Remains at 44% of emitted CO<sub>2</sub> remaining in the atmosphere.", worksheet.detailed_lever_guides_i55); end
  def test_detailed_lever_guides_j55; assert_equal("Increases over time to 60% of emitted CO<sub>2</sub> remaining in the atmosphere.", worksheet.detailed_lever_guides_j55); end
  def test_detailed_lever_guides_k55; assert_equal("Increases over time to 74% of emitted CO<sub>2</sub> remaining in the atmosphere.", worksheet.detailed_lever_guides_k55); end
  def test_detailed_lever_guides_l55; assert_equal("Could add an interaction with total carbon emissions: for low trajectories the lower end of this range is expected to be more likely, and for high carbon trajectories the upper end.", worksheet.detailed_lever_guides_l55); end
  def test_detailed_lever_guides_m55; assert_equal("Atmospheric CO2 fraction", worksheet.detailed_lever_guides_m55); end
  def test_detailed_lever_guides_n55; assert_equal("TO ADD", worksheet.detailed_lever_guides_n55); end
  def test_detailed_lever_guides_o55; assert_equal("By 2100, % of historically -emitted CO2 that remains in atmosphere", worksheet.detailed_lever_guides_o55); end
  def test_detailed_lever_guides_p55; assert_in_delta(0.44, worksheet.detailed_lever_guides_p55, 0.002); end
  def test_detailed_lever_guides_q55; assert_in_delta(0.3, worksheet.detailed_lever_guides_q55, 0.002); end
  def test_detailed_lever_guides_r55; assert_in_delta(0.44, worksheet.detailed_lever_guides_r55, 0.002); end
  def test_detailed_lever_guides_s55; assert_in_delta(0.6, worksheet.detailed_lever_guides_s55, 0.002); end
  def test_detailed_lever_guides_t55; assert_in_delta(0.74, worksheet.detailed_lever_guides_t55, 0.002); end
  def test_detailed_lever_guides_b56; assert_equal("Confidence in climate models", worksheet.detailed_lever_guides_b56); end
  def test_detailed_lever_guides_c56; assert_equal("model.unc", worksheet.detailed_lever_guides_c56); end
  def test_detailed_lever_guides_d56; assert_equal("How confident are you about the ability of computer models to simulate the climate? Do you want to use the raw data from climate models, or do you want to show an uncertainty range to reflect phenomena that are not included in the model? If you do not have confidence in climate models, please visit the basic physics page below to see some simple calculations based on your pathway.", worksheet.detailed_lever_guides_d56); end
  def test_detailed_lever_guides_h56; assert_equal("Over-confident in model ability: show only the raw output from climate models.", worksheet.detailed_lever_guides_h56); end
  def test_detailed_lever_guides_i56; assert_equal("IPCC approach: generate an uncertainty range to take into account phenomena that were not included in the model. ", worksheet.detailed_lever_guides_i56); end
  def test_detailed_lever_guides_j56; assert_equal("n/a", worksheet.detailed_lever_guides_j56); end
  def test_detailed_lever_guides_k56; assert_equal("n/a", worksheet.detailed_lever_guides_k56); end
  def test_detailed_lever_guides_b57; assert_equal("Region factor", worksheet.detailed_lever_guides_b57); end
  def test_detailed_lever_guides_h57; assert_equal("US costs", worksheet.detailed_lever_guides_h57); end
  def test_detailed_lever_guides_b58; assert_equal("Coal", worksheet.detailed_lever_guides_b58); end
  def test_detailed_lever_guides_b59; assert_equal("Oil", worksheet.detailed_lever_guides_b59); end
  def test_detailed_lever_guides_b60; assert_equal("Gas", worksheet.detailed_lever_guides_b60); end
  def test_detailed_lever_guides_b61; assert_equal("Solid bioenergy", worksheet.detailed_lever_guides_b61); end
  def test_detailed_lever_guides_b62; assert_equal("Liquid bioenergy", worksheet.detailed_lever_guides_b62); end
  def test_detailed_lever_guides_b63; assert_equal("Gaseous bioenergy", worksheet.detailed_lever_guides_b63); end
  def test_detailed_lever_guides_b64; assert_equal("Hydrogen", worksheet.detailed_lever_guides_b64); end
  def test_g_60_data__c1256; assert_equal("Cows and other bovines ", worksheet.g_60_data__c1256); end
  def test_g_60_data__d1256; assert_in_epsilon(20.81788931788931, worksheet.g_60_data__d1256, 0.002); end
  def test_g_60_data__e1256; assert_in_epsilon(26.332046332046332, worksheet.g_60_data__e1256, 0.002); end
  def test_g_60_data__f1256; assert_in_epsilon(32.35099999999999, worksheet.g_60_data__f1256, 0.002); end
  def test_g_60_data__g1256; assert_in_epsilon(40.92, worksheet.g_60_data__g1256, 0.002); end
  def test_g_60_data__c1257; assert_equal("Chickens and other poultry", worksheet.g_60_data__c1257); end
  def test_g_60_data__d1257; assert_in_epsilon(30.261410788381742, worksheet.g_60_data__d1257, 0.002); end
  def test_g_60_data__e1257; assert_in_epsilon(45.33886583679114, worksheet.g_60_data__e1257, 0.002); end
  def test_g_60_data__f1257; assert_in_epsilon(43.757999999999996, worksheet.g_60_data__f1257, 0.002); end
  def test_g_60_data__g1257; assert_in_epsilon(65.56, worksheet.g_60_data__g1257, 0.002); end
  def test_g_60_data__c1258; assert_equal("Pigs", worksheet.g_60_data__c1258); end
  def test_g_60_data__d1258; assert_in_epsilon(35.17821782178217, worksheet.g_60_data__d1258, 0.002); end
  def test_g_60_data__e1258; assert_in_epsilon(34.15134370579915, worksheet.g_60_data__e1258, 0.002); end
  def test_g_60_data__f1258; assert_in_epsilon(99.48399999999998, worksheet.g_60_data__f1258, 0.002); end
  def test_g_60_data__g1258; assert_in_epsilon(96.58000000000001, worksheet.g_60_data__g1258, 0.002); end
  def test_g_60_data__c1259; assert_equal("Sheep and goats", worksheet.g_60_data__c1259); end
  def test_g_60_data__d1259; assert_in_epsilon(4.243971631205673, worksheet.g_60_data__d1259, 0.002); end
  def test_g_60_data__e1259; assert_in_epsilon(6.241134751773049, worksheet.g_60_data__e1259, 0.002); end
  def test_g_60_data__f1259; assert_in_epsilon(8.975999999999999, worksheet.g_60_data__f1259, 0.002); end
  def test_g_60_data__g1259; assert_in_epsilon(13.200000000000001, worksheet.g_60_data__g1259, 0.002); end
  def test_g_60_data__c1260; assert_equal("Other animals", worksheet.g_60_data__c1260); end
  def test_g_60_data__d1260; assert_in_delta(0.8596181046676056, worksheet.g_60_data__d1260, 0.002); end
  def test_g_60_data__e1260; assert_in_epsilon(1.3224893917963236, worksheet.g_60_data__e1260, 0.002); end
  def test_g_60_data__f1260; assert_in_epsilon(2.430999999999989, worksheet.g_60_data__f1260, 0.002); end
  def test_g_60_data__g1260; assert_in_epsilon(3.7400000000000033, worksheet.g_60_data__g1260, 0.002); end
  def test_g_60_data__c1261; assert_equal("Animal fats", worksheet.g_60_data__c1261); end
  def test_g_60_data__d1261; assert_in_epsilon(8.886255924170614, worksheet.g_60_data__d1261, 0.002); end
  def test_g_60_data__e1261; assert_in_epsilon(10.454418734318372, worksheet.g_60_data__e1261, 0.002); end
  def test_g_60_data__f1261; assert_in_epsilon(60.0, worksheet.g_60_data__f1261, 0.002); end
  def test_g_60_data__g1261; assert_in_epsilon(70.58823529411765, worksheet.g_60_data__g1261, 0.002); end
  def test_g_60_data__c1262; assert_equal("Offals", worksheet.g_60_data__c1262); end
  def test_g_60_data__d1262; assert_in_epsilon(6.024096385542169, worksheet.g_60_data__d1262, 0.002); end
  def test_g_60_data__e1262; assert_in_epsilon(7.087172218284905, worksheet.g_60_data__e1262, 0.002); end
  def test_g_60_data__f1262; assert_in_epsilon(7.0, worksheet.g_60_data__f1262, 0.002); end
  def test_g_60_data__g1262; assert_in_epsilon(8.23529411764706, worksheet.g_60_data__g1262, 0.002); end
  def test_g_60_data__c1263; assert_equal("Fish, seafood and other aquatic products", worksheet.g_60_data__c1263); end
  def test_g_60_data__d1263; assert_in_epsilon(41.04109589041096, worksheet.g_60_data__d1263, 0.002); end
  def test_g_60_data__e1263; assert_in_epsilon(64.92344883158742, worksheet.g_60_data__e1263, 0.002); end
  def test_g_60_data__f1263; assert_in_epsilon(26.964000000000002, worksheet.g_60_data__f1263, 0.002); end
  def test_g_60_data__g1263; assert_in_epsilon(42.65470588235294, worksheet.g_60_data__g1263, 0.002); end
  def test_g_60_data__c1264; assert_equal("Eggs", worksheet.g_60_data__c1264); end
  def test_g_60_data__d1264; assert_in_epsilon(18.77715877437326, worksheet.g_60_data__d1264, 0.002); end
  def test_g_60_data__e1264; assert_in_epsilon(26.874897591348518, worksheet.g_60_data__e1264, 0.002); end
  def test_g_60_data__f1264; assert_in_epsilon(26.964000000000002, worksheet.g_60_data__f1264, 0.002); end
  def test_g_60_data__g1264; assert_in_epsilon(38.59235294117647, worksheet.g_60_data__g1264, 0.002); end
  def test_g_60_data__c1265; assert_equal("Milk products", worksheet.g_60_data__c1265); end
  def test_g_60_data__d1265; assert_in_epsilon(178.20640569395013, worksheet.g_60_data__d1265, 0.002); end
  def test_g_60_data__e1265; assert_in_epsilon(238.53673853883188, worksheet.g_60_data__e1265, 0.002); end
  def test_g_60_data__f1265; assert_in_epsilon(100.15199999999999, worksheet.g_60_data__f1265, 0.002); end
  def test_g_60_data__g1265; assert_in_epsilon(134.05764705882353, worksheet.g_60_data__g1265, 0.002); end
  def test_g_60_data__c1266; assert_equal("Grains and cereals", worksheet.g_60_data__c1266); end
  def test_g_60_data__d1266; assert_in_epsilon(308.4266169154228, worksheet.g_60_data__d1266, 0.002); end
  def test_g_60_data__e1266; assert_in_epsilon(308.4266169154228, worksheet.g_60_data__e1266, 0.002); end
  def test_g_60_data__f1266; assert_in_epsilon(991.9, worksheet.g_60_data__f1266, 0.002); end
  def test_g_60_data__g1266; assert_in_epsilon(991.9, worksheet.g_60_data__g1266, 0.002); end
  def test_g_60_data__c1267; assert_equal("Sugar", worksheet.g_60_data__c1267); end
  def test_g_60_data__d1267; assert_in_epsilon(50.04304160688665, worksheet.g_60_data__d1267, 0.002); end
  def test_g_60_data__e1267; assert_in_epsilon(52.86281544585559, worksheet.g_60_data__e1267, 0.002); end
  def test_g_60_data__f1267; assert_in_epsilon(174.4, worksheet.g_60_data__f1267, 0.002); end
  def test_g_60_data__g1267; assert_in_epsilon(184.22691182880675, worksheet.g_60_data__g1267, 0.002); end
  def test_g_60_data__c1268; assert_equal("Roots and tubers", worksheet.g_60_data__c1268); end
  def test_g_60_data__d1268; assert_in_epsilon(131.87654320987653, worksheet.g_60_data__d1268, 0.002); end
  def test_g_60_data__e1268; assert_in_epsilon(139.30738703104214, worksheet.g_60_data__e1268, 0.002); end
  def test_g_60_data__f1268; assert_in_epsilon(106.82000000000001, worksheet.g_60_data__f1268, 0.002); end
  def test_g_60_data__g1268; assert_in_epsilon(112.83898349514416, worksheet.g_60_data__g1268, 0.002); end
  def test_g_60_data__c1269; assert_equal("Pulses", worksheet.g_60_data__c1269); end
  def test_g_60_data__d1269; assert_in_epsilon(14.584060500290866, worksheet.g_60_data__d1269, 0.002); end
  def test_g_60_data__e1269; assert_in_epsilon(15.405828141588696, worksheet.g_60_data__e1269, 0.002); end
  def test_g_60_data__f1269; assert_in_epsilon(50.13999999999999, worksheet.g_60_data__f1269, 0.002); end
  def test_g_60_data__g1269; assert_in_epsilon(52.96523715078194, worksheet.g_60_data__g1269, 0.002); end
  def test_g_60_data__c1270; assert_equal("Vegetable oil", worksheet.g_60_data__c1270); end
  def test_g_60_data__d1270; assert_in_epsilon(24.44113945772795, worksheet.g_60_data__d1270, 0.002); end
  def test_g_60_data__e1270; assert_in_epsilon(25.818323646068908, worksheet.g_60_data__e1270, 0.002); end
  def test_g_60_data__f1270; assert_in_epsilon(213.64000000000001, worksheet.g_60_data__f1270, 0.002); end
  def test_g_60_data__g1270; assert_in_epsilon(225.67796699028833, worksheet.g_60_data__g1270, 0.002); end
  def test_g_60_data__c1271; assert_equal("Fruit and Veg", worksheet.g_60_data__c1271); end
  def test_g_60_data__d1271; assert_in_epsilon(437.23163841807906, worksheet.g_60_data__d1271, 0.002); end
  def test_g_60_data__e1271; assert_in_epsilon(461.8683170849322, worksheet.g_60_data__e1271, 0.002); end
  def test_g_60_data__f1271; assert_in_epsilon(154.78, worksheet.g_60_data__f1271, 0.002); end
  def test_g_60_data__g1271; assert_in_epsilon(163.501384248066, worksheet.g_60_data__g1271, 0.002); end
  def test_g_60_data__c1272; assert_equal("Other", worksheet.g_60_data__c1272); end
  def test_g_60_data__d1272; assert_in_epsilon(24.019157852724003, worksheet.g_60_data__d1272, 0.002); end
  def test_g_60_data__e1272; assert_in_epsilon(25.372564655596197, worksheet.g_60_data__e1272, 0.002); end
  def test_g_60_data__f1272; assert_in_epsilon(80.24000000000001, worksheet.g_60_data__f1272, 0.002); end
  def test_g_60_data__g1272; assert_in_epsilon(84.76128099279505, worksheet.g_60_data__g1272, 0.002); end
  def test_g_60_data__c1400; assert_equal("Meat type", worksheet.g_60_data__c1400); end
  def test_g_60_data__d1400; assert_equal("2011.0", worksheet.g_60_data__d1400); end
  def test_g_60_data__e1400; assert_equal("2050.0", worksheet.g_60_data__e1400); end
  def test_g_60_data__c1401; assert_equal("Beef", worksheet.g_60_data__c1401); end
  def test_g_60_data__d1401; assert_in_delta(0.06, worksheet.g_60_data__d1401, 0.002); end
  def test_g_60_data__e1401; assert_in_delta(0.06, worksheet.g_60_data__e1401, 0.002); end
  def test_g_60_data__c1402; assert_equal("Sheep and Goats", worksheet.g_60_data__c1402); end
  def test_g_60_data__d1402; assert_in_delta(0.01, worksheet.g_60_data__d1402, 0.002); end
  def test_g_60_data__e1402; assert_in_delta(0.01, worksheet.g_60_data__e1402, 0.002); end
  def test_g_60_data__c1403; assert_equal("Pigs", worksheet.g_60_data__c1403); end
  def test_g_60_data__d1403; assert_in_delta(1.0, worksheet.g_60_data__d1403, 0.002); end
  def test_g_60_data__e1403; assert_in_delta(1.0, worksheet.g_60_data__e1403, 0.002); end
  def test_g_60_data__c1404; assert_equal("Poutlry", worksheet.g_60_data__c1404); end
  def test_g_60_data__d1404; assert_in_delta(1.0, worksheet.g_60_data__d1404, 0.002); end
  def test_g_60_data__e1404; assert_in_delta(1.0, worksheet.g_60_data__e1404, 0.002); end
  def test_g_60_data__c1277; assert_equal("Column1", worksheet.g_60_data__c1277); end
  def test_g_60_data__d1277; assert_equal("2011", worksheet.g_60_data__d1277); end
  def test_g_60_data__e1277; assert_equal("2050", worksheet.g_60_data__e1277); end
  def test_g_60_data__f1277; assert_equal("Botswana 2011", worksheet.g_60_data__f1277); end
  def test_g_60_data__g1277; assert_equal("Brazil 2011", worksheet.g_60_data__g1277); end
  def test_g_60_data__h1277; assert_equal("China 2011", worksheet.g_60_data__h1277); end
  def test_g_60_data__i1277; assert_equal("India 2011", worksheet.g_60_data__i1277); end
  def test_g_60_data__j1277; assert_equal("Japan 2011", worksheet.g_60_data__j1277); end
  def test_g_60_data__k1277; assert_equal("UK 2011", worksheet.g_60_data__k1277); end
  def test_g_60_data__l1277; assert_equal("USA 2011", worksheet.g_60_data__l1277); end
  def test_g_60_data__c1278; assert_equal("Beef", worksheet.g_60_data__c1278); end
  def test_g_60_data__d1278; assert_in_epsilon(20.81788931788931, worksheet.g_60_data__d1278, 0.002); end
  def test_g_60_data__e1278; assert_in_epsilon(26.332046332046332, worksheet.g_60_data__e1278, 0.002); end
  def test_g_60_data__f1278; assert_in_epsilon(17.82, worksheet.g_60_data__f1278, 0.002); end
  def test_g_60_data__g1278; assert_in_epsilon(86.67, worksheet.g_60_data__g1278, 0.002); end
  def test_g_60_data__h1278; assert_in_epsilon(10.530000000000001, worksheet.g_60_data__h1278, 0.002); end
  def test_g_60_data__i1278; assert_in_epsilon(2.43, worksheet.g_60_data__i1278, 0.002); end
  def test_g_60_data__j1278; assert_in_epsilon(20.25, worksheet.g_60_data__j1278, 0.002); end
  def test_g_60_data__k1278; assert_in_epsilon(41.31, worksheet.g_60_data__k1278, 0.002); end
  def test_g_60_data__l1278; assert_in_epsilon(81.81, worksheet.g_60_data__l1278, 0.002); end
  def test_g_60_data__c1279; assert_equal("Poultry", worksheet.g_60_data__c1279); end
  def test_g_60_data__d1279; assert_in_epsilon(30.261410788381742, worksheet.g_60_data__d1279, 0.002); end
  def test_g_60_data__e1279; assert_in_epsilon(45.33886583679114, worksheet.g_60_data__e1279, 0.002); end
  def test_g_60_data__f1279; assert_in_epsilon(11.34, worksheet.g_60_data__f1279, 0.002); end
  def test_g_60_data__g1279; assert_in_epsilon(89.91000000000001, worksheet.g_60_data__g1279, 0.002); end
  def test_g_60_data__h1279; assert_in_epsilon(28.35, worksheet.g_60_data__h1279, 0.002); end
  def test_g_60_data__i1279; assert_in_epsilon(4.050000000000001, worksheet.g_60_data__i1279, 0.002); end
  def test_g_60_data__j1279; assert_in_epsilon(42.120000000000005, worksheet.g_60_data__j1279, 0.002); end
  def test_g_60_data__k1279; assert_in_epsilon(68.04, worksheet.g_60_data__k1279, 0.002); end
  def test_g_60_data__l1279; assert_in_epsilon(114.21000000000001, worksheet.g_60_data__l1279, 0.002); end
  def test_g_60_data__c1280; assert_equal("Pork", worksheet.g_60_data__c1280); end
  def test_g_60_data__d1280; assert_in_epsilon(35.17821782178217, worksheet.g_60_data__d1280, 0.002); end
  def test_g_60_data__e1280; assert_in_epsilon(34.15134370579915, worksheet.g_60_data__e1280, 0.002); end
  def test_g_60_data__f1280; assert_in_epsilon(1.62, worksheet.g_60_data__f1280, 0.002); end
  def test_g_60_data__g1280; assert_in_epsilon(27.540000000000003, worksheet.g_60_data__g1280, 0.002); end
  def test_g_60_data__h1280; assert_in_epsilon(79.38000000000001, worksheet.g_60_data__h1280, 0.002); end
  def test_g_60_data__i1280; assert_in_delta(0.81, worksheet.g_60_data__i1280, 0.002); end
  def test_g_60_data__j1280; assert_in_epsilon(45.36, worksheet.g_60_data__j1280, 0.002); end
  def test_g_60_data__k1280; assert_in_epsilon(59.13, worksheet.g_60_data__k1280, 0.002); end
  def test_g_60_data__l1280; assert_in_epsilon(62.370000000000005, worksheet.g_60_data__l1280, 0.002); end
  def test_g_60_data__c1281; assert_equal("Sheep and goat meat", worksheet.g_60_data__c1281); end
  def test_g_60_data__d1281; assert_in_epsilon(4.243971631205673, worksheet.g_60_data__d1281, 0.002); end
  def test_g_60_data__e1281; assert_in_epsilon(6.241134751773049, worksheet.g_60_data__e1281, 0.002); end
  def test_g_60_data__f1281; assert_in_epsilon(8.91, worksheet.g_60_data__f1281, 0.002); end
  def test_g_60_data__g1281; assert_in_epsilon(1.62, worksheet.g_60_data__g1281, 0.002); end
  def test_g_60_data__h1281; assert_in_epsilon(6.48, worksheet.g_60_data__h1281, 0.002); end
  def test_g_60_data__i1281; assert_in_epsilon(1.62, worksheet.g_60_data__i1281, 0.002); end
  def test_g_60_data__j1281; assert_in_delta(0.0, (worksheet.g_60_data__j1281||0), 0.002); end
  def test_g_60_data__k1281; assert_in_epsilon(10.530000000000001, worksheet.g_60_data__k1281, 0.002); end
  def test_g_60_data__l1281; assert_in_delta(0.81, worksheet.g_60_data__l1281, 0.002); end
  def test_g_60_data__c1282; assert_equal("Fish", worksheet.g_60_data__c1282); end
  def test_g_60_data__d1282; assert_in_epsilon(41.04109589041096, worksheet.g_60_data__d1282, 0.002); end
  def test_g_60_data__e1282; assert_in_epsilon(64.92344883158742, worksheet.g_60_data__e1282, 0.002); end
  def test_g_60_data__f1282; assert_in_epsilon(5.67, worksheet.g_60_data__f1282, 0.002); end
  def test_g_60_data__g1282; assert_in_epsilon(23.490000000000002, worksheet.g_60_data__g1282, 0.002); end
  def test_g_60_data__h1282; assert_in_epsilon(72.9, worksheet.g_60_data__h1282, 0.002); end
  def test_g_60_data__i1282; assert_in_epsilon(12.96, worksheet.g_60_data__i1282, 0.002); end
  def test_g_60_data__j1282; assert_in_epsilon(119.07000000000001, worksheet.g_60_data__j1282, 0.002); end
  def test_g_60_data__k1282; assert_in_epsilon(42.120000000000005, worksheet.g_60_data__k1282, 0.002); end
  def test_g_60_data__l1282; assert_in_epsilon(47.790000000000006, worksheet.g_60_data__l1282, 0.002); end
  def test_g_60_data__c1283; assert_equal("Eggs", worksheet.g_60_data__c1283); end
  def test_g_60_data__d1283; assert_in_epsilon(18.77715877437326, worksheet.g_60_data__d1283, 0.002); end
  def test_g_60_data__e1283; assert_in_epsilon(26.874897591348518, worksheet.g_60_data__e1283, 0.002); end
  def test_g_60_data__f1283; assert_in_epsilon(4.5, worksheet.g_60_data__f1283, 0.002); end
  def test_g_60_data__g1283; assert_in_epsilon(21.6, worksheet.g_60_data__g1283, 0.002); end
  def test_g_60_data__h1283; assert_in_epsilon(45.9, worksheet.g_60_data__h1283, 0.002); end
  def test_g_60_data__i1283; assert_in_epsilon(6.3, worksheet.g_60_data__i1283, 0.002); end
  def test_g_60_data__j1283; assert_in_epsilon(46.800000000000004, worksheet.g_60_data__j1283, 0.002); end
  def test_g_60_data__k1283; assert_in_epsilon(26.1, worksheet.g_60_data__k1283, 0.002); end
  def test_g_60_data__l1283; assert_in_epsilon(34.2, worksheet.g_60_data__l1283, 0.002); end
  def test_g_60_data__c1284; assert_equal("Milk products", worksheet.g_60_data__c1284); end
  def test_g_60_data__d1284; assert_in_epsilon(178.20640569395013, worksheet.g_60_data__d1284, 0.002); end
  def test_g_60_data__e1284; assert_in_epsilon(238.53673853883188, worksheet.g_60_data__e1284, 0.002); end
  def test_g_60_data__f1284; assert_in_epsilon(224.67999999999998, worksheet.g_60_data__f1284, 0.002); end
  def test_g_60_data__g1284; assert_in_epsilon(338.65999999999997, worksheet.g_60_data__g1284, 0.002); end
  def test_g_60_data__h1284; assert_in_epsilon(70.52, worksheet.g_60_data__h1284, 0.002); end
  def test_g_60_data__i1284; assert_in_epsilon(180.39999999999998, worksheet.g_60_data__i1284, 0.002); end
  def test_g_60_data__j1284; assert_in_epsilon(159.89999999999998, worksheet.g_60_data__j1284, 0.002); end
  def test_g_60_data__k1284; assert_in_epsilon(541.1999999999999, worksheet.g_60_data__k1284, 0.002); end
  def test_g_60_data__l1284; assert_in_epsilon(576.4599999999999, worksheet.g_60_data__l1284, 0.002); end
  def test_g_60_data__c1285; assert_equal("Other animal products (e.g. animal fats, offals etc.)", worksheet.g_60_data__c1285); end
  def test_g_60_data__d1285; assert_in_epsilon(15.769970414380388, worksheet.g_60_data__d1285, 0.002); end
  def test_g_60_data__e1285; assert_in_epsilon(18.8640803443996, worksheet.g_60_data__e1285, 0.002); end
  def test_g_60_data__f1285; assert_in_epsilon(40.5, worksheet.g_60_data__f1285, 0.002); end
  def test_g_60_data__g1285; assert_in_epsilon(12.15, worksheet.g_60_data__g1285, 0.002); end
  def test_g_60_data__h1285; assert_in_epsilon(15.39, worksheet.g_60_data__h1285, 0.002); end
  def test_g_60_data__i1285; assert_in_epsilon(7.290000000000001, worksheet.g_60_data__i1285, 0.002); end
  def test_g_60_data__j1285; assert_in_epsilon(8.91, worksheet.g_60_data__j1285, 0.002); end
  def test_g_60_data__k1285; assert_in_epsilon(21.060000000000002, worksheet.g_60_data__k1285, 0.002); end
  def test_g_60_data__l1285; assert_in_epsilon(13.770000000000001, worksheet.g_60_data__l1285, 0.002); end
  def test_g_60_data__c1286; assert_equal("Cereals and grains", worksheet.g_60_data__c1286); end
  def test_g_60_data__d1286; assert_in_epsilon(308.4266169154228, worksheet.g_60_data__d1286, 0.002); end
  def test_g_60_data__e1286; assert_in_epsilon(308.4266169154228, worksheet.g_60_data__e1286, 0.002); end
  def test_g_60_data__f1286; assert_in_epsilon(238.64000000000001, worksheet.g_60_data__f1286, 0.002); end
  def test_g_60_data__g1286; assert_in_epsilon(237.88, worksheet.g_60_data__g1286, 0.002); end
  def test_g_60_data__h1286; assert_in_epsilon(315.4, worksheet.g_60_data__h1286, 0.002); end
  def test_g_60_data__i1286; assert_in_epsilon(316.92, worksheet.g_60_data__i1286, 0.002); end
  def test_g_60_data__j1286; assert_in_epsilon(217.36, worksheet.g_60_data__j1286, 0.002); end
  def test_g_60_data__k1286; assert_in_epsilon(237.12, worksheet.g_60_data__k1286, 0.002); end
  def test_g_60_data__l1286; assert_in_epsilon(220.4, worksheet.g_60_data__l1286, 0.002); end
  def test_g_60_data__c1287; assert_equal("Sugars", worksheet.g_60_data__c1287); end
  def test_g_60_data__d1287; assert_in_epsilon(50.04304160688665, worksheet.g_60_data__d1287, 0.002); end
  def test_g_60_data__e1287; assert_in_epsilon(52.86281544585559, worksheet.g_60_data__e1287, 0.002); end
  def test_g_60_data__f1287; assert_in_epsilon(61.56, worksheet.g_60_data__f1287, 0.002); end
  def test_g_60_data__g1287; assert_in_epsilon(88.16, worksheet.g_60_data__g1287, 0.002); end
  def test_g_60_data__h1287; assert_in_epsilon(15.2, worksheet.g_60_data__h1287, 0.002); end
  def test_g_60_data__i1287; assert_in_epsilon(45.6, worksheet.g_60_data__i1287, 0.002); end
  def test_g_60_data__j1287; assert_in_epsilon(58.52, worksheet.g_60_data__j1287, 0.002); end
  def test_g_60_data__k1287; assert_in_epsilon(83.6, worksheet.g_60_data__k1287, 0.002); end
  def test_g_60_data__l1287; assert_in_epsilon(126.16, worksheet.g_60_data__l1287, 0.002); end
  def test_g_60_data__c1288; assert_equal("Fruit, vegetables (including roots and tubers)", worksheet.g_60_data__c1288); end
  def test_g_60_data__d1288; assert_in_epsilon(569.1081816279556, worksheet.g_60_data__d1288, 0.002); end
  def test_g_60_data__e1288; assert_in_epsilon(601.1757041159743, worksheet.g_60_data__e1288, 0.002); end
  def test_g_60_data__f1288; assert_in_epsilon(284.24, worksheet.g_60_data__f1288, 0.002); end
  def test_g_60_data__g1288; assert_in_epsilon(536.5600000000001, worksheet.g_60_data__g1288, 0.002); end
  def test_g_60_data__h1288; assert_in_epsilon(1002.44, worksheet.g_60_data__h1288, 0.002); end
  def test_g_60_data__i1288; assert_in_epsilon(342.0, worksheet.g_60_data__i1288, 0.002); end
  def test_g_60_data__j1288; assert_in_epsilon(380.76, worksheet.g_60_data__j1288, 0.002); end
  def test_g_60_data__k1288; assert_in_epsilon(667.28, worksheet.g_60_data__k1288, 0.002); end
  def test_g_60_data__l1288; assert_in_epsilon(562.4, worksheet.g_60_data__l1288, 0.002); end
  def test_g_60_data__c1289; assert_equal("Pulses ", worksheet.g_60_data__c1289); end
  def test_g_60_data__d1289; assert_in_epsilon(14.584060500290866, worksheet.g_60_data__d1289, 0.002); end
  def test_g_60_data__e1289; assert_in_epsilon(15.405828141588696, worksheet.g_60_data__e1289, 0.002); end
  def test_g_60_data__f1289; assert_in_epsilon(9.120000000000001, worksheet.g_60_data__f1289, 0.002); end
  def test_g_60_data__g1289; assert_in_epsilon(34.96, worksheet.g_60_data__g1289, 0.002); end
  def test_g_60_data__h1289; assert_in_epsilon(2.2800000000000002, worksheet.g_60_data__h1289, 0.002); end
  def test_g_60_data__i1289; assert_in_epsilon(29.64, worksheet.g_60_data__i1289, 0.002); end
  def test_g_60_data__j1289; assert_in_epsilon(3.8, worksheet.g_60_data__j1289, 0.002); end
  def test_g_60_data__k1289; assert_in_epsilon(5.32, worksheet.g_60_data__k1289, 0.002); end
  def test_g_60_data__l1289; assert_in_epsilon(6.84, worksheet.g_60_data__l1289, 0.002); end
  def test_g_60_data__c1290; assert_equal("Vegetable oil", worksheet.g_60_data__c1290); end
  def test_g_60_data__d1290; assert_in_epsilon(24.44113945772795, worksheet.g_60_data__d1290, 0.002); end
  def test_g_60_data__e1290; assert_in_epsilon(25.818323646068908, worksheet.g_60_data__e1290, 0.002); end
  def test_g_60_data__f1290; assert_in_epsilon(21.28, worksheet.g_60_data__f1290, 0.002); end
  def test_g_60_data__g1290; assert_in_epsilon(36.480000000000004, worksheet.g_60_data__g1290, 0.002); end
  def test_g_60_data__h1290; assert_in_epsilon(16.72, worksheet.g_60_data__h1290, 0.002); end
  def test_g_60_data__i1290; assert_in_epsilon(18.240000000000002, worksheet.g_60_data__i1290, 0.002); end
  def test_g_60_data__j1290; assert_in_epsilon(32.68, worksheet.g_60_data__j1290, 0.002); end
  def test_g_60_data__k1290; assert_in_epsilon(36.480000000000004, worksheet.g_60_data__k1290, 0.002); end
  def test_g_60_data__l1290; assert_in_epsilon(63.84, worksheet.g_60_data__l1290, 0.002); end
  def test_g_60_data__c1291; assert_equal("Other ", worksheet.g_60_data__c1291); end
  def test_g_60_data__d1291; assert_in_epsilon(24.019157852724003, worksheet.g_60_data__d1291, 0.002); end
  def test_g_60_data__e1291; assert_in_epsilon(25.372564655596197, worksheet.g_60_data__e1291, 0.002); end
  def test_g_60_data__c1292; assert_equal("Total", worksheet.g_60_data__c1292); end
  def test_g_60_data__d1292; assert_in_epsilon(1334.9183182933816, worksheet.g_60_data__d1292, 0.002); end
  def test_g_60_data__e1292; assert_in_epsilon(1490.3244088530837, worksheet.g_60_data__e1292, 0.002); end
  def test_g_60_data__c1383; assert_equal("Column1", worksheet.g_60_data__c1383); end
  def test_g_60_data__d1383; assert_equal("Column2", worksheet.g_60_data__d1383); end
  def test_g_60_data__e1383; assert_equal("2011", worksheet.g_60_data__e1383); end
  def test_g_60_data__f1383; assert_equal("2050", worksheet.g_60_data__f1383); end
  def test_g_60_data__g1383; assert_equal("Unit", worksheet.g_60_data__g1383); end
  def test_g_60_data__h1383; assert_equal("2011a", worksheet.g_60_data__h1383); end
  def test_g_60_data__i1383; assert_equal("2050a", worksheet.g_60_data__i1383); end
  def test_g_60_data__j1383; assert_equal("Unita", worksheet.g_60_data__j1383); end
  def test_g_60_data__c1384; assert_equal("Beef (pasture fed)", worksheet.g_60_data__c1384); end
  def test_g_60_data__e1384; assert_in_epsilon(16.315615072943743, worksheet.g_60_data__e1384, 0.002); end
  def test_g_60_data__f1384; assert_in_epsilon(27.47893064916842, worksheet.g_60_data__f1384, 0.002); end
  def test_g_60_data__g1384; assert_equal("kg", worksheet.g_60_data__g1384); end
  def test_g_60_data__h1384; assert_in_epsilon(25354.465823354578, worksheet.g_60_data__h1384, 0.002); end
  def test_g_60_data__i1384; assert_in_epsilon(42702.258228807725, worksheet.g_60_data__i1384, 0.002); end
  def test_g_60_data__j1384; assert_equal("kcal", worksheet.g_60_data__j1384); end
  def test_g_60_data__c1385; assert_equal("Beef (fed on grains and residues)", worksheet.g_60_data__c1385); end
  def test_g_60_data__e1385; assert_in_epsilon(245.06634205280244, worksheet.g_60_data__e1385, 0.002); end
  def test_g_60_data__f1385; assert_in_epsilon(363.21411537931147, worksheet.g_60_data__f1385, 0.002); end
  def test_g_60_data__g1385; assert_equal("kg", worksheet.g_60_data__g1385); end
  def test_g_60_data__h1385; assert_in_epsilon(380833.09555005503, worksheet.g_60_data__h1385, 0.002); end
  def test_g_60_data__i1385; assert_in_epsilon(564434.7352994501, worksheet.g_60_data__i1385, 0.002); end
  def test_g_60_data__j1385; assert_equal("kcal", worksheet.g_60_data__j1385); end
  def test_g_60_data__c1386; assert_equal("Sheep and goat meat (pasture fed)", worksheet.g_60_data__c1386); end
  def test_g_60_data__e1386; assert_in_epsilon(14.012207500824232, worksheet.g_60_data__e1386, 0.002); end
  def test_g_60_data__f1386; assert_in_epsilon(23.599507369809235, worksheet.g_60_data__f1386, 0.002); end
  def test_g_60_data__g1386; assert_equal("kg", worksheet.g_60_data__g1386); end
  def test_g_60_data__h1386; assert_in_epsilon(29635.818864243254, worksheet.g_60_data__h1386, 0.002); end
  def test_g_60_data__i1386; assert_in_epsilon(49912.95808714654, worksheet.g_60_data__i1386, 0.002); end
  def test_g_60_data__j1386; assert_equal("kcal", worksheet.g_60_data__j1386); end
  def test_g_60_data__c1387; assert_equal("Sheep and goat meat (fed on grains and residues)", worksheet.g_60_data__c1387); end
  def test_g_60_data__e1387; assert_in_epsilon(180.06292933808749, worksheet.g_60_data__e1387, 0.002); end
  def test_g_60_data__f1387; assert_in_epsilon(266.87221527160756, worksheet.g_60_data__f1387, 0.002); end
  def test_g_60_data__g1387; assert_equal("kg", worksheet.g_60_data__g1387); end
  def test_g_60_data__h1387; assert_in_epsilon(380833.09555005503, worksheet.g_60_data__h1387, 0.002); end
  def test_g_60_data__i1387; assert_in_epsilon(564434.7352994501, worksheet.g_60_data__i1387, 0.002); end
  def test_g_60_data__j1387; assert_equal("kcal", worksheet.g_60_data__j1387); end
  def test_g_60_data__c1388; assert_equal("Poultry ", worksheet.g_60_data__c1388); end
  def test_g_60_data__e1388; assert_in_epsilon(1002.7742384918081, worksheet.g_60_data__e1388, 0.002); end
  def test_g_60_data__f1388; assert_in_epsilon(1461.8527638962548, worksheet.g_60_data__f1388, 0.002); end
  def test_g_60_data__g1388; assert_equal("kg", worksheet.g_60_data__g1388); end
  def test_g_60_data__h1388; assert_in_epsilon(1450011.5488591546, worksheet.g_60_data__h1388, 0.002); end
  def test_g_60_data__i1388; assert_in_epsilon(2113839.0965939844, worksheet.g_60_data__i1388, 0.002); end
  def test_g_60_data__j1388; assert_equal("kcal", worksheet.g_60_data__j1388); end
  def test_g_60_data__c1389; assert_equal("Pork", worksheet.g_60_data__c1389); end
  def test_g_60_data__e1389; assert_in_epsilon(602.5796512843829, worksheet.g_60_data__e1389, 0.002); end
  def test_g_60_data__f1389; assert_in_epsilon(889.7909506011692, worksheet.g_60_data__f1389, 0.002); end
  def test_g_60_data__g1389; assert_equal("kg", worksheet.g_60_data__g1389); end
  def test_g_60_data__h1389; assert_in_epsilon(1704095.2538322348, worksheet.g_60_data__h1389, 0.002); end
  def test_g_60_data__i1389; assert_in_epsilon(2516328.8083001063, worksheet.g_60_data__i1389, 0.002); end
  def test_g_60_data__j1389; assert_equal("kcal", worksheet.g_60_data__j1389); end
  def test_g_60_data__c1390; assert_equal("Eggs", worksheet.g_60_data__c1390); end
  def test_g_60_data__e1390; assert_in_epsilon(537.9854712306786, worksheet.g_60_data__e1390, 0.002); end
  def test_g_60_data__f1390; assert_in_epsilon(797.3510984134691, worksheet.g_60_data__f1390, 0.002); end
  def test_g_60_data__g1390; assert_equal("kg", worksheet.g_60_data__g1390); end
  def test_g_60_data__h1390; assert_in_epsilon(772547.1366872544, worksheet.g_60_data__h1390, 0.002); end
  def test_g_60_data__i1390; assert_in_epsilon(1144996.1773217416, worksheet.g_60_data__i1390, 0.002); end
  def test_g_60_data__j1390; assert_equal("kcal", worksheet.g_60_data__j1390); end
  def test_g_60_data__c1391; assert_equal("Milk products", worksheet.g_60_data__c1391); end
  def test_g_60_data__e1391; assert_in_epsilon(1057.1167776834268, worksheet.g_60_data__e1391, 0.002); end
  def test_g_60_data__f1391; assert_in_epsilon(1606.931630745765, worksheet.g_60_data__f1391, 0.002); end
  def test_g_60_data__g1391; assert_equal("kg", worksheet.g_60_data__g1391); end
  def test_g_60_data__h1391; assert_in_epsilon(594099.6290580858, worksheet.g_60_data__h1391, 0.002); end
  def test_g_60_data__i1391; assert_in_epsilon(903095.57647912, worksheet.g_60_data__i1391, 0.002); end
  def test_g_60_data__j1391; assert_equal("kcal", worksheet.g_60_data__j1391); end
  def test_g_60_data__c1392; assert_equal("Cereals and grains", worksheet.g_60_data__c1392); end
  def test_g_60_data__e1392; assert_in_epsilon(1681.539165674994, worksheet.g_60_data__e1392, 0.002); end
  def test_g_60_data__f1392; assert_in_epsilon(2265.6527705936765, worksheet.g_60_data__f1392, 0.002); end
  def test_g_60_data__g1392; assert_equal("kg", worksheet.g_60_data__g1392); end
  def test_g_60_data__h1392; assert_in_epsilon(16542611.308385689, worksheet.g_60_data__h1392, 0.002); end
  def test_g_60_data__i1392; assert_in_epsilon(43097855.777110085, worksheet.g_60_data__i1392, 0.002); end
  def test_g_60_data__j1392; assert_equal("kcal", worksheet.g_60_data__j1392); end
  def test_g_60_data__c1393; assert_equal("Sugars", worksheet.g_60_data__c1393); end
  def test_g_60_data__e1393; assert_in_epsilon(1551.7446074062498, worksheet.g_60_data__e1393, 0.002); end
  def test_g_60_data__f1393; assert_in_epsilon(2090.7716815578947, worksheet.g_60_data__f1393, 0.002); end
  def test_g_60_data__g1393; assert_equal("kg", worksheet.g_60_data__g1393); end
  def test_g_60_data__h1393; assert_in_epsilon(16542611.308385689, worksheet.g_60_data__h1393, 0.002); end
  def test_g_60_data__i1393; assert_in_epsilon(43097855.777110085, worksheet.g_60_data__i1393, 0.002); end
  def test_g_60_data__j1393; assert_equal("kcal", worksheet.g_60_data__j1393); end
  def test_g_60_data__c1394; assert_equal("Fruit and vegetables", worksheet.g_60_data__c1394); end
  def test_g_60_data__e1394; assert_in_epsilon(15276.355810199946, worksheet.g_60_data__e1394, 0.002); end
  def test_g_60_data__f1394; assert_in_epsilon(20582.8794074273, worksheet.g_60_data__f1394, 0.002); end
  def test_g_60_data__g1394; assert_equal("kg", worksheet.g_60_data__g1394); end
  def test_g_60_data__h1394; assert_in_epsilon(16542611.308385689, worksheet.g_60_data__h1394, 0.002); end
  def test_g_60_data__i1394; assert_in_epsilon(43097855.777110085, worksheet.g_60_data__i1394, 0.002); end
  def test_g_60_data__j1394; assert_equal("kcal", worksheet.g_60_data__j1394); end
  def test_g_60_data__c1395; assert_equal("Pulses ", worksheet.g_60_data__c1395); end
  def test_g_60_data__e1395; assert_in_epsilon(1572.9581026209369, worksheet.g_60_data__e1395, 0.002); end
  def test_g_60_data__f1395; assert_in_epsilon(2119.354075110315, worksheet.g_60_data__f1395, 0.002); end
  def test_g_60_data__g1395; assert_equal("kg", worksheet.g_60_data__g1395); end
  def test_g_60_data__h1395; assert_in_epsilon(16542611.308385689, worksheet.g_60_data__h1395, 0.002); end
  def test_g_60_data__i1395; assert_in_epsilon(43097855.777110085, worksheet.g_60_data__i1395, 0.002); end
  def test_g_60_data__j1395; assert_equal("kcal", worksheet.g_60_data__j1395); end
  def test_g_60_data__c1396; assert_equal("Vegetable oil", worksheet.g_60_data__c1396); end
  def test_g_60_data__e1396; assert_in_epsilon(618.6740598113237, worksheet.g_60_data__e1396, 0.002); end
  def test_g_60_data__f1396; assert_in_epsilon(833.5818911142047, worksheet.g_60_data__f1396, 0.002); end
  def test_g_60_data__g1396; assert_equal("kg", worksheet.g_60_data__g1396); end
  def test_g_60_data__h1396; assert_in_epsilon(16542611.308385689, worksheet.g_60_data__h1396, 0.002); end
  def test_g_60_data__i1396; assert_in_epsilon(43097855.777110085, worksheet.g_60_data__i1396, 0.002); end
  def test_g_60_data__j1396; assert_equal("kcal", worksheet.g_60_data__j1396); end
  def test_g_60_data__c1397; assert_equal("Bioenergy", worksheet.g_60_data__c1397); end
  def test_g_60_data__e1397; assert_in_epsilon(19226.190476190477, worksheet.g_60_data__e1397, 0.002); end
  def test_g_60_data__f1397; assert_in_epsilon(50089.285714285725, worksheet.g_60_data__f1397, 0.002); end
  def test_g_60_data__g1397; assert_equal("kwh", worksheet.g_60_data__g1397); end
  def test_g_60_data__c1296; assert_equal("Column1", worksheet.g_60_data__c1296); end
  def test_g_60_data__d1296; assert_equal("2011", worksheet.g_60_data__d1296); end
  def test_g_60_data__e1296; assert_equal("2050", worksheet.g_60_data__e1296); end
  def test_g_60_data__f1296; assert_equal("Botswana 2011", worksheet.g_60_data__f1296); end
  def test_g_60_data__g1296; assert_equal("Brazil 2011", worksheet.g_60_data__g1296); end
  def test_g_60_data__h1296; assert_equal("China 2011", worksheet.g_60_data__h1296); end
  def test_g_60_data__i1296; assert_equal("India 2011", worksheet.g_60_data__i1296); end
  def test_g_60_data__j1296; assert_equal("Japan 2011", worksheet.g_60_data__j1296); end
  def test_g_60_data__k1296; assert_equal("UK 2011", worksheet.g_60_data__k1296); end
  def test_g_60_data__l1296; assert_equal("USA 2011", worksheet.g_60_data__l1296); end
  def test_g_60_data__c1297; assert_equal("Beef", worksheet.g_60_data__c1297); end
  def test_g_60_data__d1297; assert_in_epsilon(32.35099999999999, worksheet.g_60_data__d1297, 0.002); end
  def test_g_60_data__e1297; assert_in_epsilon(40.92, worksheet.g_60_data__e1297, 0.002); end
  def test_g_60_data__f1297; assert_in_epsilon(28.35, worksheet.g_60_data__f1297, 0.002); end
  def test_g_60_data__g1297; assert_in_epsilon(127.98, worksheet.g_60_data__g1297, 0.002); end
  def test_g_60_data__h1297; assert_in_epsilon(21.87, worksheet.g_60_data__h1297, 0.002); end
  def test_g_60_data__i1297; assert_in_epsilon(4.050000000000001, worksheet.g_60_data__i1297, 0.002); end
  def test_g_60_data__j1297; assert_in_epsilon(23.490000000000002, worksheet.g_60_data__j1297, 0.002); end
  def test_g_60_data__k1297; assert_in_epsilon(44.550000000000004, worksheet.g_60_data__k1297, 0.002); end
  def test_g_60_data__l1297; assert_in_epsilon(82.62, worksheet.g_60_data__l1297, 0.002); end
  def test_g_60_data__c1298; assert_equal("Poultry", worksheet.g_60_data__c1298); end
  def test_g_60_data__d1298; assert_in_epsilon(43.757999999999996, worksheet.g_60_data__d1298, 0.002); end
  def test_g_60_data__e1298; assert_in_epsilon(65.56, worksheet.g_60_data__e1298, 0.002); end
  def test_g_60_data__f1298; assert_in_epsilon(13.770000000000001, worksheet.g_60_data__f1298, 0.002); end
  def test_g_60_data__g1298; assert_in_epsilon(140.13, worksheet.g_60_data__g1298, 0.002); end
  def test_g_60_data__h1298; assert_in_epsilon(49.410000000000004, worksheet.g_60_data__h1298, 0.002); end
  def test_g_60_data__i1298; assert_in_epsilon(4.86, worksheet.g_60_data__i1298, 0.002); end
  def test_g_60_data__j1298; assert_in_epsilon(51.03, worksheet.g_60_data__j1298, 0.002); end
  def test_g_60_data__k1298; assert_in_epsilon(89.10000000000001, worksheet.g_60_data__k1298, 0.002); end
  def test_g_60_data__l1298; assert_in_epsilon(163.62, worksheet.g_60_data__l1298, 0.002); end
  def test_g_60_data__c1299; assert_equal("Pork", worksheet.g_60_data__c1299); end
  def test_g_60_data__d1299; assert_in_epsilon(99.48399999999998, worksheet.g_60_data__d1299, 0.002); end
  def test_g_60_data__e1299; assert_in_epsilon(96.58000000000001, worksheet.g_60_data__e1299, 0.002); end
  def test_g_60_data__f1299; assert_in_epsilon(4.050000000000001, worksheet.g_60_data__f1299, 0.002); end
  def test_g_60_data__g1299; assert_in_epsilon(73.71000000000001, worksheet.g_60_data__g1299, 0.002); end
  def test_g_60_data__h1299; assert_in_epsilon(279.45000000000005, worksheet.g_60_data__h1299, 0.002); end
  def test_g_60_data__i1299; assert_in_epsilon(2.43, worksheet.g_60_data__i1299, 0.002); end
  def test_g_60_data__j1299; assert_in_epsilon(75.33, worksheet.g_60_data__j1299, 0.002); end
  def test_g_60_data__k1299; assert_in_epsilon(195.21, worksheet.g_60_data__k1299, 0.002); end
  def test_g_60_data__l1299; assert_in_epsilon(99.63000000000001, worksheet.g_60_data__l1299, 0.002); end
  def test_g_60_data__c1300; assert_equal("Sheep and goat meat", worksheet.g_60_data__c1300); end
  def test_g_60_data__d1300; assert_in_epsilon(8.975999999999999, worksheet.g_60_data__d1300, 0.002); end
  def test_g_60_data__e1300; assert_in_epsilon(13.200000000000001, worksheet.g_60_data__e1300, 0.002); end
  def test_g_60_data__f1300; assert_in_epsilon(11.34, worksheet.g_60_data__f1300, 0.002); end
  def test_g_60_data__g1300; assert_in_epsilon(2.43, worksheet.g_60_data__g1300, 0.002); end
  def test_g_60_data__h1300; assert_in_epsilon(12.96, worksheet.g_60_data__h1300, 0.002); end
  def test_g_60_data__i1300; assert_in_epsilon(2.43, worksheet.g_60_data__i1300, 0.002); end
  def test_g_60_data__j1300; assert_in_delta(0.81, worksheet.g_60_data__j1300, 0.002); end
  def test_g_60_data__k1300; assert_in_epsilon(25.110000000000003, worksheet.g_60_data__k1300, 0.002); end
  def test_g_60_data__l1300; assert_in_epsilon(2.43, worksheet.g_60_data__l1300, 0.002); end
  def test_g_60_data__c1301; assert_equal("Fish", worksheet.g_60_data__c1301); end
  def test_g_60_data__d1301; assert_in_epsilon(26.964000000000002, worksheet.g_60_data__d1301, 0.002); end
  def test_g_60_data__e1301; assert_in_epsilon(42.65470588235294, worksheet.g_60_data__e1301, 0.002); end
  def test_g_60_data__f1301; assert_in_epsilon(5.67, worksheet.g_60_data__f1301, 0.002); end
  def test_g_60_data__g1301; assert_in_epsilon(12.96, worksheet.g_60_data__g1301, 0.002); end
  def test_g_60_data__h1301; assert_in_epsilon(38.88, worksheet.g_60_data__h1301, 0.002); end
  def test_g_60_data__i1301; assert_in_epsilon(8.91, worksheet.g_60_data__i1301, 0.002); end
  def test_g_60_data__j1301; assert_in_epsilon(111.78, worksheet.g_60_data__j1301, 0.002); end
  def test_g_60_data__k1301; assert_in_epsilon(29.970000000000002, worksheet.g_60_data__k1301, 0.002); end
  def test_g_60_data__l1301; assert_in_epsilon(29.160000000000004, worksheet.g_60_data__l1301, 0.002); end
  def test_g_60_data__c1302; assert_equal("Eggs", worksheet.g_60_data__c1302); end
  def test_g_60_data__d1302; assert_in_epsilon(26.964000000000002, worksheet.g_60_data__d1302, 0.002); end
  def test_g_60_data__e1302; assert_in_epsilon(38.59235294117647, worksheet.g_60_data__e1302, 0.002); end
  def test_g_60_data__f1302; assert_in_epsilon(6.3, worksheet.g_60_data__f1302, 0.002); end
  def test_g_60_data__g1302; assert_in_epsilon(28.8, worksheet.g_60_data__g1302, 0.002); end
  def test_g_60_data__h1302; assert_in_epsilon(67.5, worksheet.g_60_data__h1302, 0.002); end
  def test_g_60_data__i1302; assert_in_epsilon(8.1, worksheet.g_60_data__i1302, 0.002); end
  def test_g_60_data__j1302; assert_in_epsilon(67.5, worksheet.g_60_data__j1302, 0.002); end
  def test_g_60_data__k1302; assert_in_epsilon(36.9, worksheet.g_60_data__k1302, 0.002); end
  def test_g_60_data__l1302; assert_in_epsilon(47.7, worksheet.g_60_data__l1302, 0.002); end
  def test_g_60_data__c1303; assert_equal("Milk products", worksheet.g_60_data__c1303); end
  def test_g_60_data__d1303; assert_in_epsilon(100.15199999999999, worksheet.g_60_data__d1303, 0.002); end
  def test_g_60_data__e1303; assert_in_epsilon(134.05764705882353, worksheet.g_60_data__e1303, 0.002); end
  def test_g_60_data__f1303; assert_in_epsilon(133.66, worksheet.g_60_data__f1303, 0.002); end
  def test_g_60_data__g1303; assert_in_epsilon(208.28, worksheet.g_60_data__g1303, 0.002); end
  def test_g_60_data__h1303; assert_in_epsilon(46.739999999999995, worksheet.g_60_data__h1303, 0.002); end
  def test_g_60_data__i1303; assert_in_epsilon(101.67999999999999, worksheet.g_60_data__i1303, 0.002); end
  def test_g_60_data__j1303; assert_in_epsilon(91.83999999999999, worksheet.g_60_data__j1303, 0.002); end
  def test_g_60_data__k1303; assert_in_epsilon(281.26, worksheet.g_60_data__k1303, 0.002); end
  def test_g_60_data__l1303; assert_in_epsilon(305.85999999999996, worksheet.g_60_data__l1303, 0.002); end
  def test_g_60_data__c1304; assert_equal("Other animal products (e.g. animal fats, offals etc.)", worksheet.g_60_data__c1304); end
  def test_g_60_data__d1304; assert_in_epsilon(69.43099999999998, worksheet.g_60_data__d1304, 0.002); end
  def test_g_60_data__e1304; assert_in_epsilon(82.56352941176472, worksheet.g_60_data__e1304, 0.002); end
  def test_g_60_data__f1304; assert_in_epsilon(68.85000000000001, worksheet.g_60_data__f1304, 0.002); end
  def test_g_60_data__g1304; assert_in_epsilon(59.940000000000005, worksheet.g_60_data__g1304, 0.002); end
  def test_g_60_data__h1304; assert_in_epsilon(44.550000000000004, worksheet.g_60_data__h1304, 0.002); end
  def test_g_60_data__i1304; assert_in_epsilon(53.46, worksheet.g_60_data__i1304, 0.002); end
  def test_g_60_data__j1304; assert_in_epsilon(32.400000000000006, worksheet.g_60_data__j1304, 0.002); end
  def test_g_60_data__k1304; assert_in_epsilon(106.92, worksheet.g_60_data__k1304, 0.002); end
  def test_g_60_data__l1304; assert_in_epsilon(84.24000000000001, worksheet.g_60_data__l1304, 0.002); end
  def test_g_60_data__c1305; assert_equal("Cereals and grains", worksheet.g_60_data__c1305); end
  def test_g_60_data__d1305; assert_in_epsilon(991.9, worksheet.g_60_data__d1305, 0.002); end
  def test_g_60_data__e1305; assert_in_epsilon(991.9, worksheet.g_60_data__e1305, 0.002); end
  def test_g_60_data__f1305; assert_in_epsilon(761.52, worksheet.g_60_data__f1305, 0.002); end
  def test_g_60_data__g1305; assert_in_epsilon(725.8, worksheet.g_60_data__g1305, 0.002); end
  def test_g_60_data__h1305; assert_in_epsilon(1094.4, worksheet.g_60_data__h1305, 0.002); end
  def test_g_60_data__i1305; assert_in_epsilon(1059.44, worksheet.g_60_data__i1305, 0.002); end
  def test_g_60_data__j1305; assert_in_epsilon(798.76, worksheet.g_60_data__j1305, 0.002); end
  def test_g_60_data__k1305; assert_in_epsilon(684.0, worksheet.g_60_data__k1305, 0.002); end
  def test_g_60_data__l1305; assert_in_epsilon(606.48, worksheet.g_60_data__l1305, 0.002); end
  def test_g_60_data__c1306; assert_equal("Sugars", worksheet.g_60_data__c1306); end
  def test_g_60_data__d1306; assert_in_epsilon(174.4, worksheet.g_60_data__d1306, 0.002); end
  def test_g_60_data__e1306; assert_in_epsilon(184.22691182880675, worksheet.g_60_data__e1306, 0.002); end
  def test_g_60_data__f1306; assert_in_epsilon(217.36, worksheet.g_60_data__f1306, 0.002); end
  def test_g_60_data__g1306; assert_in_epsilon(314.64, worksheet.g_60_data__g1306, 0.002); end
  def test_g_60_data__h1306; assert_in_epsilon(53.96, worksheet.g_60_data__h1306, 0.002); end
  def test_g_60_data__i1306; assert_in_epsilon(162.64000000000001, worksheet.g_60_data__i1306, 0.002); end
  def test_g_60_data__j1306; assert_in_epsilon(202.16, worksheet.g_60_data__j1306, 0.002); end
  def test_g_60_data__k1306; assert_in_epsilon(295.64, worksheet.g_60_data__k1306, 0.002); end
  def test_g_60_data__l1306; assert_in_epsilon(432.44, worksheet.g_60_data__l1306, 0.002); end
  def test_g_60_data__c1307; assert_equal("Fruit, vegetables (including roots and tubers)", worksheet.g_60_data__c1307); end
  def test_g_60_data__d1307; assert_in_epsilon(261.6, worksheet.g_60_data__d1307, 0.002); end
  def test_g_60_data__e1307; assert_in_epsilon(276.34036774321015, worksheet.g_60_data__e1307, 0.002); end
  def test_g_60_data__f1307; assert_in_epsilon(145.92000000000002, worksheet.g_60_data__f1307, 0.002); end
  def test_g_60_data__g1307; assert_in_epsilon(248.52, worksheet.g_60_data__g1307, 0.002); end
  def test_g_60_data__h1307; assert_in_epsilon(354.92, worksheet.g_60_data__h1307, 0.002); end
  def test_g_60_data__i1307; assert_in_epsilon(139.84, worksheet.g_60_data__i1307, 0.002); end
  def test_g_60_data__j1307; assert_in_epsilon(138.32, worksheet.g_60_data__j1307, 0.002); end
  def test_g_60_data__k1307; assert_in_epsilon(287.28000000000003, worksheet.g_60_data__k1307, 0.002); end
  def test_g_60_data__l1307; assert_in_epsilon(212.04, worksheet.g_60_data__l1307, 0.002); end
  def test_g_60_data__c1308; assert_equal("Pulses ", worksheet.g_60_data__c1308); end
  def test_g_60_data__d1308; assert_in_epsilon(50.13999999999999, worksheet.g_60_data__d1308, 0.002); end
  def test_g_60_data__e1308; assert_in_epsilon(52.96523715078194, worksheet.g_60_data__e1308, 0.002); end
  def test_g_60_data__f1308; assert_in_epsilon(32.68, worksheet.g_60_data__f1308, 0.002); end
  def test_g_60_data__g1308; assert_in_epsilon(117.8, worksheet.g_60_data__g1308, 0.002); end
  def test_g_60_data__h1308; assert_in_epsilon(7.6, worksheet.g_60_data__h1308, 0.002); end
  def test_g_60_data__i1308; assert_in_epsilon(102.6, worksheet.g_60_data__i1308, 0.002); end
  def test_g_60_data__j1308; assert_in_epsilon(12.16, worksheet.g_60_data__j1308, 0.002); end
  def test_g_60_data__k1308; assert_in_epsilon(16.72, worksheet.g_60_data__k1308, 0.002); end
  def test_g_60_data__l1308; assert_in_epsilon(22.8, worksheet.g_60_data__l1308, 0.002); end
  def test_g_60_data__c1309; assert_equal("Vegetable oil", worksheet.g_60_data__c1309); end
  def test_g_60_data__d1309; assert_in_epsilon(213.64000000000001, worksheet.g_60_data__d1309, 0.002); end
  def test_g_60_data__e1309; assert_in_epsilon(225.67796699028833, worksheet.g_60_data__e1309, 0.002); end
  def test_g_60_data__f1309; assert_in_epsilon(188.48, worksheet.g_60_data__f1309, 0.002); end
  def test_g_60_data__g1309; assert_in_epsilon(323.0, worksheet.g_60_data__g1309, 0.002); end
  def test_g_60_data__h1309; assert_in_epsilon(148.2, worksheet.g_60_data__h1309, 0.002); end
  def test_g_60_data__i1309; assert_in_epsilon(162.64000000000001, worksheet.g_60_data__i1309, 0.002); end
  def test_g_60_data__j1309; assert_in_epsilon(277.4, worksheet.g_60_data__j1309, 0.002); end
  def test_g_60_data__k1309; assert_in_epsilon(335.16, worksheet.g_60_data__k1309, 0.002); end
  def test_g_60_data__l1309; assert_in_epsilon(532.76, worksheet.g_60_data__l1309, 0.002); end
  def test_g_60_data__c1310; assert_equal("Other ", worksheet.g_60_data__c1310); end
  def test_g_60_data__d1310; assert_in_epsilon(80.24000000000001, worksheet.g_60_data__d1310, 0.002); end
  def test_g_60_data__e1310; assert_in_epsilon(84.76128099279505, worksheet.g_60_data__e1310, 0.002); end
  def test_g_60_data__f1310; assert_in_epsilon(118.64999999999986, worksheet.g_60_data__f1310, 0.002); end
  def test_g_60_data__g1310; assert_in_epsilon(114.12999999999965, worksheet.g_60_data__g1310, 0.002); end
  def test_g_60_data__h1310; assert_in_epsilon(115.80000000000064, worksheet.g_60_data__h1310, 0.002); end
  def test_g_60_data__i1310; assert_in_epsilon(55.75999999999976, worksheet.g_60_data__i1310, 0.002); end
  def test_g_60_data__j1310; assert_in_epsilon(183.46000000000004, worksheet.g_60_data__j1310, 0.002); end
  def test_g_60_data__k1310; assert_in_epsilon(166.82000000000016, worksheet.g_60_data__k1310, 0.002); end
  def test_g_60_data__l1310; assert_in_epsilon(143.85999999999922, worksheet.g_60_data__l1310, 0.002); end
  def test_g_60_data__c1311; assert_equal("Total", worksheet.g_60_data__c1311); end
  def test_g_60_data__d1311; assert_in_epsilon(2180.0, worksheet.g_60_data__d1311, 0.002); end
  def test_g_60_data__e1311; assert_in_epsilon(2330.0, worksheet.g_60_data__e1311, 0.002); end
  def test_g_60_data__f1311; assert_in_epsilon(1736.6, worksheet.g_60_data__f1311, 0.002); end
  def test_g_60_data__g1311; assert_in_epsilon(2498.12, worksheet.g_60_data__g1311, 0.002); end
  def test_g_60_data__h1311; assert_in_epsilon(2336.2400000000002, worksheet.g_60_data__h1311, 0.002); end
  def test_g_60_data__i1311; assert_in_epsilon(1868.84, worksheet.g_60_data__i1311, 0.002); end
  def test_g_60_data__j1311; assert_in_epsilon(2066.44, worksheet.g_60_data__j1311, 0.002); end
  def test_g_60_data__k1311; assert_in_epsilon(2594.64, worksheet.g_60_data__k1311, 0.002); end
  def test_g_60_data__l1311; assert_in_epsilon(2765.64, worksheet.g_60_data__l1311, 0.002); end
  def test_user_inputs_h6; assert_equal("Distributed effort", worksheet.user_inputs_h6); end
  def test_user_inputs_i6; assert_equal("Consumer reluctance", worksheet.user_inputs_i6); end
  def test_user_inputs_j6; assert_equal("Low action on forests", worksheet.user_inputs_j6); end
  def test_user_inputs_k6; assert_equal("Consumer activism", worksheet.user_inputs_k6); end
  def test_user_inputs_l6; assert_equal("IEA \"6DS\" (approx)", worksheet.user_inputs_l6); end
  def test_user_inputs_m6; assert_equal("IEA \"4DS\" (approx)", worksheet.user_inputs_m6); end
  def test_user_inputs_n6; assert_equal("IEA \"2DS\" (approx)", worksheet.user_inputs_n6); end
  def test_user_inputs_h7; assert_in_epsilon(2.0, worksheet.user_inputs_h7, 0.002); end
  def test_user_inputs_i7; assert_in_epsilon(2.0, worksheet.user_inputs_i7, 0.002); end
  def test_user_inputs_j7; assert_in_epsilon(2.0, worksheet.user_inputs_j7, 0.002); end
  def test_user_inputs_k7; assert_in_epsilon(2.0, worksheet.user_inputs_k7, 0.002); end
  def test_user_inputs_l7; assert_in_epsilon(2.0, worksheet.user_inputs_l7, 0.002); end
  def test_user_inputs_m7; assert_in_epsilon(2.0, worksheet.user_inputs_m7, 0.002); end
  def test_user_inputs_n7; assert_in_epsilon(2.0, worksheet.user_inputs_n7, 0.002); end
  def test_user_inputs_h8; assert_in_epsilon(2.0, worksheet.user_inputs_h8, 0.002); end
  def test_user_inputs_i8; assert_in_epsilon(2.0, worksheet.user_inputs_i8, 0.002); end
  def test_user_inputs_j8; assert_in_epsilon(2.0, worksheet.user_inputs_j8, 0.002); end
  def test_user_inputs_k8; assert_in_epsilon(2.0, worksheet.user_inputs_k8, 0.002); end
  def test_user_inputs_l8; assert_in_epsilon(2.0, worksheet.user_inputs_l8, 0.002); end
  def test_user_inputs_m8; assert_in_epsilon(2.0, worksheet.user_inputs_m8, 0.002); end
  def test_user_inputs_n8; assert_in_epsilon(2.0, worksheet.user_inputs_n8, 0.002); end
  def test_user_inputs_h9; assert_in_epsilon(2.7, worksheet.user_inputs_h9, 0.002); end
  def test_user_inputs_i9; assert_in_epsilon(2.7, worksheet.user_inputs_i9, 0.002); end
  def test_user_inputs_j9; assert_in_epsilon(2.7, worksheet.user_inputs_j9, 0.002); end
  def test_user_inputs_k9; assert_in_epsilon(2.7, worksheet.user_inputs_k9, 0.002); end
  def test_user_inputs_l9; assert_in_epsilon(2.7, worksheet.user_inputs_l9, 0.002); end
  def test_user_inputs_m9; assert_in_epsilon(2.7, worksheet.user_inputs_m9, 0.002); end
  def test_user_inputs_n9; assert_in_epsilon(2.7, worksheet.user_inputs_n9, 0.002); end
  def test_user_inputs_h10; assert_in_epsilon(1.5, worksheet.user_inputs_h10, 0.002); end
  def test_user_inputs_i10; assert_in_epsilon(1.5, worksheet.user_inputs_i10, 0.002); end
  def test_user_inputs_j10; assert_in_epsilon(1.5, worksheet.user_inputs_j10, 0.002); end
  def test_user_inputs_k10; assert_in_epsilon(1.5, worksheet.user_inputs_k10, 0.002); end
  def test_user_inputs_l10; assert_in_epsilon(1.5, worksheet.user_inputs_l10, 0.002); end
  def test_user_inputs_m10; assert_in_epsilon(1.5, worksheet.user_inputs_m10, 0.002); end
  def test_user_inputs_n10; assert_in_epsilon(1.5, worksheet.user_inputs_n10, 0.002); end
  def test_user_inputs_h11; assert_in_epsilon(2.4, worksheet.user_inputs_h11, 0.002); end
  def test_user_inputs_i11; assert_in_epsilon(2.4, worksheet.user_inputs_i11, 0.002); end
  def test_user_inputs_j11; assert_in_epsilon(2.4, worksheet.user_inputs_j11, 0.002); end
  def test_user_inputs_k11; assert_in_epsilon(3.0, worksheet.user_inputs_k11, 0.002); end
  def test_user_inputs_l11; assert_in_epsilon(2.4, worksheet.user_inputs_l11, 0.002); end
  def test_user_inputs_m11; assert_in_epsilon(2.4, worksheet.user_inputs_m11, 0.002); end
  def test_user_inputs_n11; assert_in_epsilon(3.5, worksheet.user_inputs_n11, 0.002); end
  def test_user_inputs_h12; assert_in_epsilon(1.4, worksheet.user_inputs_h12, 0.002); end
  def test_user_inputs_i12; assert_in_epsilon(1.4, worksheet.user_inputs_i12, 0.002); end
  def test_user_inputs_j12; assert_in_epsilon(1.4, worksheet.user_inputs_j12, 0.002); end
  def test_user_inputs_k12; assert_in_epsilon(2.0, worksheet.user_inputs_k12, 0.002); end
  def test_user_inputs_l12; assert_in_epsilon(1.4, worksheet.user_inputs_l12, 0.002); end
  def test_user_inputs_m12; assert_in_epsilon(1.4, worksheet.user_inputs_m12, 0.002); end
  def test_user_inputs_n12; assert_in_epsilon(1.7, worksheet.user_inputs_n12, 0.002); end
  def test_user_inputs_h13; assert_in_epsilon(2.0, worksheet.user_inputs_h13, 0.002); end
  def test_user_inputs_i13; assert_in_epsilon(2.0, worksheet.user_inputs_i13, 0.002); end
  def test_user_inputs_j13; assert_in_epsilon(2.0, worksheet.user_inputs_j13, 0.002); end
  def test_user_inputs_k13; assert_in_epsilon(2.4, worksheet.user_inputs_k13, 0.002); end
  def test_user_inputs_l13; assert_in_epsilon(2.0, worksheet.user_inputs_l13, 0.002); end
  def test_user_inputs_m13; assert_in_epsilon(2.0, worksheet.user_inputs_m13, 0.002); end
  def test_user_inputs_n13; assert_in_epsilon(1.6, worksheet.user_inputs_n13, 0.002); end
  def test_user_inputs_h14; assert_in_epsilon(2.8, worksheet.user_inputs_h14, 0.002); end
  def test_user_inputs_i14; assert_in_epsilon(2.8, worksheet.user_inputs_i14, 0.002); end
  def test_user_inputs_j14; assert_in_epsilon(3.0, worksheet.user_inputs_j14, 0.002); end
  def test_user_inputs_k14; assert_in_epsilon(3.0, worksheet.user_inputs_k14, 0.002); end
  def test_user_inputs_l14; assert_in_epsilon(1.4, worksheet.user_inputs_l14, 0.002); end
  def test_user_inputs_m14; assert_in_epsilon(1.8, worksheet.user_inputs_m14, 0.002); end
  def test_user_inputs_n14; assert_in_epsilon(2.8, worksheet.user_inputs_n14, 0.002); end
  def test_user_inputs_h15; assert_in_epsilon(2.8, worksheet.user_inputs_h15, 0.002); end
  def test_user_inputs_i15; assert_in_epsilon(2.0, worksheet.user_inputs_i15, 0.002); end
  def test_user_inputs_j15; assert_in_epsilon(3.0, worksheet.user_inputs_j15, 0.002); end
  def test_user_inputs_k15; assert_in_epsilon(3.0, worksheet.user_inputs_k15, 0.002); end
  def test_user_inputs_l15; assert_in_delta(1.0, worksheet.user_inputs_l15, 0.002); end
  def test_user_inputs_m15; assert_in_epsilon(1.1, worksheet.user_inputs_m15, 0.002); end
  def test_user_inputs_n15; assert_in_epsilon(1.8, worksheet.user_inputs_n15, 0.002); end
  def test_user_inputs_h16; assert_in_epsilon(3.0, worksheet.user_inputs_h16, 0.002); end
  def test_user_inputs_i16; assert_in_epsilon(3.0, worksheet.user_inputs_i16, 0.002); end
  def test_user_inputs_j16; assert_in_epsilon(3.0, worksheet.user_inputs_j16, 0.002); end
  def test_user_inputs_k16; assert_in_epsilon(3.0, worksheet.user_inputs_k16, 0.002); end
  def test_user_inputs_l16; assert_in_epsilon(3.0, worksheet.user_inputs_l16, 0.002); end
  def test_user_inputs_m16; assert_in_epsilon(3.0, worksheet.user_inputs_m16, 0.002); end
  def test_user_inputs_n16; assert_in_epsilon(3.0, worksheet.user_inputs_n16, 0.002); end
  def test_user_inputs_h17; assert_in_epsilon(1.1, worksheet.user_inputs_h17, 0.002); end
  def test_user_inputs_i17; assert_in_epsilon(1.1, worksheet.user_inputs_i17, 0.002); end
  def test_user_inputs_j17; assert_in_epsilon(1.1, worksheet.user_inputs_j17, 0.002); end
  def test_user_inputs_k17; assert_in_epsilon(1.1, worksheet.user_inputs_k17, 0.002); end
  def test_user_inputs_l17; assert_in_epsilon(1.1, worksheet.user_inputs_l17, 0.002); end
  def test_user_inputs_m17; assert_in_epsilon(1.1, worksheet.user_inputs_m17, 0.002); end
  def test_user_inputs_n17; assert_in_epsilon(1.1, worksheet.user_inputs_n17, 0.002); end
  def test_user_inputs_h18; assert_in_epsilon(1.4, worksheet.user_inputs_h18, 0.002); end
  def test_user_inputs_i18; assert_in_epsilon(1.4, worksheet.user_inputs_i18, 0.002); end
  def test_user_inputs_j18; assert_in_epsilon(1.4, worksheet.user_inputs_j18, 0.002); end
  def test_user_inputs_k18; assert_in_epsilon(1.4, worksheet.user_inputs_k18, 0.002); end
  def test_user_inputs_l18; assert_in_epsilon(1.4, worksheet.user_inputs_l18, 0.002); end
  def test_user_inputs_m18; assert_in_epsilon(1.4, worksheet.user_inputs_m18, 0.002); end
  def test_user_inputs_n18; assert_in_epsilon(1.4, worksheet.user_inputs_n18, 0.002); end
  def test_user_inputs_h19; assert_in_epsilon(2.8, worksheet.user_inputs_h19, 0.002); end
  def test_user_inputs_i19; assert_in_epsilon(2.0, worksheet.user_inputs_i19, 0.002); end
  def test_user_inputs_j19; assert_in_epsilon(3.0, worksheet.user_inputs_j19, 0.002); end
  def test_user_inputs_k19; assert_in_epsilon(3.0, worksheet.user_inputs_k19, 0.002); end
  def test_user_inputs_l19; assert_in_delta(1.0, worksheet.user_inputs_l19, 0.002); end
  def test_user_inputs_m19; assert_in_epsilon(1.2, worksheet.user_inputs_m19, 0.002); end
  def test_user_inputs_n19; assert_in_epsilon(1.4, worksheet.user_inputs_n19, 0.002); end
  def test_user_inputs_h20; assert_in_epsilon(2.8, worksheet.user_inputs_h20, 0.002); end
  def test_user_inputs_i20; assert_in_epsilon(2.0, worksheet.user_inputs_i20, 0.002); end
  def test_user_inputs_j20; assert_in_epsilon(3.0, worksheet.user_inputs_j20, 0.002); end
  def test_user_inputs_k20; assert_in_epsilon(3.0, worksheet.user_inputs_k20, 0.002); end
  def test_user_inputs_l20; assert_in_delta(1.0, worksheet.user_inputs_l20, 0.002); end
  def test_user_inputs_m20; assert_in_epsilon(1.3, worksheet.user_inputs_m20, 0.002); end
  def test_user_inputs_n20; assert_in_epsilon(3.0, worksheet.user_inputs_n20, 0.002); end
  def test_user_inputs_h21; assert_in_epsilon(2.8, worksheet.user_inputs_h21, 0.002); end
  def test_user_inputs_i21; assert_in_epsilon(3.0, worksheet.user_inputs_i21, 0.002); end
  def test_user_inputs_j21; assert_in_epsilon(3.0, worksheet.user_inputs_j21, 0.002); end
  def test_user_inputs_k21; assert_in_epsilon(3.0, worksheet.user_inputs_k21, 0.002); end
  def test_user_inputs_l21; assert_in_delta(1.0, worksheet.user_inputs_l21, 0.002); end
  def test_user_inputs_m21; assert_in_epsilon(1.3, worksheet.user_inputs_m21, 0.002); end
  def test_user_inputs_n21; assert_in_epsilon(3.0, worksheet.user_inputs_n21, 0.002); end
  def test_user_inputs_h22; assert_in_delta(1.0, worksheet.user_inputs_h22, 0.002); end
  def test_user_inputs_i22; assert_in_delta(1.0, worksheet.user_inputs_i22, 0.002); end
  def test_user_inputs_j22; assert_in_delta(1.0, worksheet.user_inputs_j22, 0.002); end
  def test_user_inputs_k22; assert_in_epsilon(2.0, worksheet.user_inputs_k22, 0.002); end
  def test_user_inputs_l22; assert_in_delta(1.0, worksheet.user_inputs_l22, 0.002); end
  def test_user_inputs_m22; assert_in_delta(1.0, worksheet.user_inputs_m22, 0.002); end
  def test_user_inputs_n22; assert_in_delta(1.0, worksheet.user_inputs_n22, 0.002); end
  def test_user_inputs_h23; assert_in_epsilon(2.8, worksheet.user_inputs_h23, 0.002); end
  def test_user_inputs_i23; assert_in_epsilon(2.0, worksheet.user_inputs_i23, 0.002); end
  def test_user_inputs_j23; assert_in_epsilon(3.0, worksheet.user_inputs_j23, 0.002); end
  def test_user_inputs_k23; assert_in_epsilon(3.0, worksheet.user_inputs_k23, 0.002); end
  def test_user_inputs_l23; assert_in_epsilon(1.3, worksheet.user_inputs_l23, 0.002); end
  def test_user_inputs_m23; assert_in_epsilon(1.3, worksheet.user_inputs_m23, 0.002); end
  def test_user_inputs_n23; assert_in_epsilon(1.3, worksheet.user_inputs_n23, 0.002); end
  def test_user_inputs_h24; assert_in_epsilon(2.8, worksheet.user_inputs_h24, 0.002); end
  def test_user_inputs_i24; assert_in_epsilon(3.0, worksheet.user_inputs_i24, 0.002); end
  def test_user_inputs_j24; assert_in_epsilon(3.0, worksheet.user_inputs_j24, 0.002); end
  def test_user_inputs_k24; assert_in_epsilon(2.0, worksheet.user_inputs_k24, 0.002); end
  def test_user_inputs_l24; assert_in_epsilon(2.0, worksheet.user_inputs_l24, 0.002); end
  def test_user_inputs_m24; assert_in_epsilon(2.7, worksheet.user_inputs_m24, 0.002); end
  def test_user_inputs_n24; assert_in_epsilon(3.5, worksheet.user_inputs_n24, 0.002); end
  def test_user_inputs_h25; assert_in_epsilon(2.8, worksheet.user_inputs_h25, 0.002); end
  def test_user_inputs_i25; assert_in_epsilon(3.0, worksheet.user_inputs_i25, 0.002); end
  def test_user_inputs_j25; assert_in_epsilon(3.0, worksheet.user_inputs_j25, 0.002); end
  def test_user_inputs_k25; assert_in_epsilon(2.0, worksheet.user_inputs_k25, 0.002); end
  def test_user_inputs_l25; assert_in_delta(1.0, worksheet.user_inputs_l25, 0.002); end
  def test_user_inputs_m25; assert_in_delta(1.0, worksheet.user_inputs_m25, 0.002); end
  def test_user_inputs_n25; assert_in_epsilon(3.5, worksheet.user_inputs_n25, 0.002); end
  def test_user_inputs_h26; assert_in_epsilon(2.8, worksheet.user_inputs_h26, 0.002); end
  def test_user_inputs_i26; assert_in_epsilon(3.0, worksheet.user_inputs_i26, 0.002); end
  def test_user_inputs_j26; assert_in_epsilon(3.0, worksheet.user_inputs_j26, 0.002); end
  def test_user_inputs_k26; assert_in_epsilon(2.0, worksheet.user_inputs_k26, 0.002); end
  def test_user_inputs_l26; assert_in_delta(1.0, worksheet.user_inputs_l26, 0.002); end
  def test_user_inputs_m26; assert_in_epsilon(1.7, worksheet.user_inputs_m26, 0.002); end
  def test_user_inputs_n26; assert_in_epsilon(2.3, worksheet.user_inputs_n26, 0.002); end
  def test_user_inputs_h27; assert_in_epsilon(2.8, worksheet.user_inputs_h27, 0.002); end
  def test_user_inputs_i27; assert_in_epsilon(3.0, worksheet.user_inputs_i27, 0.002); end
  def test_user_inputs_j27; assert_in_epsilon(3.0, worksheet.user_inputs_j27, 0.002); end
  def test_user_inputs_k27; assert_in_epsilon(2.0, worksheet.user_inputs_k27, 0.002); end
  def test_user_inputs_l27; assert_in_epsilon(1.7, worksheet.user_inputs_l27, 0.002); end
  def test_user_inputs_m27; assert_in_epsilon(1.7, worksheet.user_inputs_m27, 0.002); end
  def test_user_inputs_n27; assert_in_epsilon(2.0, worksheet.user_inputs_n27, 0.002); end
  def test_user_inputs_h28; assert_in_epsilon(2.8, worksheet.user_inputs_h28, 0.002); end
  def test_user_inputs_i28; assert_in_epsilon(3.0, worksheet.user_inputs_i28, 0.002); end
  def test_user_inputs_j28; assert_in_epsilon(3.0, worksheet.user_inputs_j28, 0.002); end
  def test_user_inputs_k28; assert_in_epsilon(2.0, worksheet.user_inputs_k28, 0.002); end
  def test_user_inputs_l28; assert_in_delta(1.0, worksheet.user_inputs_l28, 0.002); end
  def test_user_inputs_m28; assert_in_epsilon(1.2, worksheet.user_inputs_m28, 0.002); end
  def test_user_inputs_n28; assert_in_epsilon(1.9, worksheet.user_inputs_n28, 0.002); end
  def test_user_inputs_h29; assert_in_epsilon(2.8, worksheet.user_inputs_h29, 0.002); end
  def test_user_inputs_i29; assert_in_epsilon(3.0, worksheet.user_inputs_i29, 0.002); end
  def test_user_inputs_j29; assert_in_epsilon(3.0, worksheet.user_inputs_j29, 0.002); end
  def test_user_inputs_k29; assert_in_epsilon(3.0, worksheet.user_inputs_k29, 0.002); end
  def test_user_inputs_l29; assert_in_epsilon(2.3, worksheet.user_inputs_l29, 0.002); end
  def test_user_inputs_m29; assert_in_epsilon(2.5, worksheet.user_inputs_m29, 0.002); end
  def test_user_inputs_n29; assert_in_epsilon(3.8, worksheet.user_inputs_n29, 0.002); end
  def test_user_inputs_h30; assert_in_epsilon(2.8, worksheet.user_inputs_h30, 0.002); end
  def test_user_inputs_i30; assert_in_epsilon(3.0, worksheet.user_inputs_i30, 0.002); end
  def test_user_inputs_j30; assert_in_epsilon(3.0, worksheet.user_inputs_j30, 0.002); end
  def test_user_inputs_k30; assert_in_epsilon(3.0, worksheet.user_inputs_k30, 0.002); end
  def test_user_inputs_l30; assert_in_epsilon(3.0, worksheet.user_inputs_l30, 0.002); end
  def test_user_inputs_m30; assert_in_epsilon(3.0, worksheet.user_inputs_m30, 0.002); end
  def test_user_inputs_n30; assert_in_epsilon(3.0, worksheet.user_inputs_n30, 0.002); end
  def test_user_inputs_h31; assert_in_epsilon(2.8, worksheet.user_inputs_h31, 0.002); end
  def test_user_inputs_i31; assert_in_epsilon(3.0, worksheet.user_inputs_i31, 0.002); end
  def test_user_inputs_j31; assert_in_epsilon(2.0, worksheet.user_inputs_j31, 0.002); end
  def test_user_inputs_k31; assert_in_epsilon(3.0, worksheet.user_inputs_k31, 0.002); end
  def test_user_inputs_l31; assert_in_delta(1.0, worksheet.user_inputs_l31, 0.002); end
  def test_user_inputs_m31; assert_in_epsilon(1.4, worksheet.user_inputs_m31, 0.002); end
  def test_user_inputs_n31; assert_in_epsilon(3.0, worksheet.user_inputs_n31, 0.002); end
  def test_user_inputs_h32; assert_in_epsilon(2.8, worksheet.user_inputs_h32, 0.002); end
  def test_user_inputs_i32; assert_in_epsilon(3.0, worksheet.user_inputs_i32, 0.002); end
  def test_user_inputs_j32; assert_in_epsilon(2.8, worksheet.user_inputs_j32, 0.002); end
  def test_user_inputs_k32; assert_in_epsilon(2.0, worksheet.user_inputs_k32, 0.002); end
  def test_user_inputs_l32; assert_in_epsilon(1.7, worksheet.user_inputs_l32, 0.002); end
  def test_user_inputs_m32; assert_in_epsilon(2.0, worksheet.user_inputs_m32, 0.002); end
  def test_user_inputs_n32; assert_in_epsilon(3.0, worksheet.user_inputs_n32, 0.002); end
  def test_user_inputs_h33; assert_in_epsilon(2.8, worksheet.user_inputs_h33, 0.002); end
  def test_user_inputs_i33; assert_in_epsilon(2.7, worksheet.user_inputs_i33, 0.002); end
  def test_user_inputs_j33; assert_in_epsilon(3.0, worksheet.user_inputs_j33, 0.002); end
  def test_user_inputs_k33; assert_in_epsilon(2.0, worksheet.user_inputs_k33, 0.002); end
  def test_user_inputs_l33; assert_in_epsilon(1.5, worksheet.user_inputs_l33, 0.002); end
  def test_user_inputs_m33; assert_in_epsilon(1.8, worksheet.user_inputs_m33, 0.002); end
  def test_user_inputs_n33; assert_in_epsilon(2.1, worksheet.user_inputs_n33, 0.002); end
  def test_user_inputs_h34; assert_in_epsilon(2.8, worksheet.user_inputs_h34, 0.002); end
  def test_user_inputs_i34; assert_in_epsilon(2.7, worksheet.user_inputs_i34, 0.002); end
  def test_user_inputs_j34; assert_in_epsilon(3.0, worksheet.user_inputs_j34, 0.002); end
  def test_user_inputs_k34; assert_in_epsilon(2.0, worksheet.user_inputs_k34, 0.002); end
  def test_user_inputs_l34; assert_in_epsilon(1.9, worksheet.user_inputs_l34, 0.002); end
  def test_user_inputs_m34; assert_in_epsilon(2.1, worksheet.user_inputs_m34, 0.002); end
  def test_user_inputs_n34; assert_in_epsilon(2.3, worksheet.user_inputs_n34, 0.002); end
  def test_user_inputs_h35; assert_in_epsilon(2.8, worksheet.user_inputs_h35, 0.002); end
  def test_user_inputs_i35; assert_in_epsilon(2.7, worksheet.user_inputs_i35, 0.002); end
  def test_user_inputs_j35; assert_in_epsilon(3.0, worksheet.user_inputs_j35, 0.002); end
  def test_user_inputs_k35; assert_in_epsilon(2.0, worksheet.user_inputs_k35, 0.002); end
  def test_user_inputs_l35; assert_in_epsilon(1.3, worksheet.user_inputs_l35, 0.002); end
  def test_user_inputs_m35; assert_in_epsilon(1.6, worksheet.user_inputs_m35, 0.002); end
  def test_user_inputs_n35; assert_in_epsilon(2.4, worksheet.user_inputs_n35, 0.002); end
  def test_user_inputs_h36; assert_in_epsilon(2.8, worksheet.user_inputs_h36, 0.002); end
  def test_user_inputs_i36; assert_in_epsilon(2.0, worksheet.user_inputs_i36, 0.002); end
  def test_user_inputs_j36; assert_in_epsilon(3.0, worksheet.user_inputs_j36, 0.002); end
  def test_user_inputs_k36; assert_in_epsilon(3.0, worksheet.user_inputs_k36, 0.002); end
  def test_user_inputs_l36; assert_in_epsilon(1.2, worksheet.user_inputs_l36, 0.002); end
  def test_user_inputs_m36; assert_in_epsilon(1.5, worksheet.user_inputs_m36, 0.002); end
  def test_user_inputs_n36; assert_in_epsilon(2.4, worksheet.user_inputs_n36, 0.002); end
  def test_user_inputs_h37; assert_in_epsilon(2.8, worksheet.user_inputs_h37, 0.002); end
  def test_user_inputs_i37; assert_in_epsilon(2.7, worksheet.user_inputs_i37, 0.002); end
  def test_user_inputs_j37; assert_in_epsilon(3.0, worksheet.user_inputs_j37, 0.002); end
  def test_user_inputs_k37; assert_in_epsilon(2.0, worksheet.user_inputs_k37, 0.002); end
  def test_user_inputs_l37; assert_in_epsilon(1.4, worksheet.user_inputs_l37, 0.002); end
  def test_user_inputs_m37; assert_in_epsilon(1.6, worksheet.user_inputs_m37, 0.002); end
  def test_user_inputs_n37; assert_in_epsilon(1.9, worksheet.user_inputs_n37, 0.002); end
  def test_user_inputs_h38; assert_in_epsilon(2.8, worksheet.user_inputs_h38, 0.002); end
  def test_user_inputs_i38; assert_in_epsilon(2.7, worksheet.user_inputs_i38, 0.002); end
  def test_user_inputs_j38; assert_in_epsilon(3.0, worksheet.user_inputs_j38, 0.002); end
  def test_user_inputs_k38; assert_in_epsilon(2.0, worksheet.user_inputs_k38, 0.002); end
  def test_user_inputs_l38; assert_in_epsilon(1.5, worksheet.user_inputs_l38, 0.002); end
  def test_user_inputs_m38; assert_in_epsilon(1.8, worksheet.user_inputs_m38, 0.002); end
  def test_user_inputs_n38; assert_in_epsilon(2.5, worksheet.user_inputs_n38, 0.002); end
  def test_user_inputs_h39; assert_in_epsilon(2.0, worksheet.user_inputs_h39, 0.002); end
  def test_user_inputs_i39; assert_in_epsilon(2.0, worksheet.user_inputs_i39, 0.002); end
  def test_user_inputs_j39; assert_in_epsilon(2.0, worksheet.user_inputs_j39, 0.002); end
  def test_user_inputs_k39; assert_in_epsilon(2.0, worksheet.user_inputs_k39, 0.002); end
  def test_user_inputs_l39; assert_in_epsilon(2.0, worksheet.user_inputs_l39, 0.002); end
  def test_user_inputs_m39; assert_in_epsilon(2.0, worksheet.user_inputs_m39, 0.002); end
  def test_user_inputs_n39; assert_in_epsilon(2.0, worksheet.user_inputs_n39, 0.002); end
  def test_user_inputs_h40; assert_in_epsilon(2.0, worksheet.user_inputs_h40, 0.002); end
  def test_user_inputs_i40; assert_in_epsilon(2.0, worksheet.user_inputs_i40, 0.002); end
  def test_user_inputs_j40; assert_in_epsilon(2.0, worksheet.user_inputs_j40, 0.002); end
  def test_user_inputs_k40; assert_in_epsilon(2.2, worksheet.user_inputs_k40, 0.002); end
  def test_user_inputs_l40; assert_in_epsilon(2.0, worksheet.user_inputs_l40, 0.002); end
  def test_user_inputs_m40; assert_in_epsilon(2.0, worksheet.user_inputs_m40, 0.002); end
  def test_user_inputs_n40; assert_in_epsilon(2.0, worksheet.user_inputs_n40, 0.002); end
  def test_user_inputs_h41; assert_in_epsilon(2.0, worksheet.user_inputs_h41, 0.002); end
  def test_user_inputs_i41; assert_in_epsilon(2.0, worksheet.user_inputs_i41, 0.002); end
  def test_user_inputs_j41; assert_in_epsilon(2.0, worksheet.user_inputs_j41, 0.002); end
  def test_user_inputs_k41; assert_in_epsilon(3.0, worksheet.user_inputs_k41, 0.002); end
  def test_user_inputs_l41; assert_in_epsilon(2.0, worksheet.user_inputs_l41, 0.002); end
  def test_user_inputs_m41; assert_in_epsilon(2.0, worksheet.user_inputs_m41, 0.002); end
  def test_user_inputs_n41; assert_in_epsilon(2.0, worksheet.user_inputs_n41, 0.002); end
  def test_user_inputs_h42; assert_in_epsilon(2.8, worksheet.user_inputs_h42, 0.002); end
  def test_user_inputs_i42; assert_in_epsilon(3.0, worksheet.user_inputs_i42, 0.002); end
  def test_user_inputs_j42; assert_in_epsilon(2.0, worksheet.user_inputs_j42, 0.002); end
  def test_user_inputs_k42; assert_in_epsilon(2.0, worksheet.user_inputs_k42, 0.002); end
  def test_user_inputs_l42; assert_in_epsilon(1.7, worksheet.user_inputs_l42, 0.002); end
  def test_user_inputs_m42; assert_in_epsilon(2.7, worksheet.user_inputs_m42, 0.002); end
  def test_user_inputs_n42; assert_in_epsilon(3.0, worksheet.user_inputs_n42, 0.002); end
  def test_user_inputs_h43; assert_in_epsilon(2.8, worksheet.user_inputs_h43, 0.002); end
  def test_user_inputs_i43; assert_in_epsilon(3.0, worksheet.user_inputs_i43, 0.002); end
  def test_user_inputs_j43; assert_in_epsilon(3.0, worksheet.user_inputs_j43, 0.002); end
  def test_user_inputs_k43; assert_in_epsilon(3.0, worksheet.user_inputs_k43, 0.002); end
  def test_user_inputs_l43; assert_in_epsilon(2.5, worksheet.user_inputs_l43, 0.002); end
  def test_user_inputs_m43; assert_in_epsilon(3.0, worksheet.user_inputs_m43, 0.002); end
  def test_user_inputs_n43; assert_in_epsilon(3.0, worksheet.user_inputs_n43, 0.002); end
  def test_user_inputs_h44; assert_in_epsilon(2.8, worksheet.user_inputs_h44, 0.002); end
  def test_user_inputs_i44; assert_in_epsilon(3.0, worksheet.user_inputs_i44, 0.002); end
  def test_user_inputs_j44; assert_in_epsilon(2.0, worksheet.user_inputs_j44, 0.002); end
  def test_user_inputs_k44; assert_in_epsilon(1.5, worksheet.user_inputs_k44, 0.002); end
  def test_user_inputs_l44; assert_in_epsilon(2.0, worksheet.user_inputs_l44, 0.002); end
  def test_user_inputs_m44; assert_in_epsilon(2.0, worksheet.user_inputs_m44, 0.002); end
  def test_user_inputs_n44; assert_in_epsilon(3.0, worksheet.user_inputs_n44, 0.002); end
  def test_user_inputs_h45; assert_in_epsilon(2.8, worksheet.user_inputs_h45, 0.002); end
  def test_user_inputs_i45; assert_in_epsilon(3.0, worksheet.user_inputs_i45, 0.002); end
  def test_user_inputs_j45; assert_in_epsilon(3.0, worksheet.user_inputs_j45, 0.002); end
  def test_user_inputs_k45; assert_in_epsilon(3.0, worksheet.user_inputs_k45, 0.002); end
  def test_user_inputs_l45; assert_in_epsilon(3.0, worksheet.user_inputs_l45, 0.002); end
  def test_user_inputs_m45; assert_in_epsilon(3.0, worksheet.user_inputs_m45, 0.002); end
  def test_user_inputs_n45; assert_in_epsilon(3.0, worksheet.user_inputs_n45, 0.002); end
  def test_user_inputs_h46; assert_in_epsilon(2.8, worksheet.user_inputs_h46, 0.002); end
  def test_user_inputs_i46; assert_in_epsilon(3.0, worksheet.user_inputs_i46, 0.002); end
  def test_user_inputs_j46; assert_in_epsilon(3.0, worksheet.user_inputs_j46, 0.002); end
  def test_user_inputs_k46; assert_in_epsilon(2.0, worksheet.user_inputs_k46, 0.002); end
  def test_user_inputs_l46; assert_in_epsilon(3.0, worksheet.user_inputs_l46, 0.002); end
  def test_user_inputs_m46; assert_in_epsilon(3.0, worksheet.user_inputs_m46, 0.002); end
  def test_user_inputs_n46; assert_in_epsilon(3.0, worksheet.user_inputs_n46, 0.002); end
  def test_user_inputs_h47; assert_in_epsilon(2.8, worksheet.user_inputs_h47, 0.002); end
  def test_user_inputs_i47; assert_in_epsilon(3.0, worksheet.user_inputs_i47, 0.002); end
  def test_user_inputs_j47; assert_in_epsilon(2.0, worksheet.user_inputs_j47, 0.002); end
  def test_user_inputs_k47; assert_in_epsilon(2.0, worksheet.user_inputs_k47, 0.002); end
  def test_user_inputs_l47; assert_in_epsilon(1.5, worksheet.user_inputs_l47, 0.002); end
  def test_user_inputs_m47; assert_in_epsilon(1.9, worksheet.user_inputs_m47, 0.002); end
  def test_user_inputs_n47; assert_in_epsilon(2.0, worksheet.user_inputs_n47, 0.002); end
  def test_user_inputs_h48; assert_in_epsilon(2.8, worksheet.user_inputs_h48, 0.002); end
  def test_user_inputs_i48; assert_in_epsilon(3.0, worksheet.user_inputs_i48, 0.002); end
  def test_user_inputs_j48; assert_in_epsilon(3.0, worksheet.user_inputs_j48, 0.002); end
  def test_user_inputs_k48; assert_in_epsilon(2.0, worksheet.user_inputs_k48, 0.002); end
  def test_user_inputs_l48; assert_in_epsilon(2.0, worksheet.user_inputs_l48, 0.002); end
  def test_user_inputs_m48; assert_in_epsilon(3.0, worksheet.user_inputs_m48, 0.002); end
  def test_user_inputs_n48; assert_in_epsilon(1.5, worksheet.user_inputs_n48, 0.002); end
  def test_user_inputs_h49; assert_in_delta(1.0, worksheet.user_inputs_h49, 0.002); end
  def test_user_inputs_i49; assert_in_delta(1.0, worksheet.user_inputs_i49, 0.002); end
  def test_user_inputs_j49; assert_in_delta(1.0, worksheet.user_inputs_j49, 0.002); end
  def test_user_inputs_k49; assert_in_delta(1.0, worksheet.user_inputs_k49, 0.002); end
  def test_user_inputs_l49; assert_in_delta(1.0, worksheet.user_inputs_l49, 0.002); end
  def test_user_inputs_m49; assert_in_delta(1.0, worksheet.user_inputs_m49, 0.002); end
  def test_user_inputs_n49; assert_in_delta(1.0, worksheet.user_inputs_n49, 0.002); end
  def test_user_inputs_h50; assert_in_delta(1.0, worksheet.user_inputs_h50, 0.002); end
  def test_user_inputs_i50; assert_in_delta(1.0, worksheet.user_inputs_i50, 0.002); end
  def test_user_inputs_j50; assert_in_delta(1.0, worksheet.user_inputs_j50, 0.002); end
  def test_user_inputs_k50; assert_in_delta(1.0, worksheet.user_inputs_k50, 0.002); end
  def test_user_inputs_l50; assert_in_delta(1.0, worksheet.user_inputs_l50, 0.002); end
  def test_user_inputs_m50; assert_in_delta(1.0, worksheet.user_inputs_m50, 0.002); end
  def test_user_inputs_n50; assert_in_delta(1.0, worksheet.user_inputs_n50, 0.002); end
  def test_user_inputs_h51; assert_in_delta(1.0, worksheet.user_inputs_h51, 0.002); end
  def test_user_inputs_i51; assert_in_delta(1.0, worksheet.user_inputs_i51, 0.002); end
  def test_user_inputs_j51; assert_in_delta(1.0, worksheet.user_inputs_j51, 0.002); end
  def test_user_inputs_k51; assert_in_delta(1.0, worksheet.user_inputs_k51, 0.002); end
  def test_user_inputs_l51; assert_in_delta(1.0, worksheet.user_inputs_l51, 0.002); end
  def test_user_inputs_m51; assert_in_delta(1.0, worksheet.user_inputs_m51, 0.002); end
  def test_user_inputs_n51; assert_in_delta(1.0, worksheet.user_inputs_n51, 0.002); end
  def test_user_inputs_h52; assert_in_delta(1.0, worksheet.user_inputs_h52, 0.002); end
  def test_user_inputs_i52; assert_in_delta(1.0, worksheet.user_inputs_i52, 0.002); end
  def test_user_inputs_j52; assert_in_delta(1.0, worksheet.user_inputs_j52, 0.002); end
  def test_user_inputs_k52; assert_in_delta(1.0, worksheet.user_inputs_k52, 0.002); end
  def test_user_inputs_l52; assert_in_delta(1.0, worksheet.user_inputs_l52, 0.002); end
  def test_user_inputs_m52; assert_in_delta(1.0, worksheet.user_inputs_m52, 0.002); end
  def test_user_inputs_n52; assert_in_delta(1.0, worksheet.user_inputs_n52, 0.002); end
  def test_user_inputs_h53; assert_in_delta(1.0, worksheet.user_inputs_h53, 0.002); end
  def test_user_inputs_i53; assert_in_delta(1.0, worksheet.user_inputs_i53, 0.002); end
  def test_user_inputs_j53; assert_in_delta(1.0, worksheet.user_inputs_j53, 0.002); end
  def test_user_inputs_k53; assert_in_delta(1.0, worksheet.user_inputs_k53, 0.002); end
  def test_user_inputs_l53; assert_in_delta(1.0, worksheet.user_inputs_l53, 0.002); end
  def test_user_inputs_m53; assert_in_delta(1.0, worksheet.user_inputs_m53, 0.002); end
  def test_user_inputs_n53; assert_in_delta(1.0, worksheet.user_inputs_n53, 0.002); end
  def test_user_inputs_h54; assert_in_epsilon(2.8, worksheet.user_inputs_h54, 0.002); end
  def test_user_inputs_i54; assert_in_epsilon(2.0, worksheet.user_inputs_i54, 0.002); end
  def test_user_inputs_j54; assert_in_epsilon(2.5, worksheet.user_inputs_j54, 0.002); end
  def test_user_inputs_k54; assert_in_epsilon(3.0, worksheet.user_inputs_k54, 0.002); end
  def test_user_inputs_l54; assert_in_epsilon(1.5, worksheet.user_inputs_l54, 0.002); end
  def test_user_inputs_m54; assert_in_epsilon(2.0, worksheet.user_inputs_m54, 0.002); end
  def test_user_inputs_n54; assert_in_epsilon(3.0, worksheet.user_inputs_n54, 0.002); end
  def test_user_inputs_h55; assert_in_epsilon(2.7, worksheet.user_inputs_h55, 0.002); end
  def test_user_inputs_i55; assert_in_epsilon(2.8, worksheet.user_inputs_i55, 0.002); end
  def test_user_inputs_j55; assert_in_epsilon(2.8, worksheet.user_inputs_j55, 0.002); end
  def test_user_inputs_k55; assert_in_epsilon(2.8, worksheet.user_inputs_k55, 0.002); end
  def test_user_inputs_l55; assert_in_epsilon(1.5, worksheet.user_inputs_l55, 0.002); end
  def test_user_inputs_m55; assert_in_epsilon(1.5, worksheet.user_inputs_m55, 0.002); end
  def test_user_inputs_n55; assert_in_epsilon(3.0, worksheet.user_inputs_n55, 0.002); end
  def test_user_inputs_h56; assert_in_epsilon(2.0, worksheet.user_inputs_h56, 0.002); end
  def test_user_inputs_i56; assert_in_epsilon(2.5, worksheet.user_inputs_i56, 0.002); end
  def test_user_inputs_j56; assert_in_epsilon(2.0, worksheet.user_inputs_j56, 0.002); end
  def test_user_inputs_k56; assert_in_epsilon(2.0, worksheet.user_inputs_k56, 0.002); end
  def test_user_inputs_l56; assert_in_epsilon(2.0, worksheet.user_inputs_l56, 0.002); end
  def test_user_inputs_m56; assert_in_epsilon(2.0, worksheet.user_inputs_m56, 0.002); end
  def test_user_inputs_n56; assert_in_epsilon(2.0, worksheet.user_inputs_n56, 0.002); end
  def test_user_inputs_h57; assert_equal("B", worksheet.user_inputs_h57); end
  def test_user_inputs_i57; assert_equal("B", worksheet.user_inputs_i57); end
  def test_user_inputs_j57; assert_equal("B", worksheet.user_inputs_j57); end
  def test_user_inputs_k57; assert_equal("B", worksheet.user_inputs_k57); end
  def test_user_inputs_l57; assert_equal("B", worksheet.user_inputs_l57); end
  def test_user_inputs_m57; assert_equal("B", worksheet.user_inputs_m57); end
  def test_user_inputs_n57; assert_equal("B", worksheet.user_inputs_n57); end
  def test_user_inputs_h58; assert_equal("US", worksheet.user_inputs_h58); end
  def test_user_inputs_i58; assert_equal("US", worksheet.user_inputs_i58); end
  def test_user_inputs_j58; assert_equal("US", worksheet.user_inputs_j58); end
  def test_user_inputs_k58; assert_equal("US", worksheet.user_inputs_k58); end
  def test_user_inputs_l58; assert_equal("US", worksheet.user_inputs_l58); end
  def test_user_inputs_m58; assert_equal("US", worksheet.user_inputs_m58); end
  def test_user_inputs_n58; assert_equal("US", worksheet.user_inputs_n58); end
  def test_user_inputs_h59; assert_equal("Point", worksheet.user_inputs_h59); end
  def test_user_inputs_i59; assert_equal("Point", worksheet.user_inputs_i59); end
  def test_user_inputs_j59; assert_equal("Point", worksheet.user_inputs_j59); end
  def test_user_inputs_k59; assert_equal("Point", worksheet.user_inputs_k59); end
  def test_user_inputs_l59; assert_equal("Point", worksheet.user_inputs_l59); end
  def test_user_inputs_m59; assert_equal("Point", worksheet.user_inputs_m59); end
  def test_user_inputs_n59; assert_equal("Point", worksheet.user_inputs_n59); end
  def test_user_inputs_h60; assert_equal("Point", worksheet.user_inputs_h60); end
  def test_user_inputs_i60; assert_equal("Point", worksheet.user_inputs_i60); end
  def test_user_inputs_j60; assert_equal("Point", worksheet.user_inputs_j60); end
  def test_user_inputs_k60; assert_equal("Point", worksheet.user_inputs_k60); end
  def test_user_inputs_l60; assert_equal("Point", worksheet.user_inputs_l60); end
  def test_user_inputs_m60; assert_equal("Point", worksheet.user_inputs_m60); end
  def test_user_inputs_n60; assert_equal("Point", worksheet.user_inputs_n60); end
  def test_user_inputs_h61; assert_equal("Point", worksheet.user_inputs_h61); end
  def test_user_inputs_i61; assert_equal("Point", worksheet.user_inputs_i61); end
  def test_user_inputs_j61; assert_equal("Point", worksheet.user_inputs_j61); end
  def test_user_inputs_k61; assert_equal("Point", worksheet.user_inputs_k61); end
  def test_user_inputs_l61; assert_equal("Point", worksheet.user_inputs_l61); end
  def test_user_inputs_m61; assert_equal("Point", worksheet.user_inputs_m61); end
  def test_user_inputs_n61; assert_equal("Point", worksheet.user_inputs_n61); end
  def test_user_inputs_h62; assert_equal("Point", worksheet.user_inputs_h62); end
  def test_user_inputs_i62; assert_equal("Point", worksheet.user_inputs_i62); end
  def test_user_inputs_j62; assert_equal("Point", worksheet.user_inputs_j62); end
  def test_user_inputs_k62; assert_equal("Point", worksheet.user_inputs_k62); end
  def test_user_inputs_l62; assert_equal("Point", worksheet.user_inputs_l62); end
  def test_user_inputs_m62; assert_equal("Point", worksheet.user_inputs_m62); end
  def test_user_inputs_n62; assert_equal("Point", worksheet.user_inputs_n62); end
  def test_user_inputs_h63; assert_equal("Point", worksheet.user_inputs_h63); end
  def test_user_inputs_i63; assert_equal("Point", worksheet.user_inputs_i63); end
  def test_user_inputs_j63; assert_equal("Point", worksheet.user_inputs_j63); end
  def test_user_inputs_k63; assert_equal("Point", worksheet.user_inputs_k63); end
  def test_user_inputs_l63; assert_equal("Point", worksheet.user_inputs_l63); end
  def test_user_inputs_m63; assert_equal("Point", worksheet.user_inputs_m63); end
  def test_user_inputs_n63; assert_equal("Point", worksheet.user_inputs_n63); end
  def test_user_inputs_h64; assert_equal("Point", worksheet.user_inputs_h64); end
  def test_user_inputs_i64; assert_equal("Point", worksheet.user_inputs_i64); end
  def test_user_inputs_j64; assert_equal("Point", worksheet.user_inputs_j64); end
  def test_user_inputs_k64; assert_equal("Point", worksheet.user_inputs_k64); end
  def test_user_inputs_l64; assert_equal("Point", worksheet.user_inputs_l64); end
  def test_user_inputs_m64; assert_equal("Point", worksheet.user_inputs_m64); end
  def test_user_inputs_n64; assert_equal("Point", worksheet.user_inputs_n64); end
  def test_user_inputs_h65; assert_equal("Point", worksheet.user_inputs_h65); end
  def test_user_inputs_i65; assert_equal("Point", worksheet.user_inputs_i65); end
  def test_user_inputs_j65; assert_equal("Point", worksheet.user_inputs_j65); end
  def test_user_inputs_k65; assert_equal("Point", worksheet.user_inputs_k65); end
  def test_user_inputs_l65; assert_equal("Point", worksheet.user_inputs_l65); end
  def test_user_inputs_m65; assert_equal("Point", worksheet.user_inputs_m65); end
  def test_user_inputs_n65; assert_equal("Point", worksheet.user_inputs_n65); end
  def test_user_inputs_g7; assert_equal("There are 9.6 billion people in 2050.", worksheet.user_inputs_g7); end
  def test_user_inputs_g8; assert_equal("66% of people live in urban areas.", worksheet.user_inputs_g8); end
  def test_user_inputs_g9; assert_equal("Growth in travel demand continues in cities around the world, with global distance travelled per person increasing sharply.", worksheet.user_inputs_g9); end
  def test_user_inputs_g10; assert_equal("Growth in freight tonne-kms remains closely tied to GDP, increasing dramatically.", worksheet.user_inputs_g10); end
  def test_user_inputs_g11; assert_equal("In 2050 cars are the dominant mode of travel in urban areas (around 65%).", worksheet.user_inputs_g11); end
  def test_user_inputs_g12; assert_equal("1.4 people (10% lower than 2011).", worksheet.user_inputs_g12); end
  def test_user_inputs_g13; assert_equal("In 2050, the average urban car travels 12,000 km per year.", worksheet.user_inputs_g13); end
  def test_user_inputs_g14; assert_equal("By 2050 most transport modes decrease their energy intensity by 0.5% annually to roughly 8 lge/100km for LDVs and 26 lge/100km for HDVs.", worksheet.user_inputs_g14); end
  def test_user_inputs_g15; assert_equal("By 2050 the percentage of hybrid and electric vehicles remains low (5% and 2%) for passenger cars, and heavy duty vehicles (5% hybrid), and decreases for 2-3 wheelers (40% electric). Few new technologies are adopted for ships or airplanes.", worksheet.user_inputs_g15); end
  def test_user_inputs_g16; assert_equal("The average urban home will have a floor area of 100 m<sup>2</sup> by 2050.", worksheet.user_inputs_g16); end
  def test_user_inputs_g17; assert_equal("In 2050 the average urban home will have an inside temperature of 20 &deg;C in winter and 24 &deg;C in summer.", worksheet.user_inputs_g17); end
  def test_user_inputs_g18; assert_equal("In 2050 the average urban household will have 6.0 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 4.7 small appliances (e.g. laptop, DVD player).", worksheet.user_inputs_g18); end
  def test_user_inputs_g19; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 29% by 2050. The average heat loss coefficient of these buildings will be 12 GW/(M ha*&deg;C).", worksheet.user_inputs_g19); end
  def test_user_inputs_g20; assert_equal("In 2050, 2% of urban heating will be low carbon (heat pumps and solar heaters) and 5% of urban cooling will be from options like solar cooling.", worksheet.user_inputs_g20); end
  def test_user_inputs_g21; assert_equal("An average TV has a power of 243W in 2050.", worksheet.user_inputs_g21); end
  def test_user_inputs_g22; assert_equal("By 2050, the average lifespan of an urban 4-wheeled car with internal combustion engine will be 12.5 years.", worksheet.user_inputs_g22); end
  def test_user_inputs_g23; assert_equal("Product design, material switching and recycling improvements mean that the products demanded can be manufactured using 4.0% less materials (by weight) in 2050.", worksheet.user_inputs_g23); end
  def test_user_inputs_g24; assert_equal("Specific emissions for steel decrease by 7.3% and specific emissions for aluminium decrease by 0.1%.", worksheet.user_inputs_g24); end
  def test_user_inputs_g25; assert_equal("Specific emissions for Chemicals & petrochemicals increase by -4.3%", worksheet.user_inputs_g25); end
  def test_user_inputs_g26; assert_equal("Specific emissions for pulp & paper increase by -1.7%", worksheet.user_inputs_g26); end
  def test_user_inputs_g27; assert_equal("Specific emissions for steel decrease by 7.3% and specific emissions for aluminium decrease by 0.1%.", worksheet.user_inputs_g27); end
  def test_user_inputs_g28; assert_equal("CCS enables a 0% CO2 reduction (excluding electricity emissions & counting biomass as fossil fuel) and an 0 EJ electricity consumption increase.", worksheet.user_inputs_g28); end
  def test_user_inputs_g29; assert_equal("In 2050 out of total fossil energy supplied it is 44% of solid, 16% of liquid and 40% of gas power.", worksheet.user_inputs_g29); end
  def test_user_inputs_g30; assert_in_delta(0.0, (worksheet.user_inputs_g30||0), 0.002); end
  def test_user_inputs_g31; assert_equal("16 GW of CCS installed power capacity by 2050.", worksheet.user_inputs_g31); end
  def test_user_inputs_g32; assert_equal("480 GW of installed nuclear power capacity by 2050.", worksheet.user_inputs_g32); end
  def test_user_inputs_g33; assert_equal("1,159 GW of installed wind power capacity by 2050.", worksheet.user_inputs_g33); end
  def test_user_inputs_g34; assert_equal("1,694 GW of installed hydroelectric power capacity by 2050.", worksheet.user_inputs_g34); end
  def test_user_inputs_g35; assert_equal("34.7 GW of installed marine power capacity by 2050.", worksheet.user_inputs_g35); end
  def test_user_inputs_g36; assert_equal("441 GW of installed solar power capacity by 2050.", worksheet.user_inputs_g36); end
  def test_user_inputs_g37; assert_equal("69 GW of installed geothermal power capacity by 2050.", worksheet.user_inputs_g37); end
  def test_user_inputs_g38; assert_equal("278 GW of electricity storage capacity by 2050.", worksheet.user_inputs_g38); end
  def test_user_inputs_g39; assert_in_delta(0.0, (worksheet.user_inputs_g39||0), 0.002); end
  def test_user_inputs_g40; assert_in_delta(0.0, (worksheet.user_inputs_g40||0), 0.002); end
  def test_user_inputs_g42; assert_in_delta(0.0, (worksheet.user_inputs_g42||0), 0.002); end
  def test_user_inputs_g43; assert_in_delta(0.0, (worksheet.user_inputs_g43||0), 0.002); end
  def test_user_inputs_g44; assert_in_delta(0.0, (worksheet.user_inputs_g44||0), 0.002); end
  def test_user_inputs_g46; assert_in_delta(0.0, (worksheet.user_inputs_g46||0), 0.002); end
  def test_user_inputs_g47; assert_equal("30% liquid", worksheet.user_inputs_g47); end
  def test_user_inputs_g48; assert_equal("40% of surplus land is used for biocrops.", worksheet.user_inputs_g48); end
  def test_user_inputs_g49; assert_equal("Biochar technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.user_inputs_g49); end
  def test_user_inputs_g50; assert_equal("Direct air capture technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.user_inputs_g50); end
  def test_user_inputs_g51; assert_equal("Ocean fertilisation technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.user_inputs_g51); end
  def test_user_inputs_g52; assert_equal("Enhanced weathering (oceanic) technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.user_inputs_g52); end
  def test_user_inputs_g53; assert_equal("Enhanced weathering (terrestial) technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.user_inputs_g53); end
  def test_user_inputs_g54; assert_equal("22% of crop energy is wasted after leaving the farm by 2050", worksheet.user_inputs_g54); end
  def test_user_inputs_g55; assert_in_delta(0.0, (worksheet.user_inputs_g55||0), 0.002); end
  def test_user_inputs_g56; assert_in_delta(0.0, (worksheet.user_inputs_g56||0), 0.002); end
  def test_user_inputs_g57; assert_in_delta(0.0, (worksheet.user_inputs_g57||0), 0.002); end
  def test_user_inputs_f7; assert_in_epsilon(3.0, worksheet.user_inputs_f7, 0.002); end
  def test_user_inputs_f8; assert_in_epsilon(3.0, worksheet.user_inputs_f8, 0.002); end
  def test_user_inputs_f9; assert_in_epsilon(4.0, worksheet.user_inputs_f9, 0.002); end
  def test_user_inputs_f10; assert_in_epsilon(4.0, worksheet.user_inputs_f10, 0.002); end
  def test_user_inputs_f11; assert_in_epsilon(4.0, worksheet.user_inputs_f11, 0.002); end
  def test_user_inputs_f12; assert_in_epsilon(4.0, worksheet.user_inputs_f12, 0.002); end
  def test_user_inputs_f13; assert_in_epsilon(4.0, worksheet.user_inputs_f13, 0.002); end
  def test_user_inputs_f14; assert_in_epsilon(4.0, worksheet.user_inputs_f14, 0.002); end
  def test_user_inputs_f15; assert_in_epsilon(4.0, worksheet.user_inputs_f15, 0.002); end
  def test_user_inputs_f16; assert_in_epsilon(4.0, worksheet.user_inputs_f16, 0.002); end
  def test_user_inputs_f17; assert_in_epsilon(4.0, worksheet.user_inputs_f17, 0.002); end
  def test_user_inputs_f18; assert_in_epsilon(4.0, worksheet.user_inputs_f18, 0.002); end
  def test_user_inputs_f19; assert_in_epsilon(4.0, worksheet.user_inputs_f19, 0.002); end
  def test_user_inputs_f20; assert_in_epsilon(4.0, worksheet.user_inputs_f20, 0.002); end
  def test_user_inputs_f21; assert_in_epsilon(4.0, worksheet.user_inputs_f21, 0.002); end
  def test_user_inputs_f22; assert_in_epsilon(4.0, worksheet.user_inputs_f22, 0.002); end
  def test_user_inputs_f23; assert_in_epsilon(4.0, worksheet.user_inputs_f23, 0.002); end
  def test_user_inputs_f24; assert_in_epsilon(4.0, worksheet.user_inputs_f24, 0.002); end
  def test_user_inputs_f25; assert_in_epsilon(4.0, worksheet.user_inputs_f25, 0.002); end
  def test_user_inputs_f26; assert_in_epsilon(4.0, worksheet.user_inputs_f26, 0.002); end
  def test_user_inputs_f27; assert_in_epsilon(4.0, worksheet.user_inputs_f27, 0.002); end
  def test_user_inputs_f28; assert_in_epsilon(4.0, worksheet.user_inputs_f28, 0.002); end
  def test_user_inputs_f29; assert_in_epsilon(4.0, worksheet.user_inputs_f29, 0.002); end
  def test_user_inputs_f30; assert_in_epsilon(4.0, worksheet.user_inputs_f30, 0.002); end
  def test_user_inputs_f31; assert_in_epsilon(4.0, worksheet.user_inputs_f31, 0.002); end
  def test_user_inputs_f32; assert_in_epsilon(4.0, worksheet.user_inputs_f32, 0.002); end
  def test_user_inputs_f33; assert_in_epsilon(4.0, worksheet.user_inputs_f33, 0.002); end
  def test_user_inputs_f34; assert_in_epsilon(4.0, worksheet.user_inputs_f34, 0.002); end
  def test_user_inputs_f35; assert_in_epsilon(4.0, worksheet.user_inputs_f35, 0.002); end
  def test_user_inputs_f36; assert_in_epsilon(4.0, worksheet.user_inputs_f36, 0.002); end
  def test_user_inputs_f37; assert_in_epsilon(4.0, worksheet.user_inputs_f37, 0.002); end
  def test_user_inputs_f38; assert_in_epsilon(4.0, worksheet.user_inputs_f38, 0.002); end
  def test_user_inputs_f39; assert_in_epsilon(4.0, worksheet.user_inputs_f39, 0.002); end
  def test_user_inputs_f40; assert_in_epsilon(4.0, worksheet.user_inputs_f40, 0.002); end
  def test_user_inputs_f41; assert_in_epsilon(4.0, worksheet.user_inputs_f41, 0.002); end
  def test_user_inputs_f42; assert_in_epsilon(4.0, worksheet.user_inputs_f42, 0.002); end
  def test_user_inputs_f43; assert_in_epsilon(4.0, worksheet.user_inputs_f43, 0.002); end
  def test_user_inputs_f44; assert_in_epsilon(4.0, worksheet.user_inputs_f44, 0.002); end
  def test_user_inputs_f45; assert_in_epsilon(4.0, worksheet.user_inputs_f45, 0.002); end
  def test_user_inputs_f46; assert_in_epsilon(4.0, worksheet.user_inputs_f46, 0.002); end
  def test_user_inputs_f47; assert_in_epsilon(4.0, worksheet.user_inputs_f47, 0.002); end
  def test_user_inputs_f48; assert_in_epsilon(4.0, worksheet.user_inputs_f48, 0.002); end
  def test_user_inputs_f49; assert_in_epsilon(4.0, worksheet.user_inputs_f49, 0.002); end
  def test_user_inputs_f50; assert_in_epsilon(4.0, worksheet.user_inputs_f50, 0.002); end
  def test_user_inputs_f51; assert_in_epsilon(4.0, worksheet.user_inputs_f51, 0.002); end
  def test_user_inputs_f52; assert_in_epsilon(4.0, worksheet.user_inputs_f52, 0.002); end
  def test_user_inputs_f53; assert_in_epsilon(4.0, worksheet.user_inputs_f53, 0.002); end
  def test_user_inputs_f54; assert_in_epsilon(4.0, worksheet.user_inputs_f54, 0.002); end
  def test_user_inputs_f55; assert_in_epsilon(4.0, worksheet.user_inputs_f55, 0.002); end
  def test_user_inputs_f56; assert_in_epsilon(4.0, worksheet.user_inputs_f56, 0.002); end
  def test_user_inputs_f57; assert_equal("B", worksheet.user_inputs_f57); end
  def test_user_inputs_d7; assert_equal("Global population", worksheet.user_inputs_d7); end
  def test_user_inputs_d8; assert_equal("Urbanisation", worksheet.user_inputs_d8); end
  def test_user_inputs_d9; assert_equal("Passenger distance", worksheet.user_inputs_d9); end
  def test_user_inputs_d10; assert_equal("Freight distance", worksheet.user_inputs_d10); end
  def test_user_inputs_d11; assert_equal("Mode", worksheet.user_inputs_d11); end
  def test_user_inputs_d12; assert_equal("Occupancy and load", worksheet.user_inputs_d12); end
  def test_user_inputs_d13; assert_equal("Car own or hire ", worksheet.user_inputs_d13); end
  def test_user_inputs_d14; assert_equal("Efficiency", worksheet.user_inputs_d14); end
  def test_user_inputs_d15; assert_equal("Electric and hydrogen", worksheet.user_inputs_d15); end
  def test_user_inputs_d16; assert_equal("Building size", worksheet.user_inputs_d16); end
  def test_user_inputs_d17; assert_equal("Temperature & hot water use", worksheet.user_inputs_d17); end
  def test_user_inputs_d18; assert_equal("Lighting, cooking & appliance use", worksheet.user_inputs_d18); end
  def test_user_inputs_d19; assert_equal("Building insulation", worksheet.user_inputs_d19); end
  def test_user_inputs_d20; assert_equal("Temperature, cooking & lighting technology", worksheet.user_inputs_d20); end
  def test_user_inputs_d21; assert_equal("Appliance efficiency", worksheet.user_inputs_d21); end
  def test_user_inputs_d22; assert_equal("Product lifespan", worksheet.user_inputs_d22); end
  def test_user_inputs_d23; assert_equal("Design, material switch & recycling", worksheet.user_inputs_d23); end
  def test_user_inputs_d24; assert_equal("Iron, steel & aluminium", worksheet.user_inputs_d24); end
  def test_user_inputs_d25; assert_equal("Chemicals", worksheet.user_inputs_d25); end
  def test_user_inputs_d26; assert_equal("Paper and other", worksheet.user_inputs_d26); end
  def test_user_inputs_d27; assert_equal("Cement", worksheet.user_inputs_d27); end
  def test_user_inputs_d28; assert_equal("Carbon capture and storage (ind.)", worksheet.user_inputs_d28); end
  def test_user_inputs_d29; assert_equal("Coal / oil / gas", worksheet.user_inputs_d29); end
  def test_user_inputs_d30; assert_equal("Fossil fuel efficiency", worksheet.user_inputs_d30); end
  def test_user_inputs_d31; assert_equal("Carbon capture and storage (power)", worksheet.user_inputs_d31); end
  def test_user_inputs_d32; assert_equal("Nuclear", worksheet.user_inputs_d32); end
  def test_user_inputs_d33; assert_equal("Wind", worksheet.user_inputs_d33); end
  def test_user_inputs_d34; assert_equal("Hydroelectric", worksheet.user_inputs_d34); end
  def test_user_inputs_d35; assert_equal("Marine", worksheet.user_inputs_d35); end
  def test_user_inputs_d36; assert_equal("Solar", worksheet.user_inputs_d36); end
  def test_user_inputs_d37; assert_equal("Geothermal", worksheet.user_inputs_d37); end
  def test_user_inputs_d38; assert_equal("Storage and demand shifting", worksheet.user_inputs_d38); end
  def test_user_inputs_d39; assert_equal("Calories consumed", worksheet.user_inputs_d39); end
  def test_user_inputs_d40; assert_equal("Quantity of meat", worksheet.user_inputs_d40); end
  def test_user_inputs_d41; assert_equal("Type of meat", worksheet.user_inputs_d41); end
  def test_user_inputs_d42; assert_equal("Crop yields", worksheet.user_inputs_d42); end
  def test_user_inputs_d43; assert_equal("Land-use efficiency ", worksheet.user_inputs_d43); end
  def test_user_inputs_d44; assert_equal("Livestock (grains/residues fed)", worksheet.user_inputs_d44); end
  def test_user_inputs_d45; assert_equal("Livestock (pasture fed)", worksheet.user_inputs_d45); end
  def test_user_inputs_d46; assert_equal("Bioenergy yields", worksheet.user_inputs_d46); end
  def test_user_inputs_d47; assert_equal("Solid or liquid", worksheet.user_inputs_d47); end
  def test_user_inputs_d48; assert_equal("Surplus land (forest & bioenergy) ", worksheet.user_inputs_d48); end
  def test_user_inputs_d49; assert_equal("Biochar", worksheet.user_inputs_d49); end
  def test_user_inputs_d50; assert_equal("Direct air capture", worksheet.user_inputs_d50); end
  def test_user_inputs_d51; assert_equal("Ocean fertilisation", worksheet.user_inputs_d51); end
  def test_user_inputs_d52; assert_equal("Enhanced weathering (oceanic)", worksheet.user_inputs_d52); end
  def test_user_inputs_d53; assert_equal("Enhanced weathering (terrestial)", worksheet.user_inputs_d53); end
  def test_user_inputs_d54; assert_equal("Wastes and residues", worksheet.user_inputs_d54); end
  def test_user_inputs_d55; assert_equal("Emissions trajectory", worksheet.user_inputs_d55); end
  def test_user_inputs_d56; assert_equal("Atmospheric CO2 fraction", worksheet.user_inputs_d56); end
  def test_user_inputs_d57; assert_equal("Confidence in climate models", worksheet.user_inputs_d57); end
  def test_user_inputs_d58; assert_equal("Region factor", worksheet.user_inputs_d58); end
  def test_user_inputs_d59; assert_equal("Coal", worksheet.user_inputs_d59); end
  def test_user_inputs_d60; assert_equal("Oil", worksheet.user_inputs_d60); end
  def test_user_inputs_d61; assert_equal("Gas", worksheet.user_inputs_d61); end
  def test_user_inputs_d62; assert_equal("Solid bioenergy", worksheet.user_inputs_d62); end
  def test_user_inputs_d63; assert_equal("Liquid bioenergy", worksheet.user_inputs_d63); end
  def test_user_inputs_d64; assert_equal("Gaseous bioenergy", worksheet.user_inputs_d64); end
  def test_user_inputs_d65; assert_equal("Hydrogen", worksheet.user_inputs_d65); end
  def test_outputs_lifestyle_e8; assert_equal("2011", worksheet.outputs_lifestyle_e8); end
  def test_outputs_lifestyle_f8; assert_equal("2011", worksheet.outputs_lifestyle_f8); end
  def test_outputs_lifestyle_g8; assert_in_epsilon(2011.0, worksheet.outputs_lifestyle_g8, 0.002); end
  def test_outputs_lifestyle_h8; assert_equal("2050", worksheet.outputs_lifestyle_h8); end
  def test_outputs_lifestyle_i8; assert_equal("2050", worksheet.outputs_lifestyle_i8); end
  def test_outputs_lifestyle_j8; assert_in_epsilon(2050.0, worksheet.outputs_lifestyle_j8, 0.002); end
  def test_outputs_lifestyle_e9; assert_equal("Urban", worksheet.outputs_lifestyle_e9); end
  def test_outputs_lifestyle_f9; assert_equal("Rural", worksheet.outputs_lifestyle_f9); end
  def test_outputs_lifestyle_g9; assert_equal("2011 weighted average", worksheet.outputs_lifestyle_g9); end
  def test_outputs_lifestyle_h9; assert_equal("Urban", worksheet.outputs_lifestyle_h9); end
  def test_outputs_lifestyle_i9; assert_equal("Rural", worksheet.outputs_lifestyle_i9); end
  def test_outputs_lifestyle_j9; assert_equal("2050 weighted average", worksheet.outputs_lifestyle_j9); end
  def test_outputs_lifestyle_d10; assert_equal("Passenger km/head", worksheet.outputs_lifestyle_d10); end
  def test_outputs_lifestyle_e10; assert_in_epsilon(9187.0, worksheet.outputs_lifestyle_e10, 0.002); end
  def test_outputs_lifestyle_f10; assert_in_epsilon(5653.0, worksheet.outputs_lifestyle_f10, 0.002); end
  def test_outputs_lifestyle_g10; assert_in_epsilon(7495.0, worksheet.outputs_lifestyle_g10, 0.002); end
  def test_outputs_lifestyle_h10; assert_in_epsilon(12070.0, worksheet.outputs_lifestyle_h10, 0.002); end
  def test_outputs_lifestyle_i10; assert_in_epsilon(8795.0, worksheet.outputs_lifestyle_i10, 0.002); end
  def test_outputs_lifestyle_j10; assert_in_epsilon(10968.0, worksheet.outputs_lifestyle_j10, 0.002); end
  def test_outputs_lifestyle_d11; assert_equal("% of total passenger km using cars", worksheet.outputs_lifestyle_d11); end
  def test_outputs_lifestyle_e11; assert_in_delta(0.3838396807373519, worksheet.outputs_lifestyle_e11, 0.002); end
  def test_outputs_lifestyle_f11; assert_in_delta(0.451433121898344, worksheet.outputs_lifestyle_f11, 0.002); end
  def test_outputs_lifestyle_h11; assert_in_delta(0.49100076097885986, worksheet.outputs_lifestyle_h11, 0.002); end
  def test_outputs_lifestyle_i11; assert_in_delta(0.5505785354764492, worksheet.outputs_lifestyle_i11, 0.002); end
  def test_outputs_lifestyle_d13; assert_equal("Number of appliances per household", worksheet.outputs_lifestyle_d13); end
  def test_outputs_lifestyle_e13; assert_in_epsilon(5.958364024436915, worksheet.outputs_lifestyle_e13, 0.002); end
  def test_outputs_lifestyle_f13; assert_in_epsilon(3.4791820122184576, worksheet.outputs_lifestyle_f13, 0.002); end
  def test_outputs_lifestyle_g13; assert_in_epsilon(5.054404480386185, worksheet.outputs_lifestyle_g13, 0.002); end
  def test_outputs_lifestyle_h13; assert_in_epsilon(10.67674024261012, worksheet.outputs_lifestyle_h13, 0.002); end
  def test_outputs_lifestyle_i13; assert_in_epsilon(8.489513559899624, worksheet.outputs_lifestyle_i13, 0.002); end
  def test_outputs_lifestyle_j13; assert_in_epsilon(10.148322415279779, worksheet.outputs_lifestyle_j13, 0.002); end
  def test_outputs_lifestyle_d14; assert_equal("Building temperature in warm months", worksheet.outputs_lifestyle_d14); end
  def test_outputs_lifestyle_e14; assert_in_epsilon(26.5, worksheet.outputs_lifestyle_e14, 0.002); end
  def test_outputs_lifestyle_f14; assert_in_epsilon(29.0, worksheet.outputs_lifestyle_f14, 0.002); end
  def test_outputs_lifestyle_g14; assert_in_epsilon(27.411550200424607, worksheet.outputs_lifestyle_g14, 0.002); end
  def test_outputs_lifestyle_h14; assert_in_epsilon(24.1, worksheet.outputs_lifestyle_h14, 0.002); end
  def test_outputs_lifestyle_i14; assert_in_epsilon(24.1, worksheet.outputs_lifestyle_i14, 0.002); end
  def test_outputs_lifestyle_j14; assert_in_epsilon(24.1, worksheet.outputs_lifestyle_j14, 0.002); end
  def test_outputs_lifestyle_d15; assert_equal("Building temp in cold months", worksheet.outputs_lifestyle_d15); end
  def test_outputs_lifestyle_e15; assert_in_epsilon(17.5, worksheet.outputs_lifestyle_e15, 0.002); end
  def test_outputs_lifestyle_f15; assert_in_epsilon(13.0, worksheet.outputs_lifestyle_f15, 0.002); end
  def test_outputs_lifestyle_g15; assert_in_epsilon(15.8592096392357, worksheet.outputs_lifestyle_g15, 0.002); end
  def test_outputs_lifestyle_h15; assert_in_epsilon(19.900000000000002, worksheet.outputs_lifestyle_h15, 0.002); end
  def test_outputs_lifestyle_i15; assert_in_epsilon(16.9, worksheet.outputs_lifestyle_i15, 0.002); end
  def test_outputs_lifestyle_j15; assert_in_epsilon(19.175222136543017, worksheet.outputs_lifestyle_j15, 0.002); end
  def test_outputs_lifestyle_d17; assert_equal("Building insulation (GW / (M ha*℃)", worksheet.outputs_lifestyle_d17); end
  def test_outputs_lifestyle_e17; assert_in_epsilon(16.9, worksheet.outputs_lifestyle_e17, 0.002); end
  def test_outputs_lifestyle_f17; assert_in_epsilon(18.700000000000003, worksheet.outputs_lifestyle_f17, 0.002); end
  def test_outputs_lifestyle_g17; assert_in_epsilon(17.55631614430572, worksheet.outputs_lifestyle_g17, 0.002); end
  def test_outputs_lifestyle_h17; assert_in_epsilon(12.0, worksheet.outputs_lifestyle_h17, 0.002); end
  def test_outputs_lifestyle_i17; assert_in_epsilon(12.0, worksheet.outputs_lifestyle_i17, 0.002); end
  def test_outputs_lifestyle_j17; assert_in_epsilon(12.0, worksheet.outputs_lifestyle_j17, 0.002); end
  def test_outputs_lifestyle_d18; assert_equal("Building size (in metres squared)", worksheet.outputs_lifestyle_d18); end
  def test_outputs_lifestyle_e18; assert_in_epsilon(92.0, worksheet.outputs_lifestyle_e18, 0.002); end
  def test_outputs_lifestyle_f18; assert_in_epsilon(78.0, worksheet.outputs_lifestyle_f18, 0.002); end
  def test_outputs_lifestyle_g18; assert_in_epsilon(86.89531887762217, worksheet.outputs_lifestyle_g18, 0.002); end
  def test_outputs_lifestyle_h18; assert_in_epsilon(100.0, worksheet.outputs_lifestyle_h18, 0.002); end
  def test_outputs_lifestyle_i18; assert_in_epsilon(89.99999999999999, worksheet.outputs_lifestyle_i18, 0.002); end
  def test_outputs_lifestyle_j18; assert_in_epsilon(97.58407378847672, worksheet.outputs_lifestyle_j18, 0.002); end
  def test_outputs_lifestyle_e23; assert_equal("webtool.lifestyle", worksheet.outputs_lifestyle_e23); end
  def test_outputs_lifestyle_h23; assert_equal("User’s pathway", worksheet.outputs_lifestyle_h23); end
  def test_outputs_lifestyle_e25; assert_equal("2011", worksheet.outputs_lifestyle_e25); end
  def test_outputs_lifestyle_f25; assert_equal("2011", worksheet.outputs_lifestyle_f25); end
  def test_outputs_lifestyle_g25; assert_equal("Total urban & rural", worksheet.outputs_lifestyle_g25); end
  def test_outputs_lifestyle_h25; assert_equal("2050", worksheet.outputs_lifestyle_h25); end
  def test_outputs_lifestyle_i25; assert_equal("2050", worksheet.outputs_lifestyle_i25); end
  def test_outputs_lifestyle_e26; assert_equal("Urban", worksheet.outputs_lifestyle_e26); end
  def test_outputs_lifestyle_f26; assert_equal("Rural", worksheet.outputs_lifestyle_f26); end
  def test_outputs_lifestyle_h26; assert_equal("Urban", worksheet.outputs_lifestyle_h26); end
  def test_outputs_lifestyle_i26; assert_equal("Rural", worksheet.outputs_lifestyle_i26); end
  def test_outputs_lifestyle_j26; assert_equal("Total urban & rural", worksheet.outputs_lifestyle_j26); end
  def test_outputs_lifestyle_d27; assert_equal("Passenger km (millions)", worksheet.outputs_lifestyle_d27); end
  def test_outputs_lifestyle_e27; assert_in_epsilon(33365814.006759763, worksheet.outputs_lifestyle_e27, 0.002); end
  def test_outputs_lifestyle_f27; assert_in_epsilon(18849796.265677366, worksheet.outputs_lifestyle_f27, 0.002); end
  def test_outputs_lifestyle_g27; assert_in_epsilon(52215610.272437125, worksheet.outputs_lifestyle_g27, 0.002); end
  def test_outputs_lifestyle_h27; assert_in_epsilon(76506185.7763509, worksheet.outputs_lifestyle_h27, 0.002); end
  def test_outputs_lifestyle_i27; assert_in_epsilon(28251984.654623274, worksheet.outputs_lifestyle_i27, 0.002); end
  def test_outputs_lifestyle_j27; assert_in_epsilon(104758170.43097417, worksheet.outputs_lifestyle_j27, 0.002); end
  def test_outputs_lifestyle_d28; assert_equal("Total households", worksheet.outputs_lifestyle_d28); end
  def test_outputs_lifestyle_e28; assert_in_epsilon(1452719862.6209612, worksheet.outputs_lifestyle_e28, 0.002); end
  def test_outputs_lifestyle_f28; assert_in_epsilon(833660013.8618993, worksheet.outputs_lifestyle_f28, 0.002); end
  def test_outputs_lifestyle_g28; assert_in_epsilon(2286379876.4828606, worksheet.outputs_lifestyle_g28, 0.002); end
  def test_outputs_lifestyle_h28; assert_in_epsilon(2881187074.6996784, worksheet.outputs_lifestyle_h28, 0.002); end
  def test_outputs_lifestyle_i28; assert_in_epsilon(917809553.0459162, worksheet.outputs_lifestyle_i28, 0.002); end
  def test_outputs_lifestyle_j28; assert_in_epsilon(3798996627.7455945, worksheet.outputs_lifestyle_j28, 0.002); end
  def test_outputs_lifestyle_d29; assert_equal("% of households in urban/rural areas", worksheet.outputs_lifestyle_d29); end
  def test_outputs_lifestyle_e29; assert_in_delta(0.6353799198301556, worksheet.outputs_lifestyle_e29, 0.002); end
  def test_outputs_lifestyle_f29; assert_in_delta(0.36462008016984426, worksheet.outputs_lifestyle_f29, 0.002); end
  def test_outputs_lifestyle_g29; assert_in_delta(0.9999999999999999, worksheet.outputs_lifestyle_g29, 0.002); end
  def test_outputs_lifestyle_h29; assert_in_delta(0.7584073788476712, worksheet.outputs_lifestyle_h29, 0.002); end
  def test_outputs_lifestyle_i29; assert_in_delta(0.24159262115232882, worksheet.outputs_lifestyle_i29, 0.002); end
  def test_outputs_lifestyle_j29; assert_in_delta(1.0, worksheet.outputs_lifestyle_j29, 0.002); end
  def test_outputs_lifestyle_d30; assert_equal("Total population", worksheet.outputs_lifestyle_d30); end
  def test_outputs_lifestyle_e30; assert_in_epsilon(3631799656.552403, worksheet.outputs_lifestyle_e30, 0.002); end
  def test_outputs_lifestyle_f30; assert_in_epsilon(3334640055.447597, worksheet.outputs_lifestyle_f30, 0.002); end
  def test_outputs_lifestyle_g30; assert_in_epsilon(6966439712.0, worksheet.outputs_lifestyle_g30, 0.002); end
  def test_outputs_lifestyle_h30; assert_in_epsilon(6338611564.3392935, worksheet.outputs_lifestyle_h30, 0.002); end
  def test_outputs_lifestyle_i30; assert_in_epsilon(3212333435.6607065, worksheet.outputs_lifestyle_i30, 0.002); end
  def test_outputs_lifestyle_j30; assert_in_epsilon(9550945000.0, worksheet.outputs_lifestyle_j30, 0.002); end
  def test_outputs_lifestyle_d31; assert_equal("% of population in urban/rural areas", worksheet.outputs_lifestyle_d31); end
  def test_outputs_lifestyle_e31; assert_in_delta(0.5213279389034929, worksheet.outputs_lifestyle_e31, 0.002); end
  def test_outputs_lifestyle_f31; assert_in_delta(0.47867206109650706, worksheet.outputs_lifestyle_f31, 0.002); end
  def test_outputs_lifestyle_g31; assert_in_delta(1.0, worksheet.outputs_lifestyle_g31, 0.002); end
  def test_outputs_lifestyle_h31; assert_in_delta(0.663663288223238, worksheet.outputs_lifestyle_h31, 0.002); end
  def test_outputs_lifestyle_i31; assert_in_delta(0.33633671177676205, worksheet.outputs_lifestyle_i31, 0.002); end
  def test_outputs_lifestyle_j31; assert_in_delta(1.0, worksheet.outputs_lifestyle_j31, 0.002); end
  def test_front_page_y4; assert_equal("3.90.0", worksheet.front_page_y4); end
  def test_outputs_energy_flows_c8; assert_equal("Vector code energy is taken from", worksheet.outputs_energy_flows_c8); end
  def test_outputs_energy_flows_d8; assert_equal("TAKEN FROM", worksheet.outputs_energy_flows_d8); end
  def test_outputs_energy_flows_e8; assert_equal("Vector code energy is taken to", worksheet.outputs_energy_flows_e8); end
  def test_outputs_energy_flows_f8; assert_equal("TAKEN TO", worksheet.outputs_energy_flows_f8); end
  def test_outputs_energy_flows_g8; assert_equal("Technology code", worksheet.outputs_energy_flows_g8); end
  def test_outputs_energy_flows_h8; assert_equal("Technology description", worksheet.outputs_energy_flows_h8); end
  def test_outputs_energy_flows_i8; assert_equal("Energy code", worksheet.outputs_energy_flows_i8); end
  def test_outputs_energy_flows_j8; assert_equal("Description", worksheet.outputs_energy_flows_j8); end
  def test_outputs_energy_flows_k8; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_k8); end
  def test_outputs_energy_flows_l8; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_l8); end
  def test_outputs_energy_flows_m8; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_m8); end
  def test_outputs_energy_flows_v8; assert_in_epsilon(2011.0, worksheet.outputs_energy_flows_v8, 0.002); end
  def test_outputs_energy_flows_w8; assert_in_epsilon(2015.0, worksheet.outputs_energy_flows_w8, 0.002); end
  def test_outputs_energy_flows_x8; assert_in_epsilon(2020.0, worksheet.outputs_energy_flows_x8, 0.002); end
  def test_outputs_energy_flows_y8; assert_in_epsilon(2025.0, worksheet.outputs_energy_flows_y8, 0.002); end
  def test_outputs_energy_flows_z8; assert_in_epsilon(2030.0, worksheet.outputs_energy_flows_z8, 0.002); end
  def test_outputs_energy_flows_aa8; assert_in_epsilon(2035.0, worksheet.outputs_energy_flows_aa8, 0.002); end
  def test_outputs_energy_flows_ab8; assert_in_epsilon(2040.0, worksheet.outputs_energy_flows_ab8, 0.002); end
  def test_outputs_energy_flows_ac8; assert_in_epsilon(2045.0, worksheet.outputs_energy_flows_ac8, 0.002); end
  def test_outputs_energy_flows_ad8; assert_in_epsilon(2050.0, worksheet.outputs_energy_flows_ad8, 0.002); end
  def test_outputs_energy_flows_c10; assert_equal("R.01", worksheet.outputs_energy_flows_c10); end
  def test_outputs_energy_flows_d10; assert_equal("Global Solar", worksheet.outputs_energy_flows_d10); end
  def test_outputs_energy_flows_e10; assert_equal("n/a", worksheet.outputs_energy_flows_e10); end
  def test_outputs_energy_flows_f10; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f10); end
  def test_outputs_energy_flows_g10; assert_equal("n/a", worksheet.outputs_energy_flows_g10); end
  def test_outputs_energy_flows_h10; assert_equal("solar", worksheet.outputs_energy_flows_h10); end
  def test_outputs_energy_flows_i10; assert_equal("E.02", worksheet.outputs_energy_flows_i10); end
  def test_outputs_energy_flows_j10; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j10); end
  def test_outputs_energy_flows_v10; assert_in_delta(0.2274987384, worksheet.outputs_energy_flows_v10, 0.002); end
  def test_outputs_energy_flows_w10; assert_in_delta(0.5585695199999999, worksheet.outputs_energy_flows_w10, 0.002); end
  def test_outputs_energy_flows_x10; assert_in_delta(0.8540685748799999, worksheet.outputs_energy_flows_x10, 0.002); end
  def test_outputs_energy_flows_y10; assert_in_delta(0.9525630002399997, worksheet.outputs_energy_flows_y10, 0.002); end
  def test_outputs_energy_flows_z10; assert_in_epsilon(1.2794460883199998, worksheet.outputs_energy_flows_z10, 0.002); end
  def test_outputs_energy_flows_aa10; assert_in_epsilon(1.4798620943999996, worksheet.outputs_energy_flows_aa10, 0.002); end
  def test_outputs_energy_flows_ab10; assert_in_epsilon(1.6179707750399994, worksheet.outputs_energy_flows_ab10, 0.002); end
  def test_outputs_energy_flows_ac10; assert_in_epsilon(2.7839641356, worksheet.outputs_energy_flows_ac10, 0.002); end
  def test_outputs_energy_flows_ad10; assert_in_epsilon(3.8454671267999982, worksheet.outputs_energy_flows_ad10, 0.002); end
  def test_outputs_energy_flows_c12; assert_equal("R.01", worksheet.outputs_energy_flows_c12); end
  def test_outputs_energy_flows_d12; assert_equal("Global Solar", worksheet.outputs_energy_flows_d12); end
  def test_outputs_energy_flows_e12; assert_equal("L.01", worksheet.outputs_energy_flows_e12); end
  def test_outputs_energy_flows_f12; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f12); end
  def test_outputs_energy_flows_g12; assert_equal("n/a", worksheet.outputs_energy_flows_g12); end
  def test_outputs_energy_flows_h12; assert_equal("solar", worksheet.outputs_energy_flows_h12); end
  def test_outputs_energy_flows_i12; assert_equal("L.01", worksheet.outputs_energy_flows_i12); end
  def test_outputs_energy_flows_j12; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j12); end
  def test_outputs_energy_flows_v12; assert_in_delta(0.020477376, worksheet.outputs_energy_flows_v12, 0.002); end
  def test_outputs_energy_flows_w12; assert_in_delta(0.10222882078475562, worksheet.outputs_energy_flows_w12, 0.002); end
  def test_outputs_energy_flows_x12; assert_in_delta(0.6496021227566944, worksheet.outputs_energy_flows_x12, 0.002); end
  def test_outputs_energy_flows_y12; assert_in_delta(0.9377327147182917, worksheet.outputs_energy_flows_y12, 0.002); end
  def test_outputs_energy_flows_z12; assert_in_epsilon(1.2399989497774486, worksheet.outputs_energy_flows_z12, 0.002); end
  def test_outputs_energy_flows_aa12; assert_in_epsilon(1.4151415461711485, worksheet.outputs_energy_flows_aa12, 0.002); end
  def test_outputs_energy_flows_ab12; assert_in_epsilon(1.3516736881434415, worksheet.outputs_energy_flows_ab12, 0.002); end
  def test_outputs_energy_flows_ac12; assert_in_epsilon(2.1019364453115243, worksheet.outputs_energy_flows_ac12, 0.002); end
  def test_outputs_energy_flows_ad12; assert_in_epsilon(2.6089339951097914, worksheet.outputs_energy_flows_ad12, 0.002); end
  def test_outputs_energy_flows_c14; assert_equal("R.01", worksheet.outputs_energy_flows_c14); end
  def test_outputs_energy_flows_d14; assert_equal("Global Solar", worksheet.outputs_energy_flows_d14); end
  def test_outputs_energy_flows_e14; assert_equal("N/A", worksheet.outputs_energy_flows_e14); end
  def test_outputs_energy_flows_f14; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f14); end
  def test_outputs_energy_flows_g14; assert_equal("n/a", worksheet.outputs_energy_flows_g14); end
  def test_outputs_energy_flows_h14; assert_equal("Global buildings", worksheet.outputs_energy_flows_h14); end
  def test_outputs_energy_flows_i14; assert_equal("N/A", worksheet.outputs_energy_flows_i14); end
  def test_outputs_energy_flows_j14; assert_equal("Heating, cooling and hot water", worksheet.outputs_energy_flows_j14); end
  def test_outputs_energy_flows_v14; assert_in_epsilon(1.402397457347961, worksheet.outputs_energy_flows_v14, 0.002); end
  def test_outputs_energy_flows_w14; assert_in_epsilon(1.499936061157466, worksheet.outputs_energy_flows_w14, 0.002); end
  def test_outputs_energy_flows_x14; assert_in_epsilon(1.6092318816244942, worksheet.outputs_energy_flows_x14, 0.002); end
  def test_outputs_energy_flows_y14; assert_in_epsilon(1.7290249019810442, worksheet.outputs_energy_flows_y14, 0.002); end
  def test_outputs_energy_flows_z14; assert_in_epsilon(1.8567643772149665, worksheet.outputs_energy_flows_z14, 0.002); end
  def test_outputs_energy_flows_aa14; assert_in_epsilon(1.9861753862764309, worksheet.outputs_energy_flows_aa14, 0.002); end
  def test_outputs_energy_flows_ab14; assert_in_epsilon(2.12539371697905, worksheet.outputs_energy_flows_ab14, 0.002); end
  def test_outputs_energy_flows_ac14; assert_in_epsilon(2.2661251072339073, worksheet.outputs_energy_flows_ac14, 0.002); end
  def test_outputs_energy_flows_ad14; assert_in_epsilon(2.414886803884331, worksheet.outputs_energy_flows_ad14, 0.002); end
  def test_outputs_energy_flows_c16; assert_equal("R.02", worksheet.outputs_energy_flows_c16); end
  def test_outputs_energy_flows_d16; assert_equal("Global Wind", worksheet.outputs_energy_flows_d16); end
  def test_outputs_energy_flows_e16; assert_equal("n/a", worksheet.outputs_energy_flows_e16); end
  def test_outputs_energy_flows_f16; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f16); end
  def test_outputs_energy_flows_h16; assert_equal("wind", worksheet.outputs_energy_flows_h16); end
  def test_outputs_energy_flows_i16; assert_equal("E.02", worksheet.outputs_energy_flows_i16); end
  def test_outputs_energy_flows_j16; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j16); end
  def test_outputs_energy_flows_v16; assert_in_epsilon(1.5854127991199998, worksheet.outputs_energy_flows_v16, 0.002); end
  def test_outputs_energy_flows_w16; assert_in_epsilon(2.7814868639999997, worksheet.outputs_energy_flows_w16, 0.002); end
  def test_outputs_energy_flows_x16; assert_in_epsilon(3.3435277199999995, worksheet.outputs_energy_flows_x16, 0.002); end
  def test_outputs_energy_flows_y16; assert_in_epsilon(3.8953123560000003, worksheet.outputs_energy_flows_y16, 0.002); end
  def test_outputs_energy_flows_z16; assert_in_epsilon(4.530566844000001, worksheet.outputs_energy_flows_z16, 0.002); end
  def test_outputs_energy_flows_aa16; assert_in_epsilon(4.668315768, worksheet.outputs_energy_flows_aa16, 0.002); end
  def test_outputs_energy_flows_ab16; assert_in_epsilon(6.44406192, worksheet.outputs_energy_flows_ab16, 0.002); end
  def test_outputs_energy_flows_ac16; assert_in_epsilon(9.46885788, worksheet.outputs_energy_flows_ac16, 0.002); end
  def test_outputs_energy_flows_ad16; assert_in_epsilon(11.685779280000002, worksheet.outputs_energy_flows_ad16, 0.002); end
  def test_outputs_energy_flows_c18; assert_equal("R.03", worksheet.outputs_energy_flows_c18); end
  def test_outputs_energy_flows_d18; assert_equal("Global Tidal", worksheet.outputs_energy_flows_d18); end
  def test_outputs_energy_flows_e18; assert_equal("n/a", worksheet.outputs_energy_flows_e18); end
  def test_outputs_energy_flows_f18; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f18); end
  def test_outputs_energy_flows_g18; assert_equal("tidal.elec", worksheet.outputs_energy_flows_g18); end
  def test_outputs_energy_flows_h18; assert_equal("Global Tidal", worksheet.outputs_energy_flows_h18); end
  def test_outputs_energy_flows_i18; assert_equal("E.02", worksheet.outputs_energy_flows_i18); end
  def test_outputs_energy_flows_j18; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j18); end
  def test_outputs_energy_flows_v18; assert_in_delta(0.0019957026240000003, worksheet.outputs_energy_flows_v18, 0.002); end
  def test_outputs_energy_flows_w18; assert_in_delta(0.003786912, worksheet.outputs_energy_flows_w18, 0.002); end
  def test_outputs_energy_flows_x18; assert_in_delta(0.0049229856, worksheet.outputs_energy_flows_x18, 0.002); end
  def test_outputs_energy_flows_y18; assert_in_delta(0.011991888000000001, worksheet.outputs_energy_flows_y18, 0.002); end
  def test_outputs_energy_flows_z18; assert_in_delta(0.024457140000000002, worksheet.outputs_energy_flows_z18, 0.002); end
  def test_outputs_energy_flows_aa18; assert_in_delta(0.03629124, worksheet.outputs_energy_flows_aa18, 0.002); end
  def test_outputs_energy_flows_ab18; assert_in_delta(0.06627096, worksheet.outputs_energy_flows_ab18, 0.002); end
  def test_outputs_energy_flows_ac18; assert_in_delta(0.07952515200000002, worksheet.outputs_energy_flows_ac18, 0.002); end
  def test_outputs_energy_flows_ad18; assert_in_delta(0.09940644000000001, worksheet.outputs_energy_flows_ad18, 0.002); end
  def test_outputs_energy_flows_c20; assert_equal("R.04", worksheet.outputs_energy_flows_c20); end
  def test_outputs_energy_flows_d20; assert_equal("Global Wave", worksheet.outputs_energy_flows_d20); end
  def test_outputs_energy_flows_e20; assert_equal("n/a", worksheet.outputs_energy_flows_e20); end
  def test_outputs_energy_flows_f20; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f20); end
  def test_outputs_energy_flows_g20; assert_equal("wave.elec", worksheet.outputs_energy_flows_g20); end
  def test_outputs_energy_flows_h20; assert_equal("Global Wave", worksheet.outputs_energy_flows_h20); end
  def test_outputs_energy_flows_i20; assert_equal("E.02", worksheet.outputs_energy_flows_i20); end
  def test_outputs_energy_flows_j20; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j20); end
  def test_outputs_energy_flows_v20; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v20||0), 0.002); end
  def test_outputs_energy_flows_w20; assert_in_delta(0.00037869119999999997, worksheet.outputs_energy_flows_w20, 0.002); end
  def test_outputs_energy_flows_x20; assert_in_delta(0.00140115744, worksheet.outputs_energy_flows_x20, 0.002); end
  def test_outputs_energy_flows_y20; assert_in_delta(0.011802542400000003, worksheet.outputs_energy_flows_y20, 0.002); end
  def test_outputs_energy_flows_z20; assert_in_delta(0.043391700000000005, worksheet.outputs_energy_flows_z20, 0.002); end
  def test_outputs_energy_flows_aa20; assert_in_delta(0.07494930000000001, worksheet.outputs_energy_flows_aa20, 0.002); end
  def test_outputs_energy_flows_ab20; assert_in_delta(0.11202948000000003, worksheet.outputs_energy_flows_ab20, 0.002); end
  def test_outputs_energy_flows_ac20; assert_in_delta(0.19123905600000002, worksheet.outputs_energy_flows_ac20, 0.002); end
  def test_outputs_energy_flows_ad20; assert_in_delta(0.22910817600000002, worksheet.outputs_energy_flows_ad20, 0.002); end
  def test_outputs_energy_flows_c22; assert_equal("R.05", worksheet.outputs_energy_flows_c22); end
  def test_outputs_energy_flows_d22; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_d22); end
  def test_outputs_energy_flows_e22; assert_equal("n/a", worksheet.outputs_energy_flows_e22); end
  def test_outputs_energy_flows_f22; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f22); end
  def test_outputs_energy_flows_g22; assert_equal("geothermal.elec", worksheet.outputs_energy_flows_g22); end
  def test_outputs_energy_flows_h22; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_h22); end
  def test_outputs_energy_flows_i22; assert_equal("E.02", worksheet.outputs_energy_flows_i22); end
  def test_outputs_energy_flows_j22; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j22); end
  def test_outputs_energy_flows_v22; assert_in_delta(0.26331345864, worksheet.outputs_energy_flows_v22, 0.002); end
  def test_outputs_energy_flows_w22; assert_in_delta(0.334037196, worksheet.outputs_energy_flows_w22, 0.002); end
  def test_outputs_energy_flows_x22; assert_in_delta(0.4070930399999999, worksheet.outputs_energy_flows_x22, 0.002); end
  def test_outputs_energy_flows_y22; assert_in_delta(0.46389672000000004, worksheet.outputs_energy_flows_y22, 0.002); end
  def test_outputs_energy_flows_z22; assert_in_delta(0.5453153279999999, worksheet.outputs_energy_flows_z22, 0.002); end
  def test_outputs_energy_flows_aa22; assert_in_delta(0.8432190719999999, worksheet.outputs_energy_flows_aa22, 0.002); end
  def test_outputs_energy_flows_ab22; assert_in_epsilon(1.0502369279999997, worksheet.outputs_energy_flows_ab22, 0.002); end
  def test_outputs_energy_flows_ac22; assert_in_epsilon(1.4699530079999996, worksheet.outputs_energy_flows_ac22, 0.002); end
  def test_outputs_energy_flows_ad22; assert_in_epsilon(1.8454884479999996, worksheet.outputs_energy_flows_ad22, 0.002); end
  def test_outputs_energy_flows_c24; assert_equal("R.05", worksheet.outputs_energy_flows_c24); end
  def test_outputs_energy_flows_d24; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_d24); end
  def test_outputs_energy_flows_e24; assert_equal("L.01", worksheet.outputs_energy_flows_e24); end
  def test_outputs_energy_flows_f24; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f24); end
  def test_outputs_energy_flows_g24; assert_equal("geothermal.elec", worksheet.outputs_energy_flows_g24); end
  def test_outputs_energy_flows_h24; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_h24); end
  def test_outputs_energy_flows_i24; assert_equal("L.01", worksheet.outputs_energy_flows_i24); end
  def test_outputs_energy_flows_j24; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j24); end
  def test_outputs_energy_flows_v24; assert_in_epsilon(2.36982112776, worksheet.outputs_energy_flows_v24, 0.002); end
  def test_outputs_energy_flows_w24; assert_in_epsilon(2.999155579560331, worksheet.outputs_energy_flows_w24, 0.002); end
  def test_outputs_energy_flows_x24; assert_in_epsilon(3.6442041505381604, worksheet.outputs_energy_flows_x24, 0.002); end
  def test_outputs_energy_flows_y24; assert_in_epsilon(4.140361456820889, worksheet.outputs_energy_flows_y24, 0.002); end
  def test_outputs_energy_flows_z24; assert_in_epsilon(4.852612993023374, worksheet.outputs_energy_flows_z24, 0.002); end
  def test_outputs_energy_flows_aa24; assert_in_epsilon(7.481392058012148, worksheet.outputs_energy_flows_aa24, 0.002); end
  def test_outputs_energy_flows_ab24; assert_in_epsilon(9.290655341938646, worksheet.outputs_energy_flows_ab24, 0.002); end
  def test_outputs_energy_flows_ac24; assert_in_epsilon(12.965300885337358, worksheet.outputs_energy_flows_ac24, 0.002); end
  def test_outputs_energy_flows_ad24; assert_in_epsilon(16.22981466659353, worksheet.outputs_energy_flows_ad24, 0.002); end
  def test_outputs_energy_flows_c26; assert_equal("R.06", worksheet.outputs_energy_flows_c26); end
  def test_outputs_energy_flows_d26; assert_equal("Global Hydro", worksheet.outputs_energy_flows_d26); end
  def test_outputs_energy_flows_e26; assert_equal("n/a", worksheet.outputs_energy_flows_e26); end
  def test_outputs_energy_flows_f26; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f26); end
  def test_outputs_energy_flows_g26; assert_equal("hydro.elec", worksheet.outputs_energy_flows_g26); end
  def test_outputs_energy_flows_h26; assert_equal("Global Hydroelectric dam", worksheet.outputs_energy_flows_h26); end
  def test_outputs_energy_flows_i26; assert_equal("E.02", worksheet.outputs_energy_flows_i26); end
  def test_outputs_energy_flows_j26; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j26); end
  def test_outputs_energy_flows_v26; assert_in_epsilon(13.16267496, worksheet.outputs_energy_flows_v26, 0.002); end
  def test_outputs_energy_flows_w26; assert_in_epsilon(18.319186799999997, worksheet.outputs_energy_flows_w26, 0.002); end
  def test_outputs_energy_flows_x26; assert_in_epsilon(19.092663576, worksheet.outputs_energy_flows_x26, 0.002); end
  def test_outputs_energy_flows_y26; assert_in_epsilon(19.757582208000002, worksheet.outputs_energy_flows_y26, 0.002); end
  def test_outputs_energy_flows_z26; assert_in_epsilon(20.429285724, worksheet.outputs_energy_flows_z26, 0.002); end
  def test_outputs_energy_flows_aa26; assert_in_epsilon(21.100989239999997, worksheet.outputs_energy_flows_aa26, 0.002); end
  def test_outputs_energy_flows_ab26; assert_in_epsilon(21.4578741384, worksheet.outputs_energy_flows_ab26, 0.002); end
  def test_outputs_energy_flows_ac26; assert_in_epsilon(22.1906416104, worksheet.outputs_energy_flows_ac26, 0.002); end
  def test_outputs_energy_flows_ad26; assert_in_epsilon(22.984473038399997, worksheet.outputs_energy_flows_ad26, 0.002); end
  def test_outputs_energy_flows_c28; assert_equal("R.06", worksheet.outputs_energy_flows_c28); end
  def test_outputs_energy_flows_d28; assert_equal("Global Hydro", worksheet.outputs_energy_flows_d28); end
  def test_outputs_energy_flows_e28; assert_equal("E.02", worksheet.outputs_energy_flows_e28); end
  def test_outputs_energy_flows_f28; assert_equal("Storage", worksheet.outputs_energy_flows_f28); end
  def test_outputs_energy_flows_g28; assert_equal("storage.elec", worksheet.outputs_energy_flows_g28); end
  def test_outputs_energy_flows_h28; assert_equal("Global Storage unit", worksheet.outputs_energy_flows_h28); end
  def test_outputs_energy_flows_i28; assert_equal("E.02", worksheet.outputs_energy_flows_i28); end
  def test_outputs_energy_flows_j28; assert_equal("Storage", worksheet.outputs_energy_flows_j28); end
  def test_outputs_energy_flows_v28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v28||0), 0.002); end
  def test_outputs_energy_flows_w28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w28||0), 0.002); end
  def test_outputs_energy_flows_x28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x28||0), 0.002); end
  def test_outputs_energy_flows_y28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y28||0), 0.002); end
  def test_outputs_energy_flows_z28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z28||0), 0.002); end
  def test_outputs_energy_flows_aa28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa28||0), 0.002); end
  def test_outputs_energy_flows_ab28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab28||0), 0.002); end
  def test_outputs_energy_flows_ac28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac28||0), 0.002); end
  def test_outputs_energy_flows_ad28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad28||0), 0.002); end
  def test_outputs_energy_flows_c30; assert_equal("R.07", worksheet.outputs_energy_flows_c30); end
  def test_outputs_energy_flows_d30; assert_equal("Global Environmental heat", worksheet.outputs_energy_flows_d30); end
  def test_outputs_energy_flows_e30; assert_equal("n/a", worksheet.outputs_energy_flows_e30); end
  def test_outputs_energy_flows_f30; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f30); end
  def test_outputs_energy_flows_g30; assert_equal("n/a", worksheet.outputs_energy_flows_g30); end
  def test_outputs_energy_flows_h30; assert_equal("Global buildings", worksheet.outputs_energy_flows_h30); end
  def test_outputs_energy_flows_v30; assert_in_epsilon(4.838497586627763, worksheet.outputs_energy_flows_v30, 0.002); end
  def test_outputs_energy_flows_w30; assert_in_epsilon(5.5624191672949586, worksheet.outputs_energy_flows_w30, 0.002); end
  def test_outputs_energy_flows_x30; assert_in_epsilon(6.480140989923419, worksheet.outputs_energy_flows_x30, 0.002); end
  def test_outputs_energy_flows_y30; assert_in_epsilon(7.444773673480817, worksheet.outputs_energy_flows_y30, 0.002); end
  def test_outputs_energy_flows_z30; assert_in_epsilon(8.437732211728308, worksheet.outputs_energy_flows_z30, 0.002); end
  def test_outputs_energy_flows_aa30; assert_in_epsilon(9.425816566120496, worksheet.outputs_energy_flows_aa30, 0.002); end
  def test_outputs_energy_flows_ab30; assert_in_epsilon(10.415256698254726, worksheet.outputs_energy_flows_ab30, 0.002); end
  def test_outputs_energy_flows_ac30; assert_in_epsilon(11.366520423435665, worksheet.outputs_energy_flows_ac30, 0.002); end
  def test_outputs_energy_flows_ad30; assert_in_epsilon(12.290810526138456, worksheet.outputs_energy_flows_ad30, 0.002); end
  def test_outputs_energy_flows_d32; assert_equal("Forest residues", worksheet.outputs_energy_flows_d32); end
  def test_outputs_energy_flows_e32; assert_equal("Forest", worksheet.outputs_energy_flows_e32); end
  def test_outputs_energy_flows_f32; assert_equal("Solid", worksheet.outputs_energy_flows_f32); end
  def test_outputs_energy_flows_g32; assert_equal("Forest", worksheet.outputs_energy_flows_g32); end
  def test_outputs_energy_flows_h32; assert_equal("Global Native forest", worksheet.outputs_energy_flows_h32); end
  def test_outputs_energy_flows_i32; assert_equal("C.01", worksheet.outputs_energy_flows_i32); end
  def test_outputs_energy_flows_j32; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j32); end
  def test_outputs_energy_flows_v32; assert_in_epsilon(15.40635993385157, worksheet.outputs_energy_flows_v32, 0.002); end
  def test_outputs_energy_flows_w32; assert_in_epsilon(15.418599681167375, worksheet.outputs_energy_flows_w32, 0.002); end
  def test_outputs_energy_flows_x32; assert_in_epsilon(15.422069755463541, worksheet.outputs_energy_flows_x32, 0.002); end
  def test_outputs_energy_flows_y32; assert_in_epsilon(15.475219786175442, worksheet.outputs_energy_flows_y32, 0.002); end
  def test_outputs_energy_flows_z32; assert_in_epsilon(15.486347171620517, worksheet.outputs_energy_flows_z32, 0.002); end
  def test_outputs_energy_flows_aa32; assert_in_epsilon(15.369482086603531, worksheet.outputs_energy_flows_aa32, 0.002); end
  def test_outputs_energy_flows_ab32; assert_in_epsilon(15.128523777891827, worksheet.outputs_energy_flows_ab32, 0.002); end
  def test_outputs_energy_flows_ac32; assert_in_epsilon(14.955678684568271, worksheet.outputs_energy_flows_ac32, 0.002); end
  def test_outputs_energy_flows_ad32; assert_in_epsilon(14.61430400354512, worksheet.outputs_energy_flows_ad32, 0.002); end
  def test_outputs_energy_flows_d34; assert_equal("Traditional biomass", worksheet.outputs_energy_flows_d34); end
  def test_outputs_energy_flows_e34; assert_equal("Forest", worksheet.outputs_energy_flows_e34); end
  def test_outputs_energy_flows_f34; assert_equal("Solid", worksheet.outputs_energy_flows_f34); end
  def test_outputs_energy_flows_g34; assert_equal("Forest", worksheet.outputs_energy_flows_g34); end
  def test_outputs_energy_flows_h34; assert_equal("Global Native forest", worksheet.outputs_energy_flows_h34); end
  def test_outputs_energy_flows_i34; assert_equal("BM.13", worksheet.outputs_energy_flows_i34); end
  def test_outputs_energy_flows_j34; assert_equal("Global Traditional biomass", worksheet.outputs_energy_flows_j34); end
  def test_outputs_energy_flows_v34; assert_in_epsilon(21.54205008268554, worksheet.outputs_energy_flows_v34, 0.002); end
  def test_outputs_energy_flows_w34; assert_in_epsilon(20.13743480733188, worksheet.outputs_energy_flows_w34, 0.002); end
  def test_outputs_energy_flows_x34; assert_in_epsilon(18.56666346103665, worksheet.outputs_energy_flows_x34, 0.002); end
  def test_outputs_energy_flows_y34; assert_in_epsilon(16.802531298057502, worksheet.outputs_energy_flows_y34, 0.002); end
  def test_outputs_energy_flows_z34; assert_in_epsilon(15.053791367133272, worksheet.outputs_energy_flows_z34, 0.002); end
  def test_outputs_energy_flows_aa34; assert_in_epsilon(13.706714265203015, worksheet.outputs_energy_flows_aa34, 0.002); end
  def test_outputs_energy_flows_ab34; assert_in_epsilon(12.380339082789442, worksheet.outputs_energy_flows_ab34, 0.002); end
  def test_outputs_energy_flows_ac34; assert_in_epsilon(11.519817037777669, worksheet.outputs_energy_flows_ac34, 0.002); end
  def test_outputs_energy_flows_ad34; assert_in_epsilon(10.674192097173995, worksheet.outputs_energy_flows_ad34, 0.002); end
  def test_outputs_energy_flows_d36; assert_equal("Biocrops", worksheet.outputs_energy_flows_d36); end
  def test_outputs_energy_flows_f36; assert_equal("Solid", worksheet.outputs_energy_flows_f36); end
  def test_outputs_energy_flows_g36; assert_equal("arable.bio", worksheet.outputs_energy_flows_g36); end
  def test_outputs_energy_flows_h36; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h36); end
  def test_outputs_energy_flows_i36; assert_equal("C.01", worksheet.outputs_energy_flows_i36); end
  def test_outputs_energy_flows_j36; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j36); end
  def test_outputs_energy_flows_v36; assert_in_epsilon(5.7, worksheet.outputs_energy_flows_v36, 0.002); end
  def test_outputs_energy_flows_w36; assert_in_epsilon(6.132024711040255, worksheet.outputs_energy_flows_w36, 0.002); end
  def test_outputs_energy_flows_x36; assert_in_epsilon(7.415389984108577, worksheet.outputs_energy_flows_x36, 0.002); end
  def test_outputs_energy_flows_y36; assert_in_epsilon(8.797265021263524, worksheet.outputs_energy_flows_y36, 0.002); end
  def test_outputs_energy_flows_z36; assert_in_epsilon(10.281576336485953, worksheet.outputs_energy_flows_z36, 0.002); end
  def test_outputs_energy_flows_aa36; assert_in_epsilon(11.872342657342656, worksheet.outputs_energy_flows_aa36, 0.002); end
  def test_outputs_energy_flows_ab36; assert_in_epsilon(13.57367764800133, worksheet.outputs_energy_flows_ab36, 0.002); end
  def test_outputs_energy_flows_ac36; assert_in_epsilon(15.389792729309784, worksheet.outputs_energy_flows_ac36, 0.002); end
  def test_outputs_energy_flows_ad36; assert_in_epsilon(17.325, worksheet.outputs_energy_flows_ad36, 0.002); end
  def test_outputs_energy_flows_d38; assert_equal("Biocrops", worksheet.outputs_energy_flows_d38); end
  def test_outputs_energy_flows_f38; assert_equal("Liquid", worksheet.outputs_energy_flows_f38); end
  def test_outputs_energy_flows_g38; assert_equal("arable.bio", worksheet.outputs_energy_flows_g38); end
  def test_outputs_energy_flows_h38; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h38); end
  def test_outputs_energy_flows_i38; assert_equal("C.02", worksheet.outputs_energy_flows_i38); end
  def test_outputs_energy_flows_j38; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j38); end
  def test_outputs_energy_flows_v38; assert_in_epsilon(3.8000000000000003, worksheet.outputs_energy_flows_v38, 0.002); end
  def test_outputs_energy_flows_w38; assert_in_epsilon(4.088016474026838, worksheet.outputs_energy_flows_w38, 0.002); end
  def test_outputs_energy_flows_x38; assert_in_epsilon(4.656175106300735, worksheet.outputs_energy_flows_x38, 0.002); end
  def test_outputs_energy_flows_y38; assert_in_epsilon(5.198383876201173, worksheet.outputs_energy_flows_y38, 0.002); end
  def test_outputs_energy_flows_z38; assert_in_epsilon(5.7119868536033085, worksheet.outputs_energy_flows_z38, 0.002); end
  def test_outputs_energy_flows_aa38; assert_in_epsilon(6.194265734265732, worksheet.outputs_energy_flows_aa38, 0.002); end
  def test_outputs_energy_flows_ab38; assert_in_epsilon(6.642437997958098, worksheet.outputs_energy_flows_ab38, 0.002); end
  def test_outputs_energy_flows_ac38; assert_in_epsilon(7.0536550009336505, worksheet.outputs_energy_flows_ac38, 0.002); end
  def test_outputs_energy_flows_ad38; assert_in_epsilon(7.425000000000001, worksheet.outputs_energy_flows_ad38, 0.002); end
  def test_outputs_energy_flows_d40; assert_equal("Biocrops", worksheet.outputs_energy_flows_d40); end
  def test_outputs_energy_flows_f40; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f40); end
  def test_outputs_energy_flows_g40; assert_equal("arable.bio", worksheet.outputs_energy_flows_g40); end
  def test_outputs_energy_flows_h40; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h40); end
  def test_outputs_energy_flows_i40; assert_equal("L.01", worksheet.outputs_energy_flows_i40); end
  def test_outputs_energy_flows_j40; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j40); end
  def test_outputs_energy_flows_v40; assert_in_epsilon(2.375, worksheet.outputs_energy_flows_v40, 0.002); end
  def test_outputs_energy_flows_w40; assert_in_epsilon(2.3933007838448255, worksheet.outputs_energy_flows_w40, 0.002); end
  def test_outputs_energy_flows_x40; assert_in_epsilon(2.594822402611346, worksheet.outputs_energy_flows_x40, 0.002); end
  def test_outputs_energy_flows_y40; assert_in_epsilon(2.747612053490002, worksheet.outputs_energy_flows_y40, 0.002); end
  def test_outputs_energy_flows_z40; assert_in_epsilon(2.8508163994418894, worksheet.outputs_energy_flows_z40, 0.002); end
  def test_outputs_energy_flows_aa40; assert_in_epsilon(2.9035620629370626, worksheet.outputs_energy_flows_aa40, 0.002); end
  def test_outputs_energy_flows_ab40; assert_in_epsilon(2.904955034170122, worksheet.outputs_energy_flows_ab40, 0.002); end
  def test_outputs_energy_flows_ac40; assert_in_epsilon(2.8540800581812427, worksheet.outputs_energy_flows_ac40, 0.002); end
  def test_outputs_energy_flows_ad40; assert_in_epsilon(2.75, worksheet.outputs_energy_flows_ad40, 0.002); end
  def test_outputs_energy_flows_d42; assert_equal("Biocrops", worksheet.outputs_energy_flows_d42); end
  def test_outputs_energy_flows_f42; assert_equal("Global oversupply", worksheet.outputs_energy_flows_f42); end
  def test_outputs_energy_flows_g42; assert_equal("arable.bio", worksheet.outputs_energy_flows_g42); end
  def test_outputs_energy_flows_h42; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h42); end
  def test_outputs_energy_flows_i42; assert_equal("O.01", worksheet.outputs_energy_flows_i42); end
  def test_outputs_energy_flows_j42; assert_equal("Global Oversupply", worksheet.outputs_energy_flows_j42); end
  def test_outputs_energy_flows_v42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v42||0), 0.002); end
  def test_outputs_energy_flows_w42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w42||0), 0.002); end
  def test_outputs_energy_flows_x42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x42||0), 0.002); end
  def test_outputs_energy_flows_y42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y42||0), 0.002); end
  def test_outputs_energy_flows_z42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z42||0), 0.002); end
  def test_outputs_energy_flows_aa42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa42||0), 0.002); end
  def test_outputs_energy_flows_ab42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab42||0), 0.002); end
  def test_outputs_energy_flows_ac42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac42||0), 0.002); end
  def test_outputs_energy_flows_ad42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad42||0), 0.002); end
  def test_outputs_energy_flows_c44; assert_equal("n/a", worksheet.outputs_energy_flows_c44); end
  def test_outputs_energy_flows_d44; assert_equal("Food waste", worksheet.outputs_energy_flows_d44); end
  def test_outputs_energy_flows_e44; assert_equal("n/a", worksheet.outputs_energy_flows_e44); end
  def test_outputs_energy_flows_f44; assert_equal("Bio conversion", worksheet.outputs_energy_flows_f44); end
  def test_outputs_energy_flows_g44; assert_equal("Arable.food", worksheet.outputs_energy_flows_g44); end
  def test_outputs_energy_flows_h44; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_h44); end
  def test_outputs_energy_flows_i44; assert_equal("BM.09", worksheet.outputs_energy_flows_i44); end
  def test_outputs_energy_flows_j44; assert_equal("Global Dry biomass and waste", worksheet.outputs_energy_flows_j44); end
  def test_outputs_energy_flows_v44; assert_in_epsilon(4.572902149583929, worksheet.outputs_energy_flows_v44, 0.002); end
  def test_outputs_energy_flows_w44; assert_in_epsilon(5.556337852110056, worksheet.outputs_energy_flows_w44, 0.002); end
  def test_outputs_energy_flows_x44; assert_in_epsilon(6.115380610911961, worksheet.outputs_energy_flows_x44, 0.002); end
  def test_outputs_energy_flows_y44; assert_in_epsilon(6.684236933085569, worksheet.outputs_energy_flows_y44, 0.002); end
  def test_outputs_energy_flows_z44; assert_in_epsilon(7.27668025052486, worksheet.outputs_energy_flows_z44, 0.002); end
  def test_outputs_energy_flows_aa44; assert_in_epsilon(7.908820337967834, worksheet.outputs_energy_flows_aa44, 0.002); end
  def test_outputs_energy_flows_ab44; assert_in_epsilon(8.582067948795993, worksheet.outputs_energy_flows_ab44, 0.002); end
  def test_outputs_energy_flows_ac44; assert_in_epsilon(9.262417362488637, worksheet.outputs_energy_flows_ac44, 0.002); end
  def test_outputs_energy_flows_ad44; assert_in_epsilon(9.993331413711866, worksheet.outputs_energy_flows_ad44, 0.002); end
  def test_outputs_energy_flows_c46; assert_equal("n/a ", worksheet.outputs_energy_flows_c46); end
  def test_outputs_energy_flows_d46; assert_equal("Waste from animals", worksheet.outputs_energy_flows_d46); end
  def test_outputs_energy_flows_e46; assert_equal("n/a", worksheet.outputs_energy_flows_e46); end
  def test_outputs_energy_flows_f46; assert_equal("Bio conversion", worksheet.outputs_energy_flows_f46); end
  def test_outputs_energy_flows_g46; assert_equal("Pasture.food", worksheet.outputs_energy_flows_g46); end
  def test_outputs_energy_flows_h46; assert_equal("Global Pasture for animals", worksheet.outputs_energy_flows_h46); end
  def test_outputs_energy_flows_i46; assert_equal("BM.09", worksheet.outputs_energy_flows_i46); end
  def test_outputs_energy_flows_j46; assert_equal("Global Dry biomass and waste", worksheet.outputs_energy_flows_j46); end
  def test_outputs_energy_flows_v46; assert_in_delta(0.0009813223722926578, worksheet.outputs_energy_flows_v46, 0.002); end
  def test_outputs_energy_flows_w46; assert_in_delta(0.0024754766818487414, worksheet.outputs_energy_flows_w46, 0.002); end
  def test_outputs_energy_flows_x46; assert_in_delta(0.003780564255229225, worksheet.outputs_energy_flows_x46, 0.002); end
  def test_outputs_energy_flows_y46; assert_in_delta(0.005205477852583363, worksheet.outputs_energy_flows_y46, 0.002); end
  def test_outputs_energy_flows_z46; assert_in_delta(0.006784322867296367, worksheet.outputs_energy_flows_z46, 0.002); end
  def test_outputs_energy_flows_aa46; assert_in_delta(0.008578193450335498, worksheet.outputs_energy_flows_aa46, 0.002); end
  def test_outputs_energy_flows_ab46; assert_in_delta(0.010625716559795127, worksheet.outputs_energy_flows_ab46, 0.002); end
  def test_outputs_energy_flows_ac46; assert_in_delta(0.012843571321561333, worksheet.outputs_energy_flows_ac46, 0.002); end
  def test_outputs_energy_flows_ad46; assert_in_delta(0.015405748859073143, worksheet.outputs_energy_flows_ad46, 0.002); end
  def test_outputs_energy_flows_c48; assert_equal("Q.01", worksheet.outputs_energy_flows_c48); end
  def test_outputs_energy_flows_d48; assert_equal("Global Coal reserves ", worksheet.outputs_energy_flows_d48); end
  def test_outputs_energy_flows_e48; assert_equal("CFF.01", worksheet.outputs_energy_flows_e48); end
  def test_outputs_energy_flows_f48; assert_equal("Global Crude coal", worksheet.outputs_energy_flows_f48); end
  def test_outputs_energy_flows_g48; assert_equal("Coal.extract", worksheet.outputs_energy_flows_g48); end
  def test_outputs_energy_flows_h48; assert_equal("Global Coal Extraction", worksheet.outputs_energy_flows_h48); end
  def test_outputs_energy_flows_v48; assert_in_epsilon(153.2280661691447, worksheet.outputs_energy_flows_v48, 0.002); end
  def test_outputs_energy_flows_w48; assert_in_epsilon(152.81759653734753, worksheet.outputs_energy_flows_w48, 0.002); end
  def test_outputs_energy_flows_x48; assert_in_epsilon(165.94884351978203, worksheet.outputs_energy_flows_x48, 0.002); end
  def test_outputs_energy_flows_y48; assert_in_epsilon(182.297772345065, worksheet.outputs_energy_flows_y48, 0.002); end
  def test_outputs_energy_flows_z48; assert_in_epsilon(199.04766551934026, worksheet.outputs_energy_flows_z48, 0.002); end
  def test_outputs_energy_flows_aa48; assert_in_epsilon(207.23840641539584, worksheet.outputs_energy_flows_aa48, 0.002); end
  def test_outputs_energy_flows_ab48; assert_in_epsilon(216.65351249956313, worksheet.outputs_energy_flows_ab48, 0.002); end
  def test_outputs_energy_flows_ac48; assert_in_epsilon(212.1720048013599, worksheet.outputs_energy_flows_ac48, 0.002); end
  def test_outputs_energy_flows_ad48; assert_in_epsilon(215.35766205603173, worksheet.outputs_energy_flows_ad48, 0.002); end
  def test_outputs_energy_flows_c50; assert_equal("Q.01", worksheet.outputs_energy_flows_c50); end
  def test_outputs_energy_flows_d50; assert_equal("Global Coal reserves ", worksheet.outputs_energy_flows_d50); end
  def test_outputs_energy_flows_e50; assert_equal("L.02", worksheet.outputs_energy_flows_e50); end
  def test_outputs_energy_flows_f50; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f50); end
  def test_outputs_energy_flows_g50; assert_equal("Coal.extract", worksheet.outputs_energy_flows_g50); end
  def test_outputs_energy_flows_h50; assert_equal("Global Coal Extraction", worksheet.outputs_energy_flows_h50); end
  def test_outputs_energy_flows_v50; assert_in_epsilon(8.064635061533949, worksheet.outputs_energy_flows_v50, 0.002); end
  def test_outputs_energy_flows_w50; assert_in_epsilon(8.043031396702503, worksheet.outputs_energy_flows_w50, 0.002); end
  def test_outputs_energy_flows_x50; assert_in_epsilon(10.592479373603112, worksheet.outputs_energy_flows_x50, 0.002); end
  def test_outputs_energy_flows_y50; assert_in_epsilon(11.636028022025442, worksheet.outputs_energy_flows_y50, 0.002); end
  def test_outputs_energy_flows_z50; assert_in_epsilon(14.982082350918063, worksheet.outputs_energy_flows_z50, 0.002); end
  def test_outputs_energy_flows_aa50; assert_in_epsilon(15.598589730191065, worksheet.outputs_energy_flows_aa50, 0.002); end
  def test_outputs_energy_flows_ab50; assert_in_epsilon(18.83943586952722, worksheet.outputs_energy_flows_ab50, 0.002); end
  def test_outputs_energy_flows_ac50; assert_in_epsilon(18.44973954794432, worksheet.outputs_energy_flows_ac50, 0.002); end
  def test_outputs_energy_flows_ad50; assert_in_epsilon(21.299109434113007, worksheet.outputs_energy_flows_ad50, 0.002); end
  def test_outputs_energy_flows_c52; assert_equal("Q.02", worksheet.outputs_energy_flows_c52); end
  def test_outputs_energy_flows_d52; assert_equal("Global Oil reserves ", worksheet.outputs_energy_flows_d52); end
  def test_outputs_energy_flows_e52; assert_equal("CFF.02", worksheet.outputs_energy_flows_e52); end
  def test_outputs_energy_flows_f52; assert_equal("Global Crude oil", worksheet.outputs_energy_flows_f52); end
  def test_outputs_energy_flows_g52; assert_equal("Oil.extract", worksheet.outputs_energy_flows_g52); end
  def test_outputs_energy_flows_h52; assert_equal("Global Oil Extraction", worksheet.outputs_energy_flows_h52); end
  def test_outputs_energy_flows_v52; assert_in_epsilon(165.60970563819657, worksheet.outputs_energy_flows_v52, 0.002); end
  def test_outputs_energy_flows_w52; assert_in_epsilon(176.30144874569748, worksheet.outputs_energy_flows_w52, 0.002); end
  def test_outputs_energy_flows_x52; assert_in_epsilon(203.8261922449097, worksheet.outputs_energy_flows_x52, 0.002); end
  def test_outputs_energy_flows_y52; assert_in_epsilon(222.5505918451902, worksheet.outputs_energy_flows_y52, 0.002); end
  def test_outputs_energy_flows_z52; assert_in_epsilon(238.97464244692978, worksheet.outputs_energy_flows_z52, 0.002); end
  def test_outputs_energy_flows_aa52; assert_in_epsilon(252.7332030314005, worksheet.outputs_energy_flows_aa52, 0.002); end
  def test_outputs_energy_flows_ab52; assert_in_epsilon(269.2782314820385, worksheet.outputs_energy_flows_ab52, 0.002); end
  def test_outputs_energy_flows_ac52; assert_in_epsilon(287.3697582143113, worksheet.outputs_energy_flows_ac52, 0.002); end
  def test_outputs_energy_flows_ad52; assert_in_epsilon(301.4832549212603, worksheet.outputs_energy_flows_ad52, 0.002); end
  def test_outputs_energy_flows_c54; assert_equal("Q.02", worksheet.outputs_energy_flows_c54); end
  def test_outputs_energy_flows_d54; assert_equal("Global Oil reserves ", worksheet.outputs_energy_flows_d54); end
  def test_outputs_energy_flows_e54; assert_equal("L.02", worksheet.outputs_energy_flows_e54); end
  def test_outputs_energy_flows_f54; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f54); end
  def test_outputs_energy_flows_g54; assert_equal("Oil.extract", worksheet.outputs_energy_flows_g54); end
  def test_outputs_energy_flows_h54; assert_equal("Global Oil Extraction", worksheet.outputs_energy_flows_h54); end
  def test_outputs_energy_flows_v54; assert_in_epsilon(12.465246660939528, worksheet.outputs_energy_flows_v54, 0.002); end
  def test_outputs_energy_flows_w54; assert_in_epsilon(13.270001518493359, worksheet.outputs_energy_flows_w54, 0.002); end
  def test_outputs_energy_flows_x54; assert_in_epsilon(15.341756405530816, worksheet.outputs_energy_flows_x54, 0.002); end
  def test_outputs_energy_flows_y54; assert_in_epsilon(16.751119816304623, worksheet.outputs_energy_flows_y54, 0.002); end
  def test_outputs_energy_flows_z54; assert_in_epsilon(17.987338678801137, worksheet.outputs_energy_flows_z54, 0.002); end
  def test_outputs_energy_flows_aa54; assert_in_epsilon(13.301747527968445, worksheet.outputs_energy_flows_aa54, 0.002); end
  def test_outputs_energy_flows_ab54; assert_in_epsilon(14.172538499054667, worksheet.outputs_energy_flows_ab54, 0.002); end
  def test_outputs_energy_flows_ac54; assert_in_epsilon(15.124724116542723, worksheet.outputs_energy_flows_ac54, 0.002); end
  def test_outputs_energy_flows_ad54; assert_in_epsilon(15.867539732697935, worksheet.outputs_energy_flows_ad54, 0.002); end
  def test_outputs_energy_flows_c56; assert_equal("Q.03", worksheet.outputs_energy_flows_c56); end
  def test_outputs_energy_flows_d56; assert_equal("Global Gas reserves ", worksheet.outputs_energy_flows_d56); end
  def test_outputs_energy_flows_e56; assert_equal("CFF.03", worksheet.outputs_energy_flows_e56); end
  def test_outputs_energy_flows_f56; assert_equal("Global Unprocessed gas", worksheet.outputs_energy_flows_f56); end
  def test_outputs_energy_flows_g56; assert_equal("NaturalGas.extract", worksheet.outputs_energy_flows_g56); end
  def test_outputs_energy_flows_h56; assert_equal("Global Natural Gas Extraction", worksheet.outputs_energy_flows_h56); end
  def test_outputs_energy_flows_v56; assert_in_epsilon(92.30014036705676, worksheet.outputs_energy_flows_v56, 0.002); end
  def test_outputs_energy_flows_w56; assert_in_epsilon(94.05759099813697, worksheet.outputs_energy_flows_w56, 0.002); end
  def test_outputs_energy_flows_x56; assert_in_epsilon(104.38218323491681, worksheet.outputs_energy_flows_x56, 0.002); end
  def test_outputs_energy_flows_y56; assert_in_epsilon(114.63858704655944, worksheet.outputs_energy_flows_y56, 0.002); end
  def test_outputs_energy_flows_z56; assert_in_epsilon(126.26347262427632, worksheet.outputs_energy_flows_z56, 0.002); end
  def test_outputs_energy_flows_aa56; assert_in_epsilon(137.13634377526768, worksheet.outputs_energy_flows_aa56, 0.002); end
  def test_outputs_energy_flows_ab56; assert_in_epsilon(148.50565535934888, worksheet.outputs_energy_flows_ab56, 0.002); end
  def test_outputs_energy_flows_ac56; assert_in_epsilon(158.37968149926337, worksheet.outputs_energy_flows_ac56, 0.002); end
  def test_outputs_energy_flows_ad56; assert_in_epsilon(170.32710713702966, worksheet.outputs_energy_flows_ad56, 0.002); end
  def test_outputs_energy_flows_c58; assert_equal("Q.03", worksheet.outputs_energy_flows_c58); end
  def test_outputs_energy_flows_d58; assert_equal("Global Gas reserves ", worksheet.outputs_energy_flows_d58); end
  def test_outputs_energy_flows_e58; assert_equal("L.02", worksheet.outputs_energy_flows_e58); end
  def test_outputs_energy_flows_f58; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f58); end
  def test_outputs_energy_flows_g58; assert_equal("NaturalGas.extract", worksheet.outputs_energy_flows_g58); end
  def test_outputs_energy_flows_h58; assert_equal("Global Natural Gas Extraction", worksheet.outputs_energy_flows_h58); end
  def test_outputs_energy_flows_v58; assert_in_epsilon(27.570171797952014, worksheet.outputs_energy_flows_v58, 0.002); end
  def test_outputs_energy_flows_w58; assert_in_epsilon(28.09512458385909, worksheet.outputs_energy_flows_w58, 0.002); end
  def test_outputs_energy_flows_x58; assert_in_epsilon(31.179093693546562, worksheet.outputs_energy_flows_x58, 0.002); end
  def test_outputs_energy_flows_y58; assert_in_epsilon(32.33396044902959, worksheet.outputs_energy_flows_y58, 0.002); end
  def test_outputs_energy_flows_z58; assert_in_epsilon(31.565868156069058, worksheet.outputs_energy_flows_z58, 0.002); end
  def test_outputs_energy_flows_aa58; assert_in_epsilon(34.284085943816905, worksheet.outputs_energy_flows_aa58, 0.002); end
  def test_outputs_energy_flows_ab58; assert_in_epsilon(32.598802395954635, worksheet.outputs_energy_flows_ab58, 0.002); end
  def test_outputs_energy_flows_ac58; assert_in_epsilon(34.76627154861879, worksheet.outputs_energy_flows_ac58, 0.002); end
  def test_outputs_energy_flows_ad58; assert_in_epsilon(37.38887717642115, worksheet.outputs_energy_flows_ad58, 0.002); end
  def test_outputs_energy_flows_c60; assert_equal("CFF.01", worksheet.outputs_energy_flows_c60); end
  def test_outputs_energy_flows_d60; assert_equal("Global Crude coal", worksheet.outputs_energy_flows_d60); end
  def test_outputs_energy_flows_e60; assert_equal("FF.01", worksheet.outputs_energy_flows_e60); end
  def test_outputs_energy_flows_f60; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_f60); end
  def test_outputs_energy_flows_g60; assert_equal("Coal.wash", worksheet.outputs_energy_flows_g60); end
  def test_outputs_energy_flows_h60; assert_equal("Global Coal washeries", worksheet.outputs_energy_flows_h60); end
  def test_outputs_energy_flows_v60; assert_in_epsilon(145.56666286068747, worksheet.outputs_energy_flows_v60, 0.002); end
  def test_outputs_energy_flows_w60; assert_in_epsilon(145.17671671048015, worksheet.outputs_energy_flows_w60, 0.002); end
  def test_outputs_energy_flows_x60; assert_in_epsilon(155.9919129085951, worksheet.outputs_energy_flows_x60, 0.002); end
  def test_outputs_energy_flows_y60; assert_in_epsilon(171.35990600436108, worksheet.outputs_energy_flows_y60, 0.002); end
  def test_outputs_energy_flows_z60; assert_in_epsilon(185.11432893298644, worksheet.outputs_energy_flows_z60, 0.002); end
  def test_outputs_energy_flows_aa60; assert_in_epsilon(192.73171796631814, worksheet.outputs_energy_flows_aa60, 0.002); end
  def test_outputs_energy_flows_ab60; assert_in_epsilon(199.3212314995981, worksheet.outputs_energy_flows_ab60, 0.002); end
  def test_outputs_energy_flows_ac60; assert_in_epsilon(195.19824441725112, worksheet.outputs_energy_flows_ac60, 0.002); end
  def test_outputs_energy_flows_ad60; assert_in_epsilon(195.97547247098888, worksheet.outputs_energy_flows_ad60, 0.002); end
  def test_outputs_energy_flows_c62; assert_equal("CFF.01", worksheet.outputs_energy_flows_c62); end
  def test_outputs_energy_flows_d62; assert_equal("Global Crude coal", worksheet.outputs_energy_flows_d62); end
  def test_outputs_energy_flows_e62; assert_equal("L.02", worksheet.outputs_energy_flows_e62); end
  def test_outputs_energy_flows_f62; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f62); end
  def test_outputs_energy_flows_g62; assert_equal("Coal.wash", worksheet.outputs_energy_flows_g62); end
  def test_outputs_energy_flows_h62; assert_equal("Global Coal washeries", worksheet.outputs_energy_flows_h62); end
  def test_outputs_energy_flows_v62; assert_in_epsilon(7.661403308457238, worksheet.outputs_energy_flows_v62, 0.002); end
  def test_outputs_energy_flows_w62; assert_in_epsilon(7.640879826867376, worksheet.outputs_energy_flows_w62, 0.002); end
  def test_outputs_energy_flows_x62; assert_in_epsilon(9.95693061118692, worksheet.outputs_energy_flows_x62, 0.002); end
  def test_outputs_energy_flows_y62; assert_in_epsilon(10.93786634070392, worksheet.outputs_energy_flows_y62, 0.002); end
  def test_outputs_energy_flows_z62; assert_in_epsilon(13.933336586353818, worksheet.outputs_energy_flows_z62, 0.002); end
  def test_outputs_energy_flows_aa62; assert_in_epsilon(14.5066884490777, worksheet.outputs_energy_flows_aa62, 0.002); end
  def test_outputs_energy_flows_ab62; assert_in_epsilon(17.332280999965036, worksheet.outputs_energy_flows_ab62, 0.002); end
  def test_outputs_energy_flows_ac62; assert_in_epsilon(16.973760384108772, worksheet.outputs_energy_flows_ac62, 0.002); end
  def test_outputs_energy_flows_ad62; assert_in_epsilon(19.382189585042852, worksheet.outputs_energy_flows_ad62, 0.002); end
  def test_outputs_energy_flows_c64; assert_equal("CFF.02", worksheet.outputs_energy_flows_c64); end
  def test_outputs_energy_flows_d64; assert_equal("Global Crude oil", worksheet.outputs_energy_flows_d64); end
  def test_outputs_energy_flows_e64; assert_equal("FF.02", worksheet.outputs_energy_flows_e64); end
  def test_outputs_energy_flows_f64; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_f64); end
  def test_outputs_energy_flows_g64; assert_equal("Oil.refine", worksheet.outputs_energy_flows_g64); end
  def test_outputs_energy_flows_h64; assert_equal("Global Oil refineries", worksheet.outputs_energy_flows_h64); end
  def test_outputs_energy_flows_v64; assert_in_epsilon(153.52214823197144, worksheet.outputs_energy_flows_v64, 0.002); end
  def test_outputs_energy_flows_w64; assert_in_epsilon(163.96034733349867, worksheet.outputs_energy_flows_w64, 0.002); end
  def test_outputs_energy_flows_x64; assert_in_epsilon(189.55835878776602, worksheet.outputs_energy_flows_x64, 0.002); end
  def test_outputs_energy_flows_y64; assert_in_epsilon(206.97205041602692, worksheet.outputs_energy_flows_y64, 0.002); end
  def test_outputs_energy_flows_z64; assert_in_epsilon(222.2464174756447, worksheet.outputs_energy_flows_z64, 0.002); end
  def test_outputs_energy_flows_aa64; assert_in_epsilon(237.56921084951645, worksheet.outputs_energy_flows_aa64, 0.002); end
  def test_outputs_energy_flows_ab64; assert_in_epsilon(253.12153759311616, worksheet.outputs_energy_flows_ab64, 0.002); end
  def test_outputs_energy_flows_ac64; assert_in_epsilon(270.12757272145257, worksheet.outputs_energy_flows_ac64, 0.002); end
  def test_outputs_energy_flows_ad64; assert_in_epsilon(283.39425962598466, worksheet.outputs_energy_flows_ad64, 0.002); end
  def test_outputs_energy_flows_c66; assert_equal("CFF.02", worksheet.outputs_energy_flows_c66); end
  def test_outputs_energy_flows_d66; assert_equal("Global Crude oil", worksheet.outputs_energy_flows_d66); end
  def test_outputs_energy_flows_e66; assert_equal("L.02", worksheet.outputs_energy_flows_e66); end
  def test_outputs_energy_flows_f66; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f66); end
  def test_outputs_energy_flows_g66; assert_equal("Oil.refine", worksheet.outputs_energy_flows_g66); end
  def test_outputs_energy_flows_h66; assert_equal("Global Oil refineries", worksheet.outputs_energy_flows_h66); end
  def test_outputs_energy_flows_v66; assert_in_epsilon(12.08755740622513, worksheet.outputs_energy_flows_v66, 0.002); end
  def test_outputs_energy_flows_w66; assert_in_epsilon(12.34110141219881, worksheet.outputs_energy_flows_w66, 0.002); end
  def test_outputs_energy_flows_x66; assert_in_epsilon(14.267833457143666, worksheet.outputs_energy_flows_x66, 0.002); end
  def test_outputs_energy_flows_y66; assert_in_epsilon(15.578541429163295, worksheet.outputs_energy_flows_y66, 0.002); end
  def test_outputs_energy_flows_z66; assert_in_epsilon(16.728224971285073, worksheet.outputs_energy_flows_z66, 0.002); end
  def test_outputs_energy_flows_aa66; assert_in_epsilon(15.163992181884055, worksheet.outputs_energy_flows_aa66, 0.002); end
  def test_outputs_energy_flows_ab66; assert_in_epsilon(16.156693888922348, worksheet.outputs_energy_flows_ab66, 0.002); end
  def test_outputs_energy_flows_ac66; assert_in_epsilon(17.24218549285871, worksheet.outputs_energy_flows_ac66, 0.002); end
  def test_outputs_energy_flows_ad66; assert_in_epsilon(18.08899529527565, worksheet.outputs_energy_flows_ad66, 0.002); end
  def test_outputs_energy_flows_c68; assert_equal("CFF.03", worksheet.outputs_energy_flows_c68); end
  def test_outputs_energy_flows_d68; assert_equal("Global Unprocessed gas", worksheet.outputs_energy_flows_d68); end
  def test_outputs_energy_flows_e68; assert_equal("FF.03", worksheet.outputs_energy_flows_e68); end
  def test_outputs_energy_flows_f68; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_f68); end
  def test_outputs_energy_flows_g68; assert_equal("Natural.gas.process", worksheet.outputs_energy_flows_g68); end
  def test_outputs_energy_flows_h68; assert_equal("Global Natural gas processing plants", worksheet.outputs_energy_flows_h68); end
  def test_outputs_energy_flows_v68; assert_in_epsilon(90.45413755971562, worksheet.outputs_energy_flows_v68, 0.002); end
  def test_outputs_energy_flows_w68; assert_in_epsilon(92.17643917817423, worksheet.outputs_energy_flows_w68, 0.002); end
  def test_outputs_energy_flows_x68; assert_in_epsilon(102.29453957021848, worksheet.outputs_energy_flows_x68, 0.002); end
  def test_outputs_energy_flows_y68; assert_in_epsilon(112.34581530562825, worksheet.outputs_energy_flows_y68, 0.002); end
  def test_outputs_energy_flows_z68; assert_in_epsilon(123.73820317179079, worksheet.outputs_energy_flows_z68, 0.002); end
  def test_outputs_energy_flows_aa68; assert_in_epsilon(134.39361689976232, worksheet.outputs_energy_flows_aa68, 0.002); end
  def test_outputs_energy_flows_ab68; assert_in_epsilon(145.5355422521619, worksheet.outputs_energy_flows_ab68, 0.002); end
  def test_outputs_energy_flows_ac68; assert_in_epsilon(155.2120878692781, worksheet.outputs_energy_flows_ac68, 0.002); end
  def test_outputs_energy_flows_ad68; assert_in_epsilon(166.92056499428907, worksheet.outputs_energy_flows_ad68, 0.002); end
  def test_outputs_energy_flows_c70; assert_equal("CFF.03", worksheet.outputs_energy_flows_c70); end
  def test_outputs_energy_flows_d70; assert_equal("Global Unprocessed gas", worksheet.outputs_energy_flows_d70); end
  def test_outputs_energy_flows_e70; assert_equal("L.02", worksheet.outputs_energy_flows_e70); end
  def test_outputs_energy_flows_f70; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f70); end
  def test_outputs_energy_flows_g70; assert_equal("Natural.gas.process", worksheet.outputs_energy_flows_g70); end
  def test_outputs_energy_flows_h70; assert_equal("Global Natural gas processing plants", worksheet.outputs_energy_flows_h70); end
  def test_outputs_energy_flows_v70; assert_in_epsilon(1.8460028073411365, worksheet.outputs_energy_flows_v70, 0.002); end
  def test_outputs_energy_flows_w70; assert_in_epsilon(1.8811518199627386, worksheet.outputs_energy_flows_w70, 0.002); end
  def test_outputs_energy_flows_x70; assert_in_epsilon(2.0876436646983336, worksheet.outputs_energy_flows_x70, 0.002); end
  def test_outputs_energy_flows_y70; assert_in_epsilon(2.2927717409311867, worksheet.outputs_energy_flows_y70, 0.002); end
  def test_outputs_energy_flows_z70; assert_in_epsilon(2.5252694524855315, worksheet.outputs_energy_flows_z70, 0.002); end
  def test_outputs_energy_flows_aa70; assert_in_epsilon(2.7427268755053547, worksheet.outputs_energy_flows_aa70, 0.002); end
  def test_outputs_energy_flows_ab70; assert_in_epsilon(2.9701131071869895, worksheet.outputs_energy_flows_ab70, 0.002); end
  def test_outputs_energy_flows_ac70; assert_in_epsilon(3.1675936299852765, worksheet.outputs_energy_flows_ac70, 0.002); end
  def test_outputs_energy_flows_ad70; assert_in_epsilon(3.406542142740591, worksheet.outputs_energy_flows_ad70, 0.002); end
  def test_outputs_energy_flows_c72; assert_equal("FF.01", worksheet.outputs_energy_flows_c72); end
  def test_outputs_energy_flows_d72; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d72); end
  def test_outputs_energy_flows_e72; assert_equal("n/a", worksheet.outputs_energy_flows_e72); end
  def test_outputs_energy_flows_f72; assert_equal("Solid", worksheet.outputs_energy_flows_f72); end
  def test_outputs_energy_flows_g72; assert_equal("coal.network", worksheet.outputs_energy_flows_g72); end
  def test_outputs_energy_flows_h72; assert_equal("Global Coal distribution network", worksheet.outputs_energy_flows_h72); end
  def test_outputs_energy_flows_i72; assert_equal("C.01", worksheet.outputs_energy_flows_i72); end
  def test_outputs_energy_flows_j72; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j72); end
  def test_outputs_energy_flows_v72; assert_in_epsilon(145.44104063433724, worksheet.outputs_energy_flows_v72, 0.002); end
  def test_outputs_energy_flows_w72; assert_in_epsilon(145.08371804721187, worksheet.outputs_energy_flows_w72, 0.002); end
  def test_outputs_energy_flows_x72; assert_in_epsilon(155.92306352066691, worksheet.outputs_energy_flows_x72, 0.002); end
  def test_outputs_energy_flows_y72; assert_in_epsilon(171.30780102360174, worksheet.outputs_energy_flows_y72, 0.002); end
  def test_outputs_energy_flows_z72; assert_in_epsilon(185.07555095966407, worksheet.outputs_energy_flows_z72, 0.002); end
  def test_outputs_energy_flows_aa72; assert_in_epsilon(192.7039050117078, worksheet.outputs_energy_flows_aa72, 0.002); end
  def test_outputs_energy_flows_ab72; assert_in_epsilon(199.30141679329938, worksheet.outputs_energy_flows_ab72, 0.002); end
  def test_outputs_energy_flows_ac72; assert_in_epsilon(195.18487712238593, worksheet.outputs_energy_flows_ac72, 0.002); end
  def test_outputs_energy_flows_ad72; assert_in_epsilon(195.9662390180043, worksheet.outputs_energy_flows_ad72, 0.002); end
  def test_outputs_energy_flows_c74; assert_equal("FF.01", worksheet.outputs_energy_flows_c74); end
  def test_outputs_energy_flows_d74; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d74); end
  def test_outputs_energy_flows_e74; assert_equal("L.02", worksheet.outputs_energy_flows_e74); end
  def test_outputs_energy_flows_f74; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f74); end
  def test_outputs_energy_flows_g74; assert_equal("coal.network", worksheet.outputs_energy_flows_g74); end
  def test_outputs_energy_flows_h74; assert_equal("Global Coal distribution network", worksheet.outputs_energy_flows_h74); end
  def test_outputs_energy_flows_i74; assert_equal("C.01", worksheet.outputs_energy_flows_i74); end
  def test_outputs_energy_flows_j74; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j74); end
  def test_outputs_energy_flows_v74; assert_in_delta(0.125622226350218, worksheet.outputs_energy_flows_v74, 0.002); end
  def test_outputs_energy_flows_w74; assert_in_delta(0.09299866326826281, worksheet.outputs_energy_flows_w74, 0.002); end
  def test_outputs_energy_flows_x74; assert_in_delta(0.06884938792818569, worksheet.outputs_energy_flows_x74, 0.002); end
  def test_outputs_energy_flows_y74; assert_in_delta(0.052104980759338705, worksheet.outputs_energy_flows_y74, 0.002); end
  def test_outputs_energy_flows_z74; assert_in_delta(0.03877797332237871, worksheet.outputs_energy_flows_z74, 0.002); end
  def test_outputs_energy_flows_aa74; assert_in_delta(0.027812954610339786, worksheet.outputs_energy_flows_aa74, 0.002); end
  def test_outputs_energy_flows_ab74; assert_in_delta(0.01981470629872326, worksheet.outputs_energy_flows_ab74, 0.002); end
  def test_outputs_energy_flows_ac74; assert_in_delta(0.013367294865189738, worksheet.outputs_energy_flows_ac74, 0.002); end
  def test_outputs_energy_flows_ad74; assert_in_delta(0.009233452984567549, worksheet.outputs_energy_flows_ad74, 0.002); end
  def test_outputs_energy_flows_c76; assert_equal("FF.02", worksheet.outputs_energy_flows_c76); end
  def test_outputs_energy_flows_d76; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d76); end
  def test_outputs_energy_flows_e76; assert_equal("n/a", worksheet.outputs_energy_flows_e76); end
  def test_outputs_energy_flows_f76; assert_equal("Liquid", worksheet.outputs_energy_flows_f76); end
  def test_outputs_energy_flows_g76; assert_equal("oil.network", worksheet.outputs_energy_flows_g76); end
  def test_outputs_energy_flows_h76; assert_equal("Global Oil distribution network", worksheet.outputs_energy_flows_h76); end
  def test_outputs_energy_flows_i76; assert_equal("C.02", worksheet.outputs_energy_flows_i76); end
  def test_outputs_energy_flows_j76; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j76); end
  def test_outputs_energy_flows_v76; assert_in_epsilon(153.2349369249942, worksheet.outputs_energy_flows_v76, 0.002); end
  def test_outputs_energy_flows_w76; assert_in_epsilon(163.66503500518687, worksheet.outputs_energy_flows_w76, 0.002); end
  def test_outputs_energy_flows_x76; assert_in_epsilon(189.23276627151844, worksheet.outputs_energy_flows_x76, 0.002); end
  def test_outputs_energy_flows_y76; assert_in_epsilon(206.63302659678774, worksheet.outputs_energy_flows_y76, 0.002); end
  def test_outputs_energy_flows_z76; assert_in_epsilon(221.89925026265848, worksheet.outputs_energy_flows_z76, 0.002); end
  def test_outputs_energy_flows_aa76; assert_in_epsilon(237.2153129298292, worksheet.outputs_energy_flows_aa76, 0.002); end
  def test_outputs_energy_flows_ab76; assert_in_epsilon(252.76195439260596, worksheet.outputs_energy_flows_ab76, 0.002); end
  def test_outputs_energy_flows_ac76; assert_in_epsilon(269.76162397564264, worksheet.outputs_energy_flows_ac76, 0.002); end
  def test_outputs_energy_flows_ad76; assert_in_epsilon(283.02814076292407, worksheet.outputs_energy_flows_ad76, 0.002); end
  def test_outputs_energy_flows_c78; assert_equal("FF.02", worksheet.outputs_energy_flows_c78); end
  def test_outputs_energy_flows_d78; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d78); end
  def test_outputs_energy_flows_e78; assert_equal("L.02", worksheet.outputs_energy_flows_e78); end
  def test_outputs_energy_flows_f78; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f78); end
  def test_outputs_energy_flows_g78; assert_equal("oil.network", worksheet.outputs_energy_flows_g78); end
  def test_outputs_energy_flows_h78; assert_equal("Global Oil distribution network", worksheet.outputs_energy_flows_h78); end
  def test_outputs_energy_flows_i78; assert_equal("C.02", worksheet.outputs_energy_flows_i78); end
  def test_outputs_energy_flows_j78; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j78); end
  def test_outputs_energy_flows_v78; assert_in_delta(0.28721130697725517, worksheet.outputs_energy_flows_v78, 0.002); end
  def test_outputs_energy_flows_w78; assert_in_delta(0.2953123283118195, worksheet.outputs_energy_flows_w78, 0.002); end
  def test_outputs_energy_flows_x78; assert_in_delta(0.32559251624758084, worksheet.outputs_energy_flows_x78, 0.002); end
  def test_outputs_energy_flows_y78; assert_in_delta(0.33902381923918, worksheet.outputs_energy_flows_y78, 0.002); end
  def test_outputs_energy_flows_z78; assert_in_delta(0.3471672129862111, worksheet.outputs_energy_flows_z78, 0.002); end
  def test_outputs_energy_flows_aa78; assert_in_delta(0.35389791968725565, worksheet.outputs_energy_flows_aa78, 0.002); end
  def test_outputs_energy_flows_ab78; assert_in_delta(0.35958320051019155, worksheet.outputs_energy_flows_ab78, 0.002); end
  def test_outputs_energy_flows_ac78; assert_in_delta(0.3659487458099193, worksheet.outputs_energy_flows_ac78, 0.002); end
  def test_outputs_energy_flows_ad78; assert_in_delta(0.36611886306056546, worksheet.outputs_energy_flows_ad78, 0.002); end
  def test_outputs_energy_flows_c80; assert_equal("FF.03", worksheet.outputs_energy_flows_c80); end
  def test_outputs_energy_flows_d80; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d80); end
  def test_outputs_energy_flows_e80; assert_equal("n/a", worksheet.outputs_energy_flows_e80); end
  def test_outputs_energy_flows_f80; assert_equal("Gas", worksheet.outputs_energy_flows_f80); end
  def test_outputs_energy_flows_g80; assert_equal("gas.nework", worksheet.outputs_energy_flows_g80); end
  def test_outputs_energy_flows_h80; assert_equal("Global Gas distribution network", worksheet.outputs_energy_flows_h80); end
  def test_outputs_energy_flows_i80; assert_equal("C.03", worksheet.outputs_energy_flows_i80); end
  def test_outputs_energy_flows_j80; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j80); end
  def test_outputs_energy_flows_v80; assert_in_epsilon(89.86569697591732, worksheet.outputs_energy_flows_v80, 0.002); end
  def test_outputs_energy_flows_w80; assert_in_epsilon(91.57116986191289, worksheet.outputs_energy_flows_w80, 0.002); end
  def test_outputs_energy_flows_x80; assert_in_epsilon(101.61494637914824, worksheet.outputs_energy_flows_x80, 0.002); end
  def test_outputs_energy_flows_y80; assert_in_epsilon(111.59068673037626, worksheet.outputs_energy_flows_y80, 0.002); end
  def test_outputs_energy_flows_z80; assert_in_epsilon(122.89674050832012, worksheet.outputs_energy_flows_z80, 0.002); end
  def test_outputs_energy_flows_aa80; assert_in_epsilon(133.46896923997195, worksheet.outputs_energy_flows_aa80, 0.002); end
  def test_outputs_energy_flows_ab80; assert_in_epsilon(144.52248874371463, worksheet.outputs_energy_flows_ab80, 0.002); end
  def test_outputs_energy_flows_ac80; assert_in_epsilon(154.11899952783858, worksheet.outputs_energy_flows_ac80, 0.002); end
  def test_outputs_energy_flows_ad80; assert_in_epsilon(165.7312279170951, worksheet.outputs_energy_flows_ad80, 0.002); end
  def test_outputs_energy_flows_c82; assert_equal("FF.03", worksheet.outputs_energy_flows_c82); end
  def test_outputs_energy_flows_d82; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d82); end
  def test_outputs_energy_flows_e82; assert_equal("L.02", worksheet.outputs_energy_flows_e82); end
  def test_outputs_energy_flows_f82; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f82); end
  def test_outputs_energy_flows_g82; assert_equal("gas.nework", worksheet.outputs_energy_flows_g82); end
  def test_outputs_energy_flows_h82; assert_equal("Global Gas distribution network", worksheet.outputs_energy_flows_h82); end
  def test_outputs_energy_flows_i82; assert_equal("C.03", worksheet.outputs_energy_flows_i82); end
  def test_outputs_energy_flows_j82; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j82); end
  def test_outputs_energy_flows_v82; assert_in_delta(0.5884405837983065, worksheet.outputs_energy_flows_v82, 0.002); end
  def test_outputs_energy_flows_w82; assert_in_delta(0.6052693162613485, worksheet.outputs_energy_flows_w82, 0.002); end
  def test_outputs_energy_flows_x82; assert_in_delta(0.6795931910702381, worksheet.outputs_energy_flows_x82, 0.002); end
  def test_outputs_energy_flows_y82; assert_in_delta(0.7551285752519823, worksheet.outputs_energy_flows_y82, 0.002); end
  def test_outputs_energy_flows_z82; assert_in_delta(0.841462663470667, worksheet.outputs_energy_flows_z82, 0.002); end
  def test_outputs_energy_flows_aa82; assert_in_delta(0.9246476597903701, worksheet.outputs_energy_flows_aa82, 0.002); end
  def test_outputs_energy_flows_ab82; assert_in_epsilon(1.0130535084472667, worksheet.outputs_energy_flows_ab82, 0.002); end
  def test_outputs_energy_flows_ac82; assert_in_epsilon(1.0930883414394972, worksheet.outputs_energy_flows_ac82, 0.002); end
  def test_outputs_energy_flows_ad82; assert_in_epsilon(1.1893370771939409, worksheet.outputs_energy_flows_ad82, 0.002); end
  def test_outputs_energy_flows_c84; assert_equal("n/a ", worksheet.outputs_energy_flows_c84); end
  def test_outputs_energy_flows_d84; assert_equal("Bio conversion", worksheet.outputs_energy_flows_d84); end
  def test_outputs_energy_flows_e84; assert_equal("n/a ", worksheet.outputs_energy_flows_e84); end
  def test_outputs_energy_flows_f84; assert_equal("Solid", worksheet.outputs_energy_flows_f84); end
  def test_outputs_energy_flows_g84; assert_equal("n/a", worksheet.outputs_energy_flows_g84); end
  def test_outputs_energy_flows_h84; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_h84); end
  def test_outputs_energy_flows_i84; assert_equal("C.01", worksheet.outputs_energy_flows_i84); end
  def test_outputs_energy_flows_j84; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j84); end
  def test_outputs_energy_flows_v84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v84||0), 0.002); end
  def test_outputs_energy_flows_w84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w84||0), 0.002); end
  def test_outputs_energy_flows_x84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x84||0), 0.002); end
  def test_outputs_energy_flows_y84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y84||0), 0.002); end
  def test_outputs_energy_flows_z84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z84||0), 0.002); end
  def test_outputs_energy_flows_aa84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa84||0), 0.002); end
  def test_outputs_energy_flows_ab84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab84||0), 0.002); end
  def test_outputs_energy_flows_ac84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac84||0), 0.002); end
  def test_outputs_energy_flows_ad84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad84||0), 0.002); end
  def test_outputs_energy_flows_c86; assert_equal("n/a ", worksheet.outputs_energy_flows_c86); end
  def test_outputs_energy_flows_d86; assert_equal("Bio conversion", worksheet.outputs_energy_flows_d86); end
  def test_outputs_energy_flows_e86; assert_equal("n/a ", worksheet.outputs_energy_flows_e86); end
  def test_outputs_energy_flows_f86; assert_equal("Liquid", worksheet.outputs_energy_flows_f86); end
  def test_outputs_energy_flows_g86; assert_equal("n/a", worksheet.outputs_energy_flows_g86); end
  def test_outputs_energy_flows_h86; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_h86); end
  def test_outputs_energy_flows_i86; assert_equal("C.02", worksheet.outputs_energy_flows_i86); end
  def test_outputs_energy_flows_j86; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j86); end
  def test_outputs_energy_flows_v86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v86||0), 0.002); end
  def test_outputs_energy_flows_w86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w86||0), 0.002); end
  def test_outputs_energy_flows_x86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x86||0), 0.002); end
  def test_outputs_energy_flows_y86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y86||0), 0.002); end
  def test_outputs_energy_flows_z86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z86||0), 0.002); end
  def test_outputs_energy_flows_aa86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa86||0), 0.002); end
  def test_outputs_energy_flows_ab86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab86||0), 0.002); end
  def test_outputs_energy_flows_ac86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac86||0), 0.002); end
  def test_outputs_energy_flows_ad86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad86||0), 0.002); end
  def test_outputs_energy_flows_c88; assert_equal("n/a ", worksheet.outputs_energy_flows_c88); end
  def test_outputs_energy_flows_d88; assert_equal("Bio conversion", worksheet.outputs_energy_flows_d88); end
  def test_outputs_energy_flows_e88; assert_equal("n/a ", worksheet.outputs_energy_flows_e88); end
  def test_outputs_energy_flows_f88; assert_equal("Gas", worksheet.outputs_energy_flows_f88); end
  def test_outputs_energy_flows_g88; assert_equal("n/a", worksheet.outputs_energy_flows_g88); end
  def test_outputs_energy_flows_h88; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_h88); end
  def test_outputs_energy_flows_i88; assert_equal("C.03", worksheet.outputs_energy_flows_i88); end
  def test_outputs_energy_flows_j88; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j88); end
  def test_outputs_energy_flows_v88; assert_in_epsilon(3.013698657489478, worksheet.outputs_energy_flows_v88, 0.002); end
  def test_outputs_energy_flows_w88; assert_in_epsilon(3.7449018841302255, worksheet.outputs_energy_flows_w88, 0.002); end
  def test_outputs_energy_flows_x88; assert_in_epsilon(4.204128440843508, worksheet.outputs_energy_flows_x88, 0.002); end
  def test_outputs_energy_flows_y88; assert_in_epsilon(4.680852496591747, worksheet.outputs_energy_flows_y88, 0.002); end
  def test_outputs_energy_flows_z88; assert_in_epsilon(5.184564047505213, worksheet.outputs_energy_flows_z88, 0.002); end
  def test_outputs_energy_flows_aa88; assert_in_epsilon(5.727090049983525, worksheet.outputs_energy_flows_aa88, 0.002); end
  def test_outputs_energy_flows_ab88; assert_in_epsilon(6.310241444223581, worksheet.outputs_energy_flows_ab88, 0.002); end
  def test_outputs_energy_flows_ac88; assert_in_epsilon(6.909710104719636, worksheet.outputs_energy_flows_ac88, 0.002); end
  def test_outputs_energy_flows_ad88; assert_in_epsilon(7.557743471088495, worksheet.outputs_energy_flows_ad88, 0.002); end
  def test_outputs_energy_flows_c90; assert_equal("n/a ", worksheet.outputs_energy_flows_c90); end
  def test_outputs_energy_flows_d90; assert_equal("Bio conversion", worksheet.outputs_energy_flows_d90); end
  def test_outputs_energy_flows_e90; assert_equal("n/a ", worksheet.outputs_energy_flows_e90); end
  def test_outputs_energy_flows_f90; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f90); end
  def test_outputs_energy_flows_g90; assert_equal("n/a", worksheet.outputs_energy_flows_g90); end
  def test_outputs_energy_flows_h90; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_h90); end
  def test_outputs_energy_flows_i90; assert_equal("L.01", worksheet.outputs_energy_flows_i90); end
  def test_outputs_energy_flows_j90; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j90); end
  def test_outputs_energy_flows_v90; assert_in_epsilon(1.6227608155712576, worksheet.outputs_energy_flows_v90, 0.002); end
  def test_outputs_energy_flows_w90; assert_in_epsilon(1.9713867061272614, worksheet.outputs_energy_flows_w90, 0.002); end
  def test_outputs_energy_flows_x90; assert_in_epsilon(2.150949434850167, worksheet.outputs_energy_flows_x90, 0.002); end
  def test_outputs_energy_flows_y90; assert_in_epsilon(2.326949705599353, worksheet.outputs_energy_flows_y90, 0.002); end
  def test_outputs_energy_flows_z90; assert_in_epsilon(2.503572752977803, worksheet.outputs_energy_flows_z90, 0.002); end
  def test_outputs_energy_flows_aa90; assert_in_epsilon(2.685584599709788, worksheet.outputs_energy_flows_aa90, 0.002); end
  def test_outputs_energy_flows_ab90; assert_in_epsilon(2.872572597743571, worksheet.outputs_energy_flows_ab90, 0.002); end
  def test_outputs_energy_flows_ac90; assert_in_epsilon(3.0525336691829814, worksheet.outputs_energy_flows_ac90, 0.002); end
  def test_outputs_energy_flows_ad90; assert_in_epsilon(3.2390329161807845, worksheet.outputs_energy_flows_ad90, 0.002); end
  def test_outputs_energy_flows_c92; assert_equal("n/a", worksheet.outputs_energy_flows_c92); end
  def test_outputs_energy_flows_d92; assert_equal("Solid", worksheet.outputs_energy_flows_d92); end
  def test_outputs_energy_flows_e92; assert_equal("n/a", worksheet.outputs_energy_flows_e92); end
  def test_outputs_energy_flows_f92; assert_equal("Thermal generation", worksheet.outputs_energy_flows_f92); end
  def test_outputs_energy_flows_i92; assert_equal("C.01", worksheet.outputs_energy_flows_i92); end
  def test_outputs_energy_flows_j92; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j92); end
  def test_outputs_energy_flows_k92; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k92); end
  def test_outputs_energy_flows_l92; assert_equal("Unabated power", worksheet.outputs_energy_flows_l92); end
  def test_outputs_energy_flows_v92; assert_in_epsilon(99.6448281799327, worksheet.outputs_energy_flows_v92, 0.002); end
  def test_outputs_energy_flows_w92; assert_in_epsilon(97.09227095270234, worksheet.outputs_energy_flows_w92, 0.002); end
  def test_outputs_energy_flows_x92; assert_in_epsilon(104.19636313973417, worksheet.outputs_energy_flows_x92, 0.002); end
  def test_outputs_energy_flows_y92; assert_in_epsilon(116.87776852462349, worksheet.outputs_energy_flows_y92, 0.002); end
  def test_outputs_energy_flows_z92; assert_in_epsilon(128.02705808381492, worksheet.outputs_energy_flows_z92, 0.002); end
  def test_outputs_energy_flows_aa92; assert_in_epsilon(133.27368061771654, worksheet.outputs_energy_flows_aa92, 0.002); end
  def test_outputs_energy_flows_ab92; assert_in_epsilon(137.13899607638763, worksheet.outputs_energy_flows_ab92, 0.002); end
  def test_outputs_energy_flows_ac92; assert_in_epsilon(130.46223885399428, worksheet.outputs_energy_flows_ac92, 0.002); end
  def test_outputs_energy_flows_ad92; assert_in_epsilon(128.32926343004425, worksheet.outputs_energy_flows_ad92, 0.002); end
  def test_outputs_energy_flows_c94; assert_equal("n/a", worksheet.outputs_energy_flows_c94); end
  def test_outputs_energy_flows_d94; assert_equal("Liquid", worksheet.outputs_energy_flows_d94); end
  def test_outputs_energy_flows_e94; assert_equal("n/a", worksheet.outputs_energy_flows_e94); end
  def test_outputs_energy_flows_f94; assert_equal("Thermal generation", worksheet.outputs_energy_flows_f94); end
  def test_outputs_energy_flows_i94; assert_equal("C.02", worksheet.outputs_energy_flows_i94); end
  def test_outputs_energy_flows_j94; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j94); end
  def test_outputs_energy_flows_k94; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k94); end
  def test_outputs_energy_flows_l94; assert_equal("Unabated power", worksheet.outputs_energy_flows_l94); end
  def test_outputs_energy_flows_v94; assert_in_epsilon(11.970462528003441, worksheet.outputs_energy_flows_v94, 0.002); end
  def test_outputs_energy_flows_w94; assert_in_epsilon(11.543412664176957, worksheet.outputs_energy_flows_w94, 0.002); end
  def test_outputs_energy_flows_x94; assert_in_epsilon(17.989586405542518, worksheet.outputs_energy_flows_x94, 0.002); end
  def test_outputs_energy_flows_y94; assert_in_epsilon(20.199501499100293, worksheet.outputs_energy_flows_y94, 0.002); end
  def test_outputs_energy_flows_z94; assert_in_epsilon(22.297946953557545, worksheet.outputs_energy_flows_z94, 0.002); end
  def test_outputs_energy_flows_aa94; assert_in_epsilon(27.366849993383525, worksheet.outputs_energy_flows_aa94, 0.002); end
  def test_outputs_energy_flows_ab94; assert_in_epsilon(33.00257904504785, worksheet.outputs_energy_flows_ab94, 0.002); end
  def test_outputs_energy_flows_ac94; assert_in_epsilon(41.09270942982202, worksheet.outputs_energy_flows_ac94, 0.002); end
  def test_outputs_energy_flows_ad94; assert_in_epsilon(44.885533149017185, worksheet.outputs_energy_flows_ad94, 0.002); end
  def test_outputs_energy_flows_c96; assert_equal("n/a", worksheet.outputs_energy_flows_c96); end
  def test_outputs_energy_flows_d96; assert_equal("Gas", worksheet.outputs_energy_flows_d96); end
  def test_outputs_energy_flows_e96; assert_equal("n/a", worksheet.outputs_energy_flows_e96); end
  def test_outputs_energy_flows_f96; assert_equal("Thermal generation", worksheet.outputs_energy_flows_f96); end
  def test_outputs_energy_flows_i96; assert_equal("C.03", worksheet.outputs_energy_flows_i96); end
  def test_outputs_energy_flows_j96; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j96); end
  def test_outputs_energy_flows_k96; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k96); end
  def test_outputs_energy_flows_l96; assert_equal("Unabated power", worksheet.outputs_energy_flows_l96); end
  def test_outputs_energy_flows_v96; assert_in_epsilon(41.90572230296944, worksheet.outputs_energy_flows_v96, 0.002); end
  def test_outputs_energy_flows_w96; assert_in_epsilon(40.31692167710107, worksheet.outputs_energy_flows_w96, 0.002); end
  def test_outputs_energy_flows_x96; assert_in_epsilon(45.523084732185836, worksheet.outputs_energy_flows_x96, 0.002); end
  def test_outputs_energy_flows_y96; assert_in_epsilon(50.90664539104541, worksheet.outputs_energy_flows_y96, 0.002); end
  def test_outputs_energy_flows_z96; assert_in_epsilon(57.64269322279493, worksheet.outputs_energy_flows_z96, 0.002); end
  def test_outputs_energy_flows_aa96; assert_in_epsilon(63.87589725947901, worksheet.outputs_energy_flows_aa96, 0.002); end
  def test_outputs_energy_flows_ab96; assert_in_epsilon(70.45472828363876, worksheet.outputs_energy_flows_ab96, 0.002); end
  def test_outputs_energy_flows_ac96; assert_in_epsilon(75.77945929572175, worksheet.outputs_energy_flows_ac96, 0.002); end
  def test_outputs_energy_flows_ad96; assert_in_epsilon(82.87914678178754, worksheet.outputs_energy_flows_ad96, 0.002); end
  def test_outputs_energy_flows_c98; assert_equal("N.01", worksheet.outputs_energy_flows_c98); end
  def test_outputs_energy_flows_d98; assert_equal("Global Nuclear fission", worksheet.outputs_energy_flows_d98); end
  def test_outputs_energy_flows_e98; assert_equal("n/a", worksheet.outputs_energy_flows_e98); end
  def test_outputs_energy_flows_f98; assert_equal("Thermal generation", worksheet.outputs_energy_flows_f98); end
  def test_outputs_energy_flows_g98; assert_equal("nuclear.elec", worksheet.outputs_energy_flows_g98); end
  def test_outputs_energy_flows_h98; assert_equal("Global Nuclear power stations", worksheet.outputs_energy_flows_h98); end
  def test_outputs_energy_flows_v98; assert_in_epsilon(26.462850754774173, worksheet.outputs_energy_flows_v98, 0.002); end
  def test_outputs_energy_flows_w98; assert_in_epsilon(29.87001951581473, worksheet.outputs_energy_flows_w98, 0.002); end
  def test_outputs_energy_flows_x98; assert_in_epsilon(32.16856624518809, worksheet.outputs_energy_flows_x98, 0.002); end
  def test_outputs_energy_flows_y98; assert_in_epsilon(32.42272765606359, worksheet.outputs_energy_flows_y98, 0.002); end
  def test_outputs_energy_flows_z98; assert_in_epsilon(31.478476338411802, worksheet.outputs_energy_flows_z98, 0.002); end
  def test_outputs_energy_flows_aa98; assert_in_epsilon(34.76682054691498, worksheet.outputs_energy_flows_aa98, 0.002); end
  def test_outputs_energy_flows_ab98; assert_in_epsilon(34.154679001157994, worksheet.outputs_energy_flows_ab98, 0.002); end
  def test_outputs_energy_flows_ac98; assert_in_epsilon(34.83757015518318, worksheet.outputs_energy_flows_ac98, 0.002); end
  def test_outputs_energy_flows_ad98; assert_in_epsilon(35.50481852710455, worksheet.outputs_energy_flows_ad98, 0.002); end
  def test_outputs_energy_flows_c100; assert_equal("n/a", worksheet.outputs_energy_flows_c100); end
  def test_outputs_energy_flows_d100; assert_equal("Thermal generation", worksheet.outputs_energy_flows_d100); end
  def test_outputs_energy_flows_e100; assert_equal("H.01", worksheet.outputs_energy_flows_e100); end
  def test_outputs_energy_flows_f100; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_f100); end
  def test_outputs_energy_flows_k100; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k100); end
  def test_outputs_energy_flows_l100; assert_equal("Unabated power", worksheet.outputs_energy_flows_l100); end
  def test_outputs_energy_flows_m100; assert_equal("Nuclear", worksheet.outputs_energy_flows_m100); end
  def test_outputs_energy_flows_v100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v100||0), 0.002); end
  def test_outputs_energy_flows_w100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w100||0), 0.002); end
  def test_outputs_energy_flows_x100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x100||0), 0.002); end
  def test_outputs_energy_flows_y100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y100||0), 0.002); end
  def test_outputs_energy_flows_z100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z100||0), 0.002); end
  def test_outputs_energy_flows_aa100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa100||0), 0.002); end
  def test_outputs_energy_flows_ab100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab100||0), 0.002); end
  def test_outputs_energy_flows_ac100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac100||0), 0.002); end
  def test_outputs_energy_flows_ad100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad100||0), 0.002); end
  def test_outputs_energy_flows_c102; assert_equal("n/a", worksheet.outputs_energy_flows_c102); end
  def test_outputs_energy_flows_d102; assert_equal("Thermal generation", worksheet.outputs_energy_flows_d102); end
  def test_outputs_energy_flows_f102; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f102); end
  def test_outputs_energy_flows_i102; assert_equal("E.02", worksheet.outputs_energy_flows_i102); end
  def test_outputs_energy_flows_j102; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j102); end
  def test_outputs_energy_flows_k102; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k102); end
  def test_outputs_energy_flows_l102; assert_equal("Unabated power", worksheet.outputs_energy_flows_l102); end
  def test_outputs_energy_flows_m102; assert_equal("Nuclear", worksheet.outputs_energy_flows_m102); end
  def test_outputs_energy_flows_v102; assert_in_epsilon(62.50866894816741, worksheet.outputs_energy_flows_v102, 0.002); end
  def test_outputs_energy_flows_w102; assert_in_epsilon(62.939077124438676, worksheet.outputs_energy_flows_w102, 0.002); end
  def test_outputs_energy_flows_x102; assert_in_epsilon(72.07180964689755, worksheet.outputs_energy_flows_x102, 0.002); end
  def test_outputs_energy_flows_y102; assert_in_epsilon(81.56709570284625, worksheet.outputs_energy_flows_y102, 0.002); end
  def test_outputs_energy_flows_z102; assert_in_epsilon(91.0217632930335, worksheet.outputs_energy_flows_z102, 0.002); end
  def test_outputs_energy_flows_aa102; assert_in_epsilon(100.90851206638123, worksheet.outputs_energy_flows_aa102, 0.002); end
  def test_outputs_energy_flows_ab102; assert_in_epsilon(110.13193218671361, worksheet.outputs_energy_flows_ab102, 0.002); end
  def test_outputs_energy_flows_ac102; assert_in_epsilon(116.44977006954801, worksheet.outputs_energy_flows_ac102, 0.002); end
  def test_outputs_energy_flows_ad102; assert_in_epsilon(124.25085867519618, worksheet.outputs_energy_flows_ad102, 0.002); end
  def test_outputs_energy_flows_c104; assert_equal("n/a", worksheet.outputs_energy_flows_c104); end
  def test_outputs_energy_flows_d104; assert_equal("Thermal generation", worksheet.outputs_energy_flows_d104); end
  def test_outputs_energy_flows_e104; assert_equal("L.02", worksheet.outputs_energy_flows_e104); end
  def test_outputs_energy_flows_f104; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f104); end
  def test_outputs_energy_flows_k104; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k104); end
  def test_outputs_energy_flows_l104; assert_equal("Unabated power", worksheet.outputs_energy_flows_l104); end
  def test_outputs_energy_flows_m104; assert_equal("Nuclear", worksheet.outputs_energy_flows_m104); end
  def test_outputs_energy_flows_v104; assert_in_epsilon(4.436440849587927, worksheet.outputs_energy_flows_v104, 0.002); end
  def test_outputs_energy_flows_w104; assert_in_epsilon(4.470858577098571, worksheet.outputs_energy_flows_w104, 0.002); end
  def test_outputs_energy_flows_x104; assert_in_epsilon(5.123194879812204, worksheet.outputs_energy_flows_x104, 0.002); end
  def test_outputs_energy_flows_y104; assert_in_epsilon(5.796480468656862, worksheet.outputs_energy_flows_y104, 0.002); end
  def test_outputs_energy_flows_z104; assert_in_epsilon(6.467766589719897, worksheet.outputs_energy_flows_z104, 0.002); end
  def test_outputs_energy_flows_aa104; assert_in_epsilon(7.169333215123315, worksheet.outputs_energy_flows_aa104, 0.002); end
  def test_outputs_energy_flows_ab104; assert_in_epsilon(7.823074994394113, worksheet.outputs_energy_flows_ab104, 0.002); end
  def test_outputs_energy_flows_ac104; assert_in_epsilon(8.269896341322475, worksheet.outputs_energy_flows_ac104, 0.002); end
  def test_outputs_energy_flows_ad104; assert_in_epsilon(8.822502997627822, worksheet.outputs_energy_flows_ad104, 0.002); end
  def test_outputs_energy_flows_c106; assert_equal("n/a", worksheet.outputs_energy_flows_c106); end
  def test_outputs_energy_flows_d106; assert_equal("Thermal generation", worksheet.outputs_energy_flows_d106); end
  def test_outputs_energy_flows_e106; assert_equal("L.01", worksheet.outputs_energy_flows_e106); end
  def test_outputs_energy_flows_f106; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f106); end
  def test_outputs_energy_flows_k106; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k106); end
  def test_outputs_energy_flows_l106; assert_equal("Unabated power", worksheet.outputs_energy_flows_l106); end
  def test_outputs_energy_flows_m106; assert_equal("Nuclear", worksheet.outputs_energy_flows_m106); end
  def test_outputs_energy_flows_v106; assert_in_epsilon(103.39553913022215, worksheet.outputs_energy_flows_v106, 0.002); end
  def test_outputs_energy_flows_w106; assert_in_epsilon(101.30238354924062, worksheet.outputs_energy_flows_w106, 0.002); end
  def test_outputs_energy_flows_x106; assert_in_epsilon(111.77868605251332, worksheet.outputs_energy_flows_x106, 0.002); end
  def test_outputs_energy_flows_y106; assert_in_epsilon(121.43917524308651, worksheet.outputs_energy_flows_y106, 0.002); end
  def test_outputs_energy_flows_z106; assert_in_epsilon(129.68346756420075, worksheet.outputs_energy_flows_z106, 0.002); end
  def test_outputs_energy_flows_aa106; assert_in_epsilon(138.33145589992728, worksheet.outputs_energy_flows_aa106, 0.002); end
  def test_outputs_energy_flows_ab106; assert_in_epsilon(143.3120091317207, worksheet.outputs_energy_flows_ab106, 0.002); end
  def test_outputs_energy_flows_ac106; assert_in_epsilon(143.41936135278655, worksheet.outputs_energy_flows_ac106, 0.002); end
  def test_outputs_energy_flows_ad106; assert_in_epsilon(143.91514637132076, worksheet.outputs_energy_flows_ad106, 0.002); end
  def test_outputs_energy_flows_c108; assert_equal("n/a", worksheet.outputs_energy_flows_c108); end
  def test_outputs_energy_flows_d108; assert_equal("Storage", worksheet.outputs_energy_flows_d108); end
  def test_outputs_energy_flows_e108; assert_equal("n/a", worksheet.outputs_energy_flows_e108); end
  def test_outputs_energy_flows_f108; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f108); end
  def test_outputs_energy_flows_g108; assert_equal("storage.elec", worksheet.outputs_energy_flows_g108); end
  def test_outputs_energy_flows_h108; assert_equal("Global Storage unit", worksheet.outputs_energy_flows_h108); end
  def test_outputs_energy_flows_i108; assert_equal("E.02", worksheet.outputs_energy_flows_i108); end
  def test_outputs_energy_flows_j108; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j108); end
  def test_outputs_energy_flows_v108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v108||0), 0.002); end
  def test_outputs_energy_flows_w108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w108||0), 0.002); end
  def test_outputs_energy_flows_x108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x108||0), 0.002); end
  def test_outputs_energy_flows_y108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y108||0), 0.002); end
  def test_outputs_energy_flows_z108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z108||0), 0.002); end
  def test_outputs_energy_flows_aa108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa108||0), 0.002); end
  def test_outputs_energy_flows_ab108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab108||0), 0.002); end
  def test_outputs_energy_flows_ac108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac108||0), 0.002); end
  def test_outputs_energy_flows_ad108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad108||0), 0.002); end
  def test_outputs_energy_flows_c110; assert_equal("n/a", worksheet.outputs_energy_flows_c110); end
  def test_outputs_energy_flows_d110; assert_equal("Storage", worksheet.outputs_energy_flows_d110); end
  def test_outputs_energy_flows_e110; assert_equal("L.01", worksheet.outputs_energy_flows_e110); end
  def test_outputs_energy_flows_f110; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f110); end
  def test_outputs_energy_flows_g110; assert_equal("storage.elec", worksheet.outputs_energy_flows_g110); end
  def test_outputs_energy_flows_h110; assert_equal("Global Storage unit", worksheet.outputs_energy_flows_h110); end
  def test_outputs_energy_flows_v110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v110||0), 0.002); end
  def test_outputs_energy_flows_w110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w110||0), 0.002); end
  def test_outputs_energy_flows_x110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x110||0), 0.002); end
  def test_outputs_energy_flows_y110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y110||0), 0.002); end
  def test_outputs_energy_flows_z110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z110||0), 0.002); end
  def test_outputs_energy_flows_aa110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa110||0), 0.002); end
  def test_outputs_energy_flows_ab110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab110||0), 0.002); end
  def test_outputs_energy_flows_ac110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac110||0), 0.002); end
  def test_outputs_energy_flows_ad110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad110||0), 0.002); end
  def test_outputs_energy_flows_c112; assert_equal("n/a", worksheet.outputs_energy_flows_c112); end
  def test_outputs_energy_flows_d112; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d112); end
  def test_outputs_energy_flows_e112; assert_equal("L.02", worksheet.outputs_energy_flows_e112); end
  def test_outputs_energy_flows_f112; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f112); end
  def test_outputs_energy_flows_g112; assert_equal("electricity.network", worksheet.outputs_energy_flows_g112); end
  def test_outputs_energy_flows_h112; assert_equal("Global Electricity distribution network", worksheet.outputs_energy_flows_h112); end
  def test_outputs_energy_flows_v112; assert_in_epsilon(6.091136511565761, worksheet.outputs_energy_flows_v112, 0.002); end
  def test_outputs_energy_flows_w112; assert_in_epsilon(6.654184620605979, worksheet.outputs_energy_flows_w112, 0.002); end
  def test_outputs_energy_flows_x112; assert_in_epsilon(7.503341876002891, worksheet.outputs_energy_flows_x112, 0.002); end
  def test_outputs_energy_flows_y112; assert_in_epsilon(8.35608678181321, worksheet.outputs_energy_flows_y112, 0.002); end
  def test_outputs_energy_flows_z112; assert_in_epsilon(9.234624092181434, worksheet.outputs_energy_flows_z112, 0.002); end
  def test_outputs_energy_flows_aa112; assert_in_epsilon(10.115036226757832, worksheet.outputs_energy_flows_aa112, 0.002); end
  def test_outputs_energy_flows_ab112; assert_in_epsilon(11.03699562459398, worksheet.outputs_energy_flows_ab112, 0.002); end
  def test_outputs_energy_flows_ac112; assert_in_epsilon(11.957806271994771, worksheet.outputs_energy_flows_ac112, 0.002); end
  def test_outputs_energy_flows_ad112; assert_in_epsilon(12.921944982844655, worksheet.outputs_energy_flows_ad112, 0.002); end
  def test_outputs_energy_flows_c114; assert_equal("n/a", worksheet.outputs_energy_flows_c114); end
  def test_outputs_energy_flows_d114; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d114); end
  def test_outputs_energy_flows_e114; assert_equal("n/a", worksheet.outputs_energy_flows_e114); end
  def test_outputs_energy_flows_f114; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f114); end
  def test_outputs_energy_flows_i114; assert_equal("E.01", worksheet.outputs_energy_flows_i114); end
  def test_outputs_energy_flows_j114; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j114); end
  def test_outputs_energy_flows_k114; assert_equal("Global buildings", worksheet.outputs_energy_flows_k114); end
  def test_outputs_energy_flows_v114; assert_in_epsilon(4.027695458801006, worksheet.outputs_energy_flows_v114, 0.002); end
  def test_outputs_energy_flows_w114; assert_in_epsilon(4.749531165462969, worksheet.outputs_energy_flows_w114, 0.002); end
  def test_outputs_energy_flows_x114; assert_in_epsilon(5.642579860188775, worksheet.outputs_energy_flows_x114, 0.002); end
  def test_outputs_energy_flows_y114; assert_in_epsilon(6.59061901396317, worksheet.outputs_energy_flows_y114, 0.002); end
  def test_outputs_energy_flows_z114; assert_in_epsilon(7.568668226739902, worksheet.outputs_energy_flows_z114, 0.002); end
  def test_outputs_energy_flows_aa114; assert_in_epsilon(8.531158126630714, worksheet.outputs_energy_flows_aa114, 0.002); end
  def test_outputs_energy_flows_ab114; assert_in_epsilon(9.492460863802016, worksheet.outputs_energy_flows_ab114, 0.002); end
  def test_outputs_energy_flows_ac114; assert_in_epsilon(10.401754726006928, worksheet.outputs_energy_flows_ac114, 0.002); end
  def test_outputs_energy_flows_ad114; assert_in_epsilon(11.280988224569086, worksheet.outputs_energy_flows_ad114, 0.002); end
  def test_outputs_energy_flows_c116; assert_equal("n/a", worksheet.outputs_energy_flows_c116); end
  def test_outputs_energy_flows_d116; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d116); end
  def test_outputs_energy_flows_e116; assert_equal("n/a", worksheet.outputs_energy_flows_e116); end
  def test_outputs_energy_flows_f116; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f116); end
  def test_outputs_energy_flows_i116; assert_equal("E.01", worksheet.outputs_energy_flows_i116); end
  def test_outputs_energy_flows_j116; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j116); end
  def test_outputs_energy_flows_k116; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k116); end
  def test_outputs_energy_flows_l116; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l116); end
  def test_outputs_energy_flows_v116; assert_in_epsilon(3.238074545473781, worksheet.outputs_energy_flows_v116, 0.002); end
  def test_outputs_energy_flows_w116; assert_in_epsilon(3.8017884117693965, worksheet.outputs_energy_flows_w116, 0.002); end
  def test_outputs_energy_flows_x116; assert_in_epsilon(4.464111784151871, worksheet.outputs_energy_flows_x116, 0.002); end
  def test_outputs_energy_flows_y116; assert_in_epsilon(5.174500126036201, worksheet.outputs_energy_flows_y116, 0.002); end
  def test_outputs_energy_flows_z116; assert_in_epsilon(5.917397237404329, worksheet.outputs_energy_flows_z116, 0.002); end
  def test_outputs_energy_flows_aa116; assert_in_epsilon(6.662835828330579, worksheet.outputs_energy_flows_aa116, 0.002); end
  def test_outputs_energy_flows_ab116; assert_in_epsilon(7.428152478350902, worksheet.outputs_energy_flows_ab116, 0.002); end
  def test_outputs_energy_flows_ac116; assert_in_epsilon(8.180034951668855, worksheet.outputs_energy_flows_ac116, 0.002); end
  def test_outputs_energy_flows_ad116; assert_in_epsilon(8.941602780619977, worksheet.outputs_energy_flows_ad116, 0.002); end
  def test_outputs_energy_flows_c118; assert_equal("n/a", worksheet.outputs_energy_flows_c118); end
  def test_outputs_energy_flows_d118; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d118); end
  def test_outputs_energy_flows_e118; assert_equal("n/a", worksheet.outputs_energy_flows_e118); end
  def test_outputs_energy_flows_f118; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f118); end
  def test_outputs_energy_flows_i118; assert_equal("E.01", worksheet.outputs_energy_flows_i118); end
  def test_outputs_energy_flows_j118; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j118); end
  def test_outputs_energy_flows_k118; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k118); end
  def test_outputs_energy_flows_l118; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l118); end
  def test_outputs_energy_flows_v118; assert_in_epsilon(10.049316153808604, worksheet.outputs_energy_flows_v118, 0.002); end
  def test_outputs_energy_flows_w118; assert_in_epsilon(11.423703702312537, worksheet.outputs_energy_flows_w118, 0.002); end
  def test_outputs_energy_flows_x118; assert_in_epsilon(13.673960675668688, worksheet.outputs_energy_flows_x118, 0.002); end
  def test_outputs_energy_flows_y118; assert_in_epsilon(16.122369214452416, worksheet.outputs_energy_flows_y118, 0.002); end
  def test_outputs_energy_flows_z118; assert_in_epsilon(18.721507926000168, worksheet.outputs_energy_flows_z118, 0.002); end
  def test_outputs_energy_flows_aa118; assert_in_epsilon(21.377879648263878, worksheet.outputs_energy_flows_aa118, 0.002); end
  def test_outputs_energy_flows_ab118; assert_in_epsilon(24.147137883809034, worksheet.outputs_energy_flows_ab118, 0.002); end
  def test_outputs_energy_flows_ac118; assert_in_epsilon(26.922124551599744, worksheet.outputs_energy_flows_ac118, 0.002); end
  def test_outputs_energy_flows_ad118; assert_in_epsilon(29.77272930864252, worksheet.outputs_energy_flows_ad118, 0.002); end
  def test_outputs_energy_flows_c120; assert_equal("n/a", worksheet.outputs_energy_flows_c120); end
  def test_outputs_energy_flows_d120; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d120); end
  def test_outputs_energy_flows_e120; assert_equal("n/a", worksheet.outputs_energy_flows_e120); end
  def test_outputs_energy_flows_f120; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f120); end
  def test_outputs_energy_flows_i120; assert_equal("E.01", worksheet.outputs_energy_flows_i120); end
  def test_outputs_energy_flows_j120; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j120); end
  def test_outputs_energy_flows_k120; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k120); end
  def test_outputs_energy_flows_l120; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l120); end
  def test_outputs_energy_flows_v120; assert_in_epsilon(1.5226055251988835, worksheet.outputs_energy_flows_v120, 0.002); end
  def test_outputs_energy_flows_w120; assert_in_epsilon(1.694572033868082, worksheet.outputs_energy_flows_w120, 0.002); end
  def test_outputs_energy_flows_x120; assert_in_epsilon(1.8875958832759527, worksheet.outputs_energy_flows_x120, 0.002); end
  def test_outputs_energy_flows_y120; assert_in_epsilon(2.0832425424377896, worksheet.outputs_energy_flows_y120, 0.002); end
  def test_outputs_energy_flows_z120; assert_in_epsilon(2.27519871759261, worksheet.outputs_energy_flows_z120, 0.002); end
  def test_outputs_energy_flows_aa120; assert_in_epsilon(2.4524516338870574, worksheet.outputs_energy_flows_aa120, 0.002); end
  def test_outputs_energy_flows_ab120; assert_in_epsilon(2.622340395156398, worksheet.outputs_energy_flows_ab120, 0.002); end
  def test_outputs_energy_flows_ac120; assert_in_epsilon(2.7736937463523286, worksheet.outputs_energy_flows_ac120, 0.002); end
  def test_outputs_energy_flows_ad120; assert_in_epsilon(2.91658715830596, worksheet.outputs_energy_flows_ad120, 0.002); end
  def test_outputs_energy_flows_c122; assert_equal("n/a", worksheet.outputs_energy_flows_c122); end
  def test_outputs_energy_flows_d122; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d122); end
  def test_outputs_energy_flows_e122; assert_equal("n/a", worksheet.outputs_energy_flows_e122); end
  def test_outputs_energy_flows_f122; assert_equal("Non domestic", worksheet.outputs_energy_flows_f122); end
  def test_outputs_energy_flows_i122; assert_equal("E.01", worksheet.outputs_energy_flows_i122); end
  def test_outputs_energy_flows_j122; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j122); end
  def test_outputs_energy_flows_k122; assert_equal("Non-residential", worksheet.outputs_energy_flows_k122); end
  def test_outputs_energy_flows_v122; assert_in_epsilon(17.958150562902414, worksheet.outputs_energy_flows_v122, 0.002); end
  def test_outputs_energy_flows_w122; assert_in_epsilon(19.693217842837097, worksheet.outputs_energy_flows_w122, 0.002); end
  def test_outputs_energy_flows_x122; assert_in_epsilon(21.589665339466972, worksheet.outputs_energy_flows_x122, 0.002); end
  def test_outputs_energy_flows_y122; assert_in_epsilon(23.490445260175257, worksheet.outputs_energy_flows_y122, 0.002); end
  def test_outputs_energy_flows_z122; assert_in_epsilon(25.384586103806, worksheet.outputs_energy_flows_z122, 0.002); end
  def test_outputs_energy_flows_aa122; assert_in_epsilon(27.267087727227445, worksheet.outputs_energy_flows_aa122, 0.002); end
  def test_outputs_energy_flows_ab122; assert_in_epsilon(29.12599630666147, worksheet.outputs_energy_flows_ab122, 0.002); end
  def test_outputs_energy_flows_ac122; assert_in_epsilon(30.942603349857706, worksheet.outputs_energy_flows_ac122, 0.002); end
  def test_outputs_energy_flows_ad122; assert_in_epsilon(32.698841243224514, worksheet.outputs_energy_flows_ad122, 0.002); end
  def test_outputs_energy_flows_c124; assert_equal("n/a", worksheet.outputs_energy_flows_c124); end
  def test_outputs_energy_flows_d124; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d124); end
  def test_outputs_energy_flows_e124; assert_equal("n/a", worksheet.outputs_energy_flows_e124); end
  def test_outputs_energy_flows_f124; assert_equal("Steel", worksheet.outputs_energy_flows_f124); end
  def test_outputs_energy_flows_i124; assert_equal("E.01", worksheet.outputs_energy_flows_i124); end
  def test_outputs_energy_flows_j124; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j124); end
  def test_outputs_energy_flows_v124; assert_in_epsilon(3.944226186432, worksheet.outputs_energy_flows_v124, 0.002); end
  def test_outputs_energy_flows_w124; assert_in_epsilon(4.168974500035827, worksheet.outputs_energy_flows_w124, 0.002); end
  def test_outputs_energy_flows_x124; assert_in_epsilon(4.545647172441285, worksheet.outputs_energy_flows_x124, 0.002); end
  def test_outputs_energy_flows_y124; assert_in_epsilon(4.856627561299947, worksheet.outputs_energy_flows_y124, 0.002); end
  def test_outputs_energy_flows_z124; assert_in_epsilon(5.183041959389051, worksheet.outputs_energy_flows_z124, 0.002); end
  def test_outputs_energy_flows_aa124; assert_in_epsilon(5.488867081148932, worksheet.outputs_energy_flows_aa124, 0.002); end
  def test_outputs_energy_flows_ab124; assert_in_epsilon(5.8470225109916845, worksheet.outputs_energy_flows_ab124, 0.002); end
  def test_outputs_energy_flows_ac124; assert_in_epsilon(6.225674075996327, worksheet.outputs_energy_flows_ac124, 0.002); end
  def test_outputs_energy_flows_ad124; assert_in_epsilon(6.62626230288563, worksheet.outputs_energy_flows_ad124, 0.002); end
  def test_outputs_energy_flows_c126; assert_equal("n/a", worksheet.outputs_energy_flows_c126); end
  def test_outputs_energy_flows_d126; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d126); end
  def test_outputs_energy_flows_e126; assert_equal("n/a", worksheet.outputs_energy_flows_e126); end
  def test_outputs_energy_flows_f126; assert_equal("Aluminium", worksheet.outputs_energy_flows_f126); end
  def test_outputs_energy_flows_i126; assert_equal("E.01", worksheet.outputs_energy_flows_i126); end
  def test_outputs_energy_flows_j126; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j126); end
  def test_outputs_energy_flows_v126; assert_in_epsilon(2.4376557108758776, worksheet.outputs_energy_flows_v126, 0.002); end
  def test_outputs_energy_flows_w126; assert_in_epsilon(2.683379268999093, worksheet.outputs_energy_flows_w126, 0.002); end
  def test_outputs_energy_flows_x126; assert_in_epsilon(3.1005576827720067, worksheet.outputs_energy_flows_x126, 0.002); end
  def test_outputs_energy_flows_y126; assert_in_epsilon(3.5470531683501085, worksheet.outputs_energy_flows_y126, 0.002); end
  def test_outputs_energy_flows_z126; assert_in_epsilon(4.027938671221321, worksheet.outputs_energy_flows_z126, 0.002); end
  def test_outputs_energy_flows_aa126; assert_in_epsilon(4.520888594176747, worksheet.outputs_energy_flows_aa126, 0.002); end
  def test_outputs_energy_flows_ab126; assert_in_epsilon(5.081733566636593, worksheet.outputs_energy_flows_ab126, 0.002); end
  def test_outputs_energy_flows_ac126; assert_in_epsilon(5.67950920803474, worksheet.outputs_energy_flows_ac126, 0.002); end
  def test_outputs_energy_flows_ad126; assert_in_epsilon(6.36347460027908, worksheet.outputs_energy_flows_ad126, 0.002); end
  def test_outputs_energy_flows_c128; assert_equal("n/a", worksheet.outputs_energy_flows_c128); end
  def test_outputs_energy_flows_d128; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d128); end
  def test_outputs_energy_flows_e128; assert_equal("n/a", worksheet.outputs_energy_flows_e128); end
  def test_outputs_energy_flows_f128; assert_equal("Cement", worksheet.outputs_energy_flows_f128); end
  def test_outputs_energy_flows_i128; assert_equal("E.01", worksheet.outputs_energy_flows_i128); end
  def test_outputs_energy_flows_j128; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j128); end
  def test_outputs_energy_flows_v128; assert_in_epsilon(1.2888723312000763, worksheet.outputs_energy_flows_v128, 0.002); end
  def test_outputs_energy_flows_w128; assert_in_epsilon(1.3245270735781327, worksheet.outputs_energy_flows_w128, 0.002); end
  def test_outputs_energy_flows_x128; assert_in_epsilon(1.3911888689617513, worksheet.outputs_energy_flows_x128, 0.002); end
  def test_outputs_energy_flows_y128; assert_in_epsilon(1.4136884326626917, worksheet.outputs_energy_flows_y128, 0.002); end
  def test_outputs_energy_flows_z128; assert_in_epsilon(1.4316974738699064, worksheet.outputs_energy_flows_z128, 0.002); end
  def test_outputs_energy_flows_aa128; assert_in_epsilon(1.448903581213037, worksheet.outputs_energy_flows_aa128, 0.002); end
  def test_outputs_energy_flows_ab128; assert_in_epsilon(1.4617699342894055, worksheet.outputs_energy_flows_ab128, 0.002); end
  def test_outputs_energy_flows_ac128; assert_in_epsilon(1.4678200201781049, worksheet.outputs_energy_flows_ac128, 0.002); end
  def test_outputs_energy_flows_ad128; assert_in_epsilon(1.4814014810966891, worksheet.outputs_energy_flows_ad128, 0.002); end
  def test_outputs_energy_flows_c130; assert_equal("n/a", worksheet.outputs_energy_flows_c130); end
  def test_outputs_energy_flows_d130; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d130); end
  def test_outputs_energy_flows_e130; assert_equal("n/a", worksheet.outputs_energy_flows_e130); end
  def test_outputs_energy_flows_f130; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f130); end
  def test_outputs_energy_flows_i130; assert_equal("E.01", worksheet.outputs_energy_flows_i130); end
  def test_outputs_energy_flows_j130; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j130); end
  def test_outputs_energy_flows_v130; assert_in_epsilon(1.915936127392674, worksheet.outputs_energy_flows_v130, 0.002); end
  def test_outputs_energy_flows_w130; assert_in_epsilon(1.9753848141002672, worksheet.outputs_energy_flows_w130, 0.002); end
  def test_outputs_energy_flows_x130; assert_in_epsilon(2.278068283226702, worksheet.outputs_energy_flows_x130, 0.002); end
  def test_outputs_energy_flows_y130; assert_in_epsilon(2.589885651234398, worksheet.outputs_energy_flows_y130, 0.002); end
  def test_outputs_energy_flows_z130; assert_in_epsilon(2.9287030608864963, worksheet.outputs_energy_flows_z130, 0.002); end
  def test_outputs_energy_flows_aa130; assert_in_epsilon(3.287684011336623, worksheet.outputs_energy_flows_aa130, 0.002); end
  def test_outputs_energy_flows_ab130; assert_in_epsilon(3.7007696002346426, worksheet.outputs_energy_flows_ab130, 0.002); end
  def test_outputs_energy_flows_ac130; assert_in_epsilon(4.1417682021544024, worksheet.outputs_energy_flows_ac130, 0.002); end
  def test_outputs_energy_flows_ad130; assert_in_epsilon(4.651692529912838, worksheet.outputs_energy_flows_ad130, 0.002); end
  def test_outputs_energy_flows_c132; assert_equal("n/a", worksheet.outputs_energy_flows_c132); end
  def test_outputs_energy_flows_d132; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d132); end
  def test_outputs_energy_flows_e132; assert_equal("n/a", worksheet.outputs_energy_flows_e132); end
  def test_outputs_energy_flows_f132; assert_equal("Chemicals", worksheet.outputs_energy_flows_f132); end
  def test_outputs_energy_flows_i132; assert_equal("E.01", worksheet.outputs_energy_flows_i132); end
  def test_outputs_energy_flows_j132; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j132); end
  def test_outputs_energy_flows_v132; assert_in_epsilon(4.406059895595235, worksheet.outputs_energy_flows_v132, 0.002); end
  def test_outputs_energy_flows_w132; assert_in_epsilon(4.593801895022446, worksheet.outputs_energy_flows_w132, 0.002); end
  def test_outputs_energy_flows_x132; assert_in_epsilon(5.369302862787384, worksheet.outputs_energy_flows_x132, 0.002); end
  def test_outputs_energy_flows_y132; assert_in_epsilon(6.174269886030445, worksheet.outputs_energy_flows_y132, 0.002); end
  def test_outputs_energy_flows_z132; assert_in_epsilon(7.047483324794377, worksheet.outputs_energy_flows_z132, 0.002); end
  def test_outputs_energy_flows_aa132; assert_in_epsilon(7.9588722805733445, worksheet.outputs_energy_flows_aa132, 0.002); end
  def test_outputs_energy_flows_ab132; assert_in_epsilon(9.017747247060495, worksheet.outputs_energy_flows_ab132, 0.002); end
  def test_outputs_energy_flows_ac132; assert_in_epsilon(10.134189622719525, worksheet.outputs_energy_flows_ac132, 0.002); end
  def test_outputs_energy_flows_ad132; assert_in_epsilon(11.43262267907736, worksheet.outputs_energy_flows_ad132, 0.002); end
  def test_outputs_energy_flows_c134; assert_equal("n/a", worksheet.outputs_energy_flows_c134); end
  def test_outputs_energy_flows_d134; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d134); end
  def test_outputs_energy_flows_e134; assert_equal("n/a", worksheet.outputs_energy_flows_e134); end
  def test_outputs_energy_flows_f134; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f134); end
  def test_outputs_energy_flows_i134; assert_equal("E.01", worksheet.outputs_energy_flows_i134); end
  def test_outputs_energy_flows_j134; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j134); end
  def test_outputs_energy_flows_l134; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l134); end
  def test_outputs_energy_flows_m134; assert_equal("Timber", worksheet.outputs_energy_flows_m134); end
  def test_outputs_energy_flows_v134; assert_in_epsilon(15.29266327822456, worksheet.outputs_energy_flows_v134, 0.002); end
  def test_outputs_energy_flows_w134; assert_in_epsilon(15.675861920986701, worksheet.outputs_energy_flows_w134, 0.002); end
  def test_outputs_energy_flows_x134; assert_in_epsilon(16.851146698929583, worksheet.outputs_energy_flows_x134, 0.002); end
  def test_outputs_energy_flows_y134; assert_in_epsilon(17.827082055148093, worksheet.outputs_energy_flows_y134, 0.002); end
  def test_outputs_energy_flows_z134; assert_in_epsilon(18.81628325895057, worksheet.outputs_energy_flows_z134, 0.002); end
  def test_outputs_energy_flows_aa134; assert_in_epsilon(19.811491588765197, worksheet.outputs_energy_flows_aa134, 0.002); end
  def test_outputs_energy_flows_ab134; assert_in_epsilon(20.87142073137174, worksheet.outputs_energy_flows_ab134, 0.002); end
  def test_outputs_energy_flows_ac134; assert_in_epsilon(21.94096007582097, worksheet.outputs_energy_flows_ac134, 0.002); end
  def test_outputs_energy_flows_ad134; assert_in_epsilon(23.131103307821842, worksheet.outputs_energy_flows_ad134, 0.002); end
  def test_outputs_energy_flows_c136; assert_equal("n/a", worksheet.outputs_energy_flows_c136); end
  def test_outputs_energy_flows_d136; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d136); end
  def test_outputs_energy_flows_e136; assert_equal("n/a", worksheet.outputs_energy_flows_e136); end
  def test_outputs_energy_flows_f136; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f136); end
  def test_outputs_energy_flows_i136; assert_equal("E.01", worksheet.outputs_energy_flows_i136); end
  def test_outputs_energy_flows_j136; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j136); end
  def test_outputs_energy_flows_l136; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l136); end
  def test_outputs_energy_flows_m136; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m136); end
  def test_outputs_energy_flows_v136; assert_in_delta(0.46820460050501056, worksheet.outputs_energy_flows_v136, 0.002); end
  def test_outputs_energy_flows_w136; assert_in_delta(0.9462882529645056, worksheet.outputs_energy_flows_w136, 0.002); end
  def test_outputs_energy_flows_x136; assert_in_epsilon(1.303711640978265, worksheet.outputs_energy_flows_x136, 0.002); end
  def test_outputs_energy_flows_y136; assert_in_epsilon(1.6896398150129621, worksheet.outputs_energy_flows_y136, 0.002); end
  def test_outputs_energy_flows_z136; assert_in_epsilon(2.114070251762404, worksheet.outputs_energy_flows_z136, 0.002); end
  def test_outputs_energy_flows_aa136; assert_in_epsilon(2.5800240496011733, worksheet.outputs_energy_flows_aa136, 0.002); end
  def test_outputs_energy_flows_ab136; assert_in_epsilon(3.088247584296829, worksheet.outputs_energy_flows_ab136, 0.002); end
  def test_outputs_energy_flows_ac136; assert_in_epsilon(3.6193413292121086, worksheet.outputs_energy_flows_ac136, 0.002); end
  def test_outputs_energy_flows_ad136; assert_in_epsilon(4.184706319723428, worksheet.outputs_energy_flows_ad136, 0.002); end
  def test_outputs_energy_flows_c138; assert_equal("n/a", worksheet.outputs_energy_flows_c138); end
  def test_outputs_energy_flows_d138; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d138); end
  def test_outputs_energy_flows_e138; assert_equal("n/a", worksheet.outputs_energy_flows_e138); end
  def test_outputs_energy_flows_f138; assert_equal("International passenger", worksheet.outputs_energy_flows_f138); end
  def test_outputs_energy_flows_i138; assert_equal("E.01", worksheet.outputs_energy_flows_i138); end
  def test_outputs_energy_flows_j138; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j138); end
  def test_outputs_energy_flows_l138; assert_equal("International", worksheet.outputs_energy_flows_l138); end
  def test_outputs_energy_flows_v138; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v138||0), 0.002); end
  def test_outputs_energy_flows_w138; assert_in_delta(0.006222411534458453, worksheet.outputs_energy_flows_w138, 0.002); end
  def test_outputs_energy_flows_x138; assert_in_delta(0.01621541044204285, worksheet.outputs_energy_flows_x138, 0.002); end
  def test_outputs_energy_flows_y138; assert_in_delta(0.027402929388079512, worksheet.outputs_energy_flows_y138, 0.002); end
  def test_outputs_energy_flows_z138; assert_in_delta(0.039768240439170294, worksheet.outputs_energy_flows_z138, 0.002); end
  def test_outputs_energy_flows_aa138; assert_in_delta(0.05376053239859862, worksheet.outputs_energy_flows_aa138, 0.002); end
  def test_outputs_energy_flows_ab138; assert_in_delta(0.06930419908485053, worksheet.outputs_energy_flows_ab138, 0.002); end
  def test_outputs_energy_flows_ac138; assert_in_delta(0.08668816721686835, worksheet.outputs_energy_flows_ac138, 0.002); end
  def test_outputs_energy_flows_ad138; assert_in_delta(0.10593518760935991, worksheet.outputs_energy_flows_ad138, 0.002); end
  def test_outputs_energy_flows_c140; assert_equal("n/a", worksheet.outputs_energy_flows_c140); end
  def test_outputs_energy_flows_d140; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d140); end
  def test_outputs_energy_flows_e140; assert_equal("n/a", worksheet.outputs_energy_flows_e140); end
  def test_outputs_energy_flows_f140; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f140); end
  def test_outputs_energy_flows_i140; assert_equal("E.01", worksheet.outputs_energy_flows_i140); end
  def test_outputs_energy_flows_j140; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j140); end
  def test_outputs_energy_flows_l140; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l140); end
  def test_outputs_energy_flows_v140; assert_in_epsilon(1.0643947583303108, worksheet.outputs_energy_flows_v140, 0.002); end
  def test_outputs_energy_flows_w140; assert_in_epsilon(1.3617035702864118, worksheet.outputs_energy_flows_w140, 0.002); end
  def test_outputs_energy_flows_x140; assert_in_epsilon(1.7236416480283092, worksheet.outputs_energy_flows_x140, 0.002); end
  def test_outputs_energy_flows_y140; assert_in_epsilon(2.0529803641789313, worksheet.outputs_energy_flows_y140, 0.002); end
  def test_outputs_energy_flows_z140; assert_in_epsilon(2.2987061928749943, worksheet.outputs_energy_flows_z140, 0.002); end
  def test_outputs_energy_flows_aa140; assert_in_epsilon(2.478185217217386, worksheet.outputs_energy_flows_aa140, 0.002); end
  def test_outputs_energy_flows_ab140; assert_in_epsilon(2.6037295109945173, worksheet.outputs_energy_flows_ab140, 0.002); end
  def test_outputs_energy_flows_ac140; assert_in_epsilon(2.685555887856624, worksheet.outputs_energy_flows_ac140, 0.002); end
  def test_outputs_energy_flows_ad140; assert_in_epsilon(2.7532291771299016, worksheet.outputs_energy_flows_ad140, 0.002); end
  def test_outputs_energy_flows_c142; assert_equal("n/a", worksheet.outputs_energy_flows_c142); end
  def test_outputs_energy_flows_d142; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d142); end
  def test_outputs_energy_flows_e142; assert_equal("n/a", worksheet.outputs_energy_flows_e142); end
  def test_outputs_energy_flows_f142; assert_equal("International freight", worksheet.outputs_energy_flows_f142); end
  def test_outputs_energy_flows_i142; assert_equal("E.01", worksheet.outputs_energy_flows_i142); end
  def test_outputs_energy_flows_j142; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j142); end
  def test_outputs_energy_flows_l142; assert_equal("International freight", worksheet.outputs_energy_flows_l142); end
  def test_outputs_energy_flows_v142; assert_in_delta(0.08957295494723592, worksheet.outputs_energy_flows_v142, 0.002); end
  def test_outputs_energy_flows_w142; assert_in_delta(0.13291689434794438, worksheet.outputs_energy_flows_w142, 0.002); end
  def test_outputs_energy_flows_x142; assert_in_delta(0.1784560247998461, worksheet.outputs_energy_flows_x142, 0.002); end
  def test_outputs_energy_flows_y142; assert_in_delta(0.22303299460857773, worksheet.outputs_energy_flows_y142, 0.002); end
  def test_outputs_energy_flows_z142; assert_in_delta(0.2695251956749775, worksheet.outputs_energy_flows_z142, 0.002); end
  def test_outputs_energy_flows_aa142; assert_in_delta(0.3002707844462195, worksheet.outputs_energy_flows_aa142, 0.002); end
  def test_outputs_energy_flows_ab142; assert_in_delta(0.32420418294692926, worksheet.outputs_energy_flows_ab142, 0.002); end
  def test_outputs_energy_flows_ac142; assert_in_delta(0.3437806507630162, worksheet.outputs_energy_flows_ac142, 0.002); end
  def test_outputs_energy_flows_ad142; assert_in_delta(0.35916878578447964, worksheet.outputs_energy_flows_ad142, 0.002); end
  def test_outputs_energy_flows_c144; assert_equal("n/a", worksheet.outputs_energy_flows_c144); end
  def test_outputs_energy_flows_d144; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d144); end
  def test_outputs_energy_flows_e144; assert_equal("n/a", worksheet.outputs_energy_flows_e144); end
  def test_outputs_energy_flows_f144; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f144); end
  def test_outputs_energy_flows_i144; assert_equal("E.01", worksheet.outputs_energy_flows_i144); end
  def test_outputs_energy_flows_j144; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j144); end
  def test_outputs_energy_flows_v144; assert_in_delta(5.697977079951232e-09, worksheet.outputs_energy_flows_v144, 0.002); end
  def test_outputs_energy_flows_w144; assert_in_delta(0.012195949988459923, worksheet.outputs_energy_flows_w144, 0.002); end
  def test_outputs_energy_flows_x144; assert_in_delta(0.012521770327814766, worksheet.outputs_energy_flows_x144, 0.002); end
  def test_outputs_energy_flows_y144; assert_in_delta(0.02353315024447509, worksheet.outputs_energy_flows_y144, 0.002); end
  def test_outputs_energy_flows_z144; assert_in_delta(0.03395264692486134, worksheet.outputs_energy_flows_z144, 0.002); end
  def test_outputs_energy_flows_aa144; assert_in_delta(0.0428404253903171, worksheet.outputs_energy_flows_aa144, 0.002); end
  def test_outputs_energy_flows_ab144; assert_in_delta(0.07025073664959273, worksheet.outputs_energy_flows_ab144, 0.002); end
  def test_outputs_energy_flows_ac144; assert_in_delta(0.0944773509727653, worksheet.outputs_energy_flows_ac144, 0.002); end
  def test_outputs_energy_flows_ad144; assert_in_delta(0.12619500574171405, worksheet.outputs_energy_flows_ad144, 0.002); end
  def test_outputs_energy_flows_c146; assert_equal("n/a", worksheet.outputs_energy_flows_c146); end
  def test_outputs_energy_flows_d146; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d146); end
  def test_outputs_energy_flows_e146; assert_equal("G.01", worksheet.outputs_energy_flows_e146); end
  def test_outputs_energy_flows_f146; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f146); end
  def test_outputs_energy_flows_g146; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g146); end
  def test_outputs_energy_flows_h146; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h146); end
  def test_outputs_energy_flows_i146; assert_equal("E.01", worksheet.outputs_energy_flows_i146); end
  def test_outputs_energy_flows_j146; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j146); end
  def test_outputs_energy_flows_v146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v146||0), 0.002); end
  def test_outputs_energy_flows_w146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w146||0), 0.002); end
  def test_outputs_energy_flows_x146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x146||0), 0.002); end
  def test_outputs_energy_flows_y146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y146||0), 0.002); end
  def test_outputs_energy_flows_z146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z146||0), 0.002); end
  def test_outputs_energy_flows_aa146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa146||0), 0.002); end
  def test_outputs_energy_flows_ab146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab146||0), 0.002); end
  def test_outputs_energy_flows_ac146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac146||0), 0.002); end
  def test_outputs_energy_flows_ad146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad146||0), 0.002); end
  def test_outputs_energy_flows_c148; assert_equal("n/a", worksheet.outputs_energy_flows_c148); end
  def test_outputs_energy_flows_d148; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d148); end
  def test_outputs_energy_flows_e148; assert_equal("n/a", worksheet.outputs_energy_flows_e148); end
  def test_outputs_energy_flows_f148; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f148); end
  def test_outputs_energy_flows_g148; assert_equal("n/a", worksheet.outputs_energy_flows_g148); end
  def test_outputs_energy_flows_h148; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h148); end
  def test_outputs_energy_flows_i148; assert_equal("E.01", worksheet.outputs_energy_flows_i148); end
  def test_outputs_energy_flows_j148; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j148); end
  def test_outputs_energy_flows_v148; assert_in_epsilon(3.955, worksheet.outputs_energy_flows_v148, 0.002); end
  def test_outputs_energy_flows_w148; assert_in_epsilon(4.038268778938357, worksheet.outputs_energy_flows_w148, 0.002); end
  def test_outputs_energy_flows_x148; assert_in_epsilon(4.243773218367421, worksheet.outputs_energy_flows_x148, 0.002); end
  def test_outputs_energy_flows_y148; assert_in_epsilon(4.417785470449505, worksheet.outputs_energy_flows_y148, 0.002); end
  def test_outputs_energy_flows_z148; assert_in_epsilon(4.581073536840936, worksheet.outputs_energy_flows_z148, 0.002); end
  def test_outputs_energy_flows_aa148; assert_in_epsilon(4.7339014434161175, worksheet.outputs_energy_flows_aa148, 0.002); end
  def test_outputs_energy_flows_ab148; assert_in_epsilon(4.8910930312225265, worksheet.outputs_energy_flows_ab148, 0.002); end
  def test_outputs_energy_flows_ac148; assert_in_epsilon(5.036168723142239, worksheet.outputs_energy_flows_ac148, 0.002); end
  def test_outputs_energy_flows_ad148; assert_in_epsilon(5.1920961091271245, worksheet.outputs_energy_flows_ad148, 0.002); end
  def test_outputs_energy_flows_d150; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d150); end
  def test_outputs_energy_flows_f150; assert_equal("Global oversupply", worksheet.outputs_energy_flows_f150); end
  def test_outputs_energy_flows_i150; assert_equal("G.E.02", worksheet.outputs_energy_flows_i150); end
  def test_outputs_energy_flows_j150; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j150); end
  def test_outputs_energy_flows_p150; assert_equal("Net balance", worksheet.outputs_energy_flows_p150); end
  def test_outputs_energy_flows_v150; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v150||0), 0.002); end
  def test_outputs_energy_flows_w150; assert_in_delta(-1.4210854715202004e-14, worksheet.outputs_energy_flows_w150, 0.002); end
  def test_outputs_energy_flows_x150; assert_in_delta(1.4210854715202004e-14, worksheet.outputs_energy_flows_x150, 0.002); end
  def test_outputs_energy_flows_y150; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y150||0), 0.002); end
  def test_outputs_energy_flows_z150; assert_in_delta(-1.4210854715202004e-14, worksheet.outputs_energy_flows_z150, 0.002); end
  def test_outputs_energy_flows_aa150; assert_in_delta(2.842170943040401e-14, worksheet.outputs_energy_flows_aa150, 0.002); end
  def test_outputs_energy_flows_ab150; assert_in_delta(-2.842170943040401e-14, worksheet.outputs_energy_flows_ab150, 0.002); end
  def test_outputs_energy_flows_ac150; assert_in_delta(2.842170943040401e-14, worksheet.outputs_energy_flows_ac150, 0.002); end
  def test_outputs_energy_flows_ad150; assert_in_delta(2.842170943040401e-14, worksheet.outputs_energy_flows_ad150, 0.002); end
  def test_outputs_energy_flows_c152; assert_equal("n/a", worksheet.outputs_energy_flows_c152); end
  def test_outputs_energy_flows_d152; assert_equal("Solid", worksheet.outputs_energy_flows_d152); end
  def test_outputs_energy_flows_e152; assert_equal("n/a", worksheet.outputs_energy_flows_e152); end
  def test_outputs_energy_flows_f152; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f152); end
  def test_outputs_energy_flows_i152; assert_equal("C.01", worksheet.outputs_energy_flows_i152); end
  def test_outputs_energy_flows_j152; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j152); end
  def test_outputs_energy_flows_k152; assert_equal("Global buildings", worksheet.outputs_energy_flows_k152); end
  def test_outputs_energy_flows_v152; assert_in_epsilon(12.848215103064577, worksheet.outputs_energy_flows_v152, 0.002); end
  def test_outputs_energy_flows_w152; assert_in_epsilon(13.609060749981921, worksheet.outputs_energy_flows_w152, 0.002); end
  def test_outputs_energy_flows_x152; assert_in_epsilon(14.244790903228957, worksheet.outputs_energy_flows_x152, 0.002); end
  def test_outputs_energy_flows_y152; assert_in_epsilon(14.817151749200168, worksheet.outputs_energy_flows_y152, 0.002); end
  def test_outputs_energy_flows_z152; assert_in_epsilon(15.305225123798095, worksheet.outputs_energy_flows_z152, 0.002); end
  def test_outputs_energy_flows_aa152; assert_in_epsilon(15.697597581557428, worksheet.outputs_energy_flows_aa152, 0.002); end
  def test_outputs_energy_flows_ab152; assert_in_epsilon(16.017143171175533, worksheet.outputs_energy_flows_ab152, 0.002); end
  def test_outputs_energy_flows_ac152; assert_in_epsilon(16.259227638345816, worksheet.outputs_energy_flows_ac152, 0.002); end
  def test_outputs_energy_flows_ad152; assert_in_epsilon(16.401491321107216, worksheet.outputs_energy_flows_ad152, 0.002); end
  def test_outputs_energy_flows_c154; assert_equal("n/a", worksheet.outputs_energy_flows_c154); end
  def test_outputs_energy_flows_d154; assert_equal("Solid", worksheet.outputs_energy_flows_d154); end
  def test_outputs_energy_flows_e154; assert_equal("n/a", worksheet.outputs_energy_flows_e154); end
  def test_outputs_energy_flows_f154; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f154); end
  def test_outputs_energy_flows_i154; assert_equal("C.01", worksheet.outputs_energy_flows_i154); end
  def test_outputs_energy_flows_j154; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j154); end
  def test_outputs_energy_flows_k154; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k154); end
  def test_outputs_energy_flows_l154; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l154); end
  def test_outputs_energy_flows_v154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v154||0), 0.002); end
  def test_outputs_energy_flows_w154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w154||0), 0.002); end
  def test_outputs_energy_flows_x154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x154||0), 0.002); end
  def test_outputs_energy_flows_y154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y154||0), 0.002); end
  def test_outputs_energy_flows_z154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z154||0), 0.002); end
  def test_outputs_energy_flows_aa154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa154||0), 0.002); end
  def test_outputs_energy_flows_ab154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab154||0), 0.002); end
  def test_outputs_energy_flows_ac154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac154||0), 0.002); end
  def test_outputs_energy_flows_ad154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad154||0), 0.002); end
  def test_outputs_energy_flows_c156; assert_equal("n/a", worksheet.outputs_energy_flows_c156); end
  def test_outputs_energy_flows_d156; assert_equal("Solid", worksheet.outputs_energy_flows_d156); end
  def test_outputs_energy_flows_e156; assert_equal("n/a", worksheet.outputs_energy_flows_e156); end
  def test_outputs_energy_flows_f156; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f156); end
  def test_outputs_energy_flows_i156; assert_equal("C.01", worksheet.outputs_energy_flows_i156); end
  def test_outputs_energy_flows_j156; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j156); end
  def test_outputs_energy_flows_k156; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k156); end
  def test_outputs_energy_flows_l156; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l156); end
  def test_outputs_energy_flows_v156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v156||0), 0.002); end
  def test_outputs_energy_flows_w156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w156||0), 0.002); end
  def test_outputs_energy_flows_x156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x156||0), 0.002); end
  def test_outputs_energy_flows_y156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y156||0), 0.002); end
  def test_outputs_energy_flows_z156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z156||0), 0.002); end
  def test_outputs_energy_flows_aa156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa156||0), 0.002); end
  def test_outputs_energy_flows_ab156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab156||0), 0.002); end
  def test_outputs_energy_flows_ac156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac156||0), 0.002); end
  def test_outputs_energy_flows_ad156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad156||0), 0.002); end
  def test_outputs_energy_flows_c158; assert_equal("n/a", worksheet.outputs_energy_flows_c158); end
  def test_outputs_energy_flows_d158; assert_equal("Solid", worksheet.outputs_energy_flows_d158); end
  def test_outputs_energy_flows_e158; assert_equal("n/a", worksheet.outputs_energy_flows_e158); end
  def test_outputs_energy_flows_f158; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f158); end
  def test_outputs_energy_flows_i158; assert_equal("C.01", worksheet.outputs_energy_flows_i158); end
  def test_outputs_energy_flows_j158; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j158); end
  def test_outputs_energy_flows_k158; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k158); end
  def test_outputs_energy_flows_l158; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l158); end
  def test_outputs_energy_flows_v158; assert_in_epsilon(2.7875467832665146, worksheet.outputs_energy_flows_v158, 0.002); end
  def test_outputs_energy_flows_w158; assert_in_epsilon(2.836352246295604, worksheet.outputs_energy_flows_w158, 0.002); end
  def test_outputs_energy_flows_x158; assert_in_epsilon(2.8216098253174264, worksheet.outputs_energy_flows_x158, 0.002); end
  def test_outputs_energy_flows_y158; assert_in_epsilon(2.7829256964865734, worksheet.outputs_energy_flows_y158, 0.002); end
  def test_outputs_energy_flows_z158; assert_in_epsilon(2.7153741999236036, worksheet.outputs_energy_flows_z158, 0.002); end
  def test_outputs_energy_flows_aa158; assert_in_epsilon(2.612900224705611, worksheet.outputs_energy_flows_aa158, 0.002); end
  def test_outputs_energy_flows_ab158; assert_in_epsilon(2.490882824341412, worksheet.outputs_energy_flows_ab158, 0.002); end
  def test_outputs_energy_flows_ac158; assert_in_epsilon(2.3444960296517348, worksheet.outputs_energy_flows_ac158, 0.002); end
  def test_outputs_energy_flows_ad158; assert_in_epsilon(2.1864251117966926, worksheet.outputs_energy_flows_ad158, 0.002); end
  def test_outputs_energy_flows_c160; assert_equal("n/a", worksheet.outputs_energy_flows_c160); end
  def test_outputs_energy_flows_d160; assert_equal("Solid", worksheet.outputs_energy_flows_d160); end
  def test_outputs_energy_flows_e160; assert_equal("n/a", worksheet.outputs_energy_flows_e160); end
  def test_outputs_energy_flows_f160; assert_equal("Non domestic", worksheet.outputs_energy_flows_f160); end
  def test_outputs_energy_flows_i160; assert_equal("C.01", worksheet.outputs_energy_flows_i160); end
  def test_outputs_energy_flows_j160; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j160); end
  def test_outputs_energy_flows_k160; assert_equal("Non-residential", worksheet.outputs_energy_flows_k160); end
  def test_outputs_energy_flows_v160; assert_in_delta(0.8793766922958857, worksheet.outputs_energy_flows_v160, 0.002); end
  def test_outputs_energy_flows_w160; assert_in_delta(0.9048453397672145, worksheet.outputs_energy_flows_w160, 0.002); end
  def test_outputs_energy_flows_x160; assert_in_delta(0.9274977801114999, worksheet.outputs_energy_flows_x160, 0.002); end
  def test_outputs_energy_flows_y160; assert_in_delta(0.9432052328193046, worksheet.outputs_energy_flows_y160, 0.002); end
  def test_outputs_energy_flows_z160; assert_in_delta(0.9521969617269006, worksheet.outputs_energy_flows_z160, 0.002); end
  def test_outputs_energy_flows_aa160; assert_in_delta(0.9549577230428157, worksheet.outputs_energy_flows_aa160, 0.002); end
  def test_outputs_energy_flows_ab160; assert_in_delta(0.9517271788309917, worksheet.outputs_energy_flows_ab160, 0.002); end
  def test_outputs_energy_flows_ac160; assert_in_delta(0.9425837740167339, worksheet.outputs_energy_flows_ac160, 0.002); end
  def test_outputs_energy_flows_ad160; assert_in_delta(0.9277173153474623, worksheet.outputs_energy_flows_ad160, 0.002); end
  def test_outputs_energy_flows_c162; assert_equal("n/a", worksheet.outputs_energy_flows_c162); end
  def test_outputs_energy_flows_d162; assert_equal("Solid", worksheet.outputs_energy_flows_d162); end
  def test_outputs_energy_flows_e162; assert_equal("n/a", worksheet.outputs_energy_flows_e162); end
  def test_outputs_energy_flows_f162; assert_equal("Steel", worksheet.outputs_energy_flows_f162); end
  def test_outputs_energy_flows_i162; assert_equal("C.01", worksheet.outputs_energy_flows_i162); end
  def test_outputs_energy_flows_j162; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j162); end
  def test_outputs_energy_flows_v162; assert_in_delta(0.5489501886, worksheet.outputs_energy_flows_v162, 0.002); end
  def test_outputs_energy_flows_w162; assert_in_delta(0.9160983903282321, worksheet.outputs_energy_flows_w162, 0.002); end
  def test_outputs_energy_flows_x162; assert_in_epsilon(1.4561729248079183, worksheet.outputs_energy_flows_x162, 0.002); end
  def test_outputs_energy_flows_y162; assert_in_epsilon(2.0312536890920416, worksheet.outputs_energy_flows_y162, 0.002); end
  def test_outputs_energy_flows_z162; assert_in_epsilon(2.661247786155352, worksheet.outputs_energy_flows_z162, 0.002); end
  def test_outputs_energy_flows_aa162; assert_in_epsilon(3.32617836266689, worksheet.outputs_energy_flows_aa162, 0.002); end
  def test_outputs_energy_flows_ab162; assert_in_epsilon(4.068703421367239, worksheet.outputs_energy_flows_ab162, 0.002); end
  def test_outputs_energy_flows_ac162; assert_in_epsilon(4.8752435093605815, worksheet.outputs_energy_flows_ac162, 0.002); end
  def test_outputs_energy_flows_ad162; assert_in_epsilon(5.7495178751338925, worksheet.outputs_energy_flows_ad162, 0.002); end
  def test_outputs_energy_flows_c164; assert_equal("n/a", worksheet.outputs_energy_flows_c164); end
  def test_outputs_energy_flows_d164; assert_equal("Solid", worksheet.outputs_energy_flows_d164); end
  def test_outputs_energy_flows_e164; assert_equal("n/a", worksheet.outputs_energy_flows_e164); end
  def test_outputs_energy_flows_f164; assert_equal("Aluminium", worksheet.outputs_energy_flows_f164); end
  def test_outputs_energy_flows_i164; assert_equal("C.01", worksheet.outputs_energy_flows_i164); end
  def test_outputs_energy_flows_j164; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j164); end
  def test_outputs_energy_flows_v164; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v164||0), 0.002); end
  def test_outputs_energy_flows_w164; assert_in_delta(0.0002755274602794999, worksheet.outputs_energy_flows_w164, 0.002); end
  def test_outputs_energy_flows_x164; assert_in_delta(0.0007168438372610111, worksheet.outputs_energy_flows_x164, 0.002); end
  def test_outputs_energy_flows_y164; assert_in_delta(0.0012765445496340112, worksheet.outputs_energy_flows_y164, 0.002); end
  def test_outputs_energy_flows_z164; assert_in_delta(0.0019685895567910345, worksheet.outputs_energy_flows_z164, 0.002); end
  def test_outputs_energy_flows_aa164; assert_in_delta(0.0027926362306781643, worksheet.outputs_energy_flows_aa164, 0.002); end
  def test_outputs_energy_flows_ab164; assert_in_delta(0.003795188583939789, worksheet.outputs_energy_flows_ab164, 0.002); end
  def test_outputs_energy_flows_ac164; assert_in_delta(0.004975562483247998, worksheet.outputs_energy_flows_ac164, 0.002); end
  def test_outputs_energy_flows_ad164; assert_in_delta(0.006397736470546331, worksheet.outputs_energy_flows_ad164, 0.002); end
  def test_outputs_energy_flows_c166; assert_equal("n/a", worksheet.outputs_energy_flows_c166); end
  def test_outputs_energy_flows_d166; assert_equal("Solid", worksheet.outputs_energy_flows_d166); end
  def test_outputs_energy_flows_e166; assert_equal("n/a", worksheet.outputs_energy_flows_e166); end
  def test_outputs_energy_flows_f166; assert_equal("Cement", worksheet.outputs_energy_flows_f166); end
  def test_outputs_energy_flows_i166; assert_equal("C.01", worksheet.outputs_energy_flows_i166); end
  def test_outputs_energy_flows_j166; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j166); end
  def test_outputs_energy_flows_v166; assert_in_delta(0.4925092998042991, worksheet.outputs_energy_flows_v166, 0.002); end
  def test_outputs_energy_flows_w166; assert_in_delta(0.5530602171329254, worksheet.outputs_energy_flows_w166, 0.002); end
  def test_outputs_energy_flows_x166; assert_in_delta(0.6219098080566814, worksheet.outputs_energy_flows_x166, 0.002); end
  def test_outputs_energy_flows_y166; assert_in_delta(0.6736459833916177, worksheet.outputs_energy_flows_y166, 0.002); end
  def test_outputs_energy_flows_z166; assert_in_delta(0.7244366171093042, worksheet.outputs_energy_flows_z166, 0.002); end
  def test_outputs_energy_flows_aa166; assert_in_delta(0.7758591737556442, worksheet.outputs_energy_flows_aa166, 0.002); end
  def test_outputs_energy_flows_ab166; assert_in_delta(0.8258444683748313, worksheet.outputs_energy_flows_ab166, 0.002); end
  def test_outputs_energy_flows_ac166; assert_in_delta(0.8725365218185814, worksheet.outputs_energy_flows_ac166, 0.002); end
  def test_outputs_energy_flows_ad166; assert_in_delta(0.9242843279631934, worksheet.outputs_energy_flows_ad166, 0.002); end
  def test_outputs_energy_flows_c168; assert_equal("n/a", worksheet.outputs_energy_flows_c168); end
  def test_outputs_energy_flows_d168; assert_equal("Solid", worksheet.outputs_energy_flows_d168); end
  def test_outputs_energy_flows_e168; assert_equal("n/a", worksheet.outputs_energy_flows_e168); end
  def test_outputs_energy_flows_f168; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f168); end
  def test_outputs_energy_flows_i168; assert_equal("C.01", worksheet.outputs_energy_flows_i168); end
  def test_outputs_energy_flows_j168; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j168); end
  def test_outputs_energy_flows_v168; assert_in_epsilon(1.7854467564492018, worksheet.outputs_energy_flows_v168, 0.002); end
  def test_outputs_energy_flows_w168; assert_in_epsilon(1.8470475671700546, worksheet.outputs_energy_flows_w168, 0.002); end
  def test_outputs_energy_flows_x168; assert_in_epsilon(2.1258101113624086, worksheet.outputs_energy_flows_x168, 0.002); end
  def test_outputs_energy_flows_y168; assert_in_epsilon(2.411947743923325, worksheet.outputs_energy_flows_y168, 0.002); end
  def test_outputs_energy_flows_z168; assert_in_epsilon(2.7220144021492243, worksheet.outputs_energy_flows_z168, 0.002); end
  def test_outputs_energy_flows_aa168; assert_in_epsilon(3.0495173256872463, worksheet.outputs_energy_flows_aa168, 0.002); end
  def test_outputs_energy_flows_ab168; assert_in_epsilon(3.4257621979467543, worksheet.outputs_energy_flows_ab168, 0.002); end
  def test_outputs_energy_flows_ac168; assert_in_epsilon(3.8262491061537447, worksheet.outputs_energy_flows_ac168, 0.002); end
  def test_outputs_energy_flows_ad168; assert_in_epsilon(4.288632995854764, worksheet.outputs_energy_flows_ad168, 0.002); end
  def test_outputs_energy_flows_c170; assert_equal("n/a", worksheet.outputs_energy_flows_c170); end
  def test_outputs_energy_flows_d170; assert_equal("Solid", worksheet.outputs_energy_flows_d170); end
  def test_outputs_energy_flows_e170; assert_equal("n/a", worksheet.outputs_energy_flows_e170); end
  def test_outputs_energy_flows_f170; assert_equal("Chemicals", worksheet.outputs_energy_flows_f170); end
  def test_outputs_energy_flows_i170; assert_equal("C.01", worksheet.outputs_energy_flows_i170); end
  def test_outputs_energy_flows_j170; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j170); end
  def test_outputs_energy_flows_v170; assert_in_delta(0.16313870478909603, worksheet.outputs_energy_flows_v170, 0.002); end
  def test_outputs_energy_flows_w170; assert_in_delta(0.1861814072376733, worksheet.outputs_energy_flows_w170, 0.002); end
  def test_outputs_energy_flows_x170; assert_in_delta(0.21415509808343625, worksheet.outputs_energy_flows_x170, 0.002); end
  def test_outputs_energy_flows_y170; assert_in_delta(0.24272156489885394, worksheet.outputs_energy_flows_y170, 0.002); end
  def test_outputs_energy_flows_z170; assert_in_delta(0.2733543331467108, worksheet.outputs_energy_flows_z170, 0.002); end
  def test_outputs_energy_flows_aa170; assert_in_delta(0.3048732159674221, worksheet.outputs_energy_flows_aa170, 0.002); end
  def test_outputs_energy_flows_ab170; assert_in_delta(0.3413480365990526, worksheet.outputs_energy_flows_ab170, 0.002); end
  def test_outputs_energy_flows_ac170; assert_in_delta(0.379300666036609, worksheet.outputs_energy_flows_ac170, 0.002); end
  def test_outputs_energy_flows_ad170; assert_in_delta(0.4233041085237358, worksheet.outputs_energy_flows_ad170, 0.002); end
  def test_outputs_energy_flows_c172; assert_equal("n/a", worksheet.outputs_energy_flows_c172); end
  def test_outputs_energy_flows_d172; assert_equal("Solid", worksheet.outputs_energy_flows_d172); end
  def test_outputs_energy_flows_e172; assert_equal("n/a", worksheet.outputs_energy_flows_e172); end
  def test_outputs_energy_flows_f172; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f172); end
  def test_outputs_energy_flows_i172; assert_equal("C.01", worksheet.outputs_energy_flows_i172); end
  def test_outputs_energy_flows_j172; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j172); end
  def test_outputs_energy_flows_l172; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l172); end
  def test_outputs_energy_flows_m172; assert_equal("Timber", worksheet.outputs_energy_flows_m172); end
  def test_outputs_energy_flows_v172; assert_in_epsilon(5.432131184106508, worksheet.outputs_energy_flows_v172, 0.002); end
  def test_outputs_energy_flows_w172; assert_in_epsilon(5.622631299994135, worksheet.outputs_energy_flows_w172, 0.002); end
  def test_outputs_energy_flows_x172; assert_in_epsilon(6.004094316170791, worksheet.outputs_energy_flows_x172, 0.002); end
  def test_outputs_energy_flows_y172; assert_in_epsilon(6.347175409728408, worksheet.outputs_energy_flows_y172, 0.002); end
  def test_outputs_energy_flows_z172; assert_in_epsilon(6.693341061420316, worksheet.outputs_energy_flows_z172, 0.002); end
  def test_outputs_energy_flows_aa172; assert_in_epsilon(7.041601672391414, worksheet.outputs_energy_flows_aa172, 0.002); end
  def test_outputs_energy_flows_ab172; assert_in_epsilon(7.409615175779175, worksheet.outputs_energy_flows_ab172, 0.002); end
  def test_outputs_energy_flows_ac172; assert_in_epsilon(7.7817738476585845, worksheet.outputs_energy_flows_ac172, 0.002); end
  def test_outputs_energy_flows_ad172; assert_in_epsilon(8.189118058608024, worksheet.outputs_energy_flows_ad172, 0.002); end
  def test_outputs_energy_flows_c174; assert_equal("n/a", worksheet.outputs_energy_flows_c174); end
  def test_outputs_energy_flows_d174; assert_equal("Solid", worksheet.outputs_energy_flows_d174); end
  def test_outputs_energy_flows_e174; assert_equal("n/a", worksheet.outputs_energy_flows_e174); end
  def test_outputs_energy_flows_f174; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f174); end
  def test_outputs_energy_flows_i174; assert_equal("C.01", worksheet.outputs_energy_flows_i174); end
  def test_outputs_energy_flows_j174; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j174); end
  def test_outputs_energy_flows_l174; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l174); end
  def test_outputs_energy_flows_m174; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m174); end
  def test_outputs_energy_flows_v174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v174||0), 0.002); end
  def test_outputs_energy_flows_w174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w174||0), 0.002); end
  def test_outputs_energy_flows_x174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x174||0), 0.002); end
  def test_outputs_energy_flows_y174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y174||0), 0.002); end
  def test_outputs_energy_flows_z174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z174||0), 0.002); end
  def test_outputs_energy_flows_aa174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa174||0), 0.002); end
  def test_outputs_energy_flows_ab174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab174||0), 0.002); end
  def test_outputs_energy_flows_ac174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac174||0), 0.002); end
  def test_outputs_energy_flows_ad174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad174||0), 0.002); end
  def test_outputs_energy_flows_c176; assert_equal("n/a", worksheet.outputs_energy_flows_c176); end
  def test_outputs_energy_flows_d176; assert_equal("Solid", worksheet.outputs_energy_flows_d176); end
  def test_outputs_energy_flows_e176; assert_equal("n/a", worksheet.outputs_energy_flows_e176); end
  def test_outputs_energy_flows_f176; assert_equal("International passenger", worksheet.outputs_energy_flows_f176); end
  def test_outputs_energy_flows_i176; assert_equal("C.01", worksheet.outputs_energy_flows_i176); end
  def test_outputs_energy_flows_j176; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j176); end
  def test_outputs_energy_flows_l176; assert_equal("International", worksheet.outputs_energy_flows_l176); end
  def test_outputs_energy_flows_v176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v176||0), 0.002); end
  def test_outputs_energy_flows_w176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w176||0), 0.002); end
  def test_outputs_energy_flows_x176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x176||0), 0.002); end
  def test_outputs_energy_flows_y176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y176||0), 0.002); end
  def test_outputs_energy_flows_z176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z176||0), 0.002); end
  def test_outputs_energy_flows_aa176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa176||0), 0.002); end
  def test_outputs_energy_flows_ab176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab176||0), 0.002); end
  def test_outputs_energy_flows_ac176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac176||0), 0.002); end
  def test_outputs_energy_flows_ad176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad176||0), 0.002); end
  def test_outputs_energy_flows_c178; assert_equal("n/a", worksheet.outputs_energy_flows_c178); end
  def test_outputs_energy_flows_d178; assert_equal("Solid", worksheet.outputs_energy_flows_d178); end
  def test_outputs_energy_flows_e178; assert_equal("n/a", worksheet.outputs_energy_flows_e178); end
  def test_outputs_energy_flows_f178; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f178); end
  def test_outputs_energy_flows_i178; assert_equal("C.01", worksheet.outputs_energy_flows_i178); end
  def test_outputs_energy_flows_j178; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j178); end
  def test_outputs_energy_flows_l178; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l178); end
  def test_outputs_energy_flows_v178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v178||0), 0.002); end
  def test_outputs_energy_flows_w178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w178||0), 0.002); end
  def test_outputs_energy_flows_x178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x178||0), 0.002); end
  def test_outputs_energy_flows_y178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y178||0), 0.002); end
  def test_outputs_energy_flows_z178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z178||0), 0.002); end
  def test_outputs_energy_flows_aa178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa178||0), 0.002); end
  def test_outputs_energy_flows_ab178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab178||0), 0.002); end
  def test_outputs_energy_flows_ac178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac178||0), 0.002); end
  def test_outputs_energy_flows_ad178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad178||0), 0.002); end
  def test_outputs_energy_flows_c180; assert_equal("n/a", worksheet.outputs_energy_flows_c180); end
  def test_outputs_energy_flows_d180; assert_equal("Solid", worksheet.outputs_energy_flows_d180); end
  def test_outputs_energy_flows_e180; assert_equal("n/a", worksheet.outputs_energy_flows_e180); end
  def test_outputs_energy_flows_f180; assert_equal("International freight", worksheet.outputs_energy_flows_f180); end
  def test_outputs_energy_flows_i180; assert_equal("C.01", worksheet.outputs_energy_flows_i180); end
  def test_outputs_energy_flows_j180; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j180); end
  def test_outputs_energy_flows_l180; assert_equal("International freight", worksheet.outputs_energy_flows_l180); end
  def test_outputs_energy_flows_v180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v180||0), 0.002); end
  def test_outputs_energy_flows_w180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w180||0), 0.002); end
  def test_outputs_energy_flows_x180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x180||0), 0.002); end
  def test_outputs_energy_flows_y180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y180||0), 0.002); end
  def test_outputs_energy_flows_z180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z180||0), 0.002); end
  def test_outputs_energy_flows_aa180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa180||0), 0.002); end
  def test_outputs_energy_flows_ab180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab180||0), 0.002); end
  def test_outputs_energy_flows_ac180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac180||0), 0.002); end
  def test_outputs_energy_flows_ad180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad180||0), 0.002); end
  def test_outputs_energy_flows_c182; assert_equal("n/a", worksheet.outputs_energy_flows_c182); end
  def test_outputs_energy_flows_d182; assert_equal("Solid", worksheet.outputs_energy_flows_d182); end
  def test_outputs_energy_flows_e182; assert_equal("n/a", worksheet.outputs_energy_flows_e182); end
  def test_outputs_energy_flows_f182; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f182); end
  def test_outputs_energy_flows_i182; assert_equal("C.01", worksheet.outputs_energy_flows_i182); end
  def test_outputs_energy_flows_j182; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j182); end
  def test_outputs_energy_flows_v182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v182||0), 0.002); end
  def test_outputs_energy_flows_w182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w182||0), 0.002); end
  def test_outputs_energy_flows_x182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x182||0), 0.002); end
  def test_outputs_energy_flows_y182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y182||0), 0.002); end
  def test_outputs_energy_flows_z182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z182||0), 0.002); end
  def test_outputs_energy_flows_aa182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa182||0), 0.002); end
  def test_outputs_energy_flows_ab182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab182||0), 0.002); end
  def test_outputs_energy_flows_ac182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac182||0), 0.002); end
  def test_outputs_energy_flows_ad182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad182||0), 0.002); end
  def test_outputs_energy_flows_c184; assert_equal("n/a", worksheet.outputs_energy_flows_c184); end
  def test_outputs_energy_flows_d184; assert_equal("Solid", worksheet.outputs_energy_flows_d184); end
  def test_outputs_energy_flows_e184; assert_equal("G.01", worksheet.outputs_energy_flows_e184); end
  def test_outputs_energy_flows_f184; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f184); end
  def test_outputs_energy_flows_g184; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g184); end
  def test_outputs_energy_flows_h184; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h184); end
  def test_outputs_energy_flows_i184; assert_equal("C.01", worksheet.outputs_energy_flows_i184); end
  def test_outputs_energy_flows_j184; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j184); end
  def test_outputs_energy_flows_v184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v184||0), 0.002); end
  def test_outputs_energy_flows_w184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w184||0), 0.002); end
  def test_outputs_energy_flows_x184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x184||0), 0.002); end
  def test_outputs_energy_flows_y184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y184||0), 0.002); end
  def test_outputs_energy_flows_z184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z184||0), 0.002); end
  def test_outputs_energy_flows_aa184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa184||0), 0.002); end
  def test_outputs_energy_flows_ab184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab184||0), 0.002); end
  def test_outputs_energy_flows_ac184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac184||0), 0.002); end
  def test_outputs_energy_flows_ad184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad184||0), 0.002); end
  def test_outputs_energy_flows_c186; assert_equal("n/a", worksheet.outputs_energy_flows_c186); end
  def test_outputs_energy_flows_d186; assert_equal("Solid", worksheet.outputs_energy_flows_d186); end
  def test_outputs_energy_flows_e186; assert_equal("n/a", worksheet.outputs_energy_flows_e186); end
  def test_outputs_energy_flows_f186; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f186); end
  def test_outputs_energy_flows_g186; assert_equal("n/a", worksheet.outputs_energy_flows_g186); end
  def test_outputs_energy_flows_h186; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h186); end
  def test_outputs_energy_flows_i186; assert_equal("C.01", worksheet.outputs_energy_flows_i186); end
  def test_outputs_energy_flows_j186; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j186); end
  def test_outputs_energy_flows_v186; assert_in_epsilon(21.42827793385157, worksheet.outputs_energy_flows_v186, 0.002); end
  def test_outputs_energy_flows_w186; assert_in_epsilon(21.847740717975167, worksheet.outputs_energy_flows_w186, 0.002); end
  def test_outputs_energy_flows_x186; assert_in_epsilon(23.07336639918354, worksheet.outputs_energy_flows_x186, 0.002); end
  def test_outputs_energy_flows_y186; assert_in_epsilon(24.45656177477411, worksheet.outputs_energy_flows_y186, 0.002); end
  def test_outputs_energy_flows_z186; assert_in_epsilon(25.903364990685834, worksheet.outputs_energy_flows_z186, 0.002); end
  def test_outputs_energy_flows_aa186; assert_in_epsilon(27.33174630896662, worksheet.outputs_energy_flows_aa186, 0.002); end
  def test_outputs_energy_flows_ab186; assert_in_epsilon(28.74530334731411, worksheet.outputs_energy_flows_ab186, 0.002); end
  def test_outputs_energy_flows_ac186; assert_in_epsilon(30.34536242124555, worksheet.outputs_energy_flows_ac186, 0.002); end
  def test_outputs_energy_flows_ad186; assert_in_epsilon(31.892751910864526, worksheet.outputs_energy_flows_ad186, 0.002); end
  def test_outputs_energy_flows_c188; assert_equal("n/a", worksheet.outputs_energy_flows_c188); end
  def test_outputs_energy_flows_d188; assert_equal("Liquid", worksheet.outputs_energy_flows_d188); end
  def test_outputs_energy_flows_e188; assert_equal("n/a", worksheet.outputs_energy_flows_e188); end
  def test_outputs_energy_flows_f188; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f188); end
  def test_outputs_energy_flows_i188; assert_equal("C.02", worksheet.outputs_energy_flows_i188); end
  def test_outputs_energy_flows_j188; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j188); end
  def test_outputs_energy_flows_k188; assert_equal("Global buildings", worksheet.outputs_energy_flows_k188); end
  def test_outputs_energy_flows_v188; assert_in_epsilon(5.732318161068067, worksheet.outputs_energy_flows_v188, 0.002); end
  def test_outputs_energy_flows_w188; assert_in_epsilon(6.11984527836189, worksheet.outputs_energy_flows_w188, 0.002); end
  def test_outputs_energy_flows_x188; assert_in_epsilon(6.436185381563037, worksheet.outputs_energy_flows_x188, 0.002); end
  def test_outputs_energy_flows_y188; assert_in_epsilon(6.714771409002239, worksheet.outputs_energy_flows_y188, 0.002); end
  def test_outputs_energy_flows_z188; assert_in_epsilon(6.945126836349154, worksheet.outputs_energy_flows_z188, 0.002); end
  def test_outputs_energy_flows_aa188; assert_in_epsilon(7.101843225506501, worksheet.outputs_energy_flows_aa188, 0.002); end
  def test_outputs_energy_flows_ab188; assert_in_epsilon(7.215997451557383, worksheet.outputs_energy_flows_ab188, 0.002); end
  def test_outputs_energy_flows_ac188; assert_in_epsilon(7.262030565459638, worksheet.outputs_energy_flows_ac188, 0.002); end
  def test_outputs_energy_flows_ad188; assert_in_epsilon(7.272465150808401, worksheet.outputs_energy_flows_ad188, 0.002); end
  def test_outputs_energy_flows_c190; assert_equal("n/a", worksheet.outputs_energy_flows_c190); end
  def test_outputs_energy_flows_d190; assert_equal("Liquid", worksheet.outputs_energy_flows_d190); end
  def test_outputs_energy_flows_e190; assert_equal("n/a", worksheet.outputs_energy_flows_e190); end
  def test_outputs_energy_flows_f190; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f190); end
  def test_outputs_energy_flows_i190; assert_equal("C.02", worksheet.outputs_energy_flows_i190); end
  def test_outputs_energy_flows_j190; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j190); end
  def test_outputs_energy_flows_k190; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k190); end
  def test_outputs_energy_flows_l190; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l190); end
  def test_outputs_energy_flows_v190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v190||0), 0.002); end
  def test_outputs_energy_flows_w190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w190||0), 0.002); end
  def test_outputs_energy_flows_x190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x190||0), 0.002); end
  def test_outputs_energy_flows_y190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y190||0), 0.002); end
  def test_outputs_energy_flows_z190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z190||0), 0.002); end
  def test_outputs_energy_flows_aa190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa190||0), 0.002); end
  def test_outputs_energy_flows_ab190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab190||0), 0.002); end
  def test_outputs_energy_flows_ac190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac190||0), 0.002); end
  def test_outputs_energy_flows_ad190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad190||0), 0.002); end
  def test_outputs_energy_flows_c192; assert_equal("n/a", worksheet.outputs_energy_flows_c192); end
  def test_outputs_energy_flows_d192; assert_equal("Liquid", worksheet.outputs_energy_flows_d192); end
  def test_outputs_energy_flows_e192; assert_equal("n/a", worksheet.outputs_energy_flows_e192); end
  def test_outputs_energy_flows_f192; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f192); end
  def test_outputs_energy_flows_i192; assert_equal("C.02", worksheet.outputs_energy_flows_i192); end
  def test_outputs_energy_flows_j192; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j192); end
  def test_outputs_energy_flows_k192; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k192); end
  def test_outputs_energy_flows_l192; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l192); end
  def test_outputs_energy_flows_v192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v192||0), 0.002); end
  def test_outputs_energy_flows_w192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w192||0), 0.002); end
  def test_outputs_energy_flows_x192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x192||0), 0.002); end
  def test_outputs_energy_flows_y192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y192||0), 0.002); end
  def test_outputs_energy_flows_z192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z192||0), 0.002); end
  def test_outputs_energy_flows_aa192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa192||0), 0.002); end
  def test_outputs_energy_flows_ab192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab192||0), 0.002); end
  def test_outputs_energy_flows_ac192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac192||0), 0.002); end
  def test_outputs_energy_flows_ad192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad192||0), 0.002); end
  def test_outputs_energy_flows_c194; assert_equal("n/a", worksheet.outputs_energy_flows_c194); end
  def test_outputs_energy_flows_d194; assert_equal("Liquid", worksheet.outputs_energy_flows_d194); end
  def test_outputs_energy_flows_e194; assert_equal("n/a", worksheet.outputs_energy_flows_e194); end
  def test_outputs_energy_flows_f194; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f194); end
  def test_outputs_energy_flows_i194; assert_equal("C.02", worksheet.outputs_energy_flows_i194); end
  def test_outputs_energy_flows_j194; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j194); end
  def test_outputs_energy_flows_k194; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k194); end
  def test_outputs_energy_flows_l194; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l194); end
  def test_outputs_energy_flows_v194; assert_in_epsilon(2.12837206627918, worksheet.outputs_energy_flows_v194, 0.002); end
  def test_outputs_energy_flows_w194; assert_in_epsilon(2.295047936539375, worksheet.outputs_energy_flows_w194, 0.002); end
  def test_outputs_energy_flows_x194; assert_in_epsilon(2.4590391916667134, worksheet.outputs_energy_flows_x194, 0.002); end
  def test_outputs_energy_flows_y194; assert_in_epsilon(2.616983568576526, worksheet.outputs_energy_flows_y194, 0.002); end
  def test_outputs_energy_flows_z194; assert_in_epsilon(2.7609115846502816, worksheet.outputs_energy_flows_z194, 0.002); end
  def test_outputs_energy_flows_aa194; assert_in_epsilon(2.8791967849772853, worksheet.outputs_energy_flows_aa194, 0.002); end
  def test_outputs_energy_flows_ab194; assert_in_epsilon(2.982444456633969, worksheet.outputs_energy_flows_ab194, 0.002); end
  def test_outputs_energy_flows_ac194; assert_in_epsilon(3.059558431491637, worksheet.outputs_energy_flows_ac194, 0.002); end
  def test_outputs_energy_flows_ad194; assert_in_epsilon(3.121892644947326, worksheet.outputs_energy_flows_ad194, 0.002); end
  def test_outputs_energy_flows_c196; assert_equal("n/a", worksheet.outputs_energy_flows_c196); end
  def test_outputs_energy_flows_d196; assert_equal("Liquid", worksheet.outputs_energy_flows_d196); end
  def test_outputs_energy_flows_e196; assert_equal("n/a", worksheet.outputs_energy_flows_e196); end
  def test_outputs_energy_flows_f196; assert_equal("Non domestic", worksheet.outputs_energy_flows_f196); end
  def test_outputs_energy_flows_i196; assert_equal("C.02", worksheet.outputs_energy_flows_i196); end
  def test_outputs_energy_flows_j196; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j196); end
  def test_outputs_energy_flows_k196; assert_equal("Non-residential", worksheet.outputs_energy_flows_k196); end
  def test_outputs_energy_flows_v196; assert_in_epsilon(2.152728852794557, worksheet.outputs_energy_flows_v196, 0.002); end
  def test_outputs_energy_flows_w196; assert_in_epsilon(2.1904127809413887, worksheet.outputs_energy_flows_w196, 0.002); end
  def test_outputs_energy_flows_x196; assert_in_epsilon(2.2134588459439453, worksheet.outputs_energy_flows_x196, 0.002); end
  def test_outputs_energy_flows_y196; assert_in_epsilon(2.217866694359635, worksheet.outputs_energy_flows_y196, 0.002); end
  def test_outputs_energy_flows_z196; assert_in_epsilon(2.2046363262470523, worksheet.outputs_energy_flows_z196, 0.002); end
  def test_outputs_energy_flows_aa196; assert_in_epsilon(2.1753354782744925, worksheet.outputs_energy_flows_aa196, 0.002); end
  def test_outputs_energy_flows_ab196; assert_in_epsilon(2.1309380992102422, worksheet.outputs_energy_flows_ab196, 0.002); end
  def test_outputs_energy_flows_ac196; assert_in_epsilon(2.0720627997721994, worksheet.outputs_energy_flows_ac196, 0.002); end
  def test_outputs_energy_flows_ad196; assert_in_epsilon(1.9996027914424008, worksheet.outputs_energy_flows_ad196, 0.002); end
  def test_outputs_energy_flows_c198; assert_equal("n/a", worksheet.outputs_energy_flows_c198); end
  def test_outputs_energy_flows_d198; assert_equal("Liquid", worksheet.outputs_energy_flows_d198); end
  def test_outputs_energy_flows_e198; assert_equal("n/a", worksheet.outputs_energy_flows_e198); end
  def test_outputs_energy_flows_f198; assert_equal("Steel", worksheet.outputs_energy_flows_f198); end
  def test_outputs_energy_flows_i198; assert_equal("C.02", worksheet.outputs_energy_flows_i198); end
  def test_outputs_energy_flows_j198; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j198); end
  def test_outputs_energy_flows_v198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v198||0), 0.002); end
  def test_outputs_energy_flows_w198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w198||0), 0.002); end
  def test_outputs_energy_flows_x198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x198||0), 0.002); end
  def test_outputs_energy_flows_y198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y198||0), 0.002); end
  def test_outputs_energy_flows_z198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z198||0), 0.002); end
  def test_outputs_energy_flows_aa198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa198||0), 0.002); end
  def test_outputs_energy_flows_ab198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab198||0), 0.002); end
  def test_outputs_energy_flows_ac198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac198||0), 0.002); end
  def test_outputs_energy_flows_ad198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad198||0), 0.002); end
  def test_outputs_energy_flows_c200; assert_equal("n/a", worksheet.outputs_energy_flows_c200); end
  def test_outputs_energy_flows_d200; assert_equal("Liquid", worksheet.outputs_energy_flows_d200); end
  def test_outputs_energy_flows_e200; assert_equal("n/a", worksheet.outputs_energy_flows_e200); end
  def test_outputs_energy_flows_f200; assert_equal("Aluminium", worksheet.outputs_energy_flows_f200); end
  def test_outputs_energy_flows_i200; assert_equal("C.02", worksheet.outputs_energy_flows_i200); end
  def test_outputs_energy_flows_j200; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j200); end
  def test_outputs_energy_flows_v200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v200||0), 0.002); end
  def test_outputs_energy_flows_w200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w200||0), 0.002); end
  def test_outputs_energy_flows_x200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x200||0), 0.002); end
  def test_outputs_energy_flows_y200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y200||0), 0.002); end
  def test_outputs_energy_flows_z200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z200||0), 0.002); end
  def test_outputs_energy_flows_aa200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa200||0), 0.002); end
  def test_outputs_energy_flows_ab200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab200||0), 0.002); end
  def test_outputs_energy_flows_ac200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac200||0), 0.002); end
  def test_outputs_energy_flows_ad200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad200||0), 0.002); end
  def test_outputs_energy_flows_c202; assert_equal("n/a", worksheet.outputs_energy_flows_c202); end
  def test_outputs_energy_flows_d202; assert_equal("Liquid", worksheet.outputs_energy_flows_d202); end
  def test_outputs_energy_flows_e202; assert_equal("n/a", worksheet.outputs_energy_flows_e202); end
  def test_outputs_energy_flows_f202; assert_equal("Cement", worksheet.outputs_energy_flows_f202); end
  def test_outputs_energy_flows_i202; assert_equal("C.02", worksheet.outputs_energy_flows_i202); end
  def test_outputs_energy_flows_j202; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j202); end
  def test_outputs_energy_flows_v202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v202||0), 0.002); end
  def test_outputs_energy_flows_w202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w202||0), 0.002); end
  def test_outputs_energy_flows_x202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x202||0), 0.002); end
  def test_outputs_energy_flows_y202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y202||0), 0.002); end
  def test_outputs_energy_flows_z202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z202||0), 0.002); end
  def test_outputs_energy_flows_aa202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa202||0), 0.002); end
  def test_outputs_energy_flows_ab202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab202||0), 0.002); end
  def test_outputs_energy_flows_ac202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac202||0), 0.002); end
  def test_outputs_energy_flows_ad202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad202||0), 0.002); end
  def test_outputs_energy_flows_c204; assert_equal("n/a", worksheet.outputs_energy_flows_c204); end
  def test_outputs_energy_flows_d204; assert_equal("Liquid", worksheet.outputs_energy_flows_d204); end
  def test_outputs_energy_flows_e204; assert_equal("n/a", worksheet.outputs_energy_flows_e204); end
  def test_outputs_energy_flows_f204; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f204); end
  def test_outputs_energy_flows_i204; assert_equal("C.02", worksheet.outputs_energy_flows_i204); end
  def test_outputs_energy_flows_j204; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j204); end
  def test_outputs_energy_flows_v204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v204||0), 0.002); end
  def test_outputs_energy_flows_w204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w204||0), 0.002); end
  def test_outputs_energy_flows_x204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x204||0), 0.002); end
  def test_outputs_energy_flows_y204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y204||0), 0.002); end
  def test_outputs_energy_flows_z204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z204||0), 0.002); end
  def test_outputs_energy_flows_aa204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa204||0), 0.002); end
  def test_outputs_energy_flows_ab204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab204||0), 0.002); end
  def test_outputs_energy_flows_ac204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac204||0), 0.002); end
  def test_outputs_energy_flows_ad204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad204||0), 0.002); end
  def test_outputs_energy_flows_c206; assert_equal("n/a", worksheet.outputs_energy_flows_c206); end
  def test_outputs_energy_flows_d206; assert_equal("Liquid", worksheet.outputs_energy_flows_d206); end
  def test_outputs_energy_flows_e206; assert_equal("n/a", worksheet.outputs_energy_flows_e206); end
  def test_outputs_energy_flows_f206; assert_equal("Chemicals", worksheet.outputs_energy_flows_f206); end
  def test_outputs_energy_flows_i206; assert_equal("C.02", worksheet.outputs_energy_flows_i206); end
  def test_outputs_energy_flows_j206; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j206); end
  def test_outputs_energy_flows_v206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v206||0), 0.002); end
  def test_outputs_energy_flows_w206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w206||0), 0.002); end
  def test_outputs_energy_flows_x206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x206||0), 0.002); end
  def test_outputs_energy_flows_y206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y206||0), 0.002); end
  def test_outputs_energy_flows_z206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z206||0), 0.002); end
  def test_outputs_energy_flows_aa206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa206||0), 0.002); end
  def test_outputs_energy_flows_ab206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab206||0), 0.002); end
  def test_outputs_energy_flows_ac206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac206||0), 0.002); end
  def test_outputs_energy_flows_ad206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad206||0), 0.002); end
  def test_outputs_energy_flows_c208; assert_equal("n/a", worksheet.outputs_energy_flows_c208); end
  def test_outputs_energy_flows_d208; assert_equal("Liquid", worksheet.outputs_energy_flows_d208); end
  def test_outputs_energy_flows_e208; assert_equal("n/a", worksheet.outputs_energy_flows_e208); end
  def test_outputs_energy_flows_f208; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f208); end
  def test_outputs_energy_flows_i208; assert_equal("C.02", worksheet.outputs_energy_flows_i208); end
  def test_outputs_energy_flows_j208; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j208); end
  def test_outputs_energy_flows_l208; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l208); end
  def test_outputs_energy_flows_m208; assert_equal("Timber", worksheet.outputs_energy_flows_m208); end
  def test_outputs_energy_flows_v208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v208||0), 0.002); end
  def test_outputs_energy_flows_w208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w208||0), 0.002); end
  def test_outputs_energy_flows_x208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x208||0), 0.002); end
  def test_outputs_energy_flows_y208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y208||0), 0.002); end
  def test_outputs_energy_flows_z208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z208||0), 0.002); end
  def test_outputs_energy_flows_aa208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa208||0), 0.002); end
  def test_outputs_energy_flows_ab208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab208||0), 0.002); end
  def test_outputs_energy_flows_ac208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac208||0), 0.002); end
  def test_outputs_energy_flows_ad208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad208||0), 0.002); end
  def test_outputs_energy_flows_c210; assert_equal("n/a", worksheet.outputs_energy_flows_c210); end
  def test_outputs_energy_flows_d210; assert_equal("Liquid", worksheet.outputs_energy_flows_d210); end
  def test_outputs_energy_flows_e210; assert_equal("n/a", worksheet.outputs_energy_flows_e210); end
  def test_outputs_energy_flows_f210; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f210); end
  def test_outputs_energy_flows_i210; assert_equal("C.02", worksheet.outputs_energy_flows_i210); end
  def test_outputs_energy_flows_j210; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j210); end
  def test_outputs_energy_flows_l210; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l210); end
  def test_outputs_energy_flows_m210; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m210); end
  def test_outputs_energy_flows_v210; assert_in_epsilon(47.89228942522411, worksheet.outputs_energy_flows_v210, 0.002); end
  def test_outputs_energy_flows_w210; assert_in_epsilon(50.66825190801788, worksheet.outputs_energy_flows_w210, 0.002); end
  def test_outputs_energy_flows_x210; assert_in_epsilon(55.251214950575246, worksheet.outputs_energy_flows_x210, 0.002); end
  def test_outputs_energy_flows_y210; assert_in_epsilon(57.948374482559345, worksheet.outputs_energy_flows_y210, 0.002); end
  def test_outputs_energy_flows_z210; assert_in_epsilon(60.4008734879458, worksheet.outputs_energy_flows_z210, 0.002); end
  def test_outputs_energy_flows_aa210; assert_in_epsilon(62.922552287594634, worksheet.outputs_energy_flows_aa210, 0.002); end
  def test_outputs_energy_flows_ab210; assert_in_epsilon(65.93517288076187, worksheet.outputs_energy_flows_ab210, 0.002); end
  def test_outputs_energy_flows_ac210; assert_in_epsilon(68.73451871878983, worksheet.outputs_energy_flows_ac210, 0.002); end
  def test_outputs_energy_flows_ad210; assert_in_epsilon(71.66200711638449, worksheet.outputs_energy_flows_ad210, 0.002); end
  def test_outputs_energy_flows_c212; assert_equal("n/a", worksheet.outputs_energy_flows_c212); end
  def test_outputs_energy_flows_d212; assert_equal("Liquid", worksheet.outputs_energy_flows_d212); end
  def test_outputs_energy_flows_e212; assert_equal("n/a", worksheet.outputs_energy_flows_e212); end
  def test_outputs_energy_flows_f212; assert_equal("International passenger", worksheet.outputs_energy_flows_f212); end
  def test_outputs_energy_flows_i212; assert_equal("C.02", worksheet.outputs_energy_flows_i212); end
  def test_outputs_energy_flows_j212; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j212); end
  def test_outputs_energy_flows_l212; assert_equal("International", worksheet.outputs_energy_flows_l212); end
  def test_outputs_energy_flows_v212; assert_in_epsilon(11.200783672219371, worksheet.outputs_energy_flows_v212, 0.002); end
  def test_outputs_energy_flows_w212; assert_in_epsilon(11.807777244648502, worksheet.outputs_energy_flows_w212, 0.002); end
  def test_outputs_energy_flows_x212; assert_in_epsilon(12.087181703649186, worksheet.outputs_energy_flows_x212, 0.002); end
  def test_outputs_energy_flows_y212; assert_in_epsilon(12.23506779720236, worksheet.outputs_energy_flows_y212, 0.002); end
  def test_outputs_energy_flows_z212; assert_in_epsilon(12.445296421619577, worksheet.outputs_energy_flows_z212, 0.002); end
  def test_outputs_energy_flows_aa212; assert_in_epsilon(12.836617626217247, worksheet.outputs_energy_flows_aa212, 0.002); end
  def test_outputs_energy_flows_ab212; assert_in_epsilon(13.446080104693019, worksheet.outputs_energy_flows_ab212, 0.002); end
  def test_outputs_energy_flows_ac212; assert_in_epsilon(14.177044142198485, worksheet.outputs_energy_flows_ac212, 0.002); end
  def test_outputs_energy_flows_ad212; assert_in_epsilon(15.048683316747233, worksheet.outputs_energy_flows_ad212, 0.002); end
  def test_outputs_energy_flows_c214; assert_equal("n/a", worksheet.outputs_energy_flows_c214); end
  def test_outputs_energy_flows_d214; assert_equal("Liquid", worksheet.outputs_energy_flows_d214); end
  def test_outputs_energy_flows_e214; assert_equal("n/a", worksheet.outputs_energy_flows_e214); end
  def test_outputs_energy_flows_f214; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f214); end
  def test_outputs_energy_flows_i214; assert_equal("C.02", worksheet.outputs_energy_flows_i214); end
  def test_outputs_energy_flows_j214; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j214); end
  def test_outputs_energy_flows_l214; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l214); end
  def test_outputs_energy_flows_v214; assert_in_epsilon(23.68414579378021, worksheet.outputs_energy_flows_v214, 0.002); end
  def test_outputs_energy_flows_w214; assert_in_epsilon(26.737137720117648, worksheet.outputs_energy_flows_w214, 0.002); end
  def test_outputs_energy_flows_x214; assert_in_epsilon(32.59771312786015, worksheet.outputs_energy_flows_x214, 0.002); end
  def test_outputs_energy_flows_y214; assert_in_epsilon(37.39698341748579, worksheet.outputs_energy_flows_y214, 0.002); end
  def test_outputs_energy_flows_z214; assert_in_epsilon(40.34193958427097, worksheet.outputs_energy_flows_z214, 0.002); end
  def test_outputs_energy_flows_aa214; assert_in_epsilon(41.91625183440512, worksheet.outputs_energy_flows_aa214, 0.002); end
  def test_outputs_energy_flows_ab214; assert_in_epsilon(42.461910829197656, worksheet.outputs_energy_flows_ab214, 0.002); end
  def test_outputs_energy_flows_ac214; assert_in_epsilon(42.2484364506654, worksheet.outputs_energy_flows_ac214, 0.002); end
  def test_outputs_energy_flows_ad214; assert_in_epsilon(41.80394898235068, worksheet.outputs_energy_flows_ad214, 0.002); end
  def test_outputs_energy_flows_c216; assert_equal("n/a", worksheet.outputs_energy_flows_c216); end
  def test_outputs_energy_flows_d216; assert_equal("Liquid", worksheet.outputs_energy_flows_d216); end
  def test_outputs_energy_flows_e216; assert_equal("n/a", worksheet.outputs_energy_flows_e216); end
  def test_outputs_energy_flows_f216; assert_equal("International freight", worksheet.outputs_energy_flows_f216); end
  def test_outputs_energy_flows_i216; assert_equal("C.02", worksheet.outputs_energy_flows_i216); end
  def test_outputs_energy_flows_j216; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j216); end
  def test_outputs_energy_flows_l216; assert_equal("International freight", worksheet.outputs_energy_flows_l216); end
  def test_outputs_energy_flows_v216; assert_in_epsilon(15.613329526301518, worksheet.outputs_energy_flows_v216, 0.002); end
  def test_outputs_energy_flows_w216; assert_in_epsilon(18.024427807235227, worksheet.outputs_energy_flows_w216, 0.002); end
  def test_outputs_energy_flows_x216; assert_in_epsilon(21.846236135822807, worksheet.outputs_energy_flows_x216, 0.002); end
  def test_outputs_energy_flows_y216; assert_in_epsilon(24.935488512664683, worksheet.outputs_energy_flows_y216, 0.002); end
  def test_outputs_energy_flows_z216; assert_in_epsilon(27.782744263321046, worksheet.outputs_energy_flows_z216, 0.002); end
  def test_outputs_energy_flows_aa216; assert_in_epsilon(28.764406940680825, worksheet.outputs_energy_flows_aa216, 0.002); end
  def test_outputs_energy_flows_ab216; assert_in_epsilon(29.056458815532984, worksheet.outputs_energy_flows_ab216, 0.002); end
  def test_outputs_energy_flows_ac216; assert_in_epsilon(28.992901008196526, worksheet.outputs_energy_flows_ac216, 0.002); end
  def test_outputs_energy_flows_ad216; assert_in_epsilon(28.64649709552848, worksheet.outputs_energy_flows_ad216, 0.002); end
  def test_outputs_energy_flows_c218; assert_equal("n/a", worksheet.outputs_energy_flows_c218); end
  def test_outputs_energy_flows_d218; assert_equal("Liquid", worksheet.outputs_energy_flows_d218); end
  def test_outputs_energy_flows_e218; assert_equal("n/a", worksheet.outputs_energy_flows_e218); end
  def test_outputs_energy_flows_f218; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f218); end
  def test_outputs_energy_flows_i218; assert_equal("C.02", worksheet.outputs_energy_flows_i218); end
  def test_outputs_energy_flows_j218; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j218); end
  def test_outputs_energy_flows_v218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v218||0), 0.002); end
  def test_outputs_energy_flows_w218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w218||0), 0.002); end
  def test_outputs_energy_flows_x218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x218||0), 0.002); end
  def test_outputs_energy_flows_y218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y218||0), 0.002); end
  def test_outputs_energy_flows_z218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z218||0), 0.002); end
  def test_outputs_energy_flows_aa218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa218||0), 0.002); end
  def test_outputs_energy_flows_ab218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab218||0), 0.002); end
  def test_outputs_energy_flows_ac218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac218||0), 0.002); end
  def test_outputs_energy_flows_ad218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad218||0), 0.002); end
  def test_outputs_energy_flows_c220; assert_equal("n/a", worksheet.outputs_energy_flows_c220); end
  def test_outputs_energy_flows_d220; assert_equal("Liquid", worksheet.outputs_energy_flows_d220); end
  def test_outputs_energy_flows_e220; assert_equal("G.01", worksheet.outputs_energy_flows_e220); end
  def test_outputs_energy_flows_f220; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f220); end
  def test_outputs_energy_flows_g220; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g220); end
  def test_outputs_energy_flows_h220; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h220); end
  def test_outputs_energy_flows_i220; assert_equal("C.02", worksheet.outputs_energy_flows_i220); end
  def test_outputs_energy_flows_j220; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j220); end
  def test_outputs_energy_flows_v220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v220||0), 0.002); end
  def test_outputs_energy_flows_w220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w220||0), 0.002); end
  def test_outputs_energy_flows_x220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x220||0), 0.002); end
  def test_outputs_energy_flows_y220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y220||0), 0.002); end
  def test_outputs_energy_flows_z220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z220||0), 0.002); end
  def test_outputs_energy_flows_aa220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa220||0), 0.002); end
  def test_outputs_energy_flows_ab220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab220||0), 0.002); end
  def test_outputs_energy_flows_ac220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac220||0), 0.002); end
  def test_outputs_energy_flows_ad220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad220||0), 0.002); end
  def test_outputs_energy_flows_c222; assert_equal("n/a", worksheet.outputs_energy_flows_c222); end
  def test_outputs_energy_flows_d222; assert_equal("Liquid", worksheet.outputs_energy_flows_d222); end
  def test_outputs_energy_flows_e222; assert_equal("n/a", worksheet.outputs_energy_flows_e222); end
  def test_outputs_energy_flows_f222; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f222); end
  def test_outputs_energy_flows_g222; assert_equal("n/a", worksheet.outputs_energy_flows_g222); end
  def test_outputs_energy_flows_h222; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h222); end
  def test_outputs_energy_flows_i222; assert_equal("C.02", worksheet.outputs_energy_flows_i222); end
  def test_outputs_energy_flows_j222; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j222); end
  def test_outputs_energy_flows_v222; assert_in_epsilon(2.0510000000000006, worksheet.outputs_energy_flows_v222, 0.002); end
  def test_outputs_energy_flows_w222; assert_in_epsilon(1.886170789075142, worksheet.outputs_energy_flows_w222, 0.002); end
  def test_outputs_energy_flows_x222; assert_in_epsilon(1.6220340215545845, worksheet.outputs_energy_flows_x222, 0.002); end
  def test_outputs_energy_flows_y222; assert_in_epsilon(1.337257789437274, worksheet.outputs_energy_flows_y222, 0.002); end
  def test_outputs_energy_flows_z222; assert_in_epsilon(1.0652220627194033, worksheet.outputs_energy_flows_z222, 0.002); end
  def test_outputs_energy_flows_aa222; assert_in_delta(0.8090357437185167, worksheet.outputs_energy_flows_aa222, 0.002); end
  def test_outputs_energy_flows_ab222; assert_in_delta(0.5934116419111821, worksheet.outputs_energy_flows_ab222, 0.002); end
  def test_outputs_energy_flows_ac222; assert_in_delta(0.3968186271586993, worksheet.outputs_energy_flows_ac222, 0.002); end
  def test_outputs_energy_flows_ad222; assert_in_delta(0.25615153843307326, worksheet.outputs_energy_flows_ad222, 0.002); end
  def test_outputs_energy_flows_c224; assert_equal("n/a", worksheet.outputs_energy_flows_c224); end
  def test_outputs_energy_flows_d224; assert_equal("Gas", worksheet.outputs_energy_flows_d224); end
  def test_outputs_energy_flows_e224; assert_equal("n/a", worksheet.outputs_energy_flows_e224); end
  def test_outputs_energy_flows_f224; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f224); end
  def test_outputs_energy_flows_i224; assert_equal("C.03", worksheet.outputs_energy_flows_i224); end
  def test_outputs_energy_flows_j224; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j224); end
  def test_outputs_energy_flows_k224; assert_equal("Global buildings", worksheet.outputs_energy_flows_k224); end
  def test_outputs_energy_flows_v224; assert_in_epsilon(14.722697904815131, worksheet.outputs_energy_flows_v224, 0.002); end
  def test_outputs_energy_flows_w224; assert_in_epsilon(16.214591628202243, worksheet.outputs_energy_flows_w224, 0.002); end
  def test_outputs_energy_flows_x224; assert_in_epsilon(17.630996344356245, worksheet.outputs_energy_flows_x224, 0.002); end
  def test_outputs_energy_flows_y224; assert_in_epsilon(19.000778474797272, worksheet.outputs_energy_flows_y224, 0.002); end
  def test_outputs_energy_flows_z224; assert_in_epsilon(20.277452910575537, worksheet.outputs_energy_flows_z224, 0.002); end
  def test_outputs_energy_flows_aa224; assert_in_epsilon(21.372041479461227, worksheet.outputs_energy_flows_aa224, 0.002); end
  def test_outputs_energy_flows_ab224; assert_in_epsilon(22.3600062420454, worksheet.outputs_energy_flows_ab224, 0.002); end
  def test_outputs_energy_flows_ac224; assert_in_epsilon(23.15298847671085, worksheet.outputs_energy_flows_ac224, 0.002); end
  def test_outputs_energy_flows_ad224; assert_in_epsilon(23.84509850289009, worksheet.outputs_energy_flows_ad224, 0.002); end
  def test_outputs_energy_flows_c226; assert_equal("n/a", worksheet.outputs_energy_flows_c226); end
  def test_outputs_energy_flows_d226; assert_equal("Gas", worksheet.outputs_energy_flows_d226); end
  def test_outputs_energy_flows_e226; assert_equal("n/a", worksheet.outputs_energy_flows_e226); end
  def test_outputs_energy_flows_f226; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f226); end
  def test_outputs_energy_flows_i226; assert_equal("C.03", worksheet.outputs_energy_flows_i226); end
  def test_outputs_energy_flows_j226; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j226); end
  def test_outputs_energy_flows_k226; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k226); end
  def test_outputs_energy_flows_l226; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l226); end
  def test_outputs_energy_flows_v226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v226||0), 0.002); end
  def test_outputs_energy_flows_w226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w226||0), 0.002); end
  def test_outputs_energy_flows_x226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x226||0), 0.002); end
  def test_outputs_energy_flows_y226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y226||0), 0.002); end
  def test_outputs_energy_flows_z226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z226||0), 0.002); end
  def test_outputs_energy_flows_aa226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa226||0), 0.002); end
  def test_outputs_energy_flows_ab226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab226||0), 0.002); end
  def test_outputs_energy_flows_ac226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac226||0), 0.002); end
  def test_outputs_energy_flows_ad226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad226||0), 0.002); end
  def test_outputs_energy_flows_c228; assert_equal("n/a", worksheet.outputs_energy_flows_c228); end
  def test_outputs_energy_flows_d228; assert_equal("Gas", worksheet.outputs_energy_flows_d228); end
  def test_outputs_energy_flows_e228; assert_equal("n/a", worksheet.outputs_energy_flows_e228); end
  def test_outputs_energy_flows_f228; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f228); end
  def test_outputs_energy_flows_i228; assert_equal("C.03", worksheet.outputs_energy_flows_i228); end
  def test_outputs_energy_flows_j228; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j228); end
  def test_outputs_energy_flows_k228; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k228); end
  def test_outputs_energy_flows_l228; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l228); end
  def test_outputs_energy_flows_v228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v228||0), 0.002); end
  def test_outputs_energy_flows_w228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w228||0), 0.002); end
  def test_outputs_energy_flows_x228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x228||0), 0.002); end
  def test_outputs_energy_flows_y228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y228||0), 0.002); end
  def test_outputs_energy_flows_z228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z228||0), 0.002); end
  def test_outputs_energy_flows_aa228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa228||0), 0.002); end
  def test_outputs_energy_flows_ab228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab228||0), 0.002); end
  def test_outputs_energy_flows_ac228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac228||0), 0.002); end
  def test_outputs_energy_flows_ad228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad228||0), 0.002); end
  def test_outputs_energy_flows_c230; assert_equal("n/a", worksheet.outputs_energy_flows_c230); end
  def test_outputs_energy_flows_d230; assert_equal("Gas", worksheet.outputs_energy_flows_d230); end
  def test_outputs_energy_flows_e230; assert_equal("n/a", worksheet.outputs_energy_flows_e230); end
  def test_outputs_energy_flows_f230; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f230); end
  def test_outputs_energy_flows_i230; assert_equal("C.03", worksheet.outputs_energy_flows_i230); end
  def test_outputs_energy_flows_j230; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j230); end
  def test_outputs_energy_flows_k230; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k230); end
  def test_outputs_energy_flows_l230; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l230); end
  def test_outputs_energy_flows_v230; assert_in_epsilon(3.5232041853812337, worksheet.outputs_energy_flows_v230, 0.002); end
  def test_outputs_energy_flows_w230; assert_in_epsilon(3.8083848628438006, worksheet.outputs_energy_flows_w230, 0.002); end
  def test_outputs_energy_flows_x230; assert_in_epsilon(4.09296225301089, worksheet.outputs_energy_flows_x230, 0.002); end
  def test_outputs_energy_flows_y230; assert_in_epsilon(4.3602653335544295, worksheet.outputs_energy_flows_y230, 0.002); end
  def test_outputs_energy_flows_z230; assert_in_epsilon(4.599222604054012, worksheet.outputs_energy_flows_z230, 0.002); end
  def test_outputs_energy_flows_aa230; assert_in_epsilon(4.7908898449980155, worksheet.outputs_energy_flows_aa230, 0.002); end
  def test_outputs_energy_flows_ab230; assert_in_epsilon(4.953583516606647, worksheet.outputs_energy_flows_ab230, 0.002); end
  def test_outputs_energy_flows_ac230; assert_in_epsilon(5.069531692444986, worksheet.outputs_energy_flows_ac230, 0.002); end
  def test_outputs_energy_flows_ad230; assert_in_epsilon(5.161135826255995, worksheet.outputs_energy_flows_ad230, 0.002); end
  def test_outputs_energy_flows_c232; assert_equal("n/a", worksheet.outputs_energy_flows_c232); end
  def test_outputs_energy_flows_d232; assert_equal("Gas", worksheet.outputs_energy_flows_d232); end
  def test_outputs_energy_flows_e232; assert_equal("n/a", worksheet.outputs_energy_flows_e232); end
  def test_outputs_energy_flows_f232; assert_equal("Non domestic", worksheet.outputs_energy_flows_f232); end
  def test_outputs_energy_flows_i232; assert_equal("C.03", worksheet.outputs_energy_flows_i232); end
  def test_outputs_energy_flows_j232; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j232); end
  def test_outputs_energy_flows_k232; assert_equal("Non-residential", worksheet.outputs_energy_flows_k232); end
  def test_outputs_energy_flows_v232; assert_in_epsilon(4.449325540384182, worksheet.outputs_energy_flows_v232, 0.002); end
  def test_outputs_energy_flows_w232; assert_in_epsilon(4.707001170101115, worksheet.outputs_energy_flows_w232, 0.002); end
  def test_outputs_energy_flows_x232; assert_in_epsilon(4.998156275598086, worksheet.outputs_energy_flows_x232, 0.002); end
  def test_outputs_energy_flows_y232; assert_in_epsilon(5.267804184904775, worksheet.outputs_energy_flows_y232, 0.002); end
  def test_outputs_energy_flows_z232; assert_in_epsilon(5.5144073838606875, worksheet.outputs_energy_flows_z232, 0.002); end
  def test_outputs_energy_flows_aa232; assert_in_epsilon(5.737883266691947, worksheet.outputs_energy_flows_aa232, 0.002); end
  def test_outputs_energy_flows_ab232; assert_in_epsilon(5.936760047800355, worksheet.outputs_energy_flows_ab232, 0.002); end
  def test_outputs_energy_flows_ac232; assert_in_epsilon(6.108439560010083, worksheet.outputs_energy_flows_ac232, 0.002); end
  def test_outputs_energy_flows_ad232; assert_in_epsilon(6.250810480063754, worksheet.outputs_energy_flows_ad232, 0.002); end
  def test_outputs_energy_flows_c234; assert_equal("n/a", worksheet.outputs_energy_flows_c234); end
  def test_outputs_energy_flows_d234; assert_equal("Gas", worksheet.outputs_energy_flows_d234); end
  def test_outputs_energy_flows_e234; assert_equal("n/a", worksheet.outputs_energy_flows_e234); end
  def test_outputs_energy_flows_f234; assert_equal("Steel", worksheet.outputs_energy_flows_f234); end
  def test_outputs_energy_flows_i234; assert_equal("C.03", worksheet.outputs_energy_flows_i234); end
  def test_outputs_energy_flows_j234; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j234); end
  def test_outputs_energy_flows_v234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v234||0), 0.002); end
  def test_outputs_energy_flows_w234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w234||0), 0.002); end
  def test_outputs_energy_flows_x234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x234||0), 0.002); end
  def test_outputs_energy_flows_y234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y234||0), 0.002); end
  def test_outputs_energy_flows_z234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z234||0), 0.002); end
  def test_outputs_energy_flows_aa234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa234||0), 0.002); end
  def test_outputs_energy_flows_ab234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab234||0), 0.002); end
  def test_outputs_energy_flows_ac234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac234||0), 0.002); end
  def test_outputs_energy_flows_ad234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad234||0), 0.002); end
  def test_outputs_energy_flows_c236; assert_equal("n/a", worksheet.outputs_energy_flows_c236); end
  def test_outputs_energy_flows_d236; assert_equal("Gas", worksheet.outputs_energy_flows_d236); end
  def test_outputs_energy_flows_e236; assert_equal("n/a", worksheet.outputs_energy_flows_e236); end
  def test_outputs_energy_flows_f236; assert_equal("Aluminium", worksheet.outputs_energy_flows_f236); end
  def test_outputs_energy_flows_i236; assert_equal("C.03", worksheet.outputs_energy_flows_i236); end
  def test_outputs_energy_flows_j236; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j236); end
  def test_outputs_energy_flows_v236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v236||0), 0.002); end
  def test_outputs_energy_flows_w236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w236||0), 0.002); end
  def test_outputs_energy_flows_x236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x236||0), 0.002); end
  def test_outputs_energy_flows_y236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y236||0), 0.002); end
  def test_outputs_energy_flows_z236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z236||0), 0.002); end
  def test_outputs_energy_flows_aa236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa236||0), 0.002); end
  def test_outputs_energy_flows_ab236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab236||0), 0.002); end
  def test_outputs_energy_flows_ac236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac236||0), 0.002); end
  def test_outputs_energy_flows_ad236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad236||0), 0.002); end
  def test_outputs_energy_flows_c238; assert_equal("n/a", worksheet.outputs_energy_flows_c238); end
  def test_outputs_energy_flows_d238; assert_equal("Gas", worksheet.outputs_energy_flows_d238); end
  def test_outputs_energy_flows_e238; assert_equal("n/a", worksheet.outputs_energy_flows_e238); end
  def test_outputs_energy_flows_f238; assert_equal("Cement", worksheet.outputs_energy_flows_f238); end
  def test_outputs_energy_flows_i238; assert_equal("C.03", worksheet.outputs_energy_flows_i238); end
  def test_outputs_energy_flows_j238; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j238); end
  def test_outputs_energy_flows_v238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v238||0), 0.002); end
  def test_outputs_energy_flows_w238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w238||0), 0.002); end
  def test_outputs_energy_flows_x238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x238||0), 0.002); end
  def test_outputs_energy_flows_y238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y238||0), 0.002); end
  def test_outputs_energy_flows_z238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z238||0), 0.002); end
  def test_outputs_energy_flows_aa238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa238||0), 0.002); end
  def test_outputs_energy_flows_ab238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab238||0), 0.002); end
  def test_outputs_energy_flows_ac238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac238||0), 0.002); end
  def test_outputs_energy_flows_ad238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad238||0), 0.002); end
  def test_outputs_energy_flows_c240; assert_equal("n/a", worksheet.outputs_energy_flows_c240); end
  def test_outputs_energy_flows_d240; assert_equal("Gas", worksheet.outputs_energy_flows_d240); end
  def test_outputs_energy_flows_e240; assert_equal("n/a", worksheet.outputs_energy_flows_e240); end
  def test_outputs_energy_flows_f240; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f240); end
  def test_outputs_energy_flows_i240; assert_equal("C.03", worksheet.outputs_energy_flows_i240); end
  def test_outputs_energy_flows_j240; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j240); end
  def test_outputs_energy_flows_v240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v240||0), 0.002); end
  def test_outputs_energy_flows_w240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w240||0), 0.002); end
  def test_outputs_energy_flows_x240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x240||0), 0.002); end
  def test_outputs_energy_flows_y240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y240||0), 0.002); end
  def test_outputs_energy_flows_z240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z240||0), 0.002); end
  def test_outputs_energy_flows_aa240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa240||0), 0.002); end
  def test_outputs_energy_flows_ab240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab240||0), 0.002); end
  def test_outputs_energy_flows_ac240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac240||0), 0.002); end
  def test_outputs_energy_flows_ad240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad240||0), 0.002); end
  def test_outputs_energy_flows_c242; assert_equal("n/a", worksheet.outputs_energy_flows_c242); end
  def test_outputs_energy_flows_d242; assert_equal("Gas", worksheet.outputs_energy_flows_d242); end
  def test_outputs_energy_flows_e242; assert_equal("n/a", worksheet.outputs_energy_flows_e242); end
  def test_outputs_energy_flows_f242; assert_equal("Chemicals", worksheet.outputs_energy_flows_f242); end
  def test_outputs_energy_flows_i242; assert_equal("C.03", worksheet.outputs_energy_flows_i242); end
  def test_outputs_energy_flows_j242; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j242); end
  def test_outputs_energy_flows_v242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v242||0), 0.002); end
  def test_outputs_energy_flows_w242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w242||0), 0.002); end
  def test_outputs_energy_flows_x242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x242||0), 0.002); end
  def test_outputs_energy_flows_y242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y242||0), 0.002); end
  def test_outputs_energy_flows_z242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z242||0), 0.002); end
  def test_outputs_energy_flows_aa242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa242||0), 0.002); end
  def test_outputs_energy_flows_ab242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab242||0), 0.002); end
  def test_outputs_energy_flows_ac242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac242||0), 0.002); end
  def test_outputs_energy_flows_ad242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad242||0), 0.002); end
  def test_outputs_energy_flows_c244; assert_equal("n/a", worksheet.outputs_energy_flows_c244); end
  def test_outputs_energy_flows_d244; assert_equal("Gas", worksheet.outputs_energy_flows_d244); end
  def test_outputs_energy_flows_e244; assert_equal("n/a", worksheet.outputs_energy_flows_e244); end
  def test_outputs_energy_flows_f244; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f244); end
  def test_outputs_energy_flows_i244; assert_equal("C.03", worksheet.outputs_energy_flows_i244); end
  def test_outputs_energy_flows_j244; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j244); end
  def test_outputs_energy_flows_l244; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l244); end
  def test_outputs_energy_flows_m244; assert_equal("Timber", worksheet.outputs_energy_flows_m244); end
  def test_outputs_energy_flows_v244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v244||0), 0.002); end
  def test_outputs_energy_flows_w244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w244||0), 0.002); end
  def test_outputs_energy_flows_x244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x244||0), 0.002); end
  def test_outputs_energy_flows_y244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y244||0), 0.002); end
  def test_outputs_energy_flows_z244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z244||0), 0.002); end
  def test_outputs_energy_flows_aa244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa244||0), 0.002); end
  def test_outputs_energy_flows_ab244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab244||0), 0.002); end
  def test_outputs_energy_flows_ac244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac244||0), 0.002); end
  def test_outputs_energy_flows_ad244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad244||0), 0.002); end
  def test_outputs_energy_flows_c246; assert_equal("n/a", worksheet.outputs_energy_flows_c246); end
  def test_outputs_energy_flows_d246; assert_equal("Gas", worksheet.outputs_energy_flows_d246); end
  def test_outputs_energy_flows_e246; assert_equal("n/a", worksheet.outputs_energy_flows_e246); end
  def test_outputs_energy_flows_f246; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f246); end
  def test_outputs_energy_flows_i246; assert_equal("C.03", worksheet.outputs_energy_flows_i246); end
  def test_outputs_energy_flows_j246; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j246); end
  def test_outputs_energy_flows_l246; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l246); end
  def test_outputs_energy_flows_m246; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m246); end
  def test_outputs_energy_flows_v246; assert_in_delta(0.3352766495680165, worksheet.outputs_energy_flows_v246, 0.002); end
  def test_outputs_energy_flows_w246; assert_in_delta(0.4499307286314911, worksheet.outputs_energy_flows_w246, 0.002); end
  def test_outputs_energy_flows_x246; assert_in_delta(0.5700653644741155, worksheet.outputs_energy_flows_x246, 0.002); end
  def test_outputs_energy_flows_y246; assert_in_delta(0.6854700578214554, worksheet.outputs_energy_flows_y246, 0.002); end
  def test_outputs_energy_flows_z246; assert_in_delta(0.8089039971375271, worksheet.outputs_energy_flows_z246, 0.002); end
  def test_outputs_energy_flows_aa246; assert_in_delta(0.9445227465881071, worksheet.outputs_energy_flows_aa246, 0.002); end
  def test_outputs_energy_flows_ab246; assert_in_epsilon(1.099503959024973, worksheet.outputs_energy_flows_ab246, 0.002); end
  def test_outputs_energy_flows_ac246; assert_in_epsilon(1.2642047716489238, worksheet.outputs_energy_flows_ac246, 0.002); end
  def test_outputs_energy_flows_ad246; assert_in_epsilon(1.4443466546560895, worksheet.outputs_energy_flows_ad246, 0.002); end
  def test_outputs_energy_flows_c248; assert_equal("n/a", worksheet.outputs_energy_flows_c248); end
  def test_outputs_energy_flows_d248; assert_equal("Gas", worksheet.outputs_energy_flows_d248); end
  def test_outputs_energy_flows_e248; assert_equal("n/a", worksheet.outputs_energy_flows_e248); end
  def test_outputs_energy_flows_f248; assert_equal("International passenger", worksheet.outputs_energy_flows_f248); end
  def test_outputs_energy_flows_i248; assert_equal("C.03", worksheet.outputs_energy_flows_i248); end
  def test_outputs_energy_flows_j248; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j248); end
  def test_outputs_energy_flows_l248; assert_equal("International", worksheet.outputs_energy_flows_l248); end
  def test_outputs_energy_flows_v248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v248||0), 0.002); end
  def test_outputs_energy_flows_w248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w248||0), 0.002); end
  def test_outputs_energy_flows_x248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x248||0), 0.002); end
  def test_outputs_energy_flows_y248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y248||0), 0.002); end
  def test_outputs_energy_flows_z248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z248||0), 0.002); end
  def test_outputs_energy_flows_aa248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa248||0), 0.002); end
  def test_outputs_energy_flows_ab248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab248||0), 0.002); end
  def test_outputs_energy_flows_ac248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac248||0), 0.002); end
  def test_outputs_energy_flows_ad248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad248||0), 0.002); end
  def test_outputs_energy_flows_c250; assert_equal("n/a", worksheet.outputs_energy_flows_c250); end
  def test_outputs_energy_flows_d250; assert_equal("Gas", worksheet.outputs_energy_flows_d250); end
  def test_outputs_energy_flows_e250; assert_equal("n/a", worksheet.outputs_energy_flows_e250); end
  def test_outputs_energy_flows_f250; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f250); end
  def test_outputs_energy_flows_i250; assert_equal("C.03", worksheet.outputs_energy_flows_i250); end
  def test_outputs_energy_flows_j250; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j250); end
  def test_outputs_energy_flows_l250; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l250); end
  def test_outputs_energy_flows_v250; assert_in_delta(0.011922881771682584, worksheet.outputs_energy_flows_v250, 0.002); end
  def test_outputs_energy_flows_w250; assert_in_delta(0.28158570487646495, worksheet.outputs_energy_flows_w250, 0.002); end
  def test_outputs_energy_flows_x250; assert_in_delta(0.5271217653539031, worksheet.outputs_energy_flows_x250, 0.002); end
  def test_outputs_energy_flows_y250; assert_in_delta(0.8190631932032626, worksheet.outputs_energy_flows_y250, 0.002); end
  def test_outputs_energy_flows_z250; assert_in_epsilon(1.1185848402766014, worksheet.outputs_energy_flows_z250, 0.002); end
  def test_outputs_energy_flows_aa250; assert_in_epsilon(1.4104729001539322, worksheet.outputs_energy_flows_aa250, 0.002); end
  def test_outputs_energy_flows_ab250; assert_in_epsilon(1.6844892313991735, worksheet.outputs_energy_flows_ab250, 0.002); end
  def test_outputs_energy_flows_ac250; assert_in_epsilon(1.9346525349189891, worksheet.outputs_energy_flows_ac250, 0.002); end
  def test_outputs_energy_flows_ad250; assert_in_epsilon(2.17452637068933, worksheet.outputs_energy_flows_ad250, 0.002); end
  def test_outputs_energy_flows_c252; assert_equal("n/a", worksheet.outputs_energy_flows_c252); end
  def test_outputs_energy_flows_d252; assert_equal("Gas", worksheet.outputs_energy_flows_d252); end
  def test_outputs_energy_flows_e252; assert_equal("n/a", worksheet.outputs_energy_flows_e252); end
  def test_outputs_energy_flows_f252; assert_equal("International freight", worksheet.outputs_energy_flows_f252); end
  def test_outputs_energy_flows_i252; assert_equal("C.03", worksheet.outputs_energy_flows_i252); end
  def test_outputs_energy_flows_j252; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j252); end
  def test_outputs_energy_flows_l252; assert_equal("International freight", worksheet.outputs_energy_flows_l252); end
  def test_outputs_energy_flows_v252; assert_in_delta(4.41118442617133e-09, worksheet.outputs_energy_flows_v252, 0.002); end
  def test_outputs_energy_flows_w252; assert_in_delta(0.0687375214476349, worksheet.outputs_energy_flows_w252, 0.002); end
  def test_outputs_energy_flows_x252; assert_in_delta(0.1282719012390749, worksheet.outputs_energy_flows_x252, 0.002); end
  def test_outputs_energy_flows_y252; assert_in_delta(0.19677374405403167, worksheet.outputs_energy_flows_y252, 0.002); end
  def test_outputs_energy_flows_z252; assert_in_delta(0.2742841463917738, worksheet.outputs_energy_flows_z252, 0.002); end
  def test_outputs_energy_flows_aa252; assert_in_delta(0.3398441807442067, worksheet.outputs_energy_flows_aa252, 0.002); end
  def test_outputs_energy_flows_ab252; assert_in_delta(0.3985936729000917, worksheet.outputs_energy_flows_ab252, 0.002); end
  def test_outputs_energy_flows_ac252; assert_in_delta(0.45175874966342205, worksheet.outputs_energy_flows_ac252, 0.002); end
  def test_outputs_energy_flows_ad252; assert_in_delta(0.49861931367213985, worksheet.outputs_energy_flows_ad252, 0.002); end
  def test_outputs_energy_flows_c254; assert_equal("n/a", worksheet.outputs_energy_flows_c254); end
  def test_outputs_energy_flows_d254; assert_equal("Gas", worksheet.outputs_energy_flows_d254); end
  def test_outputs_energy_flows_e254; assert_equal("n/a", worksheet.outputs_energy_flows_e254); end
  def test_outputs_energy_flows_f254; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f254); end
  def test_outputs_energy_flows_i254; assert_equal("C.03", worksheet.outputs_energy_flows_i254); end
  def test_outputs_energy_flows_j254; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j254); end
  def test_outputs_energy_flows_v254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v254||0), 0.002); end
  def test_outputs_energy_flows_w254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w254||0), 0.002); end
  def test_outputs_energy_flows_x254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x254||0), 0.002); end
  def test_outputs_energy_flows_y254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y254||0), 0.002); end
  def test_outputs_energy_flows_z254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z254||0), 0.002); end
  def test_outputs_energy_flows_aa254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa254||0), 0.002); end
  def test_outputs_energy_flows_ab254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab254||0), 0.002); end
  def test_outputs_energy_flows_ac254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac254||0), 0.002); end
  def test_outputs_energy_flows_ad254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad254||0), 0.002); end
  def test_outputs_energy_flows_c256; assert_equal("n/a", worksheet.outputs_energy_flows_c256); end
  def test_outputs_energy_flows_d256; assert_equal("Gas", worksheet.outputs_energy_flows_d256); end
  def test_outputs_energy_flows_e256; assert_equal("G.01", worksheet.outputs_energy_flows_e256); end
  def test_outputs_energy_flows_f256; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f256); end
  def test_outputs_energy_flows_g256; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g256); end
  def test_outputs_energy_flows_h256; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h256); end
  def test_outputs_energy_flows_i256; assert_equal("C.03", worksheet.outputs_energy_flows_i256); end
  def test_outputs_energy_flows_j256; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j256); end
  def test_outputs_energy_flows_v256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v256||0), 0.002); end
  def test_outputs_energy_flows_w256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w256||0), 0.002); end
  def test_outputs_energy_flows_x256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x256||0), 0.002); end
  def test_outputs_energy_flows_y256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y256||0), 0.002); end
  def test_outputs_energy_flows_z256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z256||0), 0.002); end
  def test_outputs_energy_flows_aa256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa256||0), 0.002); end
  def test_outputs_energy_flows_ab256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab256||0), 0.002); end
  def test_outputs_energy_flows_ac256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac256||0), 0.002); end
  def test_outputs_energy_flows_ad256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad256||0), 0.002); end
  def test_outputs_energy_flows_c258; assert_equal("n/a", worksheet.outputs_energy_flows_c258); end
  def test_outputs_energy_flows_d258; assert_equal("Gas", worksheet.outputs_energy_flows_d258); end
  def test_outputs_energy_flows_e258; assert_equal("n/a", worksheet.outputs_energy_flows_e258); end
  def test_outputs_energy_flows_f258; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f258); end
  def test_outputs_energy_flows_g258; assert_equal("n/a", worksheet.outputs_energy_flows_g258); end
  def test_outputs_energy_flows_h258; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h258); end
  def test_outputs_energy_flows_i258; assert_equal("C.03", worksheet.outputs_energy_flows_i258); end
  def test_outputs_energy_flows_j258; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j258); end
  def test_outputs_energy_flows_v258; assert_in_delta(0.6980000000000002, worksheet.outputs_energy_flows_v258, 0.002); end
  def test_outputs_energy_flows_w258; assert_in_delta(0.7126957288745824, worksheet.outputs_energy_flows_w258, 0.002); end
  def test_outputs_energy_flows_x258; assert_in_delta(0.7489642746954388, worksheet.outputs_energy_flows_x258, 0.002); end
  def test_outputs_energy_flows_y258; assert_in_delta(0.7796749073005701, worksheet.outputs_energy_flows_y258, 0.002); end
  def test_outputs_energy_flows_z258; assert_in_delta(0.8084928770455055, worksheet.outputs_energy_flows_z258, 0.002); end
  def test_outputs_energy_flows_aa258; assert_in_delta(0.8354647806585209, worksheet.outputs_energy_flows_aa258, 0.002); end
  def test_outputs_energy_flows_ab258; assert_in_delta(0.8632068105672119, worksheet.outputs_energy_flows_ab258, 0.002); end
  def test_outputs_energy_flows_ac258; assert_in_delta(0.8888105609995658, worksheet.outputs_energy_flows_ac258, 0.002); end
  def test_outputs_energy_flows_ad258; assert_in_delta(0.9163294776664306, worksheet.outputs_energy_flows_ad258, 0.002); end
  def test_outputs_energy_flows_c260; assert_equal("FF.01", worksheet.outputs_energy_flows_c260); end
  def test_outputs_energy_flows_d260; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d260); end
  def test_outputs_energy_flows_e260; assert_equal("n/a", worksheet.outputs_energy_flows_e260); end
  def test_outputs_energy_flows_f260; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f260); end
  def test_outputs_energy_flows_i260; assert_equal("FF.01", worksheet.outputs_energy_flows_i260); end
  def test_outputs_energy_flows_j260; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j260); end
  def test_outputs_energy_flows_k260; assert_equal("Global buildings", worksheet.outputs_energy_flows_k260); end
  def test_outputs_energy_flows_v260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v260||0), 0.002); end
  def test_outputs_energy_flows_w260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w260||0), 0.002); end
  def test_outputs_energy_flows_x260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x260||0), 0.002); end
  def test_outputs_energy_flows_y260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y260||0), 0.002); end
  def test_outputs_energy_flows_z260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z260||0), 0.002); end
  def test_outputs_energy_flows_aa260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa260||0), 0.002); end
  def test_outputs_energy_flows_ab260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab260||0), 0.002); end
  def test_outputs_energy_flows_ac260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac260||0), 0.002); end
  def test_outputs_energy_flows_ad260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad260||0), 0.002); end
  def test_outputs_energy_flows_c262; assert_equal("FF.01", worksheet.outputs_energy_flows_c262); end
  def test_outputs_energy_flows_d262; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d262); end
  def test_outputs_energy_flows_e262; assert_equal("n/a", worksheet.outputs_energy_flows_e262); end
  def test_outputs_energy_flows_f262; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f262); end
  def test_outputs_energy_flows_i262; assert_equal("FF.01", worksheet.outputs_energy_flows_i262); end
  def test_outputs_energy_flows_j262; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j262); end
  def test_outputs_energy_flows_k262; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k262); end
  def test_outputs_energy_flows_l262; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l262); end
  def test_outputs_energy_flows_v262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v262||0), 0.002); end
  def test_outputs_energy_flows_w262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w262||0), 0.002); end
  def test_outputs_energy_flows_x262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x262||0), 0.002); end
  def test_outputs_energy_flows_y262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y262||0), 0.002); end
  def test_outputs_energy_flows_z262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z262||0), 0.002); end
  def test_outputs_energy_flows_aa262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa262||0), 0.002); end
  def test_outputs_energy_flows_ab262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab262||0), 0.002); end
  def test_outputs_energy_flows_ac262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac262||0), 0.002); end
  def test_outputs_energy_flows_ad262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad262||0), 0.002); end
  def test_outputs_energy_flows_c264; assert_equal("FF.01", worksheet.outputs_energy_flows_c264); end
  def test_outputs_energy_flows_d264; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d264); end
  def test_outputs_energy_flows_e264; assert_equal("n/a", worksheet.outputs_energy_flows_e264); end
  def test_outputs_energy_flows_f264; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f264); end
  def test_outputs_energy_flows_i264; assert_equal("FF.01", worksheet.outputs_energy_flows_i264); end
  def test_outputs_energy_flows_j264; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j264); end
  def test_outputs_energy_flows_k264; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k264); end
  def test_outputs_energy_flows_l264; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l264); end
  def test_outputs_energy_flows_v264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v264||0), 0.002); end
  def test_outputs_energy_flows_w264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w264||0), 0.002); end
  def test_outputs_energy_flows_x264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x264||0), 0.002); end
  def test_outputs_energy_flows_y264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y264||0), 0.002); end
  def test_outputs_energy_flows_z264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z264||0), 0.002); end
  def test_outputs_energy_flows_aa264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa264||0), 0.002); end
  def test_outputs_energy_flows_ab264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab264||0), 0.002); end
  def test_outputs_energy_flows_ac264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac264||0), 0.002); end
  def test_outputs_energy_flows_ad264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad264||0), 0.002); end
  def test_outputs_energy_flows_c266; assert_equal("FF.01", worksheet.outputs_energy_flows_c266); end
  def test_outputs_energy_flows_d266; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d266); end
  def test_outputs_energy_flows_e266; assert_equal("n/a", worksheet.outputs_energy_flows_e266); end
  def test_outputs_energy_flows_f266; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f266); end
  def test_outputs_energy_flows_i266; assert_equal("FF.01", worksheet.outputs_energy_flows_i266); end
  def test_outputs_energy_flows_j266; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j266); end
  def test_outputs_energy_flows_k266; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k266); end
  def test_outputs_energy_flows_l266; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l266); end
  def test_outputs_energy_flows_v266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v266||0), 0.002); end
  def test_outputs_energy_flows_w266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w266||0), 0.002); end
  def test_outputs_energy_flows_x266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x266||0), 0.002); end
  def test_outputs_energy_flows_y266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y266||0), 0.002); end
  def test_outputs_energy_flows_z266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z266||0), 0.002); end
  def test_outputs_energy_flows_aa266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa266||0), 0.002); end
  def test_outputs_energy_flows_ab266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab266||0), 0.002); end
  def test_outputs_energy_flows_ac266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac266||0), 0.002); end
  def test_outputs_energy_flows_ad266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad266||0), 0.002); end
  def test_outputs_energy_flows_c268; assert_equal("FF.01", worksheet.outputs_energy_flows_c268); end
  def test_outputs_energy_flows_d268; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d268); end
  def test_outputs_energy_flows_e268; assert_equal("n/a", worksheet.outputs_energy_flows_e268); end
  def test_outputs_energy_flows_f268; assert_equal("Non domestic", worksheet.outputs_energy_flows_f268); end
  def test_outputs_energy_flows_i268; assert_equal("FF.01", worksheet.outputs_energy_flows_i268); end
  def test_outputs_energy_flows_j268; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j268); end
  def test_outputs_energy_flows_k268; assert_equal("Non-residential", worksheet.outputs_energy_flows_k268); end
  def test_outputs_energy_flows_v268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v268||0), 0.002); end
  def test_outputs_energy_flows_w268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w268||0), 0.002); end
  def test_outputs_energy_flows_x268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x268||0), 0.002); end
  def test_outputs_energy_flows_y268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y268||0), 0.002); end
  def test_outputs_energy_flows_z268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z268||0), 0.002); end
  def test_outputs_energy_flows_aa268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa268||0), 0.002); end
  def test_outputs_energy_flows_ab268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab268||0), 0.002); end
  def test_outputs_energy_flows_ac268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac268||0), 0.002); end
  def test_outputs_energy_flows_ad268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad268||0), 0.002); end
  def test_outputs_energy_flows_c270; assert_equal("FF.01", worksheet.outputs_energy_flows_c270); end
  def test_outputs_energy_flows_d270; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d270); end
  def test_outputs_energy_flows_e270; assert_equal("n/a", worksheet.outputs_energy_flows_e270); end
  def test_outputs_energy_flows_f270; assert_equal("Steel", worksheet.outputs_energy_flows_f270); end
  def test_outputs_energy_flows_i270; assert_equal("FF.01", worksheet.outputs_energy_flows_i270); end
  def test_outputs_energy_flows_j270; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j270); end
  def test_outputs_energy_flows_v270; assert_in_epsilon(23.235493129092, worksheet.outputs_energy_flows_v270, 0.002); end
  def test_outputs_energy_flows_w270; assert_in_epsilon(23.721094697889, worksheet.outputs_energy_flows_w270, 0.002); end
  def test_outputs_energy_flows_x270; assert_in_epsilon(25.170881159031463, worksheet.outputs_energy_flows_x270, 0.002); end
  def test_outputs_energy_flows_y270; assert_in_epsilon(26.165033407781433, worksheet.outputs_energy_flows_y270, 0.002); end
  def test_outputs_energy_flows_z270; assert_in_epsilon(27.1409648575575, worksheet.outputs_energy_flows_z270, 0.002); end
  def test_outputs_energy_flows_aa270; assert_in_epsilon(27.928225747946207, worksheet.outputs_energy_flows_aa270, 0.002); end
  def test_outputs_energy_flows_ab270; assert_in_epsilon(28.898789605547197, worksheet.outputs_energy_flows_ab270, 0.002); end
  def test_outputs_energy_flows_ac270; assert_in_epsilon(29.879810954826542, worksheet.outputs_energy_flows_ac270, 0.002); end
  def test_outputs_energy_flows_ad270; assert_in_epsilon(30.872165871360615, worksheet.outputs_energy_flows_ad270, 0.002); end
  def test_outputs_energy_flows_c272; assert_equal("FF.01", worksheet.outputs_energy_flows_c272); end
  def test_outputs_energy_flows_d272; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d272); end
  def test_outputs_energy_flows_e272; assert_equal("n/a", worksheet.outputs_energy_flows_e272); end
  def test_outputs_energy_flows_f272; assert_equal("Aluminium", worksheet.outputs_energy_flows_f272); end
  def test_outputs_energy_flows_i272; assert_equal("FF.01", worksheet.outputs_energy_flows_i272); end
  def test_outputs_energy_flows_j272; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j272); end
  def test_outputs_energy_flows_v272; assert_in_delta(0.7339274805745352, worksheet.outputs_energy_flows_v272, 0.002); end
  def test_outputs_energy_flows_w272; assert_in_delta(0.8115273863034533, worksheet.outputs_energy_flows_w272, 0.002); end
  def test_outputs_energy_flows_x272; assert_in_delta(0.943132333591362, worksheet.outputs_energy_flows_x272, 0.002); end
  def test_outputs_energy_flows_y272; assert_in_epsilon(1.0852017714198552, worksheet.outputs_energy_flows_y272, 0.002); end
  def test_outputs_energy_flows_z272; assert_in_epsilon(1.239469955928302, worksheet.outputs_energy_flows_z272, 0.002); end
  def test_outputs_energy_flows_aa272; assert_in_epsilon(1.399231546003295, worksheet.outputs_energy_flows_aa272, 0.002); end
  def test_outputs_energy_flows_ab272; assert_in_epsilon(1.5819555363481497, worksheet.outputs_energy_flows_ab272, 0.002); end
  def test_outputs_energy_flows_ac272; assert_in_epsilon(1.7783420641794012, worksheet.outputs_energy_flows_ac272, 0.002); end
  def test_outputs_energy_flows_ad272; assert_in_epsilon(2.004139003136214, worksheet.outputs_energy_flows_ad272, 0.002); end
  def test_outputs_energy_flows_c274; assert_equal("FF.01", worksheet.outputs_energy_flows_c274); end
  def test_outputs_energy_flows_d274; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d274); end
  def test_outputs_energy_flows_e274; assert_equal("n/a", worksheet.outputs_energy_flows_e274); end
  def test_outputs_energy_flows_f274; assert_equal("Cement", worksheet.outputs_energy_flows_f274); end
  def test_outputs_energy_flows_i274; assert_equal("FF.01", worksheet.outputs_energy_flows_i274); end
  def test_outputs_energy_flows_j274; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j274); end
  def test_outputs_energy_flows_v274; assert_in_epsilon(6.851960921136625, worksheet.outputs_energy_flows_v274, 0.002); end
  def test_outputs_energy_flows_w274; assert_in_epsilon(6.99681847421073, worksheet.outputs_energy_flows_w274, 0.002); end
  def test_outputs_energy_flows_x274; assert_in_epsilon(7.309897943834738, worksheet.outputs_energy_flows_x274, 0.002); end
  def test_outputs_energy_flows_y274; assert_in_epsilon(7.3884268028283655, worksheet.outputs_energy_flows_y274, 0.002); end
  def test_outputs_energy_flows_z274; assert_in_epsilon(7.442349234482982, worksheet.outputs_energy_flows_z274, 0.002); end
  def test_outputs_energy_flows_aa274; assert_in_epsilon(7.491109031782434, worksheet.outputs_energy_flows_aa274, 0.002); end
  def test_outputs_energy_flows_ab274; assert_in_epsilon(7.516587096458207, worksheet.outputs_energy_flows_ab274, 0.002); end
  def test_outputs_energy_flows_ac274; assert_in_epsilon(7.506484006676724, worksheet.outputs_energy_flows_ac274, 0.002); end
  def test_outputs_energy_flows_ad274; assert_in_epsilon(7.534345424972305, worksheet.outputs_energy_flows_ad274, 0.002); end
  def test_outputs_energy_flows_c276; assert_equal("FF.01", worksheet.outputs_energy_flows_c276); end
  def test_outputs_energy_flows_d276; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d276); end
  def test_outputs_energy_flows_e276; assert_equal("n/a", worksheet.outputs_energy_flows_e276); end
  def test_outputs_energy_flows_f276; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f276); end
  def test_outputs_energy_flows_i276; assert_equal("FF.01", worksheet.outputs_energy_flows_i276); end
  def test_outputs_energy_flows_j276; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j276); end
  def test_outputs_energy_flows_v276; assert_in_epsilon(1.518261087438881, worksheet.outputs_energy_flows_v276, 0.002); end
  def test_outputs_energy_flows_w276; assert_in_epsilon(1.5687194108909448, worksheet.outputs_energy_flows_w276, 0.002); end
  def test_outputs_energy_flows_x276; assert_in_epsilon(1.8078135732323548, worksheet.outputs_energy_flows_x276, 0.002); end
  def test_outputs_energy_flows_y276; assert_in_epsilon(2.053811792846311, worksheet.outputs_energy_flows_y276, 0.002); end
  def test_outputs_energy_flows_z276; assert_in_epsilon(2.32085679499233, worksheet.outputs_energy_flows_z276, 0.002); end
  def test_outputs_energy_flows_aa276; assert_in_epsilon(2.603489433397286, worksheet.outputs_energy_flows_aa276, 0.002); end
  def test_outputs_energy_flows_ab276; assert_in_epsilon(2.9285344722497375, worksheet.outputs_energy_flows_ab276, 0.002); end
  def test_outputs_energy_flows_ac276; assert_in_epsilon(3.275189388746106, worksheet.outputs_energy_flows_ac276, 0.002); end
  def test_outputs_energy_flows_ad276; assert_in_epsilon(3.675815937771224, worksheet.outputs_energy_flows_ad276, 0.002); end
  def test_outputs_energy_flows_c278; assert_equal("FF.01", worksheet.outputs_energy_flows_c278); end
  def test_outputs_energy_flows_d278; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d278); end
  def test_outputs_energy_flows_e278; assert_equal("n/a", worksheet.outputs_energy_flows_e278); end
  def test_outputs_energy_flows_f278; assert_equal("Chemicals", worksheet.outputs_energy_flows_f278); end
  def test_outputs_energy_flows_i278; assert_equal("FF.01", worksheet.outputs_energy_flows_i278); end
  def test_outputs_energy_flows_j278; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j278); end
  def test_outputs_energy_flows_v278; assert_in_epsilon(2.7901474530640202, worksheet.outputs_energy_flows_v278, 0.002); end
  def test_outputs_energy_flows_w278; assert_in_epsilon(2.8968491555975824, worksheet.outputs_energy_flows_w278, 0.002); end
  def test_outputs_energy_flows_x278; assert_in_epsilon(3.212595598519393, worksheet.outputs_energy_flows_x278, 0.002); end
  def test_outputs_energy_flows_y278; assert_in_epsilon(3.5330526524910493, worksheet.outputs_energy_flows_y278, 0.002); end
  def test_outputs_energy_flows_z278; assert_in_epsilon(3.873442178498147, worksheet.outputs_energy_flows_z278, 0.002); end
  def test_outputs_energy_flows_aa278; assert_in_epsilon(4.228086252439059, worksheet.outputs_energy_flows_aa278, 0.002); end
  def test_outputs_energy_flows_ab278; assert_in_epsilon(4.6302246405825445, worksheet.outputs_energy_flows_ab278, 0.002); end
  def test_outputs_energy_flows_ac278; assert_in_epsilon(5.045355773634562, worksheet.outputs_energy_flows_ac278, 0.002); end
  def test_outputs_energy_flows_ad278; assert_in_epsilon(5.519090074783804, worksheet.outputs_energy_flows_ad278, 0.002); end
  def test_outputs_energy_flows_c280; assert_equal("FF.01", worksheet.outputs_energy_flows_c280); end
  def test_outputs_energy_flows_d280; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d280); end
  def test_outputs_energy_flows_e280; assert_equal("n/a", worksheet.outputs_energy_flows_e280); end
  def test_outputs_energy_flows_f280; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f280); end
  def test_outputs_energy_flows_i280; assert_equal("FF.01", worksheet.outputs_energy_flows_i280); end
  def test_outputs_energy_flows_j280; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j280); end
  def test_outputs_energy_flows_l280; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l280); end
  def test_outputs_energy_flows_m280; assert_equal("Timber", worksheet.outputs_energy_flows_m280); end
  def test_outputs_energy_flows_v280; assert_in_epsilon(7.157385604573962, worksheet.outputs_energy_flows_v280, 0.002); end
  def test_outputs_energy_flows_w280; assert_in_epsilon(7.368625942224961, worksheet.outputs_energy_flows_w280, 0.002); end
  def test_outputs_energy_flows_x280; assert_in_epsilon(7.886377289085947, worksheet.outputs_energy_flows_x280, 0.002); end
  def test_outputs_energy_flows_y280; assert_in_epsilon(8.341869027893619, worksheet.outputs_energy_flows_y280, 0.002); end
  def test_outputs_energy_flows_z280; assert_in_epsilon(8.802369022522754, worksheet.outputs_energy_flows_z280, 0.002); end
  def test_outputs_energy_flows_aa280; assert_in_epsilon(9.26598431300662, worksheet.outputs_energy_flows_aa280, 0.002); end
  def test_outputs_energy_flows_ab280; assert_in_epsilon(9.757165356117035, worksheet.outputs_energy_flows_ab280, 0.002); end
  def test_outputs_energy_flows_ac280; assert_in_epsilon(10.253897809702107, worksheet.outputs_energy_flows_ac280, 0.002); end
  def test_outputs_energy_flows_ad280; assert_in_epsilon(10.800228318711017, worksheet.outputs_energy_flows_ad280, 0.002); end
  def test_outputs_energy_flows_c282; assert_equal("FF.01", worksheet.outputs_energy_flows_c282); end
  def test_outputs_energy_flows_d282; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d282); end
  def test_outputs_energy_flows_e282; assert_equal("n/a", worksheet.outputs_energy_flows_e282); end
  def test_outputs_energy_flows_f282; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f282); end
  def test_outputs_energy_flows_i282; assert_equal("FF.01", worksheet.outputs_energy_flows_i282); end
  def test_outputs_energy_flows_j282; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j282); end
  def test_outputs_energy_flows_l282; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l282); end
  def test_outputs_energy_flows_m282; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m282); end
  def test_outputs_energy_flows_v282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v282||0), 0.002); end
  def test_outputs_energy_flows_w282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w282||0), 0.002); end
  def test_outputs_energy_flows_x282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x282||0), 0.002); end
  def test_outputs_energy_flows_y282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y282||0), 0.002); end
  def test_outputs_energy_flows_z282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z282||0), 0.002); end
  def test_outputs_energy_flows_aa282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa282||0), 0.002); end
  def test_outputs_energy_flows_ab282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab282||0), 0.002); end
  def test_outputs_energy_flows_ac282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac282||0), 0.002); end
  def test_outputs_energy_flows_ad282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad282||0), 0.002); end
  def test_outputs_energy_flows_c284; assert_equal("FF.01", worksheet.outputs_energy_flows_c284); end
  def test_outputs_energy_flows_d284; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d284); end
  def test_outputs_energy_flows_e284; assert_equal("n/a", worksheet.outputs_energy_flows_e284); end
  def test_outputs_energy_flows_f284; assert_equal("International passenger", worksheet.outputs_energy_flows_f284); end
  def test_outputs_energy_flows_i284; assert_equal("FF.01", worksheet.outputs_energy_flows_i284); end
  def test_outputs_energy_flows_j284; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j284); end
  def test_outputs_energy_flows_l284; assert_equal("International", worksheet.outputs_energy_flows_l284); end
  def test_outputs_energy_flows_v284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v284||0), 0.002); end
  def test_outputs_energy_flows_w284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w284||0), 0.002); end
  def test_outputs_energy_flows_x284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x284||0), 0.002); end
  def test_outputs_energy_flows_y284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y284||0), 0.002); end
  def test_outputs_energy_flows_z284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z284||0), 0.002); end
  def test_outputs_energy_flows_aa284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa284||0), 0.002); end
  def test_outputs_energy_flows_ab284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab284||0), 0.002); end
  def test_outputs_energy_flows_ac284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac284||0), 0.002); end
  def test_outputs_energy_flows_ad284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad284||0), 0.002); end
  def test_outputs_energy_flows_c286; assert_equal("FF.01", worksheet.outputs_energy_flows_c286); end
  def test_outputs_energy_flows_d286; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d286); end
  def test_outputs_energy_flows_e286; assert_equal("n/a", worksheet.outputs_energy_flows_e286); end
  def test_outputs_energy_flows_f286; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f286); end
  def test_outputs_energy_flows_i286; assert_equal("FF.01", worksheet.outputs_energy_flows_i286); end
  def test_outputs_energy_flows_j286; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j286); end
  def test_outputs_energy_flows_l286; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l286); end
  def test_outputs_energy_flows_v286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v286||0), 0.002); end
  def test_outputs_energy_flows_w286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w286||0), 0.002); end
  def test_outputs_energy_flows_x286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x286||0), 0.002); end
  def test_outputs_energy_flows_y286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y286||0), 0.002); end
  def test_outputs_energy_flows_z286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z286||0), 0.002); end
  def test_outputs_energy_flows_aa286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa286||0), 0.002); end
  def test_outputs_energy_flows_ab286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab286||0), 0.002); end
  def test_outputs_energy_flows_ac286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac286||0), 0.002); end
  def test_outputs_energy_flows_ad286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad286||0), 0.002); end
  def test_outputs_energy_flows_c288; assert_equal("FF.01", worksheet.outputs_energy_flows_c288); end
  def test_outputs_energy_flows_d288; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d288); end
  def test_outputs_energy_flows_e288; assert_equal("n/a", worksheet.outputs_energy_flows_e288); end
  def test_outputs_energy_flows_f288; assert_equal("International freight", worksheet.outputs_energy_flows_f288); end
  def test_outputs_energy_flows_i288; assert_equal("FF.01", worksheet.outputs_energy_flows_i288); end
  def test_outputs_energy_flows_j288; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j288); end
  def test_outputs_energy_flows_l288; assert_equal("International freight", worksheet.outputs_energy_flows_l288); end
  def test_outputs_energy_flows_v288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v288||0), 0.002); end
  def test_outputs_energy_flows_w288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w288||0), 0.002); end
  def test_outputs_energy_flows_x288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x288||0), 0.002); end
  def test_outputs_energy_flows_y288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y288||0), 0.002); end
  def test_outputs_energy_flows_z288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z288||0), 0.002); end
  def test_outputs_energy_flows_aa288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa288||0), 0.002); end
  def test_outputs_energy_flows_ab288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab288||0), 0.002); end
  def test_outputs_energy_flows_ac288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac288||0), 0.002); end
  def test_outputs_energy_flows_ad288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad288||0), 0.002); end
  def test_outputs_energy_flows_c290; assert_equal("FF.01", worksheet.outputs_energy_flows_c290); end
  def test_outputs_energy_flows_d290; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d290); end
  def test_outputs_energy_flows_e290; assert_equal("n/a", worksheet.outputs_energy_flows_e290); end
  def test_outputs_energy_flows_f290; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f290); end
  def test_outputs_energy_flows_i290; assert_equal("FF.01", worksheet.outputs_energy_flows_i290); end
  def test_outputs_energy_flows_j290; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j290); end
  def test_outputs_energy_flows_v290; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v290||0), 0.002); end
  def test_outputs_energy_flows_w290; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w290||0), 0.002); end
  def test_outputs_energy_flows_x290; assert_in_delta(0.05261127184466806, worksheet.outputs_energy_flows_x290, 0.002); end
  def test_outputs_energy_flows_y290; assert_in_delta(0.06789520440183373, worksheet.outputs_energy_flows_y290, 0.002); end
  def test_outputs_energy_flows_z290; assert_in_delta(0.0832467475666892, worksheet.outputs_energy_flows_z290, 0.002); end
  def test_outputs_energy_flows_aa290; assert_in_delta(0.0795664623778046, worksheet.outputs_energy_flows_aa290, 0.002); end
  def test_outputs_energy_flows_ab290; assert_in_delta(0.05964569392407847, worksheet.outputs_energy_flows_ab290, 0.002); end
  def test_outputs_energy_flows_ac290; assert_in_delta(0.04253403634612377, worksheet.outputs_energy_flows_ac290, 0.002); end
  def test_outputs_energy_flows_ad290; assert_in_delta(0.027054017283866624, worksheet.outputs_energy_flows_ad290, 0.002); end
  def test_outputs_energy_flows_c292; assert_equal("FF.01", worksheet.outputs_energy_flows_c292); end
  def test_outputs_energy_flows_d292; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d292); end
  def test_outputs_energy_flows_e292; assert_equal("G.01", worksheet.outputs_energy_flows_e292); end
  def test_outputs_energy_flows_f292; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f292); end
  def test_outputs_energy_flows_g292; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g292); end
  def test_outputs_energy_flows_h292; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h292); end
  def test_outputs_energy_flows_i292; assert_equal("FF.01", worksheet.outputs_energy_flows_i292); end
  def test_outputs_energy_flows_j292; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j292); end
  def test_outputs_energy_flows_v292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v292||0), 0.002); end
  def test_outputs_energy_flows_w292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w292||0), 0.002); end
  def test_outputs_energy_flows_x292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x292||0), 0.002); end
  def test_outputs_energy_flows_y292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y292||0), 0.002); end
  def test_outputs_energy_flows_z292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z292||0), 0.002); end
  def test_outputs_energy_flows_aa292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa292||0), 0.002); end
  def test_outputs_energy_flows_ab292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab292||0), 0.002); end
  def test_outputs_energy_flows_ac292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac292||0), 0.002); end
  def test_outputs_energy_flows_ad292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad292||0), 0.002); end
  def test_outputs_energy_flows_c294; assert_equal("FF.01", worksheet.outputs_energy_flows_c294); end
  def test_outputs_energy_flows_d294; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d294); end
  def test_outputs_energy_flows_e294; assert_equal("n/a", worksheet.outputs_energy_flows_e294); end
  def test_outputs_energy_flows_f294; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f294); end
  def test_outputs_energy_flows_g294; assert_equal("n/a", worksheet.outputs_energy_flows_g294); end
  def test_outputs_energy_flows_h294; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h294); end
  def test_outputs_energy_flows_i294; assert_equal("FF.01", worksheet.outputs_energy_flows_i294); end
  def test_outputs_energy_flows_j294; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j294); end
  def test_outputs_energy_flows_v294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v294||0), 0.002); end
  def test_outputs_energy_flows_w294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w294||0), 0.002); end
  def test_outputs_energy_flows_x294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x294||0), 0.002); end
  def test_outputs_energy_flows_y294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y294||0), 0.002); end
  def test_outputs_energy_flows_z294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z294||0), 0.002); end
  def test_outputs_energy_flows_aa294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa294||0), 0.002); end
  def test_outputs_energy_flows_ab294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab294||0), 0.002); end
  def test_outputs_energy_flows_ac294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac294||0), 0.002); end
  def test_outputs_energy_flows_ad294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad294||0), 0.002); end
  def test_outputs_energy_flows_c296; assert_equal("FF.02", worksheet.outputs_energy_flows_c296); end
  def test_outputs_energy_flows_d296; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d296); end
  def test_outputs_energy_flows_e296; assert_equal("n/a", worksheet.outputs_energy_flows_e296); end
  def test_outputs_energy_flows_f296; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f296); end
  def test_outputs_energy_flows_i296; assert_equal("FF.02", worksheet.outputs_energy_flows_i296); end
  def test_outputs_energy_flows_j296; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j296); end
  def test_outputs_energy_flows_k296; assert_equal("Global buildings", worksheet.outputs_energy_flows_k296); end
  def test_outputs_energy_flows_v296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v296||0), 0.002); end
  def test_outputs_energy_flows_w296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w296||0), 0.002); end
  def test_outputs_energy_flows_x296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x296||0), 0.002); end
  def test_outputs_energy_flows_y296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y296||0), 0.002); end
  def test_outputs_energy_flows_z296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z296||0), 0.002); end
  def test_outputs_energy_flows_aa296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa296||0), 0.002); end
  def test_outputs_energy_flows_ab296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab296||0), 0.002); end
  def test_outputs_energy_flows_ac296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac296||0), 0.002); end
  def test_outputs_energy_flows_ad296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad296||0), 0.002); end
  def test_outputs_energy_flows_c298; assert_equal("FF.02", worksheet.outputs_energy_flows_c298); end
  def test_outputs_energy_flows_d298; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d298); end
  def test_outputs_energy_flows_e298; assert_equal("n/a", worksheet.outputs_energy_flows_e298); end
  def test_outputs_energy_flows_f298; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f298); end
  def test_outputs_energy_flows_i298; assert_equal("FF.02", worksheet.outputs_energy_flows_i298); end
  def test_outputs_energy_flows_j298; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j298); end
  def test_outputs_energy_flows_k298; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k298); end
  def test_outputs_energy_flows_l298; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l298); end
  def test_outputs_energy_flows_v298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v298||0), 0.002); end
  def test_outputs_energy_flows_w298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w298||0), 0.002); end
  def test_outputs_energy_flows_x298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x298||0), 0.002); end
  def test_outputs_energy_flows_y298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y298||0), 0.002); end
  def test_outputs_energy_flows_z298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z298||0), 0.002); end
  def test_outputs_energy_flows_aa298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa298||0), 0.002); end
  def test_outputs_energy_flows_ab298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab298||0), 0.002); end
  def test_outputs_energy_flows_ac298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac298||0), 0.002); end
  def test_outputs_energy_flows_ad298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad298||0), 0.002); end
  def test_outputs_energy_flows_c300; assert_equal("FF.02", worksheet.outputs_energy_flows_c300); end
  def test_outputs_energy_flows_d300; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d300); end
  def test_outputs_energy_flows_e300; assert_equal("n/a", worksheet.outputs_energy_flows_e300); end
  def test_outputs_energy_flows_f300; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f300); end
  def test_outputs_energy_flows_i300; assert_equal("FF.02", worksheet.outputs_energy_flows_i300); end
  def test_outputs_energy_flows_j300; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j300); end
  def test_outputs_energy_flows_k300; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k300); end
  def test_outputs_energy_flows_l300; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l300); end
  def test_outputs_energy_flows_v300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v300||0), 0.002); end
  def test_outputs_energy_flows_w300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w300||0), 0.002); end
  def test_outputs_energy_flows_x300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x300||0), 0.002); end
  def test_outputs_energy_flows_y300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y300||0), 0.002); end
  def test_outputs_energy_flows_z300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z300||0), 0.002); end
  def test_outputs_energy_flows_aa300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa300||0), 0.002); end
  def test_outputs_energy_flows_ab300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab300||0), 0.002); end
  def test_outputs_energy_flows_ac300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac300||0), 0.002); end
  def test_outputs_energy_flows_ad300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad300||0), 0.002); end
  def test_outputs_energy_flows_c302; assert_equal("FF.02", worksheet.outputs_energy_flows_c302); end
  def test_outputs_energy_flows_d302; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d302); end
  def test_outputs_energy_flows_e302; assert_equal("n/a", worksheet.outputs_energy_flows_e302); end
  def test_outputs_energy_flows_f302; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f302); end
  def test_outputs_energy_flows_i302; assert_equal("FF.02", worksheet.outputs_energy_flows_i302); end
  def test_outputs_energy_flows_j302; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j302); end
  def test_outputs_energy_flows_k302; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k302); end
  def test_outputs_energy_flows_l302; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l302); end
  def test_outputs_energy_flows_v302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v302||0), 0.002); end
  def test_outputs_energy_flows_w302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w302||0), 0.002); end
  def test_outputs_energy_flows_x302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x302||0), 0.002); end
  def test_outputs_energy_flows_y302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y302||0), 0.002); end
  def test_outputs_energy_flows_z302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z302||0), 0.002); end
  def test_outputs_energy_flows_aa302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa302||0), 0.002); end
  def test_outputs_energy_flows_ab302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab302||0), 0.002); end
  def test_outputs_energy_flows_ac302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac302||0), 0.002); end
  def test_outputs_energy_flows_ad302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad302||0), 0.002); end
  def test_outputs_energy_flows_c304; assert_equal("FF.02", worksheet.outputs_energy_flows_c304); end
  def test_outputs_energy_flows_d304; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d304); end
  def test_outputs_energy_flows_e304; assert_equal("n/a", worksheet.outputs_energy_flows_e304); end
  def test_outputs_energy_flows_f304; assert_equal("Non domestic", worksheet.outputs_energy_flows_f304); end
  def test_outputs_energy_flows_i304; assert_equal("FF.02", worksheet.outputs_energy_flows_i304); end
  def test_outputs_energy_flows_j304; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j304); end
  def test_outputs_energy_flows_k304; assert_equal("Non-residential", worksheet.outputs_energy_flows_k304); end
  def test_outputs_energy_flows_v304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v304||0), 0.002); end
  def test_outputs_energy_flows_w304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w304||0), 0.002); end
  def test_outputs_energy_flows_x304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x304||0), 0.002); end
  def test_outputs_energy_flows_y304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y304||0), 0.002); end
  def test_outputs_energy_flows_z304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z304||0), 0.002); end
  def test_outputs_energy_flows_aa304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa304||0), 0.002); end
  def test_outputs_energy_flows_ab304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab304||0), 0.002); end
  def test_outputs_energy_flows_ac304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac304||0), 0.002); end
  def test_outputs_energy_flows_ad304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad304||0), 0.002); end
  def test_outputs_energy_flows_c306; assert_equal("FF.02", worksheet.outputs_energy_flows_c306); end
  def test_outputs_energy_flows_d306; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d306); end
  def test_outputs_energy_flows_e306; assert_equal("n/a", worksheet.outputs_energy_flows_e306); end
  def test_outputs_energy_flows_f306; assert_equal("Steel", worksheet.outputs_energy_flows_f306); end
  def test_outputs_energy_flows_i306; assert_equal("FF.02", worksheet.outputs_energy_flows_i306); end
  def test_outputs_energy_flows_j306; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j306); end
  def test_outputs_energy_flows_v306; assert_in_delta(0.6053795859240001, worksheet.outputs_energy_flows_v306, 0.002); end
  def test_outputs_energy_flows_w306; assert_in_delta(0.6268081972203947, worksheet.outputs_energy_flows_w306, 0.002); end
  def test_outputs_energy_flows_x306; assert_in_delta(0.6773621803597989, worksheet.outputs_energy_flows_x306, 0.002); end
  def test_outputs_energy_flows_y306; assert_in_delta(0.7171995462537729, worksheet.outputs_energy_flows_y306, 0.002); end
  def test_outputs_energy_flows_z306; assert_in_delta(0.7584552651916618, worksheet.outputs_energy_flows_z306, 0.002); end
  def test_outputs_energy_flows_aa306; assert_in_delta(0.7958439580974906, worksheet.outputs_energy_flows_aa306, 0.002); end
  def test_outputs_energy_flows_ab306; assert_in_delta(0.839923507791853, worksheet.outputs_energy_flows_ab306, 0.002); end
  def test_outputs_energy_flows_ac306; assert_in_delta(0.8859532153657799, worksheet.outputs_energy_flows_ac306, 0.002); end
  def test_outputs_energy_flows_ad306; assert_in_delta(0.9340540941244794, worksheet.outputs_energy_flows_ad306, 0.002); end
  def test_outputs_energy_flows_c308; assert_equal("FF.02", worksheet.outputs_energy_flows_c308); end
  def test_outputs_energy_flows_d308; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d308); end
  def test_outputs_energy_flows_e308; assert_equal("n/a", worksheet.outputs_energy_flows_e308); end
  def test_outputs_energy_flows_f308; assert_equal("Aluminium", worksheet.outputs_energy_flows_f308); end
  def test_outputs_energy_flows_i308; assert_equal("FF.02", worksheet.outputs_energy_flows_i308); end
  def test_outputs_energy_flows_j308; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j308); end
  def test_outputs_energy_flows_v308; assert_in_delta(0.5405428608660054, worksheet.outputs_energy_flows_v308, 0.002); end
  def test_outputs_energy_flows_w308; assert_in_delta(0.5973356283245603, worksheet.outputs_energy_flows_w308, 0.002); end
  def test_outputs_energy_flows_x308; assert_in_delta(0.6936737202193113, worksheet.outputs_energy_flows_x308, 0.002); end
  def test_outputs_energy_flows_y308; assert_in_delta(0.7975504799637052, worksheet.outputs_energy_flows_y308, 0.002); end
  def test_outputs_energy_flows_z308; assert_in_delta(0.910219977555156, worksheet.outputs_energy_flows_z308, 0.002); end
  def test_outputs_energy_flows_aa308; assert_in_epsilon(1.0267391136792299, worksheet.outputs_energy_flows_aa308, 0.002); end
  def test_outputs_energy_flows_ab308; assert_in_epsilon(1.1599047958921551, worksheet.outputs_energy_flows_ab308, 0.002); end
  def test_outputs_energy_flows_ac308; assert_in_epsilon(1.3028614418669633, worksheet.outputs_energy_flows_ac308, 0.002); end
  def test_outputs_energy_flows_ad308; assert_in_epsilon(1.467110605292462, worksheet.outputs_energy_flows_ad308, 0.002); end
  def test_outputs_energy_flows_c310; assert_equal("FF.02", worksheet.outputs_energy_flows_c310); end
  def test_outputs_energy_flows_d310; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d310); end
  def test_outputs_energy_flows_e310; assert_equal("n/a", worksheet.outputs_energy_flows_e310); end
  def test_outputs_energy_flows_f310; assert_equal("Cement", worksheet.outputs_energy_flows_f310); end
  def test_outputs_energy_flows_i310; assert_equal("FF.02", worksheet.outputs_energy_flows_i310); end
  def test_outputs_energy_flows_j310; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j310); end
  def test_outputs_energy_flows_v310; assert_in_epsilon(1.1385974140784139, worksheet.outputs_energy_flows_v310, 0.002); end
  def test_outputs_energy_flows_w310; assert_in_epsilon(1.1700950236465302, worksheet.outputs_energy_flows_w310, 0.002); end
  def test_outputs_energy_flows_x310; assert_in_epsilon(1.2289844465973199, worksheet.outputs_energy_flows_x310, 0.002); end
  def test_outputs_energy_flows_y310; assert_in_epsilon(1.2488606937846038, worksheet.outputs_energy_flows_y310, 0.002); end
  def test_outputs_energy_flows_z310; assert_in_epsilon(1.2647699869335025, worksheet.outputs_energy_flows_z310, 0.002); end
  def test_outputs_energy_flows_aa310; assert_in_epsilon(1.2799699635743256, worksheet.outputs_energy_flows_aa310, 0.002); end
  def test_outputs_energy_flows_ab310; assert_in_epsilon(1.2913361757171002, worksheet.outputs_energy_flows_ab310, 0.002); end
  def test_outputs_energy_flows_ac310; assert_in_epsilon(1.2966808572507722, worksheet.outputs_energy_flows_ac310, 0.002); end
  def test_outputs_energy_flows_ad310; assert_in_epsilon(1.308678799876252, worksheet.outputs_energy_flows_ad310, 0.002); end
  def test_outputs_energy_flows_c312; assert_equal("FF.02", worksheet.outputs_energy_flows_c312); end
  def test_outputs_energy_flows_d312; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d312); end
  def test_outputs_energy_flows_e312; assert_equal("n/a", worksheet.outputs_energy_flows_e312); end
  def test_outputs_energy_flows_f312; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f312); end
  def test_outputs_energy_flows_i312; assert_equal("FF.02", worksheet.outputs_energy_flows_i312); end
  def test_outputs_energy_flows_j312; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j312); end
  def test_outputs_energy_flows_v312; assert_in_delta(0.40529936521738275, worksheet.outputs_energy_flows_v312, 0.002); end
  def test_outputs_energy_flows_w312; assert_in_delta(0.4196191277580124, worksheet.outputs_energy_flows_w312, 0.002); end
  def test_outputs_energy_flows_x312; assert_in_delta(0.483429362675784, worksheet.outputs_energy_flows_x312, 0.002); end
  def test_outputs_energy_flows_y312; assert_in_delta(0.5490468794704838, worksheet.outputs_energy_flows_y312, 0.002); end
  def test_outputs_energy_flows_z312; assert_in_delta(0.620249689919592, worksheet.outputs_energy_flows_z312, 0.002); end
  def test_outputs_energy_flows_aa312; assert_in_delta(0.6955742317816684, worksheet.outputs_energy_flows_aa312, 0.002); end
  def test_outputs_energy_flows_ab312; assert_in_delta(0.7821814009021419, worksheet.outputs_energy_flows_ab312, 0.002); end
  def test_outputs_energy_flows_ac312; assert_in_delta(0.8745065506533072, worksheet.outputs_energy_flows_ac312, 0.002); end
  def test_outputs_energy_flows_ad312; assert_in_delta(0.9811828192659339, worksheet.outputs_energy_flows_ad312, 0.002); end
  def test_outputs_energy_flows_c314; assert_equal("FF.02", worksheet.outputs_energy_flows_c314); end
  def test_outputs_energy_flows_d314; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d314); end
  def test_outputs_energy_flows_e314; assert_equal("n/a", worksheet.outputs_energy_flows_e314); end
  def test_outputs_energy_flows_f314; assert_equal("Chemicals", worksheet.outputs_energy_flows_f314); end
  def test_outputs_energy_flows_i314; assert_equal("FF.02", worksheet.outputs_energy_flows_i314); end
  def test_outputs_energy_flows_j314; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j314); end
  def test_outputs_energy_flows_v314; assert_in_epsilon(19.210879294175747, worksheet.outputs_energy_flows_v314, 0.002); end
  def test_outputs_energy_flows_w314; assert_in_epsilon(20.410701652118828, worksheet.outputs_energy_flows_w314, 0.002); end
  def test_outputs_energy_flows_x314; assert_in_epsilon(23.760859390891785, worksheet.outputs_energy_flows_x314, 0.002); end
  def test_outputs_energy_flows_y314; assert_in_epsilon(27.27036563585123, worksheet.outputs_energy_flows_y314, 0.002); end
  def test_outputs_energy_flows_z314; assert_in_epsilon(31.083343890952527, worksheet.outputs_energy_flows_z314, 0.002); end
  def test_outputs_energy_flows_aa314; assert_in_epsilon(35.055955776544664, worksheet.outputs_energy_flows_aa314, 0.002); end
  def test_outputs_energy_flows_ab314; assert_in_epsilon(39.66309775036313, worksheet.outputs_energy_flows_ab314, 0.002); end
  def test_outputs_energy_flows_ac314; assert_in_epsilon(44.550728537525266, worksheet.outputs_energy_flows_ac314, 0.002); end
  def test_outputs_energy_flows_ad314; assert_in_epsilon(50.13412843278271, worksheet.outputs_energy_flows_ad314, 0.002); end
  def test_outputs_energy_flows_c316; assert_equal("FF.02", worksheet.outputs_energy_flows_c316); end
  def test_outputs_energy_flows_d316; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d316); end
  def test_outputs_energy_flows_e316; assert_equal("n/a", worksheet.outputs_energy_flows_e316); end
  def test_outputs_energy_flows_f316; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f316); end
  def test_outputs_energy_flows_i316; assert_equal("FF.02", worksheet.outputs_energy_flows_i316); end
  def test_outputs_energy_flows_j316; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j316); end
  def test_outputs_energy_flows_l316; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l316); end
  def test_outputs_energy_flows_m316; assert_equal("Timber", worksheet.outputs_energy_flows_m316); end
  def test_outputs_energy_flows_v316; assert_in_epsilon(8.9088083790622, worksheet.outputs_energy_flows_v316, 0.002); end
  def test_outputs_energy_flows_w316; assert_in_epsilon(9.167991247004526, worksheet.outputs_energy_flows_w316, 0.002); end
  def test_outputs_energy_flows_x316; assert_in_epsilon(9.88580740659625, worksheet.outputs_energy_flows_x316, 0.002); end
  def test_outputs_energy_flows_y316; assert_in_epsilon(10.447708191075767, worksheet.outputs_energy_flows_y316, 0.002); end
  def test_outputs_energy_flows_z316; assert_in_epsilon(11.017513931425224, worksheet.outputs_energy_flows_z316, 0.002); end
  def test_outputs_energy_flows_aa316; assert_in_epsilon(11.58913997139367, worksheet.outputs_energy_flows_aa316, 0.002); end
  def test_outputs_energy_flows_ab316; assert_in_epsilon(12.200517437393435, worksheet.outputs_energy_flows_ab316, 0.002); end
  def test_outputs_energy_flows_ac316; assert_in_epsilon(12.814813199426093, worksheet.outputs_energy_flows_ac316, 0.002); end
  def test_outputs_energy_flows_ad316; assert_in_epsilon(13.506204225922952, worksheet.outputs_energy_flows_ad316, 0.002); end
  def test_outputs_energy_flows_c318; assert_equal("FF.02", worksheet.outputs_energy_flows_c318); end
  def test_outputs_energy_flows_d318; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d318); end
  def test_outputs_energy_flows_e318; assert_equal("n/a", worksheet.outputs_energy_flows_e318); end
  def test_outputs_energy_flows_f318; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f318); end
  def test_outputs_energy_flows_i318; assert_equal("FF.02", worksheet.outputs_energy_flows_i318); end
  def test_outputs_energy_flows_j318; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j318); end
  def test_outputs_energy_flows_l318; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l318); end
  def test_outputs_energy_flows_m318; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m318); end
  def test_outputs_energy_flows_v318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v318||0), 0.002); end
  def test_outputs_energy_flows_w318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w318||0), 0.002); end
  def test_outputs_energy_flows_x318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x318||0), 0.002); end
  def test_outputs_energy_flows_y318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y318||0), 0.002); end
  def test_outputs_energy_flows_z318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z318||0), 0.002); end
  def test_outputs_energy_flows_aa318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa318||0), 0.002); end
  def test_outputs_energy_flows_ab318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab318||0), 0.002); end
  def test_outputs_energy_flows_ac318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac318||0), 0.002); end
  def test_outputs_energy_flows_ad318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad318||0), 0.002); end
  def test_outputs_energy_flows_c320; assert_equal("FF.02", worksheet.outputs_energy_flows_c320); end
  def test_outputs_energy_flows_d320; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d320); end
  def test_outputs_energy_flows_e320; assert_equal("n/a", worksheet.outputs_energy_flows_e320); end
  def test_outputs_energy_flows_f320; assert_equal("International passenger", worksheet.outputs_energy_flows_f320); end
  def test_outputs_energy_flows_i320; assert_equal("FF.02", worksheet.outputs_energy_flows_i320); end
  def test_outputs_energy_flows_j320; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j320); end
  def test_outputs_energy_flows_l320; assert_equal("International", worksheet.outputs_energy_flows_l320); end
  def test_outputs_energy_flows_v320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v320||0), 0.002); end
  def test_outputs_energy_flows_w320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w320||0), 0.002); end
  def test_outputs_energy_flows_x320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x320||0), 0.002); end
  def test_outputs_energy_flows_y320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y320||0), 0.002); end
  def test_outputs_energy_flows_z320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z320||0), 0.002); end
  def test_outputs_energy_flows_aa320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa320||0), 0.002); end
  def test_outputs_energy_flows_ab320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab320||0), 0.002); end
  def test_outputs_energy_flows_ac320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac320||0), 0.002); end
  def test_outputs_energy_flows_ad320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad320||0), 0.002); end
  def test_outputs_energy_flows_c322; assert_equal("FF.02", worksheet.outputs_energy_flows_c322); end
  def test_outputs_energy_flows_d322; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d322); end
  def test_outputs_energy_flows_e322; assert_equal("n/a", worksheet.outputs_energy_flows_e322); end
  def test_outputs_energy_flows_f322; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f322); end
  def test_outputs_energy_flows_i322; assert_equal("FF.02", worksheet.outputs_energy_flows_i322); end
  def test_outputs_energy_flows_j322; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j322); end
  def test_outputs_energy_flows_l322; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l322); end
  def test_outputs_energy_flows_v322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v322||0), 0.002); end
  def test_outputs_energy_flows_w322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w322||0), 0.002); end
  def test_outputs_energy_flows_x322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x322||0), 0.002); end
  def test_outputs_energy_flows_y322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y322||0), 0.002); end
  def test_outputs_energy_flows_z322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z322||0), 0.002); end
  def test_outputs_energy_flows_aa322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa322||0), 0.002); end
  def test_outputs_energy_flows_ab322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab322||0), 0.002); end
  def test_outputs_energy_flows_ac322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac322||0), 0.002); end
  def test_outputs_energy_flows_ad322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad322||0), 0.002); end
  def test_outputs_energy_flows_c324; assert_equal("FF.02", worksheet.outputs_energy_flows_c324); end
  def test_outputs_energy_flows_d324; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d324); end
  def test_outputs_energy_flows_e324; assert_equal("n/a", worksheet.outputs_energy_flows_e324); end
  def test_outputs_energy_flows_f324; assert_equal("International freight", worksheet.outputs_energy_flows_f324); end
  def test_outputs_energy_flows_i324; assert_equal("FF.02", worksheet.outputs_energy_flows_i324); end
  def test_outputs_energy_flows_j324; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j324); end
  def test_outputs_energy_flows_l324; assert_equal("International freight", worksheet.outputs_energy_flows_l324); end
  def test_outputs_energy_flows_v324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v324||0), 0.002); end
  def test_outputs_energy_flows_w324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w324||0), 0.002); end
  def test_outputs_energy_flows_x324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x324||0), 0.002); end
  def test_outputs_energy_flows_y324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y324||0), 0.002); end
  def test_outputs_energy_flows_z324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z324||0), 0.002); end
  def test_outputs_energy_flows_aa324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa324||0), 0.002); end
  def test_outputs_energy_flows_ab324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab324||0), 0.002); end
  def test_outputs_energy_flows_ac324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac324||0), 0.002); end
  def test_outputs_energy_flows_ad324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad324||0), 0.002); end
  def test_outputs_energy_flows_c326; assert_equal("FF.02", worksheet.outputs_energy_flows_c326); end
  def test_outputs_energy_flows_d326; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d326); end
  def test_outputs_energy_flows_e326; assert_equal("n/a", worksheet.outputs_energy_flows_e326); end
  def test_outputs_energy_flows_f326; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f326); end
  def test_outputs_energy_flows_i326; assert_equal("FF.02", worksheet.outputs_energy_flows_i326); end
  def test_outputs_energy_flows_j326; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j326); end
  def test_outputs_energy_flows_v326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v326||0), 0.002); end
  def test_outputs_energy_flows_w326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w326||0), 0.002); end
  def test_outputs_energy_flows_x326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x326||0), 0.002); end
  def test_outputs_energy_flows_y326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y326||0), 0.002); end
  def test_outputs_energy_flows_z326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z326||0), 0.002); end
  def test_outputs_energy_flows_aa326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa326||0), 0.002); end
  def test_outputs_energy_flows_ab326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab326||0), 0.002); end
  def test_outputs_energy_flows_ac326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac326||0), 0.002); end
  def test_outputs_energy_flows_ad326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad326||0), 0.002); end
  def test_outputs_energy_flows_c328; assert_equal("FF.02", worksheet.outputs_energy_flows_c328); end
  def test_outputs_energy_flows_d328; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d328); end
  def test_outputs_energy_flows_e328; assert_equal("G.01", worksheet.outputs_energy_flows_e328); end
  def test_outputs_energy_flows_f328; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f328); end
  def test_outputs_energy_flows_g328; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g328); end
  def test_outputs_energy_flows_h328; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h328); end
  def test_outputs_energy_flows_i328; assert_equal("FF.02", worksheet.outputs_energy_flows_i328); end
  def test_outputs_energy_flows_j328; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j328); end
  def test_outputs_energy_flows_v328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v328||0), 0.002); end
  def test_outputs_energy_flows_w328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w328||0), 0.002); end
  def test_outputs_energy_flows_x328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x328||0), 0.002); end
  def test_outputs_energy_flows_y328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y328||0), 0.002); end
  def test_outputs_energy_flows_z328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z328||0), 0.002); end
  def test_outputs_energy_flows_aa328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa328||0), 0.002); end
  def test_outputs_energy_flows_ab328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab328||0), 0.002); end
  def test_outputs_energy_flows_ac328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac328||0), 0.002); end
  def test_outputs_energy_flows_ad328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad328||0), 0.002); end
  def test_outputs_energy_flows_c330; assert_equal("FF.02", worksheet.outputs_energy_flows_c330); end
  def test_outputs_energy_flows_d330; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d330); end
  def test_outputs_energy_flows_e330; assert_equal("n/a", worksheet.outputs_energy_flows_e330); end
  def test_outputs_energy_flows_f330; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f330); end
  def test_outputs_energy_flows_g330; assert_equal("n/a", worksheet.outputs_energy_flows_g330); end
  def test_outputs_energy_flows_h330; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h330); end
  def test_outputs_energy_flows_i330; assert_equal("FF.02", worksheet.outputs_energy_flows_i330); end
  def test_outputs_energy_flows_j330; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j330); end
  def test_outputs_energy_flows_v330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v330||0), 0.002); end
  def test_outputs_energy_flows_w330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w330||0), 0.002); end
  def test_outputs_energy_flows_x330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x330||0), 0.002); end
  def test_outputs_energy_flows_y330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y330||0), 0.002); end
  def test_outputs_energy_flows_z330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z330||0), 0.002); end
  def test_outputs_energy_flows_aa330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa330||0), 0.002); end
  def test_outputs_energy_flows_ab330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab330||0), 0.002); end
  def test_outputs_energy_flows_ac330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac330||0), 0.002); end
  def test_outputs_energy_flows_ad330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad330||0), 0.002); end
  def test_outputs_energy_flows_c332; assert_equal("FF.03", worksheet.outputs_energy_flows_c332); end
  def test_outputs_energy_flows_d332; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d332); end
  def test_outputs_energy_flows_e332; assert_equal("n/a", worksheet.outputs_energy_flows_e332); end
  def test_outputs_energy_flows_f332; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f332); end
  def test_outputs_energy_flows_i332; assert_equal("FF.03", worksheet.outputs_energy_flows_i332); end
  def test_outputs_energy_flows_j332; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j332); end
  def test_outputs_energy_flows_k332; assert_equal("Global buildings", worksheet.outputs_energy_flows_k332); end
  def test_outputs_energy_flows_v332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v332||0), 0.002); end
  def test_outputs_energy_flows_w332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w332||0), 0.002); end
  def test_outputs_energy_flows_x332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x332||0), 0.002); end
  def test_outputs_energy_flows_y332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y332||0), 0.002); end
  def test_outputs_energy_flows_z332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z332||0), 0.002); end
  def test_outputs_energy_flows_aa332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa332||0), 0.002); end
  def test_outputs_energy_flows_ab332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab332||0), 0.002); end
  def test_outputs_energy_flows_ac332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac332||0), 0.002); end
  def test_outputs_energy_flows_ad332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad332||0), 0.002); end
  def test_outputs_energy_flows_c334; assert_equal("FF.03", worksheet.outputs_energy_flows_c334); end
  def test_outputs_energy_flows_d334; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d334); end
  def test_outputs_energy_flows_e334; assert_equal("n/a", worksheet.outputs_energy_flows_e334); end
  def test_outputs_energy_flows_f334; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f334); end
  def test_outputs_energy_flows_i334; assert_equal("FF.03", worksheet.outputs_energy_flows_i334); end
  def test_outputs_energy_flows_j334; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j334); end
  def test_outputs_energy_flows_k334; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k334); end
  def test_outputs_energy_flows_l334; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l334); end
  def test_outputs_energy_flows_v334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v334||0), 0.002); end
  def test_outputs_energy_flows_w334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w334||0), 0.002); end
  def test_outputs_energy_flows_x334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x334||0), 0.002); end
  def test_outputs_energy_flows_y334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y334||0), 0.002); end
  def test_outputs_energy_flows_z334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z334||0), 0.002); end
  def test_outputs_energy_flows_aa334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa334||0), 0.002); end
  def test_outputs_energy_flows_ab334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab334||0), 0.002); end
  def test_outputs_energy_flows_ac334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac334||0), 0.002); end
  def test_outputs_energy_flows_ad334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad334||0), 0.002); end
  def test_outputs_energy_flows_c336; assert_equal("FF.03", worksheet.outputs_energy_flows_c336); end
  def test_outputs_energy_flows_d336; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d336); end
  def test_outputs_energy_flows_e336; assert_equal("n/a", worksheet.outputs_energy_flows_e336); end
  def test_outputs_energy_flows_f336; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f336); end
  def test_outputs_energy_flows_i336; assert_equal("FF.03", worksheet.outputs_energy_flows_i336); end
  def test_outputs_energy_flows_j336; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j336); end
  def test_outputs_energy_flows_k336; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k336); end
  def test_outputs_energy_flows_l336; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l336); end
  def test_outputs_energy_flows_v336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v336||0), 0.002); end
  def test_outputs_energy_flows_w336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w336||0), 0.002); end
  def test_outputs_energy_flows_x336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x336||0), 0.002); end
  def test_outputs_energy_flows_y336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y336||0), 0.002); end
  def test_outputs_energy_flows_z336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z336||0), 0.002); end
  def test_outputs_energy_flows_aa336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa336||0), 0.002); end
  def test_outputs_energy_flows_ab336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab336||0), 0.002); end
  def test_outputs_energy_flows_ac336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac336||0), 0.002); end
  def test_outputs_energy_flows_ad336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad336||0), 0.002); end
  def test_outputs_energy_flows_c338; assert_equal("FF.03", worksheet.outputs_energy_flows_c338); end
  def test_outputs_energy_flows_d338; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d338); end
  def test_outputs_energy_flows_e338; assert_equal("n/a", worksheet.outputs_energy_flows_e338); end
  def test_outputs_energy_flows_f338; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f338); end
  def test_outputs_energy_flows_i338; assert_equal("FF.03", worksheet.outputs_energy_flows_i338); end
  def test_outputs_energy_flows_j338; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j338); end
  def test_outputs_energy_flows_k338; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k338); end
  def test_outputs_energy_flows_l338; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l338); end
  def test_outputs_energy_flows_v338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v338||0), 0.002); end
  def test_outputs_energy_flows_w338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w338||0), 0.002); end
  def test_outputs_energy_flows_x338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x338||0), 0.002); end
  def test_outputs_energy_flows_y338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y338||0), 0.002); end
  def test_outputs_energy_flows_z338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z338||0), 0.002); end
  def test_outputs_energy_flows_aa338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa338||0), 0.002); end
  def test_outputs_energy_flows_ab338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab338||0), 0.002); end
  def test_outputs_energy_flows_ac338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac338||0), 0.002); end
  def test_outputs_energy_flows_ad338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad338||0), 0.002); end
  def test_outputs_energy_flows_c340; assert_equal("FF.03", worksheet.outputs_energy_flows_c340); end
  def test_outputs_energy_flows_d340; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d340); end
  def test_outputs_energy_flows_e340; assert_equal("n/a", worksheet.outputs_energy_flows_e340); end
  def test_outputs_energy_flows_f340; assert_equal("Non domestic", worksheet.outputs_energy_flows_f340); end
  def test_outputs_energy_flows_i340; assert_equal("FF.03", worksheet.outputs_energy_flows_i340); end
  def test_outputs_energy_flows_j340; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j340); end
  def test_outputs_energy_flows_k340; assert_equal("Non-residential", worksheet.outputs_energy_flows_k340); end
  def test_outputs_energy_flows_v340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v340||0), 0.002); end
  def test_outputs_energy_flows_w340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w340||0), 0.002); end
  def test_outputs_energy_flows_x340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x340||0), 0.002); end
  def test_outputs_energy_flows_y340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y340||0), 0.002); end
  def test_outputs_energy_flows_z340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z340||0), 0.002); end
  def test_outputs_energy_flows_aa340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa340||0), 0.002); end
  def test_outputs_energy_flows_ab340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab340||0), 0.002); end
  def test_outputs_energy_flows_ac340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac340||0), 0.002); end
  def test_outputs_energy_flows_ad340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad340||0), 0.002); end
  def test_outputs_energy_flows_c342; assert_equal("FF.03", worksheet.outputs_energy_flows_c342); end
  def test_outputs_energy_flows_d342; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d342); end
  def test_outputs_energy_flows_e342; assert_equal("n/a", worksheet.outputs_energy_flows_e342); end
  def test_outputs_energy_flows_f342; assert_equal("Steel", worksheet.outputs_energy_flows_f342); end
  def test_outputs_energy_flows_i342; assert_equal("FF.03", worksheet.outputs_energy_flows_i342); end
  def test_outputs_energy_flows_j342; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j342); end
  def test_outputs_energy_flows_v342; assert_in_epsilon(2.3045661146880003, worksheet.outputs_energy_flows_v342, 0.002); end
  def test_outputs_energy_flows_w342; assert_in_epsilon(2.4956090957618406, worksheet.outputs_energy_flows_w342, 0.002); end
  def test_outputs_energy_flows_x342; assert_in_epsilon(2.7874595113320684, worksheet.outputs_energy_flows_x342, 0.002); end
  def test_outputs_energy_flows_y342; assert_in_epsilon(3.0477241204021186, worksheet.outputs_energy_flows_y342, 0.002); end
  def test_outputs_energy_flows_z342; assert_in_epsilon(3.3253679345164437, worksheet.outputs_energy_flows_z342, 0.002); end
  def test_outputs_energy_flows_aa342; assert_in_epsilon(3.5971584900294014, worksheet.outputs_energy_flows_aa342, 0.002); end
  def test_outputs_energy_flows_ab342; assert_in_epsilon(3.9107594413127886, worksheet.outputs_energy_flows_ab342, 0.002); end
  def test_outputs_energy_flows_ac342; assert_in_epsilon(4.24627433936588, worksheet.outputs_energy_flows_ac342, 0.002); end
  def test_outputs_energy_flows_ad342; assert_in_epsilon(4.605198030629508, worksheet.outputs_energy_flows_ad342, 0.002); end
  def test_outputs_energy_flows_c344; assert_equal("FF.03", worksheet.outputs_energy_flows_c344); end
  def test_outputs_energy_flows_d344; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d344); end
  def test_outputs_energy_flows_e344; assert_equal("n/a", worksheet.outputs_energy_flows_e344); end
  def test_outputs_energy_flows_f344; assert_equal("Aluminium", worksheet.outputs_energy_flows_f344); end
  def test_outputs_energy_flows_i344; assert_equal("FF.03", worksheet.outputs_energy_flows_i344); end
  def test_outputs_energy_flows_j344; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j344); end
  def test_outputs_energy_flows_v344; assert_in_delta(0.6789041363973375, worksheet.outputs_energy_flows_v344, 0.002); end
  def test_outputs_energy_flows_w344; assert_in_delta(0.7303466470925264, worksheet.outputs_energy_flows_w344, 0.002); end
  def test_outputs_energy_flows_x344; assert_in_delta(0.8141925547031805, worksheet.outputs_energy_flows_x344, 0.002); end
  def test_outputs_energy_flows_y344; assert_in_delta(0.899845032312393, worksheet.outputs_energy_flows_y344, 0.002); end
  def test_outputs_energy_flows_z344; assert_in_delta(0.9884260233934853, worksheet.outputs_energy_flows_z344, 0.002); end
  def test_outputs_energy_flows_aa344; assert_in_epsilon(1.0744188232624168, worksheet.outputs_energy_flows_aa344, 0.002); end
  def test_outputs_energy_flows_ab344; assert_in_epsilon(1.1710031904145983, worksheet.outputs_energy_flows_ab344, 0.002); end
  def test_outputs_energy_flows_ac344; assert_in_epsilon(1.2704098832212036, worksheet.outputs_energy_flows_ac344, 0.002); end
  def test_outputs_energy_flows_ad344; assert_in_epsilon(1.3832126711174497, worksheet.outputs_energy_flows_ad344, 0.002); end
  def test_outputs_energy_flows_c346; assert_equal("FF.03", worksheet.outputs_energy_flows_c346); end
  def test_outputs_energy_flows_d346; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d346); end
  def test_outputs_energy_flows_e346; assert_equal("n/a", worksheet.outputs_energy_flows_e346); end
  def test_outputs_energy_flows_f346; assert_equal("Cement", worksheet.outputs_energy_flows_f346); end
  def test_outputs_energy_flows_i346; assert_equal("FF.03", worksheet.outputs_energy_flows_i346); end
  def test_outputs_energy_flows_j346; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j346); end
  def test_outputs_energy_flows_v346; assert_in_delta(0.8284396320493046, worksheet.outputs_energy_flows_v346, 0.002); end
  def test_outputs_energy_flows_w346; assert_in_delta(0.8513571863651673, worksheet.outputs_energy_flows_w346, 0.002); end
  def test_outputs_energy_flows_x346; assert_in_delta(0.8942049315626527, worksheet.outputs_energy_flows_x346, 0.002); end
  def test_outputs_energy_flows_y346; assert_in_delta(0.9086668218697577, worksheet.outputs_energy_flows_y346, 0.002); end
  def test_outputs_energy_flows_z346; assert_in_delta(0.9202423698197822, worksheet.outputs_energy_flows_z346, 0.002); end
  def test_outputs_energy_flows_aa346; assert_in_delta(0.9313018214747587, worksheet.outputs_energy_flows_aa346, 0.002); end
  def test_outputs_energy_flows_ab346; assert_in_delta(0.9395718390322604, worksheet.outputs_energy_flows_ab346, 0.002); end
  def test_outputs_energy_flows_ac346; assert_in_delta(0.943460611260642, worksheet.outputs_energy_flows_ac346, 0.002); end
  def test_outputs_energy_flows_ad346; assert_in_delta(0.9521902737832351, worksheet.outputs_energy_flows_ad346, 0.002); end
  def test_outputs_energy_flows_c348; assert_equal("FF.03", worksheet.outputs_energy_flows_c348); end
  def test_outputs_energy_flows_d348; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d348); end
  def test_outputs_energy_flows_e348; assert_equal("n/a", worksheet.outputs_energy_flows_e348); end
  def test_outputs_energy_flows_f348; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f348); end
  def test_outputs_energy_flows_i348; assert_equal("FF.03", worksheet.outputs_energy_flows_i348); end
  def test_outputs_energy_flows_j348; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j348); end
  def test_outputs_energy_flows_v348; assert_in_delta(0.9864225684717471, worksheet.outputs_energy_flows_v348, 0.002); end
  def test_outputs_energy_flows_w348; assert_in_epsilon(1.0314770844537235, worksheet.outputs_energy_flows_w348, 0.002); end
  def test_outputs_energy_flows_x348; assert_in_epsilon(1.1866641890042617, worksheet.outputs_energy_flows_x348, 0.002); end
  def test_outputs_energy_flows_y348; assert_in_epsilon(1.3458404144451022, worksheet.outputs_energy_flows_y348, 0.002); end
  def test_outputs_energy_flows_z348; assert_in_epsilon(1.5182344370307341, worksheet.outputs_energy_flows_z348, 0.002); end
  def test_outputs_energy_flows_aa348; assert_in_epsilon(1.700210612513098, worksheet.outputs_energy_flows_aa348, 0.002); end
  def test_outputs_energy_flows_ab348; assert_in_epsilon(1.9092046546283064, worksheet.outputs_energy_flows_ab348, 0.002); end
  def test_outputs_energy_flows_ac348; assert_in_epsilon(2.1315357876672865, worksheet.outputs_energy_flows_ac348, 0.002); end
  def test_outputs_energy_flows_ad348; assert_in_epsilon(2.3881568842882475, worksheet.outputs_energy_flows_ad348, 0.002); end
  def test_outputs_energy_flows_c350; assert_equal("FF.03", worksheet.outputs_energy_flows_c350); end
  def test_outputs_energy_flows_d350; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d350); end
  def test_outputs_energy_flows_e350; assert_equal("n/a", worksheet.outputs_energy_flows_e350); end
  def test_outputs_energy_flows_f350; assert_equal("Chemicals", worksheet.outputs_energy_flows_f350); end
  def test_outputs_energy_flows_i350; assert_equal("FF.03", worksheet.outputs_energy_flows_i350); end
  def test_outputs_energy_flows_j350; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j350); end
  def test_outputs_energy_flows_v350; assert_in_epsilon(11.268542067145855, worksheet.outputs_energy_flows_v350, 0.002); end
  def test_outputs_energy_flows_w350; assert_in_epsilon(11.877933900111616, worksheet.outputs_energy_flows_w350, 0.002); end
  def test_outputs_energy_flows_x350; assert_in_epsilon(13.308851126537135, worksheet.outputs_energy_flows_x350, 0.002); end
  def test_outputs_energy_flows_y350; assert_in_epsilon(14.763863422380238, worksheet.outputs_energy_flows_y350, 0.002); end
  def test_outputs_energy_flows_z350; assert_in_epsilon(16.314323691730173, worksheet.outputs_energy_flows_z350, 0.002); end
  def test_outputs_energy_flows_aa350; assert_in_epsilon(17.924528617158597, worksheet.outputs_energy_flows_aa350, 0.002); end
  def test_outputs_energy_flows_ab350; assert_in_epsilon(19.761981782534136, worksheet.outputs_energy_flows_ab350, 0.002); end
  def test_outputs_energy_flows_ac350; assert_in_epsilon(21.66322145227744, worksheet.outputs_energy_flows_ac350, 0.002); end
  def test_outputs_energy_flows_ad350; assert_in_epsilon(23.847173318578562, worksheet.outputs_energy_flows_ad350, 0.002); end
  def test_outputs_energy_flows_c352; assert_equal("FF.03", worksheet.outputs_energy_flows_c352); end
  def test_outputs_energy_flows_d352; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d352); end
  def test_outputs_energy_flows_e352; assert_equal("n/a", worksheet.outputs_energy_flows_e352); end
  def test_outputs_energy_flows_f352; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f352); end
  def test_outputs_energy_flows_i352; assert_equal("FF.03", worksheet.outputs_energy_flows_i352); end
  def test_outputs_energy_flows_j352; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j352); end
  def test_outputs_energy_flows_l352; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l352); end
  def test_outputs_energy_flows_m352; assert_equal("Timber", worksheet.outputs_energy_flows_m352); end
  def test_outputs_energy_flows_v352; assert_in_epsilon(11.166371558744434, worksheet.outputs_energy_flows_v352, 0.002); end
  def test_outputs_energy_flows_w352; assert_in_epsilon(11.57855901716051, worksheet.outputs_energy_flows_w352, 0.002); end
  def test_outputs_energy_flows_x352; assert_in_epsilon(12.450245780404854, worksheet.outputs_energy_flows_x352, 0.002); end
  def test_outputs_energy_flows_y352; assert_in_epsilon(13.146544199633347, worksheet.outputs_energy_flows_y352, 0.002); end
  def test_outputs_energy_flows_z352; assert_in_epsilon(13.850792800702111, worksheet.outputs_energy_flows_z352, 0.002); end
  def test_outputs_energy_flows_aa352; assert_in_epsilon(14.556396736403553, worksheet.outputs_energy_flows_aa352, 0.002); end
  def test_outputs_energy_flows_ab352; assert_in_epsilon(15.308815829236003, worksheet.outputs_energy_flows_ab352, 0.002); end
  def test_outputs_energy_flows_ac352; assert_in_epsilon(16.06441426576261, worksheet.outputs_energy_flows_ac352, 0.002); end
  def test_outputs_energy_flows_ad352; assert_in_epsilon(16.910561981364605, worksheet.outputs_energy_flows_ad352, 0.002); end
  def test_outputs_energy_flows_c354; assert_equal("FF.03", worksheet.outputs_energy_flows_c354); end
  def test_outputs_energy_flows_d354; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d354); end
  def test_outputs_energy_flows_e354; assert_equal("n/a", worksheet.outputs_energy_flows_e354); end
  def test_outputs_energy_flows_f354; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f354); end
  def test_outputs_energy_flows_i354; assert_equal("FF.03", worksheet.outputs_energy_flows_i354); end
  def test_outputs_energy_flows_j354; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j354); end
  def test_outputs_energy_flows_l354; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l354); end
  def test_outputs_energy_flows_m354; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m354); end
  def test_outputs_energy_flows_v354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v354||0), 0.002); end
  def test_outputs_energy_flows_w354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w354||0), 0.002); end
  def test_outputs_energy_flows_x354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x354||0), 0.002); end
  def test_outputs_energy_flows_y354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y354||0), 0.002); end
  def test_outputs_energy_flows_z354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z354||0), 0.002); end
  def test_outputs_energy_flows_aa354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa354||0), 0.002); end
  def test_outputs_energy_flows_ab354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab354||0), 0.002); end
  def test_outputs_energy_flows_ac354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac354||0), 0.002); end
  def test_outputs_energy_flows_ad354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad354||0), 0.002); end
  def test_outputs_energy_flows_c356; assert_equal("FF.03", worksheet.outputs_energy_flows_c356); end
  def test_outputs_energy_flows_d356; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d356); end
  def test_outputs_energy_flows_e356; assert_equal("n/a", worksheet.outputs_energy_flows_e356); end
  def test_outputs_energy_flows_f356; assert_equal("International passenger", worksheet.outputs_energy_flows_f356); end
  def test_outputs_energy_flows_i356; assert_equal("FF.03", worksheet.outputs_energy_flows_i356); end
  def test_outputs_energy_flows_j356; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j356); end
  def test_outputs_energy_flows_l356; assert_equal("International", worksheet.outputs_energy_flows_l356); end
  def test_outputs_energy_flows_v356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v356||0), 0.002); end
  def test_outputs_energy_flows_w356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w356||0), 0.002); end
  def test_outputs_energy_flows_x356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x356||0), 0.002); end
  def test_outputs_energy_flows_y356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y356||0), 0.002); end
  def test_outputs_energy_flows_z356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z356||0), 0.002); end
  def test_outputs_energy_flows_aa356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa356||0), 0.002); end
  def test_outputs_energy_flows_ab356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab356||0), 0.002); end
  def test_outputs_energy_flows_ac356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac356||0), 0.002); end
  def test_outputs_energy_flows_ad356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad356||0), 0.002); end
  def test_outputs_energy_flows_c358; assert_equal("FF.03", worksheet.outputs_energy_flows_c358); end
  def test_outputs_energy_flows_d358; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d358); end
  def test_outputs_energy_flows_e358; assert_equal("n/a", worksheet.outputs_energy_flows_e358); end
  def test_outputs_energy_flows_f358; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f358); end
  def test_outputs_energy_flows_i358; assert_equal("FF.03", worksheet.outputs_energy_flows_i358); end
  def test_outputs_energy_flows_j358; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j358); end
  def test_outputs_energy_flows_l358; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l358); end
  def test_outputs_energy_flows_v358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v358||0), 0.002); end
  def test_outputs_energy_flows_w358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w358||0), 0.002); end
  def test_outputs_energy_flows_x358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x358||0), 0.002); end
  def test_outputs_energy_flows_y358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y358||0), 0.002); end
  def test_outputs_energy_flows_z358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z358||0), 0.002); end
  def test_outputs_energy_flows_aa358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa358||0), 0.002); end
  def test_outputs_energy_flows_ab358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab358||0), 0.002); end
  def test_outputs_energy_flows_ac358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac358||0), 0.002); end
  def test_outputs_energy_flows_ad358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad358||0), 0.002); end
  def test_outputs_energy_flows_c360; assert_equal("FF.03", worksheet.outputs_energy_flows_c360); end
  def test_outputs_energy_flows_d360; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d360); end
  def test_outputs_energy_flows_e360; assert_equal("n/a", worksheet.outputs_energy_flows_e360); end
  def test_outputs_energy_flows_f360; assert_equal("International freight", worksheet.outputs_energy_flows_f360); end
  def test_outputs_energy_flows_i360; assert_equal("FF.03", worksheet.outputs_energy_flows_i360); end
  def test_outputs_energy_flows_j360; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j360); end
  def test_outputs_energy_flows_l360; assert_equal("International freight", worksheet.outputs_energy_flows_l360); end
  def test_outputs_energy_flows_v360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v360||0), 0.002); end
  def test_outputs_energy_flows_w360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w360||0), 0.002); end
  def test_outputs_energy_flows_x360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x360||0), 0.002); end
  def test_outputs_energy_flows_y360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y360||0), 0.002); end
  def test_outputs_energy_flows_z360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z360||0), 0.002); end
  def test_outputs_energy_flows_aa360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa360||0), 0.002); end
  def test_outputs_energy_flows_ab360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab360||0), 0.002); end
  def test_outputs_energy_flows_ac360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac360||0), 0.002); end
  def test_outputs_energy_flows_ad360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad360||0), 0.002); end
  def test_outputs_energy_flows_c362; assert_equal("FF.03", worksheet.outputs_energy_flows_c362); end
  def test_outputs_energy_flows_d362; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d362); end
  def test_outputs_energy_flows_e362; assert_equal("n/a", worksheet.outputs_energy_flows_e362); end
  def test_outputs_energy_flows_f362; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f362); end
  def test_outputs_energy_flows_i362; assert_equal("FF.03", worksheet.outputs_energy_flows_i362); end
  def test_outputs_energy_flows_j362; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j362); end
  def test_outputs_energy_flows_v362; assert_in_delta(8.660925161525873e-08, worksheet.outputs_energy_flows_v362, 0.002); end
  def test_outputs_energy_flows_w362; assert_in_delta(0.19093979301932854, worksheet.outputs_energy_flows_w362, 0.002); end
  def test_outputs_energy_flows_x362; assert_in_delta(0.15783381553400416, worksheet.outputs_energy_flows_x362, 0.002); end
  def test_outputs_energy_flows_y362; assert_in_delta(0.14257992924385082, worksheet.outputs_energy_flows_y362, 0.002); end
  def test_outputs_energy_flows_z362; assert_in_delta(0.11987531649603246, worksheet.outputs_energy_flows_z362, 0.002); end
  def test_outputs_energy_flows_aa362; assert_in_delta(0.10502773033870208, worksheet.outputs_energy_flows_aa362, 0.002); end
  def test_outputs_energy_flows_ab362; assert_in_delta(0.08052168679750593, worksheet.outputs_energy_flows_ab362, 0.002); end
  def test_outputs_energy_flows_ac362; assert_in_delta(0.059547650884573276, worksheet.outputs_energy_flows_ac362, 0.002); end
  def test_outputs_energy_flows_ad362; assert_in_delta(0.03246482074063995, worksheet.outputs_energy_flows_ad362, 0.002); end
  def test_outputs_energy_flows_c364; assert_equal("FF.03", worksheet.outputs_energy_flows_c364); end
  def test_outputs_energy_flows_d364; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d364); end
  def test_outputs_energy_flows_e364; assert_equal("G.01", worksheet.outputs_energy_flows_e364); end
  def test_outputs_energy_flows_f364; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f364); end
  def test_outputs_energy_flows_g364; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g364); end
  def test_outputs_energy_flows_h364; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h364); end
  def test_outputs_energy_flows_i364; assert_equal("FF.03", worksheet.outputs_energy_flows_i364); end
  def test_outputs_energy_flows_j364; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j364); end
  def test_outputs_energy_flows_v364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v364||0), 0.002); end
  def test_outputs_energy_flows_w364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w364||0), 0.002); end
  def test_outputs_energy_flows_x364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x364||0), 0.002); end
  def test_outputs_energy_flows_y364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y364||0), 0.002); end
  def test_outputs_energy_flows_z364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z364||0), 0.002); end
  def test_outputs_energy_flows_aa364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa364||0), 0.002); end
  def test_outputs_energy_flows_ab364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab364||0), 0.002); end
  def test_outputs_energy_flows_ac364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac364||0), 0.002); end
  def test_outputs_energy_flows_ad364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad364||0), 0.002); end
  def test_outputs_energy_flows_c366; assert_equal("FF.03", worksheet.outputs_energy_flows_c366); end
  def test_outputs_energy_flows_d366; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d366); end
  def test_outputs_energy_flows_e366; assert_equal("n/a", worksheet.outputs_energy_flows_e366); end
  def test_outputs_energy_flows_f366; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f366); end
  def test_outputs_energy_flows_g366; assert_equal("n/a", worksheet.outputs_energy_flows_g366); end
  def test_outputs_energy_flows_h366; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h366); end
  def test_outputs_energy_flows_i366; assert_equal("FF.03", worksheet.outputs_energy_flows_i366); end
  def test_outputs_energy_flows_j366; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j366); end
  def test_outputs_energy_flows_v366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v366||0), 0.002); end
  def test_outputs_energy_flows_w366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w366||0), 0.002); end
  def test_outputs_energy_flows_x366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x366||0), 0.002); end
  def test_outputs_energy_flows_y366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y366||0), 0.002); end
  def test_outputs_energy_flows_z366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z366||0), 0.002); end
  def test_outputs_energy_flows_aa366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa366||0), 0.002); end
  def test_outputs_energy_flows_ab366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab366||0), 0.002); end
  def test_outputs_energy_flows_ac366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac366||0), 0.002); end
  def test_outputs_energy_flows_ad366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad366||0), 0.002); end
  def test_outputs_energy_flows_c368; assert_equal("n/a", worksheet.outputs_energy_flows_c368); end
  def test_outputs_energy_flows_d368; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_d368); end
  def test_outputs_energy_flows_e368; assert_equal("L.01", worksheet.outputs_energy_flows_e368); end
  def test_outputs_energy_flows_f368; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f368); end
  def test_outputs_energy_flows_v368; assert_in_delta(2.3931503735795177e-08, worksheet.outputs_energy_flows_v368, 0.002); end
  def test_outputs_energy_flows_w368; assert_in_delta(0.052393801150423816, worksheet.outputs_energy_flows_w368, 0.002); end
  def test_outputs_energy_flows_x368; assert_in_delta(0.07152531170160999, worksheet.outputs_energy_flows_x368, 0.002); end
  def test_outputs_energy_flows_y368; assert_in_delta(0.07971643188699248, worksheet.outputs_energy_flows_y368, 0.002); end
  def test_outputs_energy_flows_z368; assert_in_delta(0.0842186980405796, worksheet.outputs_energy_flows_z368, 0.002); end
  def test_outputs_energy_flows_aa368; assert_in_delta(0.08133627121794651, worksheet.outputs_energy_flows_aa368, 0.002); end
  def test_outputs_energy_flows_ab368; assert_in_delta(0.07214882665591518, worksheet.outputs_energy_flows_ab368, 0.002); end
  def test_outputs_energy_flows_ac368; assert_in_delta(0.06509045765911933, worksheet.outputs_energy_flows_ac368, 0.002); end
  def test_outputs_energy_flows_ad368; assert_in_delta(0.059027508841316495, worksheet.outputs_energy_flows_ad368, 0.002); end
  def test_outputs_energy_flows_c370; assert_equal("HY.01", worksheet.outputs_energy_flows_c370); end
  def test_outputs_energy_flows_d370; assert_equal("Global H2", worksheet.outputs_energy_flows_d370); end
  def test_outputs_energy_flows_e370; assert_equal("n/a", worksheet.outputs_energy_flows_e370); end
  def test_outputs_energy_flows_f370; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f370); end
  def test_outputs_energy_flows_i370; assert_equal("HY.01", worksheet.outputs_energy_flows_i370); end
  def test_outputs_energy_flows_j370; assert_equal("Global H2", worksheet.outputs_energy_flows_j370); end
  def test_outputs_energy_flows_l370; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l370); end
  def test_outputs_energy_flows_m370; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m370); end
  def test_outputs_energy_flows_v370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v370||0), 0.002); end
  def test_outputs_energy_flows_w370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w370||0), 0.002); end
  def test_outputs_energy_flows_x370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x370||0), 0.002); end
  def test_outputs_energy_flows_y370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y370||0), 0.002); end
  def test_outputs_energy_flows_z370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z370||0), 0.002); end
  def test_outputs_energy_flows_aa370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa370||0), 0.002); end
  def test_outputs_energy_flows_ab370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab370||0), 0.002); end
  def test_outputs_energy_flows_ac370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac370||0), 0.002); end
  def test_outputs_energy_flows_ad370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad370||0), 0.002); end
  def test_outputs_energy_flows_c372; assert_equal("HY.01", worksheet.outputs_energy_flows_c372); end
  def test_outputs_energy_flows_d372; assert_equal("Global H2", worksheet.outputs_energy_flows_d372); end
  def test_outputs_energy_flows_e372; assert_equal("n/a", worksheet.outputs_energy_flows_e372); end
  def test_outputs_energy_flows_f372; assert_equal("International passenger", worksheet.outputs_energy_flows_f372); end
  def test_outputs_energy_flows_i372; assert_equal("HY.01", worksheet.outputs_energy_flows_i372); end
  def test_outputs_energy_flows_j372; assert_equal("Global H2", worksheet.outputs_energy_flows_j372); end
  def test_outputs_energy_flows_l372; assert_equal("International", worksheet.outputs_energy_flows_l372); end
  def test_outputs_energy_flows_v372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v372||0), 0.002); end
  def test_outputs_energy_flows_w372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w372||0), 0.002); end
  def test_outputs_energy_flows_x372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x372||0), 0.002); end
  def test_outputs_energy_flows_y372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y372||0), 0.002); end
  def test_outputs_energy_flows_z372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z372||0), 0.002); end
  def test_outputs_energy_flows_aa372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa372||0), 0.002); end
  def test_outputs_energy_flows_ab372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab372||0), 0.002); end
  def test_outputs_energy_flows_ac372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac372||0), 0.002); end
  def test_outputs_energy_flows_ad372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad372||0), 0.002); end
  def test_outputs_energy_flows_c374; assert_equal("HY.01", worksheet.outputs_energy_flows_c374); end
  def test_outputs_energy_flows_d374; assert_equal("Global H2", worksheet.outputs_energy_flows_d374); end
  def test_outputs_energy_flows_e374; assert_equal("n/a", worksheet.outputs_energy_flows_e374); end
  def test_outputs_energy_flows_f374; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f374); end
  def test_outputs_energy_flows_i374; assert_equal("HY.01", worksheet.outputs_energy_flows_i374); end
  def test_outputs_energy_flows_j374; assert_equal("Global H2", worksheet.outputs_energy_flows_j374); end
  def test_outputs_energy_flows_l374; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l374); end
  def test_outputs_energy_flows_v374; assert_in_delta(6.837572495941478e-08, worksheet.outputs_energy_flows_v374, 0.002); end
  def test_outputs_energy_flows_w374; assert_in_delta(0.1224148607040583, worksheet.outputs_energy_flows_w374, 0.002); end
  def test_outputs_energy_flows_x374; assert_in_delta(0.13024718676680436, worksheet.outputs_energy_flows_x374, 0.002); end
  def test_outputs_energy_flows_y374; assert_in_delta(0.1268032210397723, worksheet.outputs_energy_flows_y374, 0.002); end
  def test_outputs_energy_flows_z374; assert_in_delta(0.1088554112102186, worksheet.outputs_energy_flows_z374, 0.002); end
  def test_outputs_energy_flows_aa374; assert_in_delta(0.0855933211209761, worksheet.outputs_energy_flows_aa374, 0.002); end
  def test_outputs_energy_flows_ab374; assert_in_delta(0.058890051932799156, worksheet.outputs_energy_flows_ab374, 0.002); end
  def test_outputs_energy_flows_ac374; assert_in_delta(0.03019496998228318, worksheet.outputs_energy_flows_ac374, 0.002); end
  def test_outputs_energy_flows_ad374; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad374||0), 0.002); end
  def test_outputs_energy_flows_c376; assert_equal("HY.01", worksheet.outputs_energy_flows_c376); end
  def test_outputs_energy_flows_d376; assert_equal("Global H2", worksheet.outputs_energy_flows_d376); end
  def test_outputs_energy_flows_e376; assert_equal("n/a", worksheet.outputs_energy_flows_e376); end
  def test_outputs_energy_flows_f376; assert_equal("International freight", worksheet.outputs_energy_flows_f376); end
  def test_outputs_energy_flows_i376; assert_equal("HY.01", worksheet.outputs_energy_flows_i376); end
  def test_outputs_energy_flows_j376; assert_equal("Global H2", worksheet.outputs_energy_flows_j376); end
  def test_outputs_energy_flows_l376; assert_equal("International freight", worksheet.outputs_energy_flows_l376); end
  def test_outputs_energy_flows_v376; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v376||0), 0.002); end
  def test_outputs_energy_flows_w376; assert_in_delta(0.02832708115330635, worksheet.outputs_energy_flows_w376, 0.002); end
  def test_outputs_energy_flows_x376; assert_in_delta(0.029164966922539875, worksheet.outputs_energy_flows_x376, 0.002); end
  def test_outputs_energy_flows_y376; assert_in_delta(0.027488630963394867, worksheet.outputs_energy_flows_y376, 0.002); end
  def test_outputs_energy_flows_z376; assert_in_delta(0.024275735527409015, worksheet.outputs_energy_flows_z376, 0.002); end
  def test_outputs_energy_flows_aa376; assert_in_delta(0.01867353577877509, worksheet.outputs_energy_flows_aa376, 0.002); end
  def test_outputs_energy_flows_ab376; assert_in_delta(0.012455922958131535, worksheet.outputs_energy_flows_ab376, 0.002); end
  def test_outputs_energy_flows_ac376; assert_in_delta(0.006154449045617766, worksheet.outputs_energy_flows_ac376, 0.002); end
  def test_outputs_energy_flows_ad376; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad376||0), 0.002); end
  def test_outputs_energy_flows_c378; assert_equal("H.01", worksheet.outputs_energy_flows_c378); end
  def test_outputs_energy_flows_d378; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d378); end
  def test_outputs_energy_flows_e378; assert_equal("n/a", worksheet.outputs_energy_flows_e378); end
  def test_outputs_energy_flows_f378; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f378); end
  def test_outputs_energy_flows_i378; assert_equal("H.01", worksheet.outputs_energy_flows_i378); end
  def test_outputs_energy_flows_j378; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j378); end
  def test_outputs_energy_flows_k378; assert_equal("Global buildings", worksheet.outputs_energy_flows_k378); end
  def test_outputs_energy_flows_l378; assert_equal("Heat network", worksheet.outputs_energy_flows_l378); end
  def test_outputs_energy_flows_v378; assert_in_epsilon(3.1671872924936775, worksheet.outputs_energy_flows_v378, 0.002); end
  def test_outputs_energy_flows_w378; assert_in_epsilon(3.515035977737959, worksheet.outputs_energy_flows_w378, 0.002); end
  def test_outputs_energy_flows_x378; assert_in_epsilon(3.8527616664475364, worksheet.outputs_energy_flows_x378, 0.002); end
  def test_outputs_energy_flows_y378; assert_in_epsilon(4.183738495227271, worksheet.outputs_energy_flows_y378, 0.002); end
  def test_outputs_energy_flows_z378; assert_in_epsilon(4.496565340273092, worksheet.outputs_energy_flows_z378, 0.002); end
  def test_outputs_energy_flows_aa378; assert_in_epsilon(4.770899763445378, worksheet.outputs_energy_flows_aa378, 0.002); end
  def test_outputs_energy_flows_ab378; assert_in_epsilon(5.022791862691301, worksheet.outputs_energy_flows_ab378, 0.002); end
  def test_outputs_energy_flows_ac378; assert_in_epsilon(5.2323282325610965, worksheet.outputs_energy_flows_ac378, 0.002); end
  def test_outputs_energy_flows_ad378; assert_in_epsilon(5.42090125759556, worksheet.outputs_energy_flows_ad378, 0.002); end
  def test_outputs_energy_flows_c380; assert_equal("H.01", worksheet.outputs_energy_flows_c380); end
  def test_outputs_energy_flows_d380; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d380); end
  def test_outputs_energy_flows_e380; assert_equal("n/a", worksheet.outputs_energy_flows_e380); end
  def test_outputs_energy_flows_f380; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f380); end
  def test_outputs_energy_flows_i380; assert_equal("H.01", worksheet.outputs_energy_flows_i380); end
  def test_outputs_energy_flows_j380; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j380); end
  def test_outputs_energy_flows_k380; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k380); end
  def test_outputs_energy_flows_l380; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l380); end
  def test_outputs_energy_flows_v380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v380||0), 0.002); end
  def test_outputs_energy_flows_w380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w380||0), 0.002); end
  def test_outputs_energy_flows_x380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x380||0), 0.002); end
  def test_outputs_energy_flows_y380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y380||0), 0.002); end
  def test_outputs_energy_flows_z380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z380||0), 0.002); end
  def test_outputs_energy_flows_aa380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa380||0), 0.002); end
  def test_outputs_energy_flows_ab380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab380||0), 0.002); end
  def test_outputs_energy_flows_ac380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac380||0), 0.002); end
  def test_outputs_energy_flows_ad380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad380||0), 0.002); end
  def test_outputs_energy_flows_c382; assert_equal("H.01", worksheet.outputs_energy_flows_c382); end
  def test_outputs_energy_flows_d382; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d382); end
  def test_outputs_energy_flows_e382; assert_equal("n/a", worksheet.outputs_energy_flows_e382); end
  def test_outputs_energy_flows_f382; assert_equal("Non domestic", worksheet.outputs_energy_flows_f382); end
  def test_outputs_energy_flows_i382; assert_equal("H.01", worksheet.outputs_energy_flows_i382); end
  def test_outputs_energy_flows_j382; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j382); end
  def test_outputs_energy_flows_k382; assert_equal("Non-residential", worksheet.outputs_energy_flows_k382); end
  def test_outputs_energy_flows_v382; assert_in_epsilon(2.4341188531836564, worksheet.outputs_energy_flows_v382, 0.002); end
  def test_outputs_energy_flows_w382; assert_in_epsilon(2.3757333406367662, worksheet.outputs_energy_flows_w382, 0.002); end
  def test_outputs_energy_flows_x382; assert_in_epsilon(2.245008335454115, worksheet.outputs_energy_flows_x382, 0.002); end
  def test_outputs_energy_flows_y382; assert_in_epsilon(2.0556338090674187, worksheet.outputs_energy_flows_y382, 0.002); end
  def test_outputs_energy_flows_z382; assert_in_epsilon(1.8063211650824604, worksheet.outputs_energy_flows_z382, 0.002); end
  def test_outputs_energy_flows_aa382; assert_in_epsilon(1.4964917813577652, worksheet.outputs_energy_flows_aa382, 0.002); end
  def test_outputs_energy_flows_ab382; assert_in_epsilon(1.125290161235622, worksheet.outputs_energy_flows_ab382, 0.002); end
  def test_outputs_energy_flows_ac382; assert_in_delta(0.6921557677145284, worksheet.outputs_energy_flows_ac382, 0.002); end
  def test_outputs_energy_flows_ad382; assert_in_delta(0.19742531420750958, worksheet.outputs_energy_flows_ad382, 0.002); end
  def test_outputs_energy_flows_c384; assert_equal("H.01", worksheet.outputs_energy_flows_c384); end
  def test_outputs_energy_flows_d384; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d384); end
  def test_outputs_energy_flows_e384; assert_equal("n/a", worksheet.outputs_energy_flows_e384); end
  def test_outputs_energy_flows_f384; assert_equal("Steel", worksheet.outputs_energy_flows_f384); end
  def test_outputs_energy_flows_i384; assert_equal("H.01", worksheet.outputs_energy_flows_i384); end
  def test_outputs_energy_flows_j384; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j384); end
  def test_outputs_energy_flows_v384; assert_in_delta(0.803408652648, worksheet.outputs_energy_flows_v384, 0.002); end
  def test_outputs_energy_flows_w384; assert_in_delta(0.8318468955786354, worksheet.outputs_energy_flows_w384, 0.002); end
  def test_outputs_energy_flows_x384; assert_in_delta(0.8989378719253623, worksheet.outputs_energy_flows_x384, 0.002); end
  def test_outputs_energy_flows_y384; assert_in_delta(0.9518066590501747, worksheet.outputs_energy_flows_y384, 0.002); end
  def test_outputs_energy_flows_z384; assert_in_epsilon(1.0065577645327355, worksheet.outputs_energy_flows_z384, 0.002); end
  def test_outputs_energy_flows_aa384; assert_in_epsilon(1.0561768796964783, worksheet.outputs_energy_flows_aa384, 0.002); end
  def test_outputs_energy_flows_ab384; assert_in_epsilon(1.114675534842283, worksheet.outputs_energy_flows_ab384, 0.002); end
  def test_outputs_energy_flows_ac384; assert_in_epsilon(1.1757622748044598, worksheet.outputs_energy_flows_ac384, 0.002); end
  def test_outputs_energy_flows_ad384; assert_in_epsilon(1.239597698220213, worksheet.outputs_energy_flows_ad384, 0.002); end
  def test_outputs_energy_flows_c386; assert_equal("H.01", worksheet.outputs_energy_flows_c386); end
  def test_outputs_energy_flows_d386; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d386); end
  def test_outputs_energy_flows_e386; assert_equal("n/a", worksheet.outputs_energy_flows_e386); end
  def test_outputs_energy_flows_f386; assert_equal("Aluminium", worksheet.outputs_energy_flows_f386); end
  def test_outputs_energy_flows_i386; assert_equal("H.01", worksheet.outputs_energy_flows_i386); end
  def test_outputs_energy_flows_j386; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j386); end
  def test_outputs_energy_flows_v386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v386||0), 0.002); end
  def test_outputs_energy_flows_w386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w386||0), 0.002); end
  def test_outputs_energy_flows_x386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x386||0), 0.002); end
  def test_outputs_energy_flows_y386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y386||0), 0.002); end
  def test_outputs_energy_flows_z386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z386||0), 0.002); end
  def test_outputs_energy_flows_aa386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa386||0), 0.002); end
  def test_outputs_energy_flows_ab386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab386||0), 0.002); end
  def test_outputs_energy_flows_ac386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac386||0), 0.002); end
  def test_outputs_energy_flows_ad386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad386||0), 0.002); end
  def test_outputs_energy_flows_c388; assert_equal("H.01", worksheet.outputs_energy_flows_c388); end
  def test_outputs_energy_flows_d388; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d388); end
  def test_outputs_energy_flows_e388; assert_equal("n/a", worksheet.outputs_energy_flows_e388); end
  def test_outputs_energy_flows_f388; assert_equal("Cement", worksheet.outputs_energy_flows_f388); end
  def test_outputs_energy_flows_i388; assert_equal("H.01", worksheet.outputs_energy_flows_i388); end
  def test_outputs_energy_flows_j388; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j388); end
  def test_outputs_energy_flows_v388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v388||0), 0.002); end
  def test_outputs_energy_flows_w388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w388||0), 0.002); end
  def test_outputs_energy_flows_x388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x388||0), 0.002); end
  def test_outputs_energy_flows_y388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y388||0), 0.002); end
  def test_outputs_energy_flows_z388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z388||0), 0.002); end
  def test_outputs_energy_flows_aa388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa388||0), 0.002); end
  def test_outputs_energy_flows_ab388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab388||0), 0.002); end
  def test_outputs_energy_flows_ac388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac388||0), 0.002); end
  def test_outputs_energy_flows_ad388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad388||0), 0.002); end
  def test_outputs_energy_flows_c390; assert_equal("H.01", worksheet.outputs_energy_flows_c390); end
  def test_outputs_energy_flows_d390; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d390); end
  def test_outputs_energy_flows_e390; assert_equal("n/a", worksheet.outputs_energy_flows_e390); end
  def test_outputs_energy_flows_f390; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f390); end
  def test_outputs_energy_flows_i390; assert_equal("H.01", worksheet.outputs_energy_flows_i390); end
  def test_outputs_energy_flows_j390; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j390); end
  def test_outputs_energy_flows_v390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v390||0), 0.002); end
  def test_outputs_energy_flows_w390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w390||0), 0.002); end
  def test_outputs_energy_flows_x390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x390||0), 0.002); end
  def test_outputs_energy_flows_y390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y390||0), 0.002); end
  def test_outputs_energy_flows_z390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z390||0), 0.002); end
  def test_outputs_energy_flows_aa390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa390||0), 0.002); end
  def test_outputs_energy_flows_ab390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab390||0), 0.002); end
  def test_outputs_energy_flows_ac390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac390||0), 0.002); end
  def test_outputs_energy_flows_ad390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad390||0), 0.002); end
  def test_outputs_energy_flows_c392; assert_equal("H.01", worksheet.outputs_energy_flows_c392); end
  def test_outputs_energy_flows_d392; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d392); end
  def test_outputs_energy_flows_e392; assert_equal("n/a", worksheet.outputs_energy_flows_e392); end
  def test_outputs_energy_flows_f392; assert_equal("Chemicals", worksheet.outputs_energy_flows_f392); end
  def test_outputs_energy_flows_i392; assert_equal("H.01", worksheet.outputs_energy_flows_i392); end
  def test_outputs_energy_flows_j392; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j392); end
  def test_outputs_energy_flows_v392; assert_in_epsilon(1.970138431785092, worksheet.outputs_energy_flows_v392, 0.002); end
  def test_outputs_energy_flows_w392; assert_in_epsilon(2.064674007076543, worksheet.outputs_energy_flows_w392, 0.002); end
  def test_outputs_energy_flows_x392; assert_in_epsilon(2.41144545287639, worksheet.outputs_energy_flows_x392, 0.002); end
  def test_outputs_energy_flows_y392; assert_in_epsilon(2.770930917859965, worksheet.outputs_energy_flows_y392, 0.002); end
  def test_outputs_energy_flows_z392; assert_in_epsilon(3.160493703536151, worksheet.outputs_energy_flows_z392, 0.002); end
  def test_outputs_energy_flows_aa392; assert_in_epsilon(3.566591954598794, worksheet.outputs_energy_flows_aa392, 0.002); end
  def test_outputs_energy_flows_ab392; assert_in_epsilon(4.038138408336624, worksheet.outputs_energy_flows_ab392, 0.002); end
  def test_outputs_energy_flows_ac392; assert_in_epsilon(4.53475317529132, worksheet.outputs_energy_flows_ac392, 0.002); end
  def test_outputs_energy_flows_ad392; assert_in_epsilon(5.11201614364466, worksheet.outputs_energy_flows_ad392, 0.002); end
  def test_outputs_energy_flows_c400; assert_equal("Vector code energy is taken from", worksheet.outputs_energy_flows_c400); end
  def test_outputs_energy_flows_d400; assert_equal("TAKEN FROM", worksheet.outputs_energy_flows_d400); end
  def test_outputs_energy_flows_e400; assert_equal("Vector code energy is taken to", worksheet.outputs_energy_flows_e400); end
  def test_outputs_energy_flows_f400; assert_equal("TAKEN TO", worksheet.outputs_energy_flows_f400); end
  def test_outputs_energy_flows_g400; assert_equal("Technology code", worksheet.outputs_energy_flows_g400); end
  def test_outputs_energy_flows_h400; assert_equal("Technology description", worksheet.outputs_energy_flows_h400); end
  def test_outputs_energy_flows_i400; assert_equal("Energy code", worksheet.outputs_energy_flows_i400); end
  def test_outputs_energy_flows_j400; assert_equal("Description", worksheet.outputs_energy_flows_j400); end
  def test_outputs_energy_flows_k400; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_k400); end
  def test_outputs_energy_flows_l400; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_l400); end
  def test_outputs_energy_flows_m400; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_m400); end
  def test_outputs_energy_flows_v400; assert_in_epsilon(2011.0, worksheet.outputs_energy_flows_v400, 0.002); end
  def test_outputs_energy_flows_w400; assert_in_epsilon(2015.0, worksheet.outputs_energy_flows_w400, 0.002); end
  def test_outputs_energy_flows_x400; assert_in_epsilon(2020.0, worksheet.outputs_energy_flows_x400, 0.002); end
  def test_outputs_energy_flows_y400; assert_in_epsilon(2025.0, worksheet.outputs_energy_flows_y400, 0.002); end
  def test_outputs_energy_flows_z400; assert_in_epsilon(2030.0, worksheet.outputs_energy_flows_z400, 0.002); end
  def test_outputs_energy_flows_aa400; assert_in_epsilon(2035.0, worksheet.outputs_energy_flows_aa400, 0.002); end
  def test_outputs_energy_flows_ab400; assert_in_epsilon(2040.0, worksheet.outputs_energy_flows_ab400, 0.002); end
  def test_outputs_energy_flows_ac400; assert_in_epsilon(2045.0, worksheet.outputs_energy_flows_ac400, 0.002); end
  def test_outputs_energy_flows_ad400; assert_in_epsilon(2050.0, worksheet.outputs_energy_flows_ad400, 0.002); end
  def test_outputs_energy_flows_d402; assert_equal("Coal reserves", worksheet.outputs_energy_flows_d402); end
  def test_outputs_energy_flows_f402; assert_equal("Solid", worksheet.outputs_energy_flows_f402); end
  def test_outputs_energy_flows_i402; assert_equal("G.Q.01", worksheet.outputs_energy_flows_i402); end
  def test_outputs_energy_flows_j402; assert_equal("Global Coal reserves ", worksheet.outputs_energy_flows_j402); end
  def test_outputs_energy_flows_v402; assert_in_epsilon(145.44104063433724, worksheet.outputs_energy_flows_v402, 0.002); end
  def test_outputs_energy_flows_w402; assert_in_epsilon(145.08371804721187, worksheet.outputs_energy_flows_w402, 0.002); end
  def test_outputs_energy_flows_x402; assert_in_epsilon(155.92306352066691, worksheet.outputs_energy_flows_x402, 0.002); end
  def test_outputs_energy_flows_y402; assert_in_epsilon(171.30780102360174, worksheet.outputs_energy_flows_y402, 0.002); end
  def test_outputs_energy_flows_z402; assert_in_epsilon(185.07555095966407, worksheet.outputs_energy_flows_z402, 0.002); end
  def test_outputs_energy_flows_aa402; assert_in_epsilon(192.7039050117078, worksheet.outputs_energy_flows_aa402, 0.002); end
  def test_outputs_energy_flows_ab402; assert_in_epsilon(199.30141679329938, worksheet.outputs_energy_flows_ab402, 0.002); end
  def test_outputs_energy_flows_ac402; assert_in_epsilon(195.18487712238593, worksheet.outputs_energy_flows_ac402, 0.002); end
  def test_outputs_energy_flows_ad402; assert_in_epsilon(195.9662390180043, worksheet.outputs_energy_flows_ad402, 0.002); end
  def test_outputs_energy_flows_d404; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d404); end
  def test_outputs_energy_flows_f404; assert_equal("Solid", worksheet.outputs_energy_flows_f404); end
  def test_outputs_energy_flows_i404; assert_equal("G.C.01", worksheet.outputs_energy_flows_i404); end
  def test_outputs_energy_flows_j404; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j404); end
  def test_outputs_energy_flows_k404; assert_equal("G.BM.13", worksheet.outputs_energy_flows_k404); end
  def test_outputs_energy_flows_l404; assert_equal("Global Traditional biomass", worksheet.outputs_energy_flows_l404); end
  def test_outputs_energy_flows_n404; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_n404); end
  def test_outputs_energy_flows_o404; assert_equal("Forest", worksheet.outputs_energy_flows_o404); end
  def test_outputs_energy_flows_p404; assert_equal("Global Native forest", worksheet.outputs_energy_flows_p404); end
  def test_outputs_energy_flows_q404; assert_equal("Arable.bio", worksheet.outputs_energy_flows_q404); end
  def test_outputs_energy_flows_r404; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_r404); end
  def test_outputs_energy_flows_s404; assert_equal("industrial.municipal.non.renewable.waste", worksheet.outputs_energy_flows_s404); end
  def test_outputs_energy_flows_t404; assert_equal("Global Non renewable waste", worksheet.outputs_energy_flows_t404); end
  def test_outputs_energy_flows_v404; assert_in_epsilon(44.148328016537114, worksheet.outputs_energy_flows_v404, 0.002); end
  def test_outputs_energy_flows_w404; assert_in_epsilon(43.1879771995395, worksheet.outputs_energy_flows_w404, 0.002); end
  def test_outputs_energy_flows_x404; assert_in_epsilon(42.90404120060877, worksheet.outputs_energy_flows_x404, 0.002); end
  def test_outputs_energy_flows_y404; assert_in_epsilon(42.574934105496475, worksheet.outputs_energy_flows_y404, 0.002); end
  def test_outputs_energy_flows_z404; assert_in_epsilon(42.32163287523974, worksheet.outputs_energy_flows_z404, 0.002); end
  def test_outputs_energy_flows_aa404; assert_in_epsilon(42.4484570091492, worksheet.outputs_energy_flows_aa404, 0.002); end
  def test_outputs_energy_flows_ab404; assert_in_epsilon(42.5824585086826, worksheet.outputs_energy_flows_ab404, 0.002); end
  def test_outputs_energy_flows_ac404; assert_in_epsilon(43.36520645165572, worksheet.outputs_energy_flows_ac404, 0.002); end
  def test_outputs_energy_flows_ad404; assert_in_epsilon(44.11341410071912, worksheet.outputs_energy_flows_ad404, 0.002); end
  def test_outputs_energy_flows_d406; assert_equal("Oil reserves", worksheet.outputs_energy_flows_d406); end
  def test_outputs_energy_flows_f406; assert_equal("Liquid", worksheet.outputs_energy_flows_f406); end
  def test_outputs_energy_flows_i406; assert_equal("G.Q.02", worksheet.outputs_energy_flows_i406); end
  def test_outputs_energy_flows_j406; assert_equal("Global Oil reserves ", worksheet.outputs_energy_flows_j406); end
  def test_outputs_energy_flows_v406; assert_in_epsilon(153.2349369249942, worksheet.outputs_energy_flows_v406, 0.002); end
  def test_outputs_energy_flows_w406; assert_in_epsilon(163.66503500518687, worksheet.outputs_energy_flows_w406, 0.002); end
  def test_outputs_energy_flows_x406; assert_in_epsilon(189.23276627151844, worksheet.outputs_energy_flows_x406, 0.002); end
  def test_outputs_energy_flows_y406; assert_in_epsilon(206.63302659678774, worksheet.outputs_energy_flows_y406, 0.002); end
  def test_outputs_energy_flows_z406; assert_in_epsilon(221.89925026265848, worksheet.outputs_energy_flows_z406, 0.002); end
  def test_outputs_energy_flows_aa406; assert_in_epsilon(237.2153129298292, worksheet.outputs_energy_flows_aa406, 0.002); end
  def test_outputs_energy_flows_ab406; assert_in_epsilon(252.76195439260596, worksheet.outputs_energy_flows_ab406, 0.002); end
  def test_outputs_energy_flows_ac406; assert_in_epsilon(269.76162397564264, worksheet.outputs_energy_flows_ac406, 0.002); end
  def test_outputs_energy_flows_ad406; assert_in_epsilon(283.02814076292407, worksheet.outputs_energy_flows_ad406, 0.002); end
  def test_outputs_energy_flows_d408; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d408); end
  def test_outputs_energy_flows_f408; assert_equal("Liquid", worksheet.outputs_energy_flows_f408); end
  def test_outputs_energy_flows_i408; assert_equal("G.C.02", worksheet.outputs_energy_flows_i408); end
  def test_outputs_energy_flows_j408; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j408); end
  def test_outputs_energy_flows_n408; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_n408); end
  def test_outputs_energy_flows_o408; assert_equal("Forest", worksheet.outputs_energy_flows_o408); end
  def test_outputs_energy_flows_p408; assert_equal("Global Native forest", worksheet.outputs_energy_flows_p408); end
  def test_outputs_energy_flows_q408; assert_equal("Arable.bio", worksheet.outputs_energy_flows_q408); end
  def test_outputs_energy_flows_r408; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_r408); end
  def test_outputs_energy_flows_v408; assert_in_epsilon(3.8000000000000003, worksheet.outputs_energy_flows_v408, 0.002); end
  def test_outputs_energy_flows_w408; assert_in_epsilon(4.088016474026838, worksheet.outputs_energy_flows_w408, 0.002); end
  def test_outputs_energy_flows_x408; assert_in_epsilon(4.656175106300735, worksheet.outputs_energy_flows_x408, 0.002); end
  def test_outputs_energy_flows_y408; assert_in_epsilon(5.198383876201173, worksheet.outputs_energy_flows_y408, 0.002); end
  def test_outputs_energy_flows_z408; assert_in_epsilon(5.7119868536033085, worksheet.outputs_energy_flows_z408, 0.002); end
  def test_outputs_energy_flows_aa408; assert_in_epsilon(6.194265734265732, worksheet.outputs_energy_flows_aa408, 0.002); end
  def test_outputs_energy_flows_ab408; assert_in_epsilon(6.642437997958098, worksheet.outputs_energy_flows_ab408, 0.002); end
  def test_outputs_energy_flows_ac408; assert_in_epsilon(7.0536550009336505, worksheet.outputs_energy_flows_ac408, 0.002); end
  def test_outputs_energy_flows_ad408; assert_in_epsilon(7.425000000000001, worksheet.outputs_energy_flows_ad408, 0.002); end
  def test_outputs_energy_flows_d410; assert_equal("Gas reserves", worksheet.outputs_energy_flows_d410); end
  def test_outputs_energy_flows_f410; assert_equal("Gas", worksheet.outputs_energy_flows_f410); end
  def test_outputs_energy_flows_i410; assert_equal("G.Q.03", worksheet.outputs_energy_flows_i410); end
  def test_outputs_energy_flows_j410; assert_equal("Global Gas reserves ", worksheet.outputs_energy_flows_j410); end
  def test_outputs_energy_flows_v410; assert_in_epsilon(89.86569697591732, worksheet.outputs_energy_flows_v410, 0.002); end
  def test_outputs_energy_flows_w410; assert_in_epsilon(91.57116986191289, worksheet.outputs_energy_flows_w410, 0.002); end
  def test_outputs_energy_flows_x410; assert_in_epsilon(101.61494637914824, worksheet.outputs_energy_flows_x410, 0.002); end
  def test_outputs_energy_flows_y410; assert_in_epsilon(111.59068673037626, worksheet.outputs_energy_flows_y410, 0.002); end
  def test_outputs_energy_flows_z410; assert_in_epsilon(122.89674050832012, worksheet.outputs_energy_flows_z410, 0.002); end
  def test_outputs_energy_flows_aa410; assert_in_epsilon(133.46896923997195, worksheet.outputs_energy_flows_aa410, 0.002); end
  def test_outputs_energy_flows_ab410; assert_in_epsilon(144.52248874371463, worksheet.outputs_energy_flows_ab410, 0.002); end
  def test_outputs_energy_flows_ac410; assert_in_epsilon(154.11899952783858, worksheet.outputs_energy_flows_ac410, 0.002); end
  def test_outputs_energy_flows_ad410; assert_in_epsilon(165.7312279170951, worksheet.outputs_energy_flows_ad410, 0.002); end
  def test_outputs_energy_flows_d412; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d412); end
  def test_outputs_energy_flows_f412; assert_equal("Gas", worksheet.outputs_energy_flows_f412); end
  def test_outputs_energy_flows_i412; assert_equal("G.C.03", worksheet.outputs_energy_flows_i412); end
  def test_outputs_energy_flows_j412; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j412); end
  def test_outputs_energy_flows_n412; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_n412); end
  def test_outputs_energy_flows_o412; assert_equal("Forest", worksheet.outputs_energy_flows_o412); end
  def test_outputs_energy_flows_p412; assert_equal("Global Native forest", worksheet.outputs_energy_flows_p412); end
  def test_outputs_energy_flows_q412; assert_equal("Arable.bio", worksheet.outputs_energy_flows_q412); end
  def test_outputs_energy_flows_r412; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_r412); end
  def test_outputs_energy_flows_v412; assert_in_epsilon(3.013698657489478, worksheet.outputs_energy_flows_v412, 0.002); end
  def test_outputs_energy_flows_w412; assert_in_epsilon(3.7449018841302255, worksheet.outputs_energy_flows_w412, 0.002); end
  def test_outputs_energy_flows_x412; assert_in_epsilon(4.204128440843508, worksheet.outputs_energy_flows_x412, 0.002); end
  def test_outputs_energy_flows_y412; assert_in_epsilon(4.680852496591747, worksheet.outputs_energy_flows_y412, 0.002); end
  def test_outputs_energy_flows_z412; assert_in_epsilon(5.184564047505213, worksheet.outputs_energy_flows_z412, 0.002); end
  def test_outputs_energy_flows_aa412; assert_in_epsilon(5.727090049983525, worksheet.outputs_energy_flows_aa412, 0.002); end
  def test_outputs_energy_flows_ab412; assert_in_epsilon(6.310241444223581, worksheet.outputs_energy_flows_ab412, 0.002); end
  def test_outputs_energy_flows_ac412; assert_in_epsilon(6.909710104719636, worksheet.outputs_energy_flows_ac412, 0.002); end
  def test_outputs_energy_flows_ad412; assert_in_epsilon(7.557743471088495, worksheet.outputs_energy_flows_ad412, 0.002); end
  def test_outputs_energy_flows_d414; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d414); end
  def test_outputs_energy_flows_f414; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f414); end
  def test_outputs_energy_flows_i414; assert_equal("G.L.01", worksheet.outputs_energy_flows_i414); end
  def test_outputs_energy_flows_j414; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j414); end
  def test_outputs_energy_flows_n414; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_n414); end
  def test_outputs_energy_flows_o414; assert_equal("Forest", worksheet.outputs_energy_flows_o414); end
  def test_outputs_energy_flows_p414; assert_equal("Global Native forest", worksheet.outputs_energy_flows_p414); end
  def test_outputs_energy_flows_q414; assert_equal("Arable.bio", worksheet.outputs_energy_flows_q414); end
  def test_outputs_energy_flows_r414; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_r414); end
  def test_outputs_energy_flows_v414; assert_in_epsilon(7.849350799034149, worksheet.outputs_energy_flows_v414, 0.002); end
  def test_outputs_energy_flows_w414; assert_in_epsilon(7.975372225435333, worksheet.outputs_energy_flows_w414, 0.002); end
  def test_outputs_energy_flows_x414; assert_in_epsilon(8.060796177420965, worksheet.outputs_energy_flows_x414, 0.002); end
  def test_outputs_energy_flows_y414; assert_in_epsilon(8.112641717111527, worksheet.outputs_energy_flows_y414, 0.002); end
  def test_outputs_energy_flows_z414; assert_in_epsilon(8.114795445850538, worksheet.outputs_energy_flows_z414, 0.002); end
  def test_outputs_energy_flows_aa414; assert_in_epsilon(8.059241997993846, worksheet.outputs_energy_flows_aa414, 0.002); end
  def test_outputs_energy_flows_ab414; assert_in_epsilon(7.951421078003721, worksheet.outputs_energy_flows_ab414, 0.002); end
  def test_outputs_energy_flows_ac414; assert_in_epsilon(7.8084919415867775, worksheet.outputs_energy_flows_ac414, 0.002); end
  def test_outputs_energy_flows_ad414; assert_in_epsilon(7.6128444721302415, worksheet.outputs_energy_flows_ad414, 0.002); end
  def test_outputs_energy_flows_d416; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d416); end
  def test_outputs_energy_flows_f416; assert_equal("Global oversupply", worksheet.outputs_energy_flows_f416); end
  def test_outputs_energy_flows_g416; assert_equal("arable.bio", worksheet.outputs_energy_flows_g416); end
  def test_outputs_energy_flows_h416; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h416); end
  def test_outputs_energy_flows_i416; assert_equal("O.01", worksheet.outputs_energy_flows_i416); end
  def test_outputs_energy_flows_j416; assert_equal("Global Oversupply", worksheet.outputs_energy_flows_j416); end
  def test_outputs_energy_flows_v416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v416||0), 0.002); end
  def test_outputs_energy_flows_w416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w416||0), 0.002); end
  def test_outputs_energy_flows_x416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x416||0), 0.002); end
  def test_outputs_energy_flows_y416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y416||0), 0.002); end
  def test_outputs_energy_flows_z416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z416||0), 0.002); end
  def test_outputs_energy_flows_aa416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa416||0), 0.002); end
  def test_outputs_energy_flows_ab416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab416||0), 0.002); end
  def test_outputs_energy_flows_ac416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac416||0), 0.002); end
  def test_outputs_energy_flows_ad416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad416||0), 0.002); end
  def test_outputs_energy_flows_d418; assert_equal("Coal reserves", worksheet.outputs_energy_flows_d418); end
  def test_outputs_energy_flows_f418; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f418); end
  def test_outputs_energy_flows_i418; assert_equal("G.L.02", worksheet.outputs_energy_flows_i418); end
  def test_outputs_energy_flows_j418; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_j418); end
  def test_outputs_energy_flows_o418; assert_equal("Coal.extract", worksheet.outputs_energy_flows_o418); end
  def test_outputs_energy_flows_p418; assert_equal("Global Coal Extraction", worksheet.outputs_energy_flows_p418); end
  def test_outputs_energy_flows_q418; assert_equal("Coal.wash", worksheet.outputs_energy_flows_q418); end
  def test_outputs_energy_flows_r418; assert_equal("Global Coal washeries", worksheet.outputs_energy_flows_r418); end
  def test_outputs_energy_flows_s418; assert_equal("coal.network", worksheet.outputs_energy_flows_s418); end
  def test_outputs_energy_flows_t418; assert_equal("Global Coal distribution network", worksheet.outputs_energy_flows_t418); end
  def test_outputs_energy_flows_v418; assert_in_epsilon(15.851660596341405, worksheet.outputs_energy_flows_v418, 0.002); end
  def test_outputs_energy_flows_w418; assert_in_epsilon(15.776909886838142, worksheet.outputs_energy_flows_w418, 0.002); end
  def test_outputs_energy_flows_x418; assert_in_epsilon(20.618259372718217, worksheet.outputs_energy_flows_x418, 0.002); end
  def test_outputs_energy_flows_y418; assert_in_epsilon(22.6259993434887, worksheet.outputs_energy_flows_y418, 0.002); end
  def test_outputs_energy_flows_z418; assert_in_epsilon(28.95419691059426, worksheet.outputs_energy_flows_z418, 0.002); end
  def test_outputs_energy_flows_aa418; assert_in_epsilon(30.133091133879105, worksheet.outputs_energy_flows_aa418, 0.002); end
  def test_outputs_energy_flows_ab418; assert_in_epsilon(36.19153157579098, worksheet.outputs_energy_flows_ab418, 0.002); end
  def test_outputs_energy_flows_ac418; assert_in_epsilon(35.43686722691828, worksheet.outputs_energy_flows_ac418, 0.002); end
  def test_outputs_energy_flows_ad418; assert_in_epsilon(40.690532472140426, worksheet.outputs_energy_flows_ad418, 0.002); end
  def test_outputs_energy_flows_d420; assert_equal("Oil reserves", worksheet.outputs_energy_flows_d420); end
  def test_outputs_energy_flows_f420; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f420); end
  def test_outputs_energy_flows_i420; assert_equal("G.L.02", worksheet.outputs_energy_flows_i420); end
  def test_outputs_energy_flows_j420; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_j420); end
  def test_outputs_energy_flows_o420; assert_equal("Oil.extract", worksheet.outputs_energy_flows_o420); end
  def test_outputs_energy_flows_p420; assert_equal("Global Oil Extraction", worksheet.outputs_energy_flows_p420); end
  def test_outputs_energy_flows_q420; assert_equal("Oil.refine", worksheet.outputs_energy_flows_q420); end
  def test_outputs_energy_flows_r420; assert_equal("Global Oil refineries", worksheet.outputs_energy_flows_r420); end
  def test_outputs_energy_flows_s420; assert_equal("oil.network", worksheet.outputs_energy_flows_s420); end
  def test_outputs_energy_flows_t420; assert_equal("Global Oil distribution network", worksheet.outputs_energy_flows_t420); end
  def test_outputs_energy_flows_v420; assert_in_epsilon(24.840015374141913, worksheet.outputs_energy_flows_v420, 0.002); end
  def test_outputs_energy_flows_w420; assert_in_epsilon(25.90641525900399, worksheet.outputs_energy_flows_w420, 0.002); end
  def test_outputs_energy_flows_x420; assert_in_epsilon(29.935182378922065, worksheet.outputs_energy_flows_x420, 0.002); end
  def test_outputs_energy_flows_y420; assert_in_epsilon(32.6686850647071, worksheet.outputs_energy_flows_y420, 0.002); end
  def test_outputs_energy_flows_z420; assert_in_epsilon(35.062730863072424, worksheet.outputs_energy_flows_z420, 0.002); end
  def test_outputs_energy_flows_aa420; assert_in_epsilon(28.819637629539756, worksheet.outputs_energy_flows_aa420, 0.002); end
  def test_outputs_energy_flows_ab420; assert_in_epsilon(30.688815588487206, worksheet.outputs_energy_flows_ab420, 0.002); end
  def test_outputs_energy_flows_ac420; assert_in_epsilon(32.73285835521135, worksheet.outputs_energy_flows_ac420, 0.002); end
  def test_outputs_energy_flows_ad420; assert_in_epsilon(34.32265389103415, worksheet.outputs_energy_flows_ad420, 0.002); end
  def test_outputs_energy_flows_d422; assert_equal("Gas reserves", worksheet.outputs_energy_flows_d422); end
  def test_outputs_energy_flows_f422; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f422); end
  def test_outputs_energy_flows_i422; assert_equal("G.L.02", worksheet.outputs_energy_flows_i422); end
  def test_outputs_energy_flows_j422; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_j422); end
  def test_outputs_energy_flows_o422; assert_equal("Naturalgas.extract", worksheet.outputs_energy_flows_o422); end
  def test_outputs_energy_flows_p422; assert_equal("Global Natural Gas Extraction", worksheet.outputs_energy_flows_p422); end
  def test_outputs_energy_flows_q422; assert_equal("Natural.gas.process", worksheet.outputs_energy_flows_q422); end
  def test_outputs_energy_flows_r422; assert_equal("Global Natural gas processing plants", worksheet.outputs_energy_flows_r422); end
  def test_outputs_energy_flows_s422; assert_equal("gas.nework", worksheet.outputs_energy_flows_s422); end
  def test_outputs_energy_flows_t422; assert_equal("Global Gas distribution network", worksheet.outputs_energy_flows_t422); end
  def test_outputs_energy_flows_v422; assert_in_epsilon(30.004615189091457, worksheet.outputs_energy_flows_v422, 0.002); end
  def test_outputs_energy_flows_w422; assert_in_epsilon(30.581545720083177, worksheet.outputs_energy_flows_w422, 0.002); end
  def test_outputs_energy_flows_x422; assert_in_epsilon(33.946330549315135, worksheet.outputs_energy_flows_x422, 0.002); end
  def test_outputs_energy_flows_y422; assert_in_epsilon(35.38186076521276, worksheet.outputs_energy_flows_y422, 0.002); end
  def test_outputs_energy_flows_z422; assert_in_epsilon(34.932600272025255, worksheet.outputs_energy_flows_z422, 0.002); end
  def test_outputs_energy_flows_aa422; assert_in_epsilon(37.951460479112626, worksheet.outputs_energy_flows_aa422, 0.002); end
  def test_outputs_energy_flows_ab422; assert_in_epsilon(36.58196901158889, worksheet.outputs_energy_flows_ab422, 0.002); end
  def test_outputs_energy_flows_ac422; assert_in_epsilon(39.02695352004356, worksheet.outputs_energy_flows_ac422, 0.002); end
  def test_outputs_energy_flows_ad422; assert_in_epsilon(41.98475639635568, worksheet.outputs_energy_flows_ad422, 0.002); end
  def test_outputs_energy_flows_d424; assert_equal("Solid", worksheet.outputs_energy_flows_d424); end
  def test_outputs_energy_flows_f424; assert_equal("Power plants", worksheet.outputs_energy_flows_f424); end
  def test_outputs_energy_flows_i424; assert_equal("G.C.01", worksheet.outputs_energy_flows_i424); end
  def test_outputs_energy_flows_j424; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j424); end
  def test_outputs_energy_flows_n424; assert_equal("Global Electricity Generation", worksheet.outputs_energy_flows_n424); end
  def test_outputs_energy_flows_v424; assert_in_epsilon(99.6448281799327, worksheet.outputs_energy_flows_v424, 0.002); end
  def test_outputs_energy_flows_w424; assert_in_epsilon(97.09227095270234, worksheet.outputs_energy_flows_w424, 0.002); end
  def test_outputs_energy_flows_x424; assert_in_epsilon(104.19636313973417, worksheet.outputs_energy_flows_x424, 0.002); end
  def test_outputs_energy_flows_y424; assert_in_epsilon(116.87776852462349, worksheet.outputs_energy_flows_y424, 0.002); end
  def test_outputs_energy_flows_z424; assert_in_epsilon(128.02705808381492, worksheet.outputs_energy_flows_z424, 0.002); end
  def test_outputs_energy_flows_aa424; assert_in_epsilon(133.27368061771654, worksheet.outputs_energy_flows_aa424, 0.002); end
  def test_outputs_energy_flows_ab424; assert_in_epsilon(137.13899607638763, worksheet.outputs_energy_flows_ab424, 0.002); end
  def test_outputs_energy_flows_ac424; assert_in_epsilon(130.46223885399428, worksheet.outputs_energy_flows_ac424, 0.002); end
  def test_outputs_energy_flows_ad424; assert_in_epsilon(128.32926343004425, worksheet.outputs_energy_flows_ad424, 0.002); end
  def test_outputs_energy_flows_d426; assert_equal("Liquid", worksheet.outputs_energy_flows_d426); end
  def test_outputs_energy_flows_f426; assert_equal("Power plants", worksheet.outputs_energy_flows_f426); end
  def test_outputs_energy_flows_i426; assert_equal("G.C.02", worksheet.outputs_energy_flows_i426); end
  def test_outputs_energy_flows_j426; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j426); end
  def test_outputs_energy_flows_n426; assert_equal("Global Electricity Generation", worksheet.outputs_energy_flows_n426); end
  def test_outputs_energy_flows_v426; assert_in_epsilon(11.970462528003441, worksheet.outputs_energy_flows_v426, 0.002); end
  def test_outputs_energy_flows_w426; assert_in_epsilon(11.543412664176957, worksheet.outputs_energy_flows_w426, 0.002); end
  def test_outputs_energy_flows_x426; assert_in_epsilon(17.989586405542518, worksheet.outputs_energy_flows_x426, 0.002); end
  def test_outputs_energy_flows_y426; assert_in_epsilon(20.199501499100293, worksheet.outputs_energy_flows_y426, 0.002); end
  def test_outputs_energy_flows_z426; assert_in_epsilon(22.297946953557545, worksheet.outputs_energy_flows_z426, 0.002); end
  def test_outputs_energy_flows_aa426; assert_in_epsilon(27.366849993383525, worksheet.outputs_energy_flows_aa426, 0.002); end
  def test_outputs_energy_flows_ab426; assert_in_epsilon(33.00257904504785, worksheet.outputs_energy_flows_ab426, 0.002); end
  def test_outputs_energy_flows_ac426; assert_in_epsilon(41.09270942982202, worksheet.outputs_energy_flows_ac426, 0.002); end
  def test_outputs_energy_flows_ad426; assert_in_epsilon(44.885533149017185, worksheet.outputs_energy_flows_ad426, 0.002); end
  def test_outputs_energy_flows_d428; assert_equal("Gas", worksheet.outputs_energy_flows_d428); end
  def test_outputs_energy_flows_f428; assert_equal("Power plants", worksheet.outputs_energy_flows_f428); end
  def test_outputs_energy_flows_i428; assert_equal("G.C.03", worksheet.outputs_energy_flows_i428); end
  def test_outputs_energy_flows_j428; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j428); end
  def test_outputs_energy_flows_n428; assert_equal("Global Electricity Generation", worksheet.outputs_energy_flows_n428); end
  def test_outputs_energy_flows_v428; assert_in_epsilon(41.90572230296944, worksheet.outputs_energy_flows_v428, 0.002); end
  def test_outputs_energy_flows_w428; assert_in_epsilon(40.31692167710107, worksheet.outputs_energy_flows_w428, 0.002); end
  def test_outputs_energy_flows_x428; assert_in_epsilon(45.523084732185836, worksheet.outputs_energy_flows_x428, 0.002); end
  def test_outputs_energy_flows_y428; assert_in_epsilon(50.90664539104541, worksheet.outputs_energy_flows_y428, 0.002); end
  def test_outputs_energy_flows_z428; assert_in_epsilon(57.64269322279493, worksheet.outputs_energy_flows_z428, 0.002); end
  def test_outputs_energy_flows_aa428; assert_in_epsilon(63.87589725947901, worksheet.outputs_energy_flows_aa428, 0.002); end
  def test_outputs_energy_flows_ab428; assert_in_epsilon(70.45472828363876, worksheet.outputs_energy_flows_ab428, 0.002); end
  def test_outputs_energy_flows_ac428; assert_in_epsilon(75.77945929572175, worksheet.outputs_energy_flows_ac428, 0.002); end
  def test_outputs_energy_flows_ad428; assert_in_epsilon(82.87914678178754, worksheet.outputs_energy_flows_ad428, 0.002); end
  def test_outputs_energy_flows_d430; assert_equal("Nuclear", worksheet.outputs_energy_flows_d430); end
  def test_outputs_energy_flows_f430; assert_equal("Power plants", worksheet.outputs_energy_flows_f430); end
  def test_outputs_energy_flows_i430; assert_equal("G.N.01", worksheet.outputs_energy_flows_i430); end
  def test_outputs_energy_flows_j430; assert_equal("Global Nuclear fission", worksheet.outputs_energy_flows_j430); end
  def test_outputs_energy_flows_n430; assert_equal("Global Electricity Generation", worksheet.outputs_energy_flows_n430); end
  def test_outputs_energy_flows_v430; assert_in_epsilon(26.462850754774173, worksheet.outputs_energy_flows_v430, 0.002); end
  def test_outputs_energy_flows_w430; assert_in_epsilon(29.87001951581473, worksheet.outputs_energy_flows_w430, 0.002); end
  def test_outputs_energy_flows_x430; assert_in_epsilon(32.16856624518809, worksheet.outputs_energy_flows_x430, 0.002); end
  def test_outputs_energy_flows_y430; assert_in_epsilon(32.42272765606359, worksheet.outputs_energy_flows_y430, 0.002); end
  def test_outputs_energy_flows_z430; assert_in_epsilon(31.478476338411802, worksheet.outputs_energy_flows_z430, 0.002); end
  def test_outputs_energy_flows_aa430; assert_in_epsilon(34.76682054691498, worksheet.outputs_energy_flows_aa430, 0.002); end
  def test_outputs_energy_flows_ab430; assert_in_epsilon(34.154679001157994, worksheet.outputs_energy_flows_ab430, 0.002); end
  def test_outputs_energy_flows_ac430; assert_in_epsilon(34.83757015518318, worksheet.outputs_energy_flows_ac430, 0.002); end
  def test_outputs_energy_flows_ad430; assert_in_epsilon(35.50481852710455, worksheet.outputs_energy_flows_ad430, 0.002); end
  def test_outputs_energy_flows_d432; assert_equal("Power plants", worksheet.outputs_energy_flows_d432); end
  def test_outputs_energy_flows_f432; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f432); end
  def test_outputs_energy_flows_i432; assert_equal("G.E.02", worksheet.outputs_energy_flows_i432); end
  def test_outputs_energy_flows_j432; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j432); end
  def test_outputs_energy_flows_p432; assert_equal("Unabated power", worksheet.outputs_energy_flows_p432); end
  def test_outputs_energy_flows_r432; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_r432); end
  def test_outputs_energy_flows_t432; assert_equal("Nuclear", worksheet.outputs_energy_flows_t432); end
  def test_outputs_energy_flows_v432; assert_in_epsilon(62.50866894816741, worksheet.outputs_energy_flows_v432, 0.002); end
  def test_outputs_energy_flows_w432; assert_in_epsilon(62.939077124438676, worksheet.outputs_energy_flows_w432, 0.002); end
  def test_outputs_energy_flows_x432; assert_in_epsilon(72.07180964689755, worksheet.outputs_energy_flows_x432, 0.002); end
  def test_outputs_energy_flows_y432; assert_in_epsilon(81.56709570284625, worksheet.outputs_energy_flows_y432, 0.002); end
  def test_outputs_energy_flows_z432; assert_in_epsilon(91.0217632930335, worksheet.outputs_energy_flows_z432, 0.002); end
  def test_outputs_energy_flows_aa432; assert_in_epsilon(100.90851206638123, worksheet.outputs_energy_flows_aa432, 0.002); end
  def test_outputs_energy_flows_ab432; assert_in_epsilon(110.13193218671361, worksheet.outputs_energy_flows_ab432, 0.002); end
  def test_outputs_energy_flows_ac432; assert_in_epsilon(116.44977006954801, worksheet.outputs_energy_flows_ac432, 0.002); end
  def test_outputs_energy_flows_ad432; assert_in_epsilon(124.25085867519618, worksheet.outputs_energy_flows_ad432, 0.002); end
  def test_outputs_energy_flows_d434; assert_equal("Power plants", worksheet.outputs_energy_flows_d434); end
  def test_outputs_energy_flows_f434; assert_equal("Heat network", worksheet.outputs_energy_flows_f434); end
  def test_outputs_energy_flows_i434; assert_equal("G.H.01", worksheet.outputs_energy_flows_i434); end
  def test_outputs_energy_flows_j434; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j434); end
  def test_outputs_energy_flows_p434; assert_equal("Unabated power", worksheet.outputs_energy_flows_p434); end
  def test_outputs_energy_flows_r434; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_r434); end
  def test_outputs_energy_flows_t434; assert_equal("Nuclear", worksheet.outputs_energy_flows_t434); end
  def test_outputs_energy_flows_v434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v434||0), 0.002); end
  def test_outputs_energy_flows_w434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w434||0), 0.002); end
  def test_outputs_energy_flows_x434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x434||0), 0.002); end
  def test_outputs_energy_flows_y434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y434||0), 0.002); end
  def test_outputs_energy_flows_z434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z434||0), 0.002); end
  def test_outputs_energy_flows_aa434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa434||0), 0.002); end
  def test_outputs_energy_flows_ab434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab434||0), 0.002); end
  def test_outputs_energy_flows_ac434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac434||0), 0.002); end
  def test_outputs_energy_flows_ad434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad434||0), 0.002); end
  def test_outputs_energy_flows_d436; assert_equal("Solid", worksheet.outputs_energy_flows_d436); end
  def test_outputs_energy_flows_f436; assert_equal("Heat network", worksheet.outputs_energy_flows_f436); end
  def test_outputs_energy_flows_i436; assert_equal("G.C.01", worksheet.outputs_energy_flows_i436); end
  def test_outputs_energy_flows_j436; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j436); end
  def test_outputs_energy_flows_n436; assert_equal("Heat network", worksheet.outputs_energy_flows_n436); end
  def test_outputs_energy_flows_v436; assert_in_epsilon(1.4544818759731915, worksheet.outputs_energy_flows_v436, 0.002); end
  def test_outputs_energy_flows_w436; assert_in_epsilon(1.5169542446107513, worksheet.outputs_energy_flows_w436, 0.002); end
  def test_outputs_energy_flows_x436; assert_in_epsilon(1.6253965057282194, worksheet.outputs_energy_flows_x436, 0.002); end
  def test_outputs_energy_flows_y436; assert_in_epsilon(1.718572796846097, worksheet.outputs_energy_flows_y436, 0.002); end
  def test_outputs_energy_flows_z436; assert_in_epsilon(1.8060367087249614, worksheet.outputs_energy_flows_z436, 0.002); end
  def test_outputs_energy_flows_aa436; assert_in_epsilon(1.8823677209403815, worksheet.outputs_energy_flows_aa436, 0.002); end
  def test_outputs_energy_flows_ab436; assert_in_epsilon(1.9590756534021816, worksheet.outputs_energy_flows_ab436, 0.002); end
  def test_outputs_energy_flows_ac436; assert_in_epsilon(2.026006178030959, worksheet.outputs_energy_flows_ac436, 0.002); end
  def test_outputs_energy_flows_ad436; assert_in_epsilon(2.0961626748649556, worksheet.outputs_energy_flows_ad436, 0.002); end
  def test_outputs_energy_flows_d438; assert_equal("Liquid", worksheet.outputs_energy_flows_d438); end
  def test_outputs_energy_flows_f438; assert_equal("Heat network", worksheet.outputs_energy_flows_f438); end
  def test_outputs_energy_flows_i438; assert_equal("G.C.02", worksheet.outputs_energy_flows_i438); end
  def test_outputs_energy_flows_j438; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j438); end
  def test_outputs_energy_flows_n438; assert_equal("Heat network", worksheet.outputs_energy_flows_n438); end
  def test_outputs_energy_flows_v438; assert_in_delta(0.7272409379865957, worksheet.outputs_energy_flows_v438, 0.002); end
  def test_outputs_energy_flows_w438; assert_in_delta(0.727360112159514, worksheet.outputs_energy_flows_w438, 0.002); end
  def test_outputs_energy_flows_x438; assert_in_delta(0.7376799525997302, worksheet.outputs_energy_flows_x438, 0.002); end
  def test_outputs_energy_flows_y438; assert_in_delta(0.7359016848033286, worksheet.outputs_energy_flows_y438, 0.002); end
  def test_outputs_energy_flows_z438; assert_in_delta(0.7270455468456896, worksheet.outputs_energy_flows_z438, 0.002); end
  def test_outputs_energy_flows_aa438; assert_in_delta(0.7095078332775283, worksheet.outputs_energy_flows_aa438, 0.002); end
  def test_outputs_energy_flows_ab438; assert_in_delta(0.6881881141438433, worksheet.outputs_energy_flows_ab438, 0.002); end
  def test_outputs_energy_flows_ac438; assert_in_delta(0.6597507297690558, worksheet.outputs_energy_flows_ac438, 0.002); end
  def test_outputs_energy_flows_ad438; assert_in_delta(0.6288488024594867, worksheet.outputs_energy_flows_ad438, 0.002); end
  def test_outputs_energy_flows_d440; assert_equal("Gas", worksheet.outputs_energy_flows_d440); end
  def test_outputs_energy_flows_f440; assert_equal("Heat network", worksheet.outputs_energy_flows_f440); end
  def test_outputs_energy_flows_i440; assert_equal("G.C.03", worksheet.outputs_energy_flows_i440); end
  def test_outputs_energy_flows_j440; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j440); end
  def test_outputs_energy_flows_n440; assert_equal("Heat network", worksheet.outputs_energy_flows_n440); end
  def test_outputs_energy_flows_v440; assert_in_delta(0.686838663654007, worksheet.outputs_energy_flows_v440, 0.002); end
  def test_outputs_energy_flows_w440; assert_in_delta(0.6846106677480945, worksheet.outputs_energy_flows_w440, 0.002); end
  def test_outputs_energy_flows_x440; assert_in_delta(0.6913794297054299, worksheet.outputs_energy_flows_x440, 0.002); end
  def test_outputs_energy_flows_y440; assert_in_delta(0.6868001365774308, worksheet.outputs_energy_flows_y440, 0.002); end
  def test_outputs_energy_flows_z440; assert_in_delta(0.6756815216690385, worksheet.outputs_energy_flows_z440, 0.002); end
  def test_outputs_energy_flows_aa440; assert_in_delta(0.6566215709980475, worksheet.outputs_energy_flows_aa440, 0.002); end
  def test_outputs_energy_flows_ab440; assert_in_delta(0.6342350843444092, worksheet.outputs_energy_flows_ab440, 0.002); end
  def test_outputs_energy_flows_ac440; assert_in_delta(0.6055021232515005, worksheet.outputs_energy_flows_ac440, 0.002); end
  def test_outputs_energy_flows_ad440; assert_in_delta(0.5747542818178104, worksheet.outputs_energy_flows_ad440, 0.002); end
  def test_outputs_energy_flows_d442; assert_equal("Geothermal", worksheet.outputs_energy_flows_d442); end
  def test_outputs_energy_flows_f442; assert_equal("Heat network", worksheet.outputs_energy_flows_f442); end
  def test_outputs_energy_flows_i442; assert_equal("G.R.05", worksheet.outputs_energy_flows_i442); end
  def test_outputs_energy_flows_j442; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_j442); end
  def test_outputs_energy_flows_n442; assert_equal("Heat network", worksheet.outputs_energy_flows_n442); end
  def test_outputs_energy_flows_v442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v442||0), 0.002); end
  def test_outputs_energy_flows_w442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w442||0), 0.002); end
  def test_outputs_energy_flows_x442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x442||0), 0.002); end
  def test_outputs_energy_flows_y442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y442||0), 0.002); end
  def test_outputs_energy_flows_z442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z442||0), 0.002); end
  def test_outputs_energy_flows_aa442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa442||0), 0.002); end
  def test_outputs_energy_flows_ab442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab442||0), 0.002); end
  def test_outputs_energy_flows_ac442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac442||0), 0.002); end
  def test_outputs_energy_flows_ad442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad442||0), 0.002); end
  def test_outputs_energy_flows_d444; assert_equal("Solar", worksheet.outputs_energy_flows_d444); end
  def test_outputs_energy_flows_f444; assert_equal("Heat network", worksheet.outputs_energy_flows_f444); end
  def test_outputs_energy_flows_i444; assert_equal("G.R.01", worksheet.outputs_energy_flows_i444); end
  def test_outputs_energy_flows_j444; assert_equal("Global Solar", worksheet.outputs_energy_flows_j444); end
  def test_outputs_energy_flows_n444; assert_equal("Heat network", worksheet.outputs_energy_flows_n444); end
  def test_outputs_energy_flows_v444; assert_in_delta(0.12363095945772125, worksheet.outputs_energy_flows_v444, 0.002); end
  def test_outputs_energy_flows_w444; assert_in_delta(0.12894111079191387, worksheet.outputs_energy_flows_w444, 0.002); end
  def test_outputs_energy_flows_x444; assert_in_delta(0.13815870298689864, worksheet.outputs_energy_flows_x444, 0.002); end
  def test_outputs_energy_flows_y444; assert_in_delta(0.14607868773191823, worksheet.outputs_energy_flows_y444, 0.002); end
  def test_outputs_energy_flows_z444; assert_in_delta(0.1535131202416217, worksheet.outputs_energy_flows_z444, 0.002); end
  def test_outputs_energy_flows_aa444; assert_in_delta(0.1600012562799324, worksheet.outputs_energy_flows_aa444, 0.002); end
  def test_outputs_energy_flows_ab444; assert_in_delta(0.16652143053918542, worksheet.outputs_energy_flows_ab444, 0.002); end
  def test_outputs_energy_flows_ac444; assert_in_delta(0.1722105251326315, worksheet.outputs_energy_flows_ac444, 0.002); end
  def test_outputs_energy_flows_ad444; assert_in_delta(0.17817382736352122, worksheet.outputs_energy_flows_ad444, 0.002); end
  def test_outputs_energy_flows_d446; assert_equal("Solar", worksheet.outputs_energy_flows_d446); end
  def test_outputs_energy_flows_f446; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f446); end
  def test_outputs_energy_flows_i446; assert_equal("G.E.02", worksheet.outputs_energy_flows_i446); end
  def test_outputs_energy_flows_j446; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j446); end
  def test_outputs_energy_flows_p446; assert_equal("Solar", worksheet.outputs_energy_flows_p446); end
  def test_outputs_energy_flows_v446; assert_in_delta(0.2274987384, worksheet.outputs_energy_flows_v446, 0.002); end
  def test_outputs_energy_flows_w446; assert_in_delta(0.5585695199999999, worksheet.outputs_energy_flows_w446, 0.002); end
  def test_outputs_energy_flows_x446; assert_in_delta(0.8540685748799999, worksheet.outputs_energy_flows_x446, 0.002); end
  def test_outputs_energy_flows_y446; assert_in_delta(0.9525630002399997, worksheet.outputs_energy_flows_y446, 0.002); end
  def test_outputs_energy_flows_z446; assert_in_epsilon(1.2794460883199998, worksheet.outputs_energy_flows_z446, 0.002); end
  def test_outputs_energy_flows_aa446; assert_in_epsilon(1.4798620943999996, worksheet.outputs_energy_flows_aa446, 0.002); end
  def test_outputs_energy_flows_ab446; assert_in_epsilon(1.6179707750399994, worksheet.outputs_energy_flows_ab446, 0.002); end
  def test_outputs_energy_flows_ac446; assert_in_epsilon(2.7839641356, worksheet.outputs_energy_flows_ac446, 0.002); end
  def test_outputs_energy_flows_ad446; assert_in_epsilon(3.8454671267999982, worksheet.outputs_energy_flows_ad446, 0.002); end
  def test_outputs_energy_flows_d448; assert_equal("Wind", worksheet.outputs_energy_flows_d448); end
  def test_outputs_energy_flows_f448; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f448); end
  def test_outputs_energy_flows_i448; assert_equal("G.E.02", worksheet.outputs_energy_flows_i448); end
  def test_outputs_energy_flows_j448; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j448); end
  def test_outputs_energy_flows_p448; assert_equal("Wind", worksheet.outputs_energy_flows_p448); end
  def test_outputs_energy_flows_v448; assert_in_epsilon(1.5854127991199998, worksheet.outputs_energy_flows_v448, 0.002); end
  def test_outputs_energy_flows_w448; assert_in_epsilon(2.7814868639999997, worksheet.outputs_energy_flows_w448, 0.002); end
  def test_outputs_energy_flows_x448; assert_in_epsilon(3.3435277199999995, worksheet.outputs_energy_flows_x448, 0.002); end
  def test_outputs_energy_flows_y448; assert_in_epsilon(3.8953123560000003, worksheet.outputs_energy_flows_y448, 0.002); end
  def test_outputs_energy_flows_z448; assert_in_epsilon(4.530566844000001, worksheet.outputs_energy_flows_z448, 0.002); end
  def test_outputs_energy_flows_aa448; assert_in_epsilon(4.668315768, worksheet.outputs_energy_flows_aa448, 0.002); end
  def test_outputs_energy_flows_ab448; assert_in_epsilon(6.44406192, worksheet.outputs_energy_flows_ab448, 0.002); end
  def test_outputs_energy_flows_ac448; assert_in_epsilon(9.46885788, worksheet.outputs_energy_flows_ac448, 0.002); end
  def test_outputs_energy_flows_ad448; assert_in_epsilon(11.685779280000002, worksheet.outputs_energy_flows_ad448, 0.002); end
  def test_outputs_energy_flows_d450; assert_equal("Marine", worksheet.outputs_energy_flows_d450); end
  def test_outputs_energy_flows_f450; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f450); end
  def test_outputs_energy_flows_i450; assert_equal("G.E.02", worksheet.outputs_energy_flows_i450); end
  def test_outputs_energy_flows_j450; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j450); end
  def test_outputs_energy_flows_p450; assert_equal("Marine", worksheet.outputs_energy_flows_p450); end
  def test_outputs_energy_flows_v450; assert_in_delta(0.0019957026240000003, worksheet.outputs_energy_flows_v450, 0.002); end
  def test_outputs_energy_flows_w450; assert_in_delta(0.0041656031999999996, worksheet.outputs_energy_flows_w450, 0.002); end
  def test_outputs_energy_flows_x450; assert_in_delta(0.00632414304, worksheet.outputs_energy_flows_x450, 0.002); end
  def test_outputs_energy_flows_y450; assert_in_delta(0.023794430400000004, worksheet.outputs_energy_flows_y450, 0.002); end
  def test_outputs_energy_flows_z450; assert_in_delta(0.06784884000000001, worksheet.outputs_energy_flows_z450, 0.002); end
  def test_outputs_energy_flows_aa450; assert_in_delta(0.11124054000000001, worksheet.outputs_energy_flows_aa450, 0.002); end
  def test_outputs_energy_flows_ab450; assert_in_delta(0.17830044000000003, worksheet.outputs_energy_flows_ab450, 0.002); end
  def test_outputs_energy_flows_ac450; assert_in_delta(0.270764208, worksheet.outputs_energy_flows_ac450, 0.002); end
  def test_outputs_energy_flows_ad450; assert_in_delta(0.32851461600000004, worksheet.outputs_energy_flows_ad450, 0.002); end
  def test_outputs_energy_flows_d452; assert_equal("Geothermal", worksheet.outputs_energy_flows_d452); end
  def test_outputs_energy_flows_f452; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f452); end
  def test_outputs_energy_flows_i452; assert_equal("G.E.02", worksheet.outputs_energy_flows_i452); end
  def test_outputs_energy_flows_j452; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j452); end
  def test_outputs_energy_flows_p452; assert_equal("Geothermal", worksheet.outputs_energy_flows_p452); end
  def test_outputs_energy_flows_v452; assert_in_delta(0.26331345864, worksheet.outputs_energy_flows_v452, 0.002); end
  def test_outputs_energy_flows_w452; assert_in_delta(0.334037196, worksheet.outputs_energy_flows_w452, 0.002); end
  def test_outputs_energy_flows_x452; assert_in_delta(0.4070930399999999, worksheet.outputs_energy_flows_x452, 0.002); end
  def test_outputs_energy_flows_y452; assert_in_delta(0.46389672000000004, worksheet.outputs_energy_flows_y452, 0.002); end
  def test_outputs_energy_flows_z452; assert_in_delta(0.5453153279999999, worksheet.outputs_energy_flows_z452, 0.002); end
  def test_outputs_energy_flows_aa452; assert_in_delta(0.8432190719999999, worksheet.outputs_energy_flows_aa452, 0.002); end
  def test_outputs_energy_flows_ab452; assert_in_epsilon(1.0502369279999997, worksheet.outputs_energy_flows_ab452, 0.002); end
  def test_outputs_energy_flows_ac452; assert_in_epsilon(1.4699530079999996, worksheet.outputs_energy_flows_ac452, 0.002); end
  def test_outputs_energy_flows_ad452; assert_in_epsilon(1.8454884479999996, worksheet.outputs_energy_flows_ad452, 0.002); end
  def test_outputs_energy_flows_d454; assert_equal("Hydro", worksheet.outputs_energy_flows_d454); end
  def test_outputs_energy_flows_f454; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f454); end
  def test_outputs_energy_flows_i454; assert_equal("G.E.02", worksheet.outputs_energy_flows_i454); end
  def test_outputs_energy_flows_j454; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j454); end
  def test_outputs_energy_flows_p454; assert_equal("Hydro", worksheet.outputs_energy_flows_p454); end
  def test_outputs_energy_flows_v454; assert_in_epsilon(13.16267496, worksheet.outputs_energy_flows_v454, 0.002); end
  def test_outputs_energy_flows_w454; assert_in_epsilon(18.319186799999997, worksheet.outputs_energy_flows_w454, 0.002); end
  def test_outputs_energy_flows_x454; assert_in_epsilon(19.092663576, worksheet.outputs_energy_flows_x454, 0.002); end
  def test_outputs_energy_flows_y454; assert_in_epsilon(19.757582208000002, worksheet.outputs_energy_flows_y454, 0.002); end
  def test_outputs_energy_flows_z454; assert_in_epsilon(20.429285724, worksheet.outputs_energy_flows_z454, 0.002); end
  def test_outputs_energy_flows_aa454; assert_in_epsilon(21.100989239999997, worksheet.outputs_energy_flows_aa454, 0.002); end
  def test_outputs_energy_flows_ab454; assert_in_epsilon(21.4578741384, worksheet.outputs_energy_flows_ab454, 0.002); end
  def test_outputs_energy_flows_ac454; assert_in_epsilon(22.1906416104, worksheet.outputs_energy_flows_ac454, 0.002); end
  def test_outputs_energy_flows_ad454; assert_in_epsilon(22.984473038399997, worksheet.outputs_energy_flows_ad454, 0.002); end
  def test_outputs_energy_flows_d456; assert_equal("Solar", worksheet.outputs_energy_flows_d456); end
  def test_outputs_energy_flows_f456; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f456); end
  def test_outputs_energy_flows_i456; assert_equal("G.L.01", worksheet.outputs_energy_flows_i456); end
  def test_outputs_energy_flows_j456; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j456); end
  def test_outputs_energy_flows_p456; assert_equal("Solar", worksheet.outputs_energy_flows_p456); end
  def test_outputs_energy_flows_v456; assert_in_delta(0.020477376, worksheet.outputs_energy_flows_v456, 0.002); end
  def test_outputs_energy_flows_w456; assert_in_delta(0.10222882078475562, worksheet.outputs_energy_flows_w456, 0.002); end
  def test_outputs_energy_flows_x456; assert_in_delta(0.6496021227566944, worksheet.outputs_energy_flows_x456, 0.002); end
  def test_outputs_energy_flows_y456; assert_in_delta(0.9377327147182917, worksheet.outputs_energy_flows_y456, 0.002); end
  def test_outputs_energy_flows_z456; assert_in_epsilon(1.2399989497774486, worksheet.outputs_energy_flows_z456, 0.002); end
  def test_outputs_energy_flows_aa456; assert_in_epsilon(1.4151415461711485, worksheet.outputs_energy_flows_aa456, 0.002); end
  def test_outputs_energy_flows_ab456; assert_in_epsilon(1.3516736881434415, worksheet.outputs_energy_flows_ab456, 0.002); end
  def test_outputs_energy_flows_ac456; assert_in_epsilon(2.1019364453115243, worksheet.outputs_energy_flows_ac456, 0.002); end
  def test_outputs_energy_flows_ad456; assert_in_epsilon(2.6089339951097914, worksheet.outputs_energy_flows_ad456, 0.002); end
  def test_outputs_energy_flows_d458; assert_equal("Power plants", worksheet.outputs_energy_flows_d458); end
  def test_outputs_energy_flows_f458; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f458); end
  def test_outputs_energy_flows_i458; assert_equal("G.L.01", worksheet.outputs_energy_flows_i458); end
  def test_outputs_energy_flows_j458; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j458); end
  def test_outputs_energy_flows_k458; assert_equal("G.L.02", worksheet.outputs_energy_flows_k458); end
  def test_outputs_energy_flows_l458; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_l458); end
  def test_outputs_energy_flows_p458; assert_equal("Unabated power", worksheet.outputs_energy_flows_p458); end
  def test_outputs_energy_flows_r458; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_r458); end
  def test_outputs_energy_flows_t458; assert_equal("Nuclear", worksheet.outputs_energy_flows_t458); end
  def test_outputs_energy_flows_v458; assert_in_epsilon(103.39553913022215, worksheet.outputs_energy_flows_v458, 0.002); end
  def test_outputs_energy_flows_w458; assert_in_epsilon(101.30238354924062, worksheet.outputs_energy_flows_w458, 0.002); end
  def test_outputs_energy_flows_x458; assert_in_epsilon(111.77868605251332, worksheet.outputs_energy_flows_x458, 0.002); end
  def test_outputs_energy_flows_y458; assert_in_epsilon(121.43917524308651, worksheet.outputs_energy_flows_y458, 0.002); end
  def test_outputs_energy_flows_z458; assert_in_epsilon(129.68346756420075, worksheet.outputs_energy_flows_z458, 0.002); end
  def test_outputs_energy_flows_aa458; assert_in_epsilon(138.33145589992728, worksheet.outputs_energy_flows_aa458, 0.002); end
  def test_outputs_energy_flows_ab458; assert_in_epsilon(143.3120091317207, worksheet.outputs_energy_flows_ab458, 0.002); end
  def test_outputs_energy_flows_ac458; assert_in_epsilon(143.41936135278655, worksheet.outputs_energy_flows_ac458, 0.002); end
  def test_outputs_energy_flows_ad458; assert_in_epsilon(143.91514637132076, worksheet.outputs_energy_flows_ad458, 0.002); end
  def test_outputs_energy_flows_d460; assert_equal("Geothermal", worksheet.outputs_energy_flows_d460); end
  def test_outputs_energy_flows_f460; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f460); end
  def test_outputs_energy_flows_i460; assert_equal("G.L.01", worksheet.outputs_energy_flows_i460); end
  def test_outputs_energy_flows_j460; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j460); end
  def test_outputs_energy_flows_p460; assert_equal("Geothermal", worksheet.outputs_energy_flows_p460); end
  def test_outputs_energy_flows_v460; assert_in_epsilon(2.36982112776, worksheet.outputs_energy_flows_v460, 0.002); end
  def test_outputs_energy_flows_w460; assert_in_epsilon(2.999155579560331, worksheet.outputs_energy_flows_w460, 0.002); end
  def test_outputs_energy_flows_x460; assert_in_epsilon(3.6442041505381604, worksheet.outputs_energy_flows_x460, 0.002); end
  def test_outputs_energy_flows_y460; assert_in_epsilon(4.140361456820889, worksheet.outputs_energy_flows_y460, 0.002); end
  def test_outputs_energy_flows_z460; assert_in_epsilon(4.852612993023374, worksheet.outputs_energy_flows_z460, 0.002); end
  def test_outputs_energy_flows_aa460; assert_in_epsilon(7.481392058012148, worksheet.outputs_energy_flows_aa460, 0.002); end
  def test_outputs_energy_flows_ab460; assert_in_epsilon(9.290655341938646, worksheet.outputs_energy_flows_ab460, 0.002); end
  def test_outputs_energy_flows_ac460; assert_in_epsilon(12.965300885337358, worksheet.outputs_energy_flows_ac460, 0.002); end
  def test_outputs_energy_flows_ad460; assert_in_epsilon(16.22981466659353, worksheet.outputs_energy_flows_ad460, 0.002); end
  def test_outputs_energy_flows_d462; assert_equal("Solid", worksheet.outputs_energy_flows_d462); end
  def test_outputs_energy_flows_f462; assert_equal("Hydrogen", worksheet.outputs_energy_flows_f462); end
  def test_outputs_energy_flows_i462; assert_equal("G.FF.01", worksheet.outputs_energy_flows_i462); end
  def test_outputs_energy_flows_j462; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j462); end
  def test_outputs_energy_flows_p462; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_p462); end
  def test_outputs_energy_flows_v462; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v462||0), 0.002); end
  def test_outputs_energy_flows_w462; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w462||0), 0.002); end
  def test_outputs_energy_flows_x462; assert_in_delta(0.05261127184466806, worksheet.outputs_energy_flows_x462, 0.002); end
  def test_outputs_energy_flows_y462; assert_in_delta(0.06789520440183373, worksheet.outputs_energy_flows_y462, 0.002); end
  def test_outputs_energy_flows_z462; assert_in_delta(0.0832467475666892, worksheet.outputs_energy_flows_z462, 0.002); end
  def test_outputs_energy_flows_aa462; assert_in_delta(0.0795664623778046, worksheet.outputs_energy_flows_aa462, 0.002); end
  def test_outputs_energy_flows_ab462; assert_in_delta(0.05964569392407847, worksheet.outputs_energy_flows_ab462, 0.002); end
  def test_outputs_energy_flows_ac462; assert_in_delta(0.04253403634612377, worksheet.outputs_energy_flows_ac462, 0.002); end
  def test_outputs_energy_flows_ad462; assert_in_delta(0.027054017283866624, worksheet.outputs_energy_flows_ad462, 0.002); end
  def test_outputs_energy_flows_d464; assert_equal("Gas", worksheet.outputs_energy_flows_d464); end
  def test_outputs_energy_flows_f464; assert_equal("Hydrogen", worksheet.outputs_energy_flows_f464); end
  def test_outputs_energy_flows_i464; assert_equal("G.FF.03", worksheet.outputs_energy_flows_i464); end
  def test_outputs_energy_flows_j464; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j464); end
  def test_outputs_energy_flows_p464; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_p464); end
  def test_outputs_energy_flows_v464; assert_in_delta(8.660925161525873e-08, worksheet.outputs_energy_flows_v464, 0.002); end
  def test_outputs_energy_flows_w464; assert_in_delta(0.19093979301932854, worksheet.outputs_energy_flows_w464, 0.002); end
  def test_outputs_energy_flows_x464; assert_in_delta(0.15783381553400416, worksheet.outputs_energy_flows_x464, 0.002); end
  def test_outputs_energy_flows_y464; assert_in_delta(0.14257992924385082, worksheet.outputs_energy_flows_y464, 0.002); end
  def test_outputs_energy_flows_z464; assert_in_delta(0.11987531649603246, worksheet.outputs_energy_flows_z464, 0.002); end
  def test_outputs_energy_flows_aa464; assert_in_delta(0.10502773033870208, worksheet.outputs_energy_flows_aa464, 0.002); end
  def test_outputs_energy_flows_ab464; assert_in_delta(0.08052168679750593, worksheet.outputs_energy_flows_ab464, 0.002); end
  def test_outputs_energy_flows_ac464; assert_in_delta(0.059547650884573276, worksheet.outputs_energy_flows_ac464, 0.002); end
  def test_outputs_energy_flows_ad464; assert_in_delta(0.03246482074063995, worksheet.outputs_energy_flows_ad464, 0.002); end
  def test_outputs_energy_flows_d466; assert_equal("Electricity", worksheet.outputs_energy_flows_d466); end
  def test_outputs_energy_flows_f466; assert_equal("Hydrogen", worksheet.outputs_energy_flows_f466); end
  def test_outputs_energy_flows_i466; assert_equal("G.E.01", worksheet.outputs_energy_flows_i466); end
  def test_outputs_energy_flows_j466; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j466); end
  def test_outputs_energy_flows_p466; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_p466); end
  def test_outputs_energy_flows_v466; assert_in_delta(5.697977079951232e-09, worksheet.outputs_energy_flows_v466, 0.002); end
  def test_outputs_energy_flows_w466; assert_in_delta(0.012195949988459923, worksheet.outputs_energy_flows_w466, 0.002); end
  def test_outputs_energy_flows_x466; assert_in_delta(0.012521770327814766, worksheet.outputs_energy_flows_x466, 0.002); end
  def test_outputs_energy_flows_y466; assert_in_delta(0.02353315024447509, worksheet.outputs_energy_flows_y466, 0.002); end
  def test_outputs_energy_flows_z466; assert_in_delta(0.03395264692486134, worksheet.outputs_energy_flows_z466, 0.002); end
  def test_outputs_energy_flows_aa466; assert_in_delta(0.0428404253903171, worksheet.outputs_energy_flows_aa466, 0.002); end
  def test_outputs_energy_flows_ab466; assert_in_delta(0.07025073664959273, worksheet.outputs_energy_flows_ab466, 0.002); end
  def test_outputs_energy_flows_ac466; assert_in_delta(0.0944773509727653, worksheet.outputs_energy_flows_ac466, 0.002); end
  def test_outputs_energy_flows_ad466; assert_in_delta(0.12619500574171405, worksheet.outputs_energy_flows_ad466, 0.002); end
  def test_outputs_energy_flows_d468; assert_equal("Hydrogen", worksheet.outputs_energy_flows_d468); end
  def test_outputs_energy_flows_f468; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f468); end
  def test_outputs_energy_flows_i468; assert_equal("G.L.01", worksheet.outputs_energy_flows_i468); end
  def test_outputs_energy_flows_j468; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j468); end
  def test_outputs_energy_flows_p468; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_p468); end
  def test_outputs_energy_flows_v468; assert_in_delta(2.3931503735795177e-08, worksheet.outputs_energy_flows_v468, 0.002); end
  def test_outputs_energy_flows_w468; assert_in_delta(0.052393801150423816, worksheet.outputs_energy_flows_w468, 0.002); end
  def test_outputs_energy_flows_x468; assert_in_delta(0.07152531170160999, worksheet.outputs_energy_flows_x468, 0.002); end
  def test_outputs_energy_flows_y468; assert_in_delta(0.07971643188699248, worksheet.outputs_energy_flows_y468, 0.002); end
  def test_outputs_energy_flows_z468; assert_in_delta(0.0842186980405796, worksheet.outputs_energy_flows_z468, 0.002); end
  def test_outputs_energy_flows_aa468; assert_in_delta(0.08133627121794651, worksheet.outputs_energy_flows_aa468, 0.002); end
  def test_outputs_energy_flows_ab468; assert_in_delta(0.07214882665591518, worksheet.outputs_energy_flows_ab468, 0.002); end
  def test_outputs_energy_flows_ac468; assert_in_delta(0.06509045765911933, worksheet.outputs_energy_flows_ac468, 0.002); end
  def test_outputs_energy_flows_ad468; assert_in_delta(0.059027508841316495, worksheet.outputs_energy_flows_ad468, 0.002); end
  def test_outputs_energy_flows_d470; assert_equal("Hydrogen", worksheet.outputs_energy_flows_d470); end
  def test_outputs_energy_flows_f470; assert_equal("Transport", worksheet.outputs_energy_flows_f470); end
  def test_outputs_energy_flows_i470; assert_equal("G.HY.01", worksheet.outputs_energy_flows_i470); end
  def test_outputs_energy_flows_j470; assert_equal("Global H2", worksheet.outputs_energy_flows_j470); end
  def test_outputs_energy_flows_p470; assert_equal("Global transport", worksheet.outputs_energy_flows_p470); end
  def test_outputs_energy_flows_v470; assert_in_delta(6.837572495941478e-08, worksheet.outputs_energy_flows_v470, 0.002); end
  def test_outputs_energy_flows_w470; assert_in_delta(0.15074194185736464, worksheet.outputs_energy_flows_w470, 0.002); end
  def test_outputs_energy_flows_x470; assert_in_delta(0.15941215368934422, worksheet.outputs_energy_flows_x470, 0.002); end
  def test_outputs_energy_flows_y470; assert_in_delta(0.15429185200316717, worksheet.outputs_energy_flows_y470, 0.002); end
  def test_outputs_energy_flows_z470; assert_in_delta(0.13313114673762763, worksheet.outputs_energy_flows_z470, 0.002); end
  def test_outputs_energy_flows_aa470; assert_in_delta(0.1042668568997512, worksheet.outputs_energy_flows_aa470, 0.002); end
  def test_outputs_energy_flows_ab470; assert_in_delta(0.0713459748909307, worksheet.outputs_energy_flows_ab470, 0.002); end
  def test_outputs_energy_flows_ac470; assert_in_delta(0.036349419027900946, worksheet.outputs_energy_flows_ac470, 0.002); end
  def test_outputs_energy_flows_ad470; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad470||0), 0.002); end
  def test_outputs_energy_flows_d472; assert_equal("Solid", worksheet.outputs_energy_flows_d472); end
  def test_outputs_energy_flows_f472; assert_equal("Transport", worksheet.outputs_energy_flows_f472); end
  def test_outputs_energy_flows_i472; assert_equal("G.C.01", worksheet.outputs_energy_flows_i472); end
  def test_outputs_energy_flows_j472; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j472); end
  def test_outputs_energy_flows_p472; assert_equal("Global transport", worksheet.outputs_energy_flows_p472); end
  def test_outputs_energy_flows_v472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v472||0), 0.002); end
  def test_outputs_energy_flows_w472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w472||0), 0.002); end
  def test_outputs_energy_flows_x472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x472||0), 0.002); end
  def test_outputs_energy_flows_y472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y472||0), 0.002); end
  def test_outputs_energy_flows_z472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z472||0), 0.002); end
  def test_outputs_energy_flows_aa472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa472||0), 0.002); end
  def test_outputs_energy_flows_ab472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab472||0), 0.002); end
  def test_outputs_energy_flows_ac472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac472||0), 0.002); end
  def test_outputs_energy_flows_ad472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad472||0), 0.002); end
  def test_outputs_energy_flows_d474; assert_equal("Liquid", worksheet.outputs_energy_flows_d474); end
  def test_outputs_energy_flows_f474; assert_equal("Transport", worksheet.outputs_energy_flows_f474); end
  def test_outputs_energy_flows_i474; assert_equal("G.C.02", worksheet.outputs_energy_flows_i474); end
  def test_outputs_energy_flows_j474; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j474); end
  def test_outputs_energy_flows_p474; assert_equal("Global transport", worksheet.outputs_energy_flows_p474); end
  def test_outputs_energy_flows_v474; assert_in_epsilon(98.39054841752521, worksheet.outputs_energy_flows_v474, 0.002); end
  def test_outputs_energy_flows_w474; assert_in_epsilon(107.23759468001926, worksheet.outputs_energy_flows_w474, 0.002); end
  def test_outputs_energy_flows_x474; assert_in_epsilon(121.78234591790738, worksheet.outputs_energy_flows_x474, 0.002); end
  def test_outputs_energy_flows_y474; assert_in_epsilon(132.51591420991218, worksheet.outputs_energy_flows_y474, 0.002); end
  def test_outputs_energy_flows_z474; assert_in_epsilon(140.97085375715739, worksheet.outputs_energy_flows_z474, 0.002); end
  def test_outputs_energy_flows_aa474; assert_in_epsilon(146.43982868889782, worksheet.outputs_energy_flows_aa474, 0.002); end
  def test_outputs_energy_flows_ab474; assert_in_epsilon(150.89962263018552, worksheet.outputs_energy_flows_ab474, 0.002); end
  def test_outputs_energy_flows_ac474; assert_in_epsilon(154.15290031985023, worksheet.outputs_energy_flows_ac474, 0.002); end
  def test_outputs_energy_flows_ad474; assert_in_epsilon(157.16113651101088, worksheet.outputs_energy_flows_ad474, 0.002); end
  def test_outputs_energy_flows_d476; assert_equal("Gas", worksheet.outputs_energy_flows_d476); end
  def test_outputs_energy_flows_f476; assert_equal("Transport", worksheet.outputs_energy_flows_f476); end
  def test_outputs_energy_flows_i476; assert_equal("G.C.03", worksheet.outputs_energy_flows_i476); end
  def test_outputs_energy_flows_j476; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j476); end
  def test_outputs_energy_flows_p476; assert_equal("Global transport", worksheet.outputs_energy_flows_p476); end
  def test_outputs_energy_flows_v476; assert_in_delta(0.3471995357508835, worksheet.outputs_energy_flows_v476, 0.002); end
  def test_outputs_energy_flows_w476; assert_in_delta(0.8002539549555909, worksheet.outputs_energy_flows_w476, 0.002); end
  def test_outputs_energy_flows_x476; assert_in_epsilon(1.2254590310670934, worksheet.outputs_energy_flows_x476, 0.002); end
  def test_outputs_energy_flows_y476; assert_in_epsilon(1.7013069950787496, worksheet.outputs_energy_flows_y476, 0.002); end
  def test_outputs_energy_flows_z476; assert_in_epsilon(2.2017729838059026, worksheet.outputs_energy_flows_z476, 0.002); end
  def test_outputs_energy_flows_aa476; assert_in_epsilon(2.6948398274862457, worksheet.outputs_energy_flows_aa476, 0.002); end
  def test_outputs_energy_flows_ab476; assert_in_epsilon(3.182586863324238, worksheet.outputs_energy_flows_ab476, 0.002); end
  def test_outputs_energy_flows_ac476; assert_in_epsilon(3.6506160562313346, worksheet.outputs_energy_flows_ac476, 0.002); end
  def test_outputs_energy_flows_ad476; assert_in_epsilon(4.117492339017559, worksheet.outputs_energy_flows_ad476, 0.002); end
  def test_outputs_energy_flows_d478; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d478); end
  def test_outputs_energy_flows_f478; assert_equal("Transport", worksheet.outputs_energy_flows_f478); end
  def test_outputs_energy_flows_i478; assert_equal("G.E.01", worksheet.outputs_energy_flows_i478); end
  def test_outputs_energy_flows_j478; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j478); end
  def test_outputs_energy_flows_p478; assert_equal("Global transport", worksheet.outputs_energy_flows_p478); end
  def test_outputs_energy_flows_v478; assert_in_epsilon(1.6221723137825572, worksheet.outputs_energy_flows_v478, 0.002); end
  def test_outputs_energy_flows_w478; assert_in_epsilon(2.44713112913332, worksheet.outputs_energy_flows_w478, 0.002); end
  def test_outputs_energy_flows_x478; assert_in_epsilon(3.2220247242484628, worksheet.outputs_energy_flows_x478, 0.002); end
  def test_outputs_energy_flows_y478; assert_in_epsilon(3.9930561031885503, worksheet.outputs_energy_flows_y478, 0.002); end
  def test_outputs_energy_flows_z478; assert_in_epsilon(4.722069880751547, worksheet.outputs_energy_flows_z478, 0.002); end
  def test_outputs_energy_flows_aa478; assert_in_epsilon(5.412240583663378, worksheet.outputs_energy_flows_aa478, 0.002); end
  def test_outputs_energy_flows_ab478; assert_in_epsilon(6.085485477323126, worksheet.outputs_energy_flows_ab478, 0.002); end
  def test_outputs_energy_flows_ac478; assert_in_epsilon(6.735366035048618, worksheet.outputs_energy_flows_ac478, 0.002); end
  def test_outputs_energy_flows_ad478; assert_in_epsilon(7.403039470247169, worksheet.outputs_energy_flows_ad478, 0.002); end
  def test_outputs_energy_flows_d480; assert_equal("Solid", worksheet.outputs_energy_flows_d480); end
  def test_outputs_energy_flows_f480; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f480); end
  def test_outputs_energy_flows_i480; assert_equal("G.C.01", worksheet.outputs_energy_flows_i480); end
  def test_outputs_energy_flows_j480; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j480); end
  def test_outputs_energy_flows_k480; assert_equal("G.FF.01", worksheet.outputs_energy_flows_k480); end
  def test_outputs_energy_flows_l480; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_l480); end
  def test_outputs_energy_flows_p480; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p480); end
  def test_outputs_energy_flows_v480; assert_in_epsilon(50.709351809629126, worksheet.outputs_energy_flows_v480, 0.002); end
  def test_outputs_energy_flows_w480; assert_in_epsilon(52.48892947643998, worksheet.outputs_energy_flows_w480, 0.002); end
  def test_outputs_energy_flows_x480; assert_in_epsilon(56.75355699961376, worksheet.outputs_energy_flows_x480, 0.002); end
  def test_outputs_energy_flows_y480; assert_in_epsilon(60.27541639084451, worksheet.outputs_energy_flows_y480, 0.002); end
  def test_outputs_energy_flows_z480; assert_in_epsilon(63.895814833519715, worksheet.outputs_energy_flows_z480, 0.002); end
  def test_outputs_energy_flows_aa480; assert_in_epsilon(67.4169487112742, worksheet.outputs_energy_flows_aa480, 0.002); end
  def test_outputs_energy_flows_ab480; assert_in_epsilon(71.38832519595387, worksheet.outputs_energy_flows_ab480, 0.002); end
  def test_outputs_energy_flows_ac480; assert_in_epsilon(75.4791592112768, worksheet.outputs_energy_flows_ac480, 0.002); end
  def test_outputs_energy_flows_ad480; assert_in_epsilon(79.98703973328934, worksheet.outputs_energy_flows_ad480, 0.002); end
  def test_outputs_energy_flows_d482; assert_equal("Liquid", worksheet.outputs_energy_flows_d482); end
  def test_outputs_energy_flows_f482; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f482); end
  def test_outputs_energy_flows_i482; assert_equal("G.C.02", worksheet.outputs_energy_flows_i482); end
  def test_outputs_energy_flows_j482; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j482); end
  def test_outputs_energy_flows_k482; assert_equal("G.FF.02", worksheet.outputs_energy_flows_k482); end
  def test_outputs_energy_flows_l482; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_l482); end
  def test_outputs_energy_flows_p482; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p482); end
  def test_outputs_energy_flows_v482; assert_in_epsilon(30.80950689932375, worksheet.outputs_energy_flows_v482, 0.002); end
  def test_outputs_energy_flows_w482; assert_in_epsilon(32.39255087607285, worksheet.outputs_energy_flows_w482, 0.002); end
  def test_outputs_energy_flows_x482; assert_in_epsilon(36.73011650734025, worksheet.outputs_energy_flows_x482, 0.002); end
  def test_outputs_energy_flows_y482; assert_in_epsilon(41.03073142639957, worksheet.outputs_energy_flows_y482, 0.002); end
  def test_outputs_energy_flows_z482; assert_in_epsilon(45.65455274197766, worksheet.outputs_energy_flows_z482, 0.002); end
  def test_outputs_energy_flows_aa482; assert_in_epsilon(50.44322301507104, worksheet.outputs_energy_flows_aa482, 0.002); end
  def test_outputs_energy_flows_ab482; assert_in_epsilon(55.93696106805981, worksheet.outputs_energy_flows_ab482, 0.002); end
  def test_outputs_energy_flows_ac482; assert_in_epsilon(61.725543802088175, worksheet.outputs_energy_flows_ac482, 0.002); end
  def test_outputs_energy_flows_ad482; assert_in_epsilon(68.3313589772648, worksheet.outputs_energy_flows_ad482, 0.002); end
  def test_outputs_energy_flows_d484; assert_equal("Gas", worksheet.outputs_energy_flows_d484); end
  def test_outputs_energy_flows_f484; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f484); end
  def test_outputs_energy_flows_i484; assert_equal("G.C.03", worksheet.outputs_energy_flows_i484); end
  def test_outputs_energy_flows_j484; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j484); end
  def test_outputs_energy_flows_k484; assert_equal("G.FF.03", worksheet.outputs_energy_flows_k484); end
  def test_outputs_energy_flows_l484; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_l484); end
  def test_outputs_energy_flows_p484; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p484); end
  def test_outputs_energy_flows_v484; assert_in_epsilon(27.233246077496677, worksheet.outputs_energy_flows_v484, 0.002); end
  def test_outputs_energy_flows_w484; assert_in_epsilon(28.565282930945383, worksheet.outputs_energy_flows_w484, 0.002); end
  def test_outputs_energy_flows_x484; assert_in_epsilon(31.441618093544154, worksheet.outputs_energy_flows_x484, 0.002); end
  def test_outputs_energy_flows_y484; assert_in_epsilon(34.11248401104295, worksheet.outputs_energy_flows_y484, 0.002); end
  def test_outputs_energy_flows_z484; assert_in_epsilon(36.91738725719273, worksheet.outputs_energy_flows_z484, 0.002); end
  def test_outputs_energy_flows_aa484; assert_in_epsilon(39.78401510084182, worksheet.outputs_energy_flows_aa484, 0.002); end
  def test_outputs_energy_flows_ab484; assert_in_epsilon(43.00133673715809, worksheet.outputs_energy_flows_ab484, 0.002); end
  def test_outputs_energy_flows_ac484; assert_in_epsilon(46.319316339555066, worksheet.outputs_energy_flows_ac484, 0.002); end
  def test_outputs_energy_flows_ad484; assert_in_epsilon(50.086493159761616, worksheet.outputs_energy_flows_ad484, 0.002); end
  def test_outputs_energy_flows_d486; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d486); end
  def test_outputs_energy_flows_f486; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f486); end
  def test_outputs_energy_flows_i486; assert_equal("G.E.01", worksheet.outputs_energy_flows_i486); end
  def test_outputs_energy_flows_j486; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j486); end
  def test_outputs_energy_flows_p486; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p486); end
  def test_outputs_energy_flows_v486; assert_in_epsilon(29.285413529720426, worksheet.outputs_energy_flows_v486, 0.002); end
  def test_outputs_energy_flows_w486; assert_in_epsilon(30.421929472722468, worksheet.outputs_energy_flows_w486, 0.002); end
  def test_outputs_energy_flows_x486; assert_in_epsilon(33.53591156911871, worksheet.outputs_energy_flows_x486, 0.002); end
  def test_outputs_energy_flows_y486; assert_in_epsilon(36.40860675472568, worksheet.outputs_energy_flows_y486, 0.002); end
  def test_outputs_energy_flows_z486; assert_in_epsilon(39.43514774911173, worksheet.outputs_energy_flows_z486, 0.002); end
  def test_outputs_energy_flows_aa486; assert_in_epsilon(42.516707137213885, worksheet.outputs_energy_flows_aa486, 0.002); end
  def test_outputs_energy_flows_ab486; assert_in_epsilon(45.98046359058456, worksheet.outputs_energy_flows_ab486, 0.002); end
  def test_outputs_energy_flows_ac486; assert_in_epsilon(49.58992120490407, worksheet.outputs_energy_flows_ac486, 0.002); end
  def test_outputs_energy_flows_ad486; assert_in_epsilon(53.68655690107344, worksheet.outputs_energy_flows_ad486, 0.002); end
  def test_outputs_energy_flows_d488; assert_equal("Heat network", worksheet.outputs_energy_flows_d488); end
  def test_outputs_energy_flows_f488; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f488); end
  def test_outputs_energy_flows_i488; assert_equal("G.H.01", worksheet.outputs_energy_flows_i488); end
  def test_outputs_energy_flows_j488; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j488); end
  def test_outputs_energy_flows_p488; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p488); end
  def test_outputs_energy_flows_v488; assert_in_epsilon(5.310102447345097, worksheet.outputs_energy_flows_v488, 0.002); end
  def test_outputs_energy_flows_w488; assert_in_epsilon(5.505396788616336, worksheet.outputs_energy_flows_w488, 0.002); end
  def test_outputs_energy_flows_x488; assert_in_epsilon(6.128529950478196, worksheet.outputs_energy_flows_x488, 0.002); end
  def test_outputs_energy_flows_y488; assert_in_epsilon(6.7006754954104295, worksheet.outputs_energy_flows_y488, 0.002); end
  def test_outputs_energy_flows_z488; assert_in_epsilon(7.3071616495312774, worksheet.outputs_energy_flows_z488, 0.002); end
  def test_outputs_energy_flows_aa488; assert_in_epsilon(7.9254569121788325, worksheet.outputs_energy_flows_aa488, 0.002); end
  def test_outputs_energy_flows_ab488; assert_in_epsilon(8.629773882410149, worksheet.outputs_energy_flows_ab488, 0.002); end
  def test_outputs_energy_flows_ac488; assert_in_epsilon(9.36234077545956, worksheet.outputs_energy_flows_ac488, 0.002); end
  def test_outputs_energy_flows_ad488; assert_in_epsilon(10.201281571818622, worksheet.outputs_energy_flows_ad488, 0.002); end
  def test_outputs_energy_flows_d490; assert_equal("Solid", worksheet.outputs_energy_flows_d490); end
  def test_outputs_energy_flows_f490; assert_equal("Buildings", worksheet.outputs_energy_flows_f490); end
  def test_outputs_energy_flows_i490; assert_equal("G.C.01", worksheet.outputs_energy_flows_i490); end
  def test_outputs_energy_flows_j490; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j490); end
  def test_outputs_energy_flows_k490; assert_equal("G.BM.13", worksheet.outputs_energy_flows_k490); end
  def test_outputs_energy_flows_l490; assert_equal("Global Traditional biomass", worksheet.outputs_energy_flows_l490); end
  def test_outputs_energy_flows_n490; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n490); end
  def test_outputs_energy_flows_o490; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o490); end
  def test_outputs_energy_flows_p490; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p490); end
  def test_outputs_energy_flows_q490; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q490); end
  def test_outputs_energy_flows_r490; assert_equal("non-residential", worksheet.outputs_energy_flows_r490); end
  def test_outputs_energy_flows_v490; assert_in_epsilon(36.60270678533933, worksheet.outputs_energy_flows_v490, 0.002); end
  def test_outputs_energy_flows_w490; assert_in_epsilon(35.970738898765866, worksheet.outputs_energy_flows_w490, 0.002); end
  def test_outputs_energy_flows_x490; assert_in_epsilon(34.935165463966314, worksheet.outputs_energy_flows_x490, 0.002); end
  def test_outputs_energy_flows_y490; assert_in_epsilon(33.62724117971745, worksheet.outputs_energy_flows_y490, 0.002); end
  def test_outputs_energy_flows_z490; assert_in_epsilon(32.22055094385691, worksheet.outputs_energy_flows_z490, 0.002); end
  def test_outputs_energy_flows_aa490; assert_in_epsilon(31.089802073568492, worksheet.outputs_energy_flows_aa490, 0.002); end
  def test_outputs_energy_flows_ab490; assert_in_epsilon(29.881016603735198, worksheet.outputs_energy_flows_ab490, 0.002); end
  def test_outputs_energy_flows_ac490; assert_in_epsilon(29.040118301760998, worksheet.outputs_energy_flows_ac490, 0.002); end
  def test_outputs_energy_flows_ad490; assert_in_epsilon(28.09366317056041, worksheet.outputs_energy_flows_ad490, 0.002); end
  def test_outputs_energy_flows_d492; assert_equal("Liquid", worksheet.outputs_energy_flows_d492); end
  def test_outputs_energy_flows_f492; assert_equal("Buildings", worksheet.outputs_energy_flows_f492); end
  def test_outputs_energy_flows_i492; assert_equal("G.C.02", worksheet.outputs_energy_flows_i492); end
  def test_outputs_energy_flows_j492; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j492); end
  def test_outputs_energy_flows_n492; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n492); end
  def test_outputs_energy_flows_o492; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o492); end
  def test_outputs_energy_flows_p492; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p492); end
  def test_outputs_energy_flows_q492; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q492); end
  def test_outputs_energy_flows_r492; assert_equal("non-residential", worksheet.outputs_energy_flows_r492); end
  def test_outputs_energy_flows_v492; assert_in_epsilon(9.286178142155208, worksheet.outputs_energy_flows_v492, 0.002); end
  def test_outputs_energy_flows_w492; assert_in_epsilon(9.87794588368314, worksheet.outputs_energy_flows_w492, 0.002); end
  def test_outputs_energy_flows_x492; assert_in_epsilon(10.371003466573965, worksheet.outputs_energy_flows_x492, 0.002); end
  def test_outputs_energy_flows_y492; assert_in_epsilon(10.813719987135071, worksheet.outputs_energy_flows_y492, 0.002); end
  def test_outputs_energy_flows_z492; assert_in_epsilon(11.183629200400798, worksheet.outputs_energy_flows_z492, 0.002); end
  def test_outputs_energy_flows_aa492; assert_in_epsilon(11.44686765548075, worksheet.outputs_energy_flows_aa492, 0.002); end
  def test_outputs_energy_flows_ab492; assert_in_epsilon(11.641191893257751, worksheet.outputs_energy_flows_ab492, 0.002); end
  def test_outputs_energy_flows_ac492; assert_in_epsilon(11.733901066954418, worksheet.outputs_energy_flows_ac492, 0.002); end
  def test_outputs_energy_flows_ad492; assert_in_epsilon(11.765111784738641, worksheet.outputs_energy_flows_ad492, 0.002); end
  def test_outputs_energy_flows_d494; assert_equal("Gas", worksheet.outputs_energy_flows_d494); end
  def test_outputs_energy_flows_f494; assert_equal("Buildings", worksheet.outputs_energy_flows_f494); end
  def test_outputs_energy_flows_i494; assert_equal("G.C.03", worksheet.outputs_energy_flows_i494); end
  def test_outputs_energy_flows_j494; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j494); end
  def test_outputs_energy_flows_n494; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n494); end
  def test_outputs_energy_flows_o494; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o494); end
  def test_outputs_energy_flows_p494; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p494); end
  def test_outputs_energy_flows_q494; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q494); end
  def test_outputs_energy_flows_r494; assert_equal("non-residential", worksheet.outputs_energy_flows_r494); end
  def test_outputs_energy_flows_v494; assert_in_epsilon(22.00838896692654, worksheet.outputs_energy_flows_v494, 0.002); end
  def test_outputs_energy_flows_w494; assert_in_epsilon(24.045366993399064, worksheet.outputs_energy_flows_w494, 0.002); end
  def test_outputs_energy_flows_x494; assert_in_epsilon(26.030735443259793, worksheet.outputs_energy_flows_x494, 0.002); end
  def test_outputs_energy_flows_y494; assert_in_epsilon(27.942047856679043, worksheet.outputs_energy_flows_y494, 0.002); end
  def test_outputs_energy_flows_z494; assert_in_epsilon(29.715401376821198, worksheet.outputs_energy_flows_z494, 0.002); end
  def test_outputs_energy_flows_aa494; assert_in_epsilon(31.24419302015314, worksheet.outputs_energy_flows_aa494, 0.002); end
  def test_outputs_energy_flows_ab494; assert_in_epsilon(32.616114722107994, worksheet.outputs_energy_flows_ab494, 0.002); end
  def test_outputs_energy_flows_ac494; assert_in_epsilon(33.72545760591442, worksheet.outputs_energy_flows_ac494, 0.002); end
  def test_outputs_energy_flows_ad494; assert_in_epsilon(34.68229052739203, worksheet.outputs_energy_flows_ad494, 0.002); end
  def test_outputs_energy_flows_d496; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d496); end
  def test_outputs_energy_flows_f496; assert_equal("Buildings", worksheet.outputs_energy_flows_f496); end
  def test_outputs_energy_flows_i496; assert_equal("G.E.01", worksheet.outputs_energy_flows_i496); end
  def test_outputs_energy_flows_j496; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j496); end
  def test_outputs_energy_flows_n496; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n496); end
  def test_outputs_energy_flows_o496; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o496); end
  def test_outputs_energy_flows_p496; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p496); end
  def test_outputs_energy_flows_q496; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q496); end
  def test_outputs_energy_flows_r496; assert_equal("non-residential", worksheet.outputs_energy_flows_r496); end
  def test_outputs_energy_flows_v496; assert_in_epsilon(36.79584224618469, worksheet.outputs_energy_flows_v496, 0.002); end
  def test_outputs_energy_flows_w496; assert_in_epsilon(41.362813156250084, worksheet.outputs_energy_flows_w496, 0.002); end
  def test_outputs_energy_flows_x496; assert_in_epsilon(47.25791354275226, worksheet.outputs_energy_flows_x496, 0.002); end
  def test_outputs_energy_flows_y496; assert_in_epsilon(53.461176157064834, worksheet.outputs_energy_flows_y496, 0.002); end
  def test_outputs_energy_flows_z496; assert_in_epsilon(59.86735821154301, worksheet.outputs_energy_flows_z496, 0.002); end
  def test_outputs_energy_flows_aa496; assert_in_epsilon(66.29141296433967, worksheet.outputs_energy_flows_aa496, 0.002); end
  def test_outputs_energy_flows_ab496; assert_in_epsilon(72.81608792777982, worksheet.outputs_energy_flows_ab496, 0.002); end
  def test_outputs_energy_flows_ac496; assert_in_epsilon(79.22021132548555, worksheet.outputs_energy_flows_ac496, 0.002); end
  def test_outputs_energy_flows_ad496; assert_in_epsilon(85.61074871536206, worksheet.outputs_energy_flows_ad496, 0.002); end
  def test_outputs_energy_flows_d498; assert_equal("Heat network", worksheet.outputs_energy_flows_d498); end
  def test_outputs_energy_flows_f498; assert_equal("Buildings", worksheet.outputs_energy_flows_f498); end
  def test_outputs_energy_flows_i498; assert_equal("G.H.01", worksheet.outputs_energy_flows_i498); end
  def test_outputs_energy_flows_j498; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j498); end
  def test_outputs_energy_flows_n498; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n498); end
  def test_outputs_energy_flows_o498; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o498); end
  def test_outputs_energy_flows_p498; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p498); end
  def test_outputs_energy_flows_q498; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q498); end
  def test_outputs_energy_flows_r498; assert_equal("non-residential", worksheet.outputs_energy_flows_r498); end
  def test_outputs_energy_flows_v498; assert_in_epsilon(5.601306145677334, worksheet.outputs_energy_flows_v498, 0.002); end
  def test_outputs_energy_flows_w498; assert_in_epsilon(5.890769318374725, worksheet.outputs_energy_flows_w498, 0.002); end
  def test_outputs_energy_flows_x498; assert_in_epsilon(6.097770001901651, worksheet.outputs_energy_flows_x498, 0.002); end
  def test_outputs_energy_flows_y498; assert_in_epsilon(6.239372304294689, worksheet.outputs_energy_flows_y498, 0.002); end
  def test_outputs_energy_flows_z498; assert_in_epsilon(6.302886505355551, worksheet.outputs_energy_flows_z498, 0.002); end
  def test_outputs_energy_flows_aa498; assert_in_epsilon(6.267391544803143, worksheet.outputs_energy_flows_aa498, 0.002); end
  def test_outputs_energy_flows_ab498; assert_in_epsilon(6.148082023926924, worksheet.outputs_energy_flows_ab498, 0.002); end
  def test_outputs_energy_flows_ac498; assert_in_epsilon(5.9244840002756245, worksheet.outputs_energy_flows_ac498, 0.002); end
  def test_outputs_energy_flows_ad498; assert_in_epsilon(5.618326571803069, worksheet.outputs_energy_flows_ad498, 0.002); end
  def test_outputs_energy_flows_d500; assert_equal("Solar", worksheet.outputs_energy_flows_d500); end
  def test_outputs_energy_flows_f500; assert_equal("Buildings", worksheet.outputs_energy_flows_f500); end
  def test_outputs_energy_flows_i500; assert_equal("G.R.01", worksheet.outputs_energy_flows_i500); end
  def test_outputs_energy_flows_j500; assert_equal("Global Solar", worksheet.outputs_energy_flows_j500); end
  def test_outputs_energy_flows_k500; assert_equal("G.R.07", worksheet.outputs_energy_flows_k500); end
  def test_outputs_energy_flows_l500; assert_equal("Global Environmental heat", worksheet.outputs_energy_flows_l500); end
  def test_outputs_energy_flows_n500; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n500); end
  def test_outputs_energy_flows_o500; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o500); end
  def test_outputs_energy_flows_p500; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p500); end
  def test_outputs_energy_flows_q500; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q500); end
  def test_outputs_energy_flows_r500; assert_equal("non-residential", worksheet.outputs_energy_flows_r500); end
  def test_outputs_energy_flows_v500; assert_in_epsilon(5.993633125060281, worksheet.outputs_energy_flows_v500, 0.002); end
  def test_outputs_energy_flows_w500; assert_in_epsilon(6.804473006868597, worksheet.outputs_energy_flows_w500, 0.002); end
  def test_outputs_energy_flows_x500; assert_in_epsilon(7.8130554655741165, worksheet.outputs_energy_flows_x500, 0.002); end
  def test_outputs_energy_flows_y500; assert_in_epsilon(8.881641199998025, worksheet.outputs_energy_flows_y500, 0.002); end
  def test_outputs_energy_flows_z500; assert_in_epsilon(9.98747034846003, worksheet.outputs_energy_flows_z500, 0.002); end
  def test_outputs_energy_flows_aa500; assert_in_epsilon(11.091989439837063, worksheet.outputs_energy_flows_aa500, 0.002); end
  def test_outputs_energy_flows_ab500; assert_in_epsilon(12.207607554155405, worksheet.outputs_energy_flows_ab500, 0.002); end
  def test_outputs_energy_flows_ac500; assert_in_epsilon(13.288224480404306, worksheet.outputs_energy_flows_ac500, 0.002); end
  def test_outputs_energy_flows_ad500; assert_in_epsilon(14.349349675295745, worksheet.outputs_energy_flows_ad500, 0.002); end
  def test_outputs_energy_flows_d502; assert_equal("Solid", worksheet.outputs_energy_flows_d502); end
  def test_outputs_energy_flows_f502; assert_equal("Other", worksheet.outputs_energy_flows_f502); end
  def test_outputs_energy_flows_i502; assert_equal("G.C.01", worksheet.outputs_energy_flows_i502); end
  def test_outputs_energy_flows_j502; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j502); end
  def test_outputs_energy_flows_k502; assert_equal("G.BM.09", worksheet.outputs_energy_flows_k502); end
  def test_outputs_energy_flows_l502; assert_equal("Global Dry biomass and waste", worksheet.outputs_energy_flows_l502); end
  def test_outputs_energy_flows_n502; assert_equal("Arable.food", worksheet.outputs_energy_flows_n502); end
  def test_outputs_energy_flows_o502; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o502); end
  def test_outputs_energy_flows_v502; assert_in_delta(0.7356901397380771, worksheet.outputs_energy_flows_v502, 0.002); end
  def test_outputs_energy_flows_w502; assert_in_delta(0.7310455078584552, worksheet.outputs_energy_flows_w502, 0.002); end
  def test_outputs_energy_flows_x502; assert_in_delta(0.743695469381198, worksheet.outputs_energy_flows_x502, 0.002); end
  def test_outputs_energy_flows_y502; assert_in_delta(0.7532925757543902, worksheet.outputs_energy_flows_y502, 0.002); end
  def test_outputs_energy_flows_z502; assert_in_delta(0.7617790646573892, worksheet.outputs_energy_flows_z502, 0.002); end
  def test_outputs_energy_flows_aa502; assert_in_delta(0.7708373352810188, worksheet.outputs_energy_flows_aa502, 0.002); end
  def test_outputs_energy_flows_ab502; assert_in_delta(0.7803772835274462, worksheet.outputs_energy_flows_ab502, 0.002); end
  def test_outputs_energy_flows_ac502; assert_in_delta(0.78731084612458, worksheet.outputs_energy_flows_ac502, 0.002); end
  def test_outputs_energy_flows_ad502; assert_in_delta(0.7954917753501951, worksheet.outputs_energy_flows_ad502, 0.002); end
  def test_outputs_energy_flows_d504; assert_equal("Liquid", worksheet.outputs_energy_flows_d504); end
  def test_outputs_energy_flows_f504; assert_equal("Other", worksheet.outputs_energy_flows_f504); end
  def test_outputs_energy_flows_i504; assert_equal("G.C.02", worksheet.outputs_energy_flows_i504); end
  def test_outputs_energy_flows_j504; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j504); end
  def test_outputs_energy_flows_n504; assert_equal("Arable.food", worksheet.outputs_energy_flows_n504); end
  def test_outputs_energy_flows_o504; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o504); end
  def test_outputs_energy_flows_v504; assert_in_epsilon(3.654094233962215, worksheet.outputs_energy_flows_v504, 0.002); end
  def test_outputs_energy_flows_w504; assert_in_epsilon(3.631024844210375, worksheet.outputs_energy_flows_w504, 0.002); end
  def test_outputs_energy_flows_x504; assert_in_epsilon(3.693855850041927, worksheet.outputs_energy_flows_x504, 0.002); end
  def test_outputs_energy_flows_y504; assert_in_epsilon(3.7415236508819505, worksheet.outputs_energy_flows_y504, 0.002); end
  def test_outputs_energy_flows_z504; assert_in_epsilon(3.7836751335402248, worksheet.outputs_energy_flows_z504, 0.002); end
  def test_outputs_energy_flows_aa504; assert_in_epsilon(3.828666594846555, worksheet.outputs_energy_flows_aa504, 0.002); end
  def test_outputs_energy_flows_ab504; assert_in_epsilon(3.876050497384625, worksheet.outputs_energy_flows_ab504, 0.002); end
  def test_outputs_energy_flows_ac504; assert_in_epsilon(3.910488761184141, worksheet.outputs_energy_flows_ac504, 0.002); end
  def test_outputs_energy_flows_ad504; assert_in_epsilon(3.951122561607803, worksheet.outputs_energy_flows_ad504, 0.002); end
  def test_outputs_energy_flows_d506; assert_equal("Gas", worksheet.outputs_energy_flows_d506); end
  def test_outputs_energy_flows_f506; assert_equal("Other", worksheet.outputs_energy_flows_f506); end
  def test_outputs_energy_flows_i506; assert_equal("G.C.03", worksheet.outputs_energy_flows_i506); end
  def test_outputs_energy_flows_j506; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j506); end
  def test_outputs_energy_flows_n506; assert_equal("Arable.food", worksheet.outputs_energy_flows_n506); end
  def test_outputs_energy_flows_o506; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o506); end
  def test_outputs_energy_flows_v506; assert_in_delta(0.4359182661605924, worksheet.outputs_energy_flows_v506, 0.002); end
  def test_outputs_energy_flows_w506; assert_in_delta(0.4331661837735159, worksheet.outputs_energy_flows_w506, 0.002); end
  def test_outputs_energy_flows_x506; assert_in_delta(0.4406616618234943, worksheet.outputs_energy_flows_x506, 0.002); end
  def test_outputs_energy_flows_y506; assert_in_delta(0.44634823249283906, worksheet.outputs_energy_flows_y506, 0.002); end
  def test_outputs_energy_flows_z506; assert_in_delta(0.451376729313122, worksheet.outputs_energy_flows_z506, 0.002); end
  def test_outputs_energy_flows_aa506; assert_in_delta(0.45674402379129986, worksheet.outputs_energy_flows_aa506, 0.002); end
  def test_outputs_energy_flows_ab506; assert_in_delta(0.4623967265722899, worksheet.outputs_energy_flows_ab506, 0.002); end
  def test_outputs_energy_flows_ac506; assert_in_delta(0.46650506841677153, worksheet.outputs_energy_flows_ac506, 0.002); end
  def test_outputs_energy_flows_ad506; assert_in_delta(0.4713525120496063, worksheet.outputs_energy_flows_ad506, 0.002); end
  def test_outputs_energy_flows_d508; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d508); end
  def test_outputs_energy_flows_f508; assert_equal("Other", worksheet.outputs_energy_flows_f508); end
  def test_outputs_energy_flows_i508; assert_equal("G.E.01", worksheet.outputs_energy_flows_i508); end
  def test_outputs_energy_flows_j508; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j508); end
  def test_outputs_energy_flows_n508; assert_equal("Arable.food", worksheet.outputs_energy_flows_n508); end
  def test_outputs_energy_flows_o508; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o508); end
  def test_outputs_energy_flows_v508; assert_in_epsilon(2.46999533333115, worksheet.outputs_energy_flows_v508, 0.002); end
  def test_outputs_energy_flows_w508; assert_in_epsilon(2.4544015140748643, worksheet.outputs_energy_flows_w508, 0.002); end
  def test_outputs_energy_flows_x508; assert_in_epsilon(2.496872310188997, worksheet.outputs_energy_flows_x508, 0.002); end
  def test_outputs_energy_flows_y508; assert_in_epsilon(2.5290934949988233, worksheet.outputs_energy_flows_y508, 0.002); end
  def test_outputs_energy_flows_z508; assert_in_epsilon(2.5575859089303687, worksheet.outputs_energy_flows_z508, 0.002); end
  def test_outputs_energy_flows_aa508; assert_in_epsilon(2.5879980144621646, worksheet.outputs_energy_flows_aa508, 0.002); end
  def test_outputs_energy_flows_ab508; assert_in_epsilon(2.6200272974117573, worksheet.outputs_energy_flows_ab508, 0.002); end
  def test_outputs_energy_flows_ac508; assert_in_epsilon(2.643305939238297, worksheet.outputs_energy_flows_ac508, 0.002); end
  def test_outputs_energy_flows_ad508; assert_in_epsilon(2.670772471570477, worksheet.outputs_energy_flows_ad508, 0.002); end
  def test_outputs_energy_flows_d510; assert_equal("Heat network", worksheet.outputs_energy_flows_d510); end
  def test_outputs_energy_flows_f510; assert_equal("Other", worksheet.outputs_energy_flows_f510); end
  def test_outputs_energy_flows_i510; assert_equal("G.H.01", worksheet.outputs_energy_flows_i510); end
  def test_outputs_energy_flows_j510; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j510); end
  def test_outputs_energy_flows_n510; assert_equal("Arable.food", worksheet.outputs_energy_flows_n510); end
  def test_outputs_energy_flows_o510; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o510); end
  def test_outputs_energy_flows_v510; assert_in_delta(0.4590256814155236, worksheet.outputs_energy_flows_v510, 0.002); end
  def test_outputs_energy_flows_w510; assert_in_delta(0.4561277150050634, worksheet.outputs_energy_flows_w510, 0.002); end
  def test_outputs_energy_flows_x510; assert_in_delta(0.464020517822734, worksheet.outputs_energy_flows_x510, 0.002); end
  def test_outputs_energy_flows_y510; assert_in_delta(0.4700085256192504, worksheet.outputs_energy_flows_y510, 0.002); end
  def test_outputs_energy_flows_z510; assert_in_delta(0.47530357599590933, worksheet.outputs_energy_flows_z510, 0.002); end
  def test_outputs_energy_flows_aa510; assert_in_delta(0.4809553832186324, worksheet.outputs_energy_flows_aa510, 0.002); end
  def test_outputs_energy_flows_ab510; assert_in_delta(0.48690772783758324, worksheet.outputs_energy_flows_ab510, 0.002); end
  def test_outputs_energy_flows_ac510; assert_in_delta(0.49123384711508183, worksheet.outputs_energy_flows_ac510, 0.002); end
  def test_outputs_energy_flows_ad510; assert_in_delta(0.4963382469290268, worksheet.outputs_energy_flows_ad510, 0.002); end
  def test_outputs_energy_flows_d512; assert_equal("Solid", worksheet.outputs_energy_flows_d512); end
  def test_outputs_energy_flows_f512; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f512); end
  def test_outputs_energy_flows_i512; assert_equal("G.C.01", worksheet.outputs_energy_flows_i512); end
  def test_outputs_energy_flows_j512; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j512); end
  def test_outputs_energy_flows_k512; assert_equal("G.BM.09", worksheet.outputs_energy_flows_k512); end
  def test_outputs_energy_flows_l512; assert_equal("Global Dry biomass and waste", worksheet.outputs_energy_flows_l512); end
  def test_outputs_energy_flows_q512; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_q512); end
  def test_outputs_energy_flows_v512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v512||0), 0.002); end
  def test_outputs_energy_flows_w512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w512||0), 0.002); end
  def test_outputs_energy_flows_x512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x512||0), 0.002); end
  def test_outputs_energy_flows_y512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y512||0), 0.002); end
  def test_outputs_energy_flows_z512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z512||0), 0.002); end
  def test_outputs_energy_flows_aa512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa512||0), 0.002); end
  def test_outputs_energy_flows_ab512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab512||0), 0.002); end
  def test_outputs_energy_flows_ac512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac512||0), 0.002); end
  def test_outputs_energy_flows_ad512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad512||0), 0.002); end
  def test_outputs_energy_flows_d514; assert_equal("Liquid", worksheet.outputs_energy_flows_d514); end
  def test_outputs_energy_flows_f514; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f514); end
  def test_outputs_energy_flows_i514; assert_equal("G.C.02", worksheet.outputs_energy_flows_i514); end
  def test_outputs_energy_flows_j514; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j514); end
  def test_outputs_energy_flows_q514; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_q514); end
  def test_outputs_energy_flows_v514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v514||0), 0.002); end
  def test_outputs_energy_flows_w514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w514||0), 0.002); end
  def test_outputs_energy_flows_x514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x514||0), 0.002); end
  def test_outputs_energy_flows_y514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y514||0), 0.002); end
  def test_outputs_energy_flows_z514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z514||0), 0.002); end
  def test_outputs_energy_flows_aa514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa514||0), 0.002); end
  def test_outputs_energy_flows_ab514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab514||0), 0.002); end
  def test_outputs_energy_flows_ac514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac514||0), 0.002); end
  def test_outputs_energy_flows_ad514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad514||0), 0.002); end
  def test_outputs_energy_flows_d516; assert_equal("Gas", worksheet.outputs_energy_flows_d516); end
  def test_outputs_energy_flows_f516; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f516); end
  def test_outputs_energy_flows_i516; assert_equal("G.C.03", worksheet.outputs_energy_flows_i516); end
  def test_outputs_energy_flows_j516; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j516); end
  def test_outputs_energy_flows_q516; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_q516); end
  def test_outputs_energy_flows_v516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v516||0), 0.002); end
  def test_outputs_energy_flows_w516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w516||0), 0.002); end
  def test_outputs_energy_flows_x516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x516||0), 0.002); end
  def test_outputs_energy_flows_y516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y516||0), 0.002); end
  def test_outputs_energy_flows_z516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z516||0), 0.002); end
  def test_outputs_energy_flows_aa516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa516||0), 0.002); end
  def test_outputs_energy_flows_ab516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab516||0), 0.002); end
  def test_outputs_energy_flows_ac516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac516||0), 0.002); end
  def test_outputs_energy_flows_ad516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad516||0), 0.002); end
  def test_outputs_energy_flows_d518; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d518); end
  def test_outputs_energy_flows_f518; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f518); end
  def test_outputs_energy_flows_i518; assert_equal("G.E.01", worksheet.outputs_energy_flows_i518); end
  def test_outputs_energy_flows_j518; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j518); end
  def test_outputs_energy_flows_q518; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_q518); end
  def test_outputs_energy_flows_v518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v518||0), 0.002); end
  def test_outputs_energy_flows_w518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w518||0), 0.002); end
  def test_outputs_energy_flows_x518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x518||0), 0.002); end
  def test_outputs_energy_flows_y518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y518||0), 0.002); end
  def test_outputs_energy_flows_z518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z518||0), 0.002); end
  def test_outputs_energy_flows_aa518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa518||0), 0.002); end
  def test_outputs_energy_flows_ab518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab518||0), 0.002); end
  def test_outputs_energy_flows_ac518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac518||0), 0.002); end
  def test_outputs_energy_flows_ad518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad518||0), 0.002); end
  def test_outputs_energy_flows_d520; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d520); end
  def test_outputs_energy_flows_f520; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f520); end
  def test_outputs_energy_flows_i520; assert_equal("G.L.02", worksheet.outputs_energy_flows_i520); end
  def test_outputs_energy_flows_j520; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_j520); end
  def test_outputs_energy_flows_o520; assert_equal("electricity.network", worksheet.outputs_energy_flows_o520); end
  def test_outputs_energy_flows_p520; assert_equal("Global Electricity distribution network", worksheet.outputs_energy_flows_p520); end
  def test_outputs_energy_flows_v520; assert_in_epsilon(6.091136511565761, worksheet.outputs_energy_flows_v520, 0.002); end
  def test_outputs_energy_flows_w520; assert_in_epsilon(6.654184620605979, worksheet.outputs_energy_flows_w520, 0.002); end
  def test_outputs_energy_flows_x520; assert_in_epsilon(7.503341876002891, worksheet.outputs_energy_flows_x520, 0.002); end
  def test_outputs_energy_flows_y520; assert_in_epsilon(8.35608678181321, worksheet.outputs_energy_flows_y520, 0.002); end
  def test_outputs_energy_flows_z520; assert_in_epsilon(9.234624092181434, worksheet.outputs_energy_flows_z520, 0.002); end
  def test_outputs_energy_flows_aa520; assert_in_epsilon(10.115036226757832, worksheet.outputs_energy_flows_aa520, 0.002); end
  def test_outputs_energy_flows_ab520; assert_in_epsilon(11.03699562459398, worksheet.outputs_energy_flows_ab520, 0.002); end
  def test_outputs_energy_flows_ac520; assert_in_epsilon(11.957806271994771, worksheet.outputs_energy_flows_ac520, 0.002); end
  def test_outputs_energy_flows_ad520; assert_in_epsilon(12.921944982844655, worksheet.outputs_energy_flows_ad520, 0.002); end
  def test_outputs_summary_graphs_c48; assert_equal("WARNING: Cumulative CO2 emissions by 2100 exceed 3010 GtCO2, the amount associated with a 50% chance of keeping global mean temperature increase below 2C by 2100.  Reduce emissions by increasing effort across more levers.", worksheet.outputs_summary_graphs_c48); end
  def test_outputs_summary_graphs_c57; assert_equal("No warning on bio crop oversupply ", worksheet.outputs_summary_graphs_c57); end
  def test_outputs_summary_graphs_c52; assert_equal("No warning on electricity oversupply", worksheet.outputs_summary_graphs_c52); end
  def test_outputs_summary_graphs_c60; assert_equal("No warning on CO2 concentrations being below pre-industrial levels", worksheet.outputs_summary_graphs_c60); end
  def test_outputs_summary_graphs_c53; assert_equal("No warning on coal consumption", worksheet.outputs_summary_graphs_c53); end
  def test_outputs_summary_graphs_c61; assert_equal("No warning on crop yield choice and consistency with midpoint temperature rise", worksheet.outputs_summary_graphs_c61); end
  def test_outputs_summary_graphs_c59; assert_equal("No warning on forest area change", worksheet.outputs_summary_graphs_c59); end
  def test_outputs_summary_graphs_c51; assert_equal("No warning on energy security", worksheet.outputs_summary_graphs_c51); end
  def test_outputs_summary_graphs_c55; assert_equal("No warning on gas consumption", worksheet.outputs_summary_graphs_c55); end
  def test_outputs_summary_graphs_c49; assert_equal("No warning on GGR", worksheet.outputs_summary_graphs_c49); end
  def test_outputs_summary_graphs_c58; assert_equal("No warning on land use", worksheet.outputs_summary_graphs_c58); end
  def test_outputs_summary_graphs_c50; assert_equal("No warning on level 4s", worksheet.outputs_summary_graphs_c50); end
  def test_outputs_summary_graphs_c54; assert_equal("No warning on oil consumption", worksheet.outputs_summary_graphs_c54); end
  def test_outputs_summary_graphs_c56; assert_equal("No warning on uranium consumption", worksheet.outputs_summary_graphs_c56); end
end
